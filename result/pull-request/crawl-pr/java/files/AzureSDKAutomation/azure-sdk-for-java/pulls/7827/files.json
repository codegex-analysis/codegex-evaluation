[
  {
    "sha": "cf8633e0237b758b09536ab413c2311f29a5c737",
    "filename": "eng/versioning/version_client.txt",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/eng/versioning/version_client.txt",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/eng/versioning/version_client.txt",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/eng/versioning/version_client.txt?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -210,6 +210,7 @@ com.azure.resourcemanager:azure-resourcemanager-redisenterprise;1.0.0-beta.2;1.0\n com.azure.resourcemanager:azure-resourcemanager-hybridkubernetes;1.0.0-beta.1;1.0.0-beta.2\n com.azure.resourcemanager:azure-resourcemanager-iothub;1.0.0-beta.1;1.0.0-beta.2\n com.azure.resourcemanager:azure-resourcemanager-datadog;1.0.0-beta.1;1.0.0-beta.2\n+com.azure.resourcemanager:azure-resourcemanager-sql-generated;1.0.0-beta.1;1.0.0-beta.1\n \n # Unreleased dependencies: Copy the entry from above, prepend \"unreleased_\" and remove the current\n # version. Unreleased dependencies are only valid for dependency versions."
  },
  {
    "sha": "73d7878e5de2bf9841027362a2b1151a429963c2",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/pom.xml",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/pom.xml",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/pom.xml?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -593,8 +593,8 @@\n         <module>sdk/core</module>\n         <module>sdk/cosmos</module>\n         <module>sdk/costmanagement</module>\n-        <module>sdk/deviceupdate</module>\n         <module>sdk/datadog</module>\n+        <module>sdk/deviceupdate</module>\n         <module>sdk/digitaltwins</module>\n         <module>sdk/eventgrid</module>\n         <module>sdk/eventhubs</module>\n@@ -624,6 +624,7 @@\n         <module>sdk/search</module>\n         <module>sdk/servicebus</module>\n         <module>sdk/spring</module>\n+        <module>sdk/sql</module>\n         <module>sdk/sqlvirtualmachine</module>\n         <module>sdk/storage</module>\n         <module>sdk/storagecache</module>"
  },
  {
    "sha": "f048ad91892d90540c2155bd0d13cc97359ba4fd",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/CHANGELOG.md",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/CHANGELOG.md",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/CHANGELOG.md?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,5 @@\n+# Release History\n+\n+## 1.0.0-beta.1 (2021-03-16)\n+\n+- Azure Resource Manager Sql client library for Java. This package contains Microsoft Azure SDK for Sql Management SDK. The Azure SQL Database management API provides a RESTful set of web services that interact with Azure SQL Database services to manage your databases. The API enables you to create, retrieve, update, and delete databases. Package tag package-composite-v4. For documentation on how to use this package, please see [Azure Management Libraries for Java](https://aka.ms/azsdk/java/mgmt)."
  },
  {
    "sha": "2be94d1ed1e016a7d6b3c3b1128aa1331f555436",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/README.md",
    "status": "added",
    "additions": 99,
    "deletions": 0,
    "changes": 99,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/README.md",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/README.md",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/README.md?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,99 @@\n+# Azure Resource Manager Sql client library for Java\n+\n+Azure Resource Manager Sql client library for Java.\n+\n+This package contains Microsoft Azure SDK for Sql Management SDK. The Azure SQL Database management API provides a RESTful set of web services that interact with Azure SQL Database services to manage your databases. The API enables you to create, retrieve, update, and delete databases. Package tag package-composite-v4. For documentation on how to use this package, please see [Azure Management Libraries for Java](https://aka.ms/azsdk/java/mgmt).\n+\n+## We'd love to hear your feedback\n+\n+We're always working on improving our products and the way we communicate with our users. So we'd love to learn what's working and how we can do better.\n+\n+If you haven't already, please take a few minutes to [complete this short survey][survey] we have put together.\n+\n+Thank you in advance for your collaboration. We really appreciate your time!\n+\n+## Documentation\n+\n+Various documentation is available to help you get started\n+\n+- [API reference documentation][docs]\n+\n+## Getting started\n+\n+### Prerequisites\n+\n+- [Java Development Kit (JDK)][jdk] with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+\n+### Adding the package to your product\n+\n+[//]: # ({x-version-update-start;com.azure.resourcemanager:azure-resourcemanager-sql-generated;current})\n+```xml\n+<dependency>\n+    <groupId>com.azure.resourcemanager</groupId>\n+    <artifactId>azure-resourcemanager-sql-generated</artifactId>\n+    <version>1.0.0-beta.1</version>\n+</dependency>\n+```\n+[//]: # ({x-version-update-end})\n+\n+### Include the recommended packages\n+\n+Azure Management Libraries require a `TokenCredential` implementation for authentication and an `HttpClient` implementation for HTTP client.\n+\n+[Azure Identity][azure_identity] package and [Azure Core Netty HTTP][azure_core_http_netty] package provide the default implementation.\n+\n+### Authentication\n+\n+By default, Azure Active Directory token authentication depends on correct configure of following environment variables.\n+\n+- `AZURE_CLIENT_ID` for Azure client ID.\n+- `AZURE_TENANT_ID` for Azure tenant ID.\n+- `AZURE_CLIENT_SECRET` or `AZURE_CLIENT_CERTIFICATE_PATH` for client secret or client certificate.\n+\n+In addition, Azure subscription ID can be configured via environment variable `AZURE_SUBSCRIPTION_ID`.\n+\n+With above configuration, `azure` client can be authenticated by following code:\n+\n+```java\n+AzureProfile profile = new AzureProfile(AzureEnvironment.AZURE);\n+TokenCredential credential = new DefaultAzureCredentialBuilder()\n+    .authorityHost(profile.getEnvironment().getActiveDirectoryEndpoint())\n+    .build();\n+SqlManager manager = SqlManager\n+    .authenticate(credential, profile);\n+```\n+\n+The sample code assumes global Azure. Please change `AzureEnvironment.AZURE` variable if otherwise.\n+\n+See [Authentication][authenticate] for more options.\n+\n+## Key concepts\n+\n+See [API design][design] for general introduction on design and key concepts on Azure Management Libraries.\n+\n+## Examples\n+\n+## Troubleshooting\n+\n+## Next steps\n+\n+## Contributing\n+\n+For details on contributing to this repository, see the [contributing guide](https://github.com/Azure/azure-sdk-for-java/blob/master/CONTRIBUTING.md).\n+\n+1. Fork it\n+1. Create your feature branch (`git checkout -b my-new-feature`)\n+1. Commit your changes (`git commit -am 'Add some feature'`)\n+1. Push to the branch (`git push origin my-new-feature`)\n+1. Create new Pull Request\n+\n+<!-- LINKS -->\n+[survey]: https://microsoft.qualtrics.com/jfe/form/SV_ehN0lIk2FKEBkwd?Q_CHL=DOCS\n+[docs]: https://azure.github.io/azure-sdk-for-java/\n+[jdk]: https://docs.microsoft.com/java/azure/jdk/\n+[azure_subscription]: https://azure.microsoft.com/free/\n+[azure_identity]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/identity/azure-identity\n+[azure_core_http_netty]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/core/azure-core-http-netty\n+[authenticate]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/resourcemanager/docs/AUTH.md\n+[design]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/resourcemanager/docs/DESIGN.md"
  },
  {
    "sha": "e6735c898472ccbbfcbbea5cd9f113e6b0f5df9b",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/pom.xml",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/pom.xml",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/pom.xml",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/pom.xml?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,67 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>com.azure</groupId>\n+        <artifactId>azure-client-sdk-parent</artifactId>\n+        <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->\n+        <relativePath>../../parents/azure-client-sdk-parent</relativePath>\n+    </parent>\n+\n+    <groupId>com.azure.resourcemanager</groupId>\n+    <artifactId>azure-resourcemanager-sql-generated</artifactId>\n+    <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure.resourcemanager:azure-resourcemanager-sql-generated;current} -->\n+    <packaging>jar</packaging>\n+\n+    <name>Microsoft Azure SDK for Sql Management</name>\n+    <description>This package contains Microsoft Azure SDK for Sql Management SDK. For documentation on how to use this package, please see https://aka.ms/azsdk/java/mgmt. The Azure SQL Database management API provides a RESTful set of web services that interact with Azure SQL Database services to manage your databases. The API enables you to create, retrieve, update, and delete databases. Package tag package-composite-v4.</description>\n+    <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+    <licenses>\n+        <license>\n+            <name>The MIT License (MIT)</name>\n+            <url>http://opensource.org/licenses/MIT</url>\n+            <distribution>repo</distribution>\n+        </license>\n+    </licenses>\n+\n+    <scm>\n+        <url>https://github.com/Azure/azure-sdk-for-java</url>\n+        <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>\n+        <developerConnection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</developerConnection>\n+        <tag>HEAD</tag>\n+    </scm>\n+    <developers>\n+        <developer>\n+            <id>microsoft</id>\n+            <name>Microsoft</name>\n+        </developer>\n+    </developers>\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <legal><![CDATA[[INFO] Any downloads listed may be third party software.  Microsoft grants you no rights for third party software.]]></legal>\n+    </properties>\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.azure</groupId>\n+            <artifactId>azure-core</artifactId>\n+            <version>1.14.0</version> <!-- {x-version-update;com.azure:azure-core;dependency} -->\n+        </dependency>\n+        <dependency>\n+            <groupId>com.azure</groupId>\n+            <artifactId>azure-core-management</artifactId>\n+            <version>1.2.0</version> <!-- {x-version-update;com.azure:azure-core-management;dependency} -->\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <version>0.8.5</version> <!-- {x-version-update;org.jacoco:jacoco-maven-plugin;external_dependency} -->\n+                <configuration>\n+                    <skip>true</skip>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
  },
  {
    "sha": "d6d42d71e3b48ac670f75a4e4c37dff3cc9e840e",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/SqlManager.java",
    "status": "added",
    "additions": 1421,
    "deletions": 0,
    "changes": 1421,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/SqlManager.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/SqlManager.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/SqlManager.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,1421 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated;\n+\n+import com.azure.core.credential.TokenCredential;\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.AddDatePolicy;\n+import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpLoggingPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.HttpPolicyProviders;\n+import com.azure.core.http.policy.RequestIdPolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.management.profile.AzureProfile;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.sql.generated.fluent.SqlManagementClient;\n+import com.azure.resourcemanager.sql.generated.implementation.BackupShortTermRetentionPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.CapabilitiesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DataMaskingPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DataMaskingRulesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DatabaseAutomaticTuningsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DatabaseBlobAuditingPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DatabaseOperationsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DatabaseThreatDetectionPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DatabaseUsagesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DatabaseVulnerabilityAssessmentRuleBaselinesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DatabaseVulnerabilityAssessmentScansImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DatabaseVulnerabilityAssessmentsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.DatabasesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolActivitiesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolDatabaseActivitiesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolOperationsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.EncryptionProtectorsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ExtendedDatabaseBlobAuditingPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ExtendedServerBlobAuditingPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.FailoverGroupsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.FirewallRulesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.GeoBackupPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ImportExportsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.InstanceFailoverGroupsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.InstancePoolsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.JobAgentsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.JobCredentialsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.JobExecutionsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.JobStepExecutionsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.JobStepsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.JobTargetExecutionsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.JobTargetGroupsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.JobVersionsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.JobsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.LongTermRetentionBackupsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.LongTermRetentionManagedInstanceBackupsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.LongTermRetentionPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedBackupShortTermRetentionPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseRestoreDetailsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseSecurityAlertPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseSensitivityLabelsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseVulnerabilityAssessmentScansImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseVulnerabilityAssessmentsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabasesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceAdministratorsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceAzureADOnlyAuthenticationsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceEncryptionProtectorsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceKeysImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceLongTermRetentionPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceOperationsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceTdeCertificatesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceVulnerabilityAssessmentsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedInstancesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ManagedServerSecurityAlertPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.OperationsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.PrivateEndpointConnectionsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.PrivateLinkResourcesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.RecommendedElasticPoolsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.RecoverableDatabasesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.RecoverableManagedDatabasesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ReplicationLinksImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.RestorableDroppedDatabasesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.RestorableDroppedManagedDatabasesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.RestorePointsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.SensitivityLabelsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerAutomaticTuningsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerAzureADAdministratorsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerAzureADOnlyAuthenticationsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerBlobAuditingPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerCommunicationLinksImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerConnectionPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerDevOpsAuditSettingsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerDnsAliasesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerKeysImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerSecurityAlertPoliciesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerTrustGroupsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerUsagesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServerVulnerabilityAssessmentsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServersImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServiceObjectivesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.ServiceTierAdvisorsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.SqlManagementClientBuilder;\n+import com.azure.resourcemanager.sql.generated.implementation.SubscriptionUsagesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.SyncAgentsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.SyncGroupsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.SyncMembersImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.TdeCertificatesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.TransparentDataEncryptionActivitiesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.TransparentDataEncryptionsImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.UsagesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.VirtualClustersImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.VirtualNetworkRulesImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.WorkloadClassifiersImpl;\n+import com.azure.resourcemanager.sql.generated.implementation.WorkloadGroupsImpl;\n+import com.azure.resourcemanager.sql.generated.models.BackupShortTermRetentionPolicies;\n+import com.azure.resourcemanager.sql.generated.models.Capabilities;\n+import com.azure.resourcemanager.sql.generated.models.DataMaskingPolicies;\n+import com.azure.resourcemanager.sql.generated.models.DataMaskingRules;\n+import com.azure.resourcemanager.sql.generated.models.DatabaseAutomaticTunings;\n+import com.azure.resourcemanager.sql.generated.models.DatabaseBlobAuditingPolicies;\n+import com.azure.resourcemanager.sql.generated.models.DatabaseOperations;\n+import com.azure.resourcemanager.sql.generated.models.DatabaseThreatDetectionPolicies;\n+import com.azure.resourcemanager.sql.generated.models.DatabaseUsages;\n+import com.azure.resourcemanager.sql.generated.models.DatabaseVulnerabilityAssessmentRuleBaselines;\n+import com.azure.resourcemanager.sql.generated.models.DatabaseVulnerabilityAssessmentScans;\n+import com.azure.resourcemanager.sql.generated.models.DatabaseVulnerabilityAssessments;\n+import com.azure.resourcemanager.sql.generated.models.Databases;\n+import com.azure.resourcemanager.sql.generated.models.ElasticPoolActivities;\n+import com.azure.resourcemanager.sql.generated.models.ElasticPoolDatabaseActivities;\n+import com.azure.resourcemanager.sql.generated.models.ElasticPoolOperations;\n+import com.azure.resourcemanager.sql.generated.models.ElasticPools;\n+import com.azure.resourcemanager.sql.generated.models.EncryptionProtectors;\n+import com.azure.resourcemanager.sql.generated.models.ExtendedDatabaseBlobAuditingPolicies;\n+import com.azure.resourcemanager.sql.generated.models.ExtendedServerBlobAuditingPolicies;\n+import com.azure.resourcemanager.sql.generated.models.FailoverGroups;\n+import com.azure.resourcemanager.sql.generated.models.FirewallRules;\n+import com.azure.resourcemanager.sql.generated.models.GeoBackupPolicies;\n+import com.azure.resourcemanager.sql.generated.models.ImportExports;\n+import com.azure.resourcemanager.sql.generated.models.InstanceFailoverGroups;\n+import com.azure.resourcemanager.sql.generated.models.InstancePools;\n+import com.azure.resourcemanager.sql.generated.models.JobAgents;\n+import com.azure.resourcemanager.sql.generated.models.JobCredentials;\n+import com.azure.resourcemanager.sql.generated.models.JobExecutions;\n+import com.azure.resourcemanager.sql.generated.models.JobStepExecutions;\n+import com.azure.resourcemanager.sql.generated.models.JobSteps;\n+import com.azure.resourcemanager.sql.generated.models.JobTargetExecutions;\n+import com.azure.resourcemanager.sql.generated.models.JobTargetGroups;\n+import com.azure.resourcemanager.sql.generated.models.JobVersions;\n+import com.azure.resourcemanager.sql.generated.models.Jobs;\n+import com.azure.resourcemanager.sql.generated.models.LongTermRetentionBackups;\n+import com.azure.resourcemanager.sql.generated.models.LongTermRetentionManagedInstanceBackups;\n+import com.azure.resourcemanager.sql.generated.models.LongTermRetentionPolicies;\n+import com.azure.resourcemanager.sql.generated.models.ManagedBackupShortTermRetentionPolicies;\n+import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseRestoreDetails;\n+import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSecurityAlertPolicies;\n+import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSensitivityLabels;\n+import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseVulnerabilityAssessmentRuleBaselines;\n+import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseVulnerabilityAssessmentScans;\n+import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseVulnerabilityAssessments;\n+import com.azure.resourcemanager.sql.generated.models.ManagedDatabases;\n+import com.azure.resourcemanager.sql.generated.models.ManagedInstanceAdministrators;\n+import com.azure.resourcemanager.sql.generated.models.ManagedInstanceAzureADOnlyAuthentications;\n+import com.azure.resourcemanager.sql.generated.models.ManagedInstanceEncryptionProtectors;\n+import com.azure.resourcemanager.sql.generated.models.ManagedInstanceKeys;\n+import com.azure.resourcemanager.sql.generated.models.ManagedInstanceLongTermRetentionPolicies;\n+import com.azure.resourcemanager.sql.generated.models.ManagedInstanceOperations;\n+import com.azure.resourcemanager.sql.generated.models.ManagedInstanceTdeCertificates;\n+import com.azure.resourcemanager.sql.generated.models.ManagedInstanceVulnerabilityAssessments;\n+import com.azure.resourcemanager.sql.generated.models.ManagedInstances;\n+import com.azure.resourcemanager.sql.generated.models.ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;\n+import com.azure.resourcemanager.sql.generated.models.ManagedServerSecurityAlertPolicies;\n+import com.azure.resourcemanager.sql.generated.models.Operations;\n+import com.azure.resourcemanager.sql.generated.models.PrivateEndpointConnections;\n+import com.azure.resourcemanager.sql.generated.models.PrivateLinkResources;\n+import com.azure.resourcemanager.sql.generated.models.RecommendedElasticPools;\n+import com.azure.resourcemanager.sql.generated.models.RecoverableDatabases;\n+import com.azure.resourcemanager.sql.generated.models.RecoverableManagedDatabases;\n+import com.azure.resourcemanager.sql.generated.models.ReplicationLinks;\n+import com.azure.resourcemanager.sql.generated.models.RestorableDroppedDatabases;\n+import com.azure.resourcemanager.sql.generated.models.RestorableDroppedManagedDatabases;\n+import com.azure.resourcemanager.sql.generated.models.RestorePoints;\n+import com.azure.resourcemanager.sql.generated.models.SensitivityLabels;\n+import com.azure.resourcemanager.sql.generated.models.ServerAutomaticTunings;\n+import com.azure.resourcemanager.sql.generated.models.ServerAzureADAdministrators;\n+import com.azure.resourcemanager.sql.generated.models.ServerAzureADOnlyAuthentications;\n+import com.azure.resourcemanager.sql.generated.models.ServerBlobAuditingPolicies;\n+import com.azure.resourcemanager.sql.generated.models.ServerCommunicationLinks;\n+import com.azure.resourcemanager.sql.generated.models.ServerConnectionPolicies;\n+import com.azure.resourcemanager.sql.generated.models.ServerDevOpsAuditSettings;\n+import com.azure.resourcemanager.sql.generated.models.ServerDnsAliases;\n+import com.azure.resourcemanager.sql.generated.models.ServerKeys;\n+import com.azure.resourcemanager.sql.generated.models.ServerSecurityAlertPolicies;\n+import com.azure.resourcemanager.sql.generated.models.ServerTrustGroups;\n+import com.azure.resourcemanager.sql.generated.models.ServerUsages;\n+import com.azure.resourcemanager.sql.generated.models.ServerVulnerabilityAssessments;\n+import com.azure.resourcemanager.sql.generated.models.Servers;\n+import com.azure.resourcemanager.sql.generated.models.ServiceObjectives;\n+import com.azure.resourcemanager.sql.generated.models.ServiceTierAdvisors;\n+import com.azure.resourcemanager.sql.generated.models.SubscriptionUsages;\n+import com.azure.resourcemanager.sql.generated.models.SyncAgents;\n+import com.azure.resourcemanager.sql.generated.models.SyncGroups;\n+import com.azure.resourcemanager.sql.generated.models.SyncMembers;\n+import com.azure.resourcemanager.sql.generated.models.TdeCertificates;\n+import com.azure.resourcemanager.sql.generated.models.TransparentDataEncryptionActivities;\n+import com.azure.resourcemanager.sql.generated.models.TransparentDataEncryptions;\n+import com.azure.resourcemanager.sql.generated.models.Usages;\n+import com.azure.resourcemanager.sql.generated.models.VirtualClusters;\n+import com.azure.resourcemanager.sql.generated.models.VirtualNetworkRules;\n+import com.azure.resourcemanager.sql.generated.models.WorkloadClassifiers;\n+import com.azure.resourcemanager.sql.generated.models.WorkloadGroups;\n+import java.time.Duration;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * Entry point to SqlManager. The Azure SQL Database management API provides a RESTful set of web services that interact\n+ * with Azure SQL Database services to manage your databases. The API enables you to create, retrieve, update, and\n+ * delete databases.\n+ */\n+public final class SqlManager {\n+    private RecoverableDatabases recoverableDatabases;\n+\n+    private RestorableDroppedDatabases restorableDroppedDatabases;\n+\n+    private ServerConnectionPolicies serverConnectionPolicies;\n+\n+    private DatabaseThreatDetectionPolicies databaseThreatDetectionPolicies;\n+\n+    private DataMaskingPolicies dataMaskingPolicies;\n+\n+    private DataMaskingRules dataMaskingRules;\n+\n+    private FirewallRules firewallRules;\n+\n+    private GeoBackupPolicies geoBackupPolicies;\n+\n+    private Databases databases;\n+\n+    private ElasticPools elasticPools;\n+\n+    private RecommendedElasticPools recommendedElasticPools;\n+\n+    private ReplicationLinks replicationLinks;\n+\n+    private ServerCommunicationLinks serverCommunicationLinks;\n+\n+    private ServiceObjectives serviceObjectives;\n+\n+    private ElasticPoolActivities elasticPoolActivities;\n+\n+    private ElasticPoolDatabaseActivities elasticPoolDatabaseActivities;\n+\n+    private ServiceTierAdvisors serviceTierAdvisors;\n+\n+    private TransparentDataEncryptions transparentDataEncryptions;\n+\n+    private TransparentDataEncryptionActivities transparentDataEncryptionActivities;\n+\n+    private ServerUsages serverUsages;\n+\n+    private DatabaseUsages databaseUsages;\n+\n+    private DatabaseAutomaticTunings databaseAutomaticTunings;\n+\n+    private EncryptionProtectors encryptionProtectors;\n+\n+    private FailoverGroups failoverGroups;\n+\n+    private Operations operations;\n+\n+    private ServerKeys serverKeys;\n+\n+    private SyncAgents syncAgents;\n+\n+    private SubscriptionUsages subscriptionUsages;\n+\n+    private VirtualClusters virtualClusters;\n+\n+    private VirtualNetworkRules virtualNetworkRules;\n+\n+    private ExtendedDatabaseBlobAuditingPolicies extendedDatabaseBlobAuditingPolicies;\n+\n+    private ExtendedServerBlobAuditingPolicies extendedServerBlobAuditingPolicies;\n+\n+    private ServerBlobAuditingPolicies serverBlobAuditingPolicies;\n+\n+    private DatabaseBlobAuditingPolicies databaseBlobAuditingPolicies;\n+\n+    private DatabaseVulnerabilityAssessmentRuleBaselines databaseVulnerabilityAssessmentRuleBaselines;\n+\n+    private DatabaseVulnerabilityAssessments databaseVulnerabilityAssessments;\n+\n+    private JobAgents jobAgents;\n+\n+    private JobCredentials jobCredentials;\n+\n+    private JobExecutions jobExecutions;\n+\n+    private Jobs jobs;\n+\n+    private JobStepExecutions jobStepExecutions;\n+\n+    private JobSteps jobSteps;\n+\n+    private JobTargetExecutions jobTargetExecutions;\n+\n+    private JobTargetGroups jobTargetGroups;\n+\n+    private JobVersions jobVersions;\n+\n+    private ManagedBackupShortTermRetentionPolicies managedBackupShortTermRetentionPolicies;\n+\n+    private ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies\n+        managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;\n+\n+    private ServerAutomaticTunings serverAutomaticTunings;\n+\n+    private ServerDnsAliases serverDnsAliases;\n+\n+    private ServerSecurityAlertPolicies serverSecurityAlertPolicies;\n+\n+    private RestorableDroppedManagedDatabases restorableDroppedManagedDatabases;\n+\n+    private RestorePoints restorePoints;\n+\n+    private ManagedDatabaseSecurityAlertPolicies managedDatabaseSecurityAlertPolicies;\n+\n+    private ManagedServerSecurityAlertPolicies managedServerSecurityAlertPolicies;\n+\n+    private SensitivityLabels sensitivityLabels;\n+\n+    private ManagedInstanceAdministrators managedInstanceAdministrators;\n+\n+    private DatabaseOperations databaseOperations;\n+\n+    private ElasticPoolOperations elasticPoolOperations;\n+\n+    private DatabaseVulnerabilityAssessmentScans databaseVulnerabilityAssessmentScans;\n+\n+    private ManagedDatabaseVulnerabilityAssessmentRuleBaselines managedDatabaseVulnerabilityAssessmentRuleBaselines;\n+\n+    private ManagedDatabaseVulnerabilityAssessmentScans managedDatabaseVulnerabilityAssessmentScans;\n+\n+    private ManagedDatabaseVulnerabilityAssessments managedDatabaseVulnerabilityAssessments;\n+\n+    private InstanceFailoverGroups instanceFailoverGroups;\n+\n+    private TdeCertificates tdeCertificates;\n+\n+    private ManagedInstanceTdeCertificates managedInstanceTdeCertificates;\n+\n+    private ManagedInstanceKeys managedInstanceKeys;\n+\n+    private ManagedInstanceEncryptionProtectors managedInstanceEncryptionProtectors;\n+\n+    private RecoverableManagedDatabases recoverableManagedDatabases;\n+\n+    private BackupShortTermRetentionPolicies backupShortTermRetentionPolicies;\n+\n+    private ManagedInstanceVulnerabilityAssessments managedInstanceVulnerabilityAssessments;\n+\n+    private ServerVulnerabilityAssessments serverVulnerabilityAssessments;\n+\n+    private ManagedDatabaseSensitivityLabels managedDatabaseSensitivityLabels;\n+\n+    private InstancePools instancePools;\n+\n+    private Usages usages;\n+\n+    private PrivateLinkResources privateLinkResources;\n+\n+    private Servers servers;\n+\n+    private Capabilities capabilities;\n+\n+    private LongTermRetentionManagedInstanceBackups longTermRetentionManagedInstanceBackups;\n+\n+    private ManagedInstanceLongTermRetentionPolicies managedInstanceLongTermRetentionPolicies;\n+\n+    private WorkloadGroups workloadGroups;\n+\n+    private WorkloadClassifiers workloadClassifiers;\n+\n+    private ManagedInstanceOperations managedInstanceOperations;\n+\n+    private ServerAzureADAdministrators serverAzureADAdministrators;\n+\n+    private SyncGroups syncGroups;\n+\n+    private SyncMembers syncMembers;\n+\n+    private ImportExports importExports;\n+\n+    private ManagedDatabases managedDatabases;\n+\n+    private ManagedDatabaseRestoreDetails managedDatabaseRestoreDetails;\n+\n+    private ServerAzureADOnlyAuthentications serverAzureADOnlyAuthentications;\n+\n+    private ManagedInstances managedInstances;\n+\n+    private ManagedInstanceAzureADOnlyAuthentications managedInstanceAzureADOnlyAuthentications;\n+\n+    private ServerTrustGroups serverTrustGroups;\n+\n+    private ServerDevOpsAuditSettings serverDevOpsAuditSettings;\n+\n+    private LongTermRetentionBackups longTermRetentionBackups;\n+\n+    private LongTermRetentionPolicies longTermRetentionPolicies;\n+\n+    private PrivateEndpointConnections privateEndpointConnections;\n+\n+    private final SqlManagementClient clientObject;\n+\n+    private SqlManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {\n+        Objects.requireNonNull(httpPipeline, \"'httpPipeline' cannot be null.\");\n+        Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+        this.clientObject =\n+            new SqlManagementClientBuilder()\n+                .pipeline(httpPipeline)\n+                .endpoint(profile.getEnvironment().getResourceManagerEndpoint())\n+                .subscriptionId(profile.getSubscriptionId())\n+                .defaultPollInterval(defaultPollInterval)\n+                .buildClient();\n+    }\n+\n+    /**\n+     * Creates an instance of Sql service API entry point.\n+     *\n+     * @param credential the credential to use.\n+     * @param profile the Azure profile for client.\n+     * @return the Sql service API instance.\n+     */\n+    public static SqlManager authenticate(TokenCredential credential, AzureProfile profile) {\n+        Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+        Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+        return configure().authenticate(credential, profile);\n+    }\n+\n+    /**\n+     * Gets a Configurable instance that can be used to create SqlManager with optional configuration.\n+     *\n+     * @return the Configurable instance allowing configurations.\n+     */\n+    public static Configurable configure() {\n+        return new SqlManager.Configurable();\n+    }\n+\n+    /** The Configurable allowing configurations to be set. */\n+    public static final class Configurable {\n+        private final ClientLogger logger = new ClientLogger(Configurable.class);\n+\n+        private HttpClient httpClient;\n+        private HttpLogOptions httpLogOptions;\n+        private final List<HttpPipelinePolicy> policies = new ArrayList<>();\n+        private RetryPolicy retryPolicy;\n+        private Duration defaultPollInterval;\n+\n+        private Configurable() {\n+        }\n+\n+        /**\n+         * Sets the http client.\n+         *\n+         * @param httpClient the HTTP client.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withHttpClient(HttpClient httpClient) {\n+            this.httpClient = Objects.requireNonNull(httpClient, \"'httpClient' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the logging options to the HTTP pipeline.\n+         *\n+         * @param httpLogOptions the HTTP log options.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {\n+            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, \"'httpLogOptions' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Adds the pipeline policy to the HTTP pipeline.\n+         *\n+         * @param policy the HTTP pipeline policy.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withPolicy(HttpPipelinePolicy policy) {\n+            this.policies.add(Objects.requireNonNull(policy, \"'policy' cannot be null.\"));\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the retry policy to the HTTP pipeline.\n+         *\n+         * @param retryPolicy the HTTP pipeline retry policy.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {\n+            this.retryPolicy = Objects.requireNonNull(retryPolicy, \"'retryPolicy' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the default poll interval, used when service does not provide \"Retry-After\" header.\n+         *\n+         * @param defaultPollInterval the default poll interval.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {\n+            this.defaultPollInterval = Objects.requireNonNull(defaultPollInterval, \"'retryPolicy' cannot be null.\");\n+            if (this.defaultPollInterval.isNegative()) {\n+                throw logger.logExceptionAsError(new IllegalArgumentException(\"'httpPipeline' cannot be negative\"));\n+            }\n+            return this;\n+        }\n+\n+        /**\n+         * Creates an instance of Sql service API entry point.\n+         *\n+         * @param credential the credential to use.\n+         * @param profile the Azure profile for client.\n+         * @return the Sql service API instance.\n+         */\n+        public SqlManager authenticate(TokenCredential credential, AzureProfile profile) {\n+            Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+            Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+\n+            StringBuilder userAgentBuilder = new StringBuilder();\n+            userAgentBuilder\n+                .append(\"azsdk-java\")\n+                .append(\"-\")\n+                .append(\"com.azure.resourcemanager.sql.generated\")\n+                .append(\"/\")\n+                .append(\"1.0.0-beta.1\");\n+            if (!Configuration.getGlobalConfiguration().get(\"AZURE_TELEMETRY_DISABLED\", false)) {\n+                userAgentBuilder\n+                    .append(\" (\")\n+                    .append(Configuration.getGlobalConfiguration().get(\"java.version\"))\n+                    .append(\"; \")\n+                    .append(Configuration.getGlobalConfiguration().get(\"os.name\"))\n+                    .append(\"; \")\n+                    .append(Configuration.getGlobalConfiguration().get(\"os.version\"))\n+                    .append(\"; auto-generated)\");\n+            } else {\n+                userAgentBuilder.append(\" (auto-generated)\");\n+            }\n+\n+            if (retryPolicy == null) {\n+                retryPolicy = new RetryPolicy(\"Retry-After\", ChronoUnit.SECONDS);\n+            }\n+            List<HttpPipelinePolicy> policies = new ArrayList<>();\n+            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));\n+            policies.add(new RequestIdPolicy());\n+            HttpPolicyProviders.addBeforeRetryPolicies(policies);\n+            policies.add(retryPolicy);\n+            policies.add(new AddDatePolicy());\n+            policies\n+                .add(\n+                    new BearerTokenAuthenticationPolicy(\n+                        credential, profile.getEnvironment().getManagementEndpoint() + \"/.default\"));\n+            HttpPolicyProviders.addAfterRetryPolicies(policies);\n+            policies.add(new HttpLoggingPolicy(httpLogOptions));\n+            HttpPipeline httpPipeline =\n+                new HttpPipelineBuilder()\n+                    .httpClient(httpClient)\n+                    .policies(policies.toArray(new HttpPipelinePolicy[0]))\n+                    .build();\n+            return new SqlManager(httpPipeline, profile, defaultPollInterval);\n+        }\n+    }\n+\n+    /** @return Resource collection API of RecoverableDatabases. */\n+    public RecoverableDatabases recoverableDatabases() {\n+        if (this.recoverableDatabases == null) {\n+            this.recoverableDatabases = new RecoverableDatabasesImpl(clientObject.getRecoverableDatabases(), this);\n+        }\n+        return recoverableDatabases;\n+    }\n+\n+    /** @return Resource collection API of RestorableDroppedDatabases. */\n+    public RestorableDroppedDatabases restorableDroppedDatabases() {\n+        if (this.restorableDroppedDatabases == null) {\n+            this.restorableDroppedDatabases =\n+                new RestorableDroppedDatabasesImpl(clientObject.getRestorableDroppedDatabases(), this);\n+        }\n+        return restorableDroppedDatabases;\n+    }\n+\n+    /** @return Resource collection API of ServerConnectionPolicies. */\n+    public ServerConnectionPolicies serverConnectionPolicies() {\n+        if (this.serverConnectionPolicies == null) {\n+            this.serverConnectionPolicies =\n+                new ServerConnectionPoliciesImpl(clientObject.getServerConnectionPolicies(), this);\n+        }\n+        return serverConnectionPolicies;\n+    }\n+\n+    /** @return Resource collection API of DatabaseThreatDetectionPolicies. */\n+    public DatabaseThreatDetectionPolicies databaseThreatDetectionPolicies() {\n+        if (this.databaseThreatDetectionPolicies == null) {\n+            this.databaseThreatDetectionPolicies =\n+                new DatabaseThreatDetectionPoliciesImpl(clientObject.getDatabaseThreatDetectionPolicies(), this);\n+        }\n+        return databaseThreatDetectionPolicies;\n+    }\n+\n+    /** @return Resource collection API of DataMaskingPolicies. */\n+    public DataMaskingPolicies dataMaskingPolicies() {\n+        if (this.dataMaskingPolicies == null) {\n+            this.dataMaskingPolicies = new DataMaskingPoliciesImpl(clientObject.getDataMaskingPolicies(), this);\n+        }\n+        return dataMaskingPolicies;\n+    }\n+\n+    /** @return Resource collection API of DataMaskingRules. */\n+    public DataMaskingRules dataMaskingRules() {\n+        if (this.dataMaskingRules == null) {\n+            this.dataMaskingRules = new DataMaskingRulesImpl(clientObject.getDataMaskingRules(), this);\n+        }\n+        return dataMaskingRules;\n+    }\n+\n+    /** @return Resource collection API of FirewallRules. */\n+    public FirewallRules firewallRules() {\n+        if (this.firewallRules == null) {\n+            this.firewallRules = new FirewallRulesImpl(clientObject.getFirewallRules(), this);\n+        }\n+        return firewallRules;\n+    }\n+\n+    /** @return Resource collection API of GeoBackupPolicies. */\n+    public GeoBackupPolicies geoBackupPolicies() {\n+        if (this.geoBackupPolicies == null) {\n+            this.geoBackupPolicies = new GeoBackupPoliciesImpl(clientObject.getGeoBackupPolicies(), this);\n+        }\n+        return geoBackupPolicies;\n+    }\n+\n+    /** @return Resource collection API of Databases. */\n+    public Databases databases() {\n+        if (this.databases == null) {\n+            this.databases = new DatabasesImpl(clientObject.getDatabases(), this);\n+        }\n+        return databases;\n+    }\n+\n+    /** @return Resource collection API of ElasticPools. */\n+    public ElasticPools elasticPools() {\n+        if (this.elasticPools == null) {\n+            this.elasticPools = new ElasticPoolsImpl(clientObject.getElasticPools(), this);\n+        }\n+        return elasticPools;\n+    }\n+\n+    /** @return Resource collection API of RecommendedElasticPools. */\n+    public RecommendedElasticPools recommendedElasticPools() {\n+        if (this.recommendedElasticPools == null) {\n+            this.recommendedElasticPools =\n+                new RecommendedElasticPoolsImpl(clientObject.getRecommendedElasticPools(), this);\n+        }\n+        return recommendedElasticPools;\n+    }\n+\n+    /** @return Resource collection API of ReplicationLinks. */\n+    public ReplicationLinks replicationLinks() {\n+        if (this.replicationLinks == null) {\n+            this.replicationLinks = new ReplicationLinksImpl(clientObject.getReplicationLinks(), this);\n+        }\n+        return replicationLinks;\n+    }\n+\n+    /** @return Resource collection API of ServerCommunicationLinks. */\n+    public ServerCommunicationLinks serverCommunicationLinks() {\n+        if (this.serverCommunicationLinks == null) {\n+            this.serverCommunicationLinks =\n+                new ServerCommunicationLinksImpl(clientObject.getServerCommunicationLinks(), this);\n+        }\n+        return serverCommunicationLinks;\n+    }\n+\n+    /** @return Resource collection API of ServiceObjectives. */\n+    public ServiceObjectives serviceObjectives() {\n+        if (this.serviceObjectives == null) {\n+            this.serviceObjectives = new ServiceObjectivesImpl(clientObject.getServiceObjectives(), this);\n+        }\n+        return serviceObjectives;\n+    }\n+\n+    /** @return Resource collection API of ElasticPoolActivities. */\n+    public ElasticPoolActivities elasticPoolActivities() {\n+        if (this.elasticPoolActivities == null) {\n+            this.elasticPoolActivities = new ElasticPoolActivitiesImpl(clientObject.getElasticPoolActivities(), this);\n+        }\n+        return elasticPoolActivities;\n+    }\n+\n+    /** @return Resource collection API of ElasticPoolDatabaseActivities. */\n+    public ElasticPoolDatabaseActivities elasticPoolDatabaseActivities() {\n+        if (this.elasticPoolDatabaseActivities == null) {\n+            this.elasticPoolDatabaseActivities =\n+                new ElasticPoolDatabaseActivitiesImpl(clientObject.getElasticPoolDatabaseActivities(), this);\n+        }\n+        return elasticPoolDatabaseActivities;\n+    }\n+\n+    /** @return Resource collection API of ServiceTierAdvisors. */\n+    public ServiceTierAdvisors serviceTierAdvisors() {\n+        if (this.serviceTierAdvisors == null) {\n+            this.serviceTierAdvisors = new ServiceTierAdvisorsImpl(clientObject.getServiceTierAdvisors(), this);\n+        }\n+        return serviceTierAdvisors;\n+    }\n+\n+    /** @return Resource collection API of TransparentDataEncryptions. */\n+    public TransparentDataEncryptions transparentDataEncryptions() {\n+        if (this.transparentDataEncryptions == null) {\n+            this.transparentDataEncryptions =\n+                new TransparentDataEncryptionsImpl(clientObject.getTransparentDataEncryptions(), this);\n+        }\n+        return transparentDataEncryptions;\n+    }\n+\n+    /** @return Resource collection API of TransparentDataEncryptionActivities. */\n+    public TransparentDataEncryptionActivities transparentDataEncryptionActivities() {\n+        if (this.transparentDataEncryptionActivities == null) {\n+            this.transparentDataEncryptionActivities =\n+                new TransparentDataEncryptionActivitiesImpl(\n+                    clientObject.getTransparentDataEncryptionActivities(), this);\n+        }\n+        return transparentDataEncryptionActivities;\n+    }\n+\n+    /** @return Resource collection API of ServerUsages. */\n+    public ServerUsages serverUsages() {\n+        if (this.serverUsages == null) {\n+            this.serverUsages = new ServerUsagesImpl(clientObject.getServerUsages(), this);\n+        }\n+        return serverUsages;\n+    }\n+\n+    /** @return Resource collection API of DatabaseUsages. */\n+    public DatabaseUsages databaseUsages() {\n+        if (this.databaseUsages == null) {\n+            this.databaseUsages = new DatabaseUsagesImpl(clientObject.getDatabaseUsages(), this);\n+        }\n+        return databaseUsages;\n+    }\n+\n+    /** @return Resource collection API of DatabaseAutomaticTunings. */\n+    public DatabaseAutomaticTunings databaseAutomaticTunings() {\n+        if (this.databaseAutomaticTunings == null) {\n+            this.databaseAutomaticTunings =\n+                new DatabaseAutomaticTuningsImpl(clientObject.getDatabaseAutomaticTunings(), this);\n+        }\n+        return databaseAutomaticTunings;\n+    }\n+\n+    /** @return Resource collection API of EncryptionProtectors. */\n+    public EncryptionProtectors encryptionProtectors() {\n+        if (this.encryptionProtectors == null) {\n+            this.encryptionProtectors = new EncryptionProtectorsImpl(clientObject.getEncryptionProtectors(), this);\n+        }\n+        return encryptionProtectors;\n+    }\n+\n+    /** @return Resource collection API of FailoverGroups. */\n+    public FailoverGroups failoverGroups() {\n+        if (this.failoverGroups == null) {\n+            this.failoverGroups = new FailoverGroupsImpl(clientObject.getFailoverGroups(), this);\n+        }\n+        return failoverGroups;\n+    }\n+\n+    /** @return Resource collection API of Operations. */\n+    public Operations operations() {\n+        if (this.operations == null) {\n+            this.operations = new OperationsImpl(clientObject.getOperations(), this);\n+        }\n+        return operations;\n+    }\n+\n+    /** @return Resource collection API of ServerKeys. */\n+    public ServerKeys serverKeys() {\n+        if (this.serverKeys == null) {\n+            this.serverKeys = new ServerKeysImpl(clientObject.getServerKeys(), this);\n+        }\n+        return serverKeys;\n+    }\n+\n+    /** @return Resource collection API of SyncAgents. */\n+    public SyncAgents syncAgents() {\n+        if (this.syncAgents == null) {\n+            this.syncAgents = new SyncAgentsImpl(clientObject.getSyncAgents(), this);\n+        }\n+        return syncAgents;\n+    }\n+\n+    /** @return Resource collection API of SubscriptionUsages. */\n+    public SubscriptionUsages subscriptionUsages() {\n+        if (this.subscriptionUsages == null) {\n+            this.subscriptionUsages = new SubscriptionUsagesImpl(clientObject.getSubscriptionUsages(), this);\n+        }\n+        return subscriptionUsages;\n+    }\n+\n+    /** @return Resource collection API of VirtualClusters. */\n+    public VirtualClusters virtualClusters() {\n+        if (this.virtualClusters == null) {\n+            this.virtualClusters = new VirtualClustersImpl(clientObject.getVirtualClusters(), this);\n+        }\n+        return virtualClusters;\n+    }\n+\n+    /** @return Resource collection API of VirtualNetworkRules. */\n+    public VirtualNetworkRules virtualNetworkRules() {\n+        if (this.virtualNetworkRules == null) {\n+            this.virtualNetworkRules = new VirtualNetworkRulesImpl(clientObject.getVirtualNetworkRules(), this);\n+        }\n+        return virtualNetworkRules;\n+    }\n+\n+    /** @return Resource collection API of ExtendedDatabaseBlobAuditingPolicies. */\n+    public ExtendedDatabaseBlobAuditingPolicies extendedDatabaseBlobAuditingPolicies() {\n+        if (this.extendedDatabaseBlobAuditingPolicies == null) {\n+            this.extendedDatabaseBlobAuditingPolicies =\n+                new ExtendedDatabaseBlobAuditingPoliciesImpl(\n+                    clientObject.getExtendedDatabaseBlobAuditingPolicies(), this);\n+        }\n+        return extendedDatabaseBlobAuditingPolicies;\n+    }\n+\n+    /** @return Resource collection API of ExtendedServerBlobAuditingPolicies. */\n+    public ExtendedServerBlobAuditingPolicies extendedServerBlobAuditingPolicies() {\n+        if (this.extendedServerBlobAuditingPolicies == null) {\n+            this.extendedServerBlobAuditingPolicies =\n+                new ExtendedServerBlobAuditingPoliciesImpl(clientObject.getExtendedServerBlobAuditingPolicies(), this);\n+        }\n+        return extendedServerBlobAuditingPolicies;\n+    }\n+\n+    /** @return Resource collection API of ServerBlobAuditingPolicies. */\n+    public ServerBlobAuditingPolicies serverBlobAuditingPolicies() {\n+        if (this.serverBlobAuditingPolicies == null) {\n+            this.serverBlobAuditingPolicies =\n+                new ServerBlobAuditingPoliciesImpl(clientObject.getServerBlobAuditingPolicies(), this);\n+        }\n+        return serverBlobAuditingPolicies;\n+    }\n+\n+    /** @return Resource collection API of DatabaseBlobAuditingPolicies. */\n+    public DatabaseBlobAuditingPolicies databaseBlobAuditingPolicies() {\n+        if (this.databaseBlobAuditingPolicies == null) {\n+            this.databaseBlobAuditingPolicies =\n+                new DatabaseBlobAuditingPoliciesImpl(clientObject.getDatabaseBlobAuditingPolicies(), this);\n+        }\n+        return databaseBlobAuditingPolicies;\n+    }\n+\n+    /** @return Resource collection API of DatabaseVulnerabilityAssessmentRuleBaselines. */\n+    public DatabaseVulnerabilityAssessmentRuleBaselines databaseVulnerabilityAssessmentRuleBaselines() {\n+        if (this.databaseVulnerabilityAssessmentRuleBaselines == null) {\n+            this.databaseVulnerabilityAssessmentRuleBaselines =\n+                new DatabaseVulnerabilityAssessmentRuleBaselinesImpl(\n+                    clientObject.getDatabaseVulnerabilityAssessmentRuleBaselines(), this);\n+        }\n+        return databaseVulnerabilityAssessmentRuleBaselines;\n+    }\n+\n+    /** @return Resource collection API of DatabaseVulnerabilityAssessments. */\n+    public DatabaseVulnerabilityAssessments databaseVulnerabilityAssessments() {\n+        if (this.databaseVulnerabilityAssessments == null) {\n+            this.databaseVulnerabilityAssessments =\n+                new DatabaseVulnerabilityAssessmentsImpl(clientObject.getDatabaseVulnerabilityAssessments(), this);\n+        }\n+        return databaseVulnerabilityAssessments;\n+    }\n+\n+    /** @return Resource collection API of JobAgents. */\n+    public JobAgents jobAgents() {\n+        if (this.jobAgents == null) {\n+            this.jobAgents = new JobAgentsImpl(clientObject.getJobAgents(), this);\n+        }\n+        return jobAgents;\n+    }\n+\n+    /** @return Resource collection API of JobCredentials. */\n+    public JobCredentials jobCredentials() {\n+        if (this.jobCredentials == null) {\n+            this.jobCredentials = new JobCredentialsImpl(clientObject.getJobCredentials(), this);\n+        }\n+        return jobCredentials;\n+    }\n+\n+    /** @return Resource collection API of JobExecutions. */\n+    public JobExecutions jobExecutions() {\n+        if (this.jobExecutions == null) {\n+            this.jobExecutions = new JobExecutionsImpl(clientObject.getJobExecutions(), this);\n+        }\n+        return jobExecutions;\n+    }\n+\n+    /** @return Resource collection API of Jobs. */\n+    public Jobs jobs() {\n+        if (this.jobs == null) {\n+            this.jobs = new JobsImpl(clientObject.getJobs(), this);\n+        }\n+        return jobs;\n+    }\n+\n+    /** @return Resource collection API of JobStepExecutions. */\n+    public JobStepExecutions jobStepExecutions() {\n+        if (this.jobStepExecutions == null) {\n+            this.jobStepExecutions = new JobStepExecutionsImpl(clientObject.getJobStepExecutions(), this);\n+        }\n+        return jobStepExecutions;\n+    }\n+\n+    /** @return Resource collection API of JobSteps. */\n+    public JobSteps jobSteps() {\n+        if (this.jobSteps == null) {\n+            this.jobSteps = new JobStepsImpl(clientObject.getJobSteps(), this);\n+        }\n+        return jobSteps;\n+    }\n+\n+    /** @return Resource collection API of JobTargetExecutions. */\n+    public JobTargetExecutions jobTargetExecutions() {\n+        if (this.jobTargetExecutions == null) {\n+            this.jobTargetExecutions = new JobTargetExecutionsImpl(clientObject.getJobTargetExecutions(), this);\n+        }\n+        return jobTargetExecutions;\n+    }\n+\n+    /** @return Resource collection API of JobTargetGroups. */\n+    public JobTargetGroups jobTargetGroups() {\n+        if (this.jobTargetGroups == null) {\n+            this.jobTargetGroups = new JobTargetGroupsImpl(clientObject.getJobTargetGroups(), this);\n+        }\n+        return jobTargetGroups;\n+    }\n+\n+    /** @return Resource collection API of JobVersions. */\n+    public JobVersions jobVersions() {\n+        if (this.jobVersions == null) {\n+            this.jobVersions = new JobVersionsImpl(clientObject.getJobVersions(), this);\n+        }\n+        return jobVersions;\n+    }\n+\n+    /** @return Resource collection API of ManagedBackupShortTermRetentionPolicies. */\n+    public ManagedBackupShortTermRetentionPolicies managedBackupShortTermRetentionPolicies() {\n+        if (this.managedBackupShortTermRetentionPolicies == null) {\n+            this.managedBackupShortTermRetentionPolicies =\n+                new ManagedBackupShortTermRetentionPoliciesImpl(\n+                    clientObject.getManagedBackupShortTermRetentionPolicies(), this);\n+        }\n+        return managedBackupShortTermRetentionPolicies;\n+    }\n+\n+    /** @return Resource collection API of ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies. */\n+    public ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies\n+        managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies() {\n+        if (this.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies == null) {\n+            this.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies =\n+                new ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesImpl(\n+                    clientObject.getManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies(), this);\n+        }\n+        return managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;\n+    }\n+\n+    /** @return Resource collection API of ServerAutomaticTunings. */\n+    public ServerAutomaticTunings serverAutomaticTunings() {\n+        if (this.serverAutomaticTunings == null) {\n+            this.serverAutomaticTunings =\n+                new ServerAutomaticTuningsImpl(clientObject.getServerAutomaticTunings(), this);\n+        }\n+        return serverAutomaticTunings;\n+    }\n+\n+    /** @return Resource collection API of ServerDnsAliases. */\n+    public ServerDnsAliases serverDnsAliases() {\n+        if (this.serverDnsAliases == null) {\n+            this.serverDnsAliases = new ServerDnsAliasesImpl(clientObject.getServerDnsAliases(), this);\n+        }\n+        return serverDnsAliases;\n+    }\n+\n+    /** @return Resource collection API of ServerSecurityAlertPolicies. */\n+    public ServerSecurityAlertPolicies serverSecurityAlertPolicies() {\n+        if (this.serverSecurityAlertPolicies == null) {\n+            this.serverSecurityAlertPolicies =\n+                new ServerSecurityAlertPoliciesImpl(clientObject.getServerSecurityAlertPolicies(), this);\n+        }\n+        return serverSecurityAlertPolicies;\n+    }\n+\n+    /** @return Resource collection API of RestorableDroppedManagedDatabases. */\n+    public RestorableDroppedManagedDatabases restorableDroppedManagedDatabases() {\n+        if (this.restorableDroppedManagedDatabases == null) {\n+            this.restorableDroppedManagedDatabases =\n+                new RestorableDroppedManagedDatabasesImpl(clientObject.getRestorableDroppedManagedDatabases(), this);\n+        }\n+        return restorableDroppedManagedDatabases;\n+    }\n+\n+    /** @return Resource collection API of RestorePoints. */\n+    public RestorePoints restorePoints() {\n+        if (this.restorePoints == null) {\n+            this.restorePoints = new RestorePointsImpl(clientObject.getRestorePoints(), this);\n+        }\n+        return restorePoints;\n+    }\n+\n+    /** @return Resource collection API of ManagedDatabaseSecurityAlertPolicies. */\n+    public ManagedDatabaseSecurityAlertPolicies managedDatabaseSecurityAlertPolicies() {\n+        if (this.managedDatabaseSecurityAlertPolicies == null) {\n+            this.managedDatabaseSecurityAlertPolicies =\n+                new ManagedDatabaseSecurityAlertPoliciesImpl(\n+                    clientObject.getManagedDatabaseSecurityAlertPolicies(), this);\n+        }\n+        return managedDatabaseSecurityAlertPolicies;\n+    }\n+\n+    /** @return Resource collection API of ManagedServerSecurityAlertPolicies. */\n+    public ManagedServerSecurityAlertPolicies managedServerSecurityAlertPolicies() {\n+        if (this.managedServerSecurityAlertPolicies == null) {\n+            this.managedServerSecurityAlertPolicies =\n+                new ManagedServerSecurityAlertPoliciesImpl(clientObject.getManagedServerSecurityAlertPolicies(), this);\n+        }\n+        return managedServerSecurityAlertPolicies;\n+    }\n+\n+    /** @return Resource collection API of SensitivityLabels. */\n+    public SensitivityLabels sensitivityLabels() {\n+        if (this.sensitivityLabels == null) {\n+            this.sensitivityLabels = new SensitivityLabelsImpl(clientObject.getSensitivityLabels(), this);\n+        }\n+        return sensitivityLabels;\n+    }\n+\n+    /** @return Resource collection API of ManagedInstanceAdministrators. */\n+    public ManagedInstanceAdministrators managedInstanceAdministrators() {\n+        if (this.managedInstanceAdministrators == null) {\n+            this.managedInstanceAdministrators =\n+                new ManagedInstanceAdministratorsImpl(clientObject.getManagedInstanceAdministrators(), this);\n+        }\n+        return managedInstanceAdministrators;\n+    }\n+\n+    /** @return Resource collection API of DatabaseOperations. */\n+    public DatabaseOperations databaseOperations() {\n+        if (this.databaseOperations == null) {\n+            this.databaseOperations = new DatabaseOperationsImpl(clientObject.getDatabaseOperations(), this);\n+        }\n+        return databaseOperations;\n+    }\n+\n+    /** @return Resource collection API of ElasticPoolOperations. */\n+    public ElasticPoolOperations elasticPoolOperations() {\n+        if (this.elasticPoolOperations == null) {\n+            this.elasticPoolOperations = new ElasticPoolOperationsImpl(clientObject.getElasticPoolOperations(), this);\n+        }\n+        return elasticPoolOperations;\n+    }\n+\n+    /** @return Resource collection API of DatabaseVulnerabilityAssessmentScans. */\n+    public DatabaseVulnerabilityAssessmentScans databaseVulnerabilityAssessmentScans() {\n+        if (this.databaseVulnerabilityAssessmentScans == null) {\n+            this.databaseVulnerabilityAssessmentScans =\n+                new DatabaseVulnerabilityAssessmentScansImpl(\n+                    clientObject.getDatabaseVulnerabilityAssessmentScans(), this);\n+        }\n+        return databaseVulnerabilityAssessmentScans;\n+    }\n+\n+    /** @return Resource collection API of ManagedDatabaseVulnerabilityAssessmentRuleBaselines. */\n+    public ManagedDatabaseVulnerabilityAssessmentRuleBaselines managedDatabaseVulnerabilityAssessmentRuleBaselines() {\n+        if (this.managedDatabaseVulnerabilityAssessmentRuleBaselines == null) {\n+            this.managedDatabaseVulnerabilityAssessmentRuleBaselines =\n+                new ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl(\n+                    clientObject.getManagedDatabaseVulnerabilityAssessmentRuleBaselines(), this);\n+        }\n+        return managedDatabaseVulnerabilityAssessmentRuleBaselines;\n+    }\n+\n+    /** @return Resource collection API of ManagedDatabaseVulnerabilityAssessmentScans. */\n+    public ManagedDatabaseVulnerabilityAssessmentScans managedDatabaseVulnerabilityAssessmentScans() {\n+        if (this.managedDatabaseVulnerabilityAssessmentScans == null) {\n+            this.managedDatabaseVulnerabilityAssessmentScans =\n+                new ManagedDatabaseVulnerabilityAssessmentScansImpl(\n+                    clientObject.getManagedDatabaseVulnerabilityAssessmentScans(), this);\n+        }\n+        return managedDatabaseVulnerabilityAssessmentScans;\n+    }\n+\n+    /** @return Resource collection API of ManagedDatabaseVulnerabilityAssessments. */\n+    public ManagedDatabaseVulnerabilityAssessments managedDatabaseVulnerabilityAssessments() {\n+        if (this.managedDatabaseVulnerabilityAssessments == null) {\n+            this.managedDatabaseVulnerabilityAssessments =\n+                new ManagedDatabaseVulnerabilityAssessmentsImpl(\n+                    clientObject.getManagedDatabaseVulnerabilityAssessments(), this);\n+        }\n+        return managedDatabaseVulnerabilityAssessments;\n+    }\n+\n+    /** @return Resource collection API of InstanceFailoverGroups. */\n+    public InstanceFailoverGroups instanceFailoverGroups() {\n+        if (this.instanceFailoverGroups == null) {\n+            this.instanceFailoverGroups =\n+                new InstanceFailoverGroupsImpl(clientObject.getInstanceFailoverGroups(), this);\n+        }\n+        return instanceFailoverGroups;\n+    }\n+\n+    /** @return Resource collection API of TdeCertificates. */\n+    public TdeCertificates tdeCertificates() {\n+        if (this.tdeCertificates == null) {\n+            this.tdeCertificates = new TdeCertificatesImpl(clientObject.getTdeCertificates(), this);\n+        }\n+        return tdeCertificates;\n+    }\n+\n+    /** @return Resource collection API of ManagedInstanceTdeCertificates. */\n+    public ManagedInstanceTdeCertificates managedInstanceTdeCertificates() {\n+        if (this.managedInstanceTdeCertificates == null) {\n+            this.managedInstanceTdeCertificates =\n+                new ManagedInstanceTdeCertificatesImpl(clientObject.getManagedInstanceTdeCertificates(), this);\n+        }\n+        return managedInstanceTdeCertificates;\n+    }\n+\n+    /** @return Resource collection API of ManagedInstanceKeys. */\n+    public ManagedInstanceKeys managedInstanceKeys() {\n+        if (this.managedInstanceKeys == null) {\n+            this.managedInstanceKeys = new ManagedInstanceKeysImpl(clientObject.getManagedInstanceKeys(), this);\n+        }\n+        return managedInstanceKeys;\n+    }\n+\n+    /** @return Resource collection API of ManagedInstanceEncryptionProtectors. */\n+    public ManagedInstanceEncryptionProtectors managedInstanceEncryptionProtectors() {\n+        if (this.managedInstanceEncryptionProtectors == null) {\n+            this.managedInstanceEncryptionProtectors =\n+                new ManagedInstanceEncryptionProtectorsImpl(\n+                    clientObject.getManagedInstanceEncryptionProtectors(), this);\n+        }\n+        return managedInstanceEncryptionProtectors;\n+    }\n+\n+    /** @return Resource collection API of RecoverableManagedDatabases. */\n+    public RecoverableManagedDatabases recoverableManagedDatabases() {\n+        if (this.recoverableManagedDatabases == null) {\n+            this.recoverableManagedDatabases =\n+                new RecoverableManagedDatabasesImpl(clientObject.getRecoverableManagedDatabases(), this);\n+        }\n+        return recoverableManagedDatabases;\n+    }\n+\n+    /** @return Resource collection API of BackupShortTermRetentionPolicies. */\n+    public BackupShortTermRetentionPolicies backupShortTermRetentionPolicies() {\n+        if (this.backupShortTermRetentionPolicies == null) {\n+            this.backupShortTermRetentionPolicies =\n+                new BackupShortTermRetentionPoliciesImpl(clientObject.getBackupShortTermRetentionPolicies(), this);\n+        }\n+        return backupShortTermRetentionPolicies;\n+    }\n+\n+    /** @return Resource collection API of ManagedInstanceVulnerabilityAssessments. */\n+    public ManagedInstanceVulnerabilityAssessments managedInstanceVulnerabilityAssessments() {\n+        if (this.managedInstanceVulnerabilityAssessments == null) {\n+            this.managedInstanceVulnerabilityAssessments =\n+                new ManagedInstanceVulnerabilityAssessmentsImpl(\n+                    clientObject.getManagedInstanceVulnerabilityAssessments(), this);\n+        }\n+        return managedInstanceVulnerabilityAssessments;\n+    }\n+\n+    /** @return Resource collection API of ServerVulnerabilityAssessments. */\n+    public ServerVulnerabilityAssessments serverVulnerabilityAssessments() {\n+        if (this.serverVulnerabilityAssessments == null) {\n+            this.serverVulnerabilityAssessments =\n+                new ServerVulnerabilityAssessmentsImpl(clientObject.getServerVulnerabilityAssessments(), this);\n+        }\n+        return serverVulnerabilityAssessments;\n+    }\n+\n+    /** @return Resource collection API of ManagedDatabaseSensitivityLabels. */\n+    public ManagedDatabaseSensitivityLabels managedDatabaseSensitivityLabels() {\n+        if (this.managedDatabaseSensitivityLabels == null) {\n+            this.managedDatabaseSensitivityLabels =\n+                new ManagedDatabaseSensitivityLabelsImpl(clientObject.getManagedDatabaseSensitivityLabels(), this);\n+        }\n+        return managedDatabaseSensitivityLabels;\n+    }\n+\n+    /** @return Resource collection API of InstancePools. */\n+    public InstancePools instancePools() {\n+        if (this.instancePools == null) {\n+            this.instancePools = new InstancePoolsImpl(clientObject.getInstancePools(), this);\n+        }\n+        return instancePools;\n+    }\n+\n+    /** @return Resource collection API of Usages. */\n+    public Usages usages() {\n+        if (this.usages == null) {\n+            this.usages = new UsagesImpl(clientObject.getUsages(), this);\n+        }\n+        return usages;\n+    }\n+\n+    /** @return Resource collection API of PrivateLinkResources. */\n+    public PrivateLinkResources privateLinkResources() {\n+        if (this.privateLinkResources == null) {\n+            this.privateLinkResources = new PrivateLinkResourcesImpl(clientObject.getPrivateLinkResources(), this);\n+        }\n+        return privateLinkResources;\n+    }\n+\n+    /** @return Resource collection API of Servers. */\n+    public Servers servers() {\n+        if (this.servers == null) {\n+            this.servers = new ServersImpl(clientObject.getServers(), this);\n+        }\n+        return servers;\n+    }\n+\n+    /** @return Resource collection API of Capabilities. */\n+    public Capabilities capabilities() {\n+        if (this.capabilities == null) {\n+            this.capabilities = new CapabilitiesImpl(clientObject.getCapabilities(), this);\n+        }\n+        return capabilities;\n+    }\n+\n+    /** @return Resource collection API of LongTermRetentionManagedInstanceBackups. */\n+    public LongTermRetentionManagedInstanceBackups longTermRetentionManagedInstanceBackups() {\n+        if (this.longTermRetentionManagedInstanceBackups == null) {\n+            this.longTermRetentionManagedInstanceBackups =\n+                new LongTermRetentionManagedInstanceBackupsImpl(\n+                    clientObject.getLongTermRetentionManagedInstanceBackups(), this);\n+        }\n+        return longTermRetentionManagedInstanceBackups;\n+    }\n+\n+    /** @return Resource collection API of ManagedInstanceLongTermRetentionPolicies. */\n+    public ManagedInstanceLongTermRetentionPolicies managedInstanceLongTermRetentionPolicies() {\n+        if (this.managedInstanceLongTermRetentionPolicies == null) {\n+            this.managedInstanceLongTermRetentionPolicies =\n+                new ManagedInstanceLongTermRetentionPoliciesImpl(\n+                    clientObject.getManagedInstanceLongTermRetentionPolicies(), this);\n+        }\n+        return managedInstanceLongTermRetentionPolicies;\n+    }\n+\n+    /** @return Resource collection API of WorkloadGroups. */\n+    public WorkloadGroups workloadGroups() {\n+        if (this.workloadGroups == null) {\n+            this.workloadGroups = new WorkloadGroupsImpl(clientObject.getWorkloadGroups(), this);\n+        }\n+        return workloadGroups;\n+    }\n+\n+    /** @return Resource collection API of WorkloadClassifiers. */\n+    public WorkloadClassifiers workloadClassifiers() {\n+        if (this.workloadClassifiers == null) {\n+            this.workloadClassifiers = new WorkloadClassifiersImpl(clientObject.getWorkloadClassifiers(), this);\n+        }\n+        return workloadClassifiers;\n+    }\n+\n+    /** @return Resource collection API of ManagedInstanceOperations. */\n+    public ManagedInstanceOperations managedInstanceOperations() {\n+        if (this.managedInstanceOperations == null) {\n+            this.managedInstanceOperations =\n+                new ManagedInstanceOperationsImpl(clientObject.getManagedInstanceOperations(), this);\n+        }\n+        return managedInstanceOperations;\n+    }\n+\n+    /** @return Resource collection API of ServerAzureADAdministrators. */\n+    public ServerAzureADAdministrators serverAzureADAdministrators() {\n+        if (this.serverAzureADAdministrators == null) {\n+            this.serverAzureADAdministrators =\n+                new ServerAzureADAdministratorsImpl(clientObject.getServerAzureADAdministrators(), this);\n+        }\n+        return serverAzureADAdministrators;\n+    }\n+\n+    /** @return Resource collection API of SyncGroups. */\n+    public SyncGroups syncGroups() {\n+        if (this.syncGroups == null) {\n+            this.syncGroups = new SyncGroupsImpl(clientObject.getSyncGroups(), this);\n+        }\n+        return syncGroups;\n+    }\n+\n+    /** @return Resource collection API of SyncMembers. */\n+    public SyncMembers syncMembers() {\n+        if (this.syncMembers == null) {\n+            this.syncMembers = new SyncMembersImpl(clientObject.getSyncMembers(), this);\n+        }\n+        return syncMembers;\n+    }\n+\n+    /** @return Resource collection API of ImportExports. */\n+    public ImportExports importExports() {\n+        if (this.importExports == null) {\n+            this.importExports = new ImportExportsImpl(clientObject.getImportExports(), this);\n+        }\n+        return importExports;\n+    }\n+\n+    /** @return Resource collection API of ManagedDatabases. */\n+    public ManagedDatabases managedDatabases() {\n+        if (this.managedDatabases == null) {\n+            this.managedDatabases = new ManagedDatabasesImpl(clientObject.getManagedDatabases(), this);\n+        }\n+        return managedDatabases;\n+    }\n+\n+    /** @return Resource collection API of ManagedDatabaseRestoreDetails. */\n+    public ManagedDatabaseRestoreDetails managedDatabaseRestoreDetails() {\n+        if (this.managedDatabaseRestoreDetails == null) {\n+            this.managedDatabaseRestoreDetails =\n+                new ManagedDatabaseRestoreDetailsImpl(clientObject.getManagedDatabaseRestoreDetails(), this);\n+        }\n+        return managedDatabaseRestoreDetails;\n+    }\n+\n+    /** @return Resource collection API of ServerAzureADOnlyAuthentications. */\n+    public ServerAzureADOnlyAuthentications serverAzureADOnlyAuthentications() {\n+        if (this.serverAzureADOnlyAuthentications == null) {\n+            this.serverAzureADOnlyAuthentications =\n+                new ServerAzureADOnlyAuthenticationsImpl(clientObject.getServerAzureADOnlyAuthentications(), this);\n+        }\n+        return serverAzureADOnlyAuthentications;\n+    }\n+\n+    /** @return Resource collection API of ManagedInstances. */\n+    public ManagedInstances managedInstances() {\n+        if (this.managedInstances == null) {\n+            this.managedInstances = new ManagedInstancesImpl(clientObject.getManagedInstances(), this);\n+        }\n+        return managedInstances;\n+    }\n+\n+    /** @return Resource collection API of ManagedInstanceAzureADOnlyAuthentications. */\n+    public ManagedInstanceAzureADOnlyAuthentications managedInstanceAzureADOnlyAuthentications() {\n+        if (this.managedInstanceAzureADOnlyAuthentications == null) {\n+            this.managedInstanceAzureADOnlyAuthentications =\n+                new ManagedInstanceAzureADOnlyAuthenticationsImpl(\n+                    clientObject.getManagedInstanceAzureADOnlyAuthentications(), this);\n+        }\n+        return managedInstanceAzureADOnlyAuthentications;\n+    }\n+\n+    /** @return Resource collection API of ServerTrustGroups. */\n+    public ServerTrustGroups serverTrustGroups() {\n+        if (this.serverTrustGroups == null) {\n+            this.serverTrustGroups = new ServerTrustGroupsImpl(clientObject.getServerTrustGroups(), this);\n+        }\n+        return serverTrustGroups;\n+    }\n+\n+    /** @return Resource collection API of ServerDevOpsAuditSettings. */\n+    public ServerDevOpsAuditSettings serverDevOpsAuditSettings() {\n+        if (this.serverDevOpsAuditSettings == null) {\n+            this.serverDevOpsAuditSettings =\n+                new ServerDevOpsAuditSettingsImpl(clientObject.getServerDevOpsAuditSettings(), this);\n+        }\n+        return serverDevOpsAuditSettings;\n+    }\n+\n+    /** @return Resource collection API of LongTermRetentionBackups. */\n+    public LongTermRetentionBackups longTermRetentionBackups() {\n+        if (this.longTermRetentionBackups == null) {\n+            this.longTermRetentionBackups =\n+                new LongTermRetentionBackupsImpl(clientObject.getLongTermRetentionBackups(), this);\n+        }\n+        return longTermRetentionBackups;\n+    }\n+\n+    /** @return Resource collection API of LongTermRetentionPolicies. */\n+    public LongTermRetentionPolicies longTermRetentionPolicies() {\n+        if (this.longTermRetentionPolicies == null) {\n+            this.longTermRetentionPolicies =\n+                new LongTermRetentionPoliciesImpl(clientObject.getLongTermRetentionPolicies(), this);\n+        }\n+        return longTermRetentionPolicies;\n+    }\n+\n+    /** @return Resource collection API of PrivateEndpointConnections. */\n+    public PrivateEndpointConnections privateEndpointConnections() {\n+        if (this.privateEndpointConnections == null) {\n+            this.privateEndpointConnections =\n+                new PrivateEndpointConnectionsImpl(clientObject.getPrivateEndpointConnections(), this);\n+        }\n+        return privateEndpointConnections;\n+    }\n+\n+    /**\n+     * @return Wrapped service client SqlManagementClient providing direct access to the underlying auto-generated API\n+     *     implementation, based on Azure REST API.\n+     */\n+    public SqlManagementClient serviceClient() {\n+        return this.clientObject;\n+    }\n+}"
  },
  {
    "sha": "b9ed9834b0642b2a1576680cbfb1b4c6f3fc559d",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/BackupShortTermRetentionPoliciesClient.java",
    "status": "added",
    "additions": 278,
    "deletions": 0,
    "changes": 278,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/BackupShortTermRetentionPoliciesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/BackupShortTermRetentionPoliciesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/BackupShortTermRetentionPoliciesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,278 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.sql.generated.fluent.models.BackupShortTermRetentionPolicyInner;\n+import com.azure.resourcemanager.sql.generated.models.ShortTermRetentionPolicyName;\n+\n+/**\n+ * An instance of this class provides access to all the operations defined in BackupShortTermRetentionPoliciesClient.\n+ */\n+public interface BackupShortTermRetentionPoliciesClient {\n+    /**\n+     * Gets a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param policyName The policy name. Should always be \"default\".\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    BackupShortTermRetentionPolicyInner get(\n+        String resourceGroupName, String serverName, String databaseName, ShortTermRetentionPolicyName policyName);\n+\n+    /**\n+     * Gets a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param policyName The policy name. Should always be \"default\".\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<BackupShortTermRetentionPolicyInner> getWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ShortTermRetentionPolicyName policyName,\n+        Context context);\n+\n+    /**\n+     * Updates a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param policyName The policy name. Should always be \"default\".\n+     * @param parameters The short term retention policy info.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<BackupShortTermRetentionPolicyInner>, BackupShortTermRetentionPolicyInner>\n+        beginCreateOrUpdate(\n+            String resourceGroupName,\n+            String serverName,\n+            String databaseName,\n+            ShortTermRetentionPolicyName policyName,\n+            BackupShortTermRetentionPolicyInner parameters);\n+\n+    /**\n+     * Updates a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param policyName The policy name. Should always be \"default\".\n+     * @param parameters The short term retention policy info.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<BackupShortTermRetentionPolicyInner>, BackupShortTermRetentionPolicyInner>\n+        beginCreateOrUpdate(\n+            String resourceGroupName,\n+            String serverName,\n+            String databaseName,\n+            ShortTermRetentionPolicyName policyName,\n+            BackupShortTermRetentionPolicyInner parameters,\n+            Context context);\n+\n+    /**\n+     * Updates a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param policyName The policy name. Should always be \"default\".\n+     * @param parameters The short term retention policy info.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    BackupShortTermRetentionPolicyInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ShortTermRetentionPolicyName policyName,\n+        BackupShortTermRetentionPolicyInner parameters);\n+\n+    /**\n+     * Updates a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param policyName The policy name. Should always be \"default\".\n+     * @param parameters The short term retention policy info.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    BackupShortTermRetentionPolicyInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ShortTermRetentionPolicyName policyName,\n+        BackupShortTermRetentionPolicyInner parameters,\n+        Context context);\n+\n+    /**\n+     * Updates a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param policyName The policy name. Should always be \"default\".\n+     * @param parameters The short term retention policy info.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<BackupShortTermRetentionPolicyInner>, BackupShortTermRetentionPolicyInner> beginUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ShortTermRetentionPolicyName policyName,\n+        BackupShortTermRetentionPolicyInner parameters);\n+\n+    /**\n+     * Updates a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param policyName The policy name. Should always be \"default\".\n+     * @param parameters The short term retention policy info.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<BackupShortTermRetentionPolicyInner>, BackupShortTermRetentionPolicyInner> beginUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ShortTermRetentionPolicyName policyName,\n+        BackupShortTermRetentionPolicyInner parameters,\n+        Context context);\n+\n+    /**\n+     * Updates a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param policyName The policy name. Should always be \"default\".\n+     * @param parameters The short term retention policy info.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    BackupShortTermRetentionPolicyInner update(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ShortTermRetentionPolicyName policyName,\n+        BackupShortTermRetentionPolicyInner parameters);\n+\n+    /**\n+     * Updates a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param policyName The policy name. Should always be \"default\".\n+     * @param parameters The short term retention policy info.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    BackupShortTermRetentionPolicyInner update(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ShortTermRetentionPolicyName policyName,\n+        BackupShortTermRetentionPolicyInner parameters,\n+        Context context);\n+\n+    /**\n+     * Gets a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BackupShortTermRetentionPolicyInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Gets a database's short term retention policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's short term retention policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BackupShortTermRetentionPolicyInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+}"
  },
  {
    "sha": "6bf4b18d0a3d50b39947d8bd2d95618d55d8f5d6",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/CapabilitiesClient.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/CapabilitiesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/CapabilitiesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/CapabilitiesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,42 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.LocationCapabilitiesInner;\n+import com.azure.resourcemanager.sql.generated.models.CapabilityGroup;\n+\n+/** An instance of this class provides access to all the operations defined in CapabilitiesClient. */\n+public interface CapabilitiesClient {\n+    /**\n+     * Gets the subscription capabilities available for the specified location.\n+     *\n+     * @param locationName The location name whose capabilities are retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the subscription capabilities available for the specified location.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    LocationCapabilitiesInner listByLocation(String locationName);\n+\n+    /**\n+     * Gets the subscription capabilities available for the specified location.\n+     *\n+     * @param locationName The location name whose capabilities are retrieved.\n+     * @param include If specified, restricts the response to only include the selected item.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the subscription capabilities available for the specified location.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<LocationCapabilitiesInner> listByLocationWithResponse(\n+        String locationName, CapabilityGroup include, Context context);\n+}"
  },
  {
    "sha": "92445c9500760c6ba580a4f11a2503faf0577f81",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DataMaskingPoliciesClient.java",
    "status": "added",
    "additions": 85,
    "deletions": 0,
    "changes": 85,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DataMaskingPoliciesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DataMaskingPoliciesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DataMaskingPoliciesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,85 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DataMaskingPolicyInner;\n+\n+/** An instance of this class provides access to all the operations defined in DataMaskingPoliciesClient. */\n+public interface DataMaskingPoliciesClient {\n+    /**\n+     * Creates or updates a database data masking policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters Parameters for creating or updating a data masking policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents a database data masking policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataMaskingPolicyInner createOrUpdate(\n+        String resourceGroupName, String serverName, String databaseName, DataMaskingPolicyInner parameters);\n+\n+    /**\n+     * Creates or updates a database data masking policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters Parameters for creating or updating a data masking policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents a database data masking policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DataMaskingPolicyInner> createOrUpdateWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        DataMaskingPolicyInner parameters,\n+        Context context);\n+\n+    /**\n+     * Gets a database data masking policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database data masking policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataMaskingPolicyInner get(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Gets a database data masking policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database data masking policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DataMaskingPolicyInner> getWithResponse(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+}"
  },
  {
    "sha": "bcb930f2c7316695485e6d4389f271664fee1837",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DataMaskingRulesClient.java",
    "status": "added",
    "additions": 94,
    "deletions": 0,
    "changes": 94,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DataMaskingRulesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DataMaskingRulesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DataMaskingRulesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,94 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DataMaskingRuleInner;\n+\n+/** An instance of this class provides access to all the operations defined in DataMaskingRulesClient. */\n+public interface DataMaskingRulesClient {\n+    /**\n+     * Creates or updates a database data masking rule.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param dataMaskingRuleName The name of the data masking rule.\n+     * @param parameters The required parameters for creating or updating a data masking rule.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents a database data masking rule.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataMaskingRuleInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        String dataMaskingRuleName,\n+        DataMaskingRuleInner parameters);\n+\n+    /**\n+     * Creates or updates a database data masking rule.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param dataMaskingRuleName The name of the data masking rule.\n+     * @param parameters The required parameters for creating or updating a data masking rule.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents a database data masking rule.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DataMaskingRuleInner> createOrUpdateWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        String dataMaskingRuleName,\n+        DataMaskingRuleInner parameters,\n+        Context context);\n+\n+    /**\n+     * Gets a list of database data masking rules.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of database data masking rules.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DataMaskingRuleInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Gets a list of database data masking rules.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of database data masking rules.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DataMaskingRuleInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+}"
  },
  {
    "sha": "f5a7bedd72e30a4c4cc17d8e97aba2df506a0760",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseAutomaticTuningsClient.java",
    "status": "added",
    "additions": 85,
    "deletions": 0,
    "changes": 85,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseAutomaticTuningsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseAutomaticTuningsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseAutomaticTuningsClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,85 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseAutomaticTuningInner;\n+\n+/** An instance of this class provides access to all the operations defined in DatabaseAutomaticTuningsClient. */\n+public interface DatabaseAutomaticTuningsClient {\n+    /**\n+     * Gets a database's automatic tuning.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's automatic tuning.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAutomaticTuningInner get(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Gets a database's automatic tuning.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's automatic tuning.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAutomaticTuningInner> getWithResponse(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Update automatic tuning properties for target database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The requested automatic tuning resource state.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return database-level Automatic Tuning.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAutomaticTuningInner update(\n+        String resourceGroupName, String serverName, String databaseName, DatabaseAutomaticTuningInner parameters);\n+\n+    /**\n+     * Update automatic tuning properties for target database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The requested automatic tuning resource state.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return database-level Automatic Tuning.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAutomaticTuningInner> updateWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        DatabaseAutomaticTuningInner parameters,\n+        Context context);\n+}"
  },
  {
    "sha": "2e963196db63d7efba465418fd2fcd9ae3188004",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseBlobAuditingPoliciesClient.java",
    "status": "added",
    "additions": 119,
    "deletions": 0,
    "changes": 119,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseBlobAuditingPoliciesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseBlobAuditingPoliciesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseBlobAuditingPoliciesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,119 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseBlobAuditingPolicyInner;\n+\n+/** An instance of this class provides access to all the operations defined in DatabaseBlobAuditingPoliciesClient. */\n+public interface DatabaseBlobAuditingPoliciesClient {\n+    /**\n+     * Gets a database's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseBlobAuditingPolicyInner get(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Gets a database's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseBlobAuditingPolicyInner> getWithResponse(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Creates or updates a database's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The database blob auditing policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseBlobAuditingPolicyInner createOrUpdate(\n+        String resourceGroupName, String serverName, String databaseName, DatabaseBlobAuditingPolicyInner parameters);\n+\n+    /**\n+     * Creates or updates a database's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The database blob auditing policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseBlobAuditingPolicyInner> createOrUpdateWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        DatabaseBlobAuditingPolicyInner parameters,\n+        Context context);\n+\n+    /**\n+     * Lists auditing settings of a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of database auditing settings.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseBlobAuditingPolicyInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Lists auditing settings of a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of database auditing settings.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseBlobAuditingPolicyInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+}"
  },
  {
    "sha": "395ffaed5a4868cebba19ac83c658eb8fe2775b2",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseOperationsClient.java",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseOperationsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseOperationsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseOperationsClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,82 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseOperationInner;\n+import java.util.UUID;\n+\n+/** An instance of this class provides access to all the operations defined in DatabaseOperationsClient. */\n+public interface DatabaseOperationsClient {\n+    /**\n+     * Cancels the asynchronous operation on the database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param operationId The operation identifier.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void cancel(String resourceGroupName, String serverName, String databaseName, UUID operationId);\n+\n+    /**\n+     * Cancels the asynchronous operation on the database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param operationId The operation identifier.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<Void> cancelWithResponse(\n+        String resourceGroupName, String serverName, String databaseName, UUID operationId, Context context);\n+\n+    /**\n+     * Gets a list of operations performed on the database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of operations performed on the database.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseOperationInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Gets a list of operations performed on the database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of operations performed on the database.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseOperationInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+}"
  },
  {
    "sha": "345dc36c5686a6c0f803efea9e1f7e9c5cdd9b06",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseThreatDetectionPoliciesClient.java",
    "status": "added",
    "additions": 103,
    "deletions": 0,
    "changes": 103,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseThreatDetectionPoliciesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseThreatDetectionPoliciesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseThreatDetectionPoliciesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,103 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseSecurityAlertPolicyInner;\n+import com.azure.resourcemanager.sql.generated.models.SecurityAlertPolicyName;\n+\n+/** An instance of this class provides access to all the operations defined in DatabaseThreatDetectionPoliciesClient. */\n+public interface DatabaseThreatDetectionPoliciesClient {\n+    /**\n+     * Gets a database's threat detection policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which database Threat Detection policy is defined.\n+     * @param securityAlertPolicyName The name of the security alert policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's threat detection policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseSecurityAlertPolicyInner get(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        SecurityAlertPolicyName securityAlertPolicyName);\n+\n+    /**\n+     * Gets a database's threat detection policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which database Threat Detection policy is defined.\n+     * @param securityAlertPolicyName The name of the security alert policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's threat detection policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseSecurityAlertPolicyInner> getWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        SecurityAlertPolicyName securityAlertPolicyName,\n+        Context context);\n+\n+    /**\n+     * Creates or updates a database's threat detection policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which database Threat Detection policy is defined.\n+     * @param securityAlertPolicyName The name of the security alert policy.\n+     * @param parameters The database Threat Detection policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return contains information about a database Threat Detection policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseSecurityAlertPolicyInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        SecurityAlertPolicyName securityAlertPolicyName,\n+        DatabaseSecurityAlertPolicyInner parameters);\n+\n+    /**\n+     * Creates or updates a database's threat detection policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which database Threat Detection policy is defined.\n+     * @param securityAlertPolicyName The name of the security alert policy.\n+     * @param parameters The database Threat Detection policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return contains information about a database Threat Detection policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseSecurityAlertPolicyInner> createOrUpdateWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        SecurityAlertPolicyName securityAlertPolicyName,\n+        DatabaseSecurityAlertPolicyInner parameters,\n+        Context context);\n+}"
  },
  {
    "sha": "d409d9038613e2118d33aa48ecc7b6ff293529f0",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseUsagesClient.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseUsagesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseUsagesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseUsagesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,46 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseUsageInner;\n+\n+/** An instance of this class provides access to all the operations defined in DatabaseUsagesClient. */\n+public interface DatabaseUsagesClient {\n+    /**\n+     * Returns database usages.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list database metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseUsageInner> listByDatabase(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Returns database usages.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list database metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseUsageInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+}"
  },
  {
    "sha": "1c6776cbc9743dcdab4b7b689e7a41316f429177",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentRuleBaselinesClient.java",
    "status": "added",
    "additions": 178,
    "deletions": 0,
    "changes": 178,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentRuleBaselinesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentRuleBaselinesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentRuleBaselinesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,178 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseVulnerabilityAssessmentRuleBaselineInner;\n+import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentName;\n+import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentPolicyBaselineName;\n+\n+/**\n+ * An instance of this class provides access to all the operations defined in\n+ * DatabaseVulnerabilityAssessmentRuleBaselinesClient.\n+ */\n+public interface DatabaseVulnerabilityAssessmentRuleBaselinesClient {\n+    /**\n+     * Gets a database's vulnerability assessment rule baseline.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment rule baseline is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param ruleId The vulnerability assessment rule ID.\n+     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a\n+     *     database level rule and master for server level rule).\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's vulnerability assessment rule baseline.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseVulnerabilityAssessmentRuleBaselineInner get(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String ruleId,\n+        VulnerabilityAssessmentPolicyBaselineName baselineName);\n+\n+    /**\n+     * Gets a database's vulnerability assessment rule baseline.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment rule baseline is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param ruleId The vulnerability assessment rule ID.\n+     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a\n+     *     database level rule and master for server level rule).\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database's vulnerability assessment rule baseline.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseVulnerabilityAssessmentRuleBaselineInner> getWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String ruleId,\n+        VulnerabilityAssessmentPolicyBaselineName baselineName,\n+        Context context);\n+\n+    /**\n+     * Creates or updates a database's vulnerability assessment rule baseline.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment rule baseline is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param ruleId The vulnerability assessment rule ID.\n+     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a\n+     *     database level rule and master for server level rule).\n+     * @param parameters The requested rule baseline resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database vulnerability assessment rule baseline.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseVulnerabilityAssessmentRuleBaselineInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String ruleId,\n+        VulnerabilityAssessmentPolicyBaselineName baselineName,\n+        DatabaseVulnerabilityAssessmentRuleBaselineInner parameters);\n+\n+    /**\n+     * Creates or updates a database's vulnerability assessment rule baseline.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment rule baseline is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param ruleId The vulnerability assessment rule ID.\n+     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a\n+     *     database level rule and master for server level rule).\n+     * @param parameters The requested rule baseline resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database vulnerability assessment rule baseline.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseVulnerabilityAssessmentRuleBaselineInner> createOrUpdateWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String ruleId,\n+        VulnerabilityAssessmentPolicyBaselineName baselineName,\n+        DatabaseVulnerabilityAssessmentRuleBaselineInner parameters,\n+        Context context);\n+\n+    /**\n+     * Removes the database's vulnerability assessment rule baseline.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment rule baseline is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param ruleId The vulnerability assessment rule ID.\n+     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a\n+     *     database level rule and master for server level rule).\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String ruleId,\n+        VulnerabilityAssessmentPolicyBaselineName baselineName);\n+\n+    /**\n+     * Removes the database's vulnerability assessment rule baseline.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment rule baseline is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param ruleId The vulnerability assessment rule ID.\n+     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a baseline on a\n+     *     database level rule and master for server level rule).\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<Void> deleteWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String ruleId,\n+        VulnerabilityAssessmentPolicyBaselineName baselineName,\n+        Context context);\n+}"
  },
  {
    "sha": "3cfc3b5b3c6dc7e4bebd4a45d4543cca344e8305",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentScansClient.java",
    "status": "added",
    "additions": 246,
    "deletions": 0,
    "changes": 246,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentScansClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentScansClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentScansClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,246 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseVulnerabilityAssessmentScansExportInner;\n+import com.azure.resourcemanager.sql.generated.fluent.models.VulnerabilityAssessmentScanRecordInner;\n+import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentName;\n+\n+/**\n+ * An instance of this class provides access to all the operations defined in\n+ * DatabaseVulnerabilityAssessmentScansClient.\n+ */\n+public interface DatabaseVulnerabilityAssessmentScansClient {\n+    /**\n+     * Lists the vulnerability assessment scans of a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of vulnerability assessment scan records.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<VulnerabilityAssessmentScanRecordInner> listByDatabase(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName);\n+\n+    /**\n+     * Lists the vulnerability assessment scans of a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of vulnerability assessment scan records.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<VulnerabilityAssessmentScanRecordInner> listByDatabase(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        Context context);\n+\n+    /**\n+     * Gets a vulnerability assessment scan record of a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a vulnerability assessment scan record of a database.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    VulnerabilityAssessmentScanRecordInner get(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String scanId);\n+\n+    /**\n+     * Gets a vulnerability assessment scan record of a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a vulnerability assessment scan record of a database.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<VulnerabilityAssessmentScanRecordInner> getWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String scanId,\n+        Context context);\n+\n+    /**\n+     * Executes a Vulnerability Assessment database scan.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginInitiateScan(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String scanId);\n+\n+    /**\n+     * Executes a Vulnerability Assessment database scan.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginInitiateScan(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String scanId,\n+        Context context);\n+\n+    /**\n+     * Executes a Vulnerability Assessment database scan.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void initiateScan(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String scanId);\n+\n+    /**\n+     * Executes a Vulnerability Assessment database scan.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void initiateScan(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String scanId,\n+        Context context);\n+\n+    /**\n+     * Convert an existing scan result to a human readable format. If already exists nothing happens.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the scanned database.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param scanId The vulnerability assessment scan Id.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database Vulnerability Assessment scan export resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseVulnerabilityAssessmentScansExportInner export(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String scanId);\n+\n+    /**\n+     * Convert an existing scan result to a human readable format. If already exists nothing happens.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the scanned database.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param scanId The vulnerability assessment scan Id.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database Vulnerability Assessment scan export resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseVulnerabilityAssessmentScansExportInner> exportWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        String scanId,\n+        Context context);\n+}"
  },
  {
    "sha": "5a3265d7016913e5cd5df2c5dde64868c8364dfd",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentsClient.java",
    "status": "added",
    "additions": 180,
    "deletions": 0,
    "changes": 180,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabaseVulnerabilityAssessmentsClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,180 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseVulnerabilityAssessmentInner;\n+import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentName;\n+\n+/**\n+ * An instance of this class provides access to all the operations defined in DatabaseVulnerabilityAssessmentsClient.\n+ */\n+public interface DatabaseVulnerabilityAssessmentsClient {\n+    /**\n+     * Gets the database's vulnerability assessment.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the database's vulnerability assessment.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseVulnerabilityAssessmentInner get(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName);\n+\n+    /**\n+     * Gets the database's vulnerability assessment.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the database's vulnerability assessment.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseVulnerabilityAssessmentInner> getWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        Context context);\n+\n+    /**\n+     * Creates or updates the database's vulnerability assessment.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param parameters The requested resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database vulnerability assessment.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseVulnerabilityAssessmentInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        DatabaseVulnerabilityAssessmentInner parameters);\n+\n+    /**\n+     * Creates or updates the database's vulnerability assessment.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param parameters The requested resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database vulnerability assessment.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseVulnerabilityAssessmentInner> createOrUpdateWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        DatabaseVulnerabilityAssessmentInner parameters,\n+        Context context);\n+\n+    /**\n+     * Removes the database's vulnerability assessment.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName);\n+\n+    /**\n+     * Removes the database's vulnerability assessment.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment is defined.\n+     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<Void> deleteWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        VulnerabilityAssessmentName vulnerabilityAssessmentName,\n+        Context context);\n+\n+    /**\n+     * Lists the vulnerability assessment policies associated with a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment policies are defined.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of the database's vulnerability assessments.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseVulnerabilityAssessmentInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Lists the vulnerability assessment policies associated with a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database for which the vulnerability assessment policies are defined.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of the database's vulnerability assessments.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseVulnerabilityAssessmentInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+}"
  },
  {
    "sha": "0d7fb193edbb5d9ba80df3e6ed51c48e432f2f02",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabasesClient.java",
    "status": "added",
    "additions": 800,
    "deletions": 0,
    "changes": 800,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabasesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabasesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/DatabasesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,800 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseInner;\n+import com.azure.resourcemanager.sql.generated.fluent.models.ImportExportOperationResultInner;\n+import com.azure.resourcemanager.sql.generated.fluent.models.MetricDefinitionInner;\n+import com.azure.resourcemanager.sql.generated.fluent.models.MetricInner;\n+import com.azure.resourcemanager.sql.generated.models.DatabaseUpdate;\n+import com.azure.resourcemanager.sql.generated.models.ExportDatabaseDefinition;\n+import com.azure.resourcemanager.sql.generated.models.ReplicaType;\n+import com.azure.resourcemanager.sql.generated.models.ResourceMoveDefinition;\n+\n+/** An instance of this class provides access to all the operations defined in DatabasesClient. */\n+public interface DatabasesClient {\n+    /**\n+     * Returns database metrics.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param filter An OData filter expression that describes a subset of metrics to return.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list database metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String serverName, String databaseName, String filter);\n+\n+    /**\n+     * Returns database metrics.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param filter An OData filter expression that describes a subset of metrics to return.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list database metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String serverName, String databaseName, String filter, Context context);\n+\n+    /**\n+     * Returns database metric definitions.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list database metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Returns database metric definitions.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list database metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Exports a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The database export request parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an ImportExport operation result resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ImportExportOperationResultInner>, ImportExportOperationResultInner> beginExport(\n+        String resourceGroupName, String serverName, String databaseName, ExportDatabaseDefinition parameters);\n+\n+    /**\n+     * Exports a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The database export request parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an ImportExport operation result resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ImportExportOperationResultInner>, ImportExportOperationResultInner> beginExport(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ExportDatabaseDefinition parameters,\n+        Context context);\n+\n+    /**\n+     * Exports a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The database export request parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an ImportExport operation result resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ImportExportOperationResultInner export(\n+        String resourceGroupName, String serverName, String databaseName, ExportDatabaseDefinition parameters);\n+\n+    /**\n+     * Exports a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The database export request parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an ImportExport operation result resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ImportExportOperationResultInner export(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ExportDatabaseDefinition parameters,\n+        Context context);\n+\n+    /**\n+     * Gets a list of databases.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of databases.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseInner> listByServer(String resourceGroupName, String serverName);\n+\n+    /**\n+     * Gets a list of databases.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of databases.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseInner> listByServer(String resourceGroupName, String serverName, Context context);\n+\n+    /**\n+     * Gets a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseInner get(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Gets a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseInner> getWithResponse(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Creates a new database or updates an existing database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The requested database resource state.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseInner>, DatabaseInner> beginCreateOrUpdate(\n+        String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters);\n+\n+    /**\n+     * Creates a new database or updates an existing database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The requested database resource state.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseInner>, DatabaseInner> beginCreateOrUpdate(\n+        String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters, Context context);\n+\n+    /**\n+     * Creates a new database or updates an existing database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The requested database resource state.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseInner createOrUpdate(\n+        String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters);\n+\n+    /**\n+     * Creates a new database or updates an existing database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The requested database resource state.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseInner createOrUpdate(\n+        String resourceGroupName, String serverName, String databaseName, DatabaseInner parameters, Context context);\n+\n+    /**\n+     * Deletes the database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Deletes the database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Deletes the database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Deletes the database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Updates an existing database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The requested database resource state.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseInner>, DatabaseInner> beginUpdate(\n+        String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters);\n+\n+    /**\n+     * Updates an existing database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The requested database resource state.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseInner>, DatabaseInner> beginUpdate(\n+        String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters, Context context);\n+\n+    /**\n+     * Updates an existing database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The requested database resource state.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseInner update(String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters);\n+\n+    /**\n+     * Updates an existing database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The requested database resource state.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseInner update(\n+        String resourceGroupName, String serverName, String databaseName, DatabaseUpdate parameters, Context context);\n+\n+    /**\n+     * Gets a list of databases in an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of databases in an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseInner> listByElasticPool(String resourceGroupName, String serverName, String elasticPoolName);\n+\n+    /**\n+     * Gets a list of databases in an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of databases in an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseInner> listByElasticPool(\n+        String resourceGroupName, String serverName, String elasticPoolName, Context context);\n+\n+    /**\n+     * Pauses a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be paused.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseInner>, DatabaseInner> beginPause(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Pauses a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be paused.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseInner>, DatabaseInner> beginPause(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Pauses a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be paused.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseInner pause(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Pauses a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be paused.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseInner pause(String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Resumes a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be resumed.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseInner>, DatabaseInner> beginResume(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Resumes a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be resumed.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseInner>, DatabaseInner> beginResume(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Resumes a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be resumed.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseInner resume(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Resumes a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be resumed.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseInner resume(String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Failovers a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to failover.\n+     * @param replicaType The type of replica to be failed over.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginFailover(\n+        String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType);\n+\n+    /**\n+     * Failovers a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to failover.\n+     * @param replicaType The type of replica to be failed over.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginFailover(\n+        String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType, Context context);\n+\n+    /**\n+     * Failovers a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to failover.\n+     * @param replicaType The type of replica to be failed over.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void failover(String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType);\n+\n+    /**\n+     * Failovers a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to failover.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void failover(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Failovers a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to failover.\n+     * @param replicaType The type of replica to be failed over.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void failover(\n+        String resourceGroupName, String serverName, String databaseName, ReplicaType replicaType, Context context);\n+\n+    /**\n+     * Gets a list of inaccessible databases in a logical server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of inaccessible databases in a logical server.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseInner> listInaccessibleByServer(String resourceGroupName, String serverName);\n+\n+    /**\n+     * Gets a list of inaccessible databases in a logical server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of inaccessible databases in a logical server.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseInner> listInaccessibleByServer(String resourceGroupName, String serverName, Context context);\n+\n+    /**\n+     * Upgrades a data warehouse.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be upgraded.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginUpgradeDataWarehouse(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Upgrades a data warehouse.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be upgraded.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginUpgradeDataWarehouse(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Upgrades a data warehouse.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be upgraded.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void upgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Upgrades a data warehouse.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to be upgraded.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void upgradeDataWarehouse(String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Renames a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to rename.\n+     * @param parameters The resource move definition for renaming this database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void rename(String resourceGroupName, String serverName, String databaseName, ResourceMoveDefinition parameters);\n+\n+    /**\n+     * Renames a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database to rename.\n+     * @param parameters The resource move definition for renaming this database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<Void> renameWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ResourceMoveDefinition parameters,\n+        Context context);\n+}"
  },
  {
    "sha": "acee0633e1e37f9a8b59d665f50adf36686dd952",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolActivitiesClient.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolActivitiesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolActivitiesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolActivitiesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,47 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.ElasticPoolActivityInner;\n+\n+/** An instance of this class provides access to all the operations defined in ElasticPoolActivitiesClient. */\n+public interface ElasticPoolActivitiesClient {\n+    /**\n+     * Returns elastic pool activities.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool for which to get the current activity.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents the response to a list elastic pool activity request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ElasticPoolActivityInner> listByElasticPool(\n+        String resourceGroupName, String serverName, String elasticPoolName);\n+\n+    /**\n+     * Returns elastic pool activities.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool for which to get the current activity.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents the response to a list elastic pool activity request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ElasticPoolActivityInner> listByElasticPool(\n+        String resourceGroupName, String serverName, String elasticPoolName, Context context);\n+}"
  },
  {
    "sha": "9c7d33d6e77b7dd37f82e364fb4fb255420bb7b0",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolDatabaseActivitiesClient.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolDatabaseActivitiesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolDatabaseActivitiesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolDatabaseActivitiesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,47 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.ElasticPoolDatabaseActivityInner;\n+\n+/** An instance of this class provides access to all the operations defined in ElasticPoolDatabaseActivitiesClient. */\n+public interface ElasticPoolDatabaseActivitiesClient {\n+    /**\n+     * Returns activity on databases inside of an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents the response to a list elastic pool database activity request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ElasticPoolDatabaseActivityInner> listByElasticPool(\n+        String resourceGroupName, String serverName, String elasticPoolName);\n+\n+    /**\n+     * Returns activity on databases inside of an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents the response to a list elastic pool database activity request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ElasticPoolDatabaseActivityInner> listByElasticPool(\n+        String resourceGroupName, String serverName, String elasticPoolName, Context context);\n+}"
  },
  {
    "sha": "e6bc24f2a58d79a918281d935e163b337cdc5d58",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolOperationsClient.java",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolOperationsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolOperationsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolOperationsClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,82 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.ElasticPoolOperationInner;\n+import java.util.UUID;\n+\n+/** An instance of this class provides access to all the operations defined in ElasticPoolOperationsClient. */\n+public interface ElasticPoolOperationsClient {\n+    /**\n+     * Cancels the asynchronous operation on the elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The elasticPoolName parameter.\n+     * @param operationId The operation identifier.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void cancel(String resourceGroupName, String serverName, String elasticPoolName, UUID operationId);\n+\n+    /**\n+     * Cancels the asynchronous operation on the elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The elasticPoolName parameter.\n+     * @param operationId The operation identifier.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<Void> cancelWithResponse(\n+        String resourceGroupName, String serverName, String elasticPoolName, UUID operationId, Context context);\n+\n+    /**\n+     * Gets a list of operations performed on the elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The elasticPoolName parameter.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of operations performed on the elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ElasticPoolOperationInner> listByElasticPool(\n+        String resourceGroupName, String serverName, String elasticPoolName);\n+\n+    /**\n+     * Gets a list of operations performed on the elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The elasticPoolName parameter.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of operations performed on the elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ElasticPoolOperationInner> listByElasticPool(\n+        String resourceGroupName, String serverName, String elasticPoolName, Context context);\n+}"
  },
  {
    "sha": "a3b2f4cbed0d3e7f67295a9285028f31c4a340ae",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolsClient.java",
    "status": "added",
    "additions": 430,
    "deletions": 0,
    "changes": 430,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ElasticPoolsClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,430 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.sql.generated.fluent.models.ElasticPoolInner;\n+import com.azure.resourcemanager.sql.generated.fluent.models.MetricDefinitionInner;\n+import com.azure.resourcemanager.sql.generated.fluent.models.MetricInner;\n+import com.azure.resourcemanager.sql.generated.models.ElasticPoolUpdate;\n+\n+/** An instance of this class provides access to all the operations defined in ElasticPoolsClient. */\n+public interface ElasticPoolsClient {\n+    /**\n+     * Returns elastic pool metrics.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param filter An OData filter expression that describes a subset of metrics to return.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list database metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String serverName, String elasticPoolName, String filter);\n+\n+    /**\n+     * Returns elastic pool metrics.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param filter An OData filter expression that describes a subset of metrics to return.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list database metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String serverName, String elasticPoolName, String filter, Context context);\n+\n+    /**\n+     * Returns elastic pool metric definitions.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list database metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String serverName, String elasticPoolName);\n+\n+    /**\n+     * Returns elastic pool metric definitions.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list database metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String serverName, String elasticPoolName, Context context);\n+\n+    /**\n+     * Gets all elastic pools in a server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all elastic pools in a server.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ElasticPoolInner> listByServer(String resourceGroupName, String serverName);\n+\n+    /**\n+     * Gets all elastic pools in a server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param skip The number of elements in the collection to skip.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all elastic pools in a server.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ElasticPoolInner> listByServer(\n+        String resourceGroupName, String serverName, Integer skip, Context context);\n+\n+    /**\n+     * Gets an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ElasticPoolInner get(String resourceGroupName, String serverName, String elasticPoolName);\n+\n+    /**\n+     * Gets an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ElasticPoolInner> getWithResponse(\n+        String resourceGroupName, String serverName, String elasticPoolName, Context context);\n+\n+    /**\n+     * Creates or updates an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param parameters The elastic pool parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ElasticPoolInner>, ElasticPoolInner> beginCreateOrUpdate(\n+        String resourceGroupName, String serverName, String elasticPoolName, ElasticPoolInner parameters);\n+\n+    /**\n+     * Creates or updates an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param parameters The elastic pool parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ElasticPoolInner>, ElasticPoolInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String elasticPoolName,\n+        ElasticPoolInner parameters,\n+        Context context);\n+\n+    /**\n+     * Creates or updates an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param parameters The elastic pool parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ElasticPoolInner createOrUpdate(\n+        String resourceGroupName, String serverName, String elasticPoolName, ElasticPoolInner parameters);\n+\n+    /**\n+     * Creates or updates an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param parameters The elastic pool parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ElasticPoolInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String elasticPoolName,\n+        ElasticPoolInner parameters,\n+        Context context);\n+\n+    /**\n+     * Deletes an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String serverName, String elasticPoolName);\n+\n+    /**\n+     * Deletes an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String serverName, String elasticPoolName, Context context);\n+\n+    /**\n+     * Deletes an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String serverName, String elasticPoolName);\n+\n+    /**\n+     * Deletes an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String serverName, String elasticPoolName, Context context);\n+\n+    /**\n+     * Updates an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param parameters The elastic pool update parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ElasticPoolInner>, ElasticPoolInner> beginUpdate(\n+        String resourceGroupName, String serverName, String elasticPoolName, ElasticPoolUpdate parameters);\n+\n+    /**\n+     * Updates an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param parameters The elastic pool update parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ElasticPoolInner>, ElasticPoolInner> beginUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String elasticPoolName,\n+        ElasticPoolUpdate parameters,\n+        Context context);\n+\n+    /**\n+     * Updates an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param parameters The elastic pool update parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ElasticPoolInner update(\n+        String resourceGroupName, String serverName, String elasticPoolName, ElasticPoolUpdate parameters);\n+\n+    /**\n+     * Updates an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool.\n+     * @param parameters The elastic pool update parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an elastic pool.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ElasticPoolInner update(\n+        String resourceGroupName,\n+        String serverName,\n+        String elasticPoolName,\n+        ElasticPoolUpdate parameters,\n+        Context context);\n+\n+    /**\n+     * Failovers an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool to failover.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginFailover(\n+        String resourceGroupName, String serverName, String elasticPoolName);\n+\n+    /**\n+     * Failovers an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool to failover.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginFailover(\n+        String resourceGroupName, String serverName, String elasticPoolName, Context context);\n+\n+    /**\n+     * Failovers an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool to failover.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void failover(String resourceGroupName, String serverName, String elasticPoolName);\n+\n+    /**\n+     * Failovers an elastic pool.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param elasticPoolName The name of the elastic pool to failover.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void failover(String resourceGroupName, String serverName, String elasticPoolName, Context context);\n+}"
  },
  {
    "sha": "8d6f33007cd0c766b765a47331d1faf6549f2a04",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/EncryptionProtectorsClient.java",
    "status": "added",
    "additions": 227,
    "deletions": 0,
    "changes": 227,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/EncryptionProtectorsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/EncryptionProtectorsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/EncryptionProtectorsClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,227 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.sql.generated.fluent.models.EncryptionProtectorInner;\n+import com.azure.resourcemanager.sql.generated.models.EncryptionProtectorName;\n+\n+/** An instance of this class provides access to all the operations defined in EncryptionProtectorsClient. */\n+public interface EncryptionProtectorsClient {\n+    /**\n+     * Revalidates an existing encryption protector.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param encryptionProtectorName The name of the encryption protector to be updated.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRevalidate(\n+        String resourceGroupName, String serverName, EncryptionProtectorName encryptionProtectorName);\n+\n+    /**\n+     * Revalidates an existing encryption protector.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param encryptionProtectorName The name of the encryption protector to be updated.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRevalidate(\n+        String resourceGroupName, String serverName, EncryptionProtectorName encryptionProtectorName, Context context);\n+\n+    /**\n+     * Revalidates an existing encryption protector.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param encryptionProtectorName The name of the encryption protector to be updated.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void revalidate(String resourceGroupName, String serverName, EncryptionProtectorName encryptionProtectorName);\n+\n+    /**\n+     * Revalidates an existing encryption protector.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param encryptionProtectorName The name of the encryption protector to be updated.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void revalidate(\n+        String resourceGroupName, String serverName, EncryptionProtectorName encryptionProtectorName, Context context);\n+\n+    /**\n+     * Gets a list of server encryption protectors.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of server encryption protectors.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<EncryptionProtectorInner> listByServer(String resourceGroupName, String serverName);\n+\n+    /**\n+     * Gets a list of server encryption protectors.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of server encryption protectors.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<EncryptionProtectorInner> listByServer(String resourceGroupName, String serverName, Context context);\n+\n+    /**\n+     * Gets a server encryption protector.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param encryptionProtectorName The name of the encryption protector to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a server encryption protector.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EncryptionProtectorInner get(\n+        String resourceGroupName, String serverName, EncryptionProtectorName encryptionProtectorName);\n+\n+    /**\n+     * Gets a server encryption protector.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param encryptionProtectorName The name of the encryption protector to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a server encryption protector.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<EncryptionProtectorInner> getWithResponse(\n+        String resourceGroupName, String serverName, EncryptionProtectorName encryptionProtectorName, Context context);\n+\n+    /**\n+     * Updates an existing encryption protector.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param encryptionProtectorName The name of the encryption protector to be updated.\n+     * @param parameters The requested encryption protector resource state.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the server encryption protector.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<EncryptionProtectorInner>, EncryptionProtectorInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        EncryptionProtectorName encryptionProtectorName,\n+        EncryptionProtectorInner parameters);\n+\n+    /**\n+     * Updates an existing encryption protector.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param encryptionProtectorName The name of the encryption protector to be updated.\n+     * @param parameters The requested encryption protector resource state.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the server encryption protector.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<EncryptionProtectorInner>, EncryptionProtectorInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        EncryptionProtectorName encryptionProtectorName,\n+        EncryptionProtectorInner parameters,\n+        Context context);\n+\n+    /**\n+     * Updates an existing encryption protector.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param encryptionProtectorName The name of the encryption protector to be updated.\n+     * @param parameters The requested encryption protector resource state.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the server encryption protector.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EncryptionProtectorInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        EncryptionProtectorName encryptionProtectorName,\n+        EncryptionProtectorInner parameters);\n+\n+    /**\n+     * Updates an existing encryption protector.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param encryptionProtectorName The name of the encryption protector to be updated.\n+     * @param parameters The requested encryption protector resource state.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the server encryption protector.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EncryptionProtectorInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        EncryptionProtectorName encryptionProtectorName,\n+        EncryptionProtectorInner parameters,\n+        Context context);\n+}"
  },
  {
    "sha": "a100051d1f8b38327c0ceaf1ea133299058637cf",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ExtendedDatabaseBlobAuditingPoliciesClient.java",
    "status": "added",
    "additions": 125,
    "deletions": 0,
    "changes": 125,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ExtendedDatabaseBlobAuditingPoliciesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ExtendedDatabaseBlobAuditingPoliciesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ExtendedDatabaseBlobAuditingPoliciesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,125 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.ExtendedDatabaseBlobAuditingPolicyInner;\n+\n+/**\n+ * An instance of this class provides access to all the operations defined in\n+ * ExtendedDatabaseBlobAuditingPoliciesClient.\n+ */\n+public interface ExtendedDatabaseBlobAuditingPoliciesClient {\n+    /**\n+     * Gets an extended database's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an extended database's blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExtendedDatabaseBlobAuditingPolicyInner get(String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Gets an extended database's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an extended database's blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExtendedDatabaseBlobAuditingPolicyInner> getWithResponse(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+\n+    /**\n+     * Creates or updates an extended database's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The extended database blob auditing policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an extended database blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExtendedDatabaseBlobAuditingPolicyInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ExtendedDatabaseBlobAuditingPolicyInner parameters);\n+\n+    /**\n+     * Creates or updates an extended database's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The extended database blob auditing policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an extended database blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExtendedDatabaseBlobAuditingPolicyInner> createOrUpdateWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ExtendedDatabaseBlobAuditingPolicyInner parameters,\n+        Context context);\n+\n+    /**\n+     * Lists extended auditing settings of a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of database extended auditing settings.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExtendedDatabaseBlobAuditingPolicyInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Lists extended auditing settings of a database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of database extended auditing settings.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExtendedDatabaseBlobAuditingPolicyInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+}"
  },
  {
    "sha": "4e757ce0422333a1a791829f42182b81553daab0",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ExtendedServerBlobAuditingPoliciesClient.java",
    "status": "added",
    "additions": 150,
    "deletions": 0,
    "changes": 150,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ExtendedServerBlobAuditingPoliciesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ExtendedServerBlobAuditingPoliciesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ExtendedServerBlobAuditingPoliciesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,150 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.sql.generated.fluent.models.ExtendedServerBlobAuditingPolicyInner;\n+\n+/**\n+ * An instance of this class provides access to all the operations defined in ExtendedServerBlobAuditingPoliciesClient.\n+ */\n+public interface ExtendedServerBlobAuditingPoliciesClient {\n+    /**\n+     * Gets an extended server's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an extended server's blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExtendedServerBlobAuditingPolicyInner get(String resourceGroupName, String serverName);\n+\n+    /**\n+     * Gets an extended server's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an extended server's blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExtendedServerBlobAuditingPolicyInner> getWithResponse(\n+        String resourceGroupName, String serverName, Context context);\n+\n+    /**\n+     * Creates or updates an extended server's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param parameters Properties of extended blob auditing policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an extended server blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExtendedServerBlobAuditingPolicyInner>, ExtendedServerBlobAuditingPolicyInner>\n+        beginCreateOrUpdate(\n+            String resourceGroupName, String serverName, ExtendedServerBlobAuditingPolicyInner parameters);\n+\n+    /**\n+     * Creates or updates an extended server's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param parameters Properties of extended blob auditing policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an extended server blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExtendedServerBlobAuditingPolicyInner>, ExtendedServerBlobAuditingPolicyInner>\n+        beginCreateOrUpdate(\n+            String resourceGroupName,\n+            String serverName,\n+            ExtendedServerBlobAuditingPolicyInner parameters,\n+            Context context);\n+\n+    /**\n+     * Creates or updates an extended server's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param parameters Properties of extended blob auditing policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an extended server blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExtendedServerBlobAuditingPolicyInner createOrUpdate(\n+        String resourceGroupName, String serverName, ExtendedServerBlobAuditingPolicyInner parameters);\n+\n+    /**\n+     * Creates or updates an extended server's blob auditing policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param parameters Properties of extended blob auditing policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an extended server blob auditing policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExtendedServerBlobAuditingPolicyInner createOrUpdate(\n+        String resourceGroupName, String serverName, ExtendedServerBlobAuditingPolicyInner parameters, Context context);\n+\n+    /**\n+     * Lists extended auditing settings of a server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of server extended auditing settings.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExtendedServerBlobAuditingPolicyInner> listByServer(String resourceGroupName, String serverName);\n+\n+    /**\n+     * Lists extended auditing settings of a server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of server extended auditing settings.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExtendedServerBlobAuditingPolicyInner> listByServer(\n+        String resourceGroupName, String serverName, Context context);\n+}"
  },
  {
    "sha": "1c5e656ba3f2b48482c02ab97d2d187be264a01d",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/FailoverGroupsClient.java",
    "status": "added",
    "additions": 427,
    "deletions": 0,
    "changes": 427,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/FailoverGroupsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/FailoverGroupsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/FailoverGroupsClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,427 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.sql.generated.fluent.models.FailoverGroupInner;\n+import com.azure.resourcemanager.sql.generated.models.FailoverGroupUpdate;\n+\n+/** An instance of this class provides access to all the operations defined in FailoverGroupsClient. */\n+public interface FailoverGroupsClient {\n+    /**\n+     * Gets a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FailoverGroupInner get(String resourceGroupName, String serverName, String failoverGroupName);\n+\n+    /**\n+     * Gets a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<FailoverGroupInner> getWithResponse(\n+        String resourceGroupName, String serverName, String failoverGroupName, Context context);\n+\n+    /**\n+     * Creates or updates a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param parameters The failover group parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<FailoverGroupInner>, FailoverGroupInner> beginCreateOrUpdate(\n+        String resourceGroupName, String serverName, String failoverGroupName, FailoverGroupInner parameters);\n+\n+    /**\n+     * Creates or updates a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param parameters The failover group parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<FailoverGroupInner>, FailoverGroupInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String failoverGroupName,\n+        FailoverGroupInner parameters,\n+        Context context);\n+\n+    /**\n+     * Creates or updates a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param parameters The failover group parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FailoverGroupInner createOrUpdate(\n+        String resourceGroupName, String serverName, String failoverGroupName, FailoverGroupInner parameters);\n+\n+    /**\n+     * Creates or updates a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param parameters The failover group parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FailoverGroupInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String failoverGroupName,\n+        FailoverGroupInner parameters,\n+        Context context);\n+\n+    /**\n+     * Deletes a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String serverName, String failoverGroupName);\n+\n+    /**\n+     * Deletes a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String serverName, String failoverGroupName, Context context);\n+\n+    /**\n+     * Deletes a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String serverName, String failoverGroupName);\n+\n+    /**\n+     * Deletes a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String serverName, String failoverGroupName, Context context);\n+\n+    /**\n+     * Updates a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param parameters The failover group parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<FailoverGroupInner>, FailoverGroupInner> beginUpdate(\n+        String resourceGroupName, String serverName, String failoverGroupName, FailoverGroupUpdate parameters);\n+\n+    /**\n+     * Updates a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param parameters The failover group parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<FailoverGroupInner>, FailoverGroupInner> beginUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String failoverGroupName,\n+        FailoverGroupUpdate parameters,\n+        Context context);\n+\n+    /**\n+     * Updates a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param parameters The failover group parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FailoverGroupInner update(\n+        String resourceGroupName, String serverName, String failoverGroupName, FailoverGroupUpdate parameters);\n+\n+    /**\n+     * Updates a failover group.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param parameters The failover group parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FailoverGroupInner update(\n+        String resourceGroupName,\n+        String serverName,\n+        String failoverGroupName,\n+        FailoverGroupUpdate parameters,\n+        Context context);\n+\n+    /**\n+     * Lists the failover groups in a server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of failover groups.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<FailoverGroupInner> listByServer(String resourceGroupName, String serverName);\n+\n+    /**\n+     * Lists the failover groups in a server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of failover groups.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<FailoverGroupInner> listByServer(String resourceGroupName, String serverName, Context context);\n+\n+    /**\n+     * Fails over from the current primary server to this server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<FailoverGroupInner>, FailoverGroupInner> beginFailover(\n+        String resourceGroupName, String serverName, String failoverGroupName);\n+\n+    /**\n+     * Fails over from the current primary server to this server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<FailoverGroupInner>, FailoverGroupInner> beginFailover(\n+        String resourceGroupName, String serverName, String failoverGroupName, Context context);\n+\n+    /**\n+     * Fails over from the current primary server to this server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FailoverGroupInner failover(String resourceGroupName, String serverName, String failoverGroupName);\n+\n+    /**\n+     * Fails over from the current primary server to this server.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FailoverGroupInner failover(String resourceGroupName, String serverName, String failoverGroupName, Context context);\n+\n+    /**\n+     * Fails over from the current primary server to this server. This operation might result in data loss.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<FailoverGroupInner>, FailoverGroupInner> beginForceFailoverAllowDataLoss(\n+        String resourceGroupName, String serverName, String failoverGroupName);\n+\n+    /**\n+     * Fails over from the current primary server to this server. This operation might result in data loss.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<FailoverGroupInner>, FailoverGroupInner> beginForceFailoverAllowDataLoss(\n+        String resourceGroupName, String serverName, String failoverGroupName, Context context);\n+\n+    /**\n+     * Fails over from the current primary server to this server. This operation might result in data loss.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FailoverGroupInner forceFailoverAllowDataLoss(\n+        String resourceGroupName, String serverName, String failoverGroupName);\n+\n+    /**\n+     * Fails over from the current primary server to this server. This operation might result in data loss.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server containing the failover group.\n+     * @param failoverGroupName The name of the failover group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a failover group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FailoverGroupInner forceFailoverAllowDataLoss(\n+        String resourceGroupName, String serverName, String failoverGroupName, Context context);\n+}"
  },
  {
    "sha": "ef77edc3c372f07d7f6da9ec0faf21bd108b6e82",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/FirewallRulesClient.java",
    "status": "added",
    "additions": 146,
    "deletions": 0,
    "changes": 146,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/FirewallRulesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/FirewallRulesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/FirewallRulesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,146 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.FirewallRuleInner;\n+\n+/** An instance of this class provides access to all the operations defined in FirewallRulesClient. */\n+public interface FirewallRulesClient {\n+    /**\n+     * Creates or updates a firewall rule.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param firewallRuleName The name of the firewall rule.\n+     * @param parameters The required parameters for creating or updating a firewall rule.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents a server firewall rule.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FirewallRuleInner createOrUpdate(\n+        String resourceGroupName, String serverName, String firewallRuleName, FirewallRuleInner parameters);\n+\n+    /**\n+     * Creates or updates a firewall rule.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param firewallRuleName The name of the firewall rule.\n+     * @param parameters The required parameters for creating or updating a firewall rule.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents a server firewall rule.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<FirewallRuleInner> createOrUpdateWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String firewallRuleName,\n+        FirewallRuleInner parameters,\n+        Context context);\n+\n+    /**\n+     * Deletes a firewall rule.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param firewallRuleName The name of the firewall rule.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String serverName, String firewallRuleName);\n+\n+    /**\n+     * Deletes a firewall rule.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param firewallRuleName The name of the firewall rule.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<Void> deleteWithResponse(\n+        String resourceGroupName, String serverName, String firewallRuleName, Context context);\n+\n+    /**\n+     * Gets a firewall rule.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param firewallRuleName The name of the firewall rule.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a firewall rule.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    FirewallRuleInner get(String resourceGroupName, String serverName, String firewallRuleName);\n+\n+    /**\n+     * Gets a firewall rule.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param firewallRuleName The name of the firewall rule.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a firewall rule.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<FirewallRuleInner> getWithResponse(\n+        String resourceGroupName, String serverName, String firewallRuleName, Context context);\n+\n+    /**\n+     * Returns a list of firewall rules.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents the response to a List Firewall Rules request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<FirewallRuleInner> listByServer(String resourceGroupName, String serverName);\n+\n+    /**\n+     * Returns a list of firewall rules.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return represents the response to a List Firewall Rules request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<FirewallRuleInner> listByServer(String resourceGroupName, String serverName, Context context);\n+}"
  },
  {
    "sha": "abe8572107c1a396fc3db9b840741d613766a30e",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/GeoBackupPoliciesClient.java",
    "status": "added",
    "additions": 134,
    "deletions": 0,
    "changes": 134,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/GeoBackupPoliciesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/GeoBackupPoliciesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/GeoBackupPoliciesClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,134 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.sql.generated.fluent.models.GeoBackupPolicyInner;\n+import com.azure.resourcemanager.sql.generated.models.GeoBackupPolicyName;\n+\n+/** An instance of this class provides access to all the operations defined in GeoBackupPoliciesClient. */\n+public interface GeoBackupPoliciesClient {\n+    /**\n+     * Updates a database geo backup policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param geoBackupPolicyName The name of the geo backup policy.\n+     * @param parameters The required parameters for creating or updating the geo backup policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database geo backup policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    GeoBackupPolicyInner createOrUpdate(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        GeoBackupPolicyName geoBackupPolicyName,\n+        GeoBackupPolicyInner parameters);\n+\n+    /**\n+     * Updates a database geo backup policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param geoBackupPolicyName The name of the geo backup policy.\n+     * @param parameters The required parameters for creating or updating the geo backup policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a database geo backup policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<GeoBackupPolicyInner> createOrUpdateWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        GeoBackupPolicyName geoBackupPolicyName,\n+        GeoBackupPolicyInner parameters,\n+        Context context);\n+\n+    /**\n+     * Gets a geo backup policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param geoBackupPolicyName The name of the geo backup policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a geo backup policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    GeoBackupPolicyInner get(\n+        String resourceGroupName, String serverName, String databaseName, GeoBackupPolicyName geoBackupPolicyName);\n+\n+    /**\n+     * Gets a geo backup policy.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param geoBackupPolicyName The name of the geo backup policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a geo backup policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<GeoBackupPolicyInner> getWithResponse(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        GeoBackupPolicyName geoBackupPolicyName,\n+        Context context);\n+\n+    /**\n+     * Returns a list of geo backup policies.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list geo backup policies request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<GeoBackupPolicyInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName);\n+\n+    /**\n+     * Returns a list of geo backup policies.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list geo backup policies request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<GeoBackupPolicyInner> listByDatabase(\n+        String resourceGroupName, String serverName, String databaseName, Context context);\n+}"
  },
  {
    "sha": "0009bd6b653258d10dc9249dcf179ef2958d9dcc",
    "filename": "sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ImportExportsClient.java",
    "status": "added",
    "additions": 94,
    "deletions": 0,
    "changes": 94,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ImportExportsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/9fdc2aca38d30ba8a823ffd3e85989d98f127a61/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ImportExportsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/sql/azure-resourcemanager-sql-generated/src/main/java/com/azure/resourcemanager/sql/generated/fluent/ImportExportsClient.java?ref=9fdc2aca38d30ba8a823ffd3e85989d98f127a61",
    "patch": "@@ -0,0 +1,94 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.sql.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.sql.generated.fluent.models.ImportExportOperationResultInner;\n+import com.azure.resourcemanager.sql.generated.models.ImportExistingDatabaseDefinition;\n+\n+/** An instance of this class provides access to all the operations defined in ImportExportsClient. */\n+public interface ImportExportsClient {\n+    /**\n+     * Imports a bacpac into a new database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The database import request parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an ImportExport operation result resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ImportExportOperationResultInner>, ImportExportOperationResultInner> beginImportMethod(\n+        String resourceGroupName, String serverName, String databaseName, ImportExistingDatabaseDefinition parameters);\n+\n+    /**\n+     * Imports a bacpac into a new database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The database import request parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an ImportExport operation result resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ImportExportOperationResultInner>, ImportExportOperationResultInner> beginImportMethod(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ImportExistingDatabaseDefinition parameters,\n+        Context context);\n+\n+    /**\n+     * Imports a bacpac into a new database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The database import request parameters.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an ImportExport operation result resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ImportExportOperationResultInner importMethod(\n+        String resourceGroupName, String serverName, String databaseName, ImportExistingDatabaseDefinition parameters);\n+\n+    /**\n+     * Imports a bacpac into a new database.\n+     *\n+     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value\n+     *     from the Azure Resource Manager API or the portal.\n+     * @param serverName The name of the server.\n+     * @param databaseName The name of the database.\n+     * @param parameters The database import request parameters.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an ImportExport operation result resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ImportExportOperationResultInner importMethod(\n+        String resourceGroupName,\n+        String serverName,\n+        String databaseName,\n+        ImportExistingDatabaseDefinition parameters,\n+        Context context);\n+}"
  }
]
