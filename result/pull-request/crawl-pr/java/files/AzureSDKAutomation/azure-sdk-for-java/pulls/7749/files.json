[
  {
    "sha": "c162a4a9d1b3faa4f81adbe276becbb52835ce2c",
    "filename": "eng/versioning/version_client.txt",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/eng/versioning/version_client.txt",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/eng/versioning/version_client.txt",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/eng/versioning/version_client.txt?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -210,6 +210,7 @@ com.azure.resourcemanager:azure-resourcemanager-redisenterprise;1.0.0-beta.2;1.0\n com.azure.resourcemanager:azure-resourcemanager-hybridkubernetes;1.0.0-beta.1;1.0.0-beta.2\n com.azure.resourcemanager:azure-resourcemanager-iothub;1.0.0-beta.1;1.0.0-beta.2\n com.azure.resourcemanager:azure-resourcemanager-datadog;1.0.0-beta.1;1.0.0-beta.1\n+com.azure.resourcemanager:azure-resourcemanager-cdn-generated;1.0.0-beta.1;1.0.0-beta.1\n \n # Unreleased dependencies: Copy the entry from above, prepend \"unreleased_\" and remove the current\n # version. Unreleased dependencies are only valid for dependency versions."
  },
  {
    "sha": "1c4a2fbd678833bbdf5297d2ccb74a950d87a9ba",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/pom.xml",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/pom.xml",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/pom.xml?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -587,14 +587,15 @@\n         <module>sdk/authorization</module>\n         <module>sdk/batch</module>\n         <module>sdk/boms</module>\n+        <module>sdk/cdn</module>\n         <module>sdk/cognitiveservices</module>\n         <module>sdk/communication</module>\n         <module>sdk/confluent</module>\n         <module>sdk/core</module>\n         <module>sdk/cosmos</module>\n         <module>sdk/costmanagement</module>\n-        <module>sdk/deviceupdate</module>\n         <module>sdk/datadog</module>\n+        <module>sdk/deviceupdate</module>\n         <module>sdk/digitaltwins</module>\n         <module>sdk/eventgrid</module>\n         <module>sdk/eventhubs</module>"
  },
  {
    "sha": "b1fb8495c63fd402112b7102a5fa9f4e8ad4b191",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/CHANGELOG.md",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/CHANGELOG.md",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/CHANGELOG.md?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,5 @@\n+# Release History\n+\n+## 1.0.0-beta.1 (2021-03-05)\n+\n+- Azure Resource Manager Cdn client library for Java. This package contains Microsoft Azure SDK for Cdn Management SDK. Cdn Management Client. Package tag package-2020-09. For documentation on how to use this package, please see [Azure Management Libraries for Java](https://aka.ms/azsdk/java/mgmt)."
  },
  {
    "sha": "6b1da95349c7e15dc17a633484317c75e7be988e",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/README.md",
    "status": "added",
    "additions": 99,
    "deletions": 0,
    "changes": 99,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/README.md",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/README.md",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/README.md?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,99 @@\n+# Azure Resource Manager Cdn client library for Java\n+\n+Azure Resource Manager Cdn client library for Java.\n+\n+This package contains Microsoft Azure SDK for Cdn Management SDK. Cdn Management Client. Package tag package-2020-09. For documentation on how to use this package, please see [Azure Management Libraries for Java](https://aka.ms/azsdk/java/mgmt).\n+\n+## We'd love to hear your feedback\n+\n+We're always working on improving our products and the way we communicate with our users. So we'd love to learn what's working and how we can do better.\n+\n+If you haven't already, please take a few minutes to [complete this short survey][survey] we have put together.\n+\n+Thank you in advance for your collaboration. We really appreciate your time!\n+\n+## Documentation\n+\n+Various documentation is available to help you get started\n+\n+- [API reference documentation][docs]\n+\n+## Getting started\n+\n+### Prerequisites\n+\n+- [Java Development Kit (JDK)][jdk] with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+\n+### Adding the package to your product\n+\n+[//]: # ({x-version-update-start;com.azure.resourcemanager:azure-resourcemanager-cdn-generated;current})\n+```xml\n+<dependency>\n+    <groupId>com.azure.resourcemanager</groupId>\n+    <artifactId>azure-resourcemanager-cdn-generated</artifactId>\n+    <version>1.0.0-beta.1</version>\n+</dependency>\n+```\n+[//]: # ({x-version-update-end})\n+\n+### Include the recommended packages\n+\n+Azure Management Libraries require a `TokenCredential` implementation for authentication and an `HttpClient` implementation for HTTP client.\n+\n+[Azure Identity][azure_identity] package and [Azure Core Netty HTTP][azure_core_http_netty] package provide the default implementation.\n+\n+### Authentication\n+\n+By default, Azure Active Directory token authentication depends on correct configure of following environment variables.\n+\n+- `AZURE_CLIENT_ID` for Azure client ID.\n+- `AZURE_TENANT_ID` for Azure tenant ID.\n+- `AZURE_CLIENT_SECRET` or `AZURE_CLIENT_CERTIFICATE_PATH` for client secret or client certificate.\n+\n+In addition, Azure subscription ID can be configured via environment variable `AZURE_SUBSCRIPTION_ID`.\n+\n+With above configuration, `azure` client can be authenticated by following code:\n+\n+```java\n+AzureProfile profile = new AzureProfile(AzureEnvironment.AZURE);\n+TokenCredential credential = new DefaultAzureCredentialBuilder()\n+    .authorityHost(profile.getEnvironment().getActiveDirectoryEndpoint())\n+    .build();\n+CdnManager manager = CdnManager\n+    .authenticate(credential, profile);\n+```\n+\n+The sample code assumes global Azure. Please change `AzureEnvironment.AZURE` variable if otherwise.\n+\n+See [Authentication][authenticate] for more options.\n+\n+## Key concepts\n+\n+See [API design][design] for general introduction on design and key concepts on Azure Management Libraries.\n+\n+## Examples\n+\n+## Troubleshooting\n+\n+## Next steps\n+\n+## Contributing\n+\n+For details on contributing to this repository, see the [contributing guide](https://github.com/Azure/azure-sdk-for-java/blob/master/CONTRIBUTING.md).\n+\n+1. Fork it\n+1. Create your feature branch (`git checkout -b my-new-feature`)\n+1. Commit your changes (`git commit -am 'Add some feature'`)\n+1. Push to the branch (`git push origin my-new-feature`)\n+1. Create new Pull Request\n+\n+<!-- LINKS -->\n+[survey]: https://microsoft.qualtrics.com/jfe/form/SV_ehN0lIk2FKEBkwd?Q_CHL=DOCS\n+[docs]: https://azure.github.io/azure-sdk-for-java/\n+[jdk]: https://docs.microsoft.com/java/azure/jdk/\n+[azure_subscription]: https://azure.microsoft.com/free/\n+[azure_identity]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/identity/azure-identity\n+[azure_core_http_netty]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/core/azure-core-http-netty\n+[authenticate]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/resourcemanager/docs/AUTH.md\n+[design]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/resourcemanager/docs/DESIGN.md"
  },
  {
    "sha": "4e5649e691f86ca64dd9e2aa58b4b95995ad6030",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/pom.xml",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/pom.xml",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/pom.xml",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/pom.xml?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,67 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>com.azure</groupId>\n+        <artifactId>azure-client-sdk-parent</artifactId>\n+        <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->\n+        <relativePath>../../parents/azure-client-sdk-parent</relativePath>\n+    </parent>\n+\n+    <groupId>com.azure.resourcemanager</groupId>\n+    <artifactId>azure-resourcemanager-cdn-generated</artifactId>\n+    <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure.resourcemanager:azure-resourcemanager-cdn-generated;current} -->\n+    <packaging>jar</packaging>\n+\n+    <name>Microsoft Azure SDK for Cdn Management</name>\n+    <description>This package contains Microsoft Azure SDK for Cdn Management SDK. Cdn Management Client. Package tag package-2020-09. For documentation on how to use this package, please see https://aka.ms/azsdk/java/mgmt</description>\n+    <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+    <licenses>\n+        <license>\n+            <name>The MIT License (MIT)</name>\n+            <url>http://opensource.org/licenses/MIT</url>\n+            <distribution>repo</distribution>\n+        </license>\n+    </licenses>\n+\n+    <scm>\n+        <url>https://github.com/Azure/azure-sdk-for-java</url>\n+        <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>\n+        <developerConnection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</developerConnection>\n+        <tag>HEAD</tag>\n+    </scm>\n+    <developers>\n+        <developer>\n+            <id>microsoft</id>\n+            <name>Microsoft</name>\n+        </developer>\n+    </developers>\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <legal><![CDATA[[INFO] Any downloads listed may be third party software.  Microsoft grants you no rights for third party software.]]></legal>\n+    </properties>\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.azure</groupId>\n+            <artifactId>azure-core</artifactId>\n+            <version>1.13.0</version> <!-- {x-version-update;com.azure:azure-core;dependency} -->\n+        </dependency>\n+        <dependency>\n+            <groupId>com.azure</groupId>\n+            <artifactId>azure-core-management</artifactId>\n+            <version>1.1.1</version> <!-- {x-version-update;com.azure:azure-core-management;dependency} -->\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <version>0.8.5</version> <!-- {x-version-update;org.jacoco:jacoco-maven-plugin;external_dependency} -->\n+                <configuration>\n+                    <skip>true</skip>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
  },
  {
    "sha": "2dd668af4392fdd06be458895ac316b00f9938a7",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/CdnManager.java",
    "status": "added",
    "additions": 478,
    "deletions": 0,
    "changes": 478,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/CdnManager.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/CdnManager.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/CdnManager.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,478 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated;\n+\n+import com.azure.core.credential.TokenCredential;\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.AddDatePolicy;\n+import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpLoggingPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.HttpPolicyProviders;\n+import com.azure.core.http.policy.RequestIdPolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.management.profile.AzureProfile;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.cdn.generated.fluent.CdnManagementClient;\n+import com.azure.resourcemanager.cdn.generated.implementation.AfdCustomDomainsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.AfdEndpointsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.AfdOriginGroupsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.AfdOriginsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.AfdProfilesImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.CdnManagementClientBuilder;\n+import com.azure.resourcemanager.cdn.generated.implementation.CustomDomainsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.EdgeNodesImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.EndpointsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.LogAnalyticsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.ManagedRuleSetsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.OperationsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.OriginGroupsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.OriginsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.PoliciesImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.ProfilesImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.ResourceProvidersImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.ResourceUsagesImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.RoutesImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.RuleSetsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.RulesImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.SecretsImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.SecurityPoliciesImpl;\n+import com.azure.resourcemanager.cdn.generated.implementation.ValidatesImpl;\n+import com.azure.resourcemanager.cdn.generated.models.AfdCustomDomains;\n+import com.azure.resourcemanager.cdn.generated.models.AfdEndpoints;\n+import com.azure.resourcemanager.cdn.generated.models.AfdOriginGroups;\n+import com.azure.resourcemanager.cdn.generated.models.AfdOrigins;\n+import com.azure.resourcemanager.cdn.generated.models.AfdProfiles;\n+import com.azure.resourcemanager.cdn.generated.models.CustomDomains;\n+import com.azure.resourcemanager.cdn.generated.models.EdgeNodes;\n+import com.azure.resourcemanager.cdn.generated.models.Endpoints;\n+import com.azure.resourcemanager.cdn.generated.models.LogAnalytics;\n+import com.azure.resourcemanager.cdn.generated.models.ManagedRuleSets;\n+import com.azure.resourcemanager.cdn.generated.models.Operations;\n+import com.azure.resourcemanager.cdn.generated.models.OriginGroups;\n+import com.azure.resourcemanager.cdn.generated.models.Origins;\n+import com.azure.resourcemanager.cdn.generated.models.Policies;\n+import com.azure.resourcemanager.cdn.generated.models.Profiles;\n+import com.azure.resourcemanager.cdn.generated.models.ResourceProviders;\n+import com.azure.resourcemanager.cdn.generated.models.ResourceUsages;\n+import com.azure.resourcemanager.cdn.generated.models.Routes;\n+import com.azure.resourcemanager.cdn.generated.models.RuleSets;\n+import com.azure.resourcemanager.cdn.generated.models.Rules;\n+import com.azure.resourcemanager.cdn.generated.models.Secrets;\n+import com.azure.resourcemanager.cdn.generated.models.SecurityPolicies;\n+import com.azure.resourcemanager.cdn.generated.models.Validates;\n+import java.time.Duration;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/** Entry point to CdnManager. Cdn Management Client. */\n+public final class CdnManager {\n+    private Profiles profiles;\n+\n+    private Endpoints endpoints;\n+\n+    private Origins origins;\n+\n+    private OriginGroups originGroups;\n+\n+    private CustomDomains customDomains;\n+\n+    private ResourceProviders resourceProviders;\n+\n+    private ResourceUsages resourceUsages;\n+\n+    private Operations operations;\n+\n+    private EdgeNodes edgeNodes;\n+\n+    private AfdProfiles afdProfiles;\n+\n+    private AfdCustomDomains afdCustomDomains;\n+\n+    private AfdEndpoints afdEndpoints;\n+\n+    private AfdOriginGroups afdOriginGroups;\n+\n+    private AfdOrigins afdOrigins;\n+\n+    private Routes routes;\n+\n+    private RuleSets ruleSets;\n+\n+    private Rules rules;\n+\n+    private SecurityPolicies securityPolicies;\n+\n+    private Secrets secrets;\n+\n+    private Validates validates;\n+\n+    private LogAnalytics logAnalytics;\n+\n+    private Policies policies;\n+\n+    private ManagedRuleSets managedRuleSets;\n+\n+    private final CdnManagementClient clientObject;\n+\n+    private CdnManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {\n+        Objects.requireNonNull(httpPipeline, \"'httpPipeline' cannot be null.\");\n+        Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+        this.clientObject =\n+            new CdnManagementClientBuilder()\n+                .pipeline(httpPipeline)\n+                .endpoint(profile.getEnvironment().getResourceManagerEndpoint())\n+                .subscriptionId(profile.getSubscriptionId())\n+                .defaultPollInterval(defaultPollInterval)\n+                .buildClient();\n+    }\n+\n+    /**\n+     * Creates an instance of Cdn service API entry point.\n+     *\n+     * @param credential the credential to use.\n+     * @param profile the Azure profile for client.\n+     * @return the Cdn service API instance.\n+     */\n+    public static CdnManager authenticate(TokenCredential credential, AzureProfile profile) {\n+        Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+        Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+        return configure().authenticate(credential, profile);\n+    }\n+\n+    /**\n+     * Gets a Configurable instance that can be used to create CdnManager with optional configuration.\n+     *\n+     * @return the Configurable instance allowing configurations.\n+     */\n+    public static Configurable configure() {\n+        return new CdnManager.Configurable();\n+    }\n+\n+    /** The Configurable allowing configurations to be set. */\n+    public static final class Configurable {\n+        private final ClientLogger logger = new ClientLogger(Configurable.class);\n+\n+        private HttpClient httpClient;\n+        private HttpLogOptions httpLogOptions;\n+        private final List<HttpPipelinePolicy> policies = new ArrayList<>();\n+        private RetryPolicy retryPolicy;\n+        private Duration defaultPollInterval;\n+\n+        private Configurable() {\n+        }\n+\n+        /**\n+         * Sets the http client.\n+         *\n+         * @param httpClient the HTTP client.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withHttpClient(HttpClient httpClient) {\n+            this.httpClient = Objects.requireNonNull(httpClient, \"'httpClient' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the logging options to the HTTP pipeline.\n+         *\n+         * @param httpLogOptions the HTTP log options.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {\n+            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, \"'httpLogOptions' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Adds the pipeline policy to the HTTP pipeline.\n+         *\n+         * @param policy the HTTP pipeline policy.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withPolicy(HttpPipelinePolicy policy) {\n+            this.policies.add(Objects.requireNonNull(policy, \"'policy' cannot be null.\"));\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the retry policy to the HTTP pipeline.\n+         *\n+         * @param retryPolicy the HTTP pipeline retry policy.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {\n+            this.retryPolicy = Objects.requireNonNull(retryPolicy, \"'retryPolicy' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the default poll interval, used when service does not provide \"Retry-After\" header.\n+         *\n+         * @param defaultPollInterval the default poll interval.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {\n+            this.defaultPollInterval = Objects.requireNonNull(defaultPollInterval, \"'retryPolicy' cannot be null.\");\n+            if (this.defaultPollInterval.isNegative()) {\n+                throw logger.logExceptionAsError(new IllegalArgumentException(\"'httpPipeline' cannot be negative\"));\n+            }\n+            return this;\n+        }\n+\n+        /**\n+         * Creates an instance of Cdn service API entry point.\n+         *\n+         * @param credential the credential to use.\n+         * @param profile the Azure profile for client.\n+         * @return the Cdn service API instance.\n+         */\n+        public CdnManager authenticate(TokenCredential credential, AzureProfile profile) {\n+            Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+            Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+\n+            StringBuilder userAgentBuilder = new StringBuilder();\n+            userAgentBuilder\n+                .append(\"azsdk-java\")\n+                .append(\"-\")\n+                .append(\"com.azure.resourcemanager.cdn.generated\")\n+                .append(\"/\")\n+                .append(\"1.0.0-beta.1\");\n+            if (!Configuration.getGlobalConfiguration().get(\"AZURE_TELEMETRY_DISABLED\", false)) {\n+                userAgentBuilder\n+                    .append(\" (\")\n+                    .append(Configuration.getGlobalConfiguration().get(\"java.version\"))\n+                    .append(\"; \")\n+                    .append(Configuration.getGlobalConfiguration().get(\"os.name\"))\n+                    .append(\"; \")\n+                    .append(Configuration.getGlobalConfiguration().get(\"os.version\"))\n+                    .append(\"; auto-generated)\");\n+            } else {\n+                userAgentBuilder.append(\" (auto-generated)\");\n+            }\n+\n+            if (retryPolicy == null) {\n+                retryPolicy = new RetryPolicy(\"Retry-After\", ChronoUnit.SECONDS);\n+            }\n+            List<HttpPipelinePolicy> policies = new ArrayList<>();\n+            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));\n+            policies.add(new RequestIdPolicy());\n+            HttpPolicyProviders.addBeforeRetryPolicies(policies);\n+            policies.add(retryPolicy);\n+            policies.add(new AddDatePolicy());\n+            policies\n+                .add(\n+                    new BearerTokenAuthenticationPolicy(\n+                        credential, profile.getEnvironment().getManagementEndpoint() + \"/.default\"));\n+            HttpPolicyProviders.addAfterRetryPolicies(policies);\n+            policies.add(new HttpLoggingPolicy(httpLogOptions));\n+            HttpPipeline httpPipeline =\n+                new HttpPipelineBuilder()\n+                    .httpClient(httpClient)\n+                    .policies(policies.toArray(new HttpPipelinePolicy[0]))\n+                    .build();\n+            return new CdnManager(httpPipeline, profile, defaultPollInterval);\n+        }\n+    }\n+\n+    /** @return Resource collection API of Profiles. */\n+    public Profiles profiles() {\n+        if (this.profiles == null) {\n+            this.profiles = new ProfilesImpl(clientObject.getProfiles(), this);\n+        }\n+        return profiles;\n+    }\n+\n+    /** @return Resource collection API of Endpoints. */\n+    public Endpoints endpoints() {\n+        if (this.endpoints == null) {\n+            this.endpoints = new EndpointsImpl(clientObject.getEndpoints(), this);\n+        }\n+        return endpoints;\n+    }\n+\n+    /** @return Resource collection API of Origins. */\n+    public Origins origins() {\n+        if (this.origins == null) {\n+            this.origins = new OriginsImpl(clientObject.getOrigins(), this);\n+        }\n+        return origins;\n+    }\n+\n+    /** @return Resource collection API of OriginGroups. */\n+    public OriginGroups originGroups() {\n+        if (this.originGroups == null) {\n+            this.originGroups = new OriginGroupsImpl(clientObject.getOriginGroups(), this);\n+        }\n+        return originGroups;\n+    }\n+\n+    /** @return Resource collection API of CustomDomains. */\n+    public CustomDomains customDomains() {\n+        if (this.customDomains == null) {\n+            this.customDomains = new CustomDomainsImpl(clientObject.getCustomDomains(), this);\n+        }\n+        return customDomains;\n+    }\n+\n+    /** @return Resource collection API of ResourceProviders. */\n+    public ResourceProviders resourceProviders() {\n+        if (this.resourceProviders == null) {\n+            this.resourceProviders = new ResourceProvidersImpl(clientObject.getResourceProviders(), this);\n+        }\n+        return resourceProviders;\n+    }\n+\n+    /** @return Resource collection API of ResourceUsages. */\n+    public ResourceUsages resourceUsages() {\n+        if (this.resourceUsages == null) {\n+            this.resourceUsages = new ResourceUsagesImpl(clientObject.getResourceUsages(), this);\n+        }\n+        return resourceUsages;\n+    }\n+\n+    /** @return Resource collection API of Operations. */\n+    public Operations operations() {\n+        if (this.operations == null) {\n+            this.operations = new OperationsImpl(clientObject.getOperations(), this);\n+        }\n+        return operations;\n+    }\n+\n+    /** @return Resource collection API of EdgeNodes. */\n+    public EdgeNodes edgeNodes() {\n+        if (this.edgeNodes == null) {\n+            this.edgeNodes = new EdgeNodesImpl(clientObject.getEdgeNodes(), this);\n+        }\n+        return edgeNodes;\n+    }\n+\n+    /** @return Resource collection API of AfdProfiles. */\n+    public AfdProfiles afdProfiles() {\n+        if (this.afdProfiles == null) {\n+            this.afdProfiles = new AfdProfilesImpl(clientObject.getAfdProfiles(), this);\n+        }\n+        return afdProfiles;\n+    }\n+\n+    /** @return Resource collection API of AfdCustomDomains. */\n+    public AfdCustomDomains afdCustomDomains() {\n+        if (this.afdCustomDomains == null) {\n+            this.afdCustomDomains = new AfdCustomDomainsImpl(clientObject.getAfdCustomDomains(), this);\n+        }\n+        return afdCustomDomains;\n+    }\n+\n+    /** @return Resource collection API of AfdEndpoints. */\n+    public AfdEndpoints afdEndpoints() {\n+        if (this.afdEndpoints == null) {\n+            this.afdEndpoints = new AfdEndpointsImpl(clientObject.getAfdEndpoints(), this);\n+        }\n+        return afdEndpoints;\n+    }\n+\n+    /** @return Resource collection API of AfdOriginGroups. */\n+    public AfdOriginGroups afdOriginGroups() {\n+        if (this.afdOriginGroups == null) {\n+            this.afdOriginGroups = new AfdOriginGroupsImpl(clientObject.getAfdOriginGroups(), this);\n+        }\n+        return afdOriginGroups;\n+    }\n+\n+    /** @return Resource collection API of AfdOrigins. */\n+    public AfdOrigins afdOrigins() {\n+        if (this.afdOrigins == null) {\n+            this.afdOrigins = new AfdOriginsImpl(clientObject.getAfdOrigins(), this);\n+        }\n+        return afdOrigins;\n+    }\n+\n+    /** @return Resource collection API of Routes. */\n+    public Routes routes() {\n+        if (this.routes == null) {\n+            this.routes = new RoutesImpl(clientObject.getRoutes(), this);\n+        }\n+        return routes;\n+    }\n+\n+    /** @return Resource collection API of RuleSets. */\n+    public RuleSets ruleSets() {\n+        if (this.ruleSets == null) {\n+            this.ruleSets = new RuleSetsImpl(clientObject.getRuleSets(), this);\n+        }\n+        return ruleSets;\n+    }\n+\n+    /** @return Resource collection API of Rules. */\n+    public Rules rules() {\n+        if (this.rules == null) {\n+            this.rules = new RulesImpl(clientObject.getRules(), this);\n+        }\n+        return rules;\n+    }\n+\n+    /** @return Resource collection API of SecurityPolicies. */\n+    public SecurityPolicies securityPolicies() {\n+        if (this.securityPolicies == null) {\n+            this.securityPolicies = new SecurityPoliciesImpl(clientObject.getSecurityPolicies(), this);\n+        }\n+        return securityPolicies;\n+    }\n+\n+    /** @return Resource collection API of Secrets. */\n+    public Secrets secrets() {\n+        if (this.secrets == null) {\n+            this.secrets = new SecretsImpl(clientObject.getSecrets(), this);\n+        }\n+        return secrets;\n+    }\n+\n+    /** @return Resource collection API of Validates. */\n+    public Validates validates() {\n+        if (this.validates == null) {\n+            this.validates = new ValidatesImpl(clientObject.getValidates(), this);\n+        }\n+        return validates;\n+    }\n+\n+    /** @return Resource collection API of LogAnalytics. */\n+    public LogAnalytics logAnalytics() {\n+        if (this.logAnalytics == null) {\n+            this.logAnalytics = new LogAnalyticsImpl(clientObject.getLogAnalytics(), this);\n+        }\n+        return logAnalytics;\n+    }\n+\n+    /** @return Resource collection API of Policies. */\n+    public Policies policies() {\n+        if (this.policies == null) {\n+            this.policies = new PoliciesImpl(clientObject.getPolicies(), this);\n+        }\n+        return policies;\n+    }\n+\n+    /** @return Resource collection API of ManagedRuleSets. */\n+    public ManagedRuleSets managedRuleSets() {\n+        if (this.managedRuleSets == null) {\n+            this.managedRuleSets = new ManagedRuleSetsImpl(clientObject.getManagedRuleSets(), this);\n+        }\n+        return managedRuleSets;\n+    }\n+\n+    /**\n+     * @return Wrapped service client CdnManagementClient providing direct access to the underlying auto-generated API\n+     *     implementation, based on Azure REST API.\n+     */\n+    public CdnManagementClient serviceClient() {\n+        return this.clientObject;\n+    }\n+}"
  },
  {
    "sha": "79321c6bf4243eceb6ff3f2221665e738876d50e",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdCustomDomainsClient.java",
    "status": "added",
    "additions": 365,
    "deletions": 0,
    "changes": 365,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdCustomDomainsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdCustomDomainsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdCustomDomainsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,365 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.AfdDomainInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ValidationTokenInner;\n+import com.azure.resourcemanager.cdn.generated.models.AfdDomainUpdateParameters;\n+\n+/** An instance of this class provides access to all the operations defined in AfdCustomDomainsClient. */\n+public interface AfdCustomDomainsClient {\n+    /**\n+     * Lists existing AzureFrontDoor domains.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list domains.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AfdDomainInner> listByProfile(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Lists existing AzureFrontDoor domains.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list domains.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AfdDomainInner> listByProfile(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Gets an existing AzureFrontDoor domain with the specified domain name under the specified subscription, resource\n+     * group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing AzureFrontDoor domain with the specified domain name under the specified subscription,\n+     *     resource group and profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdDomainInner get(String resourceGroupName, String profileName, String customDomainName);\n+\n+    /**\n+     * Gets an existing AzureFrontDoor domain with the specified domain name under the specified subscription, resource\n+     * group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing AzureFrontDoor domain with the specified domain name under the specified subscription,\n+     *     resource group and profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<AfdDomainInner> getWithResponse(\n+        String resourceGroupName, String profileName, String customDomainName, Context context);\n+\n+    /**\n+     * Creates a new domain within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param customDomain Domain properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdDomainInner>, AfdDomainInner> beginCreate(\n+        String resourceGroupName, String profileName, String customDomainName, AfdDomainInner customDomain);\n+\n+    /**\n+     * Creates a new domain within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param customDomain Domain properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdDomainInner>, AfdDomainInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String customDomainName,\n+        AfdDomainInner customDomain,\n+        Context context);\n+\n+    /**\n+     * Creates a new domain within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param customDomain Domain properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdDomainInner create(\n+        String resourceGroupName, String profileName, String customDomainName, AfdDomainInner customDomain);\n+\n+    /**\n+     * Creates a new domain within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param customDomain Domain properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdDomainInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String customDomainName,\n+        AfdDomainInner customDomain,\n+        Context context);\n+\n+    /**\n+     * Updates an existing domain within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param customDomainUpdateProperties Domain properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdDomainInner>, AfdDomainInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String customDomainName,\n+        AfdDomainUpdateParameters customDomainUpdateProperties);\n+\n+    /**\n+     * Updates an existing domain within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param customDomainUpdateProperties Domain properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdDomainInner>, AfdDomainInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String customDomainName,\n+        AfdDomainUpdateParameters customDomainUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing domain within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param customDomainUpdateProperties Domain properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdDomainInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String customDomainName,\n+        AfdDomainUpdateParameters customDomainUpdateProperties);\n+\n+    /**\n+     * Updates an existing domain within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param customDomainUpdateProperties Domain properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdDomainInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String customDomainName,\n+        AfdDomainUpdateParameters customDomainUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor domain with the specified domain name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String customDomainName);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor domain with the specified domain name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String customDomainName, Context context);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor domain with the specified domain name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String customDomainName);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor domain with the specified domain name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String customDomainName, Context context);\n+\n+    /**\n+     * Updates the domain validation token.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the validation token.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ValidationTokenInner>, ValidationTokenInner> beginRefreshValidationToken(\n+        String resourceGroupName, String profileName, String customDomainName);\n+\n+    /**\n+     * Updates the domain validation token.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the validation token.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ValidationTokenInner>, ValidationTokenInner> beginRefreshValidationToken(\n+        String resourceGroupName, String profileName, String customDomainName, Context context);\n+\n+    /**\n+     * Updates the domain validation token.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the validation token.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ValidationTokenInner refreshValidationToken(String resourceGroupName, String profileName, String customDomainName);\n+\n+    /**\n+     * Updates the domain validation token.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param customDomainName Name of the domain under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the validation token.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ValidationTokenInner refreshValidationToken(\n+        String resourceGroupName, String profileName, String customDomainName, Context context);\n+}"
  },
  {
    "sha": "cc78100b730bf701da3b251ba3e3e5c76ae9c5f3",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdEndpointsClient.java",
    "status": "added",
    "additions": 463,
    "deletions": 0,
    "changes": 463,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdEndpointsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdEndpointsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdEndpointsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,463 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.AfdEndpointInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.UsageInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ValidateCustomDomainOutputInner;\n+import com.azure.resourcemanager.cdn.generated.models.AfdEndpointUpdateParameters;\n+import com.azure.resourcemanager.cdn.generated.models.AfdPurgeParameters;\n+import com.azure.resourcemanager.cdn.generated.models.ValidateCustomDomainInput;\n+\n+/** An instance of this class provides access to all the operations defined in AfdEndpointsClient. */\n+public interface AfdEndpointsClient {\n+    /**\n+     * Lists existing AzureFrontDoor endpoints.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list endpoints.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AfdEndpointInner> listByProfile(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Lists existing AzureFrontDoor endpoints.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list endpoints.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AfdEndpointInner> listByProfile(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Gets an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     *     resource group and profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdEndpointInner get(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Gets an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     *     resource group and profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<AfdEndpointInner> getWithResponse(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Creates a new AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpoint Endpoint properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdEndpointInner>, AfdEndpointInner> beginCreate(\n+        String resourceGroupName, String profileName, String endpointName, AfdEndpointInner endpoint);\n+\n+    /**\n+     * Creates a new AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpoint Endpoint properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdEndpointInner>, AfdEndpointInner> beginCreate(\n+        String resourceGroupName, String profileName, String endpointName, AfdEndpointInner endpoint, Context context);\n+\n+    /**\n+     * Creates a new AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpoint Endpoint properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdEndpointInner create(\n+        String resourceGroupName, String profileName, String endpointName, AfdEndpointInner endpoint);\n+\n+    /**\n+     * Creates a new AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpoint Endpoint properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdEndpointInner create(\n+        String resourceGroupName, String profileName, String endpointName, AfdEndpointInner endpoint, Context context);\n+\n+    /**\n+     * Updates an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     * resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the\n+     * Update Origin operation. To update origin groups, use the Update Origin group operation. To update domains, use\n+     * the Update Custom Domain operation.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpointUpdateProperties Endpoint update properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdEndpointInner>, AfdEndpointInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        AfdEndpointUpdateParameters endpointUpdateProperties);\n+\n+    /**\n+     * Updates an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     * resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the\n+     * Update Origin operation. To update origin groups, use the Update Origin group operation. To update domains, use\n+     * the Update Custom Domain operation.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpointUpdateProperties Endpoint update properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdEndpointInner>, AfdEndpointInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        AfdEndpointUpdateParameters endpointUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     * resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the\n+     * Update Origin operation. To update origin groups, use the Update Origin group operation. To update domains, use\n+     * the Update Custom Domain operation.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpointUpdateProperties Endpoint update properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdEndpointInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        AfdEndpointUpdateParameters endpointUpdateProperties);\n+\n+    /**\n+     * Updates an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     * resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the\n+     * Update Origin operation. To update origin groups, use the Update Origin group operation. To update domains, use\n+     * the Update Custom Domain operation.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpointUpdateProperties Endpoint update properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdEndpointInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        AfdEndpointUpdateParameters endpointUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Removes a content from AzureFrontDoor.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contents The list of paths to the content and the list of linked domains to be purged. Path can be a full\n+     *     URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g.\n+     *     '/pictures/*' which removes all folders and files in the directory.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginPurgeContent(\n+        String resourceGroupName, String profileName, String endpointName, AfdPurgeParameters contents);\n+\n+    /**\n+     * Removes a content from AzureFrontDoor.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contents The list of paths to the content and the list of linked domains to be purged. Path can be a full\n+     *     URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g.\n+     *     '/pictures/*' which removes all folders and files in the directory.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginPurgeContent(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        AfdPurgeParameters contents,\n+        Context context);\n+\n+    /**\n+     * Removes a content from AzureFrontDoor.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contents The list of paths to the content and the list of linked domains to be purged. Path can be a full\n+     *     URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g.\n+     *     '/pictures/*' which removes all folders and files in the directory.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void purgeContent(String resourceGroupName, String profileName, String endpointName, AfdPurgeParameters contents);\n+\n+    /**\n+     * Removes a content from AzureFrontDoor.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contents The list of paths to the content and the list of linked domains to be purged. Path can be a full\n+     *     URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g.\n+     *     '/pictures/*' which removes all folders and files in the directory.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void purgeContent(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        AfdPurgeParameters contents,\n+        Context context);\n+\n+    /**\n+     * Checks the quota and actual usage of endpoints under the given CDN profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the list usages operation response.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listResourceUsage(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Checks the quota and actual usage of endpoints under the given CDN profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the list usages operation response.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listResourceUsage(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainProperties Custom domain to be validated.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of custom domain validation.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ValidateCustomDomainOutputInner validateCustomDomain(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        ValidateCustomDomainInput customDomainProperties);\n+\n+    /**\n+     * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainProperties Custom domain to be validated.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of custom domain validation.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ValidateCustomDomainOutputInner> validateCustomDomainWithResponse(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        ValidateCustomDomainInput customDomainProperties,\n+        Context context);\n+}"
  },
  {
    "sha": "6c06aa9432d004066601c68b35e6356fe8e4216a",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdOriginGroupsClient.java",
    "status": "added",
    "additions": 326,
    "deletions": 0,
    "changes": 326,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdOriginGroupsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdOriginGroupsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdOriginGroupsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,326 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.AfdOriginGroupInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.UsageInner;\n+import com.azure.resourcemanager.cdn.generated.models.AfdOriginGroupUpdateParameters;\n+\n+/** An instance of this class provides access to all the operations defined in AfdOriginGroupsClient. */\n+public interface AfdOriginGroupsClient {\n+    /**\n+     * Lists all of the existing origin groups within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list origin groups.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AfdOriginGroupInner> listByProfile(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Lists all of the existing origin groups within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list origin groups.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AfdOriginGroupInner> listByProfile(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Gets an existing origin group within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing origin group within a profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdOriginGroupInner get(String resourceGroupName, String profileName, String originGroupName);\n+\n+    /**\n+     * Gets an existing origin group within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing origin group within a profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<AfdOriginGroupInner> getWithResponse(\n+        String resourceGroupName, String profileName, String originGroupName, Context context);\n+\n+    /**\n+     * Creates a new origin group within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroup Origin group properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return aFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdOriginGroupInner>, AfdOriginGroupInner> beginCreate(\n+        String resourceGroupName, String profileName, String originGroupName, AfdOriginGroupInner originGroup);\n+\n+    /**\n+     * Creates a new origin group within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroup Origin group properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return aFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdOriginGroupInner>, AfdOriginGroupInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        AfdOriginGroupInner originGroup,\n+        Context context);\n+\n+    /**\n+     * Creates a new origin group within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroup Origin group properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return aFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdOriginGroupInner create(\n+        String resourceGroupName, String profileName, String originGroupName, AfdOriginGroupInner originGroup);\n+\n+    /**\n+     * Creates a new origin group within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroup Origin group properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return aFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdOriginGroupInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        AfdOriginGroupInner originGroup,\n+        Context context);\n+\n+    /**\n+     * Updates an existing origin group within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originGroupUpdateProperties Origin group properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return aFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdOriginGroupInner>, AfdOriginGroupInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        AfdOriginGroupUpdateParameters originGroupUpdateProperties);\n+\n+    /**\n+     * Updates an existing origin group within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originGroupUpdateProperties Origin group properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return aFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdOriginGroupInner>, AfdOriginGroupInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        AfdOriginGroupUpdateParameters originGroupUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing origin group within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originGroupUpdateProperties Origin group properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return aFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdOriginGroupInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        AfdOriginGroupUpdateParameters originGroupUpdateProperties);\n+\n+    /**\n+     * Updates an existing origin group within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originGroupUpdateProperties Origin group properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return aFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdOriginGroupInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        AfdOriginGroupUpdateParameters originGroupUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing origin group within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String originGroupName);\n+\n+    /**\n+     * Deletes an existing origin group within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String originGroupName, Context context);\n+\n+    /**\n+     * Deletes an existing origin group within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String originGroupName);\n+\n+    /**\n+     * Deletes an existing origin group within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String originGroupName, Context context);\n+\n+    /**\n+     * Checks the quota and actual usage of endpoints under the given CDN profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the list usages operation response.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listResourceUsage(String resourceGroupName, String profileName, String originGroupName);\n+\n+    /**\n+     * Checks the quota and actual usage of endpoints under the given CDN profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the list usages operation response.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listResourceUsage(\n+        String resourceGroupName, String profileName, String originGroupName, Context context);\n+}"
  },
  {
    "sha": "c3b793935bd6a0d35e73001c238e52a4d6fbabdc",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdOriginsClient.java",
    "status": "added",
    "additions": 312,
    "deletions": 0,
    "changes": 312,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdOriginsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdOriginsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdOriginsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,312 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.AfdOriginInner;\n+import com.azure.resourcemanager.cdn.generated.models.AfdOriginUpdateParameters;\n+\n+/** An instance of this class provides access to all the operations defined in AfdOriginsClient. */\n+public interface AfdOriginsClient {\n+    /**\n+     * Lists all of the existing origins within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list origins.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AfdOriginInner> listByOriginGroup(\n+        String resourceGroupName, String profileName, String originGroupName);\n+\n+    /**\n+     * Lists all of the existing origins within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list origins.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AfdOriginInner> listByOriginGroup(\n+        String resourceGroupName, String profileName, String originGroupName, Context context);\n+\n+    /**\n+     * Gets an existing origin within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin which is unique within the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing origin within an origin group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdOriginInner get(String resourceGroupName, String profileName, String originGroupName, String originName);\n+\n+    /**\n+     * Gets an existing origin within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin which is unique within the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing origin within an origin group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<AfdOriginInner> getWithResponse(\n+        String resourceGroupName, String profileName, String originGroupName, String originName, Context context);\n+\n+    /**\n+     * Creates a new origin within the specified origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin that is unique within the profile.\n+     * @param origin Origin properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdOriginInner>, AfdOriginInner> beginCreate(\n+        String resourceGroupName, String profileName, String originGroupName, String originName, AfdOriginInner origin);\n+\n+    /**\n+     * Creates a new origin within the specified origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin that is unique within the profile.\n+     * @param origin Origin properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdOriginInner>, AfdOriginInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        String originName,\n+        AfdOriginInner origin,\n+        Context context);\n+\n+    /**\n+     * Creates a new origin within the specified origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin that is unique within the profile.\n+     * @param origin Origin properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdOriginInner create(\n+        String resourceGroupName, String profileName, String originGroupName, String originName, AfdOriginInner origin);\n+\n+    /**\n+     * Creates a new origin within the specified origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin that is unique within the profile.\n+     * @param origin Origin properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdOriginInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        String originName,\n+        AfdOriginInner origin,\n+        Context context);\n+\n+    /**\n+     * Updates an existing origin within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin which is unique within the profile.\n+     * @param originUpdateProperties Origin properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdOriginInner>, AfdOriginInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        String originName,\n+        AfdOriginUpdateParameters originUpdateProperties);\n+\n+    /**\n+     * Updates an existing origin within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin which is unique within the profile.\n+     * @param originUpdateProperties Origin properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AfdOriginInner>, AfdOriginInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        String originName,\n+        AfdOriginUpdateParameters originUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing origin within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin which is unique within the profile.\n+     * @param originUpdateProperties Origin properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdOriginInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        String originName,\n+        AfdOriginUpdateParameters originUpdateProperties);\n+\n+    /**\n+     * Updates an existing origin within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin which is unique within the profile.\n+     * @param originUpdateProperties Origin properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AfdOriginInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String originGroupName,\n+        String originName,\n+        AfdOriginUpdateParameters originUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing origin within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin which is unique within the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String originGroupName, String originName);\n+\n+    /**\n+     * Deletes an existing origin within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin which is unique within the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String originGroupName, String originName, Context context);\n+\n+    /**\n+     * Deletes an existing origin within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin which is unique within the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String originGroupName, String originName);\n+\n+    /**\n+     * Deletes an existing origin within an origin group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param originGroupName Name of the origin group which is unique within the profile.\n+     * @param originName Name of the origin which is unique within the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(\n+        String resourceGroupName, String profileName, String originGroupName, String originName, Context context);\n+}"
  },
  {
    "sha": "fd7b5100458c9f419017de0409bb07e75334c129",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdProfilesClient.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdProfilesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdProfilesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/AfdProfilesClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,78 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.UsageInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ValidateCustomDomainOutputInner;\n+import com.azure.resourcemanager.cdn.generated.models.ValidateCustomDomainInput;\n+\n+/** An instance of this class provides access to all the operations defined in AfdProfilesClient. */\n+public interface AfdProfilesClient {\n+    /**\n+     * Checks the quota and actual usage of endpoints under the given CDN profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the list usages operation response.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listResourceUsage(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Checks the quota and actual usage of endpoints under the given CDN profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the list usages operation response.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listResourceUsage(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param checkHostnameAvailabilityInput Custom domain to be validated.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of custom domain validation.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ValidateCustomDomainOutputInner checkHostnameAvailability(\n+        String resourceGroupName, String profileName, ValidateCustomDomainInput checkHostnameAvailabilityInput);\n+\n+    /**\n+     * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param checkHostnameAvailabilityInput Custom domain to be validated.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of custom domain validation.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ValidateCustomDomainOutputInner> checkHostnameAvailabilityWithResponse(\n+        String resourceGroupName,\n+        String profileName,\n+        ValidateCustomDomainInput checkHostnameAvailabilityInput,\n+        Context context);\n+}"
  },
  {
    "sha": "ebe8697a864525fb3bb050d0258f406c0ff7a8c4",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/CdnManagementClient.java",
    "status": "added",
    "additions": 207,
    "deletions": 0,
    "changes": 207,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/CdnManagementClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/CdnManagementClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/CdnManagementClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,207 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.http.HttpPipeline;\n+import java.time.Duration;\n+\n+/** The interface for CdnManagementClient class. */\n+public interface CdnManagementClient {\n+    /**\n+     * Gets Azure Subscription ID.\n+     *\n+     * @return the subscriptionId value.\n+     */\n+    String getSubscriptionId();\n+\n+    /**\n+     * Gets server parameter.\n+     *\n+     * @return the endpoint value.\n+     */\n+    String getEndpoint();\n+\n+    /**\n+     * Gets Api Version.\n+     *\n+     * @return the apiVersion value.\n+     */\n+    String getApiVersion();\n+\n+    /**\n+     * Gets The HTTP pipeline to send requests through.\n+     *\n+     * @return the httpPipeline value.\n+     */\n+    HttpPipeline getHttpPipeline();\n+\n+    /**\n+     * Gets The default poll interval for long-running operation.\n+     *\n+     * @return the defaultPollInterval value.\n+     */\n+    Duration getDefaultPollInterval();\n+\n+    /**\n+     * Gets the ProfilesClient object to access its operations.\n+     *\n+     * @return the ProfilesClient object.\n+     */\n+    ProfilesClient getProfiles();\n+\n+    /**\n+     * Gets the EndpointsClient object to access its operations.\n+     *\n+     * @return the EndpointsClient object.\n+     */\n+    EndpointsClient getEndpoints();\n+\n+    /**\n+     * Gets the OriginsClient object to access its operations.\n+     *\n+     * @return the OriginsClient object.\n+     */\n+    OriginsClient getOrigins();\n+\n+    /**\n+     * Gets the OriginGroupsClient object to access its operations.\n+     *\n+     * @return the OriginGroupsClient object.\n+     */\n+    OriginGroupsClient getOriginGroups();\n+\n+    /**\n+     * Gets the CustomDomainsClient object to access its operations.\n+     *\n+     * @return the CustomDomainsClient object.\n+     */\n+    CustomDomainsClient getCustomDomains();\n+\n+    /**\n+     * Gets the ResourceProvidersClient object to access its operations.\n+     *\n+     * @return the ResourceProvidersClient object.\n+     */\n+    ResourceProvidersClient getResourceProviders();\n+\n+    /**\n+     * Gets the ResourceUsagesClient object to access its operations.\n+     *\n+     * @return the ResourceUsagesClient object.\n+     */\n+    ResourceUsagesClient getResourceUsages();\n+\n+    /**\n+     * Gets the OperationsClient object to access its operations.\n+     *\n+     * @return the OperationsClient object.\n+     */\n+    OperationsClient getOperations();\n+\n+    /**\n+     * Gets the EdgeNodesClient object to access its operations.\n+     *\n+     * @return the EdgeNodesClient object.\n+     */\n+    EdgeNodesClient getEdgeNodes();\n+\n+    /**\n+     * Gets the AfdProfilesClient object to access its operations.\n+     *\n+     * @return the AfdProfilesClient object.\n+     */\n+    AfdProfilesClient getAfdProfiles();\n+\n+    /**\n+     * Gets the AfdCustomDomainsClient object to access its operations.\n+     *\n+     * @return the AfdCustomDomainsClient object.\n+     */\n+    AfdCustomDomainsClient getAfdCustomDomains();\n+\n+    /**\n+     * Gets the AfdEndpointsClient object to access its operations.\n+     *\n+     * @return the AfdEndpointsClient object.\n+     */\n+    AfdEndpointsClient getAfdEndpoints();\n+\n+    /**\n+     * Gets the AfdOriginGroupsClient object to access its operations.\n+     *\n+     * @return the AfdOriginGroupsClient object.\n+     */\n+    AfdOriginGroupsClient getAfdOriginGroups();\n+\n+    /**\n+     * Gets the AfdOriginsClient object to access its operations.\n+     *\n+     * @return the AfdOriginsClient object.\n+     */\n+    AfdOriginsClient getAfdOrigins();\n+\n+    /**\n+     * Gets the RoutesClient object to access its operations.\n+     *\n+     * @return the RoutesClient object.\n+     */\n+    RoutesClient getRoutes();\n+\n+    /**\n+     * Gets the RuleSetsClient object to access its operations.\n+     *\n+     * @return the RuleSetsClient object.\n+     */\n+    RuleSetsClient getRuleSets();\n+\n+    /**\n+     * Gets the RulesClient object to access its operations.\n+     *\n+     * @return the RulesClient object.\n+     */\n+    RulesClient getRules();\n+\n+    /**\n+     * Gets the SecurityPoliciesClient object to access its operations.\n+     *\n+     * @return the SecurityPoliciesClient object.\n+     */\n+    SecurityPoliciesClient getSecurityPolicies();\n+\n+    /**\n+     * Gets the SecretsClient object to access its operations.\n+     *\n+     * @return the SecretsClient object.\n+     */\n+    SecretsClient getSecrets();\n+\n+    /**\n+     * Gets the ValidatesClient object to access its operations.\n+     *\n+     * @return the ValidatesClient object.\n+     */\n+    ValidatesClient getValidates();\n+\n+    /**\n+     * Gets the LogAnalyticsClient object to access its operations.\n+     *\n+     * @return the LogAnalyticsClient object.\n+     */\n+    LogAnalyticsClient getLogAnalytics();\n+\n+    /**\n+     * Gets the PoliciesClient object to access its operations.\n+     *\n+     * @return the PoliciesClient object.\n+     */\n+    PoliciesClient getPolicies();\n+\n+    /**\n+     * Gets the ManagedRuleSetsClient object to access its operations.\n+     *\n+     * @return the ManagedRuleSetsClient object.\n+     */\n+    ManagedRuleSetsClient getManagedRuleSets();\n+}"
  },
  {
    "sha": "944a260c62878a95726051036d43e31f5d20d6c3",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/CustomDomainsClient.java",
    "status": "added",
    "additions": 313,
    "deletions": 0,
    "changes": 313,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/CustomDomainsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/CustomDomainsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/CustomDomainsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,313 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.CustomDomainInner;\n+import com.azure.resourcemanager.cdn.generated.models.CustomDomainHttpsParameters;\n+import com.azure.resourcemanager.cdn.generated.models.CustomDomainParameters;\n+\n+/** An instance of this class provides access to all the operations defined in CustomDomainsClient. */\n+public interface CustomDomainsClient {\n+    /**\n+     * Lists all of the existing custom domains within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list custom domains.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<CustomDomainInner> listByEndpoint(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Lists all of the existing custom domains within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list custom domains.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<CustomDomainInner> listByEndpoint(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Gets an existing custom domain within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing custom domain within an endpoint.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomDomainInner get(String resourceGroupName, String profileName, String endpointName, String customDomainName);\n+\n+    /**\n+     * Gets an existing custom domain within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing custom domain within an endpoint.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<CustomDomainInner> getWithResponse(\n+        String resourceGroupName, String profileName, String endpointName, String customDomainName, Context context);\n+\n+    /**\n+     * Creates a new custom domain within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @param customDomainProperties Properties required to create a new custom domain.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<CustomDomainInner>, CustomDomainInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String customDomainName,\n+        CustomDomainParameters customDomainProperties);\n+\n+    /**\n+     * Creates a new custom domain within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @param customDomainProperties Properties required to create a new custom domain.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<CustomDomainInner>, CustomDomainInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String customDomainName,\n+        CustomDomainParameters customDomainProperties,\n+        Context context);\n+\n+    /**\n+     * Creates a new custom domain within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @param customDomainProperties Properties required to create a new custom domain.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomDomainInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String customDomainName,\n+        CustomDomainParameters customDomainProperties);\n+\n+    /**\n+     * Creates a new custom domain within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @param customDomainProperties Properties required to create a new custom domain.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes,\n+     *     e.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomDomainInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String customDomainName,\n+        CustomDomainParameters customDomainProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing custom domain within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<CustomDomainInner>, CustomDomainInner> beginDelete(\n+        String resourceGroupName, String profileName, String endpointName, String customDomainName);\n+\n+    /**\n+     * Deletes an existing custom domain within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<CustomDomainInner>, CustomDomainInner> beginDelete(\n+        String resourceGroupName, String profileName, String endpointName, String customDomainName, Context context);\n+\n+    /**\n+     * Deletes an existing custom domain within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomDomainInner delete(\n+        String resourceGroupName, String profileName, String endpointName, String customDomainName);\n+\n+    /**\n+     * Deletes an existing custom domain within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomDomainInner delete(\n+        String resourceGroupName, String profileName, String endpointName, String customDomainName, Context context);\n+\n+    /**\n+     * Disable https delivery of the custom domain.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomDomainInner disableCustomHttps(\n+        String resourceGroupName, String profileName, String endpointName, String customDomainName);\n+\n+    /**\n+     * Disable https delivery of the custom domain.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<CustomDomainInner> disableCustomHttpsWithResponse(\n+        String resourceGroupName, String profileName, String endpointName, String customDomainName, Context context);\n+\n+    /**\n+     * Enable https delivery of the custom domain.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomDomainInner enableCustomHttps(\n+        String resourceGroupName, String profileName, String endpointName, String customDomainName);\n+\n+    /**\n+     * Enable https delivery of the custom domain.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainName Name of the custom domain within an endpoint.\n+     * @param customDomainHttpsParameters The configuration specifying how to enable HTTPS for the custom domain - using\n+     *     CDN managed certificate or user's own certificate. If not specified, enabling ssl uses CDN managed\n+     *     certificate by default.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<CustomDomainInner> enableCustomHttpsWithResponse(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String customDomainName,\n+        CustomDomainHttpsParameters customDomainHttpsParameters,\n+        Context context);\n+}"
  },
  {
    "sha": "ecd9c1a30e7144ab5bcc6c71446ed9ba37e4ee3a",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/EdgeNodesClient.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/EdgeNodesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/EdgeNodesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/EdgeNodesClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,36 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.EdgeNodeInner;\n+\n+/** An instance of this class provides access to all the operations defined in EdgeNodesClient. */\n+public interface EdgeNodesClient {\n+    /**\n+     * Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list CDN edgenodes.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<EdgeNodeInner> list();\n+\n+    /**\n+     * Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list CDN edgenodes.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<EdgeNodeInner> list(Context context);\n+}"
  },
  {
    "sha": "6916afa46f9493d95db57d7888ff9234c9f28a5e",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/EndpointsClient.java",
    "status": "added",
    "additions": 669,
    "deletions": 0,
    "changes": 669,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/EndpointsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/EndpointsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/EndpointsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,669 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.EndpointInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ResourceUsageInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ValidateCustomDomainOutputInner;\n+import com.azure.resourcemanager.cdn.generated.models.EndpointUpdateParameters;\n+import com.azure.resourcemanager.cdn.generated.models.LoadParameters;\n+import com.azure.resourcemanager.cdn.generated.models.PurgeParameters;\n+import com.azure.resourcemanager.cdn.generated.models.ValidateCustomDomainInput;\n+\n+/** An instance of this class provides access to all the operations defined in EndpointsClient. */\n+public interface EndpointsClient {\n+    /**\n+     * Lists existing CDN endpoints.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list endpoints.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<EndpointInner> listByProfile(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Lists existing CDN endpoints.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list endpoints.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<EndpointInner> listByProfile(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group\n+     * and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing CDN endpoint with the specified endpoint name under the specified subscription, resource\n+     *     group and profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EndpointInner get(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group\n+     * and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing CDN endpoint with the specified endpoint name under the specified subscription, resource\n+     *     group and profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<EndpointInner> getWithResponse(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and\n+     * profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpoint Endpoint properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<EndpointInner>, EndpointInner> beginCreate(\n+        String resourceGroupName, String profileName, String endpointName, EndpointInner endpoint);\n+\n+    /**\n+     * Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and\n+     * profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpoint Endpoint properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<EndpointInner>, EndpointInner> beginCreate(\n+        String resourceGroupName, String profileName, String endpointName, EndpointInner endpoint, Context context);\n+\n+    /**\n+     * Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and\n+     * profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpoint Endpoint properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EndpointInner create(String resourceGroupName, String profileName, String endpointName, EndpointInner endpoint);\n+\n+    /**\n+     * Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and\n+     * profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpoint Endpoint properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EndpointInner create(\n+        String resourceGroupName, String profileName, String endpointName, EndpointInner endpoint, Context context);\n+\n+    /**\n+     * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin\n+     * operation. To update origin groups, use the Update Origin group operation. To update custom domains, use the\n+     * Update Custom Domain operation.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpointUpdateProperties Endpoint update properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<EndpointInner>, EndpointInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        EndpointUpdateParameters endpointUpdateProperties);\n+\n+    /**\n+     * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin\n+     * operation. To update origin groups, use the Update Origin group operation. To update custom domains, use the\n+     * Update Custom Domain operation.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpointUpdateProperties Endpoint update properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<EndpointInner>, EndpointInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        EndpointUpdateParameters endpointUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin\n+     * operation. To update origin groups, use the Update Origin group operation. To update custom domains, use the\n+     * Update Custom Domain operation.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpointUpdateProperties Endpoint update properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EndpointInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        EndpointUpdateParameters endpointUpdateProperties);\n+\n+    /**\n+     * Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin\n+     * operation. To update origin groups, use the Update Origin group operation. To update custom domains, use the\n+     * Update Custom Domain operation.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param endpointUpdateProperties Endpoint update properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EndpointInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        EndpointUpdateParameters endpointUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource\n+     * group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Starts an existing CDN endpoint that is on a stopped state.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<EndpointInner>, EndpointInner> beginStart(\n+        String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Starts an existing CDN endpoint that is on a stopped state.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<EndpointInner>, EndpointInner> beginStart(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Starts an existing CDN endpoint that is on a stopped state.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EndpointInner start(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Starts an existing CDN endpoint that is on a stopped state.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EndpointInner start(String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Stops an existing running CDN endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<EndpointInner>, EndpointInner> beginStop(\n+        String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Stops an existing running CDN endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<EndpointInner>, EndpointInner> beginStop(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Stops an existing running CDN endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EndpointInner stop(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Stops an existing running CDN endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN endpoint is the entity within a CDN profile containing configuration information such as origin,\n+     *     protocol, content caching and delivery behavior.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    EndpointInner stop(String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Removes a content from CDN.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contentFilePaths The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png'\n+     *     which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and\n+     *     files in the directory.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginPurgeContent(\n+        String resourceGroupName, String profileName, String endpointName, PurgeParameters contentFilePaths);\n+\n+    /**\n+     * Removes a content from CDN.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contentFilePaths The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png'\n+     *     which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and\n+     *     files in the directory.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginPurgeContent(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        PurgeParameters contentFilePaths,\n+        Context context);\n+\n+    /**\n+     * Removes a content from CDN.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contentFilePaths The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png'\n+     *     which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and\n+     *     files in the directory.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void purgeContent(\n+        String resourceGroupName, String profileName, String endpointName, PurgeParameters contentFilePaths);\n+\n+    /**\n+     * Removes a content from CDN.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contentFilePaths The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png'\n+     *     which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and\n+     *     files in the directory.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void purgeContent(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        PurgeParameters contentFilePaths,\n+        Context context);\n+\n+    /**\n+     * Pre-loads a content to CDN. Available for Verizon Profiles.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g.\n+     *     ‘/pictures/city.png' which loads a single file.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginLoadContent(\n+        String resourceGroupName, String profileName, String endpointName, LoadParameters contentFilePaths);\n+\n+    /**\n+     * Pre-loads a content to CDN. Available for Verizon Profiles.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g.\n+     *     ‘/pictures/city.png' which loads a single file.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginLoadContent(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        LoadParameters contentFilePaths,\n+        Context context);\n+\n+    /**\n+     * Pre-loads a content to CDN. Available for Verizon Profiles.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g.\n+     *     ‘/pictures/city.png' which loads a single file.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void loadContent(\n+        String resourceGroupName, String profileName, String endpointName, LoadParameters contentFilePaths);\n+\n+    /**\n+     * Pre-loads a content to CDN. Available for Verizon Profiles.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param contentFilePaths The path to the content to be loaded. Path should be a full URL, e.g.\n+     *     ‘/pictures/city.png' which loads a single file.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void loadContent(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        LoadParameters contentFilePaths,\n+        Context context);\n+\n+    /**\n+     * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainProperties Custom domain to be validated.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of custom domain validation.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ValidateCustomDomainOutputInner validateCustomDomain(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        ValidateCustomDomainInput customDomainProperties);\n+\n+    /**\n+     * Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param customDomainProperties Custom domain to be validated.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of custom domain validation.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ValidateCustomDomainOutputInner> validateCustomDomainWithResponse(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        ValidateCustomDomainInput customDomainProperties,\n+        Context context);\n+\n+    /**\n+     * Checks the quota and usage of geo filters and custom domains under the given endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of check resource usage API.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ResourceUsageInner> listResourceUsage(\n+        String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Checks the quota and usage of geo filters and custom domains under the given endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of check resource usage API.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ResourceUsageInner> listResourceUsage(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+}"
  },
  {
    "sha": "35fae0e3ff66220f79df06774be28916210993b2",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/LogAnalyticsClient.java",
    "status": "added",
    "additions": 314,
    "deletions": 0,
    "changes": 314,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/LogAnalyticsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/LogAnalyticsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/LogAnalyticsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,314 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ContinentsResponseInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.MetricsResponseInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.RankingsResponseInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ResourcesResponseInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.WafMetricsResponseInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.WafRankingsResponseInner;\n+import com.azure.resourcemanager.cdn.generated.models.LogMetric;\n+import com.azure.resourcemanager.cdn.generated.models.LogMetricsGranularity;\n+import com.azure.resourcemanager.cdn.generated.models.LogMetricsGroupBy;\n+import com.azure.resourcemanager.cdn.generated.models.LogRanking;\n+import com.azure.resourcemanager.cdn.generated.models.LogRankingMetric;\n+import com.azure.resourcemanager.cdn.generated.models.WafAction;\n+import com.azure.resourcemanager.cdn.generated.models.WafGranularity;\n+import com.azure.resourcemanager.cdn.generated.models.WafMetric;\n+import com.azure.resourcemanager.cdn.generated.models.WafRankingGroupBy;\n+import com.azure.resourcemanager.cdn.generated.models.WafRankingType;\n+import com.azure.resourcemanager.cdn.generated.models.WafRuleType;\n+import java.time.OffsetDateTime;\n+import java.util.List;\n+\n+/** An instance of this class provides access to all the operations defined in LogAnalyticsClient. */\n+public interface LogAnalyticsClient {\n+    /**\n+     * Get log report for AFD profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param metrics Array of LogMetric.\n+     * @param dateTimeBegin The dateTimeBegin parameter.\n+     * @param dateTimeEnd The dateTimeEnd parameter.\n+     * @param granularity The granularity parameter.\n+     * @param customDomains Array of Get11ItemsItem.\n+     * @param protocols Array of Get12ItemsItem.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return log report for AFD profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    MetricsResponseInner getLogAnalyticsMetrics(\n+        String resourceGroupName,\n+        String profileName,\n+        List<LogMetric> metrics,\n+        OffsetDateTime dateTimeBegin,\n+        OffsetDateTime dateTimeEnd,\n+        LogMetricsGranularity granularity,\n+        List<String> customDomains,\n+        List<String> protocols);\n+\n+    /**\n+     * Get log report for AFD profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param metrics Array of LogMetric.\n+     * @param dateTimeBegin The dateTimeBegin parameter.\n+     * @param dateTimeEnd The dateTimeEnd parameter.\n+     * @param granularity The granularity parameter.\n+     * @param customDomains Array of Get11ItemsItem.\n+     * @param protocols Array of Get12ItemsItem.\n+     * @param groupBy Array of LogMetricsGroupBy.\n+     * @param continents Array of Get9ItemsItem.\n+     * @param countryOrRegions Array of Get10ItemsItem.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return log report for AFD profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<MetricsResponseInner> getLogAnalyticsMetricsWithResponse(\n+        String resourceGroupName,\n+        String profileName,\n+        List<LogMetric> metrics,\n+        OffsetDateTime dateTimeBegin,\n+        OffsetDateTime dateTimeEnd,\n+        LogMetricsGranularity granularity,\n+        List<String> customDomains,\n+        List<String> protocols,\n+        List<LogMetricsGroupBy> groupBy,\n+        List<String> continents,\n+        List<String> countryOrRegions,\n+        Context context);\n+\n+    /**\n+     * Get log analytics ranking report for AFD profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param rankings Array of LogRanking.\n+     * @param metrics Array of LogRankingMetric.\n+     * @param maxRanking The maxRanking parameter.\n+     * @param dateTimeBegin The dateTimeBegin parameter.\n+     * @param dateTimeEnd The dateTimeEnd parameter.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return log analytics ranking report for AFD profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RankingsResponseInner getLogAnalyticsRankings(\n+        String resourceGroupName,\n+        String profileName,\n+        List<LogRanking> rankings,\n+        List<LogRankingMetric> metrics,\n+        int maxRanking,\n+        OffsetDateTime dateTimeBegin,\n+        OffsetDateTime dateTimeEnd);\n+\n+    /**\n+     * Get log analytics ranking report for AFD profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param rankings Array of LogRanking.\n+     * @param metrics Array of LogRankingMetric.\n+     * @param maxRanking The maxRanking parameter.\n+     * @param dateTimeBegin The dateTimeBegin parameter.\n+     * @param dateTimeEnd The dateTimeEnd parameter.\n+     * @param customDomains Array of String.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return log analytics ranking report for AFD profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<RankingsResponseInner> getLogAnalyticsRankingsWithResponse(\n+        String resourceGroupName,\n+        String profileName,\n+        List<LogRanking> rankings,\n+        List<LogRankingMetric> metrics,\n+        int maxRanking,\n+        OffsetDateTime dateTimeBegin,\n+        OffsetDateTime dateTimeEnd,\n+        List<String> customDomains,\n+        Context context);\n+\n+    /**\n+     * Get all available location names for AFD log analytics report.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all available location names for AFD log analytics report.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ContinentsResponseInner getLogAnalyticsLocations(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Get all available location names for AFD log analytics report.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all available location names for AFD log analytics report.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ContinentsResponseInner> getLogAnalyticsLocationsWithResponse(\n+        String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Get all endpoints and custom domains available for AFD log report.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all endpoints and custom domains available for AFD log report.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ResourcesResponseInner getLogAnalyticsResources(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Get all endpoints and custom domains available for AFD log report.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all endpoints and custom domains available for AFD log report.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ResourcesResponseInner> getLogAnalyticsResourcesWithResponse(\n+        String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Get Waf related log analytics report for AFD profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param metrics Array of WafMetric.\n+     * @param dateTimeBegin The dateTimeBegin parameter.\n+     * @param dateTimeEnd The dateTimeEnd parameter.\n+     * @param granularity The granularity parameter.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return waf related log analytics report for AFD profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    WafMetricsResponseInner getWafLogAnalyticsMetrics(\n+        String resourceGroupName,\n+        String profileName,\n+        List<WafMetric> metrics,\n+        OffsetDateTime dateTimeBegin,\n+        OffsetDateTime dateTimeEnd,\n+        WafGranularity granularity);\n+\n+    /**\n+     * Get Waf related log analytics report for AFD profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param metrics Array of WafMetric.\n+     * @param dateTimeBegin The dateTimeBegin parameter.\n+     * @param dateTimeEnd The dateTimeEnd parameter.\n+     * @param granularity The granularity parameter.\n+     * @param actions Array of WafAction.\n+     * @param groupBy Array of WafRankingGroupBy.\n+     * @param ruleTypes Array of WafRuleType.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return waf related log analytics report for AFD profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<WafMetricsResponseInner> getWafLogAnalyticsMetricsWithResponse(\n+        String resourceGroupName,\n+        String profileName,\n+        List<WafMetric> metrics,\n+        OffsetDateTime dateTimeBegin,\n+        OffsetDateTime dateTimeEnd,\n+        WafGranularity granularity,\n+        List<WafAction> actions,\n+        List<WafRankingGroupBy> groupBy,\n+        List<WafRuleType> ruleTypes,\n+        Context context);\n+\n+    /**\n+     * Get WAF log analytics charts for AFD profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param metrics Array of WafMetric.\n+     * @param dateTimeBegin The dateTimeBegin parameter.\n+     * @param dateTimeEnd The dateTimeEnd parameter.\n+     * @param maxRanking The maxRanking parameter.\n+     * @param rankings Array of WafRankingType.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return wAF log analytics charts for AFD profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    WafRankingsResponseInner getWafLogAnalyticsRankings(\n+        String resourceGroupName,\n+        String profileName,\n+        List<WafMetric> metrics,\n+        OffsetDateTime dateTimeBegin,\n+        OffsetDateTime dateTimeEnd,\n+        int maxRanking,\n+        List<WafRankingType> rankings);\n+\n+    /**\n+     * Get WAF log analytics charts for AFD profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param metrics Array of WafMetric.\n+     * @param dateTimeBegin The dateTimeBegin parameter.\n+     * @param dateTimeEnd The dateTimeEnd parameter.\n+     * @param maxRanking The maxRanking parameter.\n+     * @param rankings Array of WafRankingType.\n+     * @param actions Array of WafAction.\n+     * @param ruleTypes Array of WafRuleType.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return wAF log analytics charts for AFD profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<WafRankingsResponseInner> getWafLogAnalyticsRankingsWithResponse(\n+        String resourceGroupName,\n+        String profileName,\n+        List<WafMetric> metrics,\n+        OffsetDateTime dateTimeBegin,\n+        OffsetDateTime dateTimeEnd,\n+        int maxRanking,\n+        List<WafRankingType> rankings,\n+        List<WafAction> actions,\n+        List<WafRuleType> ruleTypes,\n+        Context context);\n+}"
  },
  {
    "sha": "dee42452d8131356199e14232f99e7719bf3b98b",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ManagedRuleSetsClient.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ManagedRuleSetsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ManagedRuleSetsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ManagedRuleSetsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,36 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ManagedRuleSetDefinitionInner;\n+\n+/** An instance of this class provides access to all the operations defined in ManagedRuleSetsClient. */\n+public interface ManagedRuleSetsClient {\n+    /**\n+     * Lists all available managed rule sets.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed rule set definitions available for use in a policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ManagedRuleSetDefinitionInner> list();\n+\n+    /**\n+     * Lists all available managed rule sets.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed rule set definitions available for use in a policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ManagedRuleSetDefinitionInner> list(Context context);\n+}"
  },
  {
    "sha": "2bcfa2a622e56985d4d0e52f41c27d5503ff4af3",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OperationsClient.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OperationsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OperationsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OperationsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,36 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.OperationInner;\n+\n+/** An instance of this class provides access to all the operations defined in OperationsClient. */\n+public interface OperationsClient {\n+    /**\n+     * Lists all of the available CDN REST API operations.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list CDN operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OperationInner> list();\n+\n+    /**\n+     * Lists all of the available CDN REST API operations.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list CDN operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OperationInner> list(Context context);\n+}"
  },
  {
    "sha": "25fc6b9c43e8706458109880853021458802028f",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OriginGroupsClient.java",
    "status": "added",
    "additions": 327,
    "deletions": 0,
    "changes": 327,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OriginGroupsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OriginGroupsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OriginGroupsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,327 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.OriginGroupInner;\n+import com.azure.resourcemanager.cdn.generated.models.OriginGroupUpdateParameters;\n+\n+/** An instance of this class provides access to all the operations defined in OriginGroupsClient. */\n+public interface OriginGroupsClient {\n+    /**\n+     * Lists all of the existing origin groups within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list origin groups.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OriginGroupInner> listByEndpoint(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Lists all of the existing origin groups within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list origin groups.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OriginGroupInner> listByEndpoint(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Gets an existing origin group within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing origin group within an endpoint.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    OriginGroupInner get(String resourceGroupName, String profileName, String endpointName, String originGroupName);\n+\n+    /**\n+     * Gets an existing origin group within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing origin group within an endpoint.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<OriginGroupInner> getWithResponse(\n+        String resourceGroupName, String profileName, String endpointName, String originGroupName, Context context);\n+\n+    /**\n+     * Creates a new origin group within the specified endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroup Origin group properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return origin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<OriginGroupInner>, OriginGroupInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originGroupName,\n+        OriginGroupInner originGroup);\n+\n+    /**\n+     * Creates a new origin group within the specified endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroup Origin group properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return origin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<OriginGroupInner>, OriginGroupInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originGroupName,\n+        OriginGroupInner originGroup,\n+        Context context);\n+\n+    /**\n+     * Creates a new origin group within the specified endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroup Origin group properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return origin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    OriginGroupInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originGroupName,\n+        OriginGroupInner originGroup);\n+\n+    /**\n+     * Creates a new origin group within the specified endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroup Origin group properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return origin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    OriginGroupInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originGroupName,\n+        OriginGroupInner originGroup,\n+        Context context);\n+\n+    /**\n+     * Updates an existing origin group within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroupUpdateProperties Origin group properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return origin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<OriginGroupInner>, OriginGroupInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originGroupName,\n+        OriginGroupUpdateParameters originGroupUpdateProperties);\n+\n+    /**\n+     * Updates an existing origin group within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroupUpdateProperties Origin group properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return origin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<OriginGroupInner>, OriginGroupInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originGroupName,\n+        OriginGroupUpdateParameters originGroupUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing origin group within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroupUpdateProperties Origin group properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return origin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    OriginGroupInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originGroupName,\n+        OriginGroupUpdateParameters originGroupUpdateProperties);\n+\n+    /**\n+     * Updates an existing origin group within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param originGroupUpdateProperties Origin group properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return origin group comprising of origins is used for load balancing to origins when the content cannot be\n+     *     served from CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    OriginGroupInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originGroupName,\n+        OriginGroupUpdateParameters originGroupUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing origin group within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String endpointName, String originGroupName);\n+\n+    /**\n+     * Deletes an existing origin group within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String endpointName, String originGroupName, Context context);\n+\n+    /**\n+     * Deletes an existing origin group within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String endpointName, String originGroupName);\n+\n+    /**\n+     * Deletes an existing origin group within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originGroupName Name of the origin group which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(\n+        String resourceGroupName, String profileName, String endpointName, String originGroupName, Context context);\n+}"
  },
  {
    "sha": "ec5a4c7a0d257735ac0c66de68d07134f9b02fef",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OriginsClient.java",
    "status": "added",
    "additions": 310,
    "deletions": 0,
    "changes": 310,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OriginsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OriginsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/OriginsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,310 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.OriginInner;\n+import com.azure.resourcemanager.cdn.generated.models.OriginUpdateParameters;\n+\n+/** An instance of this class provides access to all the operations defined in OriginsClient. */\n+public interface OriginsClient {\n+    /**\n+     * Lists all of the existing origins within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list origins.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OriginInner> listByEndpoint(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Lists all of the existing origins within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list origins.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OriginInner> listByEndpoint(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Gets an existing origin within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing origin within an endpoint.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    OriginInner get(String resourceGroupName, String profileName, String endpointName, String originName);\n+\n+    /**\n+     * Gets an existing origin within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing origin within an endpoint.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<OriginInner> getWithResponse(\n+        String resourceGroupName, String profileName, String endpointName, String originName, Context context);\n+\n+    /**\n+     * Creates a new origin within the specified endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin that is unique within the endpoint.\n+     * @param origin Origin properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<OriginInner>, OriginInner> beginCreate(\n+        String resourceGroupName, String profileName, String endpointName, String originName, OriginInner origin);\n+\n+    /**\n+     * Creates a new origin within the specified endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin that is unique within the endpoint.\n+     * @param origin Origin properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<OriginInner>, OriginInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originName,\n+        OriginInner origin,\n+        Context context);\n+\n+    /**\n+     * Creates a new origin within the specified endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin that is unique within the endpoint.\n+     * @param origin Origin properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    OriginInner create(\n+        String resourceGroupName, String profileName, String endpointName, String originName, OriginInner origin);\n+\n+    /**\n+     * Creates a new origin within the specified endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin that is unique within the endpoint.\n+     * @param origin Origin properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    OriginInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originName,\n+        OriginInner origin,\n+        Context context);\n+\n+    /**\n+     * Updates an existing origin within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin which is unique within the endpoint.\n+     * @param originUpdateProperties Origin properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<OriginInner>, OriginInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originName,\n+        OriginUpdateParameters originUpdateProperties);\n+\n+    /**\n+     * Updates an existing origin within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin which is unique within the endpoint.\n+     * @param originUpdateProperties Origin properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<OriginInner>, OriginInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originName,\n+        OriginUpdateParameters originUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing origin within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin which is unique within the endpoint.\n+     * @param originUpdateProperties Origin properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    OriginInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originName,\n+        OriginUpdateParameters originUpdateProperties);\n+\n+    /**\n+     * Updates an existing origin within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin which is unique within the endpoint.\n+     * @param originUpdateProperties Origin properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN origin is the source of the content being delivered via CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    OriginInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String originName,\n+        OriginUpdateParameters originUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing origin within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String endpointName, String originName);\n+\n+    /**\n+     * Deletes an existing origin within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String endpointName, String originName, Context context);\n+\n+    /**\n+     * Deletes an existing origin within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String endpointName, String originName);\n+\n+    /**\n+     * Deletes an existing origin within an endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param originName Name of the origin which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String endpointName, String originName, Context context);\n+}"
  },
  {
    "sha": "df1e3f41069f4f5e2b53d7c775d62a04b76e210f",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/PoliciesClient.java",
    "status": "added",
    "additions": 247,
    "deletions": 0,
    "changes": 247,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/PoliciesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/PoliciesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/PoliciesClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,247 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.CdnWebApplicationFirewallPolicyInner;\n+import com.azure.resourcemanager.cdn.generated.models.CdnWebApplicationFirewallPolicyPatchParameters;\n+\n+/** An instance of this class provides access to all the operations defined in PoliciesClient. */\n+public interface PoliciesClient {\n+    /**\n+     * Lists all of the protection policies within a resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines a list of WebApplicationFirewallPolicies for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<CdnWebApplicationFirewallPolicyInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Lists all of the protection policies within a resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines a list of WebApplicationFirewallPolicies for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<CdnWebApplicationFirewallPolicyInner> listByResourceGroup(String resourceGroupName, Context context);\n+\n+    /**\n+     * Retrieve protection policy with specified name within a resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines web application firewall policy for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CdnWebApplicationFirewallPolicyInner getByResourceGroup(String resourceGroupName, String policyName);\n+\n+    /**\n+     * Retrieve protection policy with specified name within a resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines web application firewall policy for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<CdnWebApplicationFirewallPolicyInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String policyName, Context context);\n+\n+    /**\n+     * Create or update policy with specified rule set name within a resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @param cdnWebApplicationFirewallPolicy Policy to be created.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines web application firewall policy for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<CdnWebApplicationFirewallPolicyInner>, CdnWebApplicationFirewallPolicyInner>\n+        beginCreateOrUpdate(\n+            String resourceGroupName,\n+            String policyName,\n+            CdnWebApplicationFirewallPolicyInner cdnWebApplicationFirewallPolicy);\n+\n+    /**\n+     * Create or update policy with specified rule set name within a resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @param cdnWebApplicationFirewallPolicy Policy to be created.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines web application firewall policy for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<CdnWebApplicationFirewallPolicyInner>, CdnWebApplicationFirewallPolicyInner>\n+        beginCreateOrUpdate(\n+            String resourceGroupName,\n+            String policyName,\n+            CdnWebApplicationFirewallPolicyInner cdnWebApplicationFirewallPolicy,\n+            Context context);\n+\n+    /**\n+     * Create or update policy with specified rule set name within a resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @param cdnWebApplicationFirewallPolicy Policy to be created.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines web application firewall policy for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CdnWebApplicationFirewallPolicyInner createOrUpdate(\n+        String resourceGroupName,\n+        String policyName,\n+        CdnWebApplicationFirewallPolicyInner cdnWebApplicationFirewallPolicy);\n+\n+    /**\n+     * Create or update policy with specified rule set name within a resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @param cdnWebApplicationFirewallPolicy Policy to be created.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines web application firewall policy for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CdnWebApplicationFirewallPolicyInner createOrUpdate(\n+        String resourceGroupName,\n+        String policyName,\n+        CdnWebApplicationFirewallPolicyInner cdnWebApplicationFirewallPolicy,\n+        Context context);\n+\n+    /**\n+     * Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the specified\n+     * subscription and resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @param cdnWebApplicationFirewallPolicyPatchParameters CdnWebApplicationFirewallPolicy parameters to be patched.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines web application firewall policy for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<CdnWebApplicationFirewallPolicyInner>, CdnWebApplicationFirewallPolicyInner> beginUpdate(\n+        String resourceGroupName,\n+        String policyName,\n+        CdnWebApplicationFirewallPolicyPatchParameters cdnWebApplicationFirewallPolicyPatchParameters);\n+\n+    /**\n+     * Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the specified\n+     * subscription and resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @param cdnWebApplicationFirewallPolicyPatchParameters CdnWebApplicationFirewallPolicy parameters to be patched.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines web application firewall policy for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<CdnWebApplicationFirewallPolicyInner>, CdnWebApplicationFirewallPolicyInner> beginUpdate(\n+        String resourceGroupName,\n+        String policyName,\n+        CdnWebApplicationFirewallPolicyPatchParameters cdnWebApplicationFirewallPolicyPatchParameters,\n+        Context context);\n+\n+    /**\n+     * Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the specified\n+     * subscription and resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @param cdnWebApplicationFirewallPolicyPatchParameters CdnWebApplicationFirewallPolicy parameters to be patched.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines web application firewall policy for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CdnWebApplicationFirewallPolicyInner update(\n+        String resourceGroupName,\n+        String policyName,\n+        CdnWebApplicationFirewallPolicyPatchParameters cdnWebApplicationFirewallPolicyPatchParameters);\n+\n+    /**\n+     * Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the specified\n+     * subscription and resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @param cdnWebApplicationFirewallPolicyPatchParameters CdnWebApplicationFirewallPolicy parameters to be patched.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return defines web application firewall policy for Azure CDN.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CdnWebApplicationFirewallPolicyInner update(\n+        String resourceGroupName,\n+        String policyName,\n+        CdnWebApplicationFirewallPolicyPatchParameters cdnWebApplicationFirewallPolicyPatchParameters,\n+        Context context);\n+\n+    /**\n+     * Deletes Policy.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String policyName);\n+\n+    /**\n+     * Deletes Policy.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param policyName The name of the CdnWebApplicationFirewallPolicy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<Void> deleteWithResponse(String resourceGroupName, String policyName, Context context);\n+}"
  },
  {
    "sha": "e980d96f06e7858a70ee4c9ff2de972f4e90b164",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ProfilesClient.java",
    "status": "added",
    "additions": 376,
    "deletions": 0,
    "changes": 376,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ProfilesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ProfilesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ProfilesClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,376 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ProfileInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ResourceUsageInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.SsoUriInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.SupportedOptimizationTypesListResultInner;\n+import com.azure.resourcemanager.cdn.generated.models.ProfileUpdateParameters;\n+\n+/** An instance of this class provides access to all the operations defined in ProfilesClient. */\n+public interface ProfilesClient {\n+    /**\n+     * Lists all of the CDN profiles within an Azure subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list profiles.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ProfileInner> list();\n+\n+    /**\n+     * Lists all of the CDN profiles within an Azure subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list profiles.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ProfileInner> list(Context context);\n+\n+    /**\n+     * Lists all of the CDN profiles within a resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list profiles.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ProfileInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Lists all of the CDN profiles within a resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list profiles.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ProfileInner> listByResourceGroup(String resourceGroupName, Context context);\n+\n+    /**\n+     * Gets a CDN profile with the specified profile name under the specified subscription and resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a CDN profile with the specified profile name under the specified subscription and resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ProfileInner getByResourceGroup(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Gets a CDN profile with the specified profile name under the specified subscription and resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a CDN profile with the specified profile name under the specified subscription and resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ProfileInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Creates a new CDN profile with a profile name under the specified subscription and resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param profile Profile properties needed to create a new profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN profile is a logical grouping of endpoints that share the same settings, such as CDN provider and\n+     *     pricing tier.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ProfileInner>, ProfileInner> beginCreate(\n+        String resourceGroupName, String profileName, ProfileInner profile);\n+\n+    /**\n+     * Creates a new CDN profile with a profile name under the specified subscription and resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param profile Profile properties needed to create a new profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN profile is a logical grouping of endpoints that share the same settings, such as CDN provider and\n+     *     pricing tier.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ProfileInner>, ProfileInner> beginCreate(\n+        String resourceGroupName, String profileName, ProfileInner profile, Context context);\n+\n+    /**\n+     * Creates a new CDN profile with a profile name under the specified subscription and resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param profile Profile properties needed to create a new profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN profile is a logical grouping of endpoints that share the same settings, such as CDN provider and\n+     *     pricing tier.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ProfileInner create(String resourceGroupName, String profileName, ProfileInner profile);\n+\n+    /**\n+     * Creates a new CDN profile with a profile name under the specified subscription and resource group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param profile Profile properties needed to create a new profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN profile is a logical grouping of endpoints that share the same settings, such as CDN provider and\n+     *     pricing tier.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ProfileInner create(String resourceGroupName, String profileName, ProfileInner profile, Context context);\n+\n+    /**\n+     * Updates an existing CDN profile with the specified profile name under the specified subscription and resource\n+     * group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param profileUpdateParameters Profile properties needed to update an existing profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN profile is a logical grouping of endpoints that share the same settings, such as CDN provider and\n+     *     pricing tier.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ProfileInner>, ProfileInner> beginUpdate(\n+        String resourceGroupName, String profileName, ProfileUpdateParameters profileUpdateParameters);\n+\n+    /**\n+     * Updates an existing CDN profile with the specified profile name under the specified subscription and resource\n+     * group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param profileUpdateParameters Profile properties needed to update an existing profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN profile is a logical grouping of endpoints that share the same settings, such as CDN provider and\n+     *     pricing tier.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ProfileInner>, ProfileInner> beginUpdate(\n+        String resourceGroupName, String profileName, ProfileUpdateParameters profileUpdateParameters, Context context);\n+\n+    /**\n+     * Updates an existing CDN profile with the specified profile name under the specified subscription and resource\n+     * group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param profileUpdateParameters Profile properties needed to update an existing profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN profile is a logical grouping of endpoints that share the same settings, such as CDN provider and\n+     *     pricing tier.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ProfileInner update(String resourceGroupName, String profileName, ProfileUpdateParameters profileUpdateParameters);\n+\n+    /**\n+     * Updates an existing CDN profile with the specified profile name under the specified subscription and resource\n+     * group.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param profileUpdateParameters Profile properties needed to update an existing profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return cDN profile is a logical grouping of endpoints that share the same settings, such as CDN provider and\n+     *     pricing tier.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ProfileInner update(\n+        String resourceGroupName, String profileName, ProfileUpdateParameters profileUpdateParameters, Context context);\n+\n+    /**\n+     * Deletes an existing CDN profile with the specified parameters. Deleting a profile will result in the deletion of\n+     * all of the sub-resources including endpoints, origins and custom domains.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Deletes an existing CDN profile with the specified parameters. Deleting a profile will result in the deletion of\n+     * all of the sub-resources including endpoints, origins and custom domains.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Deletes an existing CDN profile with the specified parameters. Deleting a profile will result in the deletion of\n+     * all of the sub-resources including endpoints, origins and custom domains.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Deletes an existing CDN profile with the specified parameters. Deleting a profile will result in the deletion of\n+     * all of the sub-resources including endpoints, origins and custom domains.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to\n+     * configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a\n+     * standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The\n+     * SSO URI changes approximately every 10 minutes.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the URI required to login to the supplemental portal from the Azure portal.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SsoUriInner generateSsoUri(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to\n+     * configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a\n+     * standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The\n+     * SSO URI changes approximately every 10 minutes.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the URI required to login to the supplemental portal from the Azure portal.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<SsoUriInner> generateSsoUriWithResponse(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Gets the supported optimization types for the current profile. A user can create an endpoint with an optimization\n+     * type from the listed values.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the supported optimization types for the current profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SupportedOptimizationTypesListResultInner listSupportedOptimizationTypes(\n+        String resourceGroupName, String profileName);\n+\n+    /**\n+     * Gets the supported optimization types for the current profile. A user can create an endpoint with an optimization\n+     * type from the listed values.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the supported optimization types for the current profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<SupportedOptimizationTypesListResultInner> listSupportedOptimizationTypesWithResponse(\n+        String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Checks the quota and actual usage of endpoints under the given CDN profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of check resource usage API.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ResourceUsageInner> listResourceUsage(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Checks the quota and actual usage of endpoints under the given CDN profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of check resource usage API.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ResourceUsageInner> listResourceUsage(String resourceGroupName, String profileName, Context context);\n+}"
  },
  {
    "sha": "1eb9e08c5f2ef5eaec59e8f249969e8912ed577c",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ResourceProvidersClient.java",
    "status": "added",
    "additions": 104,
    "deletions": 0,
    "changes": 104,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ResourceProvidersClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ResourceProvidersClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ResourceProvidersClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,104 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.CheckNameAvailabilityOutputInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ValidateProbeOutputInner;\n+import com.azure.resourcemanager.cdn.generated.models.CheckNameAvailabilityInput;\n+import com.azure.resourcemanager.cdn.generated.models.ValidateProbeInput;\n+\n+/** An instance of this class provides access to all the operations defined in ResourceProvidersClient. */\n+public interface ResourceProvidersClient {\n+    /**\n+     * Check the availability of a resource name. This is needed for resources where name is globally unique, such as a\n+     * CDN endpoint.\n+     *\n+     * @param checkNameAvailabilityInput Input to check.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of check name availability API.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CheckNameAvailabilityOutputInner checkNameAvailability(CheckNameAvailabilityInput checkNameAvailabilityInput);\n+\n+    /**\n+     * Check the availability of a resource name. This is needed for resources where name is globally unique, such as a\n+     * CDN endpoint.\n+     *\n+     * @param checkNameAvailabilityInput Input to check.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of check name availability API.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<CheckNameAvailabilityOutputInner> checkNameAvailabilityWithResponse(\n+        CheckNameAvailabilityInput checkNameAvailabilityInput, Context context);\n+\n+    /**\n+     * Check the availability of a resource name. This is needed for resources where name is globally unique, such as a\n+     * CDN endpoint.\n+     *\n+     * @param checkNameAvailabilityInput Input to check.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of check name availability API.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CheckNameAvailabilityOutputInner checkNameAvailabilityWithSubscription(\n+        CheckNameAvailabilityInput checkNameAvailabilityInput);\n+\n+    /**\n+     * Check the availability of a resource name. This is needed for resources where name is globally unique, such as a\n+     * CDN endpoint.\n+     *\n+     * @param checkNameAvailabilityInput Input to check.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of check name availability API.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<CheckNameAvailabilityOutputInner> checkNameAvailabilityWithSubscriptionWithResponse(\n+        CheckNameAvailabilityInput checkNameAvailabilityInput, Context context);\n+\n+    /**\n+     * Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a file hosted on\n+     * the origin server to help accelerate the delivery of dynamic content via the CDN endpoint. This path is relative\n+     * to the origin path specified in the endpoint configuration.\n+     *\n+     * @param validateProbeInput Input to check.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of the validate probe API.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ValidateProbeOutputInner validateProbe(ValidateProbeInput validateProbeInput);\n+\n+    /**\n+     * Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a file hosted on\n+     * the origin server to help accelerate the delivery of dynamic content via the CDN endpoint. This path is relative\n+     * to the origin path specified in the endpoint configuration.\n+     *\n+     * @param validateProbeInput Input to check.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of the validate probe API.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ValidateProbeOutputInner> validateProbeWithResponse(\n+        ValidateProbeInput validateProbeInput, Context context);\n+}"
  },
  {
    "sha": "76dc3d3ac9e1621dda7b411bd4187cae543e5d60",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ResourceUsagesClient.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ResourceUsagesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ResourceUsagesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ResourceUsagesClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,36 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ResourceUsageInner;\n+\n+/** An instance of this class provides access to all the operations defined in ResourceUsagesClient. */\n+public interface ResourceUsagesClient {\n+    /**\n+     * Check the quota and actual usage of the CDN profiles under the given subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of check resource usage API.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ResourceUsageInner> list();\n+\n+    /**\n+     * Check the quota and actual usage of the CDN profiles under the given subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of check resource usage API.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ResourceUsageInner> list(Context context);\n+}"
  },
  {
    "sha": "3c907a4afe0b56b1f6b3a184f4dbc0f3f776ad0c",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RoutesClient.java",
    "status": "added",
    "additions": 326,
    "deletions": 0,
    "changes": 326,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RoutesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RoutesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RoutesClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,326 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.RouteInner;\n+import com.azure.resourcemanager.cdn.generated.models.RouteUpdateParameters;\n+\n+/** An instance of this class provides access to all the operations defined in RoutesClient. */\n+public interface RoutesClient {\n+    /**\n+     * Lists all of the existing origins within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list routes.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RouteInner> listByEndpoint(String resourceGroupName, String profileName, String endpointName);\n+\n+    /**\n+     * Lists all of the existing origins within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list routes.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RouteInner> listByEndpoint(\n+        String resourceGroupName, String profileName, String endpointName, Context context);\n+\n+    /**\n+     * Gets an existing route with the specified route name under the specified subscription, resource group, profile,\n+     * and AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing route with the specified route name under the specified subscription, resource group,\n+     *     profile, and AzureFrontDoor endpoint.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RouteInner get(String resourceGroupName, String profileName, String endpointName, String routeName);\n+\n+    /**\n+     * Gets an existing route with the specified route name under the specified subscription, resource group, profile,\n+     * and AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing route with the specified route name under the specified subscription, resource group,\n+     *     profile, and AzureFrontDoor endpoint.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<RouteInner> getWithResponse(\n+        String resourceGroupName, String profileName, String endpointName, String routeName, Context context);\n+\n+    /**\n+     * Creates a new route with the specified route name under the specified subscription, resource group, profile, and\n+     * AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param route Route properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Routes name mapping to the any Routes or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<RouteInner>, RouteInner> beginCreate(\n+        String resourceGroupName, String profileName, String endpointName, String routeName, RouteInner route);\n+\n+    /**\n+     * Creates a new route with the specified route name under the specified subscription, resource group, profile, and\n+     * AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param route Route properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Routes name mapping to the any Routes or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<RouteInner>, RouteInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String routeName,\n+        RouteInner route,\n+        Context context);\n+\n+    /**\n+     * Creates a new route with the specified route name under the specified subscription, resource group, profile, and\n+     * AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param route Route properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Routes name mapping to the any Routes or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RouteInner create(\n+        String resourceGroupName, String profileName, String endpointName, String routeName, RouteInner route);\n+\n+    /**\n+     * Creates a new route with the specified route name under the specified subscription, resource group, profile, and\n+     * AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param route Route properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Routes name mapping to the any Routes or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RouteInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String routeName,\n+        RouteInner route,\n+        Context context);\n+\n+    /**\n+     * Updates an existing route with the specified route name under the specified subscription, resource group,\n+     * profile, and AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param routeUpdateProperties Route update properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Routes name mapping to the any Routes or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<RouteInner>, RouteInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String routeName,\n+        RouteUpdateParameters routeUpdateProperties);\n+\n+    /**\n+     * Updates an existing route with the specified route name under the specified subscription, resource group,\n+     * profile, and AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param routeUpdateProperties Route update properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Routes name mapping to the any Routes or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<RouteInner>, RouteInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String routeName,\n+        RouteUpdateParameters routeUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing route with the specified route name under the specified subscription, resource group,\n+     * profile, and AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param routeUpdateProperties Route update properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Routes name mapping to the any Routes or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RouteInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String routeName,\n+        RouteUpdateParameters routeUpdateProperties);\n+\n+    /**\n+     * Updates an existing route with the specified route name under the specified subscription, resource group,\n+     * profile, and AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param routeUpdateProperties Route update properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Routes name mapping to the any Routes or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RouteInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String endpointName,\n+        String routeName,\n+        RouteUpdateParameters routeUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing route with the specified route name under the specified subscription, resource group,\n+     * profile, and AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String endpointName, String routeName);\n+\n+    /**\n+     * Deletes an existing route with the specified route name under the specified subscription, resource group,\n+     * profile, and AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String endpointName, String routeName, Context context);\n+\n+    /**\n+     * Deletes an existing route with the specified route name under the specified subscription, resource group,\n+     * profile, and AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String endpointName, String routeName);\n+\n+    /**\n+     * Deletes an existing route with the specified route name under the specified subscription, resource group,\n+     * profile, and AzureFrontDoor endpoint.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param endpointName Name of the endpoint under the profile which is unique globally.\n+     * @param routeName Name of the routing rule.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String endpointName, String routeName, Context context);\n+}"
  },
  {
    "sha": "250d3d5918f93c1d0edc8d85a26e0892323a4ba7",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RuleSetsClient.java",
    "status": "added",
    "additions": 230,
    "deletions": 0,
    "changes": 230,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RuleSetsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RuleSetsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RuleSetsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,230 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.RuleSetInner;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.UsageInner;\n+\n+/** An instance of this class provides access to all the operations defined in RuleSetsClient. */\n+public interface RuleSetsClient {\n+    /**\n+     * Lists existing AzureFrontDoor rule sets within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list rule sets.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RuleSetInner> listByProfile(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Lists existing AzureFrontDoor rule sets within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list rule sets.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RuleSetInner> listByProfile(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Gets an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription,\n+     *     resource group and profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RuleSetInner get(String resourceGroupName, String profileName, String ruleSetName);\n+\n+    /**\n+     * Gets an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription,\n+     *     resource group and profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<RuleSetInner> getWithResponse(\n+        String resourceGroupName, String profileName, String ruleSetName, Context context);\n+\n+    /**\n+     * Creates a new rule set within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly RuleSet name mapping to the any RuleSet or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<RuleSetInner>, RuleSetInner> beginCreate(\n+        String resourceGroupName, String profileName, String ruleSetName);\n+\n+    /**\n+     * Creates a new rule set within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly RuleSet name mapping to the any RuleSet or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<RuleSetInner>, RuleSetInner> beginCreate(\n+        String resourceGroupName, String profileName, String ruleSetName, Context context);\n+\n+    /**\n+     * Creates a new rule set within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly RuleSet name mapping to the any RuleSet or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RuleSetInner create(String resourceGroupName, String profileName, String ruleSetName);\n+\n+    /**\n+     * Creates a new rule set within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly RuleSet name mapping to the any RuleSet or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RuleSetInner create(String resourceGroupName, String profileName, String ruleSetName, Context context);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String profileName, String ruleSetName);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String ruleSetName, Context context);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String ruleSetName);\n+\n+    /**\n+     * Deletes an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription,\n+     * resource group and profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String ruleSetName, Context context);\n+\n+    /**\n+     * Checks the quota and actual usage of endpoints under the given CDN profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the list usages operation response.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listResourceUsage(String resourceGroupName, String profileName, String ruleSetName);\n+\n+    /**\n+     * Checks the quota and actual usage of endpoints under the given CDN profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile which is unique globally.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the list usages operation response.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listResourceUsage(\n+        String resourceGroupName, String profileName, String ruleSetName, Context context);\n+}"
  },
  {
    "sha": "14f54f38903b46045b079406a2bb5d793bc23525",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RulesClient.java",
    "status": "added",
    "additions": 309,
    "deletions": 0,
    "changes": 309,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RulesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RulesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/RulesClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,309 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.RuleInner;\n+import com.azure.resourcemanager.cdn.generated.models.RuleUpdateParameters;\n+\n+/** An instance of this class provides access to all the operations defined in RulesClient. */\n+public interface RulesClient {\n+    /**\n+     * Lists all of the existing delivery rules within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list rules.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RuleInner> listByRuleSet(String resourceGroupName, String profileName, String ruleSetName);\n+\n+    /**\n+     * Lists all of the existing delivery rules within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list rules.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RuleInner> listByRuleSet(\n+        String resourceGroupName, String profileName, String ruleSetName, Context context);\n+\n+    /**\n+     * Gets an existing delivery rule within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing delivery rule within a rule set.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RuleInner get(String resourceGroupName, String profileName, String ruleSetName, String ruleName);\n+\n+    /**\n+     * Gets an existing delivery rule within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing delivery rule within a rule set.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<RuleInner> getWithResponse(\n+        String resourceGroupName, String profileName, String ruleSetName, String ruleName, Context context);\n+\n+    /**\n+     * Creates a new delivery rule within the specified rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param rule The delivery rule properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Rules name mapping to the any Rules or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<RuleInner>, RuleInner> beginCreate(\n+        String resourceGroupName, String profileName, String ruleSetName, String ruleName, RuleInner rule);\n+\n+    /**\n+     * Creates a new delivery rule within the specified rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param rule The delivery rule properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Rules name mapping to the any Rules or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<RuleInner>, RuleInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String ruleSetName,\n+        String ruleName,\n+        RuleInner rule,\n+        Context context);\n+\n+    /**\n+     * Creates a new delivery rule within the specified rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param rule The delivery rule properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Rules name mapping to the any Rules or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RuleInner create(String resourceGroupName, String profileName, String ruleSetName, String ruleName, RuleInner rule);\n+\n+    /**\n+     * Creates a new delivery rule within the specified rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param rule The delivery rule properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Rules name mapping to the any Rules or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RuleInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String ruleSetName,\n+        String ruleName,\n+        RuleInner rule,\n+        Context context);\n+\n+    /**\n+     * Updates an existing delivery rule within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param ruleUpdateProperties Delivery rule properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Rules name mapping to the any Rules or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<RuleInner>, RuleInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String ruleSetName,\n+        String ruleName,\n+        RuleUpdateParameters ruleUpdateProperties);\n+\n+    /**\n+     * Updates an existing delivery rule within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param ruleUpdateProperties Delivery rule properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Rules name mapping to the any Rules or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<RuleInner>, RuleInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String ruleSetName,\n+        String ruleName,\n+        RuleUpdateParameters ruleUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing delivery rule within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param ruleUpdateProperties Delivery rule properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Rules name mapping to the any Rules or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RuleInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String ruleSetName,\n+        String ruleName,\n+        RuleUpdateParameters ruleUpdateProperties);\n+\n+    /**\n+     * Updates an existing delivery rule within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param ruleUpdateProperties Delivery rule properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Rules name mapping to the any Rules or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RuleInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String ruleSetName,\n+        String ruleName,\n+        RuleUpdateParameters ruleUpdateProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing delivery rule within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String ruleSetName, String ruleName);\n+\n+    /**\n+     * Deletes an existing delivery rule within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String ruleSetName, String ruleName, Context context);\n+\n+    /**\n+     * Deletes an existing delivery rule within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String ruleSetName, String ruleName);\n+\n+    /**\n+     * Deletes an existing delivery rule within a rule set.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param ruleSetName Name of the rule set under the profile.\n+     * @param ruleName Name of the delivery rule which is unique within the endpoint.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String ruleSetName, String ruleName, Context context);\n+}"
  },
  {
    "sha": "a097bb36697437c552ad4329261601749b1a36b7",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/SecretsClient.java",
    "status": "added",
    "additions": 271,
    "deletions": 0,
    "changes": 271,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/SecretsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/SecretsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/SecretsClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,271 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.SecretInner;\n+import com.azure.resourcemanager.cdn.generated.models.SecretProperties;\n+\n+/** An instance of this class provides access to all the operations defined in SecretsClient. */\n+public interface SecretsClient {\n+    /**\n+     * Lists existing AzureFrontDoor secrets.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list secrets.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<SecretInner> listByProfile(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Lists existing AzureFrontDoor secrets.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list secrets.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<SecretInner> listByProfile(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Gets an existing Secret within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing Secret within a profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecretInner get(String resourceGroupName, String profileName, String secretName);\n+\n+    /**\n+     * Gets an existing Secret within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing Secret within a profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<SecretInner> getWithResponse(\n+        String resourceGroupName, String profileName, String secretName, Context context);\n+\n+    /**\n+     * Creates a new Secret within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param secret The Secret properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Secret name mapping to the any Secret or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<SecretInner>, SecretInner> beginCreate(\n+        String resourceGroupName, String profileName, String secretName, SecretInner secret);\n+\n+    /**\n+     * Creates a new Secret within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param secret The Secret properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Secret name mapping to the any Secret or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<SecretInner>, SecretInner> beginCreate(\n+        String resourceGroupName, String profileName, String secretName, SecretInner secret, Context context);\n+\n+    /**\n+     * Creates a new Secret within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param secret The Secret properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Secret name mapping to the any Secret or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecretInner create(String resourceGroupName, String profileName, String secretName, SecretInner secret);\n+\n+    /**\n+     * Creates a new Secret within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param secret The Secret properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Secret name mapping to the any Secret or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecretInner create(\n+        String resourceGroupName, String profileName, String secretName, SecretInner secret, Context context);\n+\n+    /**\n+     * Updates an existing Secret within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param secretProperties Secret properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Secret name mapping to the any Secret or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<SecretInner>, SecretInner> beginUpdate(\n+        String resourceGroupName, String profileName, String secretName, SecretProperties secretProperties);\n+\n+    /**\n+     * Updates an existing Secret within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param secretProperties Secret properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Secret name mapping to the any Secret or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<SecretInner>, SecretInner> beginUpdate(\n+        String resourceGroupName,\n+        String profileName,\n+        String secretName,\n+        SecretProperties secretProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing Secret within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param secretProperties Secret properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Secret name mapping to the any Secret or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecretInner update(\n+        String resourceGroupName, String profileName, String secretName, SecretProperties secretProperties);\n+\n+    /**\n+     * Updates an existing Secret within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param secretProperties Secret properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return friendly Secret name mapping to the any Secret or secret related information.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecretInner update(\n+        String resourceGroupName,\n+        String profileName,\n+        String secretName,\n+        SecretProperties secretProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing Secret within profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String profileName, String secretName);\n+\n+    /**\n+     * Deletes an existing Secret within profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String secretName, Context context);\n+\n+    /**\n+     * Deletes an existing Secret within profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String secretName);\n+\n+    /**\n+     * Deletes an existing Secret within profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param secretName Name of the Secret under the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String secretName, Context context);\n+}"
  },
  {
    "sha": "3b7827dc359737bd0a522bfc5837b06fd75a9151",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/SecurityPoliciesClient.java",
    "status": "added",
    "additions": 287,
    "deletions": 0,
    "changes": 287,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/SecurityPoliciesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/SecurityPoliciesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/SecurityPoliciesClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,287 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.SecurityPolicyInner;\n+import com.azure.resourcemanager.cdn.generated.models.SecurityPolicyProperties;\n+\n+/** An instance of this class provides access to all the operations defined in SecurityPoliciesClient. */\n+public interface SecurityPoliciesClient {\n+    /**\n+     * Lists security policies associated with the profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list security policies.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<SecurityPolicyInner> listByProfile(String resourceGroupName, String profileName);\n+\n+    /**\n+     * Lists security policies associated with the profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list security policies.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<SecurityPolicyInner> listByProfile(String resourceGroupName, String profileName, Context context);\n+\n+    /**\n+     * Gets an existing security policy within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the security policy under the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing security policy within a profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecurityPolicyInner get(String resourceGroupName, String profileName, String securityPolicyName);\n+\n+    /**\n+     * Gets an existing security policy within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the security policy under the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an existing security policy within a profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<SecurityPolicyInner> getWithResponse(\n+        String resourceGroupName, String profileName, String securityPolicyName, Context context);\n+\n+    /**\n+     * Creates a new security policy within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the security policy under the profile.\n+     * @param securityPolicy The security policy properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return securityPolicy association for AzureFrontDoor profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<SecurityPolicyInner>, SecurityPolicyInner> beginCreate(\n+        String resourceGroupName, String profileName, String securityPolicyName, SecurityPolicyInner securityPolicy);\n+\n+    /**\n+     * Creates a new security policy within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the security policy under the profile.\n+     * @param securityPolicy The security policy properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return securityPolicy association for AzureFrontDoor profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<SecurityPolicyInner>, SecurityPolicyInner> beginCreate(\n+        String resourceGroupName,\n+        String profileName,\n+        String securityPolicyName,\n+        SecurityPolicyInner securityPolicy,\n+        Context context);\n+\n+    /**\n+     * Creates a new security policy within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the security policy under the profile.\n+     * @param securityPolicy The security policy properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return securityPolicy association for AzureFrontDoor profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecurityPolicyInner create(\n+        String resourceGroupName, String profileName, String securityPolicyName, SecurityPolicyInner securityPolicy);\n+\n+    /**\n+     * Creates a new security policy within the specified profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the security policy under the profile.\n+     * @param securityPolicy The security policy properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return securityPolicy association for AzureFrontDoor profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecurityPolicyInner create(\n+        String resourceGroupName,\n+        String profileName,\n+        String securityPolicyName,\n+        SecurityPolicyInner securityPolicy,\n+        Context context);\n+\n+    /**\n+     * Updates an existing Secret within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the security policy under the profile.\n+     * @param securityPolicyProperties Security policy update properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return securityPolicy association for AzureFrontDoor profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<SecurityPolicyInner>, SecurityPolicyInner> beginPatch(\n+        String resourceGroupName,\n+        String profileName,\n+        String securityPolicyName,\n+        SecurityPolicyProperties securityPolicyProperties);\n+\n+    /**\n+     * Updates an existing Secret within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the security policy under the profile.\n+     * @param securityPolicyProperties Security policy update properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return securityPolicy association for AzureFrontDoor profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<SecurityPolicyInner>, SecurityPolicyInner> beginPatch(\n+        String resourceGroupName,\n+        String profileName,\n+        String securityPolicyName,\n+        SecurityPolicyProperties securityPolicyProperties,\n+        Context context);\n+\n+    /**\n+     * Updates an existing Secret within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the security policy under the profile.\n+     * @param securityPolicyProperties Security policy update properties.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return securityPolicy association for AzureFrontDoor profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecurityPolicyInner patch(\n+        String resourceGroupName,\n+        String profileName,\n+        String securityPolicyName,\n+        SecurityPolicyProperties securityPolicyProperties);\n+\n+    /**\n+     * Updates an existing Secret within a profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the security policy under the profile.\n+     * @param securityPolicyProperties Security policy update properties.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return securityPolicy association for AzureFrontDoor profile.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecurityPolicyInner patch(\n+        String resourceGroupName,\n+        String profileName,\n+        String securityPolicyName,\n+        SecurityPolicyProperties securityPolicyProperties,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing security policy within profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the Secret under the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String securityPolicyName);\n+\n+    /**\n+     * Deletes an existing security policy within profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the Secret under the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String profileName, String securityPolicyName, Context context);\n+\n+    /**\n+     * Deletes an existing security policy within profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the Secret under the profile.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String securityPolicyName);\n+\n+    /**\n+     * Deletes an existing security policy within profile.\n+     *\n+     * @param resourceGroupName Name of the Resource group within the Azure subscription.\n+     * @param profileName Name of the CDN profile which is unique within the resource group.\n+     * @param securityPolicyName Name of the Secret under the profile.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String profileName, String securityPolicyName, Context context);\n+}"
  },
  {
    "sha": "e163968a1e6262974de349399b7c80a401769f44",
    "filename": "sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ValidatesClient.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ValidatesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/4de5307a232c1eb1a1392d820720ca47cc164d6f/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ValidatesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cdn/azure-resourcemanager-cdn-generated/src/main/java/com/azure/resourcemanager/cdn/generated/fluent/ValidatesClient.java?ref=4de5307a232c1eb1a1392d820720ca47cc164d6f",
    "patch": "@@ -0,0 +1,40 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cdn.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cdn.generated.fluent.models.ValidateSecretOutputInner;\n+import com.azure.resourcemanager.cdn.generated.models.ValidateSecretInput;\n+\n+/** An instance of this class provides access to all the operations defined in ValidatesClient. */\n+public interface ValidatesClient {\n+    /**\n+     * Validate a Secret in the profile.\n+     *\n+     * @param validateSecretInput The Secret source.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of the validated secret.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ValidateSecretOutputInner secret(ValidateSecretInput validateSecretInput);\n+\n+    /**\n+     * Validate a Secret in the profile.\n+     *\n+     * @param validateSecretInput The Secret source.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return output of the validated secret.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ValidateSecretOutputInner> secretWithResponse(ValidateSecretInput validateSecretInput, Context context);\n+}"
  }
]
