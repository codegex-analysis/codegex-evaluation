[
  {
    "sha": "05740b6b7bd0f1430616877a89a8806032666606",
    "filename": "eng/versioning/version_client.txt",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/eng/versioning/version_client.txt",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/eng/versioning/version_client.txt",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/eng/versioning/version_client.txt?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -210,6 +210,7 @@ com.azure.resourcemanager:azure-resourcemanager-redisenterprise;1.0.0-beta.2;1.0\n com.azure.resourcemanager:azure-resourcemanager-hybridkubernetes;1.0.0-beta.1;1.0.0-beta.2\n com.azure.resourcemanager:azure-resourcemanager-iothub;1.0.0-beta.1;1.0.0-beta.2\n com.azure.resourcemanager:azure-resourcemanager-datadog;1.0.0-beta.1;1.0.0-beta.2\n+com.azure.resourcemanager:azure-resourcemanager-network-generated;1.0.0-beta.1;1.0.0-beta.1\n \n # Unreleased dependencies: Copy the entry from above, prepend \"unreleased_\" and remove the current\n # version. Unreleased dependencies are only valid for dependency versions."
  },
  {
    "sha": "a81ab49f4f05bd48c26286ca6f77668459968e38",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/pom.xml",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/pom.xml",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/pom.xml?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -593,8 +593,8 @@\n         <module>sdk/core</module>\n         <module>sdk/cosmos</module>\n         <module>sdk/costmanagement</module>\n-        <module>sdk/deviceupdate</module>\n         <module>sdk/datadog</module>\n+        <module>sdk/deviceupdate</module>\n         <module>sdk/digitaltwins</module>\n         <module>sdk/eventgrid</module>\n         <module>sdk/eventhubs</module>\n@@ -613,6 +613,7 @@\n         <module>sdk/monitor</module>\n         <module>sdk/mysql</module>\n         <module>sdk/netapp</module>\n+        <module>sdk/network</module>\n         <module>sdk/postgresql</module>\n         <module>sdk/quantum</module>\n         <module>sdk/recoveryservices</module>"
  },
  {
    "sha": "8b4b53e231cb17412b4162a71d0216dcf0bd2219",
    "filename": "sdk/network/azure-resourcemanager-network-generated/CHANGELOG.md",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/CHANGELOG.md",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/CHANGELOG.md?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,5 @@\n+# Release History\n+\n+## 1.0.0-beta.1 (2021-03-09)\n+\n+- Azure Resource Manager Network client library for Java. This package contains Microsoft Azure SDK for Network Management SDK. Network Client. Package tag package-2021-01. For documentation on how to use this package, please see [Azure Management Libraries for Java](https://aka.ms/azsdk/java/mgmt)."
  },
  {
    "sha": "a227be4d8a30bda9a2b9909e79c6e570701f3d9e",
    "filename": "sdk/network/azure-resourcemanager-network-generated/README.md",
    "status": "added",
    "additions": 99,
    "deletions": 0,
    "changes": 99,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/README.md",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/README.md",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/README.md?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,99 @@\n+# Azure Resource Manager Network client library for Java\n+\n+Azure Resource Manager Network client library for Java.\n+\n+This package contains Microsoft Azure SDK for Network Management SDK. Network Client. Package tag package-2021-01. For documentation on how to use this package, please see [Azure Management Libraries for Java](https://aka.ms/azsdk/java/mgmt).\n+\n+## We'd love to hear your feedback\n+\n+We're always working on improving our products and the way we communicate with our users. So we'd love to learn what's working and how we can do better.\n+\n+If you haven't already, please take a few minutes to [complete this short survey][survey] we have put together.\n+\n+Thank you in advance for your collaboration. We really appreciate your time!\n+\n+## Documentation\n+\n+Various documentation is available to help you get started\n+\n+- [API reference documentation][docs]\n+\n+## Getting started\n+\n+### Prerequisites\n+\n+- [Java Development Kit (JDK)][jdk] with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+\n+### Adding the package to your product\n+\n+[//]: # ({x-version-update-start;com.azure.resourcemanager:azure-resourcemanager-network-generated;current})\n+```xml\n+<dependency>\n+    <groupId>com.azure.resourcemanager</groupId>\n+    <artifactId>azure-resourcemanager-network-generated</artifactId>\n+    <version>1.0.0-beta.1</version>\n+</dependency>\n+```\n+[//]: # ({x-version-update-end})\n+\n+### Include the recommended packages\n+\n+Azure Management Libraries require a `TokenCredential` implementation for authentication and an `HttpClient` implementation for HTTP client.\n+\n+[Azure Identity][azure_identity] package and [Azure Core Netty HTTP][azure_core_http_netty] package provide the default implementation.\n+\n+### Authentication\n+\n+By default, Azure Active Directory token authentication depends on correct configure of following environment variables.\n+\n+- `AZURE_CLIENT_ID` for Azure client ID.\n+- `AZURE_TENANT_ID` for Azure tenant ID.\n+- `AZURE_CLIENT_SECRET` or `AZURE_CLIENT_CERTIFICATE_PATH` for client secret or client certificate.\n+\n+In addition, Azure subscription ID can be configured via environment variable `AZURE_SUBSCRIPTION_ID`.\n+\n+With above configuration, `azure` client can be authenticated by following code:\n+\n+```java\n+AzureProfile profile = new AzureProfile(AzureEnvironment.AZURE);\n+TokenCredential credential = new DefaultAzureCredentialBuilder()\n+    .authorityHost(profile.getEnvironment().getActiveDirectoryEndpoint())\n+    .build();\n+NetworkManager manager = NetworkManager\n+    .authenticate(credential, profile);\n+```\n+\n+The sample code assumes global Azure. Please change `AzureEnvironment.AZURE` variable if otherwise.\n+\n+See [Authentication][authenticate] for more options.\n+\n+## Key concepts\n+\n+See [API design][design] for general introduction on design and key concepts on Azure Management Libraries.\n+\n+## Examples\n+\n+## Troubleshooting\n+\n+## Next steps\n+\n+## Contributing\n+\n+For details on contributing to this repository, see the [contributing guide](https://github.com/Azure/azure-sdk-for-java/blob/master/CONTRIBUTING.md).\n+\n+1. Fork it\n+1. Create your feature branch (`git checkout -b my-new-feature`)\n+1. Commit your changes (`git commit -am 'Add some feature'`)\n+1. Push to the branch (`git push origin my-new-feature`)\n+1. Create new Pull Request\n+\n+<!-- LINKS -->\n+[survey]: https://microsoft.qualtrics.com/jfe/form/SV_ehN0lIk2FKEBkwd?Q_CHL=DOCS\n+[docs]: https://azure.github.io/azure-sdk-for-java/\n+[jdk]: https://docs.microsoft.com/java/azure/jdk/\n+[azure_subscription]: https://azure.microsoft.com/free/\n+[azure_identity]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/identity/azure-identity\n+[azure_core_http_netty]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/core/azure-core-http-netty\n+[authenticate]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/resourcemanager/docs/AUTH.md\n+[design]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/resourcemanager/docs/DESIGN.md"
  },
  {
    "sha": "e0a56f0f9190556133d6a62b39d43862bbc11854",
    "filename": "sdk/network/azure-resourcemanager-network-generated/pom.xml",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/pom.xml",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/pom.xml",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/pom.xml?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,67 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>com.azure</groupId>\n+        <artifactId>azure-client-sdk-parent</artifactId>\n+        <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->\n+        <relativePath>../../parents/azure-client-sdk-parent</relativePath>\n+    </parent>\n+\n+    <groupId>com.azure.resourcemanager</groupId>\n+    <artifactId>azure-resourcemanager-network-generated</artifactId>\n+    <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure.resourcemanager:azure-resourcemanager-network-generated;current} -->\n+    <packaging>jar</packaging>\n+\n+    <name>Microsoft Azure SDK for Network Management</name>\n+    <description>This package contains Microsoft Azure SDK for Network Management SDK. For documentation on how to use this package, please see https://aka.ms/azsdk/java/mgmt. Network Client. Package tag package-2021-01.</description>\n+    <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+    <licenses>\n+        <license>\n+            <name>The MIT License (MIT)</name>\n+            <url>http://opensource.org/licenses/MIT</url>\n+            <distribution>repo</distribution>\n+        </license>\n+    </licenses>\n+\n+    <scm>\n+        <url>https://github.com/Azure/azure-sdk-for-java</url>\n+        <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>\n+        <developerConnection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</developerConnection>\n+        <tag>HEAD</tag>\n+    </scm>\n+    <developers>\n+        <developer>\n+            <id>microsoft</id>\n+            <name>Microsoft</name>\n+        </developer>\n+    </developers>\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <legal><![CDATA[[INFO] Any downloads listed may be third party software.  Microsoft grants you no rights for third party software.]]></legal>\n+    </properties>\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.azure</groupId>\n+            <artifactId>azure-core</artifactId>\n+            <version>1.14.0</version> <!-- {x-version-update;com.azure:azure-core;dependency} -->\n+        </dependency>\n+        <dependency>\n+            <groupId>com.azure</groupId>\n+            <artifactId>azure-core-management</artifactId>\n+            <version>1.2.0</version> <!-- {x-version-update;com.azure:azure-core-management;dependency} -->\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <version>0.8.5</version> <!-- {x-version-update;org.jacoco:jacoco-maven-plugin;external_dependency} -->\n+                <configuration>\n+                    <skip>true</skip>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
  },
  {
    "sha": "09022b91680a34f24e948dbce840bb22240dff22",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/NetworkManager.java",
    "status": "added",
    "additions": 1523,
    "deletions": 0,
    "changes": 1523,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/NetworkManager.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/NetworkManager.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/NetworkManager.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,1523 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated;\n+\n+import com.azure.core.credential.TokenCredential;\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.AddDatePolicy;\n+import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpLoggingPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.HttpPolicyProviders;\n+import com.azure.core.http.policy.RequestIdPolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.management.profile.AzureProfile;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.network.generated.fluent.NetworkManagementClient;\n+import com.azure.resourcemanager.network.generated.implementation.ApplicationGatewayPrivateEndpointConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ApplicationGatewayPrivateLinkResourcesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ApplicationGatewaysImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ApplicationSecurityGroupsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.AvailableDelegationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.AvailableEndpointServicesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.AvailablePrivateEndpointTypesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.AvailableResourceGroupDelegationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.AvailableServiceAliasesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.AzureFirewallFqdnTagsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.AzureFirewallsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.BastionHostsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.BgpServiceCommunitiesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ConnectionMonitorsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.CustomIpPrefixesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.DdosCustomPoliciesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.DdosProtectionPlansImpl;\n+import com.azure.resourcemanager.network.generated.implementation.DefaultSecurityRulesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.DscpConfigurationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCircuitAuthorizationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCircuitConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCircuitPeeringsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCircuitsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRouteConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCrossConnectionPeeringsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRouteCrossConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRouteGatewaysImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRouteLinksImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRoutePortsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRoutePortsLocationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ExpressRouteServiceProvidersImpl;\n+import com.azure.resourcemanager.network.generated.implementation.FirewallPoliciesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.FirewallPolicyRuleCollectionGroupsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.FlowLogsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.HubRouteTablesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.HubVirtualNetworkConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.InboundNatRulesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.InboundSecurityRuleOperationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.IpAllocationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.IpGroupsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.LoadBalancerBackendAddressPoolsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.LoadBalancerFrontendIpConfigurationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.LoadBalancerLoadBalancingRulesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.LoadBalancerNetworkInterfacesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.LoadBalancerOutboundRulesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.LoadBalancerProbesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.LoadBalancersImpl;\n+import com.azure.resourcemanager.network.generated.implementation.LocalNetworkGatewaysImpl;\n+import com.azure.resourcemanager.network.generated.implementation.NatGatewaysImpl;\n+import com.azure.resourcemanager.network.generated.implementation.NatRulesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.NetworkInterfaceIpConfigurationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.NetworkInterfaceLoadBalancersImpl;\n+import com.azure.resourcemanager.network.generated.implementation.NetworkInterfaceTapConfigurationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.NetworkInterfacesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.NetworkManagementClientBuilder;\n+import com.azure.resourcemanager.network.generated.implementation.NetworkProfilesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.NetworkSecurityGroupsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.NetworkVirtualAppliancesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.NetworkWatchersImpl;\n+import com.azure.resourcemanager.network.generated.implementation.OperationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.P2SVpnGatewaysImpl;\n+import com.azure.resourcemanager.network.generated.implementation.PacketCapturesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.PeerExpressRouteCircuitConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.PrivateDnsZoneGroupsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.PrivateEndpointsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.PrivateLinkServicesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.PublicIpAddressesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.PublicIpPrefixesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ResourceNavigationLinksImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ResourceProvidersImpl;\n+import com.azure.resourcemanager.network.generated.implementation.RouteFilterRulesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.RouteFiltersImpl;\n+import com.azure.resourcemanager.network.generated.implementation.RouteTablesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.RoutesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.SecurityPartnerProvidersImpl;\n+import com.azure.resourcemanager.network.generated.implementation.SecurityRulesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ServiceAssociationLinksImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ServiceEndpointPoliciesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ServiceEndpointPolicyDefinitionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.ServiceTagsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.SubnetsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.UsagesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualApplianceSitesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualApplianceSkusImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualHubBgpConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualHubIpConfigurationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualHubRouteTableV2SImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualHubsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualNetworkGatewayConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualNetworkGatewaysImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualNetworkPeeringsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualNetworkTapsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualNetworksImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualRouterPeeringsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualRoutersImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VirtualWansImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VpnConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VpnGatewaysImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VpnLinkConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VpnServerConfigurationsAssociatedWithVirtualWansImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VpnServerConfigurationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VpnSiteLinkConnectionsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VpnSiteLinksImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VpnSitesConfigurationsImpl;\n+import com.azure.resourcemanager.network.generated.implementation.VpnSitesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.WebApplicationFirewallPoliciesImpl;\n+import com.azure.resourcemanager.network.generated.implementation.WebCategoriesImpl;\n+import com.azure.resourcemanager.network.generated.models.ApplicationGatewayPrivateEndpointConnections;\n+import com.azure.resourcemanager.network.generated.models.ApplicationGatewayPrivateLinkResources;\n+import com.azure.resourcemanager.network.generated.models.ApplicationGateways;\n+import com.azure.resourcemanager.network.generated.models.ApplicationSecurityGroups;\n+import com.azure.resourcemanager.network.generated.models.AvailableDelegations;\n+import com.azure.resourcemanager.network.generated.models.AvailableEndpointServices;\n+import com.azure.resourcemanager.network.generated.models.AvailablePrivateEndpointTypes;\n+import com.azure.resourcemanager.network.generated.models.AvailableResourceGroupDelegations;\n+import com.azure.resourcemanager.network.generated.models.AvailableServiceAliases;\n+import com.azure.resourcemanager.network.generated.models.AzureFirewallFqdnTags;\n+import com.azure.resourcemanager.network.generated.models.AzureFirewalls;\n+import com.azure.resourcemanager.network.generated.models.BastionHosts;\n+import com.azure.resourcemanager.network.generated.models.BgpServiceCommunities;\n+import com.azure.resourcemanager.network.generated.models.ConnectionMonitors;\n+import com.azure.resourcemanager.network.generated.models.CustomIpPrefixes;\n+import com.azure.resourcemanager.network.generated.models.DdosCustomPolicies;\n+import com.azure.resourcemanager.network.generated.models.DdosProtectionPlans;\n+import com.azure.resourcemanager.network.generated.models.DefaultSecurityRules;\n+import com.azure.resourcemanager.network.generated.models.DscpConfigurations;\n+import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitAuthorizations;\n+import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitConnections;\n+import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuitPeerings;\n+import com.azure.resourcemanager.network.generated.models.ExpressRouteCircuits;\n+import com.azure.resourcemanager.network.generated.models.ExpressRouteConnections;\n+import com.azure.resourcemanager.network.generated.models.ExpressRouteCrossConnectionPeerings;\n+import com.azure.resourcemanager.network.generated.models.ExpressRouteCrossConnections;\n+import com.azure.resourcemanager.network.generated.models.ExpressRouteGateways;\n+import com.azure.resourcemanager.network.generated.models.ExpressRouteLinks;\n+import com.azure.resourcemanager.network.generated.models.ExpressRoutePorts;\n+import com.azure.resourcemanager.network.generated.models.ExpressRoutePortsLocations;\n+import com.azure.resourcemanager.network.generated.models.ExpressRouteServiceProviders;\n+import com.azure.resourcemanager.network.generated.models.FirewallPolicies;\n+import com.azure.resourcemanager.network.generated.models.FirewallPolicyRuleCollectionGroups;\n+import com.azure.resourcemanager.network.generated.models.FlowLogs;\n+import com.azure.resourcemanager.network.generated.models.HubRouteTables;\n+import com.azure.resourcemanager.network.generated.models.HubVirtualNetworkConnections;\n+import com.azure.resourcemanager.network.generated.models.InboundNatRules;\n+import com.azure.resourcemanager.network.generated.models.InboundSecurityRuleOperations;\n+import com.azure.resourcemanager.network.generated.models.IpAllocations;\n+import com.azure.resourcemanager.network.generated.models.IpGroups;\n+import com.azure.resourcemanager.network.generated.models.LoadBalancerBackendAddressPools;\n+import com.azure.resourcemanager.network.generated.models.LoadBalancerFrontendIpConfigurations;\n+import com.azure.resourcemanager.network.generated.models.LoadBalancerLoadBalancingRules;\n+import com.azure.resourcemanager.network.generated.models.LoadBalancerNetworkInterfaces;\n+import com.azure.resourcemanager.network.generated.models.LoadBalancerOutboundRules;\n+import com.azure.resourcemanager.network.generated.models.LoadBalancerProbes;\n+import com.azure.resourcemanager.network.generated.models.LoadBalancers;\n+import com.azure.resourcemanager.network.generated.models.LocalNetworkGateways;\n+import com.azure.resourcemanager.network.generated.models.NatGateways;\n+import com.azure.resourcemanager.network.generated.models.NatRules;\n+import com.azure.resourcemanager.network.generated.models.NetworkInterfaceIpConfigurations;\n+import com.azure.resourcemanager.network.generated.models.NetworkInterfaceLoadBalancers;\n+import com.azure.resourcemanager.network.generated.models.NetworkInterfaceTapConfigurations;\n+import com.azure.resourcemanager.network.generated.models.NetworkInterfaces;\n+import com.azure.resourcemanager.network.generated.models.NetworkProfiles;\n+import com.azure.resourcemanager.network.generated.models.NetworkSecurityGroups;\n+import com.azure.resourcemanager.network.generated.models.NetworkVirtualAppliances;\n+import com.azure.resourcemanager.network.generated.models.NetworkWatchers;\n+import com.azure.resourcemanager.network.generated.models.Operations;\n+import com.azure.resourcemanager.network.generated.models.P2SVpnGateways;\n+import com.azure.resourcemanager.network.generated.models.PacketCaptures;\n+import com.azure.resourcemanager.network.generated.models.PeerExpressRouteCircuitConnections;\n+import com.azure.resourcemanager.network.generated.models.PrivateDnsZoneGroups;\n+import com.azure.resourcemanager.network.generated.models.PrivateEndpoints;\n+import com.azure.resourcemanager.network.generated.models.PrivateLinkServices;\n+import com.azure.resourcemanager.network.generated.models.PublicIpAddresses;\n+import com.azure.resourcemanager.network.generated.models.PublicIpPrefixes;\n+import com.azure.resourcemanager.network.generated.models.ResourceNavigationLinks;\n+import com.azure.resourcemanager.network.generated.models.ResourceProviders;\n+import com.azure.resourcemanager.network.generated.models.RouteFilterRules;\n+import com.azure.resourcemanager.network.generated.models.RouteFilters;\n+import com.azure.resourcemanager.network.generated.models.RouteTables;\n+import com.azure.resourcemanager.network.generated.models.Routes;\n+import com.azure.resourcemanager.network.generated.models.SecurityPartnerProviders;\n+import com.azure.resourcemanager.network.generated.models.SecurityRules;\n+import com.azure.resourcemanager.network.generated.models.ServiceAssociationLinks;\n+import com.azure.resourcemanager.network.generated.models.ServiceEndpointPolicies;\n+import com.azure.resourcemanager.network.generated.models.ServiceEndpointPolicyDefinitions;\n+import com.azure.resourcemanager.network.generated.models.ServiceTags;\n+import com.azure.resourcemanager.network.generated.models.Subnets;\n+import com.azure.resourcemanager.network.generated.models.Usages;\n+import com.azure.resourcemanager.network.generated.models.VirtualApplianceSites;\n+import com.azure.resourcemanager.network.generated.models.VirtualApplianceSkus;\n+import com.azure.resourcemanager.network.generated.models.VirtualHubBgpConnections;\n+import com.azure.resourcemanager.network.generated.models.VirtualHubIpConfigurations;\n+import com.azure.resourcemanager.network.generated.models.VirtualHubRouteTableV2S;\n+import com.azure.resourcemanager.network.generated.models.VirtualHubs;\n+import com.azure.resourcemanager.network.generated.models.VirtualNetworkGatewayConnections;\n+import com.azure.resourcemanager.network.generated.models.VirtualNetworkGateways;\n+import com.azure.resourcemanager.network.generated.models.VirtualNetworkPeerings;\n+import com.azure.resourcemanager.network.generated.models.VirtualNetworkTaps;\n+import com.azure.resourcemanager.network.generated.models.VirtualNetworks;\n+import com.azure.resourcemanager.network.generated.models.VirtualRouterPeerings;\n+import com.azure.resourcemanager.network.generated.models.VirtualRouters;\n+import com.azure.resourcemanager.network.generated.models.VirtualWans;\n+import com.azure.resourcemanager.network.generated.models.VpnConnections;\n+import com.azure.resourcemanager.network.generated.models.VpnGateways;\n+import com.azure.resourcemanager.network.generated.models.VpnLinkConnections;\n+import com.azure.resourcemanager.network.generated.models.VpnServerConfigurations;\n+import com.azure.resourcemanager.network.generated.models.VpnServerConfigurationsAssociatedWithVirtualWans;\n+import com.azure.resourcemanager.network.generated.models.VpnSiteLinkConnections;\n+import com.azure.resourcemanager.network.generated.models.VpnSiteLinks;\n+import com.azure.resourcemanager.network.generated.models.VpnSites;\n+import com.azure.resourcemanager.network.generated.models.VpnSitesConfigurations;\n+import com.azure.resourcemanager.network.generated.models.WebApplicationFirewallPolicies;\n+import com.azure.resourcemanager.network.generated.models.WebCategories;\n+import java.time.Duration;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/** Entry point to NetworkManager. Network Client. */\n+public final class NetworkManager {\n+    private ApplicationGateways applicationGateways;\n+\n+    private ApplicationGatewayPrivateLinkResources applicationGatewayPrivateLinkResources;\n+\n+    private ApplicationGatewayPrivateEndpointConnections applicationGatewayPrivateEndpointConnections;\n+\n+    private ApplicationSecurityGroups applicationSecurityGroups;\n+\n+    private AvailableDelegations availableDelegations;\n+\n+    private AvailableResourceGroupDelegations availableResourceGroupDelegations;\n+\n+    private AvailableServiceAliases availableServiceAliases;\n+\n+    private AzureFirewalls azureFirewalls;\n+\n+    private AzureFirewallFqdnTags azureFirewallFqdnTags;\n+\n+    private WebCategories webCategories;\n+\n+    private BastionHosts bastionHosts;\n+\n+    private ResourceProviders resourceProviders;\n+\n+    private NetworkInterfaces networkInterfaces;\n+\n+    private PublicIpAddresses publicIpAddresses;\n+\n+    private CustomIpPrefixes customIpPrefixes;\n+\n+    private DdosCustomPolicies ddosCustomPolicies;\n+\n+    private DdosProtectionPlans ddosProtectionPlans;\n+\n+    private DscpConfigurations dscpConfigurations;\n+\n+    private AvailableEndpointServices availableEndpointServices;\n+\n+    private ExpressRouteCircuitAuthorizations expressRouteCircuitAuthorizations;\n+\n+    private ExpressRouteCircuitPeerings expressRouteCircuitPeerings;\n+\n+    private ExpressRouteCircuitConnections expressRouteCircuitConnections;\n+\n+    private PeerExpressRouteCircuitConnections peerExpressRouteCircuitConnections;\n+\n+    private ExpressRouteCircuits expressRouteCircuits;\n+\n+    private ExpressRouteServiceProviders expressRouteServiceProviders;\n+\n+    private ExpressRouteCrossConnections expressRouteCrossConnections;\n+\n+    private ExpressRouteCrossConnectionPeerings expressRouteCrossConnectionPeerings;\n+\n+    private ExpressRoutePortsLocations expressRoutePortsLocations;\n+\n+    private ExpressRoutePorts expressRoutePorts;\n+\n+    private ExpressRouteLinks expressRouteLinks;\n+\n+    private FirewallPolicies firewallPolicies;\n+\n+    private FirewallPolicyRuleCollectionGroups firewallPolicyRuleCollectionGroups;\n+\n+    private IpAllocations ipAllocations;\n+\n+    private IpGroups ipGroups;\n+\n+    private LoadBalancers loadBalancers;\n+\n+    private LoadBalancerBackendAddressPools loadBalancerBackendAddressPools;\n+\n+    private LoadBalancerFrontendIpConfigurations loadBalancerFrontendIpConfigurations;\n+\n+    private InboundNatRules inboundNatRules;\n+\n+    private LoadBalancerLoadBalancingRules loadBalancerLoadBalancingRules;\n+\n+    private LoadBalancerOutboundRules loadBalancerOutboundRules;\n+\n+    private LoadBalancerNetworkInterfaces loadBalancerNetworkInterfaces;\n+\n+    private LoadBalancerProbes loadBalancerProbes;\n+\n+    private NatGateways natGateways;\n+\n+    private NetworkInterfaceIpConfigurations networkInterfaceIpConfigurations;\n+\n+    private NetworkInterfaceLoadBalancers networkInterfaceLoadBalancers;\n+\n+    private NetworkInterfaceTapConfigurations networkInterfaceTapConfigurations;\n+\n+    private NetworkProfiles networkProfiles;\n+\n+    private NetworkSecurityGroups networkSecurityGroups;\n+\n+    private SecurityRules securityRules;\n+\n+    private DefaultSecurityRules defaultSecurityRules;\n+\n+    private NetworkVirtualAppliances networkVirtualAppliances;\n+\n+    private VirtualApplianceSites virtualApplianceSites;\n+\n+    private VirtualApplianceSkus virtualApplianceSkus;\n+\n+    private InboundSecurityRuleOperations inboundSecurityRuleOperations;\n+\n+    private NetworkWatchers networkWatchers;\n+\n+    private PacketCaptures packetCaptures;\n+\n+    private ConnectionMonitors connectionMonitors;\n+\n+    private FlowLogs flowLogs;\n+\n+    private Operations operations;\n+\n+    private PrivateEndpoints privateEndpoints;\n+\n+    private AvailablePrivateEndpointTypes availablePrivateEndpointTypes;\n+\n+    private PrivateDnsZoneGroups privateDnsZoneGroups;\n+\n+    private PrivateLinkServices privateLinkServices;\n+\n+    private PublicIpPrefixes publicIpPrefixes;\n+\n+    private RouteFilters routeFilters;\n+\n+    private RouteFilterRules routeFilterRules;\n+\n+    private RouteTables routeTables;\n+\n+    private Routes routes;\n+\n+    private SecurityPartnerProviders securityPartnerProviders;\n+\n+    private BgpServiceCommunities bgpServiceCommunities;\n+\n+    private ServiceEndpointPolicies serviceEndpointPolicies;\n+\n+    private ServiceEndpointPolicyDefinitions serviceEndpointPolicyDefinitions;\n+\n+    private ServiceTags serviceTags;\n+\n+    private Usages usages;\n+\n+    private VirtualNetworks virtualNetworks;\n+\n+    private Subnets subnets;\n+\n+    private ResourceNavigationLinks resourceNavigationLinks;\n+\n+    private ServiceAssociationLinks serviceAssociationLinks;\n+\n+    private VirtualNetworkPeerings virtualNetworkPeerings;\n+\n+    private VirtualNetworkGateways virtualNetworkGateways;\n+\n+    private VirtualNetworkGatewayConnections virtualNetworkGatewayConnections;\n+\n+    private LocalNetworkGateways localNetworkGateways;\n+\n+    private VirtualNetworkTaps virtualNetworkTaps;\n+\n+    private VirtualRouters virtualRouters;\n+\n+    private VirtualRouterPeerings virtualRouterPeerings;\n+\n+    private VirtualWans virtualWans;\n+\n+    private VpnSites vpnSites;\n+\n+    private VpnSiteLinks vpnSiteLinks;\n+\n+    private VpnSitesConfigurations vpnSitesConfigurations;\n+\n+    private VpnServerConfigurations vpnServerConfigurations;\n+\n+    private VirtualHubs virtualHubs;\n+\n+    private HubVirtualNetworkConnections hubVirtualNetworkConnections;\n+\n+    private VpnGateways vpnGateways;\n+\n+    private VpnLinkConnections vpnLinkConnections;\n+\n+    private VpnConnections vpnConnections;\n+\n+    private VpnSiteLinkConnections vpnSiteLinkConnections;\n+\n+    private NatRules natRules;\n+\n+    private P2SVpnGateways p2SVpnGateways;\n+\n+    private VpnServerConfigurationsAssociatedWithVirtualWans vpnServerConfigurationsAssociatedWithVirtualWans;\n+\n+    private VirtualHubRouteTableV2S virtualHubRouteTableV2S;\n+\n+    private ExpressRouteGateways expressRouteGateways;\n+\n+    private ExpressRouteConnections expressRouteConnections;\n+\n+    private VirtualHubBgpConnections virtualHubBgpConnections;\n+\n+    private VirtualHubIpConfigurations virtualHubIpConfigurations;\n+\n+    private HubRouteTables hubRouteTables;\n+\n+    private WebApplicationFirewallPolicies webApplicationFirewallPolicies;\n+\n+    private final NetworkManagementClient clientObject;\n+\n+    private NetworkManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {\n+        Objects.requireNonNull(httpPipeline, \"'httpPipeline' cannot be null.\");\n+        Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+        this.clientObject =\n+            new NetworkManagementClientBuilder()\n+                .pipeline(httpPipeline)\n+                .endpoint(profile.getEnvironment().getResourceManagerEndpoint())\n+                .subscriptionId(profile.getSubscriptionId())\n+                .defaultPollInterval(defaultPollInterval)\n+                .buildClient();\n+    }\n+\n+    /**\n+     * Creates an instance of Network service API entry point.\n+     *\n+     * @param credential the credential to use.\n+     * @param profile the Azure profile for client.\n+     * @return the Network service API instance.\n+     */\n+    public static NetworkManager authenticate(TokenCredential credential, AzureProfile profile) {\n+        Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+        Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+        return configure().authenticate(credential, profile);\n+    }\n+\n+    /**\n+     * Gets a Configurable instance that can be used to create NetworkManager with optional configuration.\n+     *\n+     * @return the Configurable instance allowing configurations.\n+     */\n+    public static Configurable configure() {\n+        return new NetworkManager.Configurable();\n+    }\n+\n+    /** The Configurable allowing configurations to be set. */\n+    public static final class Configurable {\n+        private final ClientLogger logger = new ClientLogger(Configurable.class);\n+\n+        private HttpClient httpClient;\n+        private HttpLogOptions httpLogOptions;\n+        private final List<HttpPipelinePolicy> policies = new ArrayList<>();\n+        private RetryPolicy retryPolicy;\n+        private Duration defaultPollInterval;\n+\n+        private Configurable() {\n+        }\n+\n+        /**\n+         * Sets the http client.\n+         *\n+         * @param httpClient the HTTP client.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withHttpClient(HttpClient httpClient) {\n+            this.httpClient = Objects.requireNonNull(httpClient, \"'httpClient' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the logging options to the HTTP pipeline.\n+         *\n+         * @param httpLogOptions the HTTP log options.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {\n+            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, \"'httpLogOptions' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Adds the pipeline policy to the HTTP pipeline.\n+         *\n+         * @param policy the HTTP pipeline policy.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withPolicy(HttpPipelinePolicy policy) {\n+            this.policies.add(Objects.requireNonNull(policy, \"'policy' cannot be null.\"));\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the retry policy to the HTTP pipeline.\n+         *\n+         * @param retryPolicy the HTTP pipeline retry policy.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {\n+            this.retryPolicy = Objects.requireNonNull(retryPolicy, \"'retryPolicy' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the default poll interval, used when service does not provide \"Retry-After\" header.\n+         *\n+         * @param defaultPollInterval the default poll interval.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {\n+            this.defaultPollInterval = Objects.requireNonNull(defaultPollInterval, \"'retryPolicy' cannot be null.\");\n+            if (this.defaultPollInterval.isNegative()) {\n+                throw logger.logExceptionAsError(new IllegalArgumentException(\"'httpPipeline' cannot be negative\"));\n+            }\n+            return this;\n+        }\n+\n+        /**\n+         * Creates an instance of Network service API entry point.\n+         *\n+         * @param credential the credential to use.\n+         * @param profile the Azure profile for client.\n+         * @return the Network service API instance.\n+         */\n+        public NetworkManager authenticate(TokenCredential credential, AzureProfile profile) {\n+            Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+            Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+\n+            StringBuilder userAgentBuilder = new StringBuilder();\n+            userAgentBuilder\n+                .append(\"azsdk-java\")\n+                .append(\"-\")\n+                .append(\"com.azure.resourcemanager.network.generated\")\n+                .append(\"/\")\n+                .append(\"1.0.0-beta.1\");\n+            if (!Configuration.getGlobalConfiguration().get(\"AZURE_TELEMETRY_DISABLED\", false)) {\n+                userAgentBuilder\n+                    .append(\" (\")\n+                    .append(Configuration.getGlobalConfiguration().get(\"java.version\"))\n+                    .append(\"; \")\n+                    .append(Configuration.getGlobalConfiguration().get(\"os.name\"))\n+                    .append(\"; \")\n+                    .append(Configuration.getGlobalConfiguration().get(\"os.version\"))\n+                    .append(\"; auto-generated)\");\n+            } else {\n+                userAgentBuilder.append(\" (auto-generated)\");\n+            }\n+\n+            if (retryPolicy == null) {\n+                retryPolicy = new RetryPolicy(\"Retry-After\", ChronoUnit.SECONDS);\n+            }\n+            List<HttpPipelinePolicy> policies = new ArrayList<>();\n+            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));\n+            policies.add(new RequestIdPolicy());\n+            HttpPolicyProviders.addBeforeRetryPolicies(policies);\n+            policies.add(retryPolicy);\n+            policies.add(new AddDatePolicy());\n+            policies\n+                .add(\n+                    new BearerTokenAuthenticationPolicy(\n+                        credential, profile.getEnvironment().getManagementEndpoint() + \"/.default\"));\n+            HttpPolicyProviders.addAfterRetryPolicies(policies);\n+            policies.add(new HttpLoggingPolicy(httpLogOptions));\n+            HttpPipeline httpPipeline =\n+                new HttpPipelineBuilder()\n+                    .httpClient(httpClient)\n+                    .policies(policies.toArray(new HttpPipelinePolicy[0]))\n+                    .build();\n+            return new NetworkManager(httpPipeline, profile, defaultPollInterval);\n+        }\n+    }\n+\n+    /** @return Resource collection API of ApplicationGateways. */\n+    public ApplicationGateways applicationGateways() {\n+        if (this.applicationGateways == null) {\n+            this.applicationGateways = new ApplicationGatewaysImpl(clientObject.getApplicationGateways(), this);\n+        }\n+        return applicationGateways;\n+    }\n+\n+    /** @return Resource collection API of ApplicationGatewayPrivateLinkResources. */\n+    public ApplicationGatewayPrivateLinkResources applicationGatewayPrivateLinkResources() {\n+        if (this.applicationGatewayPrivateLinkResources == null) {\n+            this.applicationGatewayPrivateLinkResources =\n+                new ApplicationGatewayPrivateLinkResourcesImpl(\n+                    clientObject.getApplicationGatewayPrivateLinkResources(), this);\n+        }\n+        return applicationGatewayPrivateLinkResources;\n+    }\n+\n+    /** @return Resource collection API of ApplicationGatewayPrivateEndpointConnections. */\n+    public ApplicationGatewayPrivateEndpointConnections applicationGatewayPrivateEndpointConnections() {\n+        if (this.applicationGatewayPrivateEndpointConnections == null) {\n+            this.applicationGatewayPrivateEndpointConnections =\n+                new ApplicationGatewayPrivateEndpointConnectionsImpl(\n+                    clientObject.getApplicationGatewayPrivateEndpointConnections(), this);\n+        }\n+        return applicationGatewayPrivateEndpointConnections;\n+    }\n+\n+    /** @return Resource collection API of ApplicationSecurityGroups. */\n+    public ApplicationSecurityGroups applicationSecurityGroups() {\n+        if (this.applicationSecurityGroups == null) {\n+            this.applicationSecurityGroups =\n+                new ApplicationSecurityGroupsImpl(clientObject.getApplicationSecurityGroups(), this);\n+        }\n+        return applicationSecurityGroups;\n+    }\n+\n+    /** @return Resource collection API of AvailableDelegations. */\n+    public AvailableDelegations availableDelegations() {\n+        if (this.availableDelegations == null) {\n+            this.availableDelegations = new AvailableDelegationsImpl(clientObject.getAvailableDelegations(), this);\n+        }\n+        return availableDelegations;\n+    }\n+\n+    /** @return Resource collection API of AvailableResourceGroupDelegations. */\n+    public AvailableResourceGroupDelegations availableResourceGroupDelegations() {\n+        if (this.availableResourceGroupDelegations == null) {\n+            this.availableResourceGroupDelegations =\n+                new AvailableResourceGroupDelegationsImpl(clientObject.getAvailableResourceGroupDelegations(), this);\n+        }\n+        return availableResourceGroupDelegations;\n+    }\n+\n+    /** @return Resource collection API of AvailableServiceAliases. */\n+    public AvailableServiceAliases availableServiceAliases() {\n+        if (this.availableServiceAliases == null) {\n+            this.availableServiceAliases =\n+                new AvailableServiceAliasesImpl(clientObject.getAvailableServiceAliases(), this);\n+        }\n+        return availableServiceAliases;\n+    }\n+\n+    /** @return Resource collection API of AzureFirewalls. */\n+    public AzureFirewalls azureFirewalls() {\n+        if (this.azureFirewalls == null) {\n+            this.azureFirewalls = new AzureFirewallsImpl(clientObject.getAzureFirewalls(), this);\n+        }\n+        return azureFirewalls;\n+    }\n+\n+    /** @return Resource collection API of AzureFirewallFqdnTags. */\n+    public AzureFirewallFqdnTags azureFirewallFqdnTags() {\n+        if (this.azureFirewallFqdnTags == null) {\n+            this.azureFirewallFqdnTags = new AzureFirewallFqdnTagsImpl(clientObject.getAzureFirewallFqdnTags(), this);\n+        }\n+        return azureFirewallFqdnTags;\n+    }\n+\n+    /** @return Resource collection API of WebCategories. */\n+    public WebCategories webCategories() {\n+        if (this.webCategories == null) {\n+            this.webCategories = new WebCategoriesImpl(clientObject.getWebCategories(), this);\n+        }\n+        return webCategories;\n+    }\n+\n+    /** @return Resource collection API of BastionHosts. */\n+    public BastionHosts bastionHosts() {\n+        if (this.bastionHosts == null) {\n+            this.bastionHosts = new BastionHostsImpl(clientObject.getBastionHosts(), this);\n+        }\n+        return bastionHosts;\n+    }\n+\n+    /** @return Resource collection API of ResourceProviders. */\n+    public ResourceProviders resourceProviders() {\n+        if (this.resourceProviders == null) {\n+            this.resourceProviders = new ResourceProvidersImpl(clientObject.getResourceProviders(), this);\n+        }\n+        return resourceProviders;\n+    }\n+\n+    /** @return Resource collection API of NetworkInterfaces. */\n+    public NetworkInterfaces networkInterfaces() {\n+        if (this.networkInterfaces == null) {\n+            this.networkInterfaces = new NetworkInterfacesImpl(clientObject.getNetworkInterfaces(), this);\n+        }\n+        return networkInterfaces;\n+    }\n+\n+    /** @return Resource collection API of PublicIpAddresses. */\n+    public PublicIpAddresses publicIpAddresses() {\n+        if (this.publicIpAddresses == null) {\n+            this.publicIpAddresses = new PublicIpAddressesImpl(clientObject.getPublicIpAddresses(), this);\n+        }\n+        return publicIpAddresses;\n+    }\n+\n+    /** @return Resource collection API of CustomIpPrefixes. */\n+    public CustomIpPrefixes customIpPrefixes() {\n+        if (this.customIpPrefixes == null) {\n+            this.customIpPrefixes = new CustomIpPrefixesImpl(clientObject.getCustomIpPrefixes(), this);\n+        }\n+        return customIpPrefixes;\n+    }\n+\n+    /** @return Resource collection API of DdosCustomPolicies. */\n+    public DdosCustomPolicies ddosCustomPolicies() {\n+        if (this.ddosCustomPolicies == null) {\n+            this.ddosCustomPolicies = new DdosCustomPoliciesImpl(clientObject.getDdosCustomPolicies(), this);\n+        }\n+        return ddosCustomPolicies;\n+    }\n+\n+    /** @return Resource collection API of DdosProtectionPlans. */\n+    public DdosProtectionPlans ddosProtectionPlans() {\n+        if (this.ddosProtectionPlans == null) {\n+            this.ddosProtectionPlans = new DdosProtectionPlansImpl(clientObject.getDdosProtectionPlans(), this);\n+        }\n+        return ddosProtectionPlans;\n+    }\n+\n+    /** @return Resource collection API of DscpConfigurations. */\n+    public DscpConfigurations dscpConfigurations() {\n+        if (this.dscpConfigurations == null) {\n+            this.dscpConfigurations = new DscpConfigurationsImpl(clientObject.getDscpConfigurations(), this);\n+        }\n+        return dscpConfigurations;\n+    }\n+\n+    /** @return Resource collection API of AvailableEndpointServices. */\n+    public AvailableEndpointServices availableEndpointServices() {\n+        if (this.availableEndpointServices == null) {\n+            this.availableEndpointServices =\n+                new AvailableEndpointServicesImpl(clientObject.getAvailableEndpointServices(), this);\n+        }\n+        return availableEndpointServices;\n+    }\n+\n+    /** @return Resource collection API of ExpressRouteCircuitAuthorizations. */\n+    public ExpressRouteCircuitAuthorizations expressRouteCircuitAuthorizations() {\n+        if (this.expressRouteCircuitAuthorizations == null) {\n+            this.expressRouteCircuitAuthorizations =\n+                new ExpressRouteCircuitAuthorizationsImpl(clientObject.getExpressRouteCircuitAuthorizations(), this);\n+        }\n+        return expressRouteCircuitAuthorizations;\n+    }\n+\n+    /** @return Resource collection API of ExpressRouteCircuitPeerings. */\n+    public ExpressRouteCircuitPeerings expressRouteCircuitPeerings() {\n+        if (this.expressRouteCircuitPeerings == null) {\n+            this.expressRouteCircuitPeerings =\n+                new ExpressRouteCircuitPeeringsImpl(clientObject.getExpressRouteCircuitPeerings(), this);\n+        }\n+        return expressRouteCircuitPeerings;\n+    }\n+\n+    /** @return Resource collection API of ExpressRouteCircuitConnections. */\n+    public ExpressRouteCircuitConnections expressRouteCircuitConnections() {\n+        if (this.expressRouteCircuitConnections == null) {\n+            this.expressRouteCircuitConnections =\n+                new ExpressRouteCircuitConnectionsImpl(clientObject.getExpressRouteCircuitConnections(), this);\n+        }\n+        return expressRouteCircuitConnections;\n+    }\n+\n+    /** @return Resource collection API of PeerExpressRouteCircuitConnections. */\n+    public PeerExpressRouteCircuitConnections peerExpressRouteCircuitConnections() {\n+        if (this.peerExpressRouteCircuitConnections == null) {\n+            this.peerExpressRouteCircuitConnections =\n+                new PeerExpressRouteCircuitConnectionsImpl(clientObject.getPeerExpressRouteCircuitConnections(), this);\n+        }\n+        return peerExpressRouteCircuitConnections;\n+    }\n+\n+    /** @return Resource collection API of ExpressRouteCircuits. */\n+    public ExpressRouteCircuits expressRouteCircuits() {\n+        if (this.expressRouteCircuits == null) {\n+            this.expressRouteCircuits = new ExpressRouteCircuitsImpl(clientObject.getExpressRouteCircuits(), this);\n+        }\n+        return expressRouteCircuits;\n+    }\n+\n+    /** @return Resource collection API of ExpressRouteServiceProviders. */\n+    public ExpressRouteServiceProviders expressRouteServiceProviders() {\n+        if (this.expressRouteServiceProviders == null) {\n+            this.expressRouteServiceProviders =\n+                new ExpressRouteServiceProvidersImpl(clientObject.getExpressRouteServiceProviders(), this);\n+        }\n+        return expressRouteServiceProviders;\n+    }\n+\n+    /** @return Resource collection API of ExpressRouteCrossConnections. */\n+    public ExpressRouteCrossConnections expressRouteCrossConnections() {\n+        if (this.expressRouteCrossConnections == null) {\n+            this.expressRouteCrossConnections =\n+                new ExpressRouteCrossConnectionsImpl(clientObject.getExpressRouteCrossConnections(), this);\n+        }\n+        return expressRouteCrossConnections;\n+    }\n+\n+    /** @return Resource collection API of ExpressRouteCrossConnectionPeerings. */\n+    public ExpressRouteCrossConnectionPeerings expressRouteCrossConnectionPeerings() {\n+        if (this.expressRouteCrossConnectionPeerings == null) {\n+            this.expressRouteCrossConnectionPeerings =\n+                new ExpressRouteCrossConnectionPeeringsImpl(\n+                    clientObject.getExpressRouteCrossConnectionPeerings(), this);\n+        }\n+        return expressRouteCrossConnectionPeerings;\n+    }\n+\n+    /** @return Resource collection API of ExpressRoutePortsLocations. */\n+    public ExpressRoutePortsLocations expressRoutePortsLocations() {\n+        if (this.expressRoutePortsLocations == null) {\n+            this.expressRoutePortsLocations =\n+                new ExpressRoutePortsLocationsImpl(clientObject.getExpressRoutePortsLocations(), this);\n+        }\n+        return expressRoutePortsLocations;\n+    }\n+\n+    /** @return Resource collection API of ExpressRoutePorts. */\n+    public ExpressRoutePorts expressRoutePorts() {\n+        if (this.expressRoutePorts == null) {\n+            this.expressRoutePorts = new ExpressRoutePortsImpl(clientObject.getExpressRoutePorts(), this);\n+        }\n+        return expressRoutePorts;\n+    }\n+\n+    /** @return Resource collection API of ExpressRouteLinks. */\n+    public ExpressRouteLinks expressRouteLinks() {\n+        if (this.expressRouteLinks == null) {\n+            this.expressRouteLinks = new ExpressRouteLinksImpl(clientObject.getExpressRouteLinks(), this);\n+        }\n+        return expressRouteLinks;\n+    }\n+\n+    /** @return Resource collection API of FirewallPolicies. */\n+    public FirewallPolicies firewallPolicies() {\n+        if (this.firewallPolicies == null) {\n+            this.firewallPolicies = new FirewallPoliciesImpl(clientObject.getFirewallPolicies(), this);\n+        }\n+        return firewallPolicies;\n+    }\n+\n+    /** @return Resource collection API of FirewallPolicyRuleCollectionGroups. */\n+    public FirewallPolicyRuleCollectionGroups firewallPolicyRuleCollectionGroups() {\n+        if (this.firewallPolicyRuleCollectionGroups == null) {\n+            this.firewallPolicyRuleCollectionGroups =\n+                new FirewallPolicyRuleCollectionGroupsImpl(clientObject.getFirewallPolicyRuleCollectionGroups(), this);\n+        }\n+        return firewallPolicyRuleCollectionGroups;\n+    }\n+\n+    /** @return Resource collection API of IpAllocations. */\n+    public IpAllocations ipAllocations() {\n+        if (this.ipAllocations == null) {\n+            this.ipAllocations = new IpAllocationsImpl(clientObject.getIpAllocations(), this);\n+        }\n+        return ipAllocations;\n+    }\n+\n+    /** @return Resource collection API of IpGroups. */\n+    public IpGroups ipGroups() {\n+        if (this.ipGroups == null) {\n+            this.ipGroups = new IpGroupsImpl(clientObject.getIpGroups(), this);\n+        }\n+        return ipGroups;\n+    }\n+\n+    /** @return Resource collection API of LoadBalancers. */\n+    public LoadBalancers loadBalancers() {\n+        if (this.loadBalancers == null) {\n+            this.loadBalancers = new LoadBalancersImpl(clientObject.getLoadBalancers(), this);\n+        }\n+        return loadBalancers;\n+    }\n+\n+    /** @return Resource collection API of LoadBalancerBackendAddressPools. */\n+    public LoadBalancerBackendAddressPools loadBalancerBackendAddressPools() {\n+        if (this.loadBalancerBackendAddressPools == null) {\n+            this.loadBalancerBackendAddressPools =\n+                new LoadBalancerBackendAddressPoolsImpl(clientObject.getLoadBalancerBackendAddressPools(), this);\n+        }\n+        return loadBalancerBackendAddressPools;\n+    }\n+\n+    /** @return Resource collection API of LoadBalancerFrontendIpConfigurations. */\n+    public LoadBalancerFrontendIpConfigurations loadBalancerFrontendIpConfigurations() {\n+        if (this.loadBalancerFrontendIpConfigurations == null) {\n+            this.loadBalancerFrontendIpConfigurations =\n+                new LoadBalancerFrontendIpConfigurationsImpl(\n+                    clientObject.getLoadBalancerFrontendIpConfigurations(), this);\n+        }\n+        return loadBalancerFrontendIpConfigurations;\n+    }\n+\n+    /** @return Resource collection API of InboundNatRules. */\n+    public InboundNatRules inboundNatRules() {\n+        if (this.inboundNatRules == null) {\n+            this.inboundNatRules = new InboundNatRulesImpl(clientObject.getInboundNatRules(), this);\n+        }\n+        return inboundNatRules;\n+    }\n+\n+    /** @return Resource collection API of LoadBalancerLoadBalancingRules. */\n+    public LoadBalancerLoadBalancingRules loadBalancerLoadBalancingRules() {\n+        if (this.loadBalancerLoadBalancingRules == null) {\n+            this.loadBalancerLoadBalancingRules =\n+                new LoadBalancerLoadBalancingRulesImpl(clientObject.getLoadBalancerLoadBalancingRules(), this);\n+        }\n+        return loadBalancerLoadBalancingRules;\n+    }\n+\n+    /** @return Resource collection API of LoadBalancerOutboundRules. */\n+    public LoadBalancerOutboundRules loadBalancerOutboundRules() {\n+        if (this.loadBalancerOutboundRules == null) {\n+            this.loadBalancerOutboundRules =\n+                new LoadBalancerOutboundRulesImpl(clientObject.getLoadBalancerOutboundRules(), this);\n+        }\n+        return loadBalancerOutboundRules;\n+    }\n+\n+    /** @return Resource collection API of LoadBalancerNetworkInterfaces. */\n+    public LoadBalancerNetworkInterfaces loadBalancerNetworkInterfaces() {\n+        if (this.loadBalancerNetworkInterfaces == null) {\n+            this.loadBalancerNetworkInterfaces =\n+                new LoadBalancerNetworkInterfacesImpl(clientObject.getLoadBalancerNetworkInterfaces(), this);\n+        }\n+        return loadBalancerNetworkInterfaces;\n+    }\n+\n+    /** @return Resource collection API of LoadBalancerProbes. */\n+    public LoadBalancerProbes loadBalancerProbes() {\n+        if (this.loadBalancerProbes == null) {\n+            this.loadBalancerProbes = new LoadBalancerProbesImpl(clientObject.getLoadBalancerProbes(), this);\n+        }\n+        return loadBalancerProbes;\n+    }\n+\n+    /** @return Resource collection API of NatGateways. */\n+    public NatGateways natGateways() {\n+        if (this.natGateways == null) {\n+            this.natGateways = new NatGatewaysImpl(clientObject.getNatGateways(), this);\n+        }\n+        return natGateways;\n+    }\n+\n+    /** @return Resource collection API of NetworkInterfaceIpConfigurations. */\n+    public NetworkInterfaceIpConfigurations networkInterfaceIpConfigurations() {\n+        if (this.networkInterfaceIpConfigurations == null) {\n+            this.networkInterfaceIpConfigurations =\n+                new NetworkInterfaceIpConfigurationsImpl(clientObject.getNetworkInterfaceIpConfigurations(), this);\n+        }\n+        return networkInterfaceIpConfigurations;\n+    }\n+\n+    /** @return Resource collection API of NetworkInterfaceLoadBalancers. */\n+    public NetworkInterfaceLoadBalancers networkInterfaceLoadBalancers() {\n+        if (this.networkInterfaceLoadBalancers == null) {\n+            this.networkInterfaceLoadBalancers =\n+                new NetworkInterfaceLoadBalancersImpl(clientObject.getNetworkInterfaceLoadBalancers(), this);\n+        }\n+        return networkInterfaceLoadBalancers;\n+    }\n+\n+    /** @return Resource collection API of NetworkInterfaceTapConfigurations. */\n+    public NetworkInterfaceTapConfigurations networkInterfaceTapConfigurations() {\n+        if (this.networkInterfaceTapConfigurations == null) {\n+            this.networkInterfaceTapConfigurations =\n+                new NetworkInterfaceTapConfigurationsImpl(clientObject.getNetworkInterfaceTapConfigurations(), this);\n+        }\n+        return networkInterfaceTapConfigurations;\n+    }\n+\n+    /** @return Resource collection API of NetworkProfiles. */\n+    public NetworkProfiles networkProfiles() {\n+        if (this.networkProfiles == null) {\n+            this.networkProfiles = new NetworkProfilesImpl(clientObject.getNetworkProfiles(), this);\n+        }\n+        return networkProfiles;\n+    }\n+\n+    /** @return Resource collection API of NetworkSecurityGroups. */\n+    public NetworkSecurityGroups networkSecurityGroups() {\n+        if (this.networkSecurityGroups == null) {\n+            this.networkSecurityGroups = new NetworkSecurityGroupsImpl(clientObject.getNetworkSecurityGroups(), this);\n+        }\n+        return networkSecurityGroups;\n+    }\n+\n+    /** @return Resource collection API of SecurityRules. */\n+    public SecurityRules securityRules() {\n+        if (this.securityRules == null) {\n+            this.securityRules = new SecurityRulesImpl(clientObject.getSecurityRules(), this);\n+        }\n+        return securityRules;\n+    }\n+\n+    /** @return Resource collection API of DefaultSecurityRules. */\n+    public DefaultSecurityRules defaultSecurityRules() {\n+        if (this.defaultSecurityRules == null) {\n+            this.defaultSecurityRules = new DefaultSecurityRulesImpl(clientObject.getDefaultSecurityRules(), this);\n+        }\n+        return defaultSecurityRules;\n+    }\n+\n+    /** @return Resource collection API of NetworkVirtualAppliances. */\n+    public NetworkVirtualAppliances networkVirtualAppliances() {\n+        if (this.networkVirtualAppliances == null) {\n+            this.networkVirtualAppliances =\n+                new NetworkVirtualAppliancesImpl(clientObject.getNetworkVirtualAppliances(), this);\n+        }\n+        return networkVirtualAppliances;\n+    }\n+\n+    /** @return Resource collection API of VirtualApplianceSites. */\n+    public VirtualApplianceSites virtualApplianceSites() {\n+        if (this.virtualApplianceSites == null) {\n+            this.virtualApplianceSites = new VirtualApplianceSitesImpl(clientObject.getVirtualApplianceSites(), this);\n+        }\n+        return virtualApplianceSites;\n+    }\n+\n+    /** @return Resource collection API of VirtualApplianceSkus. */\n+    public VirtualApplianceSkus virtualApplianceSkus() {\n+        if (this.virtualApplianceSkus == null) {\n+            this.virtualApplianceSkus = new VirtualApplianceSkusImpl(clientObject.getVirtualApplianceSkus(), this);\n+        }\n+        return virtualApplianceSkus;\n+    }\n+\n+    /** @return Resource collection API of InboundSecurityRuleOperations. */\n+    public InboundSecurityRuleOperations inboundSecurityRuleOperations() {\n+        if (this.inboundSecurityRuleOperations == null) {\n+            this.inboundSecurityRuleOperations =\n+                new InboundSecurityRuleOperationsImpl(clientObject.getInboundSecurityRuleOperations(), this);\n+        }\n+        return inboundSecurityRuleOperations;\n+    }\n+\n+    /** @return Resource collection API of NetworkWatchers. */\n+    public NetworkWatchers networkWatchers() {\n+        if (this.networkWatchers == null) {\n+            this.networkWatchers = new NetworkWatchersImpl(clientObject.getNetworkWatchers(), this);\n+        }\n+        return networkWatchers;\n+    }\n+\n+    /** @return Resource collection API of PacketCaptures. */\n+    public PacketCaptures packetCaptures() {\n+        if (this.packetCaptures == null) {\n+            this.packetCaptures = new PacketCapturesImpl(clientObject.getPacketCaptures(), this);\n+        }\n+        return packetCaptures;\n+    }\n+\n+    /** @return Resource collection API of ConnectionMonitors. */\n+    public ConnectionMonitors connectionMonitors() {\n+        if (this.connectionMonitors == null) {\n+            this.connectionMonitors = new ConnectionMonitorsImpl(clientObject.getConnectionMonitors(), this);\n+        }\n+        return connectionMonitors;\n+    }\n+\n+    /** @return Resource collection API of FlowLogs. */\n+    public FlowLogs flowLogs() {\n+        if (this.flowLogs == null) {\n+            this.flowLogs = new FlowLogsImpl(clientObject.getFlowLogs(), this);\n+        }\n+        return flowLogs;\n+    }\n+\n+    /** @return Resource collection API of Operations. */\n+    public Operations operations() {\n+        if (this.operations == null) {\n+            this.operations = new OperationsImpl(clientObject.getOperations(), this);\n+        }\n+        return operations;\n+    }\n+\n+    /** @return Resource collection API of PrivateEndpoints. */\n+    public PrivateEndpoints privateEndpoints() {\n+        if (this.privateEndpoints == null) {\n+            this.privateEndpoints = new PrivateEndpointsImpl(clientObject.getPrivateEndpoints(), this);\n+        }\n+        return privateEndpoints;\n+    }\n+\n+    /** @return Resource collection API of AvailablePrivateEndpointTypes. */\n+    public AvailablePrivateEndpointTypes availablePrivateEndpointTypes() {\n+        if (this.availablePrivateEndpointTypes == null) {\n+            this.availablePrivateEndpointTypes =\n+                new AvailablePrivateEndpointTypesImpl(clientObject.getAvailablePrivateEndpointTypes(), this);\n+        }\n+        return availablePrivateEndpointTypes;\n+    }\n+\n+    /** @return Resource collection API of PrivateDnsZoneGroups. */\n+    public PrivateDnsZoneGroups privateDnsZoneGroups() {\n+        if (this.privateDnsZoneGroups == null) {\n+            this.privateDnsZoneGroups = new PrivateDnsZoneGroupsImpl(clientObject.getPrivateDnsZoneGroups(), this);\n+        }\n+        return privateDnsZoneGroups;\n+    }\n+\n+    /** @return Resource collection API of PrivateLinkServices. */\n+    public PrivateLinkServices privateLinkServices() {\n+        if (this.privateLinkServices == null) {\n+            this.privateLinkServices = new PrivateLinkServicesImpl(clientObject.getPrivateLinkServices(), this);\n+        }\n+        return privateLinkServices;\n+    }\n+\n+    /** @return Resource collection API of PublicIpPrefixes. */\n+    public PublicIpPrefixes publicIpPrefixes() {\n+        if (this.publicIpPrefixes == null) {\n+            this.publicIpPrefixes = new PublicIpPrefixesImpl(clientObject.getPublicIpPrefixes(), this);\n+        }\n+        return publicIpPrefixes;\n+    }\n+\n+    /** @return Resource collection API of RouteFilters. */\n+    public RouteFilters routeFilters() {\n+        if (this.routeFilters == null) {\n+            this.routeFilters = new RouteFiltersImpl(clientObject.getRouteFilters(), this);\n+        }\n+        return routeFilters;\n+    }\n+\n+    /** @return Resource collection API of RouteFilterRules. */\n+    public RouteFilterRules routeFilterRules() {\n+        if (this.routeFilterRules == null) {\n+            this.routeFilterRules = new RouteFilterRulesImpl(clientObject.getRouteFilterRules(), this);\n+        }\n+        return routeFilterRules;\n+    }\n+\n+    /** @return Resource collection API of RouteTables. */\n+    public RouteTables routeTables() {\n+        if (this.routeTables == null) {\n+            this.routeTables = new RouteTablesImpl(clientObject.getRouteTables(), this);\n+        }\n+        return routeTables;\n+    }\n+\n+    /** @return Resource collection API of Routes. */\n+    public Routes routes() {\n+        if (this.routes == null) {\n+            this.routes = new RoutesImpl(clientObject.getRoutes(), this);\n+        }\n+        return routes;\n+    }\n+\n+    /** @return Resource collection API of SecurityPartnerProviders. */\n+    public SecurityPartnerProviders securityPartnerProviders() {\n+        if (this.securityPartnerProviders == null) {\n+            this.securityPartnerProviders =\n+                new SecurityPartnerProvidersImpl(clientObject.getSecurityPartnerProviders(), this);\n+        }\n+        return securityPartnerProviders;\n+    }\n+\n+    /** @return Resource collection API of BgpServiceCommunities. */\n+    public BgpServiceCommunities bgpServiceCommunities() {\n+        if (this.bgpServiceCommunities == null) {\n+            this.bgpServiceCommunities = new BgpServiceCommunitiesImpl(clientObject.getBgpServiceCommunities(), this);\n+        }\n+        return bgpServiceCommunities;\n+    }\n+\n+    /** @return Resource collection API of ServiceEndpointPolicies. */\n+    public ServiceEndpointPolicies serviceEndpointPolicies() {\n+        if (this.serviceEndpointPolicies == null) {\n+            this.serviceEndpointPolicies =\n+                new ServiceEndpointPoliciesImpl(clientObject.getServiceEndpointPolicies(), this);\n+        }\n+        return serviceEndpointPolicies;\n+    }\n+\n+    /** @return Resource collection API of ServiceEndpointPolicyDefinitions. */\n+    public ServiceEndpointPolicyDefinitions serviceEndpointPolicyDefinitions() {\n+        if (this.serviceEndpointPolicyDefinitions == null) {\n+            this.serviceEndpointPolicyDefinitions =\n+                new ServiceEndpointPolicyDefinitionsImpl(clientObject.getServiceEndpointPolicyDefinitions(), this);\n+        }\n+        return serviceEndpointPolicyDefinitions;\n+    }\n+\n+    /** @return Resource collection API of ServiceTags. */\n+    public ServiceTags serviceTags() {\n+        if (this.serviceTags == null) {\n+            this.serviceTags = new ServiceTagsImpl(clientObject.getServiceTags(), this);\n+        }\n+        return serviceTags;\n+    }\n+\n+    /** @return Resource collection API of Usages. */\n+    public Usages usages() {\n+        if (this.usages == null) {\n+            this.usages = new UsagesImpl(clientObject.getUsages(), this);\n+        }\n+        return usages;\n+    }\n+\n+    /** @return Resource collection API of VirtualNetworks. */\n+    public VirtualNetworks virtualNetworks() {\n+        if (this.virtualNetworks == null) {\n+            this.virtualNetworks = new VirtualNetworksImpl(clientObject.getVirtualNetworks(), this);\n+        }\n+        return virtualNetworks;\n+    }\n+\n+    /** @return Resource collection API of Subnets. */\n+    public Subnets subnets() {\n+        if (this.subnets == null) {\n+            this.subnets = new SubnetsImpl(clientObject.getSubnets(), this);\n+        }\n+        return subnets;\n+    }\n+\n+    /** @return Resource collection API of ResourceNavigationLinks. */\n+    public ResourceNavigationLinks resourceNavigationLinks() {\n+        if (this.resourceNavigationLinks == null) {\n+            this.resourceNavigationLinks =\n+                new ResourceNavigationLinksImpl(clientObject.getResourceNavigationLinks(), this);\n+        }\n+        return resourceNavigationLinks;\n+    }\n+\n+    /** @return Resource collection API of ServiceAssociationLinks. */\n+    public ServiceAssociationLinks serviceAssociationLinks() {\n+        if (this.serviceAssociationLinks == null) {\n+            this.serviceAssociationLinks =\n+                new ServiceAssociationLinksImpl(clientObject.getServiceAssociationLinks(), this);\n+        }\n+        return serviceAssociationLinks;\n+    }\n+\n+    /** @return Resource collection API of VirtualNetworkPeerings. */\n+    public VirtualNetworkPeerings virtualNetworkPeerings() {\n+        if (this.virtualNetworkPeerings == null) {\n+            this.virtualNetworkPeerings =\n+                new VirtualNetworkPeeringsImpl(clientObject.getVirtualNetworkPeerings(), this);\n+        }\n+        return virtualNetworkPeerings;\n+    }\n+\n+    /** @return Resource collection API of VirtualNetworkGateways. */\n+    public VirtualNetworkGateways virtualNetworkGateways() {\n+        if (this.virtualNetworkGateways == null) {\n+            this.virtualNetworkGateways =\n+                new VirtualNetworkGatewaysImpl(clientObject.getVirtualNetworkGateways(), this);\n+        }\n+        return virtualNetworkGateways;\n+    }\n+\n+    /** @return Resource collection API of VirtualNetworkGatewayConnections. */\n+    public VirtualNetworkGatewayConnections virtualNetworkGatewayConnections() {\n+        if (this.virtualNetworkGatewayConnections == null) {\n+            this.virtualNetworkGatewayConnections =\n+                new VirtualNetworkGatewayConnectionsImpl(clientObject.getVirtualNetworkGatewayConnections(), this);\n+        }\n+        return virtualNetworkGatewayConnections;\n+    }\n+\n+    /** @return Resource collection API of LocalNetworkGateways. */\n+    public LocalNetworkGateways localNetworkGateways() {\n+        if (this.localNetworkGateways == null) {\n+            this.localNetworkGateways = new LocalNetworkGatewaysImpl(clientObject.getLocalNetworkGateways(), this);\n+        }\n+        return localNetworkGateways;\n+    }\n+\n+    /** @return Resource collection API of VirtualNetworkTaps. */\n+    public VirtualNetworkTaps virtualNetworkTaps() {\n+        if (this.virtualNetworkTaps == null) {\n+            this.virtualNetworkTaps = new VirtualNetworkTapsImpl(clientObject.getVirtualNetworkTaps(), this);\n+        }\n+        return virtualNetworkTaps;\n+    }\n+\n+    /** @return Resource collection API of VirtualRouters. */\n+    public VirtualRouters virtualRouters() {\n+        if (this.virtualRouters == null) {\n+            this.virtualRouters = new VirtualRoutersImpl(clientObject.getVirtualRouters(), this);\n+        }\n+        return virtualRouters;\n+    }\n+\n+    /** @return Resource collection API of VirtualRouterPeerings. */\n+    public VirtualRouterPeerings virtualRouterPeerings() {\n+        if (this.virtualRouterPeerings == null) {\n+            this.virtualRouterPeerings = new VirtualRouterPeeringsImpl(clientObject.getVirtualRouterPeerings(), this);\n+        }\n+        return virtualRouterPeerings;\n+    }\n+\n+    /** @return Resource collection API of VirtualWans. */\n+    public VirtualWans virtualWans() {\n+        if (this.virtualWans == null) {\n+            this.virtualWans = new VirtualWansImpl(clientObject.getVirtualWans(), this);\n+        }\n+        return virtualWans;\n+    }\n+\n+    /** @return Resource collection API of VpnSites. */\n+    public VpnSites vpnSites() {\n+        if (this.vpnSites == null) {\n+            this.vpnSites = new VpnSitesImpl(clientObject.getVpnSites(), this);\n+        }\n+        return vpnSites;\n+    }\n+\n+    /** @return Resource collection API of VpnSiteLinks. */\n+    public VpnSiteLinks vpnSiteLinks() {\n+        if (this.vpnSiteLinks == null) {\n+            this.vpnSiteLinks = new VpnSiteLinksImpl(clientObject.getVpnSiteLinks(), this);\n+        }\n+        return vpnSiteLinks;\n+    }\n+\n+    /** @return Resource collection API of VpnSitesConfigurations. */\n+    public VpnSitesConfigurations vpnSitesConfigurations() {\n+        if (this.vpnSitesConfigurations == null) {\n+            this.vpnSitesConfigurations =\n+                new VpnSitesConfigurationsImpl(clientObject.getVpnSitesConfigurations(), this);\n+        }\n+        return vpnSitesConfigurations;\n+    }\n+\n+    /** @return Resource collection API of VpnServerConfigurations. */\n+    public VpnServerConfigurations vpnServerConfigurations() {\n+        if (this.vpnServerConfigurations == null) {\n+            this.vpnServerConfigurations =\n+                new VpnServerConfigurationsImpl(clientObject.getVpnServerConfigurations(), this);\n+        }\n+        return vpnServerConfigurations;\n+    }\n+\n+    /** @return Resource collection API of VirtualHubs. */\n+    public VirtualHubs virtualHubs() {\n+        if (this.virtualHubs == null) {\n+            this.virtualHubs = new VirtualHubsImpl(clientObject.getVirtualHubs(), this);\n+        }\n+        return virtualHubs;\n+    }\n+\n+    /** @return Resource collection API of HubVirtualNetworkConnections. */\n+    public HubVirtualNetworkConnections hubVirtualNetworkConnections() {\n+        if (this.hubVirtualNetworkConnections == null) {\n+            this.hubVirtualNetworkConnections =\n+                new HubVirtualNetworkConnectionsImpl(clientObject.getHubVirtualNetworkConnections(), this);\n+        }\n+        return hubVirtualNetworkConnections;\n+    }\n+\n+    /** @return Resource collection API of VpnGateways. */\n+    public VpnGateways vpnGateways() {\n+        if (this.vpnGateways == null) {\n+            this.vpnGateways = new VpnGatewaysImpl(clientObject.getVpnGateways(), this);\n+        }\n+        return vpnGateways;\n+    }\n+\n+    /** @return Resource collection API of VpnLinkConnections. */\n+    public VpnLinkConnections vpnLinkConnections() {\n+        if (this.vpnLinkConnections == null) {\n+            this.vpnLinkConnections = new VpnLinkConnectionsImpl(clientObject.getVpnLinkConnections(), this);\n+        }\n+        return vpnLinkConnections;\n+    }\n+\n+    /** @return Resource collection API of VpnConnections. */\n+    public VpnConnections vpnConnections() {\n+        if (this.vpnConnections == null) {\n+            this.vpnConnections = new VpnConnectionsImpl(clientObject.getVpnConnections(), this);\n+        }\n+        return vpnConnections;\n+    }\n+\n+    /** @return Resource collection API of VpnSiteLinkConnections. */\n+    public VpnSiteLinkConnections vpnSiteLinkConnections() {\n+        if (this.vpnSiteLinkConnections == null) {\n+            this.vpnSiteLinkConnections =\n+                new VpnSiteLinkConnectionsImpl(clientObject.getVpnSiteLinkConnections(), this);\n+        }\n+        return vpnSiteLinkConnections;\n+    }\n+\n+    /** @return Resource collection API of NatRules. */\n+    public NatRules natRules() {\n+        if (this.natRules == null) {\n+            this.natRules = new NatRulesImpl(clientObject.getNatRules(), this);\n+        }\n+        return natRules;\n+    }\n+\n+    /** @return Resource collection API of P2SVpnGateways. */\n+    public P2SVpnGateways p2SVpnGateways() {\n+        if (this.p2SVpnGateways == null) {\n+            this.p2SVpnGateways = new P2SVpnGatewaysImpl(clientObject.getP2SVpnGateways(), this);\n+        }\n+        return p2SVpnGateways;\n+    }\n+\n+    /** @return Resource collection API of VpnServerConfigurationsAssociatedWithVirtualWans. */\n+    public VpnServerConfigurationsAssociatedWithVirtualWans vpnServerConfigurationsAssociatedWithVirtualWans() {\n+        if (this.vpnServerConfigurationsAssociatedWithVirtualWans == null) {\n+            this.vpnServerConfigurationsAssociatedWithVirtualWans =\n+                new VpnServerConfigurationsAssociatedWithVirtualWansImpl(\n+                    clientObject.getVpnServerConfigurationsAssociatedWithVirtualWans(), this);\n+        }\n+        return vpnServerConfigurationsAssociatedWithVirtualWans;\n+    }\n+\n+    /** @return Resource collection API of VirtualHubRouteTableV2S. */\n+    public VirtualHubRouteTableV2S virtualHubRouteTableV2S() {\n+        if (this.virtualHubRouteTableV2S == null) {\n+            this.virtualHubRouteTableV2S =\n+                new VirtualHubRouteTableV2SImpl(clientObject.getVirtualHubRouteTableV2S(), this);\n+        }\n+        return virtualHubRouteTableV2S;\n+    }\n+\n+    /** @return Resource collection API of ExpressRouteGateways. */\n+    public ExpressRouteGateways expressRouteGateways() {\n+        if (this.expressRouteGateways == null) {\n+            this.expressRouteGateways = new ExpressRouteGatewaysImpl(clientObject.getExpressRouteGateways(), this);\n+        }\n+        return expressRouteGateways;\n+    }\n+\n+    /** @return Resource collection API of ExpressRouteConnections. */\n+    public ExpressRouteConnections expressRouteConnections() {\n+        if (this.expressRouteConnections == null) {\n+            this.expressRouteConnections =\n+                new ExpressRouteConnectionsImpl(clientObject.getExpressRouteConnections(), this);\n+        }\n+        return expressRouteConnections;\n+    }\n+\n+    /** @return Resource collection API of VirtualHubBgpConnections. */\n+    public VirtualHubBgpConnections virtualHubBgpConnections() {\n+        if (this.virtualHubBgpConnections == null) {\n+            this.virtualHubBgpConnections =\n+                new VirtualHubBgpConnectionsImpl(clientObject.getVirtualHubBgpConnections(), this);\n+        }\n+        return virtualHubBgpConnections;\n+    }\n+\n+    /** @return Resource collection API of VirtualHubIpConfigurations. */\n+    public VirtualHubIpConfigurations virtualHubIpConfigurations() {\n+        if (this.virtualHubIpConfigurations == null) {\n+            this.virtualHubIpConfigurations =\n+                new VirtualHubIpConfigurationsImpl(clientObject.getVirtualHubIpConfigurations(), this);\n+        }\n+        return virtualHubIpConfigurations;\n+    }\n+\n+    /** @return Resource collection API of HubRouteTables. */\n+    public HubRouteTables hubRouteTables() {\n+        if (this.hubRouteTables == null) {\n+            this.hubRouteTables = new HubRouteTablesImpl(clientObject.getHubRouteTables(), this);\n+        }\n+        return hubRouteTables;\n+    }\n+\n+    /** @return Resource collection API of WebApplicationFirewallPolicies. */\n+    public WebApplicationFirewallPolicies webApplicationFirewallPolicies() {\n+        if (this.webApplicationFirewallPolicies == null) {\n+            this.webApplicationFirewallPolicies =\n+                new WebApplicationFirewallPoliciesImpl(clientObject.getWebApplicationFirewallPolicies(), this);\n+        }\n+        return webApplicationFirewallPolicies;\n+    }\n+\n+    /**\n+     * @return Wrapped service client NetworkManagementClient providing direct access to the underlying auto-generated\n+     *     API implementation, based on Azure REST API.\n+     */\n+    public NetworkManagementClient serviceClient() {\n+        return this.clientObject;\n+    }\n+}"
  },
  {
    "sha": "a9db5c2cebeb9373c1560ad7e4d04d1185973a41",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewayPrivateEndpointConnectionsClient.java",
    "status": "added",
    "additions": 224,
    "deletions": 0,
    "changes": 224,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewayPrivateEndpointConnectionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewayPrivateEndpointConnectionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewayPrivateEndpointConnectionsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,224 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.ApplicationGatewayPrivateEndpointConnectionInner;\n+\n+/**\n+ * An instance of this class provides access to all the operations defined in\n+ * ApplicationGatewayPrivateEndpointConnectionsClient.\n+ */\n+public interface ApplicationGatewayPrivateEndpointConnectionsClient {\n+    /**\n+     * Deletes the specified private endpoint connection on application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param connectionName The name of the application gateway private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String applicationGatewayName, String connectionName);\n+\n+    /**\n+     * Deletes the specified private endpoint connection on application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param connectionName The name of the application gateway private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String applicationGatewayName, String connectionName, Context context);\n+\n+    /**\n+     * Deletes the specified private endpoint connection on application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param connectionName The name of the application gateway private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String applicationGatewayName, String connectionName);\n+\n+    /**\n+     * Deletes the specified private endpoint connection on application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param connectionName The name of the application gateway private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String applicationGatewayName, String connectionName, Context context);\n+\n+    /**\n+     * Updates the specified private endpoint connection on application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param connectionName The name of the application gateway private endpoint connection.\n+     * @param parameters Parameters supplied to update application gateway private endpoint connection operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return private Endpoint connection on an application gateway.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<\n+            PollResult<ApplicationGatewayPrivateEndpointConnectionInner>,\n+            ApplicationGatewayPrivateEndpointConnectionInner>\n+        beginUpdate(\n+            String resourceGroupName,\n+            String applicationGatewayName,\n+            String connectionName,\n+            ApplicationGatewayPrivateEndpointConnectionInner parameters);\n+\n+    /**\n+     * Updates the specified private endpoint connection on application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param connectionName The name of the application gateway private endpoint connection.\n+     * @param parameters Parameters supplied to update application gateway private endpoint connection operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return private Endpoint connection on an application gateway.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<\n+            PollResult<ApplicationGatewayPrivateEndpointConnectionInner>,\n+            ApplicationGatewayPrivateEndpointConnectionInner>\n+        beginUpdate(\n+            String resourceGroupName,\n+            String applicationGatewayName,\n+            String connectionName,\n+            ApplicationGatewayPrivateEndpointConnectionInner parameters,\n+            Context context);\n+\n+    /**\n+     * Updates the specified private endpoint connection on application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param connectionName The name of the application gateway private endpoint connection.\n+     * @param parameters Parameters supplied to update application gateway private endpoint connection operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return private Endpoint connection on an application gateway.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayPrivateEndpointConnectionInner update(\n+        String resourceGroupName,\n+        String applicationGatewayName,\n+        String connectionName,\n+        ApplicationGatewayPrivateEndpointConnectionInner parameters);\n+\n+    /**\n+     * Updates the specified private endpoint connection on application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param connectionName The name of the application gateway private endpoint connection.\n+     * @param parameters Parameters supplied to update application gateway private endpoint connection operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return private Endpoint connection on an application gateway.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayPrivateEndpointConnectionInner update(\n+        String resourceGroupName,\n+        String applicationGatewayName,\n+        String connectionName,\n+        ApplicationGatewayPrivateEndpointConnectionInner parameters,\n+        Context context);\n+\n+    /**\n+     * Gets the specified private endpoint connection on application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param connectionName The name of the application gateway private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified private endpoint connection on application gateway.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayPrivateEndpointConnectionInner get(\n+        String resourceGroupName, String applicationGatewayName, String connectionName);\n+\n+    /**\n+     * Gets the specified private endpoint connection on application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param connectionName The name of the application gateway private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified private endpoint connection on application gateway.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ApplicationGatewayPrivateEndpointConnectionInner> getWithResponse(\n+        String resourceGroupName, String applicationGatewayName, String connectionName, Context context);\n+\n+    /**\n+     * Lists all private endpoint connections on an application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListApplicationGatewayPrivateEndpointConnection API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationGatewayPrivateEndpointConnectionInner> list(\n+        String resourceGroupName, String applicationGatewayName);\n+\n+    /**\n+     * Lists all private endpoint connections on an application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListApplicationGatewayPrivateEndpointConnection API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationGatewayPrivateEndpointConnectionInner> list(\n+        String resourceGroupName, String applicationGatewayName, Context context);\n+}"
  },
  {
    "sha": "925f2af5cf5c3a50fa484afdfe83e1e7c6eee195",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewayPrivateLinkResourcesClient.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewayPrivateLinkResourcesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewayPrivateLinkResourcesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewayPrivateLinkResourcesClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,46 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.network.generated.fluent.models.ApplicationGatewayPrivateLinkResourceInner;\n+\n+/**\n+ * An instance of this class provides access to all the operations defined in\n+ * ApplicationGatewayPrivateLinkResourcesClient.\n+ */\n+public interface ApplicationGatewayPrivateLinkResourcesClient {\n+    /**\n+     * Lists all private link resources on an application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListApplicationGatewayPrivateLinkResources API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationGatewayPrivateLinkResourceInner> list(\n+        String resourceGroupName, String applicationGatewayName);\n+\n+    /**\n+     * Lists all private link resources on an application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListApplicationGatewayPrivateLinkResources API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationGatewayPrivateLinkResourceInner> list(\n+        String resourceGroupName, String applicationGatewayName, Context context);\n+}"
  },
  {
    "sha": "bb5c63e9ae1e9a4c5ed13f09ada989b288e7aa08",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewaysClient.java",
    "status": "added",
    "additions": 697,
    "deletions": 0,
    "changes": 697,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewaysClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewaysClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationGatewaysClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,697 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.ApplicationGatewayAvailableSslOptionsInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ApplicationGatewayAvailableWafRuleSetsResultInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ApplicationGatewayBackendHealthInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ApplicationGatewayBackendHealthOnDemandInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ApplicationGatewayInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ApplicationGatewaySslPredefinedPolicyInner;\n+import com.azure.resourcemanager.network.generated.models.ApplicationGatewayOnDemandProbe;\n+import com.azure.resourcemanager.network.generated.models.TagsObject;\n+import java.util.List;\n+\n+/** An instance of this class provides access to all the operations defined in ApplicationGatewaysClient. */\n+public interface ApplicationGatewaysClient {\n+    /**\n+     * Deletes the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String applicationGatewayName);\n+\n+    /**\n+     * Deletes the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String applicationGatewayName, Context context);\n+\n+    /**\n+     * Deletes the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String applicationGatewayName);\n+\n+    /**\n+     * Deletes the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String applicationGatewayName, Context context);\n+\n+    /**\n+     * Gets the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified application gateway.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayInner getByResourceGroup(String resourceGroupName, String applicationGatewayName);\n+\n+    /**\n+     * Gets the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified application gateway.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ApplicationGatewayInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String applicationGatewayName, Context context);\n+\n+    /**\n+     * Creates or updates the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param parameters Parameters supplied to the create or update application gateway operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return application gateway resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ApplicationGatewayInner>, ApplicationGatewayInner> beginCreateOrUpdate(\n+        String resourceGroupName, String applicationGatewayName, ApplicationGatewayInner parameters);\n+\n+    /**\n+     * Creates or updates the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param parameters Parameters supplied to the create or update application gateway operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return application gateway resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ApplicationGatewayInner>, ApplicationGatewayInner> beginCreateOrUpdate(\n+        String resourceGroupName, String applicationGatewayName, ApplicationGatewayInner parameters, Context context);\n+\n+    /**\n+     * Creates or updates the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param parameters Parameters supplied to the create or update application gateway operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return application gateway resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayInner createOrUpdate(\n+        String resourceGroupName, String applicationGatewayName, ApplicationGatewayInner parameters);\n+\n+    /**\n+     * Creates or updates the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param parameters Parameters supplied to the create or update application gateway operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return application gateway resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayInner createOrUpdate(\n+        String resourceGroupName, String applicationGatewayName, ApplicationGatewayInner parameters, Context context);\n+\n+    /**\n+     * Updates the specified application gateway tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param parameters Parameters supplied to update application gateway tags.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return application gateway resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayInner updateTags(String resourceGroupName, String applicationGatewayName, TagsObject parameters);\n+\n+    /**\n+     * Updates the specified application gateway tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param parameters Parameters supplied to update application gateway tags.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return application gateway resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ApplicationGatewayInner> updateTagsWithResponse(\n+        String resourceGroupName, String applicationGatewayName, TagsObject parameters, Context context);\n+\n+    /**\n+     * Lists all application gateways in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListApplicationGateways API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationGatewayInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Lists all application gateways in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListApplicationGateways API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationGatewayInner> listByResourceGroup(String resourceGroupName, Context context);\n+\n+    /**\n+     * Gets all the application gateways in a subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the application gateways in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationGatewayInner> list();\n+\n+    /**\n+     * Gets all the application gateways in a subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the application gateways in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationGatewayInner> list(Context context);\n+\n+    /**\n+     * Starts the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStart(String resourceGroupName, String applicationGatewayName);\n+\n+    /**\n+     * Starts the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStart(\n+        String resourceGroupName, String applicationGatewayName, Context context);\n+\n+    /**\n+     * Starts the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void start(String resourceGroupName, String applicationGatewayName);\n+\n+    /**\n+     * Starts the specified application gateway.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void start(String resourceGroupName, String applicationGatewayName, Context context);\n+\n+    /**\n+     * Stops the specified application gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStop(String resourceGroupName, String applicationGatewayName);\n+\n+    /**\n+     * Stops the specified application gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStop(\n+        String resourceGroupName, String applicationGatewayName, Context context);\n+\n+    /**\n+     * Stops the specified application gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void stop(String resourceGroupName, String applicationGatewayName);\n+\n+    /**\n+     * Stops the specified application gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void stop(String resourceGroupName, String applicationGatewayName, Context context);\n+\n+    /**\n+     * Gets the backend health of the specified application gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param expand Expands BackendAddressPool and BackendHttpSettings referenced in backend health.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the backend health of the specified application gateway in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ApplicationGatewayBackendHealthInner>, ApplicationGatewayBackendHealthInner>\n+        beginBackendHealth(String resourceGroupName, String applicationGatewayName, String expand);\n+\n+    /**\n+     * Gets the backend health of the specified application gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param expand Expands BackendAddressPool and BackendHttpSettings referenced in backend health.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the backend health of the specified application gateway in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ApplicationGatewayBackendHealthInner>, ApplicationGatewayBackendHealthInner>\n+        beginBackendHealth(String resourceGroupName, String applicationGatewayName, String expand, Context context);\n+\n+    /**\n+     * Gets the backend health of the specified application gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param expand Expands BackendAddressPool and BackendHttpSettings referenced in backend health.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the backend health of the specified application gateway in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayBackendHealthInner backendHealth(\n+        String resourceGroupName, String applicationGatewayName, String expand);\n+\n+    /**\n+     * Gets the backend health of the specified application gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the backend health of the specified application gateway in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayBackendHealthInner backendHealth(String resourceGroupName, String applicationGatewayName);\n+\n+    /**\n+     * Gets the backend health of the specified application gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param expand Expands BackendAddressPool and BackendHttpSettings referenced in backend health.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the backend health of the specified application gateway in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayBackendHealthInner backendHealth(\n+        String resourceGroupName, String applicationGatewayName, String expand, Context context);\n+\n+    /**\n+     * Gets the backend health for given combination of backend pool and http setting of the specified application\n+     * gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param probeRequest Request body for on-demand test probe operation.\n+     * @param expand Expands BackendAddressPool and BackendHttpSettings referenced in backend health.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the backend health for given combination of backend pool and http setting of the specified application\n+     *     gateway in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ApplicationGatewayBackendHealthOnDemandInner>, ApplicationGatewayBackendHealthOnDemandInner>\n+        beginBackendHealthOnDemand(\n+            String resourceGroupName,\n+            String applicationGatewayName,\n+            ApplicationGatewayOnDemandProbe probeRequest,\n+            String expand);\n+\n+    /**\n+     * Gets the backend health for given combination of backend pool and http setting of the specified application\n+     * gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param probeRequest Request body for on-demand test probe operation.\n+     * @param expand Expands BackendAddressPool and BackendHttpSettings referenced in backend health.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the backend health for given combination of backend pool and http setting of the specified application\n+     *     gateway in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ApplicationGatewayBackendHealthOnDemandInner>, ApplicationGatewayBackendHealthOnDemandInner>\n+        beginBackendHealthOnDemand(\n+            String resourceGroupName,\n+            String applicationGatewayName,\n+            ApplicationGatewayOnDemandProbe probeRequest,\n+            String expand,\n+            Context context);\n+\n+    /**\n+     * Gets the backend health for given combination of backend pool and http setting of the specified application\n+     * gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param probeRequest Request body for on-demand test probe operation.\n+     * @param expand Expands BackendAddressPool and BackendHttpSettings referenced in backend health.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the backend health for given combination of backend pool and http setting of the specified application\n+     *     gateway in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayBackendHealthOnDemandInner backendHealthOnDemand(\n+        String resourceGroupName,\n+        String applicationGatewayName,\n+        ApplicationGatewayOnDemandProbe probeRequest,\n+        String expand);\n+\n+    /**\n+     * Gets the backend health for given combination of backend pool and http setting of the specified application\n+     * gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param probeRequest Request body for on-demand test probe operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the backend health for given combination of backend pool and http setting of the specified application\n+     *     gateway in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayBackendHealthOnDemandInner backendHealthOnDemand(\n+        String resourceGroupName, String applicationGatewayName, ApplicationGatewayOnDemandProbe probeRequest);\n+\n+    /**\n+     * Gets the backend health for given combination of backend pool and http setting of the specified application\n+     * gateway in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationGatewayName The name of the application gateway.\n+     * @param probeRequest Request body for on-demand test probe operation.\n+     * @param expand Expands BackendAddressPool and BackendHttpSettings referenced in backend health.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the backend health for given combination of backend pool and http setting of the specified application\n+     *     gateway in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayBackendHealthOnDemandInner backendHealthOnDemand(\n+        String resourceGroupName,\n+        String applicationGatewayName,\n+        ApplicationGatewayOnDemandProbe probeRequest,\n+        String expand,\n+        Context context);\n+\n+    /**\n+     * Lists all available server variables.\n+     *\n+     * @throws com.azure.resourcemanager.network.generated.models.ErrorException thrown if the request is rejected by\n+     *     server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableServerVariables API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    List<String> listAvailableServerVariables();\n+\n+    /**\n+     * Lists all available server variables.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.resourcemanager.network.generated.models.ErrorException thrown if the request is rejected by\n+     *     server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableServerVariables API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<List<String>> listAvailableServerVariablesWithResponse(Context context);\n+\n+    /**\n+     * Lists all available request headers.\n+     *\n+     * @throws com.azure.resourcemanager.network.generated.models.ErrorException thrown if the request is rejected by\n+     *     server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableRequestHeaders API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    List<String> listAvailableRequestHeaders();\n+\n+    /**\n+     * Lists all available request headers.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.resourcemanager.network.generated.models.ErrorException thrown if the request is rejected by\n+     *     server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableRequestHeaders API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<List<String>> listAvailableRequestHeadersWithResponse(Context context);\n+\n+    /**\n+     * Lists all available response headers.\n+     *\n+     * @throws com.azure.resourcemanager.network.generated.models.ErrorException thrown if the request is rejected by\n+     *     server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableResponseHeaders API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    List<String> listAvailableResponseHeaders();\n+\n+    /**\n+     * Lists all available response headers.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.resourcemanager.network.generated.models.ErrorException thrown if the request is rejected by\n+     *     server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableResponseHeaders API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<List<String>> listAvailableResponseHeadersWithResponse(Context context);\n+\n+    /**\n+     * Lists all available web application firewall rule sets.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableWafRuleSets API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayAvailableWafRuleSetsResultInner listAvailableWafRuleSets();\n+\n+    /**\n+     * Lists all available web application firewall rule sets.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableWafRuleSets API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ApplicationGatewayAvailableWafRuleSetsResultInner> listAvailableWafRuleSetsWithResponse(Context context);\n+\n+    /**\n+     * Lists available Ssl options for configuring Ssl policy.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableSslOptions API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewayAvailableSslOptionsInner listAvailableSslOptions();\n+\n+    /**\n+     * Lists available Ssl options for configuring Ssl policy.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableSslOptions API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ApplicationGatewayAvailableSslOptionsInner> listAvailableSslOptionsWithResponse(Context context);\n+\n+    /**\n+     * Lists all SSL predefined policies for configuring Ssl policy.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableSslOptions API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationGatewaySslPredefinedPolicyInner> listAvailableSslPredefinedPolicies();\n+\n+    /**\n+     * Lists all SSL predefined policies for configuring Ssl policy.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ApplicationGatewayAvailableSslOptions API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationGatewaySslPredefinedPolicyInner> listAvailableSslPredefinedPolicies(Context context);\n+\n+    /**\n+     * Gets Ssl predefined policy with the specified policy name.\n+     *\n+     * @param predefinedPolicyName Name of Ssl predefined policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return ssl predefined policy with the specified policy name.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationGatewaySslPredefinedPolicyInner getSslPredefinedPolicy(String predefinedPolicyName);\n+\n+    /**\n+     * Gets Ssl predefined policy with the specified policy name.\n+     *\n+     * @param predefinedPolicyName Name of Ssl predefined policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return ssl predefined policy with the specified policy name.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ApplicationGatewaySslPredefinedPolicyInner> getSslPredefinedPolicyWithResponse(\n+        String predefinedPolicyName, Context context);\n+}"
  },
  {
    "sha": "0363c3fa93f935829c1b93725d88fa8db2f7a9ba",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationSecurityGroupsClient.java",
    "status": "added",
    "additions": 245,
    "deletions": 0,
    "changes": 245,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationSecurityGroupsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationSecurityGroupsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ApplicationSecurityGroupsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,245 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.ApplicationSecurityGroupInner;\n+import com.azure.resourcemanager.network.generated.models.TagsObject;\n+\n+/** An instance of this class provides access to all the operations defined in ApplicationSecurityGroupsClient. */\n+public interface ApplicationSecurityGroupsClient {\n+    /**\n+     * Deletes the specified application security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String applicationSecurityGroupName);\n+\n+    /**\n+     * Deletes the specified application security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String applicationSecurityGroupName, Context context);\n+\n+    /**\n+     * Deletes the specified application security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String applicationSecurityGroupName);\n+\n+    /**\n+     * Deletes the specified application security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String applicationSecurityGroupName, Context context);\n+\n+    /**\n+     * Gets information about the specified application security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the specified application security group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationSecurityGroupInner getByResourceGroup(String resourceGroupName, String applicationSecurityGroupName);\n+\n+    /**\n+     * Gets information about the specified application security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the specified application security group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ApplicationSecurityGroupInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String applicationSecurityGroupName, Context context);\n+\n+    /**\n+     * Creates or updates an application security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @param parameters Parameters supplied to the create or update ApplicationSecurityGroup operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an application security group in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ApplicationSecurityGroupInner>, ApplicationSecurityGroupInner> beginCreateOrUpdate(\n+        String resourceGroupName, String applicationSecurityGroupName, ApplicationSecurityGroupInner parameters);\n+\n+    /**\n+     * Creates or updates an application security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @param parameters Parameters supplied to the create or update ApplicationSecurityGroup operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an application security group in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ApplicationSecurityGroupInner>, ApplicationSecurityGroupInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String applicationSecurityGroupName,\n+        ApplicationSecurityGroupInner parameters,\n+        Context context);\n+\n+    /**\n+     * Creates or updates an application security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @param parameters Parameters supplied to the create or update ApplicationSecurityGroup operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an application security group in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationSecurityGroupInner createOrUpdate(\n+        String resourceGroupName, String applicationSecurityGroupName, ApplicationSecurityGroupInner parameters);\n+\n+    /**\n+     * Creates or updates an application security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @param parameters Parameters supplied to the create or update ApplicationSecurityGroup operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an application security group in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationSecurityGroupInner createOrUpdate(\n+        String resourceGroupName,\n+        String applicationSecurityGroupName,\n+        ApplicationSecurityGroupInner parameters,\n+        Context context);\n+\n+    /**\n+     * Updates an application security group's tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @param parameters Parameters supplied to update application security group tags.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an application security group in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ApplicationSecurityGroupInner updateTags(\n+        String resourceGroupName, String applicationSecurityGroupName, TagsObject parameters);\n+\n+    /**\n+     * Updates an application security group's tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param applicationSecurityGroupName The name of the application security group.\n+     * @param parameters Parameters supplied to update application security group tags.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an application security group in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ApplicationSecurityGroupInner> updateTagsWithResponse(\n+        String resourceGroupName, String applicationSecurityGroupName, TagsObject parameters, Context context);\n+\n+    /**\n+     * Gets all application security groups in a subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all application security groups in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationSecurityGroupInner> list();\n+\n+    /**\n+     * Gets all application security groups in a subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all application security groups in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationSecurityGroupInner> list(Context context);\n+\n+    /**\n+     * Gets all the application security groups in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the application security groups in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationSecurityGroupInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Gets all the application security groups in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the application security groups in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ApplicationSecurityGroupInner> listByResourceGroup(String resourceGroupName, Context context);\n+}"
  },
  {
    "sha": "565708b31364b933d70e42782c36ca2ef3899dff",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableDelegationsClient.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableDelegationsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableDelegationsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableDelegationsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,39 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.network.generated.fluent.models.AvailableDelegationInner;\n+\n+/** An instance of this class provides access to all the operations defined in AvailableDelegationsClient. */\n+public interface AvailableDelegationsClient {\n+    /**\n+     * Gets all of the available subnet delegations for this subscription in this region.\n+     *\n+     * @param location The location of the subnet.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all of the available subnet delegations for this subscription in this region.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailableDelegationInner> list(String location);\n+\n+    /**\n+     * Gets all of the available subnet delegations for this subscription in this region.\n+     *\n+     * @param location The location of the subnet.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all of the available subnet delegations for this subscription in this region.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailableDelegationInner> list(String location, Context context);\n+}"
  },
  {
    "sha": "56d342f174f230029c09d3b4e728487c6f9d8ed1",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableEndpointServicesClient.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableEndpointServicesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableEndpointServicesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableEndpointServicesClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,39 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.network.generated.fluent.models.EndpointServiceResultInner;\n+\n+/** An instance of this class provides access to all the operations defined in AvailableEndpointServicesClient. */\n+public interface AvailableEndpointServicesClient {\n+    /**\n+     * List what values of endpoint services are available for use.\n+     *\n+     * @param location The location to check available endpoint services.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for the ListAvailableEndpointServices API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<EndpointServiceResultInner> list(String location);\n+\n+    /**\n+     * List what values of endpoint services are available for use.\n+     *\n+     * @param location The location to check available endpoint services.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for the ListAvailableEndpointServices API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<EndpointServiceResultInner> list(String location, Context context);\n+}"
  },
  {
    "sha": "7beb6351d958b25f5a98206223db5d25155ad921",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailablePrivateEndpointTypesClient.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailablePrivateEndpointTypesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailablePrivateEndpointTypesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailablePrivateEndpointTypesClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,67 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.network.generated.fluent.models.AvailablePrivateEndpointTypeInner;\n+\n+/** An instance of this class provides access to all the operations defined in AvailablePrivateEndpointTypesClient. */\n+public interface AvailablePrivateEndpointTypesClient {\n+    /**\n+     * Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.\n+     *\n+     * @param location The location of the domain name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an array of available PrivateEndpoint types.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailablePrivateEndpointTypeInner> list(String location);\n+\n+    /**\n+     * Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.\n+     *\n+     * @param location The location of the domain name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an array of available PrivateEndpoint types.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailablePrivateEndpointTypeInner> list(String location, Context context);\n+\n+    /**\n+     * Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.\n+     *\n+     * @param location The location of the domain name.\n+     * @param resourceGroupName The name of the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an array of available PrivateEndpoint types.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailablePrivateEndpointTypeInner> listByResourceGroup(String location, String resourceGroupName);\n+\n+    /**\n+     * Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.\n+     *\n+     * @param location The location of the domain name.\n+     * @param resourceGroupName The name of the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an array of available PrivateEndpoint types.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailablePrivateEndpointTypeInner> listByResourceGroup(\n+        String location, String resourceGroupName, Context context);\n+}"
  },
  {
    "sha": "e640f0c35fe35f5e301b14e36171937371eedf23",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableResourceGroupDelegationsClient.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableResourceGroupDelegationsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableResourceGroupDelegationsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableResourceGroupDelegationsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,43 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.network.generated.fluent.models.AvailableDelegationInner;\n+\n+/**\n+ * An instance of this class provides access to all the operations defined in AvailableResourceGroupDelegationsClient.\n+ */\n+public interface AvailableResourceGroupDelegationsClient {\n+    /**\n+     * Gets all of the available subnet delegations for this resource group in this region.\n+     *\n+     * @param location The location of the domain name.\n+     * @param resourceGroupName The name of the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all of the available subnet delegations for this resource group in this region.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailableDelegationInner> list(String location, String resourceGroupName);\n+\n+    /**\n+     * Gets all of the available subnet delegations for this resource group in this region.\n+     *\n+     * @param location The location of the domain name.\n+     * @param resourceGroupName The name of the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all of the available subnet delegations for this resource group in this region.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailableDelegationInner> list(String location, String resourceGroupName, Context context);\n+}"
  },
  {
    "sha": "ad66184f170291f4797ef9bdc7cb40cfe34adc80",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableServiceAliasesClient.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableServiceAliasesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableServiceAliasesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AvailableServiceAliasesClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,67 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.network.generated.fluent.models.AvailableServiceAliasInner;\n+\n+/** An instance of this class provides access to all the operations defined in AvailableServiceAliasesClient. */\n+public interface AvailableServiceAliasesClient {\n+    /**\n+     * Gets all available service aliases for this subscription in this region.\n+     *\n+     * @param location The location.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all available service aliases for this subscription in this region.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailableServiceAliasInner> list(String location);\n+\n+    /**\n+     * Gets all available service aliases for this subscription in this region.\n+     *\n+     * @param location The location.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all available service aliases for this subscription in this region.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailableServiceAliasInner> list(String location, Context context);\n+\n+    /**\n+     * Gets all available service aliases for this resource group in this region.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param location The location.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all available service aliases for this resource group in this region.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailableServiceAliasInner> listByResourceGroup(String resourceGroupName, String location);\n+\n+    /**\n+     * Gets all available service aliases for this resource group in this region.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param location The location.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all available service aliases for this resource group in this region.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AvailableServiceAliasInner> listByResourceGroup(\n+        String resourceGroupName, String location, Context context);\n+}"
  },
  {
    "sha": "bbae7e0405b3da4fddb0b958035c86ad082647db",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AzureFirewallFqdnTagsClient.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AzureFirewallFqdnTagsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AzureFirewallFqdnTagsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AzureFirewallFqdnTagsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,36 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.network.generated.fluent.models.AzureFirewallFqdnTagInner;\n+\n+/** An instance of this class provides access to all the operations defined in AzureFirewallFqdnTagsClient. */\n+public interface AzureFirewallFqdnTagsClient {\n+    /**\n+     * Gets all the Azure Firewall FQDN Tags in a subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the Azure Firewall FQDN Tags in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AzureFirewallFqdnTagInner> list();\n+\n+    /**\n+     * Gets all the Azure Firewall FQDN Tags in a subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the Azure Firewall FQDN Tags in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AzureFirewallFqdnTagInner> list(Context context);\n+}"
  },
  {
    "sha": "002a62674ed5a25eb8754ccc64867638f47d6538",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AzureFirewallsClient.java",
    "status": "added",
    "additions": 268,
    "deletions": 0,
    "changes": 268,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AzureFirewallsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AzureFirewallsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/AzureFirewallsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,268 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.AzureFirewallInner;\n+import com.azure.resourcemanager.network.generated.models.TagsObject;\n+\n+/** An instance of this class provides access to all the operations defined in AzureFirewallsClient. */\n+public interface AzureFirewallsClient {\n+    /**\n+     * Deletes the specified Azure Firewall.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String azureFirewallName);\n+\n+    /**\n+     * Deletes the specified Azure Firewall.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String azureFirewallName, Context context);\n+\n+    /**\n+     * Deletes the specified Azure Firewall.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String azureFirewallName);\n+\n+    /**\n+     * Deletes the specified Azure Firewall.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String azureFirewallName, Context context);\n+\n+    /**\n+     * Gets the specified Azure Firewall.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified Azure Firewall.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AzureFirewallInner getByResourceGroup(String resourceGroupName, String azureFirewallName);\n+\n+    /**\n+     * Gets the specified Azure Firewall.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified Azure Firewall.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<AzureFirewallInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String azureFirewallName, Context context);\n+\n+    /**\n+     * Creates or updates the specified Azure Firewall.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param parameters Parameters supplied to the create or update Azure Firewall operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return azure Firewall resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AzureFirewallInner>, AzureFirewallInner> beginCreateOrUpdate(\n+        String resourceGroupName, String azureFirewallName, AzureFirewallInner parameters);\n+\n+    /**\n+     * Creates or updates the specified Azure Firewall.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param parameters Parameters supplied to the create or update Azure Firewall operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return azure Firewall resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AzureFirewallInner>, AzureFirewallInner> beginCreateOrUpdate(\n+        String resourceGroupName, String azureFirewallName, AzureFirewallInner parameters, Context context);\n+\n+    /**\n+     * Creates or updates the specified Azure Firewall.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param parameters Parameters supplied to the create or update Azure Firewall operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return azure Firewall resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AzureFirewallInner createOrUpdate(\n+        String resourceGroupName, String azureFirewallName, AzureFirewallInner parameters);\n+\n+    /**\n+     * Creates or updates the specified Azure Firewall.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param parameters Parameters supplied to the create or update Azure Firewall operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return azure Firewall resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AzureFirewallInner createOrUpdate(\n+        String resourceGroupName, String azureFirewallName, AzureFirewallInner parameters, Context context);\n+\n+    /**\n+     * Updates tags of an Azure Firewall resource.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param parameters Parameters supplied to update azure firewall tags.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return azure Firewall resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AzureFirewallInner>, AzureFirewallInner> beginUpdateTags(\n+        String resourceGroupName, String azureFirewallName, TagsObject parameters);\n+\n+    /**\n+     * Updates tags of an Azure Firewall resource.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param parameters Parameters supplied to update azure firewall tags.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return azure Firewall resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<AzureFirewallInner>, AzureFirewallInner> beginUpdateTags(\n+        String resourceGroupName, String azureFirewallName, TagsObject parameters, Context context);\n+\n+    /**\n+     * Updates tags of an Azure Firewall resource.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param parameters Parameters supplied to update azure firewall tags.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return azure Firewall resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AzureFirewallInner updateTags(String resourceGroupName, String azureFirewallName, TagsObject parameters);\n+\n+    /**\n+     * Updates tags of an Azure Firewall resource.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param azureFirewallName The name of the Azure Firewall.\n+     * @param parameters Parameters supplied to update azure firewall tags.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return azure Firewall resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    AzureFirewallInner updateTags(\n+        String resourceGroupName, String azureFirewallName, TagsObject parameters, Context context);\n+\n+    /**\n+     * Lists all Azure Firewalls in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListAzureFirewalls API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AzureFirewallInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Lists all Azure Firewalls in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListAzureFirewalls API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AzureFirewallInner> listByResourceGroup(String resourceGroupName, Context context);\n+\n+    /**\n+     * Gets all the Azure Firewalls in a subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the Azure Firewalls in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AzureFirewallInner> list();\n+\n+    /**\n+     * Gets all the Azure Firewalls in a subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the Azure Firewalls in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<AzureFirewallInner> list(Context context);\n+}"
  },
  {
    "sha": "1dbc410169fa145bd132f19161d05e81d36097c1",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/BastionHostsClient.java",
    "status": "added",
    "additions": 205,
    "deletions": 0,
    "changes": 205,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/BastionHostsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/BastionHostsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/BastionHostsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,205 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.BastionHostInner;\n+\n+/** An instance of this class provides access to all the operations defined in BastionHostsClient. */\n+public interface BastionHostsClient {\n+    /**\n+     * Deletes the specified Bastion Host.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param bastionHostname The name of the Bastion Host.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String bastionHostname);\n+\n+    /**\n+     * Deletes the specified Bastion Host.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param bastionHostname The name of the Bastion Host.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String bastionHostname, Context context);\n+\n+    /**\n+     * Deletes the specified Bastion Host.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param bastionHostname The name of the Bastion Host.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String bastionHostname);\n+\n+    /**\n+     * Deletes the specified Bastion Host.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param bastionHostname The name of the Bastion Host.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String bastionHostname, Context context);\n+\n+    /**\n+     * Gets the specified Bastion Host.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param bastionHostname The name of the Bastion Host.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified Bastion Host.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    BastionHostInner getByResourceGroup(String resourceGroupName, String bastionHostname);\n+\n+    /**\n+     * Gets the specified Bastion Host.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param bastionHostname The name of the Bastion Host.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified Bastion Host.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<BastionHostInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String bastionHostname, Context context);\n+\n+    /**\n+     * Creates or updates the specified Bastion Host.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param bastionHostname The name of the Bastion Host.\n+     * @param parameters Parameters supplied to the create or update Bastion Host operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return bastion Host resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<BastionHostInner>, BastionHostInner> beginCreateOrUpdate(\n+        String resourceGroupName, String bastionHostname, BastionHostInner parameters);\n+\n+    /**\n+     * Creates or updates the specified Bastion Host.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param bastionHostname The name of the Bastion Host.\n+     * @param parameters Parameters supplied to the create or update Bastion Host operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return bastion Host resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<BastionHostInner>, BastionHostInner> beginCreateOrUpdate(\n+        String resourceGroupName, String bastionHostname, BastionHostInner parameters, Context context);\n+\n+    /**\n+     * Creates or updates the specified Bastion Host.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param bastionHostname The name of the Bastion Host.\n+     * @param parameters Parameters supplied to the create or update Bastion Host operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return bastion Host resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    BastionHostInner createOrUpdate(String resourceGroupName, String bastionHostname, BastionHostInner parameters);\n+\n+    /**\n+     * Creates or updates the specified Bastion Host.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param bastionHostname The name of the Bastion Host.\n+     * @param parameters Parameters supplied to the create or update Bastion Host operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return bastion Host resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    BastionHostInner createOrUpdate(\n+        String resourceGroupName, String bastionHostname, BastionHostInner parameters, Context context);\n+\n+    /**\n+     * Lists all Bastion Hosts in a subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListBastionHosts API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BastionHostInner> list();\n+\n+    /**\n+     * Lists all Bastion Hosts in a subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListBastionHosts API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BastionHostInner> list(Context context);\n+\n+    /**\n+     * Lists all Bastion Hosts in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListBastionHosts API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BastionHostInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Lists all Bastion Hosts in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return response for ListBastionHosts API service call.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BastionHostInner> listByResourceGroup(String resourceGroupName, Context context);\n+}"
  },
  {
    "sha": "e657a0cb7cc259ce432c7bd27f62a0450a76d449",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/BgpServiceCommunitiesClient.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/BgpServiceCommunitiesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/BgpServiceCommunitiesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/BgpServiceCommunitiesClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,36 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.network.generated.fluent.models.BgpServiceCommunityInner;\n+\n+/** An instance of this class provides access to all the operations defined in BgpServiceCommunitiesClient. */\n+public interface BgpServiceCommunitiesClient {\n+    /**\n+     * Gets all the available bgp service communities.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the available bgp service communities.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BgpServiceCommunityInner> list();\n+\n+    /**\n+     * Gets all the available bgp service communities.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the available bgp service communities.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BgpServiceCommunityInner> list(Context context);\n+}"
  },
  {
    "sha": "3332111eab23378af97b11d9bce00603ad61e832",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ConnectionMonitorsClient.java",
    "status": "added",
    "additions": 458,
    "deletions": 0,
    "changes": 458,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ConnectionMonitorsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ConnectionMonitorsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ConnectionMonitorsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,458 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.ConnectionMonitorQueryResultInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ConnectionMonitorResultInner;\n+import com.azure.resourcemanager.network.generated.models.ConnectionMonitor;\n+import com.azure.resourcemanager.network.generated.models.TagsObject;\n+\n+/** An instance of this class provides access to all the operations defined in ConnectionMonitorsClient. */\n+public interface ConnectionMonitorsClient {\n+    /**\n+     * Create or update a connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param parameters Parameters that define the operation to create a connection monitor.\n+     * @param migrate Value indicating whether connection monitor V1 should be migrated to V2 format.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the connection monitor.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ConnectionMonitorResultInner>, ConnectionMonitorResultInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String networkWatcherName,\n+        String connectionMonitorName,\n+        ConnectionMonitor parameters,\n+        String migrate);\n+\n+    /**\n+     * Create or update a connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param parameters Parameters that define the operation to create a connection monitor.\n+     * @param migrate Value indicating whether connection monitor V1 should be migrated to V2 format.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the connection monitor.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ConnectionMonitorResultInner>, ConnectionMonitorResultInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String networkWatcherName,\n+        String connectionMonitorName,\n+        ConnectionMonitor parameters,\n+        String migrate,\n+        Context context);\n+\n+    /**\n+     * Create or update a connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param parameters Parameters that define the operation to create a connection monitor.\n+     * @param migrate Value indicating whether connection monitor V1 should be migrated to V2 format.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the connection monitor.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ConnectionMonitorResultInner createOrUpdate(\n+        String resourceGroupName,\n+        String networkWatcherName,\n+        String connectionMonitorName,\n+        ConnectionMonitor parameters,\n+        String migrate);\n+\n+    /**\n+     * Create or update a connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param parameters Parameters that define the operation to create a connection monitor.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the connection monitor.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ConnectionMonitorResultInner createOrUpdate(\n+        String resourceGroupName,\n+        String networkWatcherName,\n+        String connectionMonitorName,\n+        ConnectionMonitor parameters);\n+\n+    /**\n+     * Create or update a connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param parameters Parameters that define the operation to create a connection monitor.\n+     * @param migrate Value indicating whether connection monitor V1 should be migrated to V2 format.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the connection monitor.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ConnectionMonitorResultInner createOrUpdate(\n+        String resourceGroupName,\n+        String networkWatcherName,\n+        String connectionMonitorName,\n+        ConnectionMonitor parameters,\n+        String migrate,\n+        Context context);\n+\n+    /**\n+     * Gets a connection monitor by name.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a connection monitor by name.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ConnectionMonitorResultInner get(String resourceGroupName, String networkWatcherName, String connectionMonitorName);\n+\n+    /**\n+     * Gets a connection monitor by name.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a connection monitor by name.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ConnectionMonitorResultInner> getWithResponse(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName, Context context);\n+\n+    /**\n+     * Deletes the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName);\n+\n+    /**\n+     * Deletes the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName, Context context);\n+\n+    /**\n+     * Deletes the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String networkWatcherName, String connectionMonitorName);\n+\n+    /**\n+     * Deletes the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String networkWatcherName, String connectionMonitorName, Context context);\n+\n+    /**\n+     * Update tags of the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param networkWatcherName The name of the network watcher.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param parameters Parameters supplied to update connection monitor tags.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the connection monitor.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ConnectionMonitorResultInner updateTags(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName, TagsObject parameters);\n+\n+    /**\n+     * Update tags of the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param networkWatcherName The name of the network watcher.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param parameters Parameters supplied to update connection monitor tags.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the connection monitor.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ConnectionMonitorResultInner> updateTagsWithResponse(\n+        String resourceGroupName,\n+        String networkWatcherName,\n+        String connectionMonitorName,\n+        TagsObject parameters,\n+        Context context);\n+\n+    /**\n+     * Stops the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStop(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName);\n+\n+    /**\n+     * Stops the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStop(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName, Context context);\n+\n+    /**\n+     * Stops the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void stop(String resourceGroupName, String networkWatcherName, String connectionMonitorName);\n+\n+    /**\n+     * Stops the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void stop(String resourceGroupName, String networkWatcherName, String connectionMonitorName, Context context);\n+\n+    /**\n+     * Starts the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStart(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName);\n+\n+    /**\n+     * Starts the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStart(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName, Context context);\n+\n+    /**\n+     * Starts the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void start(String resourceGroupName, String networkWatcherName, String connectionMonitorName);\n+\n+    /**\n+     * Starts the specified connection monitor.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name of the connection monitor.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void start(String resourceGroupName, String networkWatcherName, String connectionMonitorName, Context context);\n+\n+    /**\n+     * Query a snapshot of the most recent connection states.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name given to the connection monitor.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of connection states snapshots.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ConnectionMonitorQueryResultInner>, ConnectionMonitorQueryResultInner> beginQuery(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName);\n+\n+    /**\n+     * Query a snapshot of the most recent connection states.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name given to the connection monitor.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of connection states snapshots.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ConnectionMonitorQueryResultInner>, ConnectionMonitorQueryResultInner> beginQuery(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName, Context context);\n+\n+    /**\n+     * Query a snapshot of the most recent connection states.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name given to the connection monitor.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of connection states snapshots.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ConnectionMonitorQueryResultInner query(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName);\n+\n+    /**\n+     * Query a snapshot of the most recent connection states.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param connectionMonitorName The name given to the connection monitor.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of connection states snapshots.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ConnectionMonitorQueryResultInner query(\n+        String resourceGroupName, String networkWatcherName, String connectionMonitorName, Context context);\n+\n+    /**\n+     * Lists all connection monitors for the specified Network Watcher.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of connection monitors.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ConnectionMonitorResultInner> list(String resourceGroupName, String networkWatcherName);\n+\n+    /**\n+     * Lists all connection monitors for the specified Network Watcher.\n+     *\n+     * @param resourceGroupName The name of the resource group containing Network Watcher.\n+     * @param networkWatcherName The name of the Network Watcher resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of connection monitors.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ConnectionMonitorResultInner> list(\n+        String resourceGroupName, String networkWatcherName, Context context);\n+}"
  },
  {
    "sha": "5e6707fc65de11b766b53839f3c6e89173b0a038",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/CustomIpPrefixesClient.java",
    "status": "added",
    "additions": 239,
    "deletions": 0,
    "changes": 239,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/CustomIpPrefixesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/CustomIpPrefixesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/CustomIpPrefixesClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,239 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.CustomIpPrefixInner;\n+import com.azure.resourcemanager.network.generated.models.TagsObject;\n+\n+/** An instance of this class provides access to all the operations defined in CustomIpPrefixesClient. */\n+public interface CustomIpPrefixesClient {\n+    /**\n+     * Deletes the specified custom IP prefix.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the CustomIpPrefix.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String customIpPrefixName);\n+\n+    /**\n+     * Deletes the specified custom IP prefix.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the CustomIpPrefix.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String customIpPrefixName, Context context);\n+\n+    /**\n+     * Deletes the specified custom IP prefix.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the CustomIpPrefix.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String customIpPrefixName);\n+\n+    /**\n+     * Deletes the specified custom IP prefix.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the CustomIpPrefix.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String customIpPrefixName, Context context);\n+\n+    /**\n+     * Gets the specified custom IP prefix in a specified resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the custom IP prefix.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified custom IP prefix in a specified resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomIpPrefixInner getByResourceGroup(String resourceGroupName, String customIpPrefixName);\n+\n+    /**\n+     * Gets the specified custom IP prefix in a specified resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the custom IP prefix.\n+     * @param expand Expands referenced resources.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified custom IP prefix in a specified resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<CustomIpPrefixInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String customIpPrefixName, String expand, Context context);\n+\n+    /**\n+     * Creates or updates a custom IP prefix.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the custom IP prefix.\n+     * @param parameters Parameters supplied to the create or update custom IP prefix operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return custom IP prefix resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<CustomIpPrefixInner>, CustomIpPrefixInner> beginCreateOrUpdate(\n+        String resourceGroupName, String customIpPrefixName, CustomIpPrefixInner parameters);\n+\n+    /**\n+     * Creates or updates a custom IP prefix.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the custom IP prefix.\n+     * @param parameters Parameters supplied to the create or update custom IP prefix operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return custom IP prefix resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<CustomIpPrefixInner>, CustomIpPrefixInner> beginCreateOrUpdate(\n+        String resourceGroupName, String customIpPrefixName, CustomIpPrefixInner parameters, Context context);\n+\n+    /**\n+     * Creates or updates a custom IP prefix.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the custom IP prefix.\n+     * @param parameters Parameters supplied to the create or update custom IP prefix operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return custom IP prefix resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomIpPrefixInner createOrUpdate(\n+        String resourceGroupName, String customIpPrefixName, CustomIpPrefixInner parameters);\n+\n+    /**\n+     * Creates or updates a custom IP prefix.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the custom IP prefix.\n+     * @param parameters Parameters supplied to the create or update custom IP prefix operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return custom IP prefix resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomIpPrefixInner createOrUpdate(\n+        String resourceGroupName, String customIpPrefixName, CustomIpPrefixInner parameters, Context context);\n+\n+    /**\n+     * Updates custom IP prefix tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the custom IP prefix.\n+     * @param parameters Parameters supplied to update custom IP prefix tags.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return custom IP prefix resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CustomIpPrefixInner updateTags(String resourceGroupName, String customIpPrefixName, TagsObject parameters);\n+\n+    /**\n+     * Updates custom IP prefix tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param customIpPrefixName The name of the custom IP prefix.\n+     * @param parameters Parameters supplied to update custom IP prefix tags.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return custom IP prefix resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<CustomIpPrefixInner> updateTagsWithResponse(\n+        String resourceGroupName, String customIpPrefixName, TagsObject parameters, Context context);\n+\n+    /**\n+     * Gets all the custom IP prefixes in a subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the custom IP prefixes in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<CustomIpPrefixInner> list();\n+\n+    /**\n+     * Gets all the custom IP prefixes in a subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the custom IP prefixes in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<CustomIpPrefixInner> list(Context context);\n+\n+    /**\n+     * Gets all custom IP prefixes in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all custom IP prefixes in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<CustomIpPrefixInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Gets all custom IP prefixes in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all custom IP prefixes in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<CustomIpPrefixInner> listByResourceGroup(String resourceGroupName, Context context);\n+}"
  },
  {
    "sha": "88fecb0612fc7922e9bed447d1e5f8120780c462",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DdosCustomPoliciesClient.java",
    "status": "added",
    "additions": 190,
    "deletions": 0,
    "changes": 190,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DdosCustomPoliciesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DdosCustomPoliciesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DdosCustomPoliciesClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,190 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.DdosCustomPolicyInner;\n+import com.azure.resourcemanager.network.generated.models.TagsObject;\n+\n+/** An instance of this class provides access to all the operations defined in DdosCustomPoliciesClient. */\n+public interface DdosCustomPoliciesClient {\n+    /**\n+     * Deletes the specified DDoS custom policy.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String ddosCustomPolicyName);\n+\n+    /**\n+     * Deletes the specified DDoS custom policy.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String ddosCustomPolicyName, Context context);\n+\n+    /**\n+     * Deletes the specified DDoS custom policy.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String ddosCustomPolicyName);\n+\n+    /**\n+     * Deletes the specified DDoS custom policy.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String ddosCustomPolicyName, Context context);\n+\n+    /**\n+     * Gets information about the specified DDoS custom policy.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the specified DDoS custom policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DdosCustomPolicyInner getByResourceGroup(String resourceGroupName, String ddosCustomPolicyName);\n+\n+    /**\n+     * Gets information about the specified DDoS custom policy.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the specified DDoS custom policy.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DdosCustomPolicyInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String ddosCustomPolicyName, Context context);\n+\n+    /**\n+     * Creates or updates a DDoS custom policy.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @param parameters Parameters supplied to the create or update operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS custom policy in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DdosCustomPolicyInner>, DdosCustomPolicyInner> beginCreateOrUpdate(\n+        String resourceGroupName, String ddosCustomPolicyName, DdosCustomPolicyInner parameters);\n+\n+    /**\n+     * Creates or updates a DDoS custom policy.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @param parameters Parameters supplied to the create or update operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS custom policy in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DdosCustomPolicyInner>, DdosCustomPolicyInner> beginCreateOrUpdate(\n+        String resourceGroupName, String ddosCustomPolicyName, DdosCustomPolicyInner parameters, Context context);\n+\n+    /**\n+     * Creates or updates a DDoS custom policy.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @param parameters Parameters supplied to the create or update operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS custom policy in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DdosCustomPolicyInner createOrUpdate(\n+        String resourceGroupName, String ddosCustomPolicyName, DdosCustomPolicyInner parameters);\n+\n+    /**\n+     * Creates or updates a DDoS custom policy.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @param parameters Parameters supplied to the create or update operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS custom policy in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DdosCustomPolicyInner createOrUpdate(\n+        String resourceGroupName, String ddosCustomPolicyName, DdosCustomPolicyInner parameters, Context context);\n+\n+    /**\n+     * Update a DDoS custom policy tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @param parameters Parameters supplied to update DDoS custom policy resource tags.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS custom policy in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DdosCustomPolicyInner updateTags(String resourceGroupName, String ddosCustomPolicyName, TagsObject parameters);\n+\n+    /**\n+     * Update a DDoS custom policy tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosCustomPolicyName The name of the DDoS custom policy.\n+     * @param parameters Parameters supplied to update DDoS custom policy resource tags.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS custom policy in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DdosCustomPolicyInner> updateTagsWithResponse(\n+        String resourceGroupName, String ddosCustomPolicyName, TagsObject parameters, Context context);\n+}"
  },
  {
    "sha": "e3518530ac0c0b156a26651dc9ccee75ae561ec4",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DdosProtectionPlansClient.java",
    "status": "added",
    "additions": 238,
    "deletions": 0,
    "changes": 238,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DdosProtectionPlansClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DdosProtectionPlansClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DdosProtectionPlansClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,238 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.DdosProtectionPlanInner;\n+import com.azure.resourcemanager.network.generated.models.TagsObject;\n+\n+/** An instance of this class provides access to all the operations defined in DdosProtectionPlansClient. */\n+public interface DdosProtectionPlansClient {\n+    /**\n+     * Deletes the specified DDoS protection plan.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String ddosProtectionPlanName);\n+\n+    /**\n+     * Deletes the specified DDoS protection plan.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String ddosProtectionPlanName, Context context);\n+\n+    /**\n+     * Deletes the specified DDoS protection plan.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String ddosProtectionPlanName);\n+\n+    /**\n+     * Deletes the specified DDoS protection plan.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String ddosProtectionPlanName, Context context);\n+\n+    /**\n+     * Gets information about the specified DDoS protection plan.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the specified DDoS protection plan.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DdosProtectionPlanInner getByResourceGroup(String resourceGroupName, String ddosProtectionPlanName);\n+\n+    /**\n+     * Gets information about the specified DDoS protection plan.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the specified DDoS protection plan.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DdosProtectionPlanInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String ddosProtectionPlanName, Context context);\n+\n+    /**\n+     * Creates or updates a DDoS protection plan.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @param parameters Parameters supplied to the create or update operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS protection plan in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DdosProtectionPlanInner>, DdosProtectionPlanInner> beginCreateOrUpdate(\n+        String resourceGroupName, String ddosProtectionPlanName, DdosProtectionPlanInner parameters);\n+\n+    /**\n+     * Creates or updates a DDoS protection plan.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @param parameters Parameters supplied to the create or update operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS protection plan in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DdosProtectionPlanInner>, DdosProtectionPlanInner> beginCreateOrUpdate(\n+        String resourceGroupName, String ddosProtectionPlanName, DdosProtectionPlanInner parameters, Context context);\n+\n+    /**\n+     * Creates or updates a DDoS protection plan.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @param parameters Parameters supplied to the create or update operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS protection plan in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DdosProtectionPlanInner createOrUpdate(\n+        String resourceGroupName, String ddosProtectionPlanName, DdosProtectionPlanInner parameters);\n+\n+    /**\n+     * Creates or updates a DDoS protection plan.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @param parameters Parameters supplied to the create or update operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS protection plan in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DdosProtectionPlanInner createOrUpdate(\n+        String resourceGroupName, String ddosProtectionPlanName, DdosProtectionPlanInner parameters, Context context);\n+\n+    /**\n+     * Update a DDoS protection plan tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @param parameters Parameters supplied to the update DDoS protection plan resource tags.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS protection plan in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DdosProtectionPlanInner updateTags(String resourceGroupName, String ddosProtectionPlanName, TagsObject parameters);\n+\n+    /**\n+     * Update a DDoS protection plan tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param ddosProtectionPlanName The name of the DDoS protection plan.\n+     * @param parameters Parameters supplied to the update DDoS protection plan resource tags.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DDoS protection plan in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DdosProtectionPlanInner> updateTagsWithResponse(\n+        String resourceGroupName, String ddosProtectionPlanName, TagsObject parameters, Context context);\n+\n+    /**\n+     * Gets all DDoS protection plans in a subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all DDoS protection plans in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DdosProtectionPlanInner> list();\n+\n+    /**\n+     * Gets all DDoS protection plans in a subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all DDoS protection plans in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DdosProtectionPlanInner> list(Context context);\n+\n+    /**\n+     * Gets all the DDoS protection plans in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the DDoS protection plans in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DdosProtectionPlanInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Gets all the DDoS protection plans in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the DDoS protection plans in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DdosProtectionPlanInner> listByResourceGroup(String resourceGroupName, Context context);\n+}"
  },
  {
    "sha": "9cbf236516b72df156d7c6e2f4477c97a6fe7e3e",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DefaultSecurityRulesClient.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DefaultSecurityRulesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DefaultSecurityRulesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DefaultSecurityRulesClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,72 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.network.generated.fluent.models.SecurityRuleInner;\n+\n+/** An instance of this class provides access to all the operations defined in DefaultSecurityRulesClient. */\n+public interface DefaultSecurityRulesClient {\n+    /**\n+     * Gets all default security rules in a network security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param networkSecurityGroupName The name of the network security group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all default security rules in a network security group.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<SecurityRuleInner> list(String resourceGroupName, String networkSecurityGroupName);\n+\n+    /**\n+     * Gets all default security rules in a network security group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param networkSecurityGroupName The name of the network security group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all default security rules in a network security group.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<SecurityRuleInner> list(String resourceGroupName, String networkSecurityGroupName, Context context);\n+\n+    /**\n+     * Get the specified default network security rule.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param networkSecurityGroupName The name of the network security group.\n+     * @param defaultSecurityRuleName The name of the default security rule.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified default network security rule.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SecurityRuleInner get(String resourceGroupName, String networkSecurityGroupName, String defaultSecurityRuleName);\n+\n+    /**\n+     * Get the specified default network security rule.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param networkSecurityGroupName The name of the network security group.\n+     * @param defaultSecurityRuleName The name of the default security rule.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified default network security rule.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<SecurityRuleInner> getWithResponse(\n+        String resourceGroupName, String networkSecurityGroupName, String defaultSecurityRuleName, Context context);\n+}"
  },
  {
    "sha": "862f8a2aad08aaebf8cc220f5fc16bd7dba1ab1a",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DscpConfigurationsClient.java",
    "status": "added",
    "additions": 207,
    "deletions": 0,
    "changes": 207,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DscpConfigurationsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DscpConfigurationsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/DscpConfigurationsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,207 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.DscpConfigurationInner;\n+\n+/** An instance of this class provides access to all the operations defined in DscpConfigurationsClient. */\n+public interface DscpConfigurationsClient {\n+    /**\n+     * Creates or updates a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param dscpConfigurationName The name of the resource.\n+     * @param parameters Parameters supplied to the create or update dscp configuration operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return dSCP Configuration in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DscpConfigurationInner>, DscpConfigurationInner> beginCreateOrUpdate(\n+        String resourceGroupName, String dscpConfigurationName, DscpConfigurationInner parameters);\n+\n+    /**\n+     * Creates or updates a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param dscpConfigurationName The name of the resource.\n+     * @param parameters Parameters supplied to the create or update dscp configuration operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return dSCP Configuration in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DscpConfigurationInner>, DscpConfigurationInner> beginCreateOrUpdate(\n+        String resourceGroupName, String dscpConfigurationName, DscpConfigurationInner parameters, Context context);\n+\n+    /**\n+     * Creates or updates a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param dscpConfigurationName The name of the resource.\n+     * @param parameters Parameters supplied to the create or update dscp configuration operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return dSCP Configuration in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DscpConfigurationInner createOrUpdate(\n+        String resourceGroupName, String dscpConfigurationName, DscpConfigurationInner parameters);\n+\n+    /**\n+     * Creates or updates a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param dscpConfigurationName The name of the resource.\n+     * @param parameters Parameters supplied to the create or update dscp configuration operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return dSCP Configuration in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DscpConfigurationInner createOrUpdate(\n+        String resourceGroupName, String dscpConfigurationName, DscpConfigurationInner parameters, Context context);\n+\n+    /**\n+     * Deletes a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param dscpConfigurationName The name of the resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String dscpConfigurationName);\n+\n+    /**\n+     * Deletes a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param dscpConfigurationName The name of the resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String dscpConfigurationName, Context context);\n+\n+    /**\n+     * Deletes a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param dscpConfigurationName The name of the resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String dscpConfigurationName);\n+\n+    /**\n+     * Deletes a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param dscpConfigurationName The name of the resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String dscpConfigurationName, Context context);\n+\n+    /**\n+     * Gets a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param dscpConfigurationName The name of the resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DSCP Configuration.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DscpConfigurationInner getByResourceGroup(String resourceGroupName, String dscpConfigurationName);\n+\n+    /**\n+     * Gets a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param dscpConfigurationName The name of the resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DSCP Configuration.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DscpConfigurationInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String dscpConfigurationName, Context context);\n+\n+    /**\n+     * Gets a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DSCP Configuration.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DscpConfigurationInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Gets a DSCP Configuration.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a DSCP Configuration.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DscpConfigurationInner> listByResourceGroup(String resourceGroupName, Context context);\n+\n+    /**\n+     * Gets all dscp configurations in a subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all dscp configurations in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DscpConfigurationInner> list();\n+\n+    /**\n+     * Gets all dscp configurations in a subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all dscp configurations in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DscpConfigurationInner> list(Context context);\n+}"
  },
  {
    "sha": "826d3f7dc60868b72f68e163d152f19a9eb0f64b",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitAuthorizationsClient.java",
    "status": "added",
    "additions": 221,
    "deletions": 0,
    "changes": 221,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitAuthorizationsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitAuthorizationsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitAuthorizationsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,221 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitAuthorizationInner;\n+\n+/**\n+ * An instance of this class provides access to all the operations defined in ExpressRouteCircuitAuthorizationsClient.\n+ */\n+public interface ExpressRouteCircuitAuthorizationsClient {\n+    /**\n+     * Deletes the specified authorization from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param authorizationName The name of the authorization.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String circuitName, String authorizationName);\n+\n+    /**\n+     * Deletes the specified authorization from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param authorizationName The name of the authorization.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String circuitName, String authorizationName, Context context);\n+\n+    /**\n+     * Deletes the specified authorization from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param authorizationName The name of the authorization.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String circuitName, String authorizationName);\n+\n+    /**\n+     * Deletes the specified authorization from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param authorizationName The name of the authorization.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String circuitName, String authorizationName, Context context);\n+\n+    /**\n+     * Gets the specified authorization from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param authorizationName The name of the authorization.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified authorization from the specified express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitAuthorizationInner get(String resourceGroupName, String circuitName, String authorizationName);\n+\n+    /**\n+     * Gets the specified authorization from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param authorizationName The name of the authorization.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified authorization from the specified express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExpressRouteCircuitAuthorizationInner> getWithResponse(\n+        String resourceGroupName, String circuitName, String authorizationName, Context context);\n+\n+    /**\n+     * Creates or updates an authorization in the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param authorizationName The name of the authorization.\n+     * @param authorizationParameters Parameters supplied to the create or update express route circuit authorization\n+     *     operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return authorization in an ExpressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteCircuitAuthorizationInner>, ExpressRouteCircuitAuthorizationInner>\n+        beginCreateOrUpdate(\n+            String resourceGroupName,\n+            String circuitName,\n+            String authorizationName,\n+            ExpressRouteCircuitAuthorizationInner authorizationParameters);\n+\n+    /**\n+     * Creates or updates an authorization in the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param authorizationName The name of the authorization.\n+     * @param authorizationParameters Parameters supplied to the create or update express route circuit authorization\n+     *     operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return authorization in an ExpressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteCircuitAuthorizationInner>, ExpressRouteCircuitAuthorizationInner>\n+        beginCreateOrUpdate(\n+            String resourceGroupName,\n+            String circuitName,\n+            String authorizationName,\n+            ExpressRouteCircuitAuthorizationInner authorizationParameters,\n+            Context context);\n+\n+    /**\n+     * Creates or updates an authorization in the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param authorizationName The name of the authorization.\n+     * @param authorizationParameters Parameters supplied to the create or update express route circuit authorization\n+     *     operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return authorization in an ExpressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitAuthorizationInner createOrUpdate(\n+        String resourceGroupName,\n+        String circuitName,\n+        String authorizationName,\n+        ExpressRouteCircuitAuthorizationInner authorizationParameters);\n+\n+    /**\n+     * Creates or updates an authorization in the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param authorizationName The name of the authorization.\n+     * @param authorizationParameters Parameters supplied to the create or update express route circuit authorization\n+     *     operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return authorization in an ExpressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitAuthorizationInner createOrUpdate(\n+        String resourceGroupName,\n+        String circuitName,\n+        String authorizationName,\n+        ExpressRouteCircuitAuthorizationInner authorizationParameters,\n+        Context context);\n+\n+    /**\n+     * Gets all authorizations in an express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the circuit.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all authorizations in an express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExpressRouteCircuitAuthorizationInner> list(String resourceGroupName, String circuitName);\n+\n+    /**\n+     * Gets all authorizations in an express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the circuit.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all authorizations in an express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExpressRouteCircuitAuthorizationInner> list(\n+        String resourceGroupName, String circuitName, Context context);\n+}"
  },
  {
    "sha": "9eda45ab443688f83d75843a2cdac0127245290f",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitConnectionsClient.java",
    "status": "added",
    "additions": 236,
    "deletions": 0,
    "changes": 236,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitConnectionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitConnectionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitConnectionsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,236 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitConnectionInner;\n+\n+/** An instance of this class provides access to all the operations defined in ExpressRouteCircuitConnectionsClient. */\n+public interface ExpressRouteCircuitConnectionsClient {\n+    /**\n+     * Deletes the specified Express Route Circuit Connection from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param connectionName The name of the express route circuit connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String circuitName, String peeringName, String connectionName);\n+\n+    /**\n+     * Deletes the specified Express Route Circuit Connection from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param connectionName The name of the express route circuit connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String circuitName, String peeringName, String connectionName, Context context);\n+\n+    /**\n+     * Deletes the specified Express Route Circuit Connection from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param connectionName The name of the express route circuit connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String circuitName, String peeringName, String connectionName);\n+\n+    /**\n+     * Deletes the specified Express Route Circuit Connection from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param connectionName The name of the express route circuit connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(\n+        String resourceGroupName, String circuitName, String peeringName, String connectionName, Context context);\n+\n+    /**\n+     * Gets the specified Express Route Circuit Connection from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param connectionName The name of the express route circuit connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified Express Route Circuit Connection from the specified express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitConnectionInner get(\n+        String resourceGroupName, String circuitName, String peeringName, String connectionName);\n+\n+    /**\n+     * Gets the specified Express Route Circuit Connection from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param connectionName The name of the express route circuit connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified Express Route Circuit Connection from the specified express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExpressRouteCircuitConnectionInner> getWithResponse(\n+        String resourceGroupName, String circuitName, String peeringName, String connectionName, Context context);\n+\n+    /**\n+     * Creates or updates a Express Route Circuit Connection in the specified express route circuits.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param connectionName The name of the express route circuit connection.\n+     * @param expressRouteCircuitConnectionParameters Parameters supplied to the create or update express route circuit\n+     *     connection operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return express Route Circuit Connection in an ExpressRouteCircuitPeering resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteCircuitConnectionInner>, ExpressRouteCircuitConnectionInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String circuitName,\n+        String peeringName,\n+        String connectionName,\n+        ExpressRouteCircuitConnectionInner expressRouteCircuitConnectionParameters);\n+\n+    /**\n+     * Creates or updates a Express Route Circuit Connection in the specified express route circuits.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param connectionName The name of the express route circuit connection.\n+     * @param expressRouteCircuitConnectionParameters Parameters supplied to the create or update express route circuit\n+     *     connection operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return express Route Circuit Connection in an ExpressRouteCircuitPeering resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteCircuitConnectionInner>, ExpressRouteCircuitConnectionInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String circuitName,\n+        String peeringName,\n+        String connectionName,\n+        ExpressRouteCircuitConnectionInner expressRouteCircuitConnectionParameters,\n+        Context context);\n+\n+    /**\n+     * Creates or updates a Express Route Circuit Connection in the specified express route circuits.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param connectionName The name of the express route circuit connection.\n+     * @param expressRouteCircuitConnectionParameters Parameters supplied to the create or update express route circuit\n+     *     connection operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return express Route Circuit Connection in an ExpressRouteCircuitPeering resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitConnectionInner createOrUpdate(\n+        String resourceGroupName,\n+        String circuitName,\n+        String peeringName,\n+        String connectionName,\n+        ExpressRouteCircuitConnectionInner expressRouteCircuitConnectionParameters);\n+\n+    /**\n+     * Creates or updates a Express Route Circuit Connection in the specified express route circuits.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param connectionName The name of the express route circuit connection.\n+     * @param expressRouteCircuitConnectionParameters Parameters supplied to the create or update express route circuit\n+     *     connection operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return express Route Circuit Connection in an ExpressRouteCircuitPeering resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitConnectionInner createOrUpdate(\n+        String resourceGroupName,\n+        String circuitName,\n+        String peeringName,\n+        String connectionName,\n+        ExpressRouteCircuitConnectionInner expressRouteCircuitConnectionParameters,\n+        Context context);\n+\n+    /**\n+     * Gets all global reach connections associated with a private peering in an express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the circuit.\n+     * @param peeringName The name of the peering.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all global reach connections associated with a private peering in an express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExpressRouteCircuitConnectionInner> list(\n+        String resourceGroupName, String circuitName, String peeringName);\n+\n+    /**\n+     * Gets all global reach connections associated with a private peering in an express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the circuit.\n+     * @param peeringName The name of the peering.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all global reach connections associated with a private peering in an express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExpressRouteCircuitConnectionInner> list(\n+        String resourceGroupName, String circuitName, String peeringName, Context context);\n+}"
  },
  {
    "sha": "0ba28cb7cdf48514587996d26a734b6bf36d77a5",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitPeeringsClient.java",
    "status": "added",
    "additions": 211,
    "deletions": 0,
    "changes": 211,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitPeeringsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitPeeringsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitPeeringsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,211 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitPeeringInner;\n+\n+/** An instance of this class provides access to all the operations defined in ExpressRouteCircuitPeeringsClient. */\n+public interface ExpressRouteCircuitPeeringsClient {\n+    /**\n+     * Deletes the specified peering from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String circuitName, String peeringName);\n+\n+    /**\n+     * Deletes the specified peering from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String circuitName, String peeringName, Context context);\n+\n+    /**\n+     * Deletes the specified peering from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String circuitName, String peeringName);\n+\n+    /**\n+     * Deletes the specified peering from the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String circuitName, String peeringName, Context context);\n+\n+    /**\n+     * Gets the specified peering for the express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified peering for the express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitPeeringInner get(String resourceGroupName, String circuitName, String peeringName);\n+\n+    /**\n+     * Gets the specified peering for the express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified peering for the express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExpressRouteCircuitPeeringInner> getWithResponse(\n+        String resourceGroupName, String circuitName, String peeringName, Context context);\n+\n+    /**\n+     * Creates or updates a peering in the specified express route circuits.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param peeringParameters Parameters supplied to the create or update express route circuit peering operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return peering in an ExpressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteCircuitPeeringInner>, ExpressRouteCircuitPeeringInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String circuitName,\n+        String peeringName,\n+        ExpressRouteCircuitPeeringInner peeringParameters);\n+\n+    /**\n+     * Creates or updates a peering in the specified express route circuits.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param peeringParameters Parameters supplied to the create or update express route circuit peering operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return peering in an ExpressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteCircuitPeeringInner>, ExpressRouteCircuitPeeringInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String circuitName,\n+        String peeringName,\n+        ExpressRouteCircuitPeeringInner peeringParameters,\n+        Context context);\n+\n+    /**\n+     * Creates or updates a peering in the specified express route circuits.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param peeringParameters Parameters supplied to the create or update express route circuit peering operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return peering in an ExpressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitPeeringInner createOrUpdate(\n+        String resourceGroupName,\n+        String circuitName,\n+        String peeringName,\n+        ExpressRouteCircuitPeeringInner peeringParameters);\n+\n+    /**\n+     * Creates or updates a peering in the specified express route circuits.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param peeringParameters Parameters supplied to the create or update express route circuit peering operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return peering in an ExpressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitPeeringInner createOrUpdate(\n+        String resourceGroupName,\n+        String circuitName,\n+        String peeringName,\n+        ExpressRouteCircuitPeeringInner peeringParameters,\n+        Context context);\n+\n+    /**\n+     * Gets all peerings in a specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all peerings in a specified express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExpressRouteCircuitPeeringInner> list(String resourceGroupName, String circuitName);\n+\n+    /**\n+     * Gets all peerings in a specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all peerings in a specified express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExpressRouteCircuitPeeringInner> list(String resourceGroupName, String circuitName, Context context);\n+}"
  },
  {
    "sha": "7cb37ba0c7fd1017a0dcaf5bc92c4cc8e5976882",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitsClient.java",
    "status": "added",
    "additions": 511,
    "deletions": 0,
    "changes": 511,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteCircuitsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,511 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitStatsInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitsArpTableListResultInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitsRoutesTableListResultInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteCircuitsRoutesTableSummaryListResultInner;\n+import com.azure.resourcemanager.network.generated.models.TagsObject;\n+\n+/** An instance of this class provides access to all the operations defined in ExpressRouteCircuitsClient. */\n+public interface ExpressRouteCircuitsClient {\n+    /**\n+     * Deletes the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String circuitName);\n+\n+    /**\n+     * Deletes the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String circuitName, Context context);\n+\n+    /**\n+     * Deletes the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String circuitName);\n+\n+    /**\n+     * Deletes the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String circuitName, Context context);\n+\n+    /**\n+     * Gets information about the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of express route circuit.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the specified express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitInner getByResourceGroup(String resourceGroupName, String circuitName);\n+\n+    /**\n+     * Gets information about the specified express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of express route circuit.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the specified express route circuit.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExpressRouteCircuitInner> getByResourceGroupWithResponse(\n+        String resourceGroupName, String circuitName, Context context);\n+\n+    /**\n+     * Creates or updates an express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the circuit.\n+     * @param parameters Parameters supplied to the create or update express route circuit operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteCircuitInner>, ExpressRouteCircuitInner> beginCreateOrUpdate(\n+        String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters);\n+\n+    /**\n+     * Creates or updates an express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the circuit.\n+     * @param parameters Parameters supplied to the create or update express route circuit operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteCircuitInner>, ExpressRouteCircuitInner> beginCreateOrUpdate(\n+        String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context);\n+\n+    /**\n+     * Creates or updates an express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the circuit.\n+     * @param parameters Parameters supplied to the create or update express route circuit operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitInner createOrUpdate(\n+        String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters);\n+\n+    /**\n+     * Creates or updates an express route circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the circuit.\n+     * @param parameters Parameters supplied to the create or update express route circuit operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitInner createOrUpdate(\n+        String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context);\n+\n+    /**\n+     * Updates an express route circuit tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the circuit.\n+     * @param parameters Parameters supplied to update express route circuit tags.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitInner updateTags(String resourceGroupName, String circuitName, TagsObject parameters);\n+\n+    /**\n+     * Updates an express route circuit tags.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the circuit.\n+     * @param parameters Parameters supplied to update express route circuit tags.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteCircuit resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExpressRouteCircuitInner> updateTagsWithResponse(\n+        String resourceGroupName, String circuitName, TagsObject parameters, Context context);\n+\n+    /**\n+     * Gets the currently advertised ARP table associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised ARP table associated with the express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteCircuitsArpTableListResultInner>, ExpressRouteCircuitsArpTableListResultInner>\n+        beginListArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath);\n+\n+    /**\n+     * Gets the currently advertised ARP table associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised ARP table associated with the express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteCircuitsArpTableListResultInner>, ExpressRouteCircuitsArpTableListResultInner>\n+        beginListArpTable(\n+            String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context);\n+\n+    /**\n+     * Gets the currently advertised ARP table associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised ARP table associated with the express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitsArpTableListResultInner listArpTable(\n+        String resourceGroupName, String circuitName, String peeringName, String devicePath);\n+\n+    /**\n+     * Gets the currently advertised ARP table associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised ARP table associated with the express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitsArpTableListResultInner listArpTable(\n+        String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context);\n+\n+    /**\n+     * Gets the currently advertised routes table associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised routes table associated with the express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<\n+            PollResult<ExpressRouteCircuitsRoutesTableListResultInner>, ExpressRouteCircuitsRoutesTableListResultInner>\n+        beginListRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath);\n+\n+    /**\n+     * Gets the currently advertised routes table associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised routes table associated with the express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<\n+            PollResult<ExpressRouteCircuitsRoutesTableListResultInner>, ExpressRouteCircuitsRoutesTableListResultInner>\n+        beginListRoutesTable(\n+            String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context);\n+\n+    /**\n+     * Gets the currently advertised routes table associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised routes table associated with the express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitsRoutesTableListResultInner listRoutesTable(\n+        String resourceGroupName, String circuitName, String peeringName, String devicePath);\n+\n+    /**\n+     * Gets the currently advertised routes table associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised routes table associated with the express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitsRoutesTableListResultInner listRoutesTable(\n+        String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context);\n+\n+    /**\n+     * Gets the currently advertised routes table summary associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised routes table summary associated with the express route circuit in a resource\n+     *     group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<\n+            PollResult<ExpressRouteCircuitsRoutesTableSummaryListResultInner>,\n+            ExpressRouteCircuitsRoutesTableSummaryListResultInner>\n+        beginListRoutesTableSummary(\n+            String resourceGroupName, String circuitName, String peeringName, String devicePath);\n+\n+    /**\n+     * Gets the currently advertised routes table summary associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised routes table summary associated with the express route circuit in a resource\n+     *     group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<\n+            PollResult<ExpressRouteCircuitsRoutesTableSummaryListResultInner>,\n+            ExpressRouteCircuitsRoutesTableSummaryListResultInner>\n+        beginListRoutesTableSummary(\n+            String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context);\n+\n+    /**\n+     * Gets the currently advertised routes table summary associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised routes table summary associated with the express route circuit in a resource\n+     *     group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitsRoutesTableSummaryListResultInner listRoutesTableSummary(\n+        String resourceGroupName, String circuitName, String peeringName, String devicePath);\n+\n+    /**\n+     * Gets the currently advertised routes table summary associated with the express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param devicePath The path of the device.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the currently advertised routes table summary associated with the express route circuit in a resource\n+     *     group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitsRoutesTableSummaryListResultInner listRoutesTableSummary(\n+        String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context);\n+\n+    /**\n+     * Gets all the stats from an express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the stats from an express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitStatsInner getStats(String resourceGroupName, String circuitName);\n+\n+    /**\n+     * Gets all the stats from an express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the stats from an express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExpressRouteCircuitStatsInner> getStatsWithResponse(\n+        String resourceGroupName, String circuitName, Context context);\n+\n+    /**\n+     * Gets all stats from an express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all stats from an express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteCircuitStatsInner getPeeringStats(String resourceGroupName, String circuitName, String peeringName);\n+\n+    /**\n+     * Gets all stats from an express route circuit in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param circuitName The name of the express route circuit.\n+     * @param peeringName The name of the peering.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all stats from an express route circuit in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExpressRouteCircuitStatsInner> getPeeringStatsWithResponse(\n+        String resourceGroupName, String circuitName, String peeringName, Context context);\n+\n+    /**\n+     * Gets all the express route circuits in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the express route circuits in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExpressRouteCircuitInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Gets all the express route circuits in a resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the express route circuits in a resource group.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExpressRouteCircuitInner> listByResourceGroup(String resourceGroupName, Context context);\n+\n+    /**\n+     * Gets all the express route circuits in a subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the express route circuits in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExpressRouteCircuitInner> list();\n+\n+    /**\n+     * Gets all the express route circuits in a subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return all the express route circuits in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ExpressRouteCircuitInner> list(Context context);\n+}"
  },
  {
    "sha": "af145a1a6412f68b7cbd8de466d109c588668ff5",
    "filename": "sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteConnectionsClient.java",
    "status": "added",
    "additions": 213,
    "deletions": 0,
    "changes": 213,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteConnectionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8bf9aa22011779a7c9ef3179be63e76ac4f2431d/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteConnectionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/network/azure-resourcemanager-network-generated/src/main/java/com/azure/resourcemanager/network/generated/fluent/ExpressRouteConnectionsClient.java?ref=8bf9aa22011779a7c9ef3179be63e76ac4f2431d",
    "patch": "@@ -0,0 +1,213 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.network.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteConnectionInner;\n+import com.azure.resourcemanager.network.generated.fluent.models.ExpressRouteConnectionListInner;\n+\n+/** An instance of this class provides access to all the operations defined in ExpressRouteConnectionsClient. */\n+public interface ExpressRouteConnectionsClient {\n+    /**\n+     * Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param connectionName The name of the connection subresource.\n+     * @param putExpressRouteConnectionParameters Parameters required in an ExpressRouteConnection PUT operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteConnection resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteConnectionInner>, ExpressRouteConnectionInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String expressRouteGatewayName,\n+        String connectionName,\n+        ExpressRouteConnectionInner putExpressRouteConnectionParameters);\n+\n+    /**\n+     * Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param connectionName The name of the connection subresource.\n+     * @param putExpressRouteConnectionParameters Parameters required in an ExpressRouteConnection PUT operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteConnection resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ExpressRouteConnectionInner>, ExpressRouteConnectionInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String expressRouteGatewayName,\n+        String connectionName,\n+        ExpressRouteConnectionInner putExpressRouteConnectionParameters,\n+        Context context);\n+\n+    /**\n+     * Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param connectionName The name of the connection subresource.\n+     * @param putExpressRouteConnectionParameters Parameters required in an ExpressRouteConnection PUT operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteConnection resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteConnectionInner createOrUpdate(\n+        String resourceGroupName,\n+        String expressRouteGatewayName,\n+        String connectionName,\n+        ExpressRouteConnectionInner putExpressRouteConnectionParameters);\n+\n+    /**\n+     * Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param connectionName The name of the connection subresource.\n+     * @param putExpressRouteConnectionParameters Parameters required in an ExpressRouteConnection PUT operation.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteConnection resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteConnectionInner createOrUpdate(\n+        String resourceGroupName,\n+        String expressRouteGatewayName,\n+        String connectionName,\n+        ExpressRouteConnectionInner putExpressRouteConnectionParameters,\n+        Context context);\n+\n+    /**\n+     * Gets the specified ExpressRouteConnection.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param connectionName The name of the ExpressRoute connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified ExpressRouteConnection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteConnectionInner get(String resourceGroupName, String expressRouteGatewayName, String connectionName);\n+\n+    /**\n+     * Gets the specified ExpressRouteConnection.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param connectionName The name of the ExpressRoute connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified ExpressRouteConnection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExpressRouteConnectionInner> getWithResponse(\n+        String resourceGroupName, String expressRouteGatewayName, String connectionName, Context context);\n+\n+    /**\n+     * Deletes a connection to a ExpressRoute circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param connectionName The name of the connection subresource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String expressRouteGatewayName, String connectionName);\n+\n+    /**\n+     * Deletes a connection to a ExpressRoute circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param connectionName The name of the connection subresource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String expressRouteGatewayName, String connectionName, Context context);\n+\n+    /**\n+     * Deletes a connection to a ExpressRoute circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param connectionName The name of the connection subresource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String expressRouteGatewayName, String connectionName);\n+\n+    /**\n+     * Deletes a connection to a ExpressRoute circuit.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param connectionName The name of the connection subresource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String expressRouteGatewayName, String connectionName, Context context);\n+\n+    /**\n+     * Lists ExpressRouteConnections.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteConnection list.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ExpressRouteConnectionListInner list(String resourceGroupName, String expressRouteGatewayName);\n+\n+    /**\n+     * Lists ExpressRouteConnections.\n+     *\n+     * @param resourceGroupName The name of the resource group.\n+     * @param expressRouteGatewayName The name of the ExpressRoute gateway.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return expressRouteConnection list.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ExpressRouteConnectionListInner> listWithResponse(\n+        String resourceGroupName, String expressRouteGatewayName, Context context);\n+}"
  }
]
