[
  {
    "sha": "248d8ce1a8aa05e0008634da2d8f046439a42553",
    "filename": "eng/versioning/version_client.txt",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/eng/versioning/version_client.txt",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/eng/versioning/version_client.txt",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/eng/versioning/version_client.txt?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -210,6 +210,7 @@ com.azure.resourcemanager:azure-resourcemanager-redisenterprise;1.0.0-beta.2;1.0\n com.azure.resourcemanager:azure-resourcemanager-hybridkubernetes;1.0.0-beta.1;1.0.0-beta.2\n com.azure.resourcemanager:azure-resourcemanager-iothub;1.0.0-beta.1;1.0.0-beta.2\n com.azure.resourcemanager:azure-resourcemanager-datadog;1.0.0-beta.1;1.0.0-beta.2\n+com.azure.resourcemanager:azure-resourcemanager-cosmos-generated;1.0.0-beta.1;1.0.0-beta.1\n \n # Unreleased dependencies: Copy the entry from above, prepend \"unreleased_\" and remove the current\n # version. Unreleased dependencies are only valid for dependency versions."
  },
  {
    "sha": "33539e6a1d46ba3952c66cc7202f6ab0f4aa66ee",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/CHANGELOG.md",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/CHANGELOG.md",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/CHANGELOG.md?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,5 @@\n+# Release History\n+\n+## 1.0.0-beta.1 (2021-03-12)\n+\n+- Azure Resource Manager CosmosDB client library for Java. This package contains Microsoft Azure SDK for CosmosDB Management SDK. Azure Cosmos DB Database Service Resource Provider REST API. Package tag package-preview-2021-04. For documentation on how to use this package, please see [Azure Management Libraries for Java](https://aka.ms/azsdk/java/mgmt)."
  },
  {
    "sha": "5f6f4604ba84d5107aabd56cb7a2a130029bc06d",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/README.md",
    "status": "added",
    "additions": 99,
    "deletions": 0,
    "changes": 99,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/README.md",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/README.md",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/README.md?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,99 @@\n+# Azure Resource Manager CosmosDB client library for Java\n+\n+Azure Resource Manager CosmosDB client library for Java.\n+\n+This package contains Microsoft Azure SDK for CosmosDB Management SDK. Azure Cosmos DB Database Service Resource Provider REST API. Package tag package-preview-2021-04. For documentation on how to use this package, please see [Azure Management Libraries for Java](https://aka.ms/azsdk/java/mgmt).\n+\n+## We'd love to hear your feedback\n+\n+We're always working on improving our products and the way we communicate with our users. So we'd love to learn what's working and how we can do better.\n+\n+If you haven't already, please take a few minutes to [complete this short survey][survey] we have put together.\n+\n+Thank you in advance for your collaboration. We really appreciate your time!\n+\n+## Documentation\n+\n+Various documentation is available to help you get started\n+\n+- [API reference documentation][docs]\n+\n+## Getting started\n+\n+### Prerequisites\n+\n+- [Java Development Kit (JDK)][jdk] with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+\n+### Adding the package to your product\n+\n+[//]: # ({x-version-update-start;com.azure.resourcemanager:azure-resourcemanager-cosmos-generated;current})\n+```xml\n+<dependency>\n+    <groupId>com.azure.resourcemanager</groupId>\n+    <artifactId>azure-resourcemanager-cosmos-generated</artifactId>\n+    <version>1.0.0-beta.1</version>\n+</dependency>\n+```\n+[//]: # ({x-version-update-end})\n+\n+### Include the recommended packages\n+\n+Azure Management Libraries require a `TokenCredential` implementation for authentication and an `HttpClient` implementation for HTTP client.\n+\n+[Azure Identity][azure_identity] package and [Azure Core Netty HTTP][azure_core_http_netty] package provide the default implementation.\n+\n+### Authentication\n+\n+By default, Azure Active Directory token authentication depends on correct configure of following environment variables.\n+\n+- `AZURE_CLIENT_ID` for Azure client ID.\n+- `AZURE_TENANT_ID` for Azure tenant ID.\n+- `AZURE_CLIENT_SECRET` or `AZURE_CLIENT_CERTIFICATE_PATH` for client secret or client certificate.\n+\n+In addition, Azure subscription ID can be configured via environment variable `AZURE_SUBSCRIPTION_ID`.\n+\n+With above configuration, `azure` client can be authenticated by following code:\n+\n+```java\n+AzureProfile profile = new AzureProfile(AzureEnvironment.AZURE);\n+TokenCredential credential = new DefaultAzureCredentialBuilder()\n+    .authorityHost(profile.getEnvironment().getActiveDirectoryEndpoint())\n+    .build();\n+CosmosDBManager manager = CosmosDBManager\n+    .authenticate(credential, profile);\n+```\n+\n+The sample code assumes global Azure. Please change `AzureEnvironment.AZURE` variable if otherwise.\n+\n+See [Authentication][authenticate] for more options.\n+\n+## Key concepts\n+\n+See [API design][design] for general introduction on design and key concepts on Azure Management Libraries.\n+\n+## Examples\n+\n+## Troubleshooting\n+\n+## Next steps\n+\n+## Contributing\n+\n+For details on contributing to this repository, see the [contributing guide](https://github.com/Azure/azure-sdk-for-java/blob/master/CONTRIBUTING.md).\n+\n+1. Fork it\n+1. Create your feature branch (`git checkout -b my-new-feature`)\n+1. Commit your changes (`git commit -am 'Add some feature'`)\n+1. Push to the branch (`git push origin my-new-feature`)\n+1. Create new Pull Request\n+\n+<!-- LINKS -->\n+[survey]: https://microsoft.qualtrics.com/jfe/form/SV_ehN0lIk2FKEBkwd?Q_CHL=DOCS\n+[docs]: https://azure.github.io/azure-sdk-for-java/\n+[jdk]: https://docs.microsoft.com/java/azure/jdk/\n+[azure_subscription]: https://azure.microsoft.com/free/\n+[azure_identity]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/identity/azure-identity\n+[azure_core_http_netty]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/core/azure-core-http-netty\n+[authenticate]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/resourcemanager/docs/AUTH.md\n+[design]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/resourcemanager/docs/DESIGN.md"
  },
  {
    "sha": "b64dc4bee8954877bf1448eb1fd378704e122ec8",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/pom.xml",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/pom.xml",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/pom.xml",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/pom.xml?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,67 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>com.azure</groupId>\n+        <artifactId>azure-client-sdk-parent</artifactId>\n+        <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->\n+        <relativePath>../../parents/azure-client-sdk-parent</relativePath>\n+    </parent>\n+\n+    <groupId>com.azure.resourcemanager</groupId>\n+    <artifactId>azure-resourcemanager-cosmos-generated</artifactId>\n+    <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure.resourcemanager:azure-resourcemanager-cosmos-generated;current} -->\n+    <packaging>jar</packaging>\n+\n+    <name>Microsoft Azure SDK for CosmosDB Management</name>\n+    <description>This package contains Microsoft Azure SDK for CosmosDB Management SDK. For documentation on how to use this package, please see https://aka.ms/azsdk/java/mgmt. Azure Cosmos DB Database Service Resource Provider REST API. Package tag package-preview-2021-04.</description>\n+    <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+    <licenses>\n+        <license>\n+            <name>The MIT License (MIT)</name>\n+            <url>http://opensource.org/licenses/MIT</url>\n+            <distribution>repo</distribution>\n+        </license>\n+    </licenses>\n+\n+    <scm>\n+        <url>https://github.com/Azure/azure-sdk-for-java</url>\n+        <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>\n+        <developerConnection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</developerConnection>\n+        <tag>HEAD</tag>\n+    </scm>\n+    <developers>\n+        <developer>\n+            <id>microsoft</id>\n+            <name>Microsoft</name>\n+        </developer>\n+    </developers>\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <legal><![CDATA[[INFO] Any downloads listed may be third party software.  Microsoft grants you no rights for third party software.]]></legal>\n+    </properties>\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.azure</groupId>\n+            <artifactId>azure-core</artifactId>\n+            <version>1.14.0</version> <!-- {x-version-update;com.azure:azure-core;dependency} -->\n+        </dependency>\n+        <dependency>\n+            <groupId>com.azure</groupId>\n+            <artifactId>azure-core-management</artifactId>\n+            <version>1.2.0</version> <!-- {x-version-update;com.azure:azure-core-management;dependency} -->\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <version>0.8.5</version> <!-- {x-version-update;org.jacoco:jacoco-maven-plugin;external_dependency} -->\n+                <configuration>\n+                    <skip>true</skip>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
  },
  {
    "sha": "f9fa54db69bbb8597a85a4b42a63ca22ec833912",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/CosmosDBManager.java",
    "status": "added",
    "additions": 574,
    "deletions": 0,
    "changes": 574,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/CosmosDBManager.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/CosmosDBManager.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/CosmosDBManager.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,574 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated;\n+\n+import com.azure.core.credential.TokenCredential;\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.AddDatePolicy;\n+import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpLoggingPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.HttpPolicyProviders;\n+import com.azure.core.http.policy.RequestIdPolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.management.profile.AzureProfile;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.cosmos.generated.fluent.CosmosDBManagementClient;\n+import com.azure.resourcemanager.cosmos.generated.implementation.CassandraClustersImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.CassandraDataCentersImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.CassandraResourcesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.CollectionPartitionRegionsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.CollectionPartitionsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.CollectionRegionsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.CollectionsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.CosmosDBManagementClientBuilder;\n+import com.azure.resourcemanager.cosmos.generated.implementation.DatabaseAccountRegionsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.DatabaseAccountsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.DatabasesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.GremlinResourcesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.MongoDBResourcesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.NotebookWorkspacesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.OperationsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.PartitionKeyRangeIdRegionsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.PartitionKeyRangeIdsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.PercentileSourceTargetsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.PercentileTargetsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.PercentilesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.PrivateEndpointConnectionsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.PrivateLinkResourcesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.RestorableDatabaseAccountsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.RestorableMongodbCollectionsImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.RestorableMongodbDatabasesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.RestorableMongodbResourcesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.RestorableSqlContainersImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.RestorableSqlDatabasesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.RestorableSqlResourcesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.SqlResourcesImpl;\n+import com.azure.resourcemanager.cosmos.generated.implementation.TableResourcesImpl;\n+import com.azure.resourcemanager.cosmos.generated.models.CassandraClusters;\n+import com.azure.resourcemanager.cosmos.generated.models.CassandraDataCenters;\n+import com.azure.resourcemanager.cosmos.generated.models.CassandraResources;\n+import com.azure.resourcemanager.cosmos.generated.models.CollectionPartitionRegions;\n+import com.azure.resourcemanager.cosmos.generated.models.CollectionPartitions;\n+import com.azure.resourcemanager.cosmos.generated.models.CollectionRegions;\n+import com.azure.resourcemanager.cosmos.generated.models.Collections;\n+import com.azure.resourcemanager.cosmos.generated.models.DatabaseAccountRegions;\n+import com.azure.resourcemanager.cosmos.generated.models.DatabaseAccounts;\n+import com.azure.resourcemanager.cosmos.generated.models.Databases;\n+import com.azure.resourcemanager.cosmos.generated.models.GremlinResources;\n+import com.azure.resourcemanager.cosmos.generated.models.MongoDBResources;\n+import com.azure.resourcemanager.cosmos.generated.models.NotebookWorkspaces;\n+import com.azure.resourcemanager.cosmos.generated.models.Operations;\n+import com.azure.resourcemanager.cosmos.generated.models.PartitionKeyRangeIdRegions;\n+import com.azure.resourcemanager.cosmos.generated.models.PartitionKeyRangeIds;\n+import com.azure.resourcemanager.cosmos.generated.models.PercentileSourceTargets;\n+import com.azure.resourcemanager.cosmos.generated.models.PercentileTargets;\n+import com.azure.resourcemanager.cosmos.generated.models.Percentiles;\n+import com.azure.resourcemanager.cosmos.generated.models.PrivateEndpointConnections;\n+import com.azure.resourcemanager.cosmos.generated.models.PrivateLinkResources;\n+import com.azure.resourcemanager.cosmos.generated.models.RestorableDatabaseAccounts;\n+import com.azure.resourcemanager.cosmos.generated.models.RestorableMongodbCollections;\n+import com.azure.resourcemanager.cosmos.generated.models.RestorableMongodbDatabases;\n+import com.azure.resourcemanager.cosmos.generated.models.RestorableMongodbResources;\n+import com.azure.resourcemanager.cosmos.generated.models.RestorableSqlContainers;\n+import com.azure.resourcemanager.cosmos.generated.models.RestorableSqlDatabases;\n+import com.azure.resourcemanager.cosmos.generated.models.RestorableSqlResources;\n+import com.azure.resourcemanager.cosmos.generated.models.SqlResources;\n+import com.azure.resourcemanager.cosmos.generated.models.TableResources;\n+import java.time.Duration;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/** Entry point to CosmosDBManager. Azure Cosmos DB Database Service Resource Provider REST API. */\n+public final class CosmosDBManager {\n+    private DatabaseAccounts databaseAccounts;\n+\n+    private Operations operations;\n+\n+    private Databases databases;\n+\n+    private Collections collections;\n+\n+    private CollectionRegions collectionRegions;\n+\n+    private DatabaseAccountRegions databaseAccountRegions;\n+\n+    private PercentileSourceTargets percentileSourceTargets;\n+\n+    private PercentileTargets percentileTargets;\n+\n+    private Percentiles percentiles;\n+\n+    private CollectionPartitionRegions collectionPartitionRegions;\n+\n+    private CollectionPartitions collectionPartitions;\n+\n+    private PartitionKeyRangeIds partitionKeyRangeIds;\n+\n+    private PartitionKeyRangeIdRegions partitionKeyRangeIdRegions;\n+\n+    private SqlResources sqlResources;\n+\n+    private MongoDBResources mongoDBResources;\n+\n+    private TableResources tableResources;\n+\n+    private CassandraResources cassandraResources;\n+\n+    private GremlinResources gremlinResources;\n+\n+    private RestorableDatabaseAccounts restorableDatabaseAccounts;\n+\n+    private CassandraClusters cassandraClusters;\n+\n+    private CassandraDataCenters cassandraDataCenters;\n+\n+    private NotebookWorkspaces notebookWorkspaces;\n+\n+    private PrivateEndpointConnections privateEndpointConnections;\n+\n+    private PrivateLinkResources privateLinkResources;\n+\n+    private RestorableSqlDatabases restorableSqlDatabases;\n+\n+    private RestorableSqlContainers restorableSqlContainers;\n+\n+    private RestorableSqlResources restorableSqlResources;\n+\n+    private RestorableMongodbDatabases restorableMongodbDatabases;\n+\n+    private RestorableMongodbCollections restorableMongodbCollections;\n+\n+    private RestorableMongodbResources restorableMongodbResources;\n+\n+    private final CosmosDBManagementClient clientObject;\n+\n+    private CosmosDBManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {\n+        Objects.requireNonNull(httpPipeline, \"'httpPipeline' cannot be null.\");\n+        Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+        this.clientObject =\n+            new CosmosDBManagementClientBuilder()\n+                .pipeline(httpPipeline)\n+                .endpoint(profile.getEnvironment().getResourceManagerEndpoint())\n+                .subscriptionId(profile.getSubscriptionId())\n+                .defaultPollInterval(defaultPollInterval)\n+                .buildClient();\n+    }\n+\n+    /**\n+     * Creates an instance of CosmosDB service API entry point.\n+     *\n+     * @param credential the credential to use.\n+     * @param profile the Azure profile for client.\n+     * @return the CosmosDB service API instance.\n+     */\n+    public static CosmosDBManager authenticate(TokenCredential credential, AzureProfile profile) {\n+        Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+        Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+        return configure().authenticate(credential, profile);\n+    }\n+\n+    /**\n+     * Gets a Configurable instance that can be used to create CosmosDBManager with optional configuration.\n+     *\n+     * @return the Configurable instance allowing configurations.\n+     */\n+    public static Configurable configure() {\n+        return new CosmosDBManager.Configurable();\n+    }\n+\n+    /** The Configurable allowing configurations to be set. */\n+    public static final class Configurable {\n+        private final ClientLogger logger = new ClientLogger(Configurable.class);\n+\n+        private HttpClient httpClient;\n+        private HttpLogOptions httpLogOptions;\n+        private final List<HttpPipelinePolicy> policies = new ArrayList<>();\n+        private RetryPolicy retryPolicy;\n+        private Duration defaultPollInterval;\n+\n+        private Configurable() {\n+        }\n+\n+        /**\n+         * Sets the http client.\n+         *\n+         * @param httpClient the HTTP client.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withHttpClient(HttpClient httpClient) {\n+            this.httpClient = Objects.requireNonNull(httpClient, \"'httpClient' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the logging options to the HTTP pipeline.\n+         *\n+         * @param httpLogOptions the HTTP log options.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {\n+            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, \"'httpLogOptions' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Adds the pipeline policy to the HTTP pipeline.\n+         *\n+         * @param policy the HTTP pipeline policy.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withPolicy(HttpPipelinePolicy policy) {\n+            this.policies.add(Objects.requireNonNull(policy, \"'policy' cannot be null.\"));\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the retry policy to the HTTP pipeline.\n+         *\n+         * @param retryPolicy the HTTP pipeline retry policy.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {\n+            this.retryPolicy = Objects.requireNonNull(retryPolicy, \"'retryPolicy' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the default poll interval, used when service does not provide \"Retry-After\" header.\n+         *\n+         * @param defaultPollInterval the default poll interval.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {\n+            this.defaultPollInterval = Objects.requireNonNull(defaultPollInterval, \"'retryPolicy' cannot be null.\");\n+            if (this.defaultPollInterval.isNegative()) {\n+                throw logger.logExceptionAsError(new IllegalArgumentException(\"'httpPipeline' cannot be negative\"));\n+            }\n+            return this;\n+        }\n+\n+        /**\n+         * Creates an instance of CosmosDB service API entry point.\n+         *\n+         * @param credential the credential to use.\n+         * @param profile the Azure profile for client.\n+         * @return the CosmosDB service API instance.\n+         */\n+        public CosmosDBManager authenticate(TokenCredential credential, AzureProfile profile) {\n+            Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+            Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+\n+            StringBuilder userAgentBuilder = new StringBuilder();\n+            userAgentBuilder\n+                .append(\"azsdk-java\")\n+                .append(\"-\")\n+                .append(\"com.azure.resourcemanager.cosmos.generated\")\n+                .append(\"/\")\n+                .append(\"1.0.0-beta.1\");\n+            if (!Configuration.getGlobalConfiguration().get(\"AZURE_TELEMETRY_DISABLED\", false)) {\n+                userAgentBuilder\n+                    .append(\" (\")\n+                    .append(Configuration.getGlobalConfiguration().get(\"java.version\"))\n+                    .append(\"; \")\n+                    .append(Configuration.getGlobalConfiguration().get(\"os.name\"))\n+                    .append(\"; \")\n+                    .append(Configuration.getGlobalConfiguration().get(\"os.version\"))\n+                    .append(\"; auto-generated)\");\n+            } else {\n+                userAgentBuilder.append(\" (auto-generated)\");\n+            }\n+\n+            if (retryPolicy == null) {\n+                retryPolicy = new RetryPolicy(\"Retry-After\", ChronoUnit.SECONDS);\n+            }\n+            List<HttpPipelinePolicy> policies = new ArrayList<>();\n+            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));\n+            policies.add(new RequestIdPolicy());\n+            HttpPolicyProviders.addBeforeRetryPolicies(policies);\n+            policies.add(retryPolicy);\n+            policies.add(new AddDatePolicy());\n+            policies\n+                .add(\n+                    new BearerTokenAuthenticationPolicy(\n+                        credential, profile.getEnvironment().getManagementEndpoint() + \"/.default\"));\n+            HttpPolicyProviders.addAfterRetryPolicies(policies);\n+            policies.add(new HttpLoggingPolicy(httpLogOptions));\n+            HttpPipeline httpPipeline =\n+                new HttpPipelineBuilder()\n+                    .httpClient(httpClient)\n+                    .policies(policies.toArray(new HttpPipelinePolicy[0]))\n+                    .build();\n+            return new CosmosDBManager(httpPipeline, profile, defaultPollInterval);\n+        }\n+    }\n+\n+    /** @return Resource collection API of DatabaseAccounts. */\n+    public DatabaseAccounts databaseAccounts() {\n+        if (this.databaseAccounts == null) {\n+            this.databaseAccounts = new DatabaseAccountsImpl(clientObject.getDatabaseAccounts(), this);\n+        }\n+        return databaseAccounts;\n+    }\n+\n+    /** @return Resource collection API of Operations. */\n+    public Operations operations() {\n+        if (this.operations == null) {\n+            this.operations = new OperationsImpl(clientObject.getOperations(), this);\n+        }\n+        return operations;\n+    }\n+\n+    /** @return Resource collection API of Databases. */\n+    public Databases databases() {\n+        if (this.databases == null) {\n+            this.databases = new DatabasesImpl(clientObject.getDatabases(), this);\n+        }\n+        return databases;\n+    }\n+\n+    /** @return Resource collection API of Collections. */\n+    public Collections collections() {\n+        if (this.collections == null) {\n+            this.collections = new CollectionsImpl(clientObject.getCollections(), this);\n+        }\n+        return collections;\n+    }\n+\n+    /** @return Resource collection API of CollectionRegions. */\n+    public CollectionRegions collectionRegions() {\n+        if (this.collectionRegions == null) {\n+            this.collectionRegions = new CollectionRegionsImpl(clientObject.getCollectionRegions(), this);\n+        }\n+        return collectionRegions;\n+    }\n+\n+    /** @return Resource collection API of DatabaseAccountRegions. */\n+    public DatabaseAccountRegions databaseAccountRegions() {\n+        if (this.databaseAccountRegions == null) {\n+            this.databaseAccountRegions =\n+                new DatabaseAccountRegionsImpl(clientObject.getDatabaseAccountRegions(), this);\n+        }\n+        return databaseAccountRegions;\n+    }\n+\n+    /** @return Resource collection API of PercentileSourceTargets. */\n+    public PercentileSourceTargets percentileSourceTargets() {\n+        if (this.percentileSourceTargets == null) {\n+            this.percentileSourceTargets =\n+                new PercentileSourceTargetsImpl(clientObject.getPercentileSourceTargets(), this);\n+        }\n+        return percentileSourceTargets;\n+    }\n+\n+    /** @return Resource collection API of PercentileTargets. */\n+    public PercentileTargets percentileTargets() {\n+        if (this.percentileTargets == null) {\n+            this.percentileTargets = new PercentileTargetsImpl(clientObject.getPercentileTargets(), this);\n+        }\n+        return percentileTargets;\n+    }\n+\n+    /** @return Resource collection API of Percentiles. */\n+    public Percentiles percentiles() {\n+        if (this.percentiles == null) {\n+            this.percentiles = new PercentilesImpl(clientObject.getPercentiles(), this);\n+        }\n+        return percentiles;\n+    }\n+\n+    /** @return Resource collection API of CollectionPartitionRegions. */\n+    public CollectionPartitionRegions collectionPartitionRegions() {\n+        if (this.collectionPartitionRegions == null) {\n+            this.collectionPartitionRegions =\n+                new CollectionPartitionRegionsImpl(clientObject.getCollectionPartitionRegions(), this);\n+        }\n+        return collectionPartitionRegions;\n+    }\n+\n+    /** @return Resource collection API of CollectionPartitions. */\n+    public CollectionPartitions collectionPartitions() {\n+        if (this.collectionPartitions == null) {\n+            this.collectionPartitions = new CollectionPartitionsImpl(clientObject.getCollectionPartitions(), this);\n+        }\n+        return collectionPartitions;\n+    }\n+\n+    /** @return Resource collection API of PartitionKeyRangeIds. */\n+    public PartitionKeyRangeIds partitionKeyRangeIds() {\n+        if (this.partitionKeyRangeIds == null) {\n+            this.partitionKeyRangeIds = new PartitionKeyRangeIdsImpl(clientObject.getPartitionKeyRangeIds(), this);\n+        }\n+        return partitionKeyRangeIds;\n+    }\n+\n+    /** @return Resource collection API of PartitionKeyRangeIdRegions. */\n+    public PartitionKeyRangeIdRegions partitionKeyRangeIdRegions() {\n+        if (this.partitionKeyRangeIdRegions == null) {\n+            this.partitionKeyRangeIdRegions =\n+                new PartitionKeyRangeIdRegionsImpl(clientObject.getPartitionKeyRangeIdRegions(), this);\n+        }\n+        return partitionKeyRangeIdRegions;\n+    }\n+\n+    /** @return Resource collection API of SqlResources. */\n+    public SqlResources sqlResources() {\n+        if (this.sqlResources == null) {\n+            this.sqlResources = new SqlResourcesImpl(clientObject.getSqlResources(), this);\n+        }\n+        return sqlResources;\n+    }\n+\n+    /** @return Resource collection API of MongoDBResources. */\n+    public MongoDBResources mongoDBResources() {\n+        if (this.mongoDBResources == null) {\n+            this.mongoDBResources = new MongoDBResourcesImpl(clientObject.getMongoDBResources(), this);\n+        }\n+        return mongoDBResources;\n+    }\n+\n+    /** @return Resource collection API of TableResources. */\n+    public TableResources tableResources() {\n+        if (this.tableResources == null) {\n+            this.tableResources = new TableResourcesImpl(clientObject.getTableResources(), this);\n+        }\n+        return tableResources;\n+    }\n+\n+    /** @return Resource collection API of CassandraResources. */\n+    public CassandraResources cassandraResources() {\n+        if (this.cassandraResources == null) {\n+            this.cassandraResources = new CassandraResourcesImpl(clientObject.getCassandraResources(), this);\n+        }\n+        return cassandraResources;\n+    }\n+\n+    /** @return Resource collection API of GremlinResources. */\n+    public GremlinResources gremlinResources() {\n+        if (this.gremlinResources == null) {\n+            this.gremlinResources = new GremlinResourcesImpl(clientObject.getGremlinResources(), this);\n+        }\n+        return gremlinResources;\n+    }\n+\n+    /** @return Resource collection API of RestorableDatabaseAccounts. */\n+    public RestorableDatabaseAccounts restorableDatabaseAccounts() {\n+        if (this.restorableDatabaseAccounts == null) {\n+            this.restorableDatabaseAccounts =\n+                new RestorableDatabaseAccountsImpl(clientObject.getRestorableDatabaseAccounts(), this);\n+        }\n+        return restorableDatabaseAccounts;\n+    }\n+\n+    /** @return Resource collection API of CassandraClusters. */\n+    public CassandraClusters cassandraClusters() {\n+        if (this.cassandraClusters == null) {\n+            this.cassandraClusters = new CassandraClustersImpl(clientObject.getCassandraClusters(), this);\n+        }\n+        return cassandraClusters;\n+    }\n+\n+    /** @return Resource collection API of CassandraDataCenters. */\n+    public CassandraDataCenters cassandraDataCenters() {\n+        if (this.cassandraDataCenters == null) {\n+            this.cassandraDataCenters = new CassandraDataCentersImpl(clientObject.getCassandraDataCenters(), this);\n+        }\n+        return cassandraDataCenters;\n+    }\n+\n+    /** @return Resource collection API of NotebookWorkspaces. */\n+    public NotebookWorkspaces notebookWorkspaces() {\n+        if (this.notebookWorkspaces == null) {\n+            this.notebookWorkspaces = new NotebookWorkspacesImpl(clientObject.getNotebookWorkspaces(), this);\n+        }\n+        return notebookWorkspaces;\n+    }\n+\n+    /** @return Resource collection API of PrivateEndpointConnections. */\n+    public PrivateEndpointConnections privateEndpointConnections() {\n+        if (this.privateEndpointConnections == null) {\n+            this.privateEndpointConnections =\n+                new PrivateEndpointConnectionsImpl(clientObject.getPrivateEndpointConnections(), this);\n+        }\n+        return privateEndpointConnections;\n+    }\n+\n+    /** @return Resource collection API of PrivateLinkResources. */\n+    public PrivateLinkResources privateLinkResources() {\n+        if (this.privateLinkResources == null) {\n+            this.privateLinkResources = new PrivateLinkResourcesImpl(clientObject.getPrivateLinkResources(), this);\n+        }\n+        return privateLinkResources;\n+    }\n+\n+    /** @return Resource collection API of RestorableSqlDatabases. */\n+    public RestorableSqlDatabases restorableSqlDatabases() {\n+        if (this.restorableSqlDatabases == null) {\n+            this.restorableSqlDatabases =\n+                new RestorableSqlDatabasesImpl(clientObject.getRestorableSqlDatabases(), this);\n+        }\n+        return restorableSqlDatabases;\n+    }\n+\n+    /** @return Resource collection API of RestorableSqlContainers. */\n+    public RestorableSqlContainers restorableSqlContainers() {\n+        if (this.restorableSqlContainers == null) {\n+            this.restorableSqlContainers =\n+                new RestorableSqlContainersImpl(clientObject.getRestorableSqlContainers(), this);\n+        }\n+        return restorableSqlContainers;\n+    }\n+\n+    /** @return Resource collection API of RestorableSqlResources. */\n+    public RestorableSqlResources restorableSqlResources() {\n+        if (this.restorableSqlResources == null) {\n+            this.restorableSqlResources =\n+                new RestorableSqlResourcesImpl(clientObject.getRestorableSqlResources(), this);\n+        }\n+        return restorableSqlResources;\n+    }\n+\n+    /** @return Resource collection API of RestorableMongodbDatabases. */\n+    public RestorableMongodbDatabases restorableMongodbDatabases() {\n+        if (this.restorableMongodbDatabases == null) {\n+            this.restorableMongodbDatabases =\n+                new RestorableMongodbDatabasesImpl(clientObject.getRestorableMongodbDatabases(), this);\n+        }\n+        return restorableMongodbDatabases;\n+    }\n+\n+    /** @return Resource collection API of RestorableMongodbCollections. */\n+    public RestorableMongodbCollections restorableMongodbCollections() {\n+        if (this.restorableMongodbCollections == null) {\n+            this.restorableMongodbCollections =\n+                new RestorableMongodbCollectionsImpl(clientObject.getRestorableMongodbCollections(), this);\n+        }\n+        return restorableMongodbCollections;\n+    }\n+\n+    /** @return Resource collection API of RestorableMongodbResources. */\n+    public RestorableMongodbResources restorableMongodbResources() {\n+        if (this.restorableMongodbResources == null) {\n+            this.restorableMongodbResources =\n+                new RestorableMongodbResourcesImpl(clientObject.getRestorableMongodbResources(), this);\n+        }\n+        return restorableMongodbResources;\n+    }\n+\n+    /**\n+     * @return Wrapped service client CosmosDBManagementClient providing direct access to the underlying auto-generated\n+     *     API implementation, based on Azure REST API.\n+     */\n+    public CosmosDBManagementClient serviceClient() {\n+        return this.clientObject;\n+    }\n+}"
  },
  {
    "sha": "c36cd4f4596f362178f7c32167a80d4cd521a512",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraClustersClient.java",
    "status": "added",
    "additions": 866,
    "deletions": 0,
    "changes": 866,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraClustersClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraClustersClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraClustersClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,866 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.BackupResourceInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.ClusterNodeStatusInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.ClusterResourceInner;\n+import com.azure.resourcemanager.cosmos.generated.models.RepairPostBody;\n+\n+/** An instance of this class provides access to all the operations defined in CassandraClustersClient. */\n+public interface CassandraClustersClient {\n+    /**\n+     * List all managed Cassandra clusters in this subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra clusters.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ClusterResourceInner> listBySubscription();\n+\n+    /**\n+     * List all managed Cassandra clusters in this subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra clusters.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ClusterResourceInner> listBySubscription(Context context);\n+\n+    /**\n+     * List all managed Cassandra clusters in this resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra clusters.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ClusterResourceInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * List all managed Cassandra clusters in this resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra clusters.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ClusterResourceInner> listByResourceGroup(String resourceGroupName, Context context);\n+\n+    /**\n+     * Get the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterResourceInner get(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * Get the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ClusterResourceInner> getWithResponse(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Deletes a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * Deletes a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Deletes a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * Deletes a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update\n+     * only some properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body The properties specifying the desired state of the managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterResourceInner>, ClusterResourceInner> beginCreateUpdate(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body);\n+\n+    /**\n+     * Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update\n+     * only some properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body The properties specifying the desired state of the managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterResourceInner>, ClusterResourceInner> beginCreateUpdate(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body, Context context);\n+\n+    /**\n+     * Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update\n+     * only some properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body The properties specifying the desired state of the managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterResourceInner createUpdate(String resourceGroupName, String clusterName, ClusterResourceInner body);\n+\n+    /**\n+     * Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update\n+     * only some properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body The properties specifying the desired state of the managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterResourceInner createUpdate(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body, Context context);\n+\n+    /**\n+     * Updates some of the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Parameters to provide for specifying the managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterResourceInner>, ClusterResourceInner> beginUpdate(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body);\n+\n+    /**\n+     * Updates some of the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Parameters to provide for specifying the managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterResourceInner>, ClusterResourceInner> beginUpdate(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body, Context context);\n+\n+    /**\n+     * Updates some of the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Parameters to provide for specifying the managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterResourceInner update(String resourceGroupName, String clusterName, ClusterResourceInner body);\n+\n+    /**\n+     * Updates some of the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Parameters to provide for specifying the managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterResourceInner update(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body, Context context);\n+\n+    /**\n+     * Request that repair begin on this cluster as soon as possible.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Specification of what keyspaces and tables to run repair on.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRequestRepair(\n+        String resourceGroupName, String clusterName, RepairPostBody body);\n+\n+    /**\n+     * Request that repair begin on this cluster as soon as possible.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Specification of what keyspaces and tables to run repair on.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRequestRepair(\n+        String resourceGroupName, String clusterName, RepairPostBody body, Context context);\n+\n+    /**\n+     * Request that repair begin on this cluster as soon as possible.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Specification of what keyspaces and tables to run repair on.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void requestRepair(String resourceGroupName, String clusterName, RepairPostBody body);\n+\n+    /**\n+     * Request that repair begin on this cluster as soon as possible.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Specification of what keyspaces and tables to run repair on.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void requestRepair(String resourceGroupName, String clusterName, RepairPostBody body, Context context);\n+\n+    /**\n+     * Request the status of all nodes in the cluster (as returned by 'nodetool status').\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the status of all nodes in the cluster (as returned by 'nodetool status').\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterNodeStatusInner>, ClusterNodeStatusInner> beginFetchNodeStatus(\n+        String resourceGroupName, String clusterName);\n+\n+    /**\n+     * Request the status of all nodes in the cluster (as returned by 'nodetool status').\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the status of all nodes in the cluster (as returned by 'nodetool status').\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterNodeStatusInner>, ClusterNodeStatusInner> beginFetchNodeStatus(\n+        String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Request the status of all nodes in the cluster (as returned by 'nodetool status').\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the status of all nodes in the cluster (as returned by 'nodetool status').\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterNodeStatusInner fetchNodeStatus(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * Request the status of all nodes in the cluster (as returned by 'nodetool status').\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the status of all nodes in the cluster (as returned by 'nodetool status').\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterNodeStatusInner fetchNodeStatus(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * List the backups of this cluster that are available to restore.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of restorable backups for a Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BackupResourceInner> listBackups(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * List the backups of this cluster that are available to restore.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of restorable backups for a Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BackupResourceInner> listBackups(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Get the properties of an individual backup of this cluster that is available to restore.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param backupId Id of a restorable backup of a Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of an individual backup of this cluster that is available to restore.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    BackupResourceInner getBackup(String resourceGroupName, String clusterName, String backupId);\n+\n+    /**\n+     * Get the properties of an individual backup of this cluster that is available to restore.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param backupId Id of a restorable backup of a Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of an individual backup of this cluster that is available to restore.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<BackupResourceInner> getBackupWithResponse(\n+        String resourceGroupName, String clusterName, String backupId, Context context);\n+\n+    /**\n+     * List all managed Cassandra clusters in this subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra clusters.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ClusterResourceInner> listBySubscription();\n+\n+    /**\n+     * List all managed Cassandra clusters in this subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra clusters.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ClusterResourceInner> listBySubscription(Context context);\n+\n+    /**\n+     * List all managed Cassandra clusters in this resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra clusters.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ClusterResourceInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * List all managed Cassandra clusters in this resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra clusters.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<ClusterResourceInner> listByResourceGroup(String resourceGroupName, Context context);\n+\n+    /**\n+     * Get the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterResourceInner get(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * Get the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<ClusterResourceInner> getWithResponse(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Deletes a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * Deletes a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Deletes a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * Deletes a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update\n+     * only some properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body The properties specifying the desired state of the managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterResourceInner>, ClusterResourceInner> beginCreateUpdate(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body);\n+\n+    /**\n+     * Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update\n+     * only some properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body The properties specifying the desired state of the managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterResourceInner>, ClusterResourceInner> beginCreateUpdate(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body, Context context);\n+\n+    /**\n+     * Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update\n+     * only some properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body The properties specifying the desired state of the managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterResourceInner createUpdate(String resourceGroupName, String clusterName, ClusterResourceInner body);\n+\n+    /**\n+     * Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update\n+     * only some properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body The properties specifying the desired state of the managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterResourceInner createUpdate(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body, Context context);\n+\n+    /**\n+     * Updates some of the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Parameters to provide for specifying the managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterResourceInner>, ClusterResourceInner> beginUpdate(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body);\n+\n+    /**\n+     * Updates some of the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Parameters to provide for specifying the managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterResourceInner>, ClusterResourceInner> beginUpdate(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body, Context context);\n+\n+    /**\n+     * Updates some of the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Parameters to provide for specifying the managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterResourceInner update(String resourceGroupName, String clusterName, ClusterResourceInner body);\n+\n+    /**\n+     * Updates some of the properties of a managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Parameters to provide for specifying the managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return representation of a managed Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterResourceInner update(\n+        String resourceGroupName, String clusterName, ClusterResourceInner body, Context context);\n+\n+    /**\n+     * Request that repair begin on this cluster as soon as possible.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Specification of what keyspaces and tables to run repair on.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRequestRepair(\n+        String resourceGroupName, String clusterName, RepairPostBody body);\n+\n+    /**\n+     * Request that repair begin on this cluster as soon as possible.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Specification of what keyspaces and tables to run repair on.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRequestRepair(\n+        String resourceGroupName, String clusterName, RepairPostBody body, Context context);\n+\n+    /**\n+     * Request that repair begin on this cluster as soon as possible.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Specification of what keyspaces and tables to run repair on.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void requestRepair(String resourceGroupName, String clusterName, RepairPostBody body);\n+\n+    /**\n+     * Request that repair begin on this cluster as soon as possible.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param body Specification of what keyspaces and tables to run repair on.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void requestRepair(String resourceGroupName, String clusterName, RepairPostBody body, Context context);\n+\n+    /**\n+     * Request the status of all nodes in the cluster (as returned by 'nodetool status').\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the status of all nodes in the cluster (as returned by 'nodetool status').\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterNodeStatusInner>, ClusterNodeStatusInner> beginFetchNodeStatus(\n+        String resourceGroupName, String clusterName);\n+\n+    /**\n+     * Request the status of all nodes in the cluster (as returned by 'nodetool status').\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the status of all nodes in the cluster (as returned by 'nodetool status').\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<ClusterNodeStatusInner>, ClusterNodeStatusInner> beginFetchNodeStatus(\n+        String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Request the status of all nodes in the cluster (as returned by 'nodetool status').\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the status of all nodes in the cluster (as returned by 'nodetool status').\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterNodeStatusInner fetchNodeStatus(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * Request the status of all nodes in the cluster (as returned by 'nodetool status').\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the status of all nodes in the cluster (as returned by 'nodetool status').\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    ClusterNodeStatusInner fetchNodeStatus(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * List the backups of this cluster that are available to restore.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of restorable backups for a Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BackupResourceInner> listBackups(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * List the backups of this cluster that are available to restore.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of restorable backups for a Cassandra cluster.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<BackupResourceInner> listBackups(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Get the properties of an individual backup of this cluster that is available to restore.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param backupId Id of a restorable backup of a Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of an individual backup of this cluster that is available to restore.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    BackupResourceInner getBackup(String resourceGroupName, String clusterName, String backupId);\n+\n+    /**\n+     * Get the properties of an individual backup of this cluster that is available to restore.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param backupId Id of a restorable backup of a Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of an individual backup of this cluster that is available to restore.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<BackupResourceInner> getBackupWithResponse(\n+        String resourceGroupName, String clusterName, String backupId, Context context);\n+}"
  },
  {
    "sha": "2c5fdd59cbbdf7d13ceaee25965c5495fc819f99",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraDataCentersClient.java",
    "status": "added",
    "additions": 549,
    "deletions": 0,
    "changes": 549,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraDataCentersClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraDataCentersClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraDataCentersClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,549 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.DataCenterResourceInner;\n+\n+/** An instance of this class provides access to all the operations defined in CassandraDataCentersClient. */\n+public interface CassandraDataCentersClient {\n+    /**\n+     * List all data centers in a particular managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra data centers and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DataCenterResourceInner> list(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * List all data centers in a particular managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra data centers and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DataCenterResourceInner> list(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Get the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataCenterResourceInner get(String resourceGroupName, String clusterName, String dataCenterName);\n+\n+    /**\n+     * Get the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DataCenterResourceInner> getWithResponse(\n+        String resourceGroupName, String clusterName, String dataCenterName, Context context);\n+\n+    /**\n+     * Delete a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String clusterName, String dataCenterName);\n+\n+    /**\n+     * Delete a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String clusterName, String dataCenterName, Context context);\n+\n+    /**\n+     * Delete a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String clusterName, String dataCenterName);\n+\n+    /**\n+     * Delete a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String clusterName, String dataCenterName, Context context);\n+\n+    /**\n+     * Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some\n+     * properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters specifying the managed Cassandra data center.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DataCenterResourceInner>, DataCenterResourceInner> beginCreateUpdate(\n+        String resourceGroupName, String clusterName, String dataCenterName, DataCenterResourceInner body);\n+\n+    /**\n+     * Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some\n+     * properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters specifying the managed Cassandra data center.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DataCenterResourceInner>, DataCenterResourceInner> beginCreateUpdate(\n+        String resourceGroupName,\n+        String clusterName,\n+        String dataCenterName,\n+        DataCenterResourceInner body,\n+        Context context);\n+\n+    /**\n+     * Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some\n+     * properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters specifying the managed Cassandra data center.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataCenterResourceInner createUpdate(\n+        String resourceGroupName, String clusterName, String dataCenterName, DataCenterResourceInner body);\n+\n+    /**\n+     * Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some\n+     * properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters specifying the managed Cassandra data center.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataCenterResourceInner createUpdate(\n+        String resourceGroupName,\n+        String clusterName,\n+        String dataCenterName,\n+        DataCenterResourceInner body,\n+        Context context);\n+\n+    /**\n+     * Update some of the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters to provide for specifying the managed Cassandra data center.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DataCenterResourceInner>, DataCenterResourceInner> beginUpdate(\n+        String resourceGroupName, String clusterName, String dataCenterName, DataCenterResourceInner body);\n+\n+    /**\n+     * Update some of the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters to provide for specifying the managed Cassandra data center.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DataCenterResourceInner>, DataCenterResourceInner> beginUpdate(\n+        String resourceGroupName,\n+        String clusterName,\n+        String dataCenterName,\n+        DataCenterResourceInner body,\n+        Context context);\n+\n+    /**\n+     * Update some of the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters to provide for specifying the managed Cassandra data center.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataCenterResourceInner update(\n+        String resourceGroupName, String clusterName, String dataCenterName, DataCenterResourceInner body);\n+\n+    /**\n+     * Update some of the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters to provide for specifying the managed Cassandra data center.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataCenterResourceInner update(\n+        String resourceGroupName,\n+        String clusterName,\n+        String dataCenterName,\n+        DataCenterResourceInner body,\n+        Context context);\n+\n+    /**\n+     * List all data centers in a particular managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra data centers and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DataCenterResourceInner> list(String resourceGroupName, String clusterName);\n+\n+    /**\n+     * List all data centers in a particular managed Cassandra cluster.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of managed Cassandra data centers and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DataCenterResourceInner> list(String resourceGroupName, String clusterName, Context context);\n+\n+    /**\n+     * Get the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataCenterResourceInner get(String resourceGroupName, String clusterName, String dataCenterName);\n+\n+    /**\n+     * Get the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the properties of a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DataCenterResourceInner> getWithResponse(\n+        String resourceGroupName, String clusterName, String dataCenterName, Context context);\n+\n+    /**\n+     * Delete a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String clusterName, String dataCenterName);\n+\n+    /**\n+     * Delete a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String clusterName, String dataCenterName, Context context);\n+\n+    /**\n+     * Delete a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String clusterName, String dataCenterName);\n+\n+    /**\n+     * Delete a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String clusterName, String dataCenterName, Context context);\n+\n+    /**\n+     * Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some\n+     * properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters specifying the managed Cassandra data center.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DataCenterResourceInner>, DataCenterResourceInner> beginCreateUpdate(\n+        String resourceGroupName, String clusterName, String dataCenterName, DataCenterResourceInner body);\n+\n+    /**\n+     * Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some\n+     * properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters specifying the managed Cassandra data center.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DataCenterResourceInner>, DataCenterResourceInner> beginCreateUpdate(\n+        String resourceGroupName,\n+        String clusterName,\n+        String dataCenterName,\n+        DataCenterResourceInner body,\n+        Context context);\n+\n+    /**\n+     * Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some\n+     * properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters specifying the managed Cassandra data center.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataCenterResourceInner createUpdate(\n+        String resourceGroupName, String clusterName, String dataCenterName, DataCenterResourceInner body);\n+\n+    /**\n+     * Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some\n+     * properties, use PATCH.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters specifying the managed Cassandra data center.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataCenterResourceInner createUpdate(\n+        String resourceGroupName,\n+        String clusterName,\n+        String dataCenterName,\n+        DataCenterResourceInner body,\n+        Context context);\n+\n+    /**\n+     * Update some of the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters to provide for specifying the managed Cassandra data center.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DataCenterResourceInner>, DataCenterResourceInner> beginUpdate(\n+        String resourceGroupName, String clusterName, String dataCenterName, DataCenterResourceInner body);\n+\n+    /**\n+     * Update some of the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters to provide for specifying the managed Cassandra data center.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DataCenterResourceInner>, DataCenterResourceInner> beginUpdate(\n+        String resourceGroupName,\n+        String clusterName,\n+        String dataCenterName,\n+        DataCenterResourceInner body,\n+        Context context);\n+\n+    /**\n+     * Update some of the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters to provide for specifying the managed Cassandra data center.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataCenterResourceInner update(\n+        String resourceGroupName, String clusterName, String dataCenterName, DataCenterResourceInner body);\n+\n+    /**\n+     * Update some of the properties of a managed Cassandra data center.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param clusterName Managed Cassandra cluster name.\n+     * @param dataCenterName Data center name in a managed Cassandra cluster.\n+     * @param body Parameters to provide for specifying the managed Cassandra data center.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a managed Cassandra data center.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DataCenterResourceInner update(\n+        String resourceGroupName,\n+        String clusterName,\n+        String dataCenterName,\n+        DataCenterResourceInner body,\n+        Context context);\n+}"
  },
  {
    "sha": "9b5691354c2e9fb5c4fef01da215d3d5a2adbfc6",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraResourcesClient.java",
    "status": "added",
    "additions": 1886,
    "deletions": 0,
    "changes": 1886,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraResourcesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraResourcesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CassandraResourcesClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696"
  },
  {
    "sha": "e0cdee7693455eb8cd201f68095af1108e5da846",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionPartitionRegionsClient.java",
    "status": "added",
    "additions": 118,
    "deletions": 0,
    "changes": 118,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionPartitionRegionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionPartitionRegionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionPartitionRegionsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,118 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.PartitionMetricInner;\n+\n+/** An instance of this class provides access to all the operations defined in CollectionPartitionRegionsClient. */\n+public interface CollectionPartitionRegionsClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given collection and region, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given collection and region, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given collection and region, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given collection and region, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+}"
  },
  {
    "sha": "1ab5fd638e979859e725049dae96da6475c6ea9b",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionPartitionsClient.java",
    "status": "added",
    "additions": 183,
    "deletions": 0,
    "changes": 183,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionPartitionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionPartitionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionPartitionsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,183 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.PartitionMetricInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.PartitionUsageInner;\n+\n+/** An instance of this class provides access to all the operations defined in CollectionPartitionsClient. */\n+public interface CollectionPartitionsClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given collection, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given collection, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves the usages (most recent storage data) for the given collection, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition level usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionUsageInner> listUsages(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid);\n+\n+    /**\n+     * Retrieves the usages (most recent storage data) for the given collection, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of usages to return. The supported parameter is\n+     *     name.value (name of the metric, can have an or of multiple names).\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition level usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionUsageInner> listUsages(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given collection, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given collection, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves the usages (most recent storage data) for the given collection, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition level usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionUsageInner> listUsages(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid);\n+\n+    /**\n+     * Retrieves the usages (most recent storage data) for the given collection, split by partition.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of usages to return. The supported parameter is\n+     *     name.value (name of the metric, can have an or of multiple names).\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition level usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionUsageInner> listUsages(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+}"
  },
  {
    "sha": "eae836ae7a80797da3c367a15112b156b52a2041",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionRegionsClient.java",
    "status": "added",
    "additions": 118,
    "deletions": 0,
    "changes": 118,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionRegionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionRegionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionRegionsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,118 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.MetricInner;\n+\n+/** An instance of this class provides access to all the operations defined in CollectionRegionsClient. */\n+public interface CollectionRegionsClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account, collection and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account, collection and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account, collection and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account, collection and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+}"
  },
  {
    "sha": "fbc7b0928d7ac96c272f925249a0ddcf5d00acf6",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionsClient.java",
    "status": "added",
    "additions": 250,
    "deletions": 0,
    "changes": 250,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CollectionsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,250 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.MetricDefinitionInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.MetricInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.UsageInner;\n+\n+/** An instance of this class provides access to all the operations defined in CollectionsClient. */\n+public interface CollectionsClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves the usages (most recent storage data) for the given collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid);\n+\n+    /**\n+     * Retrieves the usages (most recent storage data) for the given collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of usages to return. The supported parameter is\n+     *     name.value (name of the metric, can have an or of multiple names).\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves metric definitions for the given collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid);\n+\n+    /**\n+     * Retrieves metric definitions for the given collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid, Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves the usages (most recent storage data) for the given collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid);\n+\n+    /**\n+     * Retrieves the usages (most recent storage data) for the given collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param filter An OData filter expression that describes a subset of usages to return. The supported parameter is\n+     *     name.value (name of the metric, can have an or of multiple names).\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves metric definitions for the given collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid);\n+\n+    /**\n+     * Retrieves metric definitions for the given collection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String accountName, String databaseRid, String collectionRid, Context context);\n+}"
  },
  {
    "sha": "196c62f67a72b6cc86d23195a92edccca6c33f34",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CosmosDBManagementClient.java",
    "status": "added",
    "additions": 249,
    "deletions": 0,
    "changes": 249,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CosmosDBManagementClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CosmosDBManagementClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/CosmosDBManagementClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,249 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.http.HttpPipeline;\n+import java.time.Duration;\n+\n+/** The interface for CosmosDBManagementClient class. */\n+public interface CosmosDBManagementClient {\n+    /**\n+     * Gets The ID of the target subscription.\n+     *\n+     * @return the subscriptionId value.\n+     */\n+    String getSubscriptionId();\n+\n+    /**\n+     * Gets server parameter.\n+     *\n+     * @return the endpoint value.\n+     */\n+    String getEndpoint();\n+\n+    /**\n+     * Gets The HTTP pipeline to send requests through.\n+     *\n+     * @return the httpPipeline value.\n+     */\n+    HttpPipeline getHttpPipeline();\n+\n+    /**\n+     * Gets The default poll interval for long-running operation.\n+     *\n+     * @return the defaultPollInterval value.\n+     */\n+    Duration getDefaultPollInterval();\n+\n+    /**\n+     * Gets the DatabaseAccountsClient object to access its operations.\n+     *\n+     * @return the DatabaseAccountsClient object.\n+     */\n+    DatabaseAccountsClient getDatabaseAccounts();\n+\n+    /**\n+     * Gets the OperationsClient object to access its operations.\n+     *\n+     * @return the OperationsClient object.\n+     */\n+    OperationsClient getOperations();\n+\n+    /**\n+     * Gets the DatabasesClient object to access its operations.\n+     *\n+     * @return the DatabasesClient object.\n+     */\n+    DatabasesClient getDatabases();\n+\n+    /**\n+     * Gets the CollectionsClient object to access its operations.\n+     *\n+     * @return the CollectionsClient object.\n+     */\n+    CollectionsClient getCollections();\n+\n+    /**\n+     * Gets the CollectionRegionsClient object to access its operations.\n+     *\n+     * @return the CollectionRegionsClient object.\n+     */\n+    CollectionRegionsClient getCollectionRegions();\n+\n+    /**\n+     * Gets the DatabaseAccountRegionsClient object to access its operations.\n+     *\n+     * @return the DatabaseAccountRegionsClient object.\n+     */\n+    DatabaseAccountRegionsClient getDatabaseAccountRegions();\n+\n+    /**\n+     * Gets the PercentileSourceTargetsClient object to access its operations.\n+     *\n+     * @return the PercentileSourceTargetsClient object.\n+     */\n+    PercentileSourceTargetsClient getPercentileSourceTargets();\n+\n+    /**\n+     * Gets the PercentileTargetsClient object to access its operations.\n+     *\n+     * @return the PercentileTargetsClient object.\n+     */\n+    PercentileTargetsClient getPercentileTargets();\n+\n+    /**\n+     * Gets the PercentilesClient object to access its operations.\n+     *\n+     * @return the PercentilesClient object.\n+     */\n+    PercentilesClient getPercentiles();\n+\n+    /**\n+     * Gets the CollectionPartitionRegionsClient object to access its operations.\n+     *\n+     * @return the CollectionPartitionRegionsClient object.\n+     */\n+    CollectionPartitionRegionsClient getCollectionPartitionRegions();\n+\n+    /**\n+     * Gets the CollectionPartitionsClient object to access its operations.\n+     *\n+     * @return the CollectionPartitionsClient object.\n+     */\n+    CollectionPartitionsClient getCollectionPartitions();\n+\n+    /**\n+     * Gets the PartitionKeyRangeIdsClient object to access its operations.\n+     *\n+     * @return the PartitionKeyRangeIdsClient object.\n+     */\n+    PartitionKeyRangeIdsClient getPartitionKeyRangeIds();\n+\n+    /**\n+     * Gets the PartitionKeyRangeIdRegionsClient object to access its operations.\n+     *\n+     * @return the PartitionKeyRangeIdRegionsClient object.\n+     */\n+    PartitionKeyRangeIdRegionsClient getPartitionKeyRangeIdRegions();\n+\n+    /**\n+     * Gets the SqlResourcesClient object to access its operations.\n+     *\n+     * @return the SqlResourcesClient object.\n+     */\n+    SqlResourcesClient getSqlResources();\n+\n+    /**\n+     * Gets the MongoDBResourcesClient object to access its operations.\n+     *\n+     * @return the MongoDBResourcesClient object.\n+     */\n+    MongoDBResourcesClient getMongoDBResources();\n+\n+    /**\n+     * Gets the TableResourcesClient object to access its operations.\n+     *\n+     * @return the TableResourcesClient object.\n+     */\n+    TableResourcesClient getTableResources();\n+\n+    /**\n+     * Gets the CassandraResourcesClient object to access its operations.\n+     *\n+     * @return the CassandraResourcesClient object.\n+     */\n+    CassandraResourcesClient getCassandraResources();\n+\n+    /**\n+     * Gets the GremlinResourcesClient object to access its operations.\n+     *\n+     * @return the GremlinResourcesClient object.\n+     */\n+    GremlinResourcesClient getGremlinResources();\n+\n+    /**\n+     * Gets the RestorableDatabaseAccountsClient object to access its operations.\n+     *\n+     * @return the RestorableDatabaseAccountsClient object.\n+     */\n+    RestorableDatabaseAccountsClient getRestorableDatabaseAccounts();\n+\n+    /**\n+     * Gets the CassandraClustersClient object to access its operations.\n+     *\n+     * @return the CassandraClustersClient object.\n+     */\n+    CassandraClustersClient getCassandraClusters();\n+\n+    /**\n+     * Gets the CassandraDataCentersClient object to access its operations.\n+     *\n+     * @return the CassandraDataCentersClient object.\n+     */\n+    CassandraDataCentersClient getCassandraDataCenters();\n+\n+    /**\n+     * Gets the NotebookWorkspacesClient object to access its operations.\n+     *\n+     * @return the NotebookWorkspacesClient object.\n+     */\n+    NotebookWorkspacesClient getNotebookWorkspaces();\n+\n+    /**\n+     * Gets the PrivateEndpointConnectionsClient object to access its operations.\n+     *\n+     * @return the PrivateEndpointConnectionsClient object.\n+     */\n+    PrivateEndpointConnectionsClient getPrivateEndpointConnections();\n+\n+    /**\n+     * Gets the PrivateLinkResourcesClient object to access its operations.\n+     *\n+     * @return the PrivateLinkResourcesClient object.\n+     */\n+    PrivateLinkResourcesClient getPrivateLinkResources();\n+\n+    /**\n+     * Gets the RestorableSqlDatabasesClient object to access its operations.\n+     *\n+     * @return the RestorableSqlDatabasesClient object.\n+     */\n+    RestorableSqlDatabasesClient getRestorableSqlDatabases();\n+\n+    /**\n+     * Gets the RestorableSqlContainersClient object to access its operations.\n+     *\n+     * @return the RestorableSqlContainersClient object.\n+     */\n+    RestorableSqlContainersClient getRestorableSqlContainers();\n+\n+    /**\n+     * Gets the RestorableSqlResourcesClient object to access its operations.\n+     *\n+     * @return the RestorableSqlResourcesClient object.\n+     */\n+    RestorableSqlResourcesClient getRestorableSqlResources();\n+\n+    /**\n+     * Gets the RestorableMongodbDatabasesClient object to access its operations.\n+     *\n+     * @return the RestorableMongodbDatabasesClient object.\n+     */\n+    RestorableMongodbDatabasesClient getRestorableMongodbDatabases();\n+\n+    /**\n+     * Gets the RestorableMongodbCollectionsClient object to access its operations.\n+     *\n+     * @return the RestorableMongodbCollectionsClient object.\n+     */\n+    RestorableMongodbCollectionsClient getRestorableMongodbCollections();\n+\n+    /**\n+     * Gets the RestorableMongodbResourcesClient object to access its operations.\n+     *\n+     * @return the RestorableMongodbResourcesClient object.\n+     */\n+    RestorableMongodbResourcesClient getRestorableMongodbResources();\n+}"
  },
  {
    "sha": "f8c0119407bd0df3853720566ffa9758996c2dd0",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabaseAccountRegionsClient.java",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabaseAccountRegionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabaseAccountRegionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabaseAccountRegionsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,86 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.MetricInner;\n+\n+/** An instance of this class provides access to all the operations defined in DatabaseAccountRegionsClient. */\n+public interface DatabaseAccountRegionsClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(String resourceGroupName, String accountName, String region, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String region, String filter, Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(String resourceGroupName, String accountName, String region, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String region, String filter, Context context);\n+}"
  },
  {
    "sha": "0799ed1f795415d107bb704b56bb1fc8ed43c0bd",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabaseAccountsClient.java",
    "status": "added",
    "additions": 1536,
    "deletions": 0,
    "changes": 1536,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabaseAccountsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabaseAccountsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabaseAccountsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,1536 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.DatabaseAccountGetResultsInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.DatabaseAccountListConnectionStringsResultInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.DatabaseAccountListKeysResultInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.DatabaseAccountListReadOnlyKeysResultInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.MetricDefinitionInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.MetricInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.UsageInner;\n+import com.azure.resourcemanager.cosmos.generated.models.DatabaseAccountCreateUpdateParameters;\n+import com.azure.resourcemanager.cosmos.generated.models.DatabaseAccountRegenerateKeyParameters;\n+import com.azure.resourcemanager.cosmos.generated.models.DatabaseAccountUpdateParameters;\n+import com.azure.resourcemanager.cosmos.generated.models.FailoverPolicies;\n+import com.azure.resourcemanager.cosmos.generated.models.RegionForOnlineOffline;\n+\n+/** An instance of this class provides access to all the operations defined in DatabaseAccountsClient. */\n+public interface DatabaseAccountsClient {\n+    /**\n+     * Retrieves the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountGetResultsInner get(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Retrieves the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAccountGetResultsInner> getWithResponse(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Updates the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param updateParameters The parameters to provide for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseAccountGetResultsInner>, DatabaseAccountGetResultsInner> beginUpdate(\n+        String resourceGroupName, String accountName, DatabaseAccountUpdateParameters updateParameters);\n+\n+    /**\n+     * Updates the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param updateParameters The parameters to provide for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseAccountGetResultsInner>, DatabaseAccountGetResultsInner> beginUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountUpdateParameters updateParameters,\n+        Context context);\n+\n+    /**\n+     * Updates the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param updateParameters The parameters to provide for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountGetResultsInner update(\n+        String resourceGroupName, String accountName, DatabaseAccountUpdateParameters updateParameters);\n+\n+    /**\n+     * Updates the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param updateParameters The parameters to provide for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountGetResultsInner update(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountUpdateParameters updateParameters,\n+        Context context);\n+\n+    /**\n+     * Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates\n+     * on an account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param createUpdateParameters The parameters to provide for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseAccountGetResultsInner>, DatabaseAccountGetResultsInner> beginCreateOrUpdate(\n+        String resourceGroupName, String accountName, DatabaseAccountCreateUpdateParameters createUpdateParameters);\n+\n+    /**\n+     * Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates\n+     * on an account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param createUpdateParameters The parameters to provide for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseAccountGetResultsInner>, DatabaseAccountGetResultsInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountCreateUpdateParameters createUpdateParameters,\n+        Context context);\n+\n+    /**\n+     * Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates\n+     * on an account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param createUpdateParameters The parameters to provide for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountGetResultsInner createOrUpdate(\n+        String resourceGroupName, String accountName, DatabaseAccountCreateUpdateParameters createUpdateParameters);\n+\n+    /**\n+     * Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates\n+     * on an account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param createUpdateParameters The parameters to provide for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountGetResultsInner createOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountCreateUpdateParameters createUpdateParameters,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Deletes an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Deletes an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Deletes an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a\n+     * write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values\n+     * must be unique for each of the regions in which the database account exists.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param failoverParameters The new failover policies for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginFailoverPriorityChange(\n+        String resourceGroupName, String accountName, FailoverPolicies failoverParameters);\n+\n+    /**\n+     * Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a\n+     * write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values\n+     * must be unique for each of the regions in which the database account exists.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param failoverParameters The new failover policies for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginFailoverPriorityChange(\n+        String resourceGroupName, String accountName, FailoverPolicies failoverParameters, Context context);\n+\n+    /**\n+     * Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a\n+     * write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values\n+     * must be unique for each of the regions in which the database account exists.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param failoverParameters The new failover policies for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void failoverPriorityChange(String resourceGroupName, String accountName, FailoverPolicies failoverParameters);\n+\n+    /**\n+     * Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a\n+     * write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values\n+     * must be unique for each of the regions in which the database account exists.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param failoverParameters The new failover policies for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void failoverPriorityChange(\n+        String resourceGroupName, String accountName, FailoverPolicies failoverParameters, Context context);\n+\n+    /**\n+     * Lists all the Azure Cosmos DB database accounts available under the subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseAccountGetResultsInner> list();\n+\n+    /**\n+     * Lists all the Azure Cosmos DB database accounts available under the subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseAccountGetResultsInner> list(Context context);\n+\n+    /**\n+     * Lists all the Azure Cosmos DB database accounts available under the given resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseAccountGetResultsInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Lists all the Azure Cosmos DB database accounts available under the given resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseAccountGetResultsInner> listByResourceGroup(String resourceGroupName, Context context);\n+\n+    /**\n+     * Lists the access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountListKeysResultInner listKeys(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Lists the access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAccountListKeysResultInner> listKeysWithResponse(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Lists the connection strings for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the connection strings for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountListConnectionStringsResultInner listConnectionStrings(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Lists the connection strings for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the connection strings for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAccountListConnectionStringsResultInner> listConnectionStringsWithResponse(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Offline the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOffline Cosmos DB region to offline for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginOfflineRegion(\n+        String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOffline);\n+\n+    /**\n+     * Offline the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOffline Cosmos DB region to offline for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginOfflineRegion(\n+        String resourceGroupName,\n+        String accountName,\n+        RegionForOnlineOffline regionParameterForOffline,\n+        Context context);\n+\n+    /**\n+     * Offline the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOffline Cosmos DB region to offline for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void offlineRegion(String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOffline);\n+\n+    /**\n+     * Offline the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOffline Cosmos DB region to offline for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void offlineRegion(\n+        String resourceGroupName,\n+        String accountName,\n+        RegionForOnlineOffline regionParameterForOffline,\n+        Context context);\n+\n+    /**\n+     * Online the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOnline Cosmos DB region to online for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginOnlineRegion(\n+        String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOnline);\n+\n+    /**\n+     * Online the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOnline Cosmos DB region to online for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginOnlineRegion(\n+        String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOnline, Context context);\n+\n+    /**\n+     * Online the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOnline Cosmos DB region to online for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void onlineRegion(String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOnline);\n+\n+    /**\n+     * Online the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOnline Cosmos DB region to online for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void onlineRegion(\n+        String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOnline, Context context);\n+\n+    /**\n+     * Lists the read-only access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the read-only access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountListReadOnlyKeysResultInner getReadOnlyKeys(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Lists the read-only access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the read-only access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAccountListReadOnlyKeysResultInner> getReadOnlyKeysWithResponse(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Lists the read-only access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the read-only access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountListReadOnlyKeysResultInner listReadOnlyKeys(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Lists the read-only access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the read-only access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAccountListReadOnlyKeysResultInner> listReadOnlyKeysWithResponse(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Regenerates an access key for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param keyToRegenerate The name of the key to regenerate.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRegenerateKey(\n+        String resourceGroupName, String accountName, DatabaseAccountRegenerateKeyParameters keyToRegenerate);\n+\n+    /**\n+     * Regenerates an access key for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param keyToRegenerate The name of the key to regenerate.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRegenerateKey(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountRegenerateKeyParameters keyToRegenerate,\n+        Context context);\n+\n+    /**\n+     * Regenerates an access key for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param keyToRegenerate The name of the key to regenerate.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void regenerateKey(\n+        String resourceGroupName, String accountName, DatabaseAccountRegenerateKeyParameters keyToRegenerate);\n+\n+    /**\n+     * Regenerates an access key for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param keyToRegenerate The name of the key to regenerate.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void regenerateKey(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountRegenerateKeyParameters keyToRegenerate,\n+        Context context);\n+\n+    /**\n+     * Checks that the Azure Cosmos DB account name already exists. A valid account name may contain only lowercase\n+     * letters, numbers, and the '-' character, and must be between 3 and 50 characters.\n+     *\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return whether resource exists.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    boolean checkNameExists(String accountName);\n+\n+    /**\n+     * Checks that the Azure Cosmos DB account name already exists. A valid account name may contain only lowercase\n+     * letters, numbers, and the '-' character, and must be between 3 and 50 characters.\n+     *\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<Boolean> checkNameExistsWithResponse(String accountName, Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(String resourceGroupName, String accountName, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String filter, Context context);\n+\n+    /**\n+     * Retrieves the usages (most recent data) for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Retrieves the usages (most recent data) for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param filter An OData filter expression that describes a subset of usages to return. The supported parameter is\n+     *     name.value (name of the metric, can have an or of multiple names).\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(String resourceGroupName, String accountName, String filter, Context context);\n+\n+    /**\n+     * Retrieves metric definitions for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Retrieves metric definitions for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Retrieves the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountGetResultsInner get(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Retrieves the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAccountGetResultsInner> getWithResponse(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Updates the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param updateParameters The parameters to provide for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseAccountGetResultsInner>, DatabaseAccountGetResultsInner> beginUpdate(\n+        String resourceGroupName, String accountName, DatabaseAccountUpdateParameters updateParameters);\n+\n+    /**\n+     * Updates the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param updateParameters The parameters to provide for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseAccountGetResultsInner>, DatabaseAccountGetResultsInner> beginUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountUpdateParameters updateParameters,\n+        Context context);\n+\n+    /**\n+     * Updates the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param updateParameters The parameters to provide for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountGetResultsInner update(\n+        String resourceGroupName, String accountName, DatabaseAccountUpdateParameters updateParameters);\n+\n+    /**\n+     * Updates the properties of an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param updateParameters The parameters to provide for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountGetResultsInner update(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountUpdateParameters updateParameters,\n+        Context context);\n+\n+    /**\n+     * Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates\n+     * on an account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param createUpdateParameters The parameters to provide for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseAccountGetResultsInner>, DatabaseAccountGetResultsInner> beginCreateOrUpdate(\n+        String resourceGroupName, String accountName, DatabaseAccountCreateUpdateParameters createUpdateParameters);\n+\n+    /**\n+     * Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates\n+     * on an account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param createUpdateParameters The parameters to provide for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<DatabaseAccountGetResultsInner>, DatabaseAccountGetResultsInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountCreateUpdateParameters createUpdateParameters,\n+        Context context);\n+\n+    /**\n+     * Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates\n+     * on an account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param createUpdateParameters The parameters to provide for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountGetResultsInner createOrUpdate(\n+        String resourceGroupName, String accountName, DatabaseAccountCreateUpdateParameters createUpdateParameters);\n+\n+    /**\n+     * Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates\n+     * on an account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param createUpdateParameters The parameters to provide for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return an Azure Cosmos DB database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountGetResultsInner createOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountCreateUpdateParameters createUpdateParameters,\n+        Context context);\n+\n+    /**\n+     * Deletes an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Deletes an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Deletes an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Deletes an existing Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a\n+     * write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values\n+     * must be unique for each of the regions in which the database account exists.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param failoverParameters The new failover policies for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginFailoverPriorityChange(\n+        String resourceGroupName, String accountName, FailoverPolicies failoverParameters);\n+\n+    /**\n+     * Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a\n+     * write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values\n+     * must be unique for each of the regions in which the database account exists.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param failoverParameters The new failover policies for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginFailoverPriorityChange(\n+        String resourceGroupName, String accountName, FailoverPolicies failoverParameters, Context context);\n+\n+    /**\n+     * Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a\n+     * write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values\n+     * must be unique for each of the regions in which the database account exists.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param failoverParameters The new failover policies for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void failoverPriorityChange(String resourceGroupName, String accountName, FailoverPolicies failoverParameters);\n+\n+    /**\n+     * Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a\n+     * write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values\n+     * must be unique for each of the regions in which the database account exists.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param failoverParameters The new failover policies for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void failoverPriorityChange(\n+        String resourceGroupName, String accountName, FailoverPolicies failoverParameters, Context context);\n+\n+    /**\n+     * Lists all the Azure Cosmos DB database accounts available under the subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseAccountGetResultsInner> list();\n+\n+    /**\n+     * Lists all the Azure Cosmos DB database accounts available under the subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseAccountGetResultsInner> list(Context context);\n+\n+    /**\n+     * Lists all the Azure Cosmos DB database accounts available under the given resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseAccountGetResultsInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * Lists all the Azure Cosmos DB database accounts available under the given resource group.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DatabaseAccountGetResultsInner> listByResourceGroup(String resourceGroupName, Context context);\n+\n+    /**\n+     * Lists the access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountListKeysResultInner listKeys(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Lists the access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAccountListKeysResultInner> listKeysWithResponse(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Lists the connection strings for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the connection strings for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountListConnectionStringsResultInner listConnectionStrings(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Lists the connection strings for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the connection strings for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAccountListConnectionStringsResultInner> listConnectionStringsWithResponse(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Offline the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOffline Cosmos DB region to offline for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginOfflineRegion(\n+        String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOffline);\n+\n+    /**\n+     * Offline the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOffline Cosmos DB region to offline for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginOfflineRegion(\n+        String resourceGroupName,\n+        String accountName,\n+        RegionForOnlineOffline regionParameterForOffline,\n+        Context context);\n+\n+    /**\n+     * Offline the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOffline Cosmos DB region to offline for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void offlineRegion(String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOffline);\n+\n+    /**\n+     * Offline the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOffline Cosmos DB region to offline for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void offlineRegion(\n+        String resourceGroupName,\n+        String accountName,\n+        RegionForOnlineOffline regionParameterForOffline,\n+        Context context);\n+\n+    /**\n+     * Online the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOnline Cosmos DB region to online for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginOnlineRegion(\n+        String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOnline);\n+\n+    /**\n+     * Online the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOnline Cosmos DB region to online for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginOnlineRegion(\n+        String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOnline, Context context);\n+\n+    /**\n+     * Online the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOnline Cosmos DB region to online for the database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void onlineRegion(String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOnline);\n+\n+    /**\n+     * Online the specified region for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param regionParameterForOnline Cosmos DB region to online for the database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void onlineRegion(\n+        String resourceGroupName, String accountName, RegionForOnlineOffline regionParameterForOnline, Context context);\n+\n+    /**\n+     * Lists the read-only access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the read-only access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountListReadOnlyKeysResultInner getReadOnlyKeys(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Lists the read-only access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the read-only access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAccountListReadOnlyKeysResultInner> getReadOnlyKeysWithResponse(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Lists the read-only access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the read-only access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DatabaseAccountListReadOnlyKeysResultInner listReadOnlyKeys(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Lists the read-only access keys for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the read-only access keys for the given database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DatabaseAccountListReadOnlyKeysResultInner> listReadOnlyKeysWithResponse(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Regenerates an access key for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param keyToRegenerate The name of the key to regenerate.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRegenerateKey(\n+        String resourceGroupName, String accountName, DatabaseAccountRegenerateKeyParameters keyToRegenerate);\n+\n+    /**\n+     * Regenerates an access key for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param keyToRegenerate The name of the key to regenerate.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRegenerateKey(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountRegenerateKeyParameters keyToRegenerate,\n+        Context context);\n+\n+    /**\n+     * Regenerates an access key for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param keyToRegenerate The name of the key to regenerate.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void regenerateKey(\n+        String resourceGroupName, String accountName, DatabaseAccountRegenerateKeyParameters keyToRegenerate);\n+\n+    /**\n+     * Regenerates an access key for the specified Azure Cosmos DB database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param keyToRegenerate The name of the key to regenerate.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void regenerateKey(\n+        String resourceGroupName,\n+        String accountName,\n+        DatabaseAccountRegenerateKeyParameters keyToRegenerate,\n+        Context context);\n+\n+    /**\n+     * Checks that the Azure Cosmos DB account name already exists. A valid account name may contain only lowercase\n+     * letters, numbers, and the '-' character, and must be between 3 and 50 characters.\n+     *\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return whether resource exists.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    boolean checkNameExists(String accountName);\n+\n+    /**\n+     * Checks that the Azure Cosmos DB account name already exists. A valid account name may contain only lowercase\n+     * letters, numbers, and the '-' character, and must be between 3 and 50 characters.\n+     *\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<Boolean> checkNameExistsWithResponse(String accountName, Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(String resourceGroupName, String accountName, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String filter, Context context);\n+\n+    /**\n+     * Retrieves the usages (most recent data) for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Retrieves the usages (most recent data) for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param filter An OData filter expression that describes a subset of usages to return. The supported parameter is\n+     *     name.value (name of the metric, can have an or of multiple names).\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(String resourceGroupName, String accountName, String filter, Context context);\n+\n+    /**\n+     * Retrieves metric definitions for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Retrieves metric definitions for the given database account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String accountName, Context context);\n+}"
  },
  {
    "sha": "6f091ea87795898a945942b3f199458a69e4618f",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabasesClient.java",
    "status": "added",
    "additions": 216,
    "deletions": 0,
    "changes": 216,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabasesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabasesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/DatabasesClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,216 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.MetricDefinitionInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.MetricInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.UsageInner;\n+\n+/** An instance of this class provides access to all the operations defined in DatabasesClient. */\n+public interface DatabasesClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String databaseRid, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String databaseRid, String filter, Context context);\n+\n+    /**\n+     * Retrieves the usages (most recent data) for the given database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(String resourceGroupName, String accountName, String databaseRid);\n+\n+    /**\n+     * Retrieves the usages (most recent data) for the given database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param filter An OData filter expression that describes a subset of usages to return. The supported parameter is\n+     *     name.value (name of the metric, can have an or of multiple names).\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(\n+        String resourceGroupName, String accountName, String databaseRid, String filter, Context context);\n+\n+    /**\n+     * Retrieves metric definitions for the given database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String accountName, String databaseRid);\n+\n+    /**\n+     * Retrieves metric definitions for the given database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String accountName, String databaseRid, Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String databaseRid, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account and database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String databaseRid, String filter, Context context);\n+\n+    /**\n+     * Retrieves the usages (most recent data) for the given database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(String resourceGroupName, String accountName, String databaseRid);\n+\n+    /**\n+     * Retrieves the usages (most recent data) for the given database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param filter An OData filter expression that describes a subset of usages to return. The supported parameter is\n+     *     name.value (name of the metric, can have an or of multiple names).\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list usage request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<UsageInner> listUsages(\n+        String resourceGroupName, String accountName, String databaseRid, String filter, Context context);\n+\n+    /**\n+     * Retrieves metric definitions for the given database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String accountName, String databaseRid);\n+\n+    /**\n+     * Retrieves metric definitions for the given database.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list metric definitions request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<MetricDefinitionInner> listMetricDefinitions(\n+        String resourceGroupName, String accountName, String databaseRid, Context context);\n+}"
  },
  {
    "sha": "06aef599f7bf6a020157c8200b0aa99190b9a41e",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/GremlinResourcesClient.java",
    "status": "added",
    "additions": 1864,
    "deletions": 0,
    "changes": 1864,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/GremlinResourcesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/GremlinResourcesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/GremlinResourcesClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696"
  },
  {
    "sha": "76ce59c4039b36c1b86c39be2e9db774c9459509",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/MongoDBResourcesClient.java",
    "status": "added",
    "additions": 1886,
    "deletions": 0,
    "changes": 1886,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/MongoDBResourcesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/MongoDBResourcesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/MongoDBResourcesClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696"
  },
  {
    "sha": "ab16759c78442fc7b274af2363dcb417ac12e4fa",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/NotebookWorkspacesClient.java",
    "status": "added",
    "additions": 714,
    "deletions": 0,
    "changes": 714,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/NotebookWorkspacesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/NotebookWorkspacesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/NotebookWorkspacesClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,714 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.NotebookWorkspaceConnectionInfoResultInner;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.NotebookWorkspaceInner;\n+import com.azure.resourcemanager.cosmos.generated.models.NotebookWorkspaceCreateUpdateParameters;\n+import com.azure.resourcemanager.cosmos.generated.models.NotebookWorkspaceName;\n+\n+/** An instance of this class provides access to all the operations defined in NotebookWorkspacesClient. */\n+public interface NotebookWorkspacesClient {\n+    /**\n+     * Gets the notebook workspace resources of an existing Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the notebook workspace resources of an existing Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<NotebookWorkspaceInner> listByDatabaseAccount(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Gets the notebook workspace resources of an existing Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the notebook workspace resources of an existing Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<NotebookWorkspaceInner> listByDatabaseAccount(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Gets the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the notebook workspace for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    NotebookWorkspaceInner get(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Gets the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the notebook workspace for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<NotebookWorkspaceInner> getWithResponse(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Creates the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param notebookCreateUpdateParameters The notebook workspace to create for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a notebook workspace resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<NotebookWorkspaceInner>, NotebookWorkspaceInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        NotebookWorkspaceName notebookWorkspaceName,\n+        NotebookWorkspaceCreateUpdateParameters notebookCreateUpdateParameters);\n+\n+    /**\n+     * Creates the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param notebookCreateUpdateParameters The notebook workspace to create for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a notebook workspace resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<NotebookWorkspaceInner>, NotebookWorkspaceInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        NotebookWorkspaceName notebookWorkspaceName,\n+        NotebookWorkspaceCreateUpdateParameters notebookCreateUpdateParameters,\n+        Context context);\n+\n+    /**\n+     * Creates the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param notebookCreateUpdateParameters The notebook workspace to create for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a notebook workspace resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    NotebookWorkspaceInner createOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        NotebookWorkspaceName notebookWorkspaceName,\n+        NotebookWorkspaceCreateUpdateParameters notebookCreateUpdateParameters);\n+\n+    /**\n+     * Creates the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param notebookCreateUpdateParameters The notebook workspace to create for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a notebook workspace resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    NotebookWorkspaceInner createOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        NotebookWorkspaceName notebookWorkspaceName,\n+        NotebookWorkspaceCreateUpdateParameters notebookCreateUpdateParameters,\n+        Context context);\n+\n+    /**\n+     * Deletes the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Deletes the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Deletes the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Deletes the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Retrieves the connection info for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the connection info for the given notebook workspace.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    NotebookWorkspaceConnectionInfoResultInner listConnectionInfo(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Retrieves the connection info for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the connection info for the given notebook workspace.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<NotebookWorkspaceConnectionInfoResultInner> listConnectionInfoWithResponse(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Regenerates the auth token for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRegenerateAuthToken(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Regenerates the auth token for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRegenerateAuthToken(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Regenerates the auth token for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void regenerateAuthToken(String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Regenerates the auth token for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void regenerateAuthToken(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Starts the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStart(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Starts the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStart(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Starts the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void start(String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Starts the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void start(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Gets the notebook workspace resources of an existing Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the notebook workspace resources of an existing Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<NotebookWorkspaceInner> listByDatabaseAccount(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Gets the notebook workspace resources of an existing Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the notebook workspace resources of an existing Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<NotebookWorkspaceInner> listByDatabaseAccount(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Gets the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the notebook workspace for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    NotebookWorkspaceInner get(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Gets the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the notebook workspace for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<NotebookWorkspaceInner> getWithResponse(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Creates the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param notebookCreateUpdateParameters The notebook workspace to create for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a notebook workspace resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<NotebookWorkspaceInner>, NotebookWorkspaceInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        NotebookWorkspaceName notebookWorkspaceName,\n+        NotebookWorkspaceCreateUpdateParameters notebookCreateUpdateParameters);\n+\n+    /**\n+     * Creates the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param notebookCreateUpdateParameters The notebook workspace to create for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a notebook workspace resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<NotebookWorkspaceInner>, NotebookWorkspaceInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        NotebookWorkspaceName notebookWorkspaceName,\n+        NotebookWorkspaceCreateUpdateParameters notebookCreateUpdateParameters,\n+        Context context);\n+\n+    /**\n+     * Creates the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param notebookCreateUpdateParameters The notebook workspace to create for the current database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a notebook workspace resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    NotebookWorkspaceInner createOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        NotebookWorkspaceName notebookWorkspaceName,\n+        NotebookWorkspaceCreateUpdateParameters notebookCreateUpdateParameters);\n+\n+    /**\n+     * Creates the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param notebookCreateUpdateParameters The notebook workspace to create for the current database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a notebook workspace resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    NotebookWorkspaceInner createOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        NotebookWorkspaceName notebookWorkspaceName,\n+        NotebookWorkspaceCreateUpdateParameters notebookCreateUpdateParameters,\n+        Context context);\n+\n+    /**\n+     * Deletes the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Deletes the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Deletes the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Deletes the notebook workspace for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Retrieves the connection info for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the connection info for the given notebook workspace.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    NotebookWorkspaceConnectionInfoResultInner listConnectionInfo(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Retrieves the connection info for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the connection info for the given notebook workspace.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<NotebookWorkspaceConnectionInfoResultInner> listConnectionInfoWithResponse(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Regenerates the auth token for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRegenerateAuthToken(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Regenerates the auth token for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginRegenerateAuthToken(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Regenerates the auth token for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void regenerateAuthToken(String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Regenerates the auth token for the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void regenerateAuthToken(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Starts the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStart(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Starts the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginStart(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+\n+    /**\n+     * Starts the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void start(String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName);\n+\n+    /**\n+     * Starts the notebook workspace.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param notebookWorkspaceName The name of the notebook workspace resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void start(\n+        String resourceGroupName, String accountName, NotebookWorkspaceName notebookWorkspaceName, Context context);\n+}"
  },
  {
    "sha": "c78dc7924cb061dfae17b9979fdec7e747aee53b",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/OperationsClient.java",
    "status": "added",
    "additions": 58,
    "deletions": 0,
    "changes": 58,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/OperationsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/OperationsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/OperationsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,58 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.OperationInner;\n+\n+/** An instance of this class provides access to all the operations defined in OperationsClient. */\n+public interface OperationsClient {\n+    /**\n+     * Lists all of the available Cosmos DB Resource Provider operations.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Resource Provider operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OperationInner> list();\n+\n+    /**\n+     * Lists all of the available Cosmos DB Resource Provider operations.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Resource Provider operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OperationInner> list(Context context);\n+\n+    /**\n+     * Lists all of the available Cosmos DB Resource Provider operations.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Resource Provider operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OperationInner> list();\n+\n+    /**\n+     * Lists all of the available Cosmos DB Resource Provider operations.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Resource Provider operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OperationInner> list(Context context);\n+}"
  },
  {
    "sha": "9abc8af7ea83d96174b631f91488a972309a5981",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PartitionKeyRangeIdRegionsClient.java",
    "status": "added",
    "additions": 126,
    "deletions": 0,
    "changes": 126,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PartitionKeyRangeIdRegionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PartitionKeyRangeIdRegionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PartitionKeyRangeIdRegionsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,126 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.PartitionMetricInner;\n+\n+/** An instance of this class provides access to all the operations defined in PartitionKeyRangeIdRegionsClient. */\n+public interface PartitionKeyRangeIdRegionsClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given partition key range id and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param partitionKeyRangeId Partition Key Range Id for which to get data.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String partitionKeyRangeId,\n+        String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given partition key range id and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param partitionKeyRangeId Partition Key Range Id for which to get data.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String partitionKeyRangeId,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given partition key range id and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param partitionKeyRangeId Partition Key Range Id for which to get data.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String partitionKeyRangeId,\n+        String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given partition key range id and region.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param region Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param partitionKeyRangeId Partition Key Range Id for which to get data.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String region,\n+        String databaseRid,\n+        String collectionRid,\n+        String partitionKeyRangeId,\n+        String filter,\n+        Context context);\n+}"
  },
  {
    "sha": "33ef55dfd7f64d76cbde2e136362d840794d0907",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PartitionKeyRangeIdsClient.java",
    "status": "added",
    "additions": 118,
    "deletions": 0,
    "changes": 118,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PartitionKeyRangeIdsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PartitionKeyRangeIdsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PartitionKeyRangeIdsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,118 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.PartitionMetricInner;\n+\n+/** An instance of this class provides access to all the operations defined in PartitionKeyRangeIdsClient. */\n+public interface PartitionKeyRangeIdsClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given partition key range id.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param partitionKeyRangeId Partition Key Range Id for which to get data.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String partitionKeyRangeId,\n+        String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given partition key range id.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param partitionKeyRangeId Partition Key Range Id for which to get data.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String partitionKeyRangeId,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given partition key range id.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param partitionKeyRangeId Partition Key Range Id for which to get data.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String partitionKeyRangeId,\n+        String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given partition key range id.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param databaseRid Cosmos DB database rid.\n+     * @param collectionRid Cosmos DB collection rid.\n+     * @param partitionKeyRangeId Partition Key Range Id for which to get data.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list partition metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PartitionMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String databaseRid,\n+        String collectionRid,\n+        String partitionKeyRangeId,\n+        String filter,\n+        Context context);\n+}"
  },
  {
    "sha": "36b6d55c0f58ad9335eb552a02cdd6e54eaa1110",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentileSourceTargetsClient.java",
    "status": "added",
    "additions": 114,
    "deletions": 0,
    "changes": 114,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentileSourceTargetsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentileSourceTargetsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentileSourceTargetsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,114 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.PercentileMetricInner;\n+\n+/** An instance of this class provides access to all the operations defined in PercentileSourceTargetsClient. */\n+public interface PercentileSourceTargetsClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given account, source and target region. This url is\n+     * only for PBS and Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param sourceRegion Source region from which data is written. Cosmos DB region, with spaces between words and\n+     *     each word capitalized.\n+     * @param targetRegion Target region to which data is written. Cosmos DB region, with spaces between words and each\n+     *     word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String sourceRegion, String targetRegion, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given account, source and target region. This url is\n+     * only for PBS and Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param sourceRegion Source region from which data is written. Cosmos DB region, with spaces between words and\n+     *     each word capitalized.\n+     * @param targetRegion Target region to which data is written. Cosmos DB region, with spaces between words and each\n+     *     word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String sourceRegion,\n+        String targetRegion,\n+        String filter,\n+        Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given account, source and target region. This url is\n+     * only for PBS and Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param sourceRegion Source region from which data is written. Cosmos DB region, with spaces between words and\n+     *     each word capitalized.\n+     * @param targetRegion Target region to which data is written. Cosmos DB region, with spaces between words and each\n+     *     word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String sourceRegion, String targetRegion, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given account, source and target region. This url is\n+     * only for PBS and Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param sourceRegion Source region from which data is written. Cosmos DB region, with spaces between words and\n+     *     each word capitalized.\n+     * @param targetRegion Target region to which data is written. Cosmos DB region, with spaces between words and each\n+     *     word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(\n+        String resourceGroupName,\n+        String accountName,\n+        String sourceRegion,\n+        String targetRegion,\n+        String filter,\n+        Context context);\n+}"
  },
  {
    "sha": "aa8edaab1fc7e46b17b840d96d0c3e0d83de0906",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentileTargetsClient.java",
    "status": "added",
    "additions": 96,
    "deletions": 0,
    "changes": 96,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentileTargetsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentileTargetsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentileTargetsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,96 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.PercentileMetricInner;\n+\n+/** An instance of this class provides access to all the operations defined in PercentileTargetsClient. */\n+public interface PercentileTargetsClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given account target region. This url is only for\n+     * PBS and Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param targetRegion Target region to which data is written. Cosmos DB region, with spaces between words and each\n+     *     word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String targetRegion, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given account target region. This url is only for\n+     * PBS and Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param targetRegion Target region to which data is written. Cosmos DB region, with spaces between words and each\n+     *     word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String targetRegion, String filter, Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given account target region. This url is only for\n+     * PBS and Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param targetRegion Target region to which data is written. Cosmos DB region, with spaces between words and each\n+     *     word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String targetRegion, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given account target region. This url is only for\n+     * PBS and Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param targetRegion Target region to which data is written. Cosmos DB region, with spaces between words and each\n+     *     word capitalized.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String targetRegion, String filter, Context context);\n+}"
  },
  {
    "sha": "89b3397f9651cfd0a4f709377833bdfd755789d5",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentilesClient.java",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentilesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentilesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PercentilesClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,86 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.PercentileMetricInner;\n+\n+/** An instance of this class provides access to all the operations defined in PercentilesClient. */\n+public interface PercentilesClient {\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account. This url is only for PBS and\n+     * Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(String resourceGroupName, String accountName, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account. This url is only for PBS and\n+     * Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String filter, Context context);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account. This url is only for PBS and\n+     * Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(String resourceGroupName, String accountName, String filter);\n+\n+    /**\n+     * Retrieves the metrics determined by the given filter for the given database account. This url is only for PBS and\n+     * Replication Latency data.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param filter An OData filter expression that describes a subset of metrics to return. The parameters that can be\n+     *     filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and\n+     *     timeGrain. The supported operator is eq.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response to a list percentile metrics request.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PercentileMetricInner> listMetrics(\n+        String resourceGroupName, String accountName, String filter, Context context);\n+}"
  },
  {
    "sha": "a1713e102bc0b79cfb0463ca0863dacb87bc440c",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PrivateEndpointConnectionsClient.java",
    "status": "added",
    "additions": 411,
    "deletions": 0,
    "changes": 411,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PrivateEndpointConnectionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PrivateEndpointConnectionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PrivateEndpointConnectionsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,411 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.PrivateEndpointConnectionInner;\n+\n+/** An instance of this class provides access to all the operations defined in PrivateEndpointConnectionsClient. */\n+public interface PrivateEndpointConnectionsClient {\n+    /**\n+     * List all private endpoint connections on a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of private endpoint connections.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PrivateEndpointConnectionInner> listByDatabaseAccount(String resourceGroupName, String accountName);\n+\n+    /**\n+     * List all private endpoint connections on a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of private endpoint connections.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PrivateEndpointConnectionInner> listByDatabaseAccount(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Gets a private endpoint connection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateEndpointConnectionInner get(\n+        String resourceGroupName, String accountName, String privateEndpointConnectionName);\n+\n+    /**\n+     * Gets a private endpoint connection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<PrivateEndpointConnectionInner> getWithResponse(\n+        String resourceGroupName, String accountName, String privateEndpointConnectionName, Context context);\n+\n+    /**\n+     * Approve or reject a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param parameters A private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<PrivateEndpointConnectionInner>, PrivateEndpointConnectionInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        String privateEndpointConnectionName,\n+        PrivateEndpointConnectionInner parameters);\n+\n+    /**\n+     * Approve or reject a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param parameters A private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<PrivateEndpointConnectionInner>, PrivateEndpointConnectionInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        String privateEndpointConnectionName,\n+        PrivateEndpointConnectionInner parameters,\n+        Context context);\n+\n+    /**\n+     * Approve or reject a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param parameters A private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateEndpointConnectionInner createOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        String privateEndpointConnectionName,\n+        PrivateEndpointConnectionInner parameters);\n+\n+    /**\n+     * Approve or reject a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param parameters A private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateEndpointConnectionInner createOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        String privateEndpointConnectionName,\n+        PrivateEndpointConnectionInner parameters,\n+        Context context);\n+\n+    /**\n+     * Deletes a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String accountName, String privateEndpointConnectionName);\n+\n+    /**\n+     * Deletes a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String accountName, String privateEndpointConnectionName, Context context);\n+\n+    /**\n+     * Deletes a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String accountName, String privateEndpointConnectionName);\n+\n+    /**\n+     * Deletes a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String accountName, String privateEndpointConnectionName, Context context);\n+\n+    /**\n+     * List all private endpoint connections on a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of private endpoint connections.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PrivateEndpointConnectionInner> listByDatabaseAccount(String resourceGroupName, String accountName);\n+\n+    /**\n+     * List all private endpoint connections on a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a list of private endpoint connections.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PrivateEndpointConnectionInner> listByDatabaseAccount(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Gets a private endpoint connection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateEndpointConnectionInner get(\n+        String resourceGroupName, String accountName, String privateEndpointConnectionName);\n+\n+    /**\n+     * Gets a private endpoint connection.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<PrivateEndpointConnectionInner> getWithResponse(\n+        String resourceGroupName, String accountName, String privateEndpointConnectionName, Context context);\n+\n+    /**\n+     * Approve or reject a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param parameters A private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<PrivateEndpointConnectionInner>, PrivateEndpointConnectionInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        String privateEndpointConnectionName,\n+        PrivateEndpointConnectionInner parameters);\n+\n+    /**\n+     * Approve or reject a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param parameters A private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<PrivateEndpointConnectionInner>, PrivateEndpointConnectionInner> beginCreateOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        String privateEndpointConnectionName,\n+        PrivateEndpointConnectionInner parameters,\n+        Context context);\n+\n+    /**\n+     * Approve or reject a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param parameters A private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateEndpointConnectionInner createOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        String privateEndpointConnectionName,\n+        PrivateEndpointConnectionInner parameters);\n+\n+    /**\n+     * Approve or reject a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param parameters A private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a private endpoint connection.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateEndpointConnectionInner createOrUpdate(\n+        String resourceGroupName,\n+        String accountName,\n+        String privateEndpointConnectionName,\n+        PrivateEndpointConnectionInner parameters,\n+        Context context);\n+\n+    /**\n+     * Deletes a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String accountName, String privateEndpointConnectionName);\n+\n+    /**\n+     * Deletes a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginDelete(\n+        String resourceGroupName, String accountName, String privateEndpointConnectionName, Context context);\n+\n+    /**\n+     * Deletes a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String accountName, String privateEndpointConnectionName);\n+\n+    /**\n+     * Deletes a private endpoint connection with a given name.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param privateEndpointConnectionName The name of the private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String accountName, String privateEndpointConnectionName, Context context);\n+}"
  },
  {
    "sha": "ed22362bcd30f10a11008f4c11f6de1cb80c0c5e",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PrivateLinkResourcesClient.java",
    "status": "added",
    "additions": 131,
    "deletions": 0,
    "changes": 131,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PrivateLinkResourcesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PrivateLinkResourcesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/PrivateLinkResourcesClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,131 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.PrivateLinkResourceInner;\n+\n+/** An instance of this class provides access to all the operations defined in PrivateLinkResourcesClient. */\n+public interface PrivateLinkResourcesClient {\n+    /**\n+     * Gets the private link resources that need to be created for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the private link resources that need to be created for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PrivateLinkResourceInner> listByDatabaseAccount(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Gets the private link resources that need to be created for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the private link resources that need to be created for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PrivateLinkResourceInner> listByDatabaseAccount(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Gets the private link resources that need to be created for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param groupName The name of the private link resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the private link resources that need to be created for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateLinkResourceInner get(String resourceGroupName, String accountName, String groupName);\n+\n+    /**\n+     * Gets the private link resources that need to be created for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param groupName The name of the private link resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the private link resources that need to be created for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<PrivateLinkResourceInner> getWithResponse(\n+        String resourceGroupName, String accountName, String groupName, Context context);\n+\n+    /**\n+     * Gets the private link resources that need to be created for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the private link resources that need to be created for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PrivateLinkResourceInner> listByDatabaseAccount(String resourceGroupName, String accountName);\n+\n+    /**\n+     * Gets the private link resources that need to be created for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the private link resources that need to be created for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<PrivateLinkResourceInner> listByDatabaseAccount(\n+        String resourceGroupName, String accountName, Context context);\n+\n+    /**\n+     * Gets the private link resources that need to be created for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param groupName The name of the private link resource.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the private link resources that need to be created for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateLinkResourceInner get(String resourceGroupName, String accountName, String groupName);\n+\n+    /**\n+     * Gets the private link resources that need to be created for a Cosmos DB account.\n+     *\n+     * @param resourceGroupName The name of the resource group. The name is case insensitive.\n+     * @param accountName Cosmos DB database account name.\n+     * @param groupName The name of the private link resource.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the private link resources that need to be created for a Cosmos DB account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<PrivateLinkResourceInner> getWithResponse(\n+        String resourceGroupName, String accountName, String groupName, Context context);\n+}"
  },
  {
    "sha": "1548d0857fd22e3bbd9bd360bf4782013fa3487f",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableDatabaseAccountsClient.java",
    "status": "added",
    "additions": 177,
    "deletions": 0,
    "changes": 177,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableDatabaseAccountsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableDatabaseAccountsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableDatabaseAccountsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,177 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.RestorableDatabaseAccountGetResultInner;\n+\n+/** An instance of this class provides access to all the operations defined in RestorableDatabaseAccountsClient. */\n+public interface RestorableDatabaseAccountsClient {\n+    /**\n+     * Lists all the restorable Azure Cosmos DB database accounts available under the subscription and in a region. This\n+     * call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the restorable database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableDatabaseAccountGetResultInner> listByLocation(String location);\n+\n+    /**\n+     * Lists all the restorable Azure Cosmos DB database accounts available under the subscription and in a region. This\n+     * call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the restorable database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableDatabaseAccountGetResultInner> listByLocation(String location, Context context);\n+\n+    /**\n+     * Lists all the restorable Azure Cosmos DB database accounts available under the subscription. This call requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the restorable database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableDatabaseAccountGetResultInner> list();\n+\n+    /**\n+     * Lists all the restorable Azure Cosmos DB database accounts available under the subscription. This call requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the restorable database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableDatabaseAccountGetResultInner> list(Context context);\n+\n+    /**\n+     * Retrieves the properties of an existing Azure Cosmos DB restorable database account. This call requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read/*' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a Azure Cosmos DB restorable database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RestorableDatabaseAccountGetResultInner getByLocation(String location, String instanceId);\n+\n+    /**\n+     * Retrieves the properties of an existing Azure Cosmos DB restorable database account. This call requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read/*' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a Azure Cosmos DB restorable database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<RestorableDatabaseAccountGetResultInner> getByLocationWithResponse(\n+        String location, String instanceId, Context context);\n+\n+    /**\n+     * Lists all the restorable Azure Cosmos DB database accounts available under the subscription and in a region. This\n+     * call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the restorable database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableDatabaseAccountGetResultInner> listByLocation(String location);\n+\n+    /**\n+     * Lists all the restorable Azure Cosmos DB database accounts available under the subscription and in a region. This\n+     * call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the restorable database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableDatabaseAccountGetResultInner> listByLocation(String location, Context context);\n+\n+    /**\n+     * Lists all the restorable Azure Cosmos DB database accounts available under the subscription. This call requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the restorable database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableDatabaseAccountGetResultInner> list();\n+\n+    /**\n+     * Lists all the restorable Azure Cosmos DB database accounts available under the subscription. This call requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the restorable database accounts and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableDatabaseAccountGetResultInner> list(Context context);\n+\n+    /**\n+     * Retrieves the properties of an existing Azure Cosmos DB restorable database account. This call requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read/*' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a Azure Cosmos DB restorable database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    RestorableDatabaseAccountGetResultInner getByLocation(String location, String instanceId);\n+\n+    /**\n+     * Retrieves the properties of an existing Azure Cosmos DB restorable database account. This call requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read/*' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return a Azure Cosmos DB restorable database account.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<RestorableDatabaseAccountGetResultInner> getByLocationWithResponse(\n+        String location, String instanceId, Context context);\n+}"
  },
  {
    "sha": "84f6b286b6b4bb846ec04eb8b7fe904637aa9122",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableMongodbCollectionsClient.java",
    "status": "added",
    "additions": 80,
    "deletions": 0,
    "changes": 80,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableMongodbCollectionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableMongodbCollectionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableMongodbCollectionsClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,80 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.RestorableMongodbCollectionGetResultInner;\n+\n+/** An instance of this class provides access to all the operations defined in RestorableMongodbCollectionsClient. */\n+public interface RestorableMongodbCollectionsClient {\n+    /**\n+     * Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB collections under a specific\n+     * database. This helps in scenario where container was accidentally deleted. This API requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the MongoDB collection events and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableMongodbCollectionGetResultInner> list(String location, String instanceId);\n+\n+    /**\n+     * Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB collections under a specific\n+     * database. This helps in scenario where container was accidentally deleted. This API requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @param restorableMongodbDatabaseRid The resource ID of the MongoDB database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the MongoDB collection events and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableMongodbCollectionGetResultInner> list(\n+        String location, String instanceId, String restorableMongodbDatabaseRid, Context context);\n+\n+    /**\n+     * Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB collections under a specific\n+     * database. This helps in scenario where container was accidentally deleted. This API requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the MongoDB collection events and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableMongodbCollectionGetResultInner> list(String location, String instanceId);\n+\n+    /**\n+     * Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB collections under a specific\n+     * database. This helps in scenario where container was accidentally deleted. This API requires\n+     * 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @param restorableMongodbDatabaseRid The resource ID of the MongoDB database.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the MongoDB collection events and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableMongodbCollectionGetResultInner> list(\n+        String location, String instanceId, String restorableMongodbDatabaseRid, Context context);\n+}"
  },
  {
    "sha": "2d9b5ea56c3c1aae6f27a5724f30c34febdc820f",
    "filename": "sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableMongodbDatabasesClient.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableMongodbDatabasesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/7d54f0d3641c347b73bebfe584e894aafeea1696/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableMongodbDatabasesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/cosmos/azure-resourcemanager-cosmos-generated/src/main/java/com/azure/resourcemanager/cosmos/generated/fluent/RestorableMongodbDatabasesClient.java?ref=7d54f0d3641c347b73bebfe584e894aafeea1696",
    "patch": "@@ -0,0 +1,76 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.cosmos.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.cosmos.generated.fluent.models.RestorableMongodbDatabaseGetResultInner;\n+\n+/** An instance of this class provides access to all the operations defined in RestorableMongodbDatabasesClient. */\n+public interface RestorableMongodbDatabasesClient {\n+    /**\n+     * Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB databases under the restorable\n+     * account. This helps in scenario where database was accidentally deleted to get the deletion time. This API\n+     * requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the MongoDB database events and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableMongodbDatabaseGetResultInner> list(String location, String instanceId);\n+\n+    /**\n+     * Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB databases under the restorable\n+     * account. This helps in scenario where database was accidentally deleted to get the deletion time. This API\n+     * requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the MongoDB database events and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableMongodbDatabaseGetResultInner> list(String location, String instanceId, Context context);\n+\n+    /**\n+     * Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB databases under the restorable\n+     * account. This helps in scenario where database was accidentally deleted to get the deletion time. This API\n+     * requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the MongoDB database events and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableMongodbDatabaseGetResultInner> list(String location, String instanceId);\n+\n+    /**\n+     * Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB databases under the restorable\n+     * account. This helps in scenario where database was accidentally deleted to get the deletion time. This API\n+     * requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.\n+     *\n+     * @param location Cosmos DB region, with spaces between words and each word capitalized.\n+     * @param instanceId The instanceId GUID of a restorable database account.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the List operation response, that contains the MongoDB database events and their properties.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<RestorableMongodbDatabaseGetResultInner> list(String location, String instanceId, Context context);\n+}"
  }
]
