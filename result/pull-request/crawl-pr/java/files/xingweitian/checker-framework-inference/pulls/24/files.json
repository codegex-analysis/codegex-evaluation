[
  {
    "sha": "3be9bc7743c313d43974a12bdf7b49d9ab2b36f5",
    "filename": "src/checkers/inference/solver/backend/lingeling/LingelingSolver.java",
    "status": "modified",
    "additions": 2,
    "deletions": 6,
    "changes": 8,
    "blob_url": "https://github.com/xingweitian/checker-framework-inference/blob/939619aacfe930e0ff9f5dfc637f3556b0842f88/src/checkers/inference/solver/backend/lingeling/LingelingSolver.java",
    "raw_url": "https://github.com/xingweitian/checker-framework-inference/raw/939619aacfe930e0ff9f5dfc637f3556b0842f88/src/checkers/inference/solver/backend/lingeling/LingelingSolver.java",
    "contents_url": "https://api.github.com/repos/xingweitian/checker-framework-inference/contents/src/checkers/inference/solver/backend/lingeling/LingelingSolver.java?ref=939619aacfe930e0ff9f5dfc637f3556b0842f88",
    "patch": "@@ -33,12 +33,8 @@\n  */\n public class LingelingSolver extends MaxSatSolver {\n \n-    // Lingeling binary executable file should be located at checker-framework-inference/lib/lingeling.\n-    private static final String CFIProjectName = \"checker-framework-inference\";\n-    private String currentWorkingDirPath = System.getProperty(\"user.dir\");\n-    private String CFIDir = currentWorkingDirPath.substring(0, currentWorkingDirPath.lastIndexOf(CFIProjectName) +\n-            CFIProjectName.length() + 1);\n-    private final String lingeling = Paths.get(CFIDir, \"lib\", \"lingeling\", \"lingeling\").toString();\n+    // Ensure the path to Lingeling binary executable file has been added into $PATH.\n+    private final String lingeling = \"lingeling\";\n \n     // record cnf integers in clauses. lingeling solver give the answer for all\n     // the integers from 1 to the largest one. Some of them may be not in the"
  }
]
