[
  {
    "sha": "0b57105cc6d0fc2f7fe4af1891b7bbabc39183e0",
    "filename": "client/src/main/java/client/Controller.java",
    "status": "modified",
    "additions": 91,
    "deletions": 6,
    "changes": 97,
    "blob_url": "https://github.com/framzik/java_chat/blob/f0f9a893663afaa3e2523c21fe09940f8a214dbb/client/src/main/java/client/Controller.java",
    "raw_url": "https://github.com/framzik/java_chat/raw/f0f9a893663afaa3e2523c21fe09940f8a214dbb/client/src/main/java/client/Controller.java",
    "contents_url": "https://api.github.com/repos/framzik/java_chat/contents/client/src/main/java/client/Controller.java?ref=f0f9a893663afaa3e2523c21fe09940f8a214dbb",
    "patch": "@@ -4,19 +4,25 @@\n import javafx.application.Platform;\n import javafx.event.ActionEvent;\n import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n import javafx.fxml.Initializable;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.scene.control.ListView;\n import javafx.scene.control.PasswordField;\n import javafx.scene.control.TextArea;\n import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseEvent;\n import javafx.scene.layout.HBox;\n+import javafx.stage.Modality;\n import javafx.stage.Stage;\n+import javafx.stage.StageStyle;\n \n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n import java.io.IOException;\n import java.net.Socket;\n import java.net.URL;\n-import java.net.UnknownHostException;\n import java.util.ResourceBundle;\n \n public class Controller implements Initializable {\n@@ -32,6 +38,8 @@\n     public HBox authPanel;\n     @FXML\n     public HBox msgPanel;\n+    @FXML\n+    public ListView<String> clientList;\n \n     private Socket socket;\n     private DataInputStream in;\n@@ -42,13 +50,17 @@\n     private boolean authenticated;\n     private String nickname;\n     private Stage stage;\n+    private Stage regStage;\n+    private RegController regController;\n \n     public void setAuthenticated(boolean authenticated) {\n         this.authenticated = authenticated;\n         msgPanel.setVisible(authenticated);\n         msgPanel.setManaged(authenticated);\n         authPanel.setVisible(!authenticated);\n         authPanel.setManaged(!authenticated);\n+        clientList.setVisible(authenticated);\n+        clientList.setManaged(authenticated);\n \n         if (!authenticated) {\n             nickname = \"\";\n@@ -61,6 +73,16 @@ public void setAuthenticated(boolean authenticated) {\n     public void initialize(URL location, ResourceBundle resources) {\n         Platform.runLater(() -> {\n             stage = (Stage) textArea.getScene().getWindow();\n+            stage.setOnCloseRequest(event -> {\n+                System.out.println(\"bye\");\n+                if (socket != null && !socket.isClosed()) {\n+                    try {\n+                        out.writeUTF(Command.END);\n+                    } catch (IOException e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+            });\n         });\n         setAuthenticated(false);\n     }\n@@ -87,6 +109,14 @@ private void connect() {\n                                 setAuthenticated(true);\n                                 break;\n                             }\n+\n+                            if(str.equals(Command.REG_OK)){\n+                                regController.setResultTryToReg(Command.REG_OK);\n+                            }\n+\n+                            if(str.equals(Command.REG_NO)){\n+                                regController.setResultTryToReg(Command.REG_NO);\n+                            }\n                         } else {\n                             textArea.appendText(str + \"\\n\");\n                         }\n@@ -95,12 +125,24 @@ private void connect() {\n                     while (true) {\n                         String str = in.readUTF();\n \n-                        if (str.equals(Command.END)) {\n-                            System.out.println(\"Client disconnected\");\n-                            break;\n-                        }\n+                        if (str.startsWith(\"/\")) {\n+                            if (str.equals(Command.END)) {\n+                                System.out.println(\"Client disconnected\");\n+                                break;\n+                            }\n+                            if (str.startsWith(Command.CLIENT_LIST)) {\n+                                String[] token = str.split(\"\\\\s\");\n+                                Platform.runLater(() -> {\n+                                    clientList.getItems().clear();\n+                                    for (int i = 1; i < token.length; i++) {\n+                                        clientList.getItems().add(token[i]);\n+                                    }\n+                                });\n+                            }\n \n-                        textArea.appendText(str + \"\\n\");\n+                        } else {\n+                            textArea.appendText(str + \"\\n\");\n+                        }\n                     }\n                 } catch (RuntimeException e) {\n                     System.out.println(e.getMessage());\n@@ -156,4 +198,47 @@ private void setTitle(String nickname) {\n             }\n         });\n     }\n+\n+    public void clientListMouseReleased(MouseEvent mouseEvent) {\n+        System.out.println(clientList.getSelectionModel().getSelectedItem());\n+        String msg = String.format(\"%s %s \", Command.PRIVATE_MSG, clientList.getSelectionModel().getSelectedItem());\n+        textField.setText(msg);\n+    }\n+\n+    public void showRegWindow(ActionEvent actionEvent) {\n+        if (regStage == null) {\n+            initRegWindow();\n+        }\n+        regStage.show();\n+    }\n+\n+    private void initRegWindow() {\n+        try {\n+            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"/reg.fxml\"));\n+            Parent root = fxmlLoader.load();\n+\n+            regController = fxmlLoader.getController();\n+            regController.setController(this);\n+\n+            regStage = new Stage();\n+            regStage.setTitle(\"Best chat of World registration\");\n+            regStage.setScene(new Scene(root, 450, 350));\n+            regStage.initStyle(StageStyle.UTILITY);\n+            regStage.initModality(Modality.APPLICATION_MODAL);\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void registration(String login, String password, String nickname){\n+        if (socket == null || socket.isClosed()) {\n+            connect();\n+        }\n+        try {\n+            out.writeUTF(String.format(\"%s %s %s %s\", Command.REG, login, password, nickname));\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n }"
  },
  {
    "sha": "e72d025810667053a3557b3c82d53b7e4b497ce5",
    "filename": "client/src/main/java/client/RegController.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/framzik/java_chat/blob/f0f9a893663afaa3e2523c21fe09940f8a214dbb/client/src/main/java/client/RegController.java",
    "raw_url": "https://github.com/framzik/java_chat/raw/f0f9a893663afaa3e2523c21fe09940f8a214dbb/client/src/main/java/client/RegController.java",
    "contents_url": "https://api.github.com/repos/framzik/java_chat/contents/client/src/main/java/client/RegController.java?ref=f0f9a893663afaa3e2523c21fe09940f8a214dbb",
    "patch": "@@ -0,0 +1,46 @@\n+package client;\n+\n+import commands.Command;\n+import javafx.event.ActionEvent;\n+import javafx.fxml.FXML;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextArea;\n+import javafx.scene.control.TextField;\n+\n+public class RegController {\n+    @FXML\n+    private TextField loginField;\n+    @FXML\n+    private PasswordField passwordField;\n+    @FXML\n+    private TextField nicknameField;\n+    @FXML\n+    private TextArea textArea;\n+\n+    private Controller controller;\n+\n+    public void setController(Controller controller) {\n+        this.controller = controller;\n+    }\n+\n+    public void setResultTryToReg(String command) {\n+        if (command.equals(Command.REG_OK)) {\n+            textArea.appendText(\"Регистрация прошла успешно\\n\");\n+        }\n+        if (command.equals(Command.REG_NO)) {\n+            textArea.appendText(\"Логин или никнейм уже заняты\\n\");\n+        }\n+    }\n+\n+    public void tryToReg(ActionEvent actionEvent) {\n+        String login = loginField.getText().trim();\n+        String password = passwordField.getText().trim();\n+        String nickname = nicknameField.getText().trim();\n+\n+        if (login.length() * password.length() * nickname.length() == 0) {\n+            return;\n+        }\n+\n+        controller.registration(login, password, nickname);\n+    }\n+}"
  },
  {
    "sha": "9b3bc4dca09525897654e9c8e402ac1943464271",
    "filename": "client/src/main/resources/reg.fxml",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/framzik/java_chat/blob/f0f9a893663afaa3e2523c21fe09940f8a214dbb/client/src/main/resources/reg.fxml",
    "raw_url": "https://github.com/framzik/java_chat/raw/f0f9a893663afaa3e2523c21fe09940f8a214dbb/client/src/main/resources/reg.fxml",
    "contents_url": "https://api.github.com/repos/framzik/java_chat/contents/client/src/main/resources/reg.fxml?ref=f0f9a893663afaa3e2523c21fe09940f8a214dbb",
    "patch": "@@ -0,0 +1,23 @@\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.TextArea?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.layout.HBox?>\n+<?import javafx.scene.layout.VBox?>\n+<?import java.net.URL?>\n+<?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.control.ListView?>\n+<VBox fx:controller=\"client.RegController\"\n+      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\">\n+    <stylesheets>\n+        <URL value=\"@/css/style.css\"/>\n+    </stylesheets>\n+\n+    <TextField fx:id=\"loginField\" promptText=\"login\"/>\n+    <PasswordField fx:id=\"passwordField\" promptText=\"password\"/>\n+    <TextField fx:id=\"nicknameField\" promptText=\"nickname\"/>\n+    <TextArea fx:id=\"textArea\" VBox.vgrow=\"ALWAYS\"/>\n+\n+    <Button text=\"reg\" minWidth=\"100\" onAction=\"#tryToReg\"/>\n+\n+\n+</VBox>\n\\ No newline at end of file"
  },
  {
    "sha": "4e52c8b9c4583ff9dda13d74f2f7be1c9cd10b6b",
    "filename": "client/src/main/resources/sample.fxml",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/framzik/java_chat/blob/f0f9a893663afaa3e2523c21fe09940f8a214dbb/client/src/main/resources/sample.fxml",
    "raw_url": "https://github.com/framzik/java_chat/raw/f0f9a893663afaa3e2523c21fe09940f8a214dbb/client/src/main/resources/sample.fxml",
    "contents_url": "https://api.github.com/repos/framzik/java_chat/contents/client/src/main/resources/sample.fxml?ref=f0f9a893663afaa3e2523c21fe09940f8a214dbb",
    "patch": "@@ -5,6 +5,7 @@\n <?import javafx.scene.layout.VBox?>\n <?import java.net.URL?>\n <?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.control.ListView?>\n <VBox fx:controller=\"client.Controller\"\n       xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\">\n     <stylesheets>\n@@ -15,9 +16,15 @@\n         <TextField fx:id=\"loginField\" HBox.hgrow=\"ALWAYS\" promptText=\"login\"/>\n         <PasswordField fx:id=\"passwordField\" HBox.hgrow=\"ALWAYS\" promptText=\"password\" onAction=\"#tryToAuth\"/>\n         <Button text=\"auth\" onAction=\"#tryToAuth\" minWidth=\"100\"/>\n+        <Button text=\"reg\" onAction=\"#showRegWindow\" minWidth=\"100\"/>\n+    </HBox>\n+\n+    <HBox VBox.vgrow =\"ALWAYS\">\n+        <TextArea fx:id=\"textArea\" HBox.hgrow=\"ALWAYS\" editable=\"false\"/>\n+        <ListView fx:id=\"clientList\" visible=\"false\" managed=\"false\" minWidth=\"100\"\n+        onMouseReleased=\"#clientListMouseReleased\"/>\n     </HBox>\n \n-    <TextArea fx:id=\"textArea\" VBox.vgrow=\"ALWAYS\" editable=\"false\"/>\n \n     <HBox fx:id=\"msgPanel\" visible=\"false\" managed=\"false\">\n         <TextField fx:id=\"textField\" HBox.hgrow=\"ALWAYS\" promptText=\"input text\" onAction=\"#sendMsg\"/>"
  },
  {
    "sha": "ee52d7ac55ad265abf4cbd01f4ed586dd810c8c7",
    "filename": "command/src/main/java/commands/Command.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/framzik/java_chat/blob/f0f9a893663afaa3e2523c21fe09940f8a214dbb/command/src/main/java/commands/Command.java",
    "raw_url": "https://github.com/framzik/java_chat/raw/f0f9a893663afaa3e2523c21fe09940f8a214dbb/command/src/main/java/commands/Command.java",
    "contents_url": "https://api.github.com/repos/framzik/java_chat/contents/command/src/main/java/commands/Command.java?ref=f0f9a893663afaa3e2523c21fe09940f8a214dbb",
    "patch": "@@ -4,6 +4,10 @@\n     public static final String END = \"/end\";\n     public static final String AUTH = \"/auth\";\n     public static final String AUTH_OK = \"/authok\";\n-    public static final String W = \"/w\";\n+    public static final String PRIVATE_MSG = \"/w\";\n+    public static final String CLIENT_LIST = \"/clientlist\";\n+    public static final String REG = \"/reg\";\n+    public static final String REG_OK = \"/regok\";\n+    public static final String REG_NO = \"/regno\";\n \n }"
  },
  {
    "sha": "82d8b657186f166a315df617401bc33bbac57b28",
    "filename": "server/src/main/java/server/AuthService.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/framzik/java_chat/blob/f0f9a893663afaa3e2523c21fe09940f8a214dbb/server/src/main/java/server/AuthService.java",
    "raw_url": "https://github.com/framzik/java_chat/raw/f0f9a893663afaa3e2523c21fe09940f8a214dbb/server/src/main/java/server/AuthService.java",
    "contents_url": "https://api.github.com/repos/framzik/java_chat/contents/server/src/main/java/server/AuthService.java?ref=f0f9a893663afaa3e2523c21fe09940f8a214dbb",
    "patch": "@@ -2,4 +2,5 @@\n \n public interface AuthService {\n     String getNicknameByLoginAndPassword(String login, String password);\n+    boolean registration(String login, String password, String nickname);\n }"
  },
  {
    "sha": "b4f9f45e3466c87e9959216f937875e8a585cf8d",
    "filename": "server/src/main/java/server/ClientHandler.java",
    "status": "modified",
    "additions": 59,
    "deletions": 18,
    "changes": 77,
    "blob_url": "https://github.com/framzik/java_chat/blob/f0f9a893663afaa3e2523c21fe09940f8a214dbb/server/src/main/java/server/ClientHandler.java",
    "raw_url": "https://github.com/framzik/java_chat/raw/f0f9a893663afaa3e2523c21fe09940f8a214dbb/server/src/main/java/server/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/framzik/java_chat/contents/server/src/main/java/server/ClientHandler.java?ref=f0f9a893663afaa3e2523c21fe09940f8a214dbb",
    "patch": "@@ -6,6 +6,7 @@\n import java.io.DataOutputStream;\n import java.io.IOException;\n import java.net.Socket;\n+import java.net.SocketTimeoutException;\n \n public class ClientHandler {\n \n@@ -15,6 +16,7 @@\n   private DataOutputStream out;\n \n   private String nickname;\n+  private String login;\n \n   public ClientHandler(Server server, Socket socket) {\n     try {\n@@ -25,50 +27,85 @@ public ClientHandler(Server server, Socket socket) {\n \n       new Thread(() -> {\n         try {\n+          // установка сокет тайм аут\n+          socket.setSoTimeout(120000);\n+\n           // цикл аутентификации\n           while (true) {\n             String str = in.readUTF();\n \n+            //если команда отключиться\n             if (str.equals(Command.END)) {\n               out.writeUTF(Command.END);\n               throw new RuntimeException(\"Клиент захотел отключиться\");\n             }\n+\n+            //если команда аутентификация\n             if (str.startsWith(Command.AUTH)) {\n-              String[] token = str.split(\"\\\\s\");\n+              String[] token = str.split(\"\\\\s\", 3);\n               if (token.length < 3) {\n                 continue;\n               }\n               String newNick = server.getAuthService()\n                   .getNicknameByLoginAndPassword(token[1], token[2]);\n-\n+              login = token[1];\n               if (newNick != null) {\n-                nickname = newNick;\n-                sendMsg(Command.AUTH_OK + \" \" + nickname);\n-                server.subscribe(this);\n-                System.out.println(\"client: \" + socket.getRemoteSocketAddress() +\n-                    \" connected with nick: \" + nickname);\n-                break;\n+                if (!server.isLoginAuthenticated(login)) {\n+                  nickname = newNick;\n+                  sendMsg(Command.AUTH_OK + \" \" + nickname);\n+                  server.subscribe(this);\n+                  System.out.println(\"client: \" + socket.getRemoteSocketAddress() +\n+                      \" connected with nick: \" + nickname);\n+                  socket.setSoTimeout(0);\n+                  break;\n+                } else {\n+                  sendMsg(\"Данная учетная запись уже используется\");\n+                }\n               } else {\n                 sendMsg(\"Неверный логин / пароль\");\n               }\n             }\n+\n+            //если команда регистрация\n+            if (str.startsWith(Command.REG)) {\n+              String[] token = str.split(\"\\\\s\", 4);\n+              if (token.length < 4) {\n+                continue;\n+              }\n+              boolean regSuccess = server.getAuthService()\n+                  .registration(token[1], token[2], token[3]);\n+              if (regSuccess) {\n+                sendMsg(Command.REG_OK);\n+              } else {\n+                sendMsg(Command.REG_NO);\n+              }\n+            }\n+\n           }\n           //цикл работы\n           while (true) {\n             String str = in.readUTF();\n \n-            if (str.equals(Command.END)) {\n-              out.writeUTF(Command.END);\n-              break;\n-            }\n-            if (str.startsWith(Command.W)) {\n-              String[] token = str.split(\"\\\\s\", 3);\n-              server.privateMsg(this, token[2], token[1]);\n-              continue;\n-            }\n+            if (str.startsWith(\"/\")) {\n+              if (str.equals(Command.END)) {\n+                out.writeUTF(Command.END);\n+                break;\n+              }\n \n-            server.broadcastMsg(this, str);\n+              if (str.startsWith(Command.PRIVATE_MSG)) {\n+                String[] token = str.split(\"\\\\s\", 3);\n+                if (token.length < 3) {\n+                  continue;\n+                }\n+                server.privateMsg(this, token[1], token[2]);\n+              }\n+            } else {\n+              server.broadcastMsg(this, str);\n+            }\n           }\n+          //SocketTimeoutException\n+        } catch (SocketTimeoutException e) {\n+          this.sendMsg(Command.END);\n         } catch (RuntimeException e) {\n           System.out.println(e.getMessage());\n         } catch (IOException e) {\n@@ -99,4 +136,8 @@ public void sendMsg(String msg) {\n   public String getNickname() {\n     return nickname;\n   }\n+\n+  public String getLogin() {\n+    return login;\n+  }\n }"
  },
  {
    "sha": "ead3c0a5c152caafaa30bcfd8c2e0c63dfb1e394",
    "filename": "server/src/main/java/server/Server.java",
    "status": "modified",
    "additions": 35,
    "deletions": 7,
    "changes": 42,
    "blob_url": "https://github.com/framzik/java_chat/blob/f0f9a893663afaa3e2523c21fe09940f8a214dbb/server/src/main/java/server/Server.java",
    "raw_url": "https://github.com/framzik/java_chat/raw/f0f9a893663afaa3e2523c21fe09940f8a214dbb/server/src/main/java/server/Server.java",
    "contents_url": "https://api.github.com/repos/framzik/java_chat/contents/server/src/main/java/server/Server.java?ref=f0f9a893663afaa3e2523c21fe09940f8a214dbb",
    "patch": "@@ -1,5 +1,7 @@\n package server;\n \n+import commands.Command;\n+\n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n import java.io.IOException;\n@@ -57,28 +59,54 @@ public void broadcastMsg(ClientHandler sender, String msg) {\n     }\n   }\n \n-  public void privateMsg(ClientHandler sender, String msg, String nick) {\n+  public void privateMsg(ClientHandler sender, String receiver, String msg) {\n+    String message = String.format(\"[ %s ] to [ %s ]: %s\", sender.getNickname(), receiver, msg);\n     for (ClientHandler c : clients) {\n-      if (c.getNickname().equals(nick) ) {\n-        String message = String.format(\"[ %s ] отправил Вам личное сообщение: %s\", sender.getNickname(), msg);\n-        c.sendMsg(message);\n-      }\n-      if ( c == sender) {\n-        String message = String.format(\"Вы отправили [ %s ] личное сообщение: %s\", sender.getNickname(), msg);\n+      if (c.getNickname().equals(receiver)) {\n         c.sendMsg(message);\n+        if (!c.equals(sender)) {\n+          sender.sendMsg(message);\n+        }\n+        return;\n       }\n     }\n+    sender.sendMsg(\"not found user: \" + receiver);\n   }\n \n   public void subscribe(ClientHandler clientHandler) {\n     clients.add(clientHandler);\n+    broadcastClientList();\n   }\n \n   public void unsubscribe(ClientHandler clientHandler) {\n     clients.remove(clientHandler);\n+    broadcastClientList();\n   }\n \n   public AuthService getAuthService() {\n     return authService;\n   }\n+\n+  public boolean isLoginAuthenticated(String login) {\n+    for (ClientHandler c : clients) {\n+      if (c.getLogin().equals(login)) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n+\n+  public void broadcastClientList() {\n+    StringBuilder sb = new StringBuilder(Command.CLIENT_LIST);\n+\n+    for (ClientHandler c : clients) {\n+      sb.append(\" \").append(c.getNickname());\n+    }\n+\n+    String msg = sb.toString();\n+\n+    for (ClientHandler c : clients) {\n+      c.sendMsg(msg);\n+    }\n+  }\n }"
  },
  {
    "sha": "aad2f60f0a219014cea2946f64640979ab694e4f",
    "filename": "server/src/main/java/server/SimpleAuthService.java",
    "status": "modified",
    "additions": 41,
    "deletions": 27,
    "changes": 68,
    "blob_url": "https://github.com/framzik/java_chat/blob/f0f9a893663afaa3e2523c21fe09940f8a214dbb/server/src/main/java/server/SimpleAuthService.java",
    "raw_url": "https://github.com/framzik/java_chat/raw/f0f9a893663afaa3e2523c21fe09940f8a214dbb/server/src/main/java/server/SimpleAuthService.java",
    "contents_url": "https://api.github.com/repos/framzik/java_chat/contents/server/src/main/java/server/SimpleAuthService.java?ref=f0f9a893663afaa3e2523c21fe09940f8a214dbb",
    "patch": "@@ -4,39 +4,53 @@\n import java.util.List;\n \n public class SimpleAuthService implements AuthService {\n-    private class UserData {\n-        String login;\n-        String password;\n-        String nickname;\n-\n-        public UserData(String login, String password, String nickname) {\n-            this.login = login;\n-            this.password = password;\n-            this.nickname = nickname;\n-        }\n+\n+  private class UserData {\n+\n+    String login;\n+    String password;\n+    String nickname;\n+\n+    public UserData(String login, String password, String nickname) {\n+      this.login = login;\n+      this.password = password;\n+      this.nickname = nickname;\n     }\n+  }\n \n-    private List<UserData> users;\n+  private List<UserData> users;\n \n-    public SimpleAuthService() {\n-        users = new ArrayList<>();\n-        users.add(new UserData(\"qwe\", \"qwe\", \"qwe\"));\n-        users.add(new UserData(\"asd\", \"asd\", \"asd\"));\n-        users.add(new UserData(\"zxc\", \"zxc\", \"zxc\"));\n+  public SimpleAuthService() {\n+    users = new ArrayList<>();\n+    users.add(new UserData(\"qwe\", \"qwe\", \"qwe\"));\n+    users.add(new UserData(\"asd\", \"asd\", \"asd\"));\n+    users.add(new UserData(\"zxc\", \"zxc\", \"zxc\"));\n \n-        for (int i = 1; i < 10; i++) {\n-            users.add(new UserData(\"login\" + i, \"pass\" + i, \"nick\" + i));\n-        }\n+    for (int i = 1; i < 10; i++) {\n+      users.add(new UserData(\"login\" + i, \"pass\" + i, \"nick\" + i));\n+    }\n+  }\n+\n+  @Override\n+  public String getNicknameByLoginAndPassword(String login, String password) {\n+    for (UserData user : users) {\n+      if (user.login.equals(login) && user.password.equals(password)) {\n+        return user.nickname;\n+      }\n     }\n \n-    @Override\n-    public String getNicknameByLoginAndPassword(String login, String password) {\n-        for (UserData user : users) {\n-            if(user.login.equals(login) && user.password.equals(password)){\n-                return user.nickname;\n-            }\n-        }\n+    return null;\n+  }\n \n-        return null;\n+  @Override\n+  public boolean registration(String login, String password, String nickname) {\n+    for (UserData user : users) {\n+      if (user.login.equals(login) || user.nickname.equals(nickname)) {\n+        return false;\n+      }\n     }\n+\n+    users.add(new UserData(login, password, nickname));\n+    return true;\n+  }\n }"
  }
]
