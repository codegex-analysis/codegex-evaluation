[
  {
    "sha": "b52db2a77985e6dcd504d3af4617d06677fef879",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 87,
    "deletions": 13,
    "changes": 100,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/pom.xml",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/pom.xml",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/pom.xml?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -76,10 +76,19 @@\n       <id>release</id>\n       <build>\n         <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-compiler-plugin</artifactId>\n+            <configuration>\n+              <compilerArgument>-Xlint:all</compilerArgument>\n+              <showWarnings>true</showWarnings>\n+              <showDeprecation>true</showDeprecation>\n+            </configuration>\n+          </plugin>\n           <plugin>\n             <groupId>org.sonatype.plugins</groupId>\n             <artifactId>nexus-staging-maven-plugin</artifactId>\n-            <version>1.6.7</version>\n+            <version>1.6.8</version>\n             <extensions>true</extensions>\n             <configuration>\n               <serverId>ossrh</serverId>\n@@ -105,7 +114,7 @@\n           <plugin>\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-source-plugin</artifactId>\n-            <version>2.2.1</version>\n+            <version>3.2.0</version>\n             <executions>\n               <execution>\n                 <id>attach-sources</id>\n@@ -118,7 +127,7 @@\n           <plugin>\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-javadoc-plugin</artifactId>\n-            <version>3.0.1</version>\n+            <version>3.2.0</version>\n             <executions>\n               <execution>\n                 <id>attach-javadocs</id>\n@@ -131,7 +140,7 @@\n           <plugin>\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-gpg-plugin</artifactId>\n-            <version>1.5</version>\n+            <version>1.6</version>\n             <executions>\n               <execution>\n                 <id>sign-artifacts</id>\n@@ -148,6 +157,39 @@\n   </profiles>\n \n   <dependencies>\n+    <dependency>\n+      <groupId>net.sourceforge.owlapi</groupId>\n+      <artifactId>owlapi-api</artifactId>\n+      <version>4.5.6</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>com.google.code.findbugs</groupId>\n+          <artifactId>jsr305</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>net.sourceforge.owlapi</groupId>\n+      <artifactId>owlapi-apibinding</artifactId>\n+      <version>4.5.6</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>com.google.code.findbugs</groupId>\n+          <artifactId>jsr305</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>net.sourceforge.owlapi</groupId>\n+      <artifactId>owlapi-rio</artifactId>\n+      <version>4.5.6</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>com.google.code.findbugs</groupId>\n+          <artifactId>jsr305</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n     <dependency>\n       <groupId>junit</groupId>\n       <artifactId>junit</artifactId>\n@@ -156,12 +198,7 @@\n     <dependency>\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-log4j12</artifactId>\n-      <version>1.7.10</version>\n-    </dependency>\n-    <dependency>\n-      <groupId>net.sourceforge.owlapi</groupId>\n-      <artifactId>owlapi-distribution</artifactId>\n-      <version>4.5.6</version>\n+      <version>1.7.30</version>\n     </dependency>\n     <dependency>\n       <groupId>org.semanticweb.elk</groupId>\n@@ -186,11 +223,47 @@\n       <groupId>net.sourceforge.owlapi</groupId>\n       <artifactId>org.semanticweb.hermit</artifactId>\n       <version>1.3.8.413</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>net.sourceforge.owlapi</groupId>\n+          <artifactId>owlapi-distribution</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>commons-logging</groupId>\n+          <artifactId>commons-logging</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.apache.geronimo.specs</groupId>\n+          <artifactId>geronimo-javamail_1.4_spec</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.apache.geronimo.specs</groupId>\n+          <artifactId>geronimo-activation_1.1_spec</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.apache.geronimo.specs</groupId>\n+          <artifactId>geronimo-stax-api_1.0_spec</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>jaxen</groupId>\n+          <artifactId>jaxen</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.codehaus.woodstox</groupId>\n+          <artifactId>woodstox-core-asl</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>net.sourceforge.owlapi</groupId>\n       <artifactId>jfact</artifactId>\n       <version>4.0.4</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>net.sourceforge.owlapi</groupId>\n+          <artifactId>owlapi-distribution</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n   </dependencies>\n \n@@ -199,7 +272,7 @@\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-site-plugin</artifactId>\n-        <version>3.7.1</version>\n+        <version>3.9.1</version>\n       </plugin>\n       <plugin>\n         <groupId>org.obolibrary.robot</groupId>\n@@ -214,7 +287,7 @@\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-javadoc-plugin</artifactId>\n-        <version>3.1.1</version>\n+        <version>3.2.0</version>\n         <configuration>\n           <links>\n             <link>https://commons.apache.org/proper/commons-cli/javadocs/api-1.2/</link>\n@@ -223,8 +296,9 @@\n         </configuration>\n       </plugin>\n       <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-project-info-reports-plugin</artifactId>\n-        <version>3.0.0</version>\n+        <version>3.1.1</version>\n       </plugin>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>"
  },
  {
    "sha": "da3daa3ce08f4a8d26a8c75758ad9afdc1bc3830",
    "filename": "robot-command/pom.xml",
    "status": "modified",
    "additions": 52,
    "deletions": 5,
    "changes": 57,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/pom.xml",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/pom.xml",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-command/pom.xml?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -18,7 +18,7 @@\n       <plugin>\n         <groupId>com.coveo</groupId>\n         <artifactId>fmt-maven-plugin</artifactId>\n-        <version>2.1.0</version>\n+        <version>2.9</version>\n         <executions>\n           <execution>\n             <goals>\n@@ -32,7 +32,7 @@\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-failsafe-plugin</artifactId>\n-        <version>2.18.1</version>\n+        <version>3.0.0-M5</version>\n         <executions>\n           <execution>\n             <goals>\n@@ -47,14 +47,51 @@\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-shade-plugin</artifactId>\n-        <version>2.4.3</version>\n+        <version>3.2.4</version>\n         <executions>\n           <execution>\n             <phase>package</phase>\n             <goals>\n               <goal>shade</goal>\n             </goals>\n             <configuration>\n+              <filters>\n+                <filter>\n+                  <artifact>*:obographs</artifact>\n+                  <excludes>\n+                    <exclude>obo_context.jsonld</exclude>\n+                  </excludes>\n+                </filter>\n+                <!-- Only one log4j.properties file needs to be included, we'll use the CLI one -->\n+                <!-- We keep the core log4.properties file for logging from ROBOT as a library -->\n+                <filter>\n+                  <artifact>*:robot-core</artifact>\n+                  <excludes>\n+                    <exclude>log4j.properties</exclude>\n+                  </excludes>\n+                </filter>\n+                <filter>\n+                  <artifact>*:*</artifact>\n+                  <excludes>\n+                    <exclude>**/module-info.class</exclude>\n+                    <exclude>module-info.class</exclude>\n+                    <exclude>META-INF/*.MF</exclude>\n+                    <exclude>META-INF/*.DSA</exclude>\n+                    <exclude>META-INF/*.SF</exclude>\n+                    <exclude>META-INF/DEPENDENCIES</exclude>\n+                    <exclude>LICENSE</exclude>\n+                    <exclude>LICENSE.txt</exclude>\n+                    <exclude>META-INF/LICENSE</exclude>\n+                    <exclude>META-INF/LICENSE.*</exclude>\n+                    <exclude>NOTICE</exclude>\n+                    <exclude>META-INF/NOTICE</exclude>\n+                    <exclude>META-INF/NOTICE.*</exclude>\n+                    <exclude>plugin.xml</exclude>\n+                    <exclude>META-INF/*.xml</exclude>\n+                    <exclude>META-INF/maven/org.apache.ws.commons.axiom/axiom-common-impl/*</exclude>\n+                  </excludes>\n+                </filter>\n+              </filters>\n               <finalName>robot</finalName>\n               <outputDirectory>${project.parent.basedir}/bin</outputDirectory>\n               <transformers>\n@@ -71,6 +108,16 @@\n   </build>\n \n   <dependencies>\n+    <dependency>\n+      <groupId>javax.inject</groupId>\n+      <artifactId>javax.inject</artifactId>\n+      <version>1</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.github.ben-manes.caffeine</groupId>\n+      <artifactId>caffeine</artifactId>\n+      <version>2.5.6</version>\n+    </dependency>\n     <dependency>\n       <groupId>org.obolibrary.robot</groupId>\n       <artifactId>robot-core</artifactId>\n@@ -79,12 +126,12 @@\n     <dependency>\n       <groupId>commons-cli</groupId>\n       <artifactId>commons-cli</artifactId>\n-      <version>1.2</version>\n+      <version>1.4</version>\n     </dependency>\n     <dependency>\n       <groupId>commons-io</groupId>\n       <artifactId>commons-io</artifactId>\n-      <version>2.4</version>\n+      <version>2.8.0</version>\n     </dependency>\n   </dependencies>\n </project>"
  },
  {
    "sha": "38134ca5cb6fa6f795fba06a871f5a340cdfd9a1",
    "filename": "robot-command/src/main/java/org/obolibrary/robot/CommandLineHelper.java",
    "status": "modified",
    "additions": 8,
    "deletions": 12,
    "changes": 20,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/CommandLineHelper.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/CommandLineHelper.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-command/src/main/java/org/obolibrary/robot/CommandLineHelper.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -6,20 +6,15 @@\n import java.net.URISyntaxException;\n import java.net.URL;\n import java.net.URLDecoder;\n+import java.nio.charset.Charset;\n import java.util.*;\n import java.util.jar.JarFile;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n import java.util.zip.ZipEntry;\n-import org.apache.commons.cli.CommandLine;\n-import org.apache.commons.cli.CommandLineParser;\n-import org.apache.commons.cli.HelpFormatter;\n-import org.apache.commons.cli.Options;\n-import org.apache.commons.cli.ParseException;\n-import org.apache.commons.cli.PosixParser;\n+import org.apache.commons.cli.*;\n import org.apache.commons.io.FileUtils;\n import org.apache.commons.io.FilenameUtils;\n-import org.apache.commons.io.IOExceptionWithCause;\n import org.apache.commons.io.filefilter.WildcardFileFilter;\n import org.geneontology.reasoner.ExpressionMaterializingReasonerFactory;\n import org.geneontology.whelk.owlapi.WhelkOWLReasonerFactory;\n@@ -719,7 +714,8 @@ public static IRI maybeCreateIRI(IOHelper ioHelper, String term, String field) {\n         if (!prefixFile.exists()) {\n           throw new IOException(String.format(IOHelper.fileDoesNotExistError, prefixFilePath));\n         }\n-        Context json = IOHelper.parseContext(FileUtils.readFileToString(prefixFile));\n+        Context json =\n+            IOHelper.parseContext(FileUtils.readFileToString(prefixFile, Charset.defaultCharset()));\n         addPrefixes.putAll(json.getPrefixes(false));\n       }\n     }\n@@ -782,7 +778,7 @@ public static IRI maybeCreateIRI(IOHelper ioHelper, String term, String field) {\n     }\n     if (paths != null) {\n       for (String path : getOptionValues(line, paths)) {\n-        termStrings.add(FileUtils.readFileToString(new File(path)));\n+        termStrings.add(FileUtils.readFileToString(new File(path), Charset.defaultCharset()));\n       }\n     }\n \n@@ -865,7 +861,7 @@ public static void printVersion() throws IOException {\n       try {\n         uri = resource.toURI();\n       } catch (URISyntaxException e) {\n-        throw new IOExceptionWithCause(e);\n+        throw new IOException(e);\n       }\n       File f = new File(uri);\n       InputStream is = new FileInputStream(f);\n@@ -914,7 +910,7 @@ public static Options getCommonOptions() {\n     o.addOption(null, \"catalog\", true, \"use catalog from provided file\");\n     o.addOption(\"p\", \"prefix\", true, \"add a prefix 'foo: http://bar'\");\n     o.addOption(\"P\", \"prefixes\", true, \"use prefixes from JSON-LD file\");\n-    o.addOption(\"noprefixes\", false, \"do not use default prefixes\");\n+    o.addOption(null, \"noprefixes\", false, \"do not use default prefixes\");\n     o.addOption(null, \"add-prefix\", true, \"add prefix 'foo: http://bar' to the output\");\n     o.addOption(null, \"add-prefixes\", true, \"add JSON-LD prefixes to the output\");\n     o.addOption(\"x\", \"xml-entities\", false, \"use entity substitution with ontology XML output\");\n@@ -936,7 +932,7 @@ public static Options getCommonOptions() {\n   public static CommandLine maybeGetCommandLine(\n       String usage, Options options, String[] args, boolean stopAtNonOption)\n       throws ParseException, IOException {\n-    CommandLineParser parser = new PosixParser();\n+    CommandLineParser parser = new DefaultParser();\n     CommandLine line = parser.parse(options, args, stopAtNonOption);\n \n     String level;"
  },
  {
    "sha": "a0d67eb0ab692e9f8c9b2a2304e88a14231df512",
    "filename": "robot-command/src/main/java/org/obolibrary/robot/CommandManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 6,
    "changes": 8,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/CommandManager.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/CommandManager.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-command/src/main/java/org/obolibrary/robot/CommandManager.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -5,11 +5,7 @@\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.cli.CommandLine;\n-import org.apache.commons.cli.CommandLineParser;\n-import org.apache.commons.cli.Options;\n-import org.apache.commons.cli.ParseException;\n-import org.apache.commons.cli.PosixParser;\n+import org.apache.commons.cli.*;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -120,7 +116,7 @@ public void addCommand(String commandName, Command command) {\n    */\n   public List<String> getOptionArgs(Options options, List<String> arguments) throws ParseException {\n     // parse all options until a non-option is found\n-    CommandLineParser parser = new PosixParser();\n+    CommandLineParser parser = new DefaultParser();\n     CommandLine line = parser.parse(options, asArgs(arguments), true);\n \n     int index = arguments.size() - line.getArgList().size();"
  },
  {
    "sha": "6318fcac316bdd4ec71bc4e66cbc4446c861e10f",
    "filename": "robot-command/src/main/java/org/obolibrary/robot/ExplainCommand.java",
    "status": "modified",
    "additions": 2,
    "deletions": 4,
    "changes": 6,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/ExplainCommand.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/ExplainCommand.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-command/src/main/java/org/obolibrary/robot/ExplainCommand.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -268,8 +268,7 @@ private OWLOntology getExplanationOntology(\n     Set<OWLAxiom> explanationsAxioms =\n         explanations.stream().flatMap(e -> e.getAxioms().stream()).collect(Collectors.toSet());\n     Set<IRI> explanationTerms =\n-        explanationsAxioms\n-            .stream()\n+        explanationsAxioms.stream()\n             .flatMap(ax -> ax.getSignature().stream().map(OWLNamedObject::getIRI))\n             .collect(Collectors.toSet());\n     Set<OWLAnnotationAssertionAxiom> annotations =\n@@ -289,8 +288,7 @@ private void writeExplanationsToFile(\n     Map<OWLAxiom, Integer> mapMostUsedAxioms = new HashMap<>();\n     explanations.forEach(e -> e.getAxioms().forEach(ax -> countUp(ax, mapMostUsedAxioms)));\n     String result =\n-        explanations\n-            .stream()\n+        explanations.stream()\n             .map(e -> ExplainOperation.renderExplanationAsMarkdown(e, man))\n             .collect(Collectors.joining(\"\\n\\n\\n\"));\n     String summary = ExplainOperation.renderAxiomImpactSummary(mapMostUsedAxioms, ontology, man);"
  },
  {
    "sha": "7f5486014aa5ec107e86dca338526b3bbc3d1444",
    "filename": "robot-command/src/main/java/org/obolibrary/robot/ExtendedPosixParser.java",
    "status": "modified",
    "additions": 8,
    "deletions": 4,
    "changes": 12,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/ExtendedPosixParser.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/ExtendedPosixParser.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-command/src/main/java/org/obolibrary/robot/ExtendedPosixParser.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -1,13 +1,14 @@\n package org.obolibrary.robot;\n \n import java.util.ListIterator;\n-import org.apache.commons.cli.ParseException;\n-import org.apache.commons.cli.PosixParser;\n+import org.apache.commons.cli.*;\n \n /**\n- * A custom CommandLineParser that ignores unrecognized options without throwing an exeception. See\n+ * A custom CommandLineParser that ignores unrecognized options without throwing an exception. See\n  * http://stackoverflow.com/a/8613949\n  */\n+@Deprecated\n+@SuppressWarnings(\"deprecation\")\n public class ExtendedPosixParser extends PosixParser {\n   /** Flag for ignoring unrecognized options. */\n   private boolean ignoreUnrecognizedOption;\n@@ -17,6 +18,7 @@\n    *\n    * @param ignoreUnrecognizedOption when true, silently ignore unrecognized options\n    */\n+  @Deprecated\n   public ExtendedPosixParser(final boolean ignoreUnrecognizedOption) {\n     this.ignoreUnrecognizedOption = ignoreUnrecognizedOption;\n   }\n@@ -29,8 +31,10 @@ public ExtendedPosixParser(final boolean ignoreUnrecognizedOption) {\n    * @param iter the iterator for the super class to deal with\n    * @throws ParseException on any problems\n    */\n+  @Deprecated\n   @Override\n-  protected void processOption(final String arg, final ListIterator iter) throws ParseException {\n+  protected void processOption(final String arg, final ListIterator<String> iter)\n+      throws ParseException {\n     boolean hasOption = getOptions().hasOption(arg);\n \n     if (hasOption || !ignoreUnrecognizedOption) {"
  },
  {
    "sha": "20d9cd23f675d93a0760cc5eed418d89b31530e4",
    "filename": "robot-command/src/main/java/org/obolibrary/robot/QueryCommand.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/QueryCommand.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/QueryCommand.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-command/src/main/java/org/obolibrary/robot/QueryCommand.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -4,6 +4,7 @@\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n+import java.nio.charset.Charset;\n import java.util.*;\n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.MissingArgumentException;\n@@ -234,7 +235,7 @@ private static void executeInMemory(\n       runQueries(line, dataset, queries);\n     } finally {\n       dataset.close();\n-      TDBFactory.release(dataset);\n+      // TDBFactory.release(dataset);\n     }\n   }\n \n@@ -285,7 +286,7 @@ private static OWLOntology executeUpdate(\n       if (!f.exists()) {\n         throw new Exception(String.format(missingFileError, updatePath));\n       }\n-      updates.put(f.getPath(), FileUtils.readFileToString(f));\n+      updates.put(f.getPath(), FileUtils.readFileToString(f, Charset.defaultCharset()));\n     }\n \n     // Load the ontology as a model, ignoring imports\n@@ -390,7 +391,7 @@ private static void runQueries(CommandLine line, Dataset dataset, List<List<Stri\n       String queryPath = q.get(0);\n       String outputPath = q.get(1);\n \n-      String query = FileUtils.readFileToString(new File(queryPath));\n+      String query = FileUtils.readFileToString(new File(queryPath), Charset.defaultCharset());\n \n       String formatName = format;\n       if (formatName == null) {"
  },
  {
    "sha": "4c6e441783c9c55ddab0b50da419e5aed215d6dd",
    "filename": "robot-command/src/main/java/org/obolibrary/robot/VerifyCommand.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/VerifyCommand.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/main/java/org/obolibrary/robot/VerifyCommand.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-command/src/main/java/org/obolibrary/robot/VerifyCommand.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -1,6 +1,7 @@\n package org.obolibrary.robot;\n \n import java.io.File;\n+import java.nio.charset.Charset;\n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.Option;\n import org.apache.commons.cli.Options;\n@@ -123,7 +124,7 @@ public CommandState execute(CommandState state, String[] args) throws Exception\n     boolean passing = true;\n     for (String filePath : queryFilePaths) {\n       File queryFile = new File(filePath);\n-      String queryString = FileUtils.readFileToString(queryFile);\n+      String queryString = FileUtils.readFileToString(queryFile, Charset.defaultCharset());\n       String csvPath = FilenameUtils.getBaseName(filePath).concat(\".csv\");\n       boolean result =\n           QueryOperation.runVerify("
  },
  {
    "sha": "ae65dfcc9c705652ce3a05f99e99c9c52f9a1e41",
    "filename": "robot-command/src/test/java/org/obolibrary/robot/CommandLineHelperTest.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/test/java/org/obolibrary/robot/CommandLineHelperTest.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/test/java/org/obolibrary/robot/CommandLineHelperTest.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-command/src/test/java/org/obolibrary/robot/CommandLineHelperTest.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -1,17 +1,14 @@\n package org.obolibrary.robot;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertThrows;\n \n import java.util.ArrayList;\n import java.util.List;\n-import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.rules.ExpectedException;\n \n /** Tests for CommandLineHelper. */\n public class CommandLineHelperTest {\n-  /** The exception to expect, if any. */\n-  @Rule public ExpectedException exception = ExpectedException.none();\n \n   /**\n    * Test command line splitting.\n@@ -45,8 +42,11 @@ public void testParseArgs() throws Exception {\n     args.add(\"nested \\\"quotes\\\" with \\\\\\\" escapes and\\nnewlines\");\n     assertEquals(\"Nested quotations\", CommandLineHelper.parseArgList(arg), args);\n \n-    arg = \"unbalanced 'quotes\";\n-    exception.expect(Exception.class);\n-    CommandLineHelper.parseArgList(arg);\n+    // Expect an Exception here\n+    assertThrows(\n+        Exception.class,\n+        () -> {\n+          CommandLineHelper.parseArgList(\"unbalanced 'quotes\");\n+        });\n   }\n }"
  },
  {
    "sha": "6532e84bff6a05b19200a02f3bc5a19dab59a1cd",
    "filename": "robot-command/src/test/java/org/obolibrary/robot/CommandLineIT.java",
    "status": "modified",
    "additions": 15,
    "deletions": 10,
    "changes": 25,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/test/java/org/obolibrary/robot/CommandLineIT.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-command/src/test/java/org/obolibrary/robot/CommandLineIT.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-command/src/test/java/org/obolibrary/robot/CommandLineIT.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -3,12 +3,14 @@\n import java.io.File;\n import java.io.FileOutputStream;\n import java.io.IOException;\n+import java.nio.charset.Charset;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.List;\n import org.apache.commons.io.FileUtils;\n import org.apache.commons.io.IOUtils;\n+import org.geneontology.owl.differ.Differ;\n import org.junit.Test;\n+import org.semanticweb.owlapi.apibinding.OWLManager;\n import org.semanticweb.owlapi.model.OWLOntology;\n \n /** Integration tests check the commands in `examples/README.md`. */\n@@ -50,9 +52,9 @@ private String trim(String line) {\n    * @throws IOException if the README cannot be read\n    */\n   private List<String> extractCommands(File docFile) throws IOException {\n-    String content = FileUtils.readFileToString(docFile);\n-    List<String> lines = Arrays.asList(content.replaceAll(\"\\\\r\", \"\").split(\"\\\\n\"));\n-    List<String> commands = new ArrayList<String>();\n+    String content = FileUtils.readFileToString(docFile, Charset.defaultCharset());\n+    String[] lines = content.replaceAll(\"\\\\r\", \"\").split(\"\\\\n\");\n+    List<String> commands = new ArrayList<>();\n \n     boolean collecting = false;\n     String collected = null;\n@@ -105,7 +107,7 @@ private void runCommand(String command) throws Exception {\n             + \"\\n\\n\";\n \n     FileOutputStream outputStream = new FileOutputStream(outputPath, true);\n-    IOUtils.write(header, outputStream);\n+    IOUtils.write(header, outputStream, Charset.defaultCharset());\n \n     List<String> arguments = CommandLineHelper.parseArgList(command);\n     arguments.remove(0);\n@@ -132,7 +134,6 @@ private void runCommand(String command) throws Exception {\n    * @throws Exception on IO problems or file differences\n    */\n   private void compareResults() throws Exception {\n-    IOHelper ioHelper = new IOHelper();\n     File resultsDir = new File(resultsPath);\n     for (File resultFile : resultsDir.listFiles()) {\n       if (!resultFile.isFile()) {\n@@ -153,10 +154,14 @@ private void compareResults() throws Exception {\n       }\n \n       if (resultFile.getName().endsWith(\".owl\") || resultFile.getName().endsWith(\".ttl\")) {\n-        // Compare OWL files using DiffOperation\n-        OWLOntology exampleOnt = ioHelper.loadOntology(exampleFile);\n-        OWLOntology resultOnt = ioHelper.loadOntology(resultFile);\n-        if (!DiffOperation.equals(exampleOnt, resultOnt)) {\n+        // Compare OWL files using Differ\n+        OWLOntology exampleOnt =\n+            OWLManager.createOWLOntologyManager().loadOntologyFromOntologyDocument(exampleFile);\n+        OWLOntology resultOnt =\n+            OWLManager.createOWLOntologyManager().loadOntologyFromOntologyDocument(resultFile);\n+\n+        Differ.BasicDiff diff = Differ.diff(exampleOnt, resultOnt);\n+        if (!diff.isEmpty()) {\n           throw new Exception(\n               \"Integration test ontology '\"\n                   + resultsPath"
  },
  {
    "sha": "385c762cb63e95b68a02a90bac63dfb7ded4b97b",
    "filename": "robot-core/pom.xml",
    "status": "modified",
    "additions": 119,
    "deletions": 13,
    "changes": 132,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/pom.xml",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/pom.xml",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/pom.xml?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -22,7 +22,7 @@\n       <plugin>\n         <groupId>com.coveo</groupId>\n         <artifactId>fmt-maven-plugin</artifactId>\n-        <version>2.1.0</version>\n+        <version>2.9</version>\n         <executions>\n           <execution>\n             <goals>\n@@ -73,65 +73,159 @@\n   </build>\n \n   <dependencies>\n+    <dependency>\n+      <groupId>net.sourceforge.owlapi</groupId>\n+      <artifactId>owlapi-api</artifactId>\n+      <version>4.5.6</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>com.google.code.findbugs</groupId>\n+          <artifactId>jsr305</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>net.sourceforge.owlapi</groupId>\n+      <artifactId>owlapi-apibinding</artifactId>\n+      <version>4.5.6</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>com.google.code.findbugs</groupId>\n+          <artifactId>jsr305</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>net.sourceforge.owlapi</groupId>\n+      <artifactId>owlapi-rio</artifactId>\n+      <version>4.5.6</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>com.google.code.findbugs</groupId>\n+          <artifactId>jsr305</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.jena</groupId>\n       <artifactId>jena-arq</artifactId>\n-      <version>3.8.0</version>\n+      <version>3.17.0</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>com.github.jsonld-java</groupId>\n+          <artifactId>jsonld-java</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.slf4j</groupId>\n+          <artifactId>jcl-over-slf4j</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.jena</groupId>\n       <artifactId>jena-tdb</artifactId>\n-      <version>3.8.0</version>\n+      <version>3.17.0</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.poi</groupId>\n       <artifactId>poi</artifactId>\n-      <version>4.1.2</version>\n+      <version>5.0.0</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.slf4j</groupId>\n+          <artifactId>jcl-over-slf4j</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.poi</groupId>\n       <artifactId>poi-ooxml</artifactId>\n-      <version>4.1.2</version>\n+      <version>5.0.0</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.apache.xmlgraphics</groupId>\n+          <artifactId>batik-all</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>com.github.jsonld-java</groupId>\n       <artifactId>jsonld-java</artifactId>\n-      <version>0.5.1</version>\n+      <version>0.13.2</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.slf4j</groupId>\n+          <artifactId>jcl-over-slf4j</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>com.fasterxml.jackson.core</groupId>\n+          <artifactId>jackson-core</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.apache.httpcomponents</groupId>\n+          <artifactId>httpclient</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.apache.httpcomponents</groupId>\n+          <artifactId>httpcore-osgi</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.apache.httpcomponents</groupId>\n+          <artifactId>httpclient-osgi</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>com.hubspot.jinjava</groupId>\n       <artifactId>jinjava</artifactId>\n-      <version>2.5.2</version>\n+      <version>2.5.6</version>\n     </dependency>\n     <dependency>\n       <groupId>org.yaml</groupId>\n       <artifactId>snakeyaml</artifactId>\n-      <version>1.15</version>\n+      <version>1.28</version>\n     </dependency>\n     <dependency>\n       <groupId>com.opencsv</groupId>\n       <artifactId>opencsv</artifactId>\n-      <version>4.3.2</version>\n+      <version>5.3</version>\n     </dependency>\n     <dependency>\n       <groupId>org.geneontology</groupId>\n       <artifactId>expression-materializing-reasoner</artifactId>\n       <version>0.1.3</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>net.sourceforge.owlapi</groupId>\n+          <artifactId>owlapi-distribution</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.geneontology</groupId>\n       <artifactId>obographs</artifactId>\n       <version>0.2.1</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>net.sourceforge.owlapi</groupId>\n+          <artifactId>owlapi-distribution</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>com.fasterxml.jackson.core</groupId>\n       <artifactId>jackson-core</artifactId>\n-      <version>2.9.3</version>\n+      <version>2.12.2</version>\n     </dependency>\n     <dependency>\n       <groupId>com.fasterxml.jackson.dataformat</groupId>\n       <artifactId>jackson-dataformat-yaml</artifactId>\n-      <version>2.9.3</version>\n+      <version>2.12.2</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.jackson.core</groupId>\n+      <artifactId>jackson-annotations</artifactId>\n+      <version>2.12.2</version>\n     </dependency>\n     <dependency>\n       <groupId>net.sourceforge.owlapi</groupId>\n@@ -171,21 +265,33 @@\n       <groupId>org.geneontology</groupId>\n       <artifactId>owl-diff_${scala.version}</artifactId>\n       <version>1.2.2</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>net.sourceforge.owlapi</groupId>\n+          <artifactId>owlapi-distribution</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.geneontology</groupId>\n       <artifactId>whelk-owlapi_${scala.version}</artifactId>\n       <version>1.0.4</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>net.sourceforge.owlapi</groupId>\n+          <artifactId>owlapi-distribution</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>com.google.code.gson</groupId>\n       <artifactId>gson</artifactId>\n-      <version>2.8.0</version>\n+      <version>2.8.6</version>\n     </dependency>\n     <dependency>\n       <groupId>net.sf.py4j</groupId>\n       <artifactId>py4j</artifactId>\n-      <version>0.10.8.1</version>\n+      <version>0.10.9.2</version>\n     </dependency>\n   </dependencies>\n </project>"
  },
  {
    "sha": "b5a856cc3ff3cc35ec6ae19637fe6f0f450631ce",
    "filename": "robot-core/src/main/java/org/obolibrary/robot/ExplainOperation.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/ExplainOperation.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/ExplainOperation.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/main/java/org/obolibrary/robot/ExplainOperation.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -276,8 +276,7 @@ private static String renderTree(Tree<OWLAxiom> tree, OWLObjectRenderer renderer\n     }\n     if (!tree.isLeaf()) builder.append(\"\\n\");\n     String children =\n-        tree.getChildren()\n-            .stream()\n+        tree.getChildren().stream()\n             .map(child -> renderTree(child, renderer))\n             .collect(Collectors.joining(\"\\n\"));\n     builder.append(children);"
  },
  {
    "sha": "cfc297272220bf94ecd18819314306b12474b87b",
    "filename": "robot-core/src/main/java/org/obolibrary/robot/ExportOperation.java",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/ExportOperation.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/ExportOperation.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/main/java/org/obolibrary/robot/ExportOperation.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -656,8 +656,7 @@ private static Cell getPropertyCell(\n     if (entity.isOWLNamedIndividual()) {\n       OWLNamedIndividual i = entity.asOWLNamedIndividual();\n       Collection<OWLIndividual> propVals = EntitySearcher.getObjectPropertyValues(i, op, ontology);\n-      return propVals\n-          .stream()\n+      return propVals.stream()\n           .filter(OWLIndividual::isNamed)\n           .map(pv -> OntologyHelper.renderManchester(pv.asOWLNamedIndividual(), provider, rt))\n           .collect(Collectors.toList());\n@@ -1329,16 +1328,14 @@ private static Row getRow(OWLOntology ontology, Table table, OWLEntity entity) t\n       boolean includeAnonymous) {\n     // Try to convert to object property expressions\n     Collection<OWLObjectPropertyExpression> opes =\n-        props\n-            .stream()\n+        props.stream()\n             .map(p -> (OWLPropertyExpression) p)\n             .filter(OWLPropertyExpression::isObjectPropertyExpression)\n             .map(p -> (OWLObjectPropertyExpression) p)\n             .collect(Collectors.toList());\n     // Try to convert to data property expressions\n     Collection<OWLDataPropertyExpression> dpes =\n-        props\n-            .stream()\n+        props.stream()\n             .map(p -> (OWLPropertyExpression) p)\n             .filter(OWLPropertyExpression::isDataPropertyExpression)\n             .map(p -> (OWLDataPropertyExpression) p)"
  },
  {
    "sha": "4ca17a9d561894800868db2c801f2cd004945ea4",
    "filename": "robot-core/src/main/java/org/obolibrary/robot/IOHelper.java",
    "status": "modified",
    "additions": 12,
    "deletions": 10,
    "changes": 22,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/IOHelper.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/IOHelper.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/main/java/org/obolibrary/robot/IOHelper.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -14,6 +14,7 @@\n import java.io.*;\n import java.net.HttpURLConnection;\n import java.net.URL;\n+import java.nio.charset.Charset;\n import java.util.*;\n import java.util.zip.*;\n import org.apache.commons.io.FileUtils;\n@@ -23,9 +24,9 @@\n import org.apache.jena.query.ReadWrite;\n import org.apache.jena.rdf.model.Model;\n import org.apache.jena.rdf.model.ModelFactory;\n+import org.apache.jena.riot.RDFDataMgr;\n import org.apache.jena.shared.JenaException;\n import org.apache.jena.tdb.TDBFactory;\n-import org.apache.jena.util.FileManager;\n import org.geneontology.obographs.io.OboGraphJsonDocumentFormat;\n import org.geneontology.obographs.io.OgJsonGenerator;\n import org.geneontology.obographs.model.GraphDocument;\n@@ -177,7 +178,7 @@ public IOHelper(Map<String, Object> map) throws IOException {\n    * @throws IOException on issue parsing JSON-LD file as context\n    */\n   public IOHelper(String path) throws IOException {\n-    String jsonString = FileUtils.readFileToString(new File(path));\n+    String jsonString = FileUtils.readFileToString(new File(path), Charset.defaultCharset());\n     setContext(jsonString);\n   }\n \n@@ -188,7 +189,7 @@ public IOHelper(String path) throws IOException {\n    * @throws IOException on issue reading file or setting context from file\n    */\n   public IOHelper(File file) throws IOException {\n-    String jsonString = FileUtils.readFileToString(file);\n+    String jsonString = FileUtils.readFileToString(file, Charset.defaultCharset());\n     setContext(jsonString);\n   }\n \n@@ -379,10 +380,10 @@ public OWLOntology loadOntology(File ontologyFile, File catalogFile) throws IOEx\n       extension = extension.trim().toLowerCase();\n       if (extension.equals(\"yml\") || extension.equals(\"yaml\")) {\n         logger.debug(\"Converting from YAML to JSON\");\n-        String yamlString = FileUtils.readFileToString(ontologyFile);\n+        String yamlString = FileUtils.readFileToString(ontologyFile, Charset.defaultCharset());\n         jsonObject = new Yaml().load(yamlString);\n       } else if (extension.equals(\"js\") || extension.equals(\"json\") || extension.equals(\"jsonld\")) {\n-        String jsonString = FileUtils.readFileToString(ontologyFile);\n+        String jsonString = FileUtils.readFileToString(ontologyFile, Charset.defaultCharset());\n         jsonObject = JsonUtils.fromString(jsonString);\n       }\n \n@@ -392,7 +393,7 @@ public OWLOntology loadOntology(File ontologyFile, File catalogFile) throws IOEx\n         jsonObject = new JsonLdApi().expand(getContext(), jsonObject);\n         String jsonString = JsonUtils.toString(jsonObject);\n         Model model = ModelFactory.createDefaultModel();\n-        model.read(IOUtils.toInputStream(jsonString), null, \"JSON-LD\");\n+        model.read(IOUtils.toInputStream(jsonString, Charset.defaultCharset()), null, \"JSON-LD\");\n         ByteArrayOutputStream output = new ByteArrayOutputStream();\n         // model.write(System.out);\n         model.write(output);\n@@ -613,7 +614,7 @@ public static Dataset loadToTDBDataset(String inputPath, String tdbDir) throws J\n     dataset.begin(ReadWrite.WRITE);\n     try {\n       m = dataset.getDefaultModel();\n-      FileManager.get().readModel(m, inputPath);\n+      RDFDataMgr.read(m, inputPath);\n       dataset.commit();\n     } catch (JenaException e) {\n       dataset.abort();\n@@ -1077,7 +1078,7 @@ public void addBaseNamespaces(String baseNamespacePath) throws IOException {\n       throw new IOException(String.format(fileDoesNotExistError, baseNamespacePath));\n     }\n \n-    List<String> lines = FileUtils.readLines(new File(baseNamespacePath));\n+    List<String> lines = FileUtils.readLines(new File(baseNamespacePath), Charset.defaultCharset());\n     for (String l : lines) {\n       baseNamespaces.add(l.trim());\n     }\n@@ -1100,7 +1101,7 @@ public void addBaseNamespaces(String baseNamespacePath) throws IOException {\n    */\n   public Context getDefaultContext() throws IOException {\n     InputStream stream = IOHelper.class.getResourceAsStream(defaultContextPath);\n-    String jsonString = IOUtils.toString(stream);\n+    String jsonString = IOUtils.toString(stream, Charset.defaultCharset());\n     return parseContext(jsonString);\n   }\n \n@@ -1246,7 +1247,8 @@ public void addPrefixes(String prefixPath) throws IOException {\n     if (!prefixFile.exists()) {\n       throw new IOException(String.format(fileDoesNotExistError, prefixPath));\n     }\n-    Context context1 = parseContext(FileUtils.readFileToString(prefixFile));\n+    Context context1 =\n+        parseContext(FileUtils.readFileToString(prefixFile, Charset.defaultCharset()));\n     addPrefixes(context1);\n   }\n "
  },
  {
    "sha": "19b4a2eec4487206207a47fc76931d14966ea58e",
    "filename": "robot-core/src/main/java/org/obolibrary/robot/MireotOperation.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/MireotOperation.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/MireotOperation.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/main/java/org/obolibrary/robot/MireotOperation.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -757,8 +757,7 @@ private static void copyDescendantsNoIntermediates(\n     Set<IRI> classIRIs = classes.stream().map(OWLNamedObject::getIRI).collect(Collectors.toSet());\n     Set<OWLNamedIndividual> individuals = inputOntology.getIndividualsInSignature();\n     individuals =\n-        individuals\n-            .stream()\n+        individuals.stream()\n             .filter(i -> !classIRIs.contains(i.getIRI()))\n             .collect(Collectors.toSet());\n "
  },
  {
    "sha": "18e3eda6158d6a184e01ce6ecbcbc103df74db37",
    "filename": "robot-core/src/main/java/org/obolibrary/robot/QueryOperation.java",
    "status": "modified",
    "additions": 25,
    "deletions": 28,
    "changes": 53,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/QueryOperation.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/QueryOperation.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/main/java/org/obolibrary/robot/QueryOperation.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -22,7 +22,6 @@\n import org.openrdf.model.Statement;\n import org.openrdf.model.URI;\n import org.openrdf.rio.RDFHandler;\n-import org.openrdf.rio.RDFHandlerException;\n import org.semanticweb.owlapi.apibinding.OWLManager;\n import org.semanticweb.owlapi.formats.TurtleDocumentFormat;\n import org.semanticweb.owlapi.model.*;\n@@ -156,14 +155,14 @@ public static Model loadOntologyAsModel(OWLOntology ontology) throws OWLOntology\n     private final String modelUniqueBlankNodePrefix = UUID.randomUUID().toString();\n \n     @Override\n-    public void handleStatement(Statement triple) throws RDFHandlerException {\n+    public void handleStatement(Statement triple) {\n       Resource subject;\n       if (triple.getSubject() instanceof BNode) {\n         subject =\n             new ResourceImpl(\n                 new AnonId(modelUniqueBlankNodePrefix + ((BNode) triple.getSubject()).getID()));\n       } else {\n-        subject = ResourceFactory.createResource(((URI) triple.getSubject()).stringValue());\n+        subject = ResourceFactory.createResource(triple.getSubject().stringValue());\n       }\n       Property predicate = ResourceFactory.createProperty(triple.getPredicate().stringValue());\n       RDFNode object;\n@@ -172,7 +171,7 @@ public void handleStatement(Statement triple) throws RDFHandlerException {\n             new ResourceImpl(\n                 new AnonId(modelUniqueBlankNodePrefix + ((BNode) triple.getObject()).getID()));\n       } else if (triple.getObject() instanceof URI) {\n-        object = ResourceFactory.createResource(((URI) triple.getObject()).stringValue());\n+        object = ResourceFactory.createResource(triple.getObject().stringValue());\n       } else {\n         Literal literal = (Literal) (triple.getObject());\n         if (literal.getLanguage() != null) {\n@@ -194,16 +193,16 @@ public Model getModel() {\n     }\n \n     @Override\n-    public void startRDF() throws RDFHandlerException {}\n+    public void startRDF() {}\n \n     @Override\n-    public void endRDF() throws RDFHandlerException {}\n+    public void endRDF() {}\n \n     @Override\n-    public void handleNamespace(String prefix, String uri) throws RDFHandlerException {}\n+    public void handleNamespace(String prefix, String uri) {}\n \n     @Override\n-    public void handleComment(String comment) throws RDFHandlerException {}\n+    public void handleComment(String comment) {}\n   }\n \n   /**\n@@ -430,21 +429,19 @@ public static String getDefaultFormatName(String query) {\n    */\n   public static String getDefaultFormatName(Query query) throws IllegalArgumentException {\n     String formatName;\n-    switch (query.getQueryType()) {\n-      case Query.QueryTypeAsk:\n+    switch (query.queryType()) {\n+      case ASK:\n         formatName = \"txt\";\n         break;\n-      case Query.QueryTypeConstruct:\n+      case CONSTRUCT:\n+      case DESCRIBE:\n         formatName = \"ttl\";\n         break;\n-      case Query.QueryTypeDescribe:\n-        formatName = \"ttl\";\n-        break;\n-      case Query.QueryTypeSelect:\n+      case SELECT:\n         formatName = \"csv\";\n         break;\n       default:\n-        throw new IllegalArgumentException(String.format(queryTypeError, query.getQueryType()));\n+        throw new IllegalArgumentException(String.format(queryTypeError, query.queryType()));\n     }\n     return formatName;\n   }\n@@ -500,21 +497,21 @@ public static String getQueryTypeName(String queryString) {\n     QueryExecution qExec = QueryExecutionFactory.create(queryString, createEmptyDataset());\n     Query query = qExec.getQuery();\n     String queryType;\n-    switch (query.getQueryType()) {\n-      case Query.QueryTypeAsk:\n+    switch (query.queryType()) {\n+      case ASK:\n         queryType = \"ASK\";\n         break;\n-      case Query.QueryTypeConstruct:\n+      case CONSTRUCT:\n         queryType = \"CONSTRUCT\";\n         break;\n-      case Query.QueryTypeDescribe:\n+      case DESCRIBE:\n         queryType = \"DESCRIBE\";\n         break;\n-      case Query.QueryTypeSelect:\n+      case SELECT:\n         queryType = \"SELECT\";\n         break;\n       default:\n-        throw new IllegalArgumentException(String.format(queryTypeError, query.getQueryType()));\n+        throw new IllegalArgumentException(String.format(queryTypeError, query.queryType()));\n     }\n     return queryType;\n   }\n@@ -679,18 +676,18 @@ public static boolean runSparqlQuery(\n     if (formatName == null) {\n       formatName = getDefaultFormatName(query);\n     }\n-    switch (query.getQueryType()) {\n-      case Query.QueryTypeAsk:\n+    switch (query.queryType()) {\n+      case ASK:\n         writeResult(qExec.execAsk(), output);\n         return true;\n-      case Query.QueryTypeConstruct:\n+      case CONSTRUCT:\n         return maybeWriteResult(qExec.execConstruct(), formatName, output);\n-      case Query.QueryTypeDescribe:\n+      case DESCRIBE:\n         return maybeWriteResult(qExec.execDescribe(), formatName, output);\n-      case Query.QueryTypeSelect:\n+      case SELECT:\n         return maybeWriteResult(qExec.execSelect(), formatName, output);\n       default:\n-        throw new IllegalArgumentException(String.format(queryTypeError, query.getQueryType()));\n+        throw new IllegalArgumentException(String.format(queryTypeError, query.queryType()));\n     }\n   }\n "
  },
  {
    "sha": "2f80e1c0c99031bf1f6011f6106ca00eb65d2bc2",
    "filename": "robot-core/src/main/java/org/obolibrary/robot/ReasonOperation.java",
    "status": "modified",
    "additions": 2,
    "deletions": 6,
    "changes": 8,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/ReasonOperation.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/ReasonOperation.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/main/java/org/obolibrary/robot/ReasonOperation.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -399,9 +399,7 @@ private static void maybeCreateNewOntology(OWLOntology ontology, Map<String, Str\n         logger.info(\"Placing inferred axioms with annotations into a new ontology\");\n         manager.removeAxioms(\n             ontology,\n-            ontology\n-                .getAxioms()\n-                .stream()\n+            ontology.getAxioms().stream()\n                 .filter(nonap -> !(nonap instanceof OWLAnnotationAssertionAxiom))\n                 .collect(Collectors.toSet()));\n \n@@ -440,9 +438,7 @@ private static void addInferredAxioms(\n     // get all entities that 'belong' to the main ontology\n     // see: https://github.com/ontodev/robot/issues/296\n     Set<OWLEntity> ontologyEntities =\n-        ontology\n-            .getAxioms(AxiomType.DECLARATION)\n-            .stream()\n+        ontology.getAxioms(AxiomType.DECLARATION).stream()\n             .map(OWLDeclarationAxiom::getEntity)\n             .collect(Collectors.toSet());\n "
  },
  {
    "sha": "26318ae2f4fb304e80208322b73ddb95fa26a260",
    "filename": "robot-core/src/main/java/org/obolibrary/robot/RenameOperation.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/RenameOperation.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/RenameOperation.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/main/java/org/obolibrary/robot/RenameOperation.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -92,8 +92,7 @@ public static void renamePrefixes(\n       String oldBase = mapping.getKey();\n       String newBase = mapping.getValue();\n       Set<IRI> matchIRIs =\n-          allIRIs\n-              .stream()\n+          allIRIs.stream()\n               .filter(iri -> iri.toString().startsWith(oldBase))\n               .collect(Collectors.toSet());\n       if (matchIRIs.isEmpty()) {"
  },
  {
    "sha": "c9e885d878d1322a8231f625cf7fef5073ebefb7",
    "filename": "robot-core/src/main/java/org/obolibrary/robot/RepairOperation.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/RepairOperation.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/RepairOperation.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/main/java/org/obolibrary/robot/RepairOperation.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -241,9 +241,7 @@ public static void repairInvalidReferences(\n       }\n       axiomsToPreserve.addAll(ontology.getDeclarationAxioms(obsObj));\n       axiomsToPreserve.addAll(\n-          ontology\n-              .getAnnotationAssertionAxioms(obsObj.getIRI())\n-              .stream()\n+          ontology.getAnnotationAssertionAxioms(obsObj.getIRI()).stream()\n               .filter(ax -> !migrateAnnotations.contains(ax.getProperty()))\n               .collect(Collectors.toSet()));\n       logger.info(\"Replacing: \" + obsObj + \" -> \" + replacedBy);"
  },
  {
    "sha": "4b2deebfa244bcf11f6706e499e5897d32afc43c",
    "filename": "robot-core/src/main/java/org/obolibrary/robot/ReportOperation.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/ReportOperation.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/ReportOperation.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/main/java/org/obolibrary/robot/ReportOperation.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -4,6 +4,7 @@\n import java.net.URISyntaxException;\n import java.net.URL;\n import java.net.URLDecoder;\n+import java.nio.charset.Charset;\n import java.util.ArrayList;\n import java.util.Enumeration;\n import java.util.HashMap;\n@@ -649,15 +650,15 @@ public static boolean processReport(Report report, String outputPath, Map<String\n         if (!file.exists()) {\n           throw new IOException(String.format(missingQueryError, file.getPath()));\n         }\n-        queries.put(rule, FileUtils.readFileToString(file));\n+        queries.put(rule, FileUtils.readFileToString(file, Charset.defaultCharset()));\n       } else {\n         // Process a relative path\n         String path = rule.substring(5);\n         File file = new File(path);\n         if (!file.exists()) {\n           throw new IOException(String.format(missingQueryError, file.getPath()));\n         }\n-        queries.put(rule, FileUtils.readFileToString(file));\n+        queries.put(rule, FileUtils.readFileToString(file, Charset.defaultCharset()));\n       }\n     }\n     return queries;\n@@ -688,7 +689,8 @@ public static boolean processReport(Report report, String outputPath, Map<String\n         // Only add it to the queries if the rule set contains that rule\n         // If rules == null, include all rules\n         if (rules == null || rules.contains(ruleName)) {\n-          queries.put(ruleName, FileUtils.readFileToString(new File(qPath)));\n+          queries.put(\n+              ruleName, FileUtils.readFileToString(new File(qPath), Charset.defaultCharset()));\n         }\n       }\n       return queries;"
  },
  {
    "sha": "1127a576f9afaaa667ba7649a75fa0f02a5f3cb3",
    "filename": "robot-core/src/main/java/org/obolibrary/robot/TemplateHelper.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/TemplateHelper.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/main/java/org/obolibrary/robot/TemplateHelper.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/main/java/org/obolibrary/robot/TemplateHelper.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -1038,8 +1038,7 @@ private static String getManchesterErrorCause(OWLParserException e) {\n       // Some of these have hard to understand \"expected\" values, so we rewrite them the best we can\n       String expected = m.group(2);\n       List<String> expectedSplit =\n-          Lists.newArrayList(expected.split(\"\\n\"))\n-              .stream()\n+          Lists.newArrayList(expected.split(\"\\n\")).stream()\n               .map(String::trim)\n               .filter(x -> !x.equals(\"\"))\n               .collect(Collectors.toList());"
  },
  {
    "sha": "8f3f21de27f857d9eec5b8356d8661433cb23542",
    "filename": "robot-core/src/test/java/org/obolibrary/robot/CoreTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/test/java/org/obolibrary/robot/CoreTest.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/test/java/org/obolibrary/robot/CoreTest.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/test/java/org/obolibrary/robot/CoreTest.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -11,7 +11,6 @@\n import java.util.Set;\n import org.semanticweb.owlapi.apibinding.OWLManager;\n import org.semanticweb.owlapi.model.*;\n-import uk.ac.manchester.cs.owl.owlapi.OWLDataFactoryImpl;\n \n /** Helper methods for core tests. */\n public class CoreTest {\n@@ -23,7 +22,7 @@\n   protected static IRI simpleIRI = IRI.create(base + \"simple.owl\");\n \n   /** Shared data factory. */\n-  protected static OWLDataFactory dataFactory = new OWLDataFactoryImpl();\n+  protected static OWLDataFactory dataFactory = OWLManager.getOWLDataFactory();\n \n   /**\n    * Load an ontology from a resource path."
  },
  {
    "sha": "37eef2ef89df723396b43f22d81c771c66af3a70",
    "filename": "robot-core/src/test/java/org/obolibrary/robot/DiffOperationTest.java",
    "status": "modified",
    "additions": 8,
    "deletions": 4,
    "changes": 12,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/test/java/org/obolibrary/robot/DiffOperationTest.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/test/java/org/obolibrary/robot/DiffOperationTest.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/test/java/org/obolibrary/robot/DiffOperationTest.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -5,6 +5,7 @@\n \n import java.io.IOException;\n import java.io.StringWriter;\n+import java.nio.charset.Charset;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Map;\n@@ -53,18 +54,19 @@ public void testCompareModified() throws IOException, OWLOntologyCreationExcepti\n     boolean actual = DiffOperation.compare(simple, simple1, writer);\n     System.out.println(writer.toString());\n     assertFalse(actual);\n-    String expected = IOUtils.toString(this.getClass().getResourceAsStream(\"/simple1.diff\"));\n+    String expected =\n+        IOUtils.toString(\n+            this.getClass().getResourceAsStream(\"/simple1.diff\"), Charset.defaultCharset());\n     assertEquals(expected, writer.toString());\n   }\n \n   /**\n    * Compare one ontology to a modified copy with labels in output.\n    *\n    * @throws IOException on file problem\n-   * @throws OWLOntologyCreationException on ontology problem\n    */\n   @Test\n-  public void testCompareModifiedWithLabels() throws IOException, OWLOntologyCreationException {\n+  public void testCompareModifiedWithLabels() throws IOException {\n     OWLOntology simple = loadOntology(\"/simple.owl\");\n     OWLOntology elk = loadOntology(\"/simple_elk.owl\");\n \n@@ -74,7 +76,9 @@ public void testCompareModifiedWithLabels() throws IOException, OWLOntologyCreat\n     boolean actual = DiffOperation.compare(simple, elk, new IOHelper(), writer, options);\n     System.out.println(writer.toString());\n     assertFalse(actual);\n-    String expected = IOUtils.toString(this.getClass().getResourceAsStream(\"/simple.diff\"));\n+    String expected =\n+        IOUtils.toString(\n+            this.getClass().getResourceAsStream(\"/simple.diff\"), Charset.defaultCharset());\n     assertEquals(expected, writer.toString());\n   }\n }"
  },
  {
    "sha": "288d25e10f74236d830553a940193b600677132a",
    "filename": "robot-core/src/test/java/org/obolibrary/robot/QueryOperationTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/test/java/org/obolibrary/robot/QueryOperationTest.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/test/java/org/obolibrary/robot/QueryOperationTest.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/test/java/org/obolibrary/robot/QueryOperationTest.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -15,7 +15,6 @@\n import org.apache.jena.riot.Lang;\n import org.junit.Test;\n import org.semanticweb.owlapi.model.OWLOntology;\n-import org.semanticweb.owlapi.model.OWLOntologyCreationException;\n import org.semanticweb.owlapi.model.OWLOntologyStorageException;\n \n /**\n@@ -116,11 +115,9 @@ public void testConstruct() throws IOException, OWLOntologyStorageException {\n    *\n    * @throws IOException on IO error\n    * @throws OWLOntologyStorageException on ontology error\n-   * @throws OWLOntologyCreationException on ontology error\n    */\n   @Test\n-  public void testExecUpdate()\n-      throws IOException, OWLOntologyCreationException, OWLOntologyStorageException {\n+  public void testExecUpdate() throws IOException, OWLOntologyStorageException {\n     OWLOntology inputOntology = loadOntology(\"/simple.owl\");\n     Model model = QueryOperation.loadOntologyAsModel(inputOntology);\n     String updateString =\n@@ -130,7 +127,7 @@ public void testExecUpdate()\n             + \"s:test2 rdfs:label \\\"test 2\\\" .\"\n             + \" } WHERE {}\";\n     QueryOperation.execUpdate(model, updateString);\n-    OWLOntology outputOntology = QueryOperation.convertModel(model);\n+    OWLOntology outputOntology = QueryOperation.convertModel(model, new IOHelper(), null);\n     assertIdentical(\"/simple_update.owl\", outputOntology);\n   }\n "
  },
  {
    "sha": "da68ce884a701dcd2e5fa4bbb81989c1f6bece6c",
    "filename": "robot-core/src/test/java/org/obolibrary/robot/TemplateHelperTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/ontodev/robot/blob/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/test/java/org/obolibrary/robot/TemplateHelperTest.java",
    "raw_url": "https://github.com/ontodev/robot/raw/f3fc79e92edf2df2a6b64a16ac04d8f756f4b778/robot-core/src/test/java/org/obolibrary/robot/TemplateHelperTest.java",
    "contents_url": "https://api.github.com/repos/ontodev/robot/contents/robot-core/src/test/java/org/obolibrary/robot/TemplateHelperTest.java?ref=f3fc79e92edf2df2a6b64a16ac04d8f756f4b778",
    "patch": "@@ -51,7 +51,7 @@ public void testGetAnnotationProperties() throws Exception {\n     String value = \"oboInOwl:inSubset|oboInOwl:id\";\n     String split = \"|\";\n     Set<OWLAnnotationProperty> properties =\n-        TemplateHelper.getAnnotationProperties(checker, value, split);\n+        TemplateHelper.getAnnotationProperties(checker, value, split, 0);\n \n     OWLAnnotationProperty p1 = checker.getOWLAnnotationProperty(\"oboInOwl:inSubset\");\n     OWLAnnotationProperty p2 = checker.getOWLAnnotationProperty(\"oboInOwl:id\");\n@@ -231,7 +231,7 @@ public void testTemplateStrings() throws Exception {\n     QuotedEntityChecker checker = new QuotedEntityChecker();\n     checker.setIOHelper(new IOHelper());\n \n-    anns = TemplateHelper.getStringAnnotations(checker, \"A rdfs:label\", null, \"bar\");\n+    anns = TemplateHelper.getStringAnnotations(checker, \"A rdfs:label\", null, \"bar\", 0);\n     for (OWLAnnotation a : anns) {\n       ann = a;\n     }\n@@ -245,13 +245,14 @@ public void testTemplateStrings() throws Exception {\n     }\n     assertEquals(\"Annotation(rdfs:label \\\"1\\\"^^xsd:integer)\", ann.toString());\n \n-    anns = TemplateHelper.getLanguageAnnotations(checker, \"AL rdfs:label@en\", null, \"bar\");\n+    anns = TemplateHelper.getLanguageAnnotations(checker, \"AL rdfs:label@en\", null, \"bar\", 0);\n     for (OWLAnnotation a : anns) {\n       ann = a;\n     }\n     assertEquals(\"Annotation(rdfs:label \\\"bar\\\"@en)\", ann.toString());\n \n-    ann = TemplateHelper.getIRIAnnotation(checker, \"AI rdfs:label\", IRI.create(\"http://bar.com\"));\n+    ann =\n+        TemplateHelper.getIRIAnnotation(checker, \"AI rdfs:label\", IRI.create(\"http://bar.com\"), 0);\n     assertEquals(\"Annotation(rdfs:label <http://bar.com>)\", ann.toString());\n   }\n }"
  }
]
