[
  {
    "sha": "830674470f8052bb64c64a5b513f5df2815a70c1",
    "filename": ".idea/vcs.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/.idea/vcs.xml",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/.idea/vcs.xml?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -2,5 +2,6 @@\n <project version=\"4\">\n   <component name=\"VcsDirectoryMappings\">\n     <mapping directory=\"\" vcs=\"Git\" />\n+    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n   </component>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "81a5883e11b5c1db1634a6e48550d87dadf80378",
    "filename": "networktables.ini",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/networktables.ini",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/networktables.ini",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/networktables.ini?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -0,0 +1,3 @@\n+[NetworkTables Storage 3.0]\n+boolean \"/Shuffleboard/Main/Music Button\"=false\n+double \"/Shuffleboard/Main/Robot Speed\"=0.108626"
  },
  {
    "sha": "1991fa58e8d0c6081c5bfcc004a5e7279825e88b",
    "filename": "networktables.ini.bak",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/networktables.ini.bak",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/networktables.ini.bak",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/networktables.ini.bak?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -0,0 +1,3 @@\n+[NetworkTables Storage 3.0]\n+boolean \"/Shuffleboard/Main/Music Button\"=true\n+double \"/Shuffleboard/Main/Robot Speed\"=0.108626"
  },
  {
    "sha": "ebded745f9d0dd551fd572ef92b15a1c2c1fbfc6",
    "filename": "src/main/deploy/CruelAngelsThesis.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/CruelAngelsThesis.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/CruelAngelsThesis.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/CruelAngelsThesis.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "e23c8e1284fbbefbf251417937b3fcd346e15b0a",
    "filename": "src/main/deploy/DigDugReady.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/DigDugReady.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/DigDugReady.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/DigDugReady.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "55f5ae913d6919e30e4f049f52c67fc81552456e",
    "filename": "src/main/deploy/DontStopBelievin.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/DontStopBelievin.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/DontStopBelievin.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/DontStopBelievin.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "1e8f71c417322e0257e8208b8de01979b0ce02e4",
    "filename": "src/main/deploy/GurenNoYumiya.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/GurenNoYumiya.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/GurenNoYumiya.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/GurenNoYumiya.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "f0c34000b86bfebe676284a10678b0f6c3da8975",
    "filename": "src/main/deploy/HopesAndDreams.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/HopesAndDreams.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/HopesAndDreams.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/HopesAndDreams.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "4583dfc22872b06618874ba05977ec359f12a196",
    "filename": "src/main/deploy/Megalovania.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/Megalovania.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/Megalovania.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/Megalovania.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "dea1f9eda4886c8708d95235e901593723759441",
    "filename": "src/main/deploy/PixelGalaxy.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/PixelGalaxy.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/PixelGalaxy.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/PixelGalaxy.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "12ce007894225100b671a612916c163e0daa9a5f",
    "filename": "src/main/deploy/Pokemon.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/Pokemon.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/Pokemon.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/Pokemon.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "e7d241fa876f5a9e9e161c45a201c6f9dfb14c2c",
    "filename": "src/main/deploy/Portal.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/Portal.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/Portal.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/Portal.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "d5d3f6d29bf140ae34fdef4a357612d7cdb5999a",
    "filename": "src/main/deploy/ReachForTheStars.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/ReachForTheStars.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/ReachForTheStars.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/ReachForTheStars.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "827d8e1371f8b4cef0c3445ad14f88bb5a05e074",
    "filename": "src/main/deploy/Splatoon theme.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/Splatoon%20theme.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/Splatoon%20theme.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/Splatoon%20theme.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "32399887bed3ac983933abd4f209f430abfa1252",
    "filename": "src/main/deploy/StillAlive.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/StillAlive.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/StillAlive.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/StillAlive.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "e1f2972dec1b521fb2eb1bed38a9964f34a5bd55",
    "filename": "src/main/deploy/SuperSonicRacing.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/SuperSonicRacing.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/SuperSonicRacing.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/SuperSonicRacing.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "f99b85fc3bd2b1ec90c9d92cdc99991b87b80f9a",
    "filename": "src/main/deploy/Sweden.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/Sweden.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/Sweden.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/Sweden.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "4fa51331cedc9643acf51ca99cfdf9fb6c657008",
    "filename": "src/main/deploy/WiiSports.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/WiiSports.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/WiiSports.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/WiiSports.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "ad918a03da192a4d46f4e7086b62aa9c75d57800",
    "filename": "src/main/deploy/digdug.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/digdug.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/digdug.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/digdug.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "9cd4e561cc80d4e9ec09a02528b8424b97962581",
    "filename": "src/main/deploy/example.txt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/example.txt",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/example.txt",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/example.txt?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -1,3 +1,4 @@\n Files placed in this directory will be deployed to the RoboRIO into the\n 'deploy' directory in the home folder. Use the 'Filesystem.getDeployDirectory' wpilib function\n-to get a proper path relative to the deploy directory.\n\\ No newline at end of file\n+to get a proper path relative to the deploy directory.\n+"
  },
  {
    "sha": "a77a0ad06ebaf1fab98d12b614959866d1c1f75a",
    "filename": "src/main/deploy/mm2wood.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/mm2wood.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/mm2wood.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/mm2wood.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "719fcc4f35201839c6649acc49e54e4db7ae59d6",
    "filename": "src/main/deploy/whatislove.chrp",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/whatislove.chrp",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/deploy/whatislove.chrp",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/deploy/whatislove.chrp?ref=96f08bfbde2d352d09167b01ff5f454f406d9398"
  },
  {
    "sha": "619e056e4adcec338c6431b2d9958183eac2ff53",
    "filename": "src/main/java/frc/robot/DashHelper.java",
    "status": "modified",
    "additions": 74,
    "deletions": 73,
    "changes": 147,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/DashHelper.java",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/DashHelper.java",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/java/frc/robot/DashHelper.java?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -1,119 +1,120 @@\n package frc.robot;\n \n import com.analog.adis16448.frc.ADIS16448_IMU;\n-import edu.wpi.first.wpilibj.ADXRS450_Gyro;\n+import com.ctre.phoenix.motorcontrol.can.WPI_TalonFX;\n+import edu.wpi.cscore.UsbCamera;\n+import edu.wpi.first.cameraserver.CameraServer;\n+import edu.wpi.first.networktables.NetworkTableEntry;\n+import edu.wpi.first.wpilibj.Encoder;\n import edu.wpi.first.wpilibj.PowerDistributionPanel;\n-import edu.wpi.first.wpilibj.Sendable;\n-import edu.wpi.first.wpilibj.Timer;\n-//import edu.wpi.first.wpilibj.drive.MecanumDrive;\n import edu.wpi.first.wpilibj.shuffleboard.BuiltInWidgets;\n+import edu.wpi.first.wpilibj.shuffleboard.ComplexWidget;\n import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;\n import edu.wpi.first.wpilibj.shuffleboard.ShuffleboardTab;\n-import edu.wpi.cscore.UsbCamera;\n-import edu.wpi.first.cameraserver.CameraServer;\n-import edu.wpi.cscore.VideoMode;\n-import edu.wpi.cscore.VideoSource;\n-import edu.wpi.first.networktables.NetworkTableEntry;\n import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;\n import edu.wpi.first.wpilibj.util.Color;\n import frc.robot.subsystem.*;\n-import frc.robot.Robot;\n-\n \n+import java.util.Map;\n \n public class DashHelper {\n-    private ShuffleboardTab mainDash;\n-    public static NetworkTableEntry sbSpeedTest;\n-    public static NetworkTableEntry sbGyroWidget;\n-    public static NetworkTableEntry sbEncoderDistance;\n-    public static NetworkTableEntry sbRedValue, sbGreenValue, sbBlueValue;\n-    public static NetworkTableEntry sbTimer;\n-    public static NetworkTableEntry kP;\n-    public static NetworkTableEntry kI;\n-    public static NetworkTableEntry kD;\n-    public static NetworkTableEntry sbServoOpen;\n-    private static DashHelper dash;\n+    public DriveSubsystem drive;\n     public ADIS16448_IMU gyro;\n-\n-    public static DashHelper getInstance(){\n+    public PowerDistributionPanel pdp;\n+    public Encoder encoder;\n+    public UsbCamera camera;\n+    public double robotSpeed;\n+    public boolean music;\n+    private static frc.robot.DashHelper dash;\n+    public NetworkTableEntry maxSpeed;\n+    public NetworkTableEntry musicButton;\n+    public WPI_TalonFX motorLeftBack;\n+    public NetworkTableEntry light;\n+    public boolean musicMode;\n+    public NetworkTableEntry songSelection;\n+    public boolean initialSongValue;\n+    public NetworkTableEntry encoderValue;\n+    public double encoderDistance;\n+\n+    public static frc.robot.DashHelper getInstance(){\n         // DashHelper is a singleton, only one object can exist\n         if(dash == null){\n-            dash = new DashHelper();\n-            dash.startDash();\n+            dash = new frc.robot.DashHelper();\n+            dash.startDashboard();\n         }\n         return dash;\n     }\n \n-    private DashHelper(){\n-        // Control the dashboard stuff to initialize only once\n-    }\n-\n-    private void startDash(){\n-        mainDash = Shuffleboard.getTab(\"Main\");\n-        UsbCamera camera = CameraServer.getInstance().startAutomaticCapture();\n-        camera.setVideoMode(VideoMode.PixelFormat.kMJPEG, 800, 600, 20 );\n-        camera.setExposureAuto();\n-        //SmartDashboard.putNumber(\"Encoder Distance\", )\n-        mainDash.add(\"Camera\", camera);\n+    private void startDashboard(){\n+        initialSongValue = false;\n+        musicButton = Shuffleboard.getTab(\"Main\").addPersistent(\"Music Button\", music).withWidget(BuiltInWidgets.kToggleButton).getEntry();\n+        System.out.println(musicButton.getBoolean(false) + \" = dashboard music\");\n+        //musicMode = musicButton.getBoolean(false);\n \n+        if (musicButton.getBoolean(false ) == false) {\n+        maxSpeed = Shuffleboard.getTab(\"Main\").addPersistent(\"Robot Speed\", robotSpeed).withWidget(BuiltInWidgets.kNumberSlider)\n+                .withProperties(Map.of(\"min\", 0, \"max\", 1)).getEntry();\n \n+        //when this is called, drive is null, so not working\n \n+        /*encoderDistance = drive.getEncoderInchesLeftBack();\n+        encoderValue = Shuffleboard.getTab(\"Main\").add(\"Encoder Distance\", encoderDistance).getEntry(); */\n+        }\n \n \n+        //songSelection = Shuffleboard.getTab(\"Main\").addPersistent(\"Song\", \"Megalovania\").getEntry();\n \n+        /*light = Shuffleboard.getTab(\"Main\").add(\"Light\", false)\n+                .withWidget(\"Boolean Box\")\n+                .withProperties(Map.of(\"colorWhenTrue\", \"green\", \"colorWhenFalse\", \"red\")).getEntry();*/\n \n-        /*sbSpeedTest = mainDash.add(\"Speed\", Constants.kSpeed).getEntry();\n-        sbTimer = mainDash.add(\"Timer\", 0).getEntry();\n-        sbEncoderDistance = mainDash.add(\"Encoder\", 0).getEntry();*/\n \n-/*      sbRedValue = mainDash.add(\"Red Value\", 0).getEntry();\n-        sbGreenValue = mainDash.add(\"Green Value\", 0).getEntry();\n-        sbBlueValue = mainDash.add(\"Blue Value\", 0).getEntry();\n-*/\n-        sbServoOpen = mainDash.add(\"Servo open\", false).getEntry();\n+    }\n \n-        kP = mainDash.add(\"P\", 0.015).getEntry();\n-        kI = mainDash.add(\"I\", 0).getEntry();\n-        kD = mainDash.add(\"D\", 0).getEntry();\n+    public boolean getMusicMode() {\n+        musicMode = musicButton.getBoolean(false);\n+        System.out.println(musicMode);\n+        return musicMode;\n+    }\n \n-        //SmartDashboard.putNumber(\"\")\n-        Shuffleboard.selectTab(\"Main\");\n-        Shuffleboard.startRecording();\n \n+    public void setUpCamera(UsbCamera camera) {\n+        Shuffleboard.getTab(\"Main\").add(\"Camera\", camera).withWidget(BuiltInWidgets.kCameraStream);\n     }\n \n-    public void setEncoder(double distance){\n-        sbEncoderDistance.setDouble(distance);\n+    public void setUpEncoderWidget(double encoderDistance) {\n+        encoderValue = Shuffleboard.getTab(\"Main\").add(\"Encoder Distance\", encoderDistance)\n+                .withWidget(BuiltInWidgets.kTextView).getEntry();\n     }\n \n-    //public void setUpEncoder()\n+    public void setUpGyroWidget(ADIS16448_IMU gyro) {\n+        Shuffleboard.getTab(\"Main\").add(\"Gyro\", gyro).withWidget(BuiltInWidgets.kGyro);\n+    }\n \n-    public void setColor(Color color){\n-        sbRedValue.setDouble(color.red);\n-        sbGreenValue.setDouble(color.green);\n-        sbBlueValue.setDouble(color.blue);\n+    public void setUpPDPWidget(PowerDistributionPanel pdp) {\n+        Shuffleboard.getTab(\"Main\").add(\"PDP\", pdp).withWidget(BuiltInWidgets.kPowerDistributionPanel);\n     }\n \n-    public void setUpGyroWidget(ADIS16448_IMU gyro){\n-        mainDash.add(\"Gyro\", gyro).withWidget(BuiltInWidgets.kGyro);\n-        //System.out.println(\"Tried to set up gyro\");\n+    public void setPokemon() {\n+        Shuffleboard.getTab(\"Main\").add(\"Pokemon\", initialSongValue).withWidget(BuiltInWidgets.kToggleSwitch);\n     }\n \n-    /*public void setUpCamera(CameraServer camera){\n-        mainDash.add(\"Camera\", camera)\n-    }*/\n+    public void setStillAlive() {\n+        Shuffleboard.getTab(\"Main\").add(\"Still Alive\", initialSongValue).withWidget(BuiltInWidgets.kToggleSwitch);\n+    }\n \n-    //not using mecanum\n-    /*public void setUpMechDriveWidget(MecanumDrive mechDrive){\n-        mainDash.add(\"Mecanum Drive\", mechDrive).withWidget(BuiltInWidgets.kMecanumDrive);\n-    }*/\n-    public void setUpPDPWidget(PowerDistributionPanel pdp){\n-        mainDash.add(\"PDP\", pdp).withWidget(BuiltInWidgets.kPowerDistributionPanel);\n-        //System.out.println(\"Tried to set up pdp widget\");\n+  /*  public void setUpLightOn(){\n+        Shuffleboard.getTab(\"Main\").add(\"Light\", false);\n     }\n \n-    public void setTimer(Timer timer){\n-        sbTimer.setDouble(timer.get());\n+    public void setUpLightEnabled(){\n+        Shuffleboard.getTab(\"Main\").add(\"Light\", true);\n     }\n \n+    /*public void lightOn(Color color){\n+        light.setDouble(color.red);\n+    }\n+    public void lightEnabled(Color color){\n+        light.setDouble(color.green);\n+    }*/\n }\n\\ No newline at end of file"
  },
  {
    "sha": "6f1f2f482bfdae4a02583a1ff9f49c308bf7619c",
    "filename": "src/main/java/frc/robot/Robot.java",
    "status": "modified",
    "additions": 96,
    "deletions": 30,
    "changes": 126,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/Robot.java",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/Robot.java",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/java/frc/robot/Robot.java?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -8,48 +8,79 @@\n package frc.robot;\n \n import com.analog.adis16448.frc.ADIS16448_IMU;\n+import com.ctre.phoenix.motorcontrol.ControlMode;\n import com.ctre.phoenix.motorcontrol.can.WPI_TalonFX;\n-import edu.wpi.first.wpilibj.PowerDistributionPanel;\n-import edu.wpi.first.wpilibj.Sendable;\n-import edu.wpi.first.wpilibj.TimedRobot;\n+import edu.wpi.cscore.UsbCamera;\n+import edu.wpi.first.cameraserver.CameraServer;\n+import edu.wpi.first.networktables.NetworkTableEntry;\n+import edu.wpi.first.wpilibj.*;\n \n-import edu.wpi.first.wpilibj.Joystick;\n import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;\n+import edu.wpi.first.wpilibj.shuffleboard.ShuffleboardTab;\n import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;\n import edu.wpi.first.wpilibj2.command.CommandScheduler;\n import frc.robot.command.auto.autopaths.*;\n import frc.robot.command.drive.TeleopDriveCommand;\n+import edu.wpi.first.wpilibj.util.Color;\n+import java.util.ArrayList;\n+import com.ctre.phoenix.music.Orchestra;\n import frc.robot.subsystem.*;\n import frc.robot.DashHelper;\n \n public class Robot extends TimedRobot {\n   private DriveSubsystem drive;\n   public PowerDistributionPanel pdp;\n-  //private double beginningPosition = 0;\n \n-  //private double currentPosition = Math.abs(drive.motorLeftBack.getSelectedSensorPosition() - beginningPosition);\n-\n-  public DashHelper dash;\n+  //public DashHelper dash;\n \n   public WPI_TalonFX motorRightFront;\n   public WPI_TalonFX motorLeftFront;\n   public WPI_TalonFX motorRightBack;\n   public WPI_TalonFX motorLeftBack;\n \n   public ADIS16448_IMU gyro;\n+  //public Encoder encoder;\n+  public UsbCamera camera;\n \n   public Joystick joystick;\n \n+  //private ShuffleboardTab mainDash;\n+\n+  //public double robotSpeed;\n+\n+  public boolean driveExists;\n+  //public boolean robotEnabled;\n+  //private boolean musicMode;\n+  //public NetworkTableEntry light;\n+  public Orchestra orchestra;\n+  //public NetworkTableEntry musicButton;\n+  //public boolean music;\n+  public boolean musicMode;\n+  public String song;\n+  public NetworkTableEntry songSelection;\n+  public String songPath;\n+  public NetworkTableEntry encoderValue;\n+\n+  //music mode is used to play .chrp files from the motors but is not necessary for the robot to work\n   public Robot() {\n+    DashHelper.getInstance();\n+    musicMode = DashHelper.getInstance().getMusicMode();\n+    //musicMode = musicButton.getBoolean(false);\n+    //musicMode = true;\n+\n+    //music = true;\n     joystick = new Joystick(0);\n     // TODO: refactor port numbers into variables\n+    orchestra = new Orchestra();\n+    gyro = new ADIS16448_IMU();\n     pdp = new PowerDistributionPanel();\n     pdp.clearStickyFaults();\n-    DashHelper.getInstance().setUpPDPWidget(pdp);\n-    DashHelper.getInstance().setUpGyroWidget(gyro);\n-    //DashHelper.getInstance().setEncoder(currentPosition);\n-    //DashHelper.getInstance().\n-\n+    if (!musicMode) {\n+      camera = CameraServer.getInstance().startAutomaticCapture();\n+      DashHelper.getInstance().setUpCamera(camera);\n+      DashHelper.getInstance().setUpPDPWidget(pdp);\n+      DashHelper.getInstance().setUpGyroWidget(gyro);\n+    }\n     System.out.println(\"Robot.Robot(): initializing motorRightFront\");\n     motorRightFront = new WPI_TalonFX(0);\n \n@@ -63,53 +94,88 @@ public Robot() {\n     motorLeftBack = new WPI_TalonFX(3);\n \n     System.out.println(\"Robot.Robot(): initialized all motors\");\n+  }\n+\n+\n \n-    gyro = new ADIS16448_IMU();\n \n-    drive = new DriveSubsystem(motorRightFront, motorLeftFront, motorRightBack, motorLeftBack, gyro);\n-    drive.m_right.setInverted(true);\n-  } \n \n   @Override\n   public void robotInit() {\n-\n-    dash = DashHelper.getInstance();\n-    //gyro currently not working\n-    //SmartDashboard.putData(gyro);\n-    //Shuffleboard.getTab(\"Main\").add((Sendable) gyro);\n+    if(musicMode){\n+      DashHelper.getInstance().setPokemon();\n+      orchestra.loadMusic(\"StillAlive.chrp\");\n+      orchestra.addInstrument(motorLeftBack);\n+      orchestra.addInstrument(motorLeftFront);\n+      orchestra.addInstrument(motorRightBack);\n+      orchestra.addInstrument(motorRightFront);\n+      orchestra.stop();\n+      orchestra.play();\n+    } else {\n+      drive = new DriveSubsystem(motorRightFront, motorLeftFront, motorRightBack, motorLeftBack, gyro);\n+      drive.m_right.setInverted(true);\n+      driveExists = true;\n+      DashHelper.getInstance().setUpEncoderWidget(drive.getEncoderInchesLeftBack());\n+    }\n   }\n \n \n   @Override\n   public void robotPeriodic() {\n-    CommandScheduler.getInstance().run();\n+    if(!musicMode) {\n+      CommandScheduler.getInstance().run();\n+    }\n+    SmartDashboard.updateValues();\n+    Shuffleboard.update();\n+      //musicButton.setBoolean(music);\n   }\n \n \n   @Override\n   public void autonomousInit() {\n-    CommandScheduler.getInstance().cancelAll();\n-    CommandScheduler.getInstance().schedule(new GalacticSearchABlueCommandGroup(drive));\n+    if(!musicMode){\n+      //encoderValue.setDouble(drive.getEncoderValueLeftBack());\n+      CommandScheduler.getInstance().cancelAll();\n+      CommandScheduler.getInstance().schedule(new GalacticSearchBRedCommandGroup(drive, DashHelper.getInstance().maxSpeed.getDouble(1.0)));\n+      //light.setBoolean(true);\n+    }\n   }\n \n \n   @Override\n-  public void autonomousPeriodic() {}\n+  public void autonomousPeriodic() {\n+    /*if(!musicMode) {\n+      encoderValue.setDouble(drive.getEncoderInchesLeftBack());\n+    }*/\n+  }\n \n \n   @Override\n   public void teleopInit() {\n-    CommandScheduler.getInstance().cancelAll();\n-    CommandScheduler.getInstance().schedule(new TeleopDriveCommand(drive, joystick));\n+    if(!musicMode){\n+      CommandScheduler.getInstance().cancelAll();\n+      CommandScheduler.getInstance().schedule(new TeleopDriveCommand(drive, joystick));\n+\n+      //light.setBoolean(true);\n+    }\n   }\n \n \n   @Override\n-  public void teleopPeriodic() {}\n+  public void teleopPeriodic() {\n+    /*if(!musicMode){\n+    encoderValue.setDouble(drive.getEncoderInchesLeftBack());\n+    System.out.println(encoderValue + \" value\");\n+    System.out.println(drive + \" drive\");\n+    }*/\n+    //encoderValue.setDouble(drive.getEncoderValueLeftBack());\n+  }\n \n \n   @Override\n-  public void disabledInit() {}\n+  public void disabledInit() {\n+    //light.setBoolean(false);\n+  }\n \n \n   @Override"
  },
  {
    "sha": "6aa82d302fb31569c8937b812e8a2e88622b417a",
    "filename": "src/main/java/frc/robot/command/auto/DriveLengthConstantCommand.java",
    "status": "modified",
    "additions": 10,
    "deletions": 4,
    "changes": 14,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/DriveLengthConstantCommand.java",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/DriveLengthConstantCommand.java",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/java/frc/robot/command/auto/DriveLengthConstantCommand.java?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -11,11 +11,17 @@\n     private double relativePosition;\n     private double targetPosition;\n \n-    public DriveLengthConstantCommand(double inches, DriveSubsystem drive) {\n+    private double driveSpeed;\n+    private final double wheelDiameter = 6;\n+    private final double gearRatio = 10.71;\n+    private final double unitsPerMotorRevolution = 2048;\n+\n+    public DriveLengthConstantCommand(double inches, DriveSubsystem drive, double robotSpeed) {\n         this.drive = drive;\n         targetPosition = inches;\n         direction = (int) Math.signum(inches);\n         addRequirements(drive);\n+        driveSpeed = robotSpeed;\n     }\n \n     @Override\n@@ -25,9 +31,9 @@ public void initialize() {\n \n     @Override\n     public void execute() {\n-        relativePosition = Math.abs(drive.getEncoderInchesLeftBack() - startingPosition);\n-        drive.m_left.set(direction * .1);\n-        drive.m_right.set(direction * .1);\n+        relativePosition = Math.abs(drive.getEncoderValueLeftBack() - startingPosition);\n+        drive.m_left.set(-direction * driveSpeed);\n+        drive.m_right.set(-direction * driveSpeed);\n     }\n \n     @Override"
  },
  {
    "sha": "5b54f79d6d2ca8e9598703e8c63f40b54e298b76",
    "filename": "src/main/java/frc/robot/command/auto/RotateConstantCommand.java",
    "status": "modified",
    "additions": 8,
    "deletions": 6,
    "changes": 14,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/RotateConstantCommand.java",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/RotateConstantCommand.java",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/java/frc/robot/command/auto/RotateConstantCommand.java?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -9,11 +9,13 @@\n     private double targetAngle;\n     private double relativeAngle;\n     private double loopCounter = 0;\n+    private double driveSpeed;\n \n-    public RotateConstantCommand(double targetAngle, DriveSubsystem drive) {\n+    public RotateConstantCommand(double targetAngle, DriveSubsystem drive, double robotSpeed) {\n         this.drive = drive;\n         this.targetAngle = targetAngle;\n         addRequirements(drive);\n+        driveSpeed = robotSpeed;\n     }\n \n \n@@ -27,11 +29,11 @@ public void execute() {\n         relativeAngle = drive.getGyroAngle() - startingAngle;\n \n         if(targetAngle > 0){\n-            drive.setRight(-.1);\n-            drive.setLeft(.1);\n+            drive.m_right.set(-driveSpeed);\n+            drive.m_left.set(driveSpeed);\n         } else {\n-            drive.setRight(.1);\n-            drive.setLeft(-.1);\n+            drive.m_right.set(driveSpeed);\n+            drive.m_left.set(-driveSpeed);\n         }\n \n         loopCounter++;\n@@ -41,7 +43,7 @@ public void execute() {\n     public boolean isFinished() {\n         System.out.println(\"RotateConstantCommand.isFinished(): Relative Angle: \" + relativeAngle +\n                 \" Current Angle: \" + drive.getGyroAngle());\n-        return Math.abs(relativeAngle) >=Math.abs(targetAngle);\n+        return Math.abs(relativeAngle) >= Math.abs(targetAngle);\n \n     }\n }"
  },
  {
    "sha": "5a196e8fb1994d0461927ed69d9987696b109696",
    "filename": "src/main/java/frc/robot/command/auto/autopaths/GalacticSearchABlueCommandGroup.java",
    "status": "modified",
    "additions": 10,
    "deletions": 10,
    "changes": 20,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchABlueCommandGroup.java",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchABlueCommandGroup.java",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchABlueCommandGroup.java?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -8,17 +8,17 @@\n import java.sql.DriverPropertyInfo;\n \n public class GalacticSearchABlueCommandGroup extends SequentialCommandGroup {\n-    public GalacticSearchABlueCommandGroup(DriveSubsystem drive) {\n+    public GalacticSearchABlueCommandGroup(DriveSubsystem drive, double driveSpeed) {\n         addCommands(\n-                new DriveLengthConstantCommand(15 * 12, drive),\n-                new RotateConstantCommand(-90, drive),\n-                new DriveLengthConstantCommand(7.5*12, drive),\n-                new RotateConstantCommand(90, drive),\n-                new DriveLengthConstantCommand(7.5 * 12, drive),\n-                new RotateConstantCommand(90, drive),\n-                new DriveLengthConstantCommand(2.5 * 12, drive),\n-                new RotateConstantCommand(-90, drive),\n-                new DriveLengthConstantCommand(7.5 * 12, drive)\n+                new DriveLengthConstantCommand(15 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(-90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(7.5*12, drive, driveSpeed),\n+                new RotateConstantCommand(90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(7.5 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(2.5 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(-90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(7.5 * 12, drive, driveSpeed)\n         );\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "8588a9e75103a1a094e58f7a407ab058e4a854cb",
    "filename": "src/main/java/frc/robot/command/auto/autopaths/GalacticSearchARedCommandGroup.java",
    "status": "modified",
    "additions": 10,
    "deletions": 10,
    "changes": 20,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchARedCommandGroup.java",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchARedCommandGroup.java",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchARedCommandGroup.java?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -8,17 +8,17 @@\n import java.sql.DriverPropertyInfo;\n \n public class GalacticSearchARedCommandGroup extends SequentialCommandGroup {\n-    public GalacticSearchARedCommandGroup(DriveSubsystem drive) {\n+    public GalacticSearchARedCommandGroup(DriveSubsystem drive, double driveSpeed) {\n         addCommands(\n-                new DriveLengthConstantCommand(7.5 * 12, drive),\n-                new RotateConstantCommand(90, drive),\n-                new DriveLengthConstantCommand(2.5 * 12, drive),\n-                new RotateConstantCommand(-90, drive),\n-                new DriveLengthConstantCommand(5 * 12, drive),\n-                new RotateConstantCommand(-90, drive),\n-                new DriveLengthConstantCommand(7.5 * 12, drive),\n-                new RotateConstantCommand(90, drive),\n-                new DriveLengthConstantCommand(17.5 * 12, drive)\n+                new DriveLengthConstantCommand(7.5 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(2.5 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(-90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(5 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(-90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(7.5 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(17.5 * 12, drive, driveSpeed)\n         );\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "08bd313ced076377794e0000510f87e2dc49851c",
    "filename": "src/main/java/frc/robot/command/auto/autopaths/GalacticSearchBBlueCommandGroup.java",
    "status": "modified",
    "additions": 10,
    "deletions": 10,
    "changes": 20,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchBBlueCommandGroup.java",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchBBlueCommandGroup.java",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchBBlueCommandGroup.java?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -8,17 +8,17 @@\n import java.sql.DriverPropertyInfo;\n \n public class GalacticSearchBBlueCommandGroup extends SequentialCommandGroup {\n-    public GalacticSearchBBlueCommandGroup(DriveSubsystem drive) {\n+    public GalacticSearchBBlueCommandGroup(DriveSubsystem drive, double driveSpeed) {\n         addCommands(\n-                new DriveLengthConstantCommand(15 * 12, drive),\n-                new RotateConstantCommand(-90, drive),\n-                new DriveLengthConstantCommand(5 * 12, drive),\n-                new RotateConstantCommand(90, drive),\n-                new DriveLengthConstantCommand(10 * 12, drive),\n-                new RotateConstantCommand(90, drive),\n-                new DriveLengthConstantCommand(5 * 12, drive),\n-                new RotateConstantCommand(-90, drive),\n-                new DriveLengthConstantCommand(5 * 12, drive)\n+                new DriveLengthConstantCommand(15 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(-90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(5 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(10 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(5 * 12, drive, driveSpeed),\n+                new RotateConstantCommand(-90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(5 * 12, drive, driveSpeed)\n         );\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "30dad52d13e74ac4a14b4450969a801e213824ec",
    "filename": "src/main/java/frc/robot/command/auto/autopaths/GalacticSearchBRedCommandGroup.java",
    "status": "modified",
    "additions": 10,
    "deletions": 10,
    "changes": 20,
    "blob_url": "https://github.com/2102062/Robot-Code-2021/blob/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchBRedCommandGroup.java",
    "raw_url": "https://github.com/2102062/Robot-Code-2021/raw/96f08bfbde2d352d09167b01ff5f454f406d9398/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchBRedCommandGroup.java",
    "contents_url": "https://api.github.com/repos/2102062/Robot-Code-2021/contents/src/main/java/frc/robot/command/auto/autopaths/GalacticSearchBRedCommandGroup.java?ref=96f08bfbde2d352d09167b01ff5f454f406d9398",
    "patch": "@@ -6,17 +6,17 @@\n import frc.robot.subsystem.DriveSubsystem;\n \n public class GalacticSearchBRedCommandGroup extends SequentialCommandGroup {\n-    public GalacticSearchBRedCommandGroup (DriveSubsystem drive) {\n+    public GalacticSearchBRedCommandGroup (DriveSubsystem drive, double driveSpeed) {\n         addCommands(\n-                new DriveLengthConstantCommand(90, drive),\n-                new RotateConstantCommand(90, drive),\n-                new DriveLengthConstantCommand(60, drive),\n-                new RotateConstantCommand(-90, drive),\n-                new DriveLengthConstantCommand(120, drive),\n-                new RotateConstantCommand(-90, drive),\n-                new DriveLengthConstantCommand(60, drive),\n-                new RotateConstantCommand(90, drive),\n-                new DriveLengthConstantCommand(180, drive)\n+                new DriveLengthConstantCommand(90, drive, driveSpeed),\n+                new RotateConstantCommand(90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(60, drive, driveSpeed),\n+                new RotateConstantCommand(-90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(120, drive, driveSpeed),\n+                new RotateConstantCommand(-90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(60, drive, driveSpeed),\n+                new RotateConstantCommand(90, drive, driveSpeed),\n+                new DriveLengthConstantCommand(180, drive, driveSpeed)\n         );\n     }\n }\n\\ No newline at end of file"
  }
]
