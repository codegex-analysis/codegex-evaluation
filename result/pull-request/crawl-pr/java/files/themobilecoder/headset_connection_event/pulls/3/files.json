[
  {
    "sha": "60718c87f2adf5a41335eb734e8d6f40c29a61ee",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 4,
    "deletions": 97,
    "changes": 101,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/.gitignore",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/.gitignore",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/.gitignore?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -1,103 +1,10 @@\n-# Miscellaneous\n-*.class\n-*.lock\n-*.log\n-*.pyc\n-*.swp\n .DS_Store\n-.atom/\n-.buildlog/\n-.history\n-.svn/\n-\n-# IntelliJ related\n-*.iml\n-*.ipr\n-*.iws\n-.idea/\n-\n-# Visual Studio Code related\n-.vscode/\n-\n-# Flutter repo-specific\n-/bin/cache/\n-/bin/mingit/\n-/dev/benchmarks/mega_gallery/\n-/dev/bots/.recipe_deps\n-/dev/bots/android_tools/\n-/dev/docs/doc/\n-/dev/docs/flutter.docs.zip\n-/dev/docs/lib/\n-/dev/docs/pubspec.yaml\n-/dev/integration_tests/**/xcuserdata\n-/dev/integration_tests/**/Pods\n-/packages/flutter/coverage/\n-version\n-\n-# packages file containing multi-root paths\n-.packages.generated\n-\n-# Flutter/Dart/Pub related\n-**/doc/api/\n .dart_tool/\n-.flutter-plugins\n+\n .packages\n-.pub-cache/\n .pub/\n-build/\n-flutter_*.png\n-linked_*.ds\n-unlinked.ds\n-unlinked_spec.ds\n-\n-# Android related\n-**/android/**/gradle-wrapper.jar\n-**/android/.gradle\n-**/android/captures/\n-**/android/gradlew\n-**/android/gradlew.bat\n-**/android/local.properties\n-**/android/**/GeneratedPluginRegistrant.java\n-**/android/key.properties\n-*.jks\n-\n-# iOS/XCode related\n-**/ios/**/*.mode1v3\n-**/ios/**/*.mode2v3\n-**/ios/**/*.moved-aside\n-**/ios/**/*.pbxuser\n-**/ios/**/*.perspectivev3\n-**/ios/**/*sync/\n-**/ios/**/.sconsign.dblite\n-**/ios/**/.tags*\n-**/ios/**/.vagrant/\n-**/ios/**/DerivedData/\n-**/ios/**/Icon?\n-**/ios/**/Pods/\n-**/ios/**/.symlinks/\n-**/ios/**/profile\n-**/ios/**/xcuserdata\n-**/ios/.generated/\n-**/ios/Flutter/App.framework\n-**/ios/Flutter/Flutter.framework\n-**/ios/Flutter/Flutter.podspec\n-**/ios/Flutter/Generated.xcconfig\n-**/ios/Flutter/app.flx\n-**/ios/Flutter/app.zip\n-**/ios/Flutter/flutter_assets/\n-**/ios/Flutter/flutter_export_environment.sh\n-**/ios/ServiceDefinitions.json\n-**/ios/Runner/GeneratedPluginRegistrant.*\n \n-# Coverage\n-coverage/\n+build/\n \n-# Exceptions to above rules.\n-!**/ios/**/default.mode1v3\n-!**/ios/**/default.mode2v3\n-!**/ios/**/default.pbxuser\n-!**/ios/**/default.perspectivev3\n-!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n-example/.flutter-plugins-dependencies\n-example/ios/Flutter/.last_build_id\n-example/.flutter-plugins-dependencies\n+*.iml\n+.idea/"
  },
  {
    "sha": "4d5f4ab5f490c3803f27cb3c40f04808a8482e8d",
    "filename": ".metadata",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/.metadata",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/.metadata",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/.metadata?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -0,0 +1,10 @@\n+# This file tracks properties of this Flutter project.\n+# Used by Flutter tool to assess capabilities and perform upgrades etc.\n+#\n+# This file should be version controlled and should not be manually edited.\n+\n+version:\n+  revision: c5a4b4029c0798f37c4a39b479d7cb75daa7b05c\n+  channel: stable\n+\n+project_type: plugin"
  },
  {
    "sha": "467bb44ac965c8528c3e6cbecd8f0f9926ad7653",
    "filename": "CHANGELOG.md",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/CHANGELOG.md",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/CHANGELOG.md?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -1,3 +1,7 @@\n+## 2.0.0\n+\n+- Null safety support\n+\n ## 1.0.0\n \n - Fix Swift Errors"
  },
  {
    "sha": "0e0a1bac2d3d895250ba1c8765eeb00619feff2a",
    "filename": "android/.project",
    "status": "removed",
    "additions": 0,
    "deletions": 17,
    "changes": 17,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/android/.project",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/android/.project",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/.project?ref=f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f",
    "patch": "@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<projectDescription>\n-\t<name>android_</name>\n-\t<comment>Project android_ created by Buildship.</comment>\n-\t<projects>\n-\t</projects>\n-\t<buildSpec>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.buildship.core.gradleprojectbuilder</name>\n-\t\t\t<arguments>\n-\t\t\t</arguments>\n-\t\t</buildCommand>\n-\t</buildSpec>\n-\t<natures>\n-\t\t<nature>org.eclipse.buildship.core.gradleprojectnature</nature>\n-\t</natures>\n-</projectDescription>"
  },
  {
    "sha": "bce518ce96eb9567367fb7163fcd77940783ba73",
    "filename": "android/build.gradle",
    "status": "modified",
    "additions": 4,
    "deletions": 8,
    "changes": 12,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/build.gradle",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/build.gradle",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/build.gradle?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -1,5 +1,5 @@\n-group 'flutter.moum.headset_event'\n-version '1.0-SNAPSHOT'\n+group 'flutter.moum.headset_connection_event'\n+version '1.0'\n \n buildscript {\n     repositories {\n@@ -8,7 +8,7 @@ buildscript {\n     }\n \n     dependencies {\n-        classpath 'com.android.tools.build:gradle:3.2.1'\n+        classpath 'com.android.tools.build:gradle:4.1.0'\n     }\n }\n \n@@ -22,13 +22,9 @@ rootProject.allprojects {\n apply plugin: 'com.android.library'\n \n android {\n-    compileSdkVersion 28\n+    compileSdkVersion 30\n \n     defaultConfig {\n         minSdkVersion 16\n-        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n-    }\n-    lintOptions {\n-        disable 'InvalidPackage'\n     }\n }"
  },
  {
    "sha": "94adc3a3f97aa8ae37ba567d080f94f95ee8f9b7",
    "filename": "android/gradle.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/gradle.properties",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/gradle.properties",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/gradle.properties?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -1 +1,3 @@\n org.gradle.jvmargs=-Xmx1536M\n+android.useAndroidX=true\n+android.enableJetifier=true"
  },
  {
    "sha": "13372aef5e24af05341d49695ee84e5f9b594659",
    "filename": "android/gradle/wrapper/gradle-wrapper.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/gradle/wrapper/gradle-wrapper.jar",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/gradle/wrapper/gradle-wrapper.jar",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/gradle/wrapper/gradle-wrapper.jar?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b"
  },
  {
    "sha": "3c9d0852bfa5299f103d97d8a1ab834afdaaa6bf",
    "filename": "android/gradle/wrapper/gradle-wrapper.properties",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/gradle/wrapper/gradle-wrapper.properties?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -0,0 +1,5 @@\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.7-all.zip"
  },
  {
    "sha": "9d82f78915133e1c35a6ea51252590fb38efac2f",
    "filename": "android/gradlew",
    "status": "added",
    "additions": 160,
    "deletions": 0,
    "changes": 160,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/gradlew",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/gradlew",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/gradlew?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -0,0 +1,160 @@\n+#!/usr/bin/env bash\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn ( ) {\n+    echo \"$*\"\n+}\n+\n+die ( ) {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+esac\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n+function splitJvmOpts() {\n+    JVM_OPTS=(\"$@\")\n+}\n+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n+JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+\n+exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\""
  },
  {
    "sha": "8a0b282aa6885fb573c106b3551f7275c5f17e8e",
    "filename": "android/gradlew.bat",
    "status": "added",
    "additions": 90,
    "deletions": 0,
    "changes": 90,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/gradlew.bat",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/gradlew.bat",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/gradlew.bat?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -0,0 +1,90 @@\n+@if \"%DEBUG%\" == \"\" @echo off\n+@rem ##########################################################################\n+@rem\n+@rem  Gradle startup script for Windows\n+@rem\n+@rem ##########################################################################\n+\n+@rem Set local scope for the variables with windows NT shell\n+if \"%OS%\"==\"Windows_NT\" setlocal\n+\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+set DEFAULT_JVM_OPTS=\n+\n+set DIRNAME=%~dp0\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\n+set APP_BASE_NAME=%~n0\n+set APP_HOME=%DIRNAME%\n+\n+@rem Find java.exe\n+if defined JAVA_HOME goto findJavaFromJavaHome\n+\n+set JAVA_EXE=java.exe\n+%JAVA_EXE% -version >NUL 2>&1\n+if \"%ERRORLEVEL%\" == \"0\" goto init\n+\n+echo.\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+echo.\n+echo Please set the JAVA_HOME variable in your environment to match the\n+echo location of your Java installation.\n+\n+goto fail\n+\n+:findJavaFromJavaHome\n+set JAVA_HOME=%JAVA_HOME:\"=%\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n+\n+if exist \"%JAVA_EXE%\" goto init\n+\n+echo.\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\n+echo.\n+echo Please set the JAVA_HOME variable in your environment to match the\n+echo location of your Java installation.\n+\n+goto fail\n+\n+:init\n+@rem Get command-line arguments, handling Windowz variants\n+\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n+if \"%@eval[2+2]\" == \"4\" goto 4NT_args\n+\n+:win9xME_args\n+@rem Slurp the command line arguments.\n+set CMD_LINE_ARGS=\n+set _SKIP=2\n+\n+:win9xME_args_slurp\n+if \"x%~1\" == \"x\" goto execute\n+\n+set CMD_LINE_ARGS=%*\n+goto execute\n+\n+:4NT_args\n+@rem Get arguments from the 4NT Shell from JP Software\n+set CMD_LINE_ARGS=%$\n+\n+:execute\n+@rem Setup the command line\n+\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n+\n+@rem Execute Gradle\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n+\n+:end\n+@rem End local scope for the variables with windows NT shell\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n+\n+:fail\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\n+rem the _cmd.exe /c_ return code!\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\n+exit /b 1\n+\n+:mainEnd\n+if \"%OS%\"==\"Windows_NT\" endlocal\n+\n+:omega"
  },
  {
    "sha": "1e6e08f3b48ae5d918c03c3b8eef5d092b65727f",
    "filename": "android/settings.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/settings.gradle",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/settings.gradle",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/settings.gradle?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -1 +1 @@\n-rootProject.name = 'headset_event'\n+rootProject.name = 'headset_connection_event'"
  },
  {
    "sha": "777ade446ad1303264768843a2da1337de0e9f7a",
    "filename": "android/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/src/main/AndroidManifest.xml?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -1,5 +1,5 @@\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-  package=\"flutter.moum.headset_event\">\n+  package=\"flutter.moum.headset_connection_event\">\n     <uses-permission android:name=\"android.permission.BLUETOOTH\" />\n     <uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />\n </manifest>"
  },
  {
    "sha": "fb2808a818dd88a38435c941c60fc38ec29baf0f",
    "filename": "android/src/main/java/flutter/moum/headset_connection_event/HeadsetBroadcastReceiver.java",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/src/main/java/flutter/moum/headset_connection_event/HeadsetBroadcastReceiver.java",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/src/main/java/flutter/moum/headset_connection_event/HeadsetBroadcastReceiver.java",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/src/main/java/flutter/moum/headset_connection_event/HeadsetBroadcastReceiver.java?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -0,0 +1,73 @@\n+package flutter.moum.headset_connection_event;\n+\n+import android.bluetooth.BluetoothAdapter;\n+import android.content.BroadcastReceiver;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.util.Log;\n+import android.view.KeyEvent;\n+\n+public class HeadsetBroadcastReceiver extends BroadcastReceiver {\n+    private final HeadsetEventListener headsetEventListener;\n+\n+    public HeadsetBroadcastReceiver(HeadsetEventListener listener) {\n+        this.headsetEventListener = listener;\n+    }\n+\n+    @Override\n+    public void onReceive(Context context, Intent intent) {\n+        switch (intent.getAction()) {\n+            case Intent.ACTION_HEADSET_PLUG:\n+                final int state = intent.getIntExtra(\"state\", -1);\n+                HeadsetConnectionEventPlugin.currentState = state;\n+\n+                switch (state) {\n+                    case 0:\n+                        headsetEventListener.onHeadsetDisconnect();\n+                        break;\n+                    case 1:\n+                        headsetEventListener.onHeadsetConnect();\n+                        break;\n+                }\n+                break;\n+            case BluetoothAdapter.ACTION_CONNECTION_STATE_CHANGED: {\n+                final int connectionState = intent.getExtras().getInt(BluetoothAdapter.EXTRA_CONNECTION_STATE);\n+\n+                switch (connectionState) {\n+                    case BluetoothAdapter.STATE_CONNECTED:\n+                        headsetEventListener.onHeadsetConnect();\n+                        break;\n+                    case BluetoothAdapter.STATE_DISCONNECTED:\n+                        headsetEventListener.onHeadsetDisconnect();\n+                        break;\n+                }\n+                break;\n+            }\n+            case BluetoothAdapter.ACTION_STATE_CHANGED: {\n+                final int connectionState = intent.getExtras().getInt(BluetoothAdapter.EXTRA_STATE);\n+\n+                if (connectionState == BluetoothAdapter.STATE_OFF) {\n+                    headsetEventListener.onHeadsetDisconnect();\n+                }\n+                break;\n+            }\n+            default:\n+                abortBroadcast();\n+\n+                final KeyEvent key = intent.getParcelableExtra(Intent.EXTRA_KEY_EVENT);\n+                if (key.getAction() == KeyEvent.ACTION_UP) {\n+                    final int keycode = key.getKeyCode();\n+\n+                    switch (keycode) {\n+                        case KeyEvent.KEYCODE_MEDIA_NEXT:\n+                            headsetEventListener.onNextButtonPress();\n+                            break;\n+                        case KeyEvent.KEYCODE_MEDIA_PREVIOUS:\n+                            headsetEventListener.onPrevButtonPress();\n+                            break;\n+                    }\n+                }\n+                break;\n+        }\n+    }\n+}"
  },
  {
    "sha": "cdfb7f05e058de5db16f95acda1a90e95918f7f1",
    "filename": "android/src/main/java/flutter/moum/headset_connection_event/HeadsetConnectionEventPlugin.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/src/main/java/flutter/moum/headset_connection_event/HeadsetConnectionEventPlugin.java",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/src/main/java/flutter/moum/headset_connection_event/HeadsetConnectionEventPlugin.java",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/src/main/java/flutter/moum/headset_connection_event/HeadsetConnectionEventPlugin.java?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -0,0 +1,76 @@\n+package flutter.moum.headset_connection_event;\n+\n+import android.bluetooth.BluetoothAdapter;\n+import android.content.Intent;\n+import android.content.IntentFilter;\n+\n+import androidx.annotation.NonNull;\n+\n+import io.flutter.embedding.engine.plugins.FlutterPlugin;\n+import io.flutter.plugin.common.MethodCall;\n+import io.flutter.plugin.common.MethodChannel;\n+import io.flutter.plugin.common.MethodChannel.MethodCallHandler;\n+import io.flutter.plugin.common.MethodChannel.Result;\n+import io.flutter.plugin.common.PluginRegistry.Registrar;\n+\n+/**\n+ * HeadsetConnectionEventPlugin\n+ */\n+public class HeadsetConnectionEventPlugin implements FlutterPlugin, MethodCallHandler {\n+    public static int currentState = -1;\n+\n+    /// The MethodChannel that will the communication between Flutter and native Android\n+    ///\n+    /// This local reference serves to register the plugin with the Flutter Engine and unregister it\n+    /// when the Flutter Engine is detached from the Activity\n+    private MethodChannel channel;\n+\n+    private final HeadsetEventListener headsetEventListener = new HeadsetEventListener() {\n+        @Override\n+        public void onHeadsetConnect() {\n+            channel.invokeMethod(\"connect\", \"true\");\n+        }\n+\n+        @Override\n+        public void onHeadsetDisconnect() {\n+            channel.invokeMethod(\"disconnect\", \"true\");\n+        }\n+\n+        @Override\n+        public void onNextButtonPress() {\n+            channel.invokeMethod(\"nextButton\", \"true\");\n+        }\n+\n+        @Override\n+        public void onPrevButtonPress() {\n+            channel.invokeMethod(\"prevButton\", \"true\");\n+        }\n+    };\n+\n+    @Override\n+    public void onAttachedToEngine(@NonNull FlutterPluginBinding flutterPluginBinding) {\n+        channel = new MethodChannel(flutterPluginBinding.getBinaryMessenger(), \"flutter.moum/headset_connection_event\");\n+        channel.setMethodCallHandler(this);\n+\n+        final HeadsetBroadcastReceiver hReceiver = new HeadsetBroadcastReceiver(headsetEventListener);\n+        final IntentFilter filter = new IntentFilter();\n+        filter.addAction(Intent.ACTION_HEADSET_PLUG);\n+        filter.addAction(BluetoothAdapter.ACTION_CONNECTION_STATE_CHANGED);\n+        filter.addAction(BluetoothAdapter.ACTION_STATE_CHANGED);\n+        flutterPluginBinding.getApplicationContext().registerReceiver(hReceiver, filter);\n+    }\n+\n+    @Override\n+    public void onMethodCall(@NonNull MethodCall call, @NonNull Result result) {\n+        if (call.method.equals(\"getCurrentState\")) {\n+            result.success(currentState);\n+        } else {\n+            result.notImplemented();\n+        }\n+    }\n+\n+    @Override\n+    public void onDetachedFromEngine(@NonNull FlutterPluginBinding binding) {\n+        channel.setMethodCallHandler(null);\n+    }\n+}"
  },
  {
    "sha": "71684c6d1cad3a53742eb6252765a339330cfcde",
    "filename": "android/src/main/java/flutter/moum/headset_connection_event/HeadsetEventListener.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/src/main/java/flutter/moum/headset_connection_event/HeadsetEventListener.java",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/android/src/main/java/flutter/moum/headset_connection_event/HeadsetEventListener.java",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/src/main/java/flutter/moum/headset_connection_event/HeadsetEventListener.java?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -1,8 +1,11 @@\n-package flutter.moum.headset_event;\n+package flutter.moum.headset_connection_event;\n \n public interface HeadsetEventListener {\n     void onHeadsetConnect();\n+\n     void onHeadsetDisconnect();\n+\n     void onNextButtonPress();\n+\n     void onPrevButtonPress();\n }",
    "previous_filename": "android/src/main/java/flutter/moum/headset_event/HeadsetEventListener.java"
  },
  {
    "sha": "5996f0370ac92a15fa75f65a00fcb0d40b4d2b8c",
    "filename": "android/src/main/java/flutter/moum/headset_event/HeadsetBroadcastReceiver.java",
    "status": "removed",
    "additions": 0,
    "deletions": 71,
    "changes": 71,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/android/src/main/java/flutter/moum/headset_event/HeadsetBroadcastReceiver.java",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/android/src/main/java/flutter/moum/headset_event/HeadsetBroadcastReceiver.java",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/src/main/java/flutter/moum/headset_event/HeadsetBroadcastReceiver.java?ref=f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f",
    "patch": "@@ -1,71 +0,0 @@\n-package flutter.moum.headset_event;\n-\n-import android.bluetooth.BluetoothAdapter;\n-import android.content.BroadcastReceiver;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.util.Log;\n-import android.view.KeyEvent;\n-\n-public class HeadsetBroadcastReceiver extends BroadcastReceiver {\n-    private static final String TAG = \"log\";\n-\n-    HeadsetEventListener headsetEventListener;\n-\n-    public HeadsetBroadcastReceiver(HeadsetEventListener listener) {\n-        this.headsetEventListener = listener;\n-    }\n-\n-    @Override\n-    public void onReceive(Context context, Intent intent) {\n-        if (intent.getAction().equals(Intent.ACTION_HEADSET_PLUG)) {\n-            int state = intent.getIntExtra(\"state\", -1);\n-            HeadsetEventPlugin.currentState = state;\n-            switch (state) {\n-                case 0:\n-                    headsetEventListener.onHeadsetDisconnect();\n-                    break;\n-                case 1:\n-                    headsetEventListener.onHeadsetConnect();\n-                    break;\n-                default:\n-                    Log.d(TAG, \"I have no idea what the headset state is\");\n-            }\n-        } else if (intent.getAction().equals(BluetoothAdapter.ACTION_CONNECTION_STATE_CHANGED)) {\n-            int connectionState = intent.getExtras().getInt(BluetoothAdapter.EXTRA_CONNECTION_STATE);\n-            switch (connectionState) {\n-                case BluetoothAdapter.STATE_CONNECTED:\n-                    headsetEventListener.onHeadsetConnect();\n-                    break;\n-                case BluetoothAdapter.STATE_DISCONNECTED:\n-                    headsetEventListener.onHeadsetDisconnect();\n-                    break;\n-                default:\n-                    break;\n-            }\n-        } else if (intent.getAction().equals(BluetoothAdapter.ACTION_STATE_CHANGED)) {\n-            int connectionState = intent.getExtras().getInt(BluetoothAdapter.EXTRA_STATE);\n-            if (connectionState == BluetoothAdapter.STATE_OFF) {\n-                headsetEventListener.onHeadsetDisconnect();\n-            }\n-        } else {\n-            abortBroadcast();\n-\n-            KeyEvent key = (KeyEvent) intent.getParcelableExtra(Intent.EXTRA_KEY_EVENT);\n-            if (key.getAction() == KeyEvent.ACTION_UP) {\n-\n-                int keycode = key.getKeyCode();\n-                Log.d(TAG, \"onReceive: \" + keycode);\n-                switch (keycode) {\n-                    case KeyEvent.KEYCODE_MEDIA_NEXT:\n-                        headsetEventListener.onNextButtonPress();\n-                        break;\n-                    case KeyEvent.KEYCODE_MEDIA_PREVIOUS:\n-                        headsetEventListener.onPrevButtonPress();\n-                        break;\n-\n-                }\n-            }\n-        }\n-    }\n-}"
  },
  {
    "sha": "a28cf5641251f2a724cddee83d3d76aee92ab8c0",
    "filename": "android/src/main/java/flutter/moum/headset_event/HeadsetEventPlugin.java",
    "status": "removed",
    "additions": 0,
    "deletions": 75,
    "changes": 75,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/android/src/main/java/flutter/moum/headset_event/HeadsetEventPlugin.java",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/android/src/main/java/flutter/moum/headset_event/HeadsetEventPlugin.java",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/android/src/main/java/flutter/moum/headset_event/HeadsetEventPlugin.java?ref=f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f",
    "patch": "@@ -1,75 +0,0 @@\n-package flutter.moum.headset_event;\n-\n-import android.bluetooth.BluetoothAdapter;\n-import android.content.Intent;\n-import android.content.IntentFilter;\n-\n-import io.flutter.plugin.common.MethodCall;\n-import io.flutter.plugin.common.MethodChannel;\n-import io.flutter.plugin.common.MethodChannel.MethodCallHandler;\n-import io.flutter.plugin.common.MethodChannel.Result;\n-import io.flutter.plugin.common.PluginRegistry.Registrar;\n-\n-/**\n- * HeadsetEventPlugin\n- */\n-public class HeadsetEventPlugin implements MethodCallHandler {\n-\n-    public static MethodChannel headsetEventChannel;\n-    public static int currentState = -1;\n-    private static HeadsetBroadcastReceiver hReceiver;\n-    private static final String TAG = \"HeadsetEventPlugin\";\n-\n-    /**\n-     * Plugin registration.\n-     */\n-    public static void registerWith(Registrar registrar) {\n-        headsetEventChannel = new MethodChannel(registrar.messenger(), \"flutter.moum/headset_event\");\n-        headsetEventChannel.setMethodCallHandler(new HeadsetEventPlugin());\n-        hReceiver = new HeadsetBroadcastReceiver(headsetEventListener);\n-        String actionHeadsetPlug = Intent.ACTION_HEADSET_PLUG;\n-        String actionBluetoothConnectionState = BluetoothAdapter.ACTION_CONNECTION_STATE_CHANGED;\n-        String actionBluetoothState = BluetoothAdapter.ACTION_STATE_CHANGED;\n-        IntentFilter filter = new IntentFilter();\n-        filter.addAction(actionHeadsetPlug);\n-        filter.addAction(actionBluetoothConnectionState);\n-        filter.addAction(actionBluetoothState);\n-        registrar.activeContext().registerReceiver(hReceiver, filter);\n-\n-    }\n-\n-    @Override\n-    public void onMethodCall(MethodCall call, Result result) {\n-        if (call.method.equals(\"getPlatformVersion\")) {\n-            result.success(\"Android \" + android.os.Build.VERSION.RELEASE);\n-        } else if (call.method.equals(\"register\")) {\n-\n-        } else if (call.method.equals(\"getCurrentState\")) {\n-            result.success(currentState);\n-        } else {\n-            result.notImplemented();\n-        }\n-    }\n-\n-    static HeadsetEventListener headsetEventListener = new HeadsetEventListener() {\n-        @Override\n-        public void onHeadsetConnect() {\n-            headsetEventChannel.invokeMethod(\"connect\", \"true\");\n-        }\n-\n-        @Override\n-        public void onHeadsetDisconnect() {\n-            headsetEventChannel.invokeMethod(\"disconnect\", \"true\");\n-        }\n-\n-        @Override\n-        public void onNextButtonPress() {\n-            headsetEventChannel.invokeMethod(\"nextButton\", \"true\");\n-        }\n-\n-        @Override\n-        public void onPrevButtonPress() {\n-            headsetEventChannel.invokeMethod(\"prevButton\", \"true\");\n-        }\n-    };\n-}"
  },
  {
    "sha": "0fa6b675c0a52be9242fc68269eefce46828ad43",
    "filename": "example/.gitignore",
    "status": "modified",
    "additions": 17,
    "deletions": 41,
    "changes": 58,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/.gitignore",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/.gitignore",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/.gitignore?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -15,56 +15,32 @@\n *.iws\n .idea/\n \n-# Visual Studio Code related\n-.vscode/\n+# The .vscode folder contains launch configuration and tasks you configure in\n+# VS Code which you may wish to be included in version control, so this line\n+# is commented out by default.\n+#.vscode/\n \n # Flutter/Dart/Pub related\n **/doc/api/\n+**/ios/Flutter/.last_build_id\n .dart_tool/\n .flutter-plugins\n+.flutter-plugins-dependencies\n .packages\n .pub-cache/\n .pub/\n /build/\n \n-# Android related\n-**/android/**/gradle-wrapper.jar\n-**/android/.gradle\n-**/android/captures/\n-**/android/gradlew\n-**/android/gradlew.bat\n-**/android/local.properties\n-**/android/**/GeneratedPluginRegistrant.java\n+# Web related\n+lib/generated_plugin_registrant.dart\n \n-# iOS/XCode related\n-**/ios/**/*.mode1v3\n-**/ios/**/*.mode2v3\n-**/ios/**/*.moved-aside\n-**/ios/**/*.pbxuser\n-**/ios/**/*.perspectivev3\n-**/ios/**/*sync/\n-**/ios/**/.sconsign.dblite\n-**/ios/**/.tags*\n-**/ios/**/.vagrant/\n-**/ios/**/DerivedData/\n-**/ios/**/Icon?\n-**/ios/**/Pods/\n-**/ios/**/.symlinks/\n-**/ios/**/profile\n-**/ios/**/xcuserdata\n-**/ios/.generated/\n-**/ios/Flutter/App.framework\n-**/ios/Flutter/Flutter.framework\n-**/ios/Flutter/Generated.xcconfig\n-**/ios/Flutter/app.flx\n-**/ios/Flutter/app.zip\n-**/ios/Flutter/flutter_assets/\n-**/ios/ServiceDefinitions.json\n-**/ios/Runner/GeneratedPluginRegistrant.*\n+# Symbolication related\n+app.*.symbols\n \n-# Exceptions to above rules.\n-!**/ios/**/default.mode1v3\n-!**/ios/**/default.mode2v3\n-!**/ios/**/default.pbxuser\n-!**/ios/**/default.perspectivev3\n-!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n+# Obfuscation related\n+app.*.map.json\n+\n+# Android Studio will place build artifacts here\n+/android/app/debug\n+/android/app/profile\n+/android/app/release"
  },
  {
    "sha": "80206eb5a6b6db6252c3d75ad0440cec75126ae2",
    "filename": "example/.metadata",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/.metadata",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/.metadata",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/.metadata?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -4,7 +4,7 @@\n # This file should be version controlled and should not be manually edited.\n \n version:\n-  revision: 7a4c33425ddd78c54aba07d86f3f9a4a0051769b\n+  revision: c5a4b4029c0798f37c4a39b479d7cb75daa7b05c\n   channel: stable\n \n project_type: app"
  },
  {
    "sha": "6fae85741cd5971ebc47fe98f94a63508ebd586e",
    "filename": "example/README.md",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/README.md",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/README.md",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/README.md?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -1,6 +1,6 @@\n-# headset_event_example\n+# headset_connection_event_example\n \n-Demonstrates how to use the headset_event plugin.\n+Demonstrates how to use the headset_connection_event plugin.\n \n ## Getting Started\n \n@@ -11,6 +11,6 @@ A few resources to get you started if this is your first Flutter project:\n - [Lab: Write your first Flutter app](https://flutter.dev/docs/get-started/codelab)\n - [Cookbook: Useful Flutter samples](https://flutter.dev/docs/cookbook)\n \n-For help getting started with Flutter, view our \n-[online documentation](https://flutter.dev/docs), which offers tutorials, \n+For help getting started with Flutter, view our\n+[online documentation](https://flutter.dev/docs), which offers tutorials,\n samples, guidance on mobile development, and a full API reference."
  },
  {
    "sha": "0a741cb43d66c6790a2a913fa24c8878fb1ab7b5",
    "filename": "example/android/.gitignore",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/.gitignore",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/.gitignore",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/android/.gitignore?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -0,0 +1,11 @@\n+gradle-wrapper.jar\n+/.gradle\n+/captures/\n+/gradlew\n+/gradlew.bat\n+/local.properties\n+GeneratedPluginRegistrant.java\n+\n+# Remember to never publicly share your keystore.\n+# See https://flutter.dev/docs/deployment/android#reference-the-keystore-from-the-app\n+key.properties"
  },
  {
    "sha": "3964dd3f5b7fea7ecf391254ba292fcfe96bb513",
    "filename": "example/android/.project",
    "status": "removed",
    "additions": 0,
    "deletions": 17,
    "changes": 17,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/example/android/.project",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/example/android/.project",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/android/.project?ref=f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f",
    "patch": "@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<projectDescription>\n-\t<name>android</name>\n-\t<comment>Project android created by Buildship.</comment>\n-\t<projects>\n-\t</projects>\n-\t<buildSpec>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.buildship.core.gradleprojectbuilder</name>\n-\t\t\t<arguments>\n-\t\t\t</arguments>\n-\t\t</buildCommand>\n-\t</buildSpec>\n-\t<natures>\n-\t\t<nature>org.eclipse.buildship.core.gradleprojectnature</nature>\n-\t</natures>\n-</projectDescription>"
  },
  {
    "sha": "8a413e9747486542333ec1260592a251daf564f6",
    "filename": "example/android/app/.project",
    "status": "removed",
    "additions": 0,
    "deletions": 17,
    "changes": 17,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/example/android/app/.project",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/example/android/app/.project",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/android/app/.project?ref=f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f",
    "patch": "@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<projectDescription>\n-\t<name>app</name>\n-\t<comment>Project app created by Buildship.</comment>\n-\t<projects>\n-\t</projects>\n-\t<buildSpec>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.buildship.core.gradleprojectbuilder</name>\n-\t\t\t<arguments>\n-\t\t\t</arguments>\n-\t\t</buildCommand>\n-\t</buildSpec>\n-\t<natures>\n-\t\t<nature>org.eclipse.buildship.core.gradleprojectnature</nature>\n-\t</natures>\n-</projectDescription>"
  },
  {
    "sha": "3e8bd7148df48d848bf9753c33a18294f2eedd2a",
    "filename": "example/android/app/build.gradle",
    "status": "modified",
    "additions": 3,
    "deletions": 14,
    "changes": 17,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/build.gradle",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/build.gradle",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/android/app/build.gradle?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -25,20 +25,15 @@ apply plugin: 'com.android.application'\n apply from: \"$flutterRoot/packages/flutter_tools/gradle/flutter.gradle\"\n \n android {\n-    compileSdkVersion 28\n-\n-    lintOptions {\n-        disable 'InvalidPackage'\n-    }\n+    compileSdkVersion 30\n \n     defaultConfig {\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId \"flutter.moum.headset_event_example\"\n+        applicationId \"flutter.moum.headset_connection_event_example\"\n         minSdkVersion 16\n-        targetSdkVersion 28\n+        targetSdkVersion 30\n         versionCode flutterVersionCode.toInteger()\n         versionName flutterVersionName\n-        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n     }\n \n     buildTypes {\n@@ -53,9 +48,3 @@ android {\n flutter {\n     source '../..'\n }\n-\n-dependencies {\n-    testImplementation 'junit:junit:4.12'\n-    androidTestImplementation 'androidx.test:runner:1.1.0'\n-    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'\n-}"
  },
  {
    "sha": "36fee8b2440537d24dd24be48d883fe03208acff",
    "filename": "example/android/app/src/debug/AndroidManifest.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/src/debug/AndroidManifest.xml",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/src/debug/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/android/app/src/debug/AndroidManifest.xml?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -1,5 +1,5 @@\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    package=\"flutter.moum.headset_event_example\">\n+    package=\"flutter.moum.headset_connection_event_example\">\n     <!-- Flutter needs it to communicate with the running application\n          to allow setting breakpoints, to provide hot reload, etc.\n     -->"
  },
  {
    "sha": "a26c2116dc3f7732cf9ef165564ad03b702f9362",
    "filename": "example/android/app/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 31,
    "deletions": 24,
    "changes": 55,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/android/app/src/main/AndroidManifest.xml?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -1,40 +1,47 @@\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    package=\"flutter.moum.headset_event_example\">\n-\n-    <!-- io.flutter.app.FlutterApplication is an android.app.Application that\n-         calls FlutterMain.startInitialization(this); in its onCreate method.\n-         In most cases you can leave this as-is, but you if you want to provide\n-         additional functionality it is fine to subclass or reimplement\n-         FlutterApplication and put your custom class here. -->\n-    <application\n-        android:name=\"io.flutter.app.FlutterApplication\"\n-        android:label=\"headset_event_example\"\n+    package=\"flutter.moum.headset_connection_event_example\">\n+   <application\n+        android:label=\"headset_connection_event_example\"\n         android:icon=\"@mipmap/ic_launcher\">\n         <activity\n             android:name=\".MainActivity\"\n             android:launchMode=\"singleTop\"\n             android:theme=\"@style/LaunchTheme\"\n-            android:configChanges=\"orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode\"\n+            android:configChanges=\"orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode\"\n             android:hardwareAccelerated=\"true\"\n             android:windowSoftInputMode=\"adjustResize\">\n-            <!-- This keeps the window background of the activity showing\n-                 until Flutter renders its first frame. It can be removed if\n-                 there is no splash screen (such as the default splash screen\n-                 defined in @style/LaunchTheme). -->\n+            <!-- Specifies an Android theme to apply to this Activity as soon as\n+                 the Android process has started. This theme is visible to the user\n+                 while the Flutter UI initializes. After that, this theme continues\n+                 to determine the Window background behind the Flutter UI. -->\n             <meta-data\n-                android:name=\"io.flutter.app.android.SplashScreenUntilFirstFrame\"\n-                android:value=\"true\" />\n+              android:name=\"io.flutter.embedding.android.NormalTheme\"\n+              android:resource=\"@style/NormalTheme\"\n+              />\n+            <!-- Displays an Android View that continues showing the launch screen\n+                 Drawable until Flutter paints its first frame, then this splash\n+                 screen fades out. A splash screen is useful to avoid any visual\n+                 gap between the end of Android's launch screen and the painting of\n+                 Flutter's first frame. -->\n+            <meta-data\n+              android:name=\"io.flutter.embedding.android.SplashScreenDrawable\"\n+              android:resource=\"@drawable/launch_background\"\n+              />\n             <intent-filter>\n                 <action android:name=\"android.intent.action.MAIN\"/>\n                 <category android:name=\"android.intent.category.LAUNCHER\"/>\n             </intent-filter>\n         </activity>\n-\n-        <receiver android:name=\"flutter.moum.headset_event.HeadsetBroadcastReceiver\" >\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.HEADSET_PLUG\" />\n-                <action android:name=\"android.intent.action.MEDIA_BUTTON\" />\n-            </intent-filter>\n-        </receiver>\n+        <!-- Don't delete the meta-data below.\n+             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->\n+        <meta-data\n+            android:name=\"flutterEmbedding\"\n+            android:value=\"2\" />\n+       <receiver android:name=\"flutter.moum.headset_event.HeadsetBroadcastReceiver\" >\n+           <intent-filter>\n+               <action android:name=\"android.intent.action.HEADSET_PLUG\" />\n+               <action android:name=\"android.intent.action.MEDIA_BUTTON\" />\n+           </intent-filter>\n+       </receiver>\n     </application>\n </manifest>"
  },
  {
    "sha": "2987b71069f2c19233ccdbb872a4b36035165391",
    "filename": "example/android/app/src/main/java/flutter/moum/headset_connection_event_example/MainActivity.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/src/main/java/flutter/moum/headset_connection_event_example/MainActivity.java",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/src/main/java/flutter/moum/headset_connection_event_example/MainActivity.java",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/android/app/src/main/java/flutter/moum/headset_connection_event_example/MainActivity.java?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -0,0 +1,6 @@\n+package flutter.moum.headset_connection_event_example;\n+\n+import io.flutter.embedding.android.FlutterActivity;\n+\n+public class MainActivity extends FlutterActivity {\n+}"
  },
  {
    "sha": "452068a77bbc582162f72bdb98006733132eaa4d",
    "filename": "example/android/app/src/main/java/flutter/moum/headset_event_example/MainActivity.java",
    "status": "removed",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/example/android/app/src/main/java/flutter/moum/headset_event_example/MainActivity.java",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f/example/android/app/src/main/java/flutter/moum/headset_event_example/MainActivity.java",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/android/app/src/main/java/flutter/moum/headset_event_example/MainActivity.java?ref=f82960de9e4ffdf6b7fe51ef94096dfc1b73f61f",
    "patch": "@@ -1,13 +0,0 @@\n-package flutter.moum.headset_event_example;\n-\n-import android.os.Bundle;\n-import io.flutter.app.FlutterActivity;\n-import io.flutter.plugins.GeneratedPluginRegistrant;\n-\n-public class MainActivity extends FlutterActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    super.onCreate(savedInstanceState);\n-    GeneratedPluginRegistrant.registerWith(this);\n-  }\n-}"
  },
  {
    "sha": "f74085f3f6a2b995f8ad1f9ff7b2c46dc118a9e0",
    "filename": "example/android/app/src/main/res/drawable-v21/launch_background.xml",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/src/main/res/drawable-v21/launch_background.xml",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/src/main/res/drawable-v21/launch_background.xml",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/android/app/src/main/res/drawable-v21/launch_background.xml?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!-- Modify this file to customize your launch splash screen -->\n+<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:drawable=\"?android:colorBackground\" />\n+\n+    <!-- You can insert your own image assets here -->\n+    <!-- <item>\n+        <bitmap\n+            android:gravity=\"center\"\n+            android:src=\"@mipmap/launch_image\" />\n+    </item> -->\n+</layer-list>"
  },
  {
    "sha": "449a9f930826851b495d039f0c0d57f247536615",
    "filename": "example/android/app/src/main/res/values-night/styles.xml",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/themobilecoder/headset_connection_event/blob/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/src/main/res/values-night/styles.xml",
    "raw_url": "https://github.com/themobilecoder/headset_connection_event/raw/96903cad9e33cba5f9dd9229277f8059196c1e1b/example/android/app/src/main/res/values-night/styles.xml",
    "contents_url": "https://api.github.com/repos/themobilecoder/headset_connection_event/contents/example/android/app/src/main/res/values-night/styles.xml?ref=96903cad9e33cba5f9dd9229277f8059196c1e1b",
    "patch": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<resources>\n+    <!-- Theme applied to the Android Window while the process is starting when the OS's Dark Mode setting is on -->\n+    <style name=\"LaunchTheme\" parent=\"@android:style/Theme.Black.NoTitleBar\">\n+        <!-- Show a splash screen on the activity. Automatically removed when\n+             Flutter draws its first frame -->\n+        <item name=\"android:windowBackground\">@drawable/launch_background</item>\n+    </style>\n+    <!-- Theme applied to the Android Window as soon as the process has started.\n+         This theme determines the color of the Android Window while your\n+         Flutter UI initializes, as well as behind your Flutter UI while its\n+         running.\n+         \n+         This Theme is only used starting with V2 of Flutter's Android embedding. -->\n+    <style name=\"NormalTheme\" parent=\"@android:style/Theme.Black.NoTitleBar\">\n+        <item name=\"android:windowBackground\">?android:colorBackground</item>\n+    </style>\n+</resources>"
  }
]
