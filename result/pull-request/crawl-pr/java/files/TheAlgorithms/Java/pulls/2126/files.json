[
  {
    "sha": "67d5f6d358421699afeba353a0a39733c254061e",
    "filename": ".classpath",
    "status": "removed",
    "additions": 0,
    "deletions": 7,
    "changes": 7,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/.classpath",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/.classpath",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.classpath?ref=6d76e33c1973045f7c3cd91ef166de42170f1944",
    "patch": "@@ -1,7 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<classpath>\n-\t<classpathentry excluding=\"data_structures/\" kind=\"src\" path=\"\"/>\n-\t<classpathentry kind=\"src\" path=\"data_structures\"/>\n-\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER\"/>\n-\t<classpathentry kind=\"output\" path=\"bin\"/>\n-</classpath>"
  },
  {
    "sha": "e63d7f9453e702c27f50501ab43a68acd2dda449",
    "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/ISSUE_TEMPLATE/bug_report.md",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/ISSUE_TEMPLATE/bug_report.md",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,29 @@\n+---\n+name: Bug report\n+about: Create a report to help us improve\n+title: ''\n+labels: ''\n+assignees: ''\n+\n+---\n+\n+**Describe the bug**\n+A clear and concise description of what the bug is.\n+\n+**To Reproduce**\n+Steps to reproduce the behavior:\n+1. Go to '...'\n+2. Click on '....'\n+3. Scroll down to '....'\n+4. See error\n+\n+**Expected behavior**\n+A clear and concise description of what you expected to happen.\n+\n+**Screenshots**\n+If applicable, add screenshots to help explain your problem.\n+\n+**Device Specification**\n+\n+**Additional context**\n+Add any other context about the problem here."
  },
  {
    "sha": "bbcbbe7d61558adde3cbfd0c7a63a67c27ed6d30",
    "filename": ".github/ISSUE_TEMPLATE/feature_request.md",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/ISSUE_TEMPLATE/feature_request.md",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/ISSUE_TEMPLATE/feature_request.md",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.github/ISSUE_TEMPLATE/feature_request.md?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Feature request\n+about: Suggest an idea for this project\n+title: ''\n+labels: ''\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n+\n+**Describe the solution you'd like**\n+A clear and concise description of what you want to happen.\n+\n+**Describe alternatives you've considered**\n+A clear and concise description of any alternative solutions or features you've considered.\n+\n+**Additional context**\n+Add any other context or screenshots about the feature request here."
  },
  {
    "sha": "c805c24b29f317067f69418b244e55910969d583",
    "filename": ".github/pull_request_template.md",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/pull_request_template.md",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/pull_request_template.md",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.github/pull_request_template.md?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,23 @@\n+### **Describe your change:**\n+\n+- [ ] Add an algorithm?\n+- [ ] Fix a bug or typo in an existing algorithm?\n+- [ ] Documentation change?\n+\n+#### References\n+\n+<!-- Add any reference to previous pull-request or issue -->\n+\n+### **Checklist:**\n+\n+<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->\n+\n+- [ ] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Java/blob/master/CONTRIBUTING.md).\n+- [ ] This pull request is all my own work -- I have not plagiarized.\n+- [ ] I know that pull requests will not be merged if they fail the automated tests.\n+- [ ] This PR only changes one algorithm file. To ease review, please open separate PRs for separate algorithms.\n+- [ ] All new Java files are placed inside an existing directory.\n+- [ ] All filenames are in all uppercase characters with no spaces or dashes.\n+- [ ] All functions and variable names follow Java naming conventions.\n+- [ ] All new algorithms have a URL in its comments that points to Wikipedia or other similar explanation.\n+- [ ] If this pull request resolves one or more open issues then the commit message contains `Fixes: #{$ISSUE_NO}`."
  },
  {
    "sha": "36ca56266b260267fbca3aa964b73507db0cee2b",
    "filename": ".github/stale.yml",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/stale.yml",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/stale.yml",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.github/stale.yml?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,63 @@\n+# Configuration for probot-stale - https://github.com/probot/stale\n+\n+# Number of days of inactivity before an Issue or Pull Request becomes stale\n+daysUntilStale: 30\n+\n+# Number of days of inactivity before an Issue or Pull Request with the stale label is closed.\n+# Set to false to disable. If disabled, issues still need to be closed manually, but will remain marked as stale.\n+daysUntilClose: 7\n+\n+# Only issues or pull requests with all of these labels are check if stale. Defaults to `[]` (disabled)\n+onlyLabels: []\n+\n+# Issues or Pull Requests with these labels will never be considered stale. Set to `[]` to disable\n+exemptLabels:\n+  - \"Status: on hold\"\n+\n+# Set to true to ignore issues in a project (defaults to false)\n+exemptProjects: false\n+\n+# Set to true to ignore issues in a milestone (defaults to false)\n+exemptMilestones: false\n+\n+# Set to true to ignore issues with an assignee (defaults to false)\n+exemptAssignees: false\n+\n+# Label to use when marking as stale\n+staleLabel: stale\n+\n+# Limit the number of actions per hour, from 1-30. Default is 30\n+limitPerRun: 5\n+\n+# Comment to post when removing the stale label.\n+# unmarkComment: >\n+#   Your comment here.\n+\n+# Optionally, specify configuration settings that are specific to just 'issues' or 'pulls':\n+pulls:\n+  # Comment to post when marking as stale. Set to `false` to disable\n+  markComment: >\n+    This pull request has been automatically marked as stale because it has not had\n+    recent activity. It will be closed if no further activity occurs. Thank you\n+    for your contributions.\n+\n+  # Comment to post when closing a stale Pull Request.\n+  closeComment: >\n+    Please reopen this pull request once you commit the changes requested\n+    or make improvements on the code. If this is not the case and you need\n+    some help, feel free to seek help from our [Gitter](https://gitter.im/TheAlgorithms)\n+    or ping one of the reviewers. Thank you for your contributions!\n+\n+issues:\n+  # Comment to post when marking as stale. Set to `false` to disable\n+  markComment: >\n+    This issue has been automatically marked as stale because it has not had\n+    recent activity. It will be closed if no further activity occurs. Thank you\n+    for your contributions.\n+\n+  # Comment to post when closing a stale Issue.\n+  closeComment: >\n+    Please reopen this issue once you add more information and updates here.\n+    If this is not the case and you need some help, feel free to seek help\n+    from our [Gitter](https://gitter.im/TheAlgorithms) or ping one of the\n+    reviewers. Thank you for your contributions!"
  },
  {
    "sha": "0ef612678c25fc035a6609b3a2e1848833769b66",
    "filename": ".github/workflows/build.yml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/workflows/build.yml",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/workflows/build.yml",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.github/workflows/build.yml?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,20 @@\n+name: Build Project\n+\n+on:\n+  pull_request:\n+  push:\n+    branches:\n+    - master\n+\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/setup-python@v2\n+      - name: Set up JDK 12\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 12\n+      - run: find . -type f -name \"*.java\" > sources.txt\n+      - run: javac @sources.txt\n\\ No newline at end of file"
  },
  {
    "sha": "8424300048a0780e93b73c60eb76d5231a0546dd",
    "filename": ".github/workflows/checkstyle.yml",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/workflows/checkstyle.yml",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/workflows/checkstyle.yml",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.github/workflows/checkstyle.yml?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,24 @@\n+name: Code Formatter\n+\n+on: [push, pull_request]\n+jobs:\n+  format:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@master\n+      - uses: actions/setup-python@v2\n+      - name: Set up JDK 12\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 12\n+      - run: wget https://github.com/google/google-java-format/releases/download/google-java-format-1.9/google-java-format-1.9-all-deps.jar -O formatter.jar\n+      - run: java -jar formatter.jar --replace --set-exit-if-changed $(find . -type f -name \"*.java\")\n+      - name: Commit Format changes\n+        if: failure()\n+        run: |\n+          git diff\n+          git config --global user.name github-actions\n+          git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'\n+          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY\n+          git commit -am \"Formatted with Google Java Formatter\" || true\n+          git push --force origin HEAD:$GITHUB_REF || true"
  },
  {
    "sha": "355959272ceef6b0a631aa3072d414b95bf19ca0",
    "filename": ".github/workflows/prettier.yml",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/workflows/prettier.yml",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/workflows/prettier.yml",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.github/workflows/prettier.yml?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,26 @@\n+name: Prettier\n+\n+on:\n+  pull_request:\n+  push:\n+    branches:\n+    - master\n+    - Development\n+\n+jobs:\n+  prettier:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - name: Checkout\n+      uses: actions/checkout@v2\n+      with:\n+        ref: ${{ github.head_ref }}\n+\n+    - name: Prettify code\n+      uses: creyD/prettier_action@v3.3\n+      with:\n+        prettier_options: --write **/*.{java}\n+        commit_message: 'style: prettify code'\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
  },
  {
    "sha": "325fa04502afc2c81fe6da9d1001907254a6b5cb",
    "filename": ".github/workflows/update_directory_md.yml",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/workflows/update_directory_md.yml",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.github/workflows/update_directory_md.yml",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.github/workflows/update_directory_md.yml?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,67 @@\n+# This GitHub Action updates the DIRECTORY.md file (if needed) when doing a git push\n+name: update_directory_md\n+on: [push]\n+jobs:\n+  update_directory_md:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@master\n+      - uses: actions/setup-python@master\n+      - name: update_directory_md\n+        shell: python\n+        run: |\n+            import os\n+            from typing import Iterator\n+\n+            URL_BASE = \"https://github.com/TheAlgorithms/Java/blob/master\"\n+            g_output = []\n+\n+\n+            def good_filepaths(top_dir: str = \".\") -> Iterator[str]:\n+                for dirpath, dirnames, filenames in os.walk(top_dir):\n+                    dirnames[:] = [d for d in dirnames if d[0] not in \"._\"]\n+                    for filename in filenames:\n+                        if os.path.splitext(filename)[1].lower() == \".java\":\n+                            yield os.path.join(dirpath, filename).lstrip(\"./\")\n+\n+\n+            def md_prefix(i):\n+                return f\"{i * '  '}*\" if i else \"\\n##\"\n+\n+\n+            def print_path(old_path: str, new_path: str) -> str:\n+                global g_output\n+                old_parts = old_path.split(os.sep)\n+                for i, new_part in enumerate(new_path.split(os.sep)):\n+                    if i + 1 > len(old_parts) or old_parts[i] != new_part:\n+                        if new_part:\n+                            g_output.append(f\"{md_prefix(i)} {new_part.replace('_', ' ')}\")\n+                return new_path\n+\n+\n+            def build_directory_md(top_dir: str = \".\") -> str:\n+                global g_output\n+                old_path = \"\"\n+                for filepath in sorted(good_filepaths(), key=str.lower):\n+                    filepath, filename = os.path.split(filepath)\n+                    if filepath != old_path:\n+                        old_path = print_path(old_path, filepath)\n+                    indent = (filepath.count(os.sep) + 1) if filepath else 0\n+                    url = \"/\".join((URL_BASE, filepath, filename)).replace(\" \", \"%20\")\n+                    filename = os.path.splitext(filename.replace(\"_\", \" \"))[0]\n+                    g_output.append(f\"{md_prefix(indent)} [{filename}]({url})\")\n+                return \"\\n\".join(g_output)\n+\n+\n+            with open(\"DIRECTORY.md\", \"w\") as out_file:\n+                out_file.write(build_directory_md(\".\") + \"\\n\")\n+\n+      - name: Update DIRECTORY.md\n+        run: |\n+          cat DIRECTORY.md\n+          git config --global user.name github-actions\n+          git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'\n+          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY\n+          git add DIRECTORY.md\n+          git commit -am \"updating DIRECTORY.md\" ||  true\n+          git push --force origin HEAD:$GITHUB_REF || true"
  },
  {
    "sha": "129bc5fbd7b7c2bcecfa73266d3f854be18c56fa",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 38,
    "deletions": 1,
    "changes": 39,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.gitignore",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.gitignore",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.gitignore?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -1 +1,38 @@\n-/bin/\n+/gradle/wrapper/gradle-wrapper.properties\n+##----------Android----------\n+# build\n+*.apk\n+*.ap_\n+*.dex\n+*.class\n+bin/\n+gen/\n+build/\n+out/\n+\n+# gradle\n+.gradle/\n+gradle-app.setting\n+!gradle-wrapper.jar\n+build/\n+\n+local.properties\n+\n+##----------idea----------\n+*.iml\n+.idea/\n+*.ipr\n+*.iws\n+\n+# Android Studio Navigation editor temp files\n+.navigation/\n+\n+##----------Other----------\n+# osx\n+*~\n+.DS_Store\n+gradle.properties\n+\n+.vscode\n+\n+*.log\n\\ No newline at end of file"
  },
  {
    "sha": "f8e49f267475286cbe9c72173837d3f1ce9cd3c1",
    "filename": ".gitpod.Dockerfile",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.gitpod.Dockerfile",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.gitpod.Dockerfile",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.gitpod.Dockerfile?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,7 @@\n+FROM gitpod/workspace-full\n+\n+# Install custom tools, runtimes, etc.\n+# For example \"bastet\", a command-line tetris clone:\n+# RUN brew install bastet\n+#\n+# More information: https://www.gitpod.io/docs/config-docker/"
  },
  {
    "sha": "479ecfd1f5e7adecad6422fa34e1c53296b349f9",
    "filename": ".gitpod.yml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.gitpod.yml",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.gitpod.yml",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.gitpod.yml?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,6 @@\n+image:\n+  file: .gitpod.Dockerfile\n+\n+tasks:\n+  - init: 'echo \"TODO: Replace with init/build command\"'\n+    command: (e.g. 'npm start', 'yarn watch'...)"
  },
  {
    "sha": "ea54703d8788aed5714da161b46c74f78d4c7459",
    "filename": ".project",
    "status": "removed",
    "additions": 0,
    "deletions": 17,
    "changes": 17,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/.project",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/.project",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.project?ref=6d76e33c1973045f7c3cd91ef166de42170f1944",
    "patch": "@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<projectDescription>\n-\t<name>Java</name>\n-\t<comment></comment>\n-\t<projects>\n-\t</projects>\n-\t<buildSpec>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n-\t\t\t<arguments>\n-\t\t\t</arguments>\n-\t\t</buildCommand>\n-\t</buildSpec>\n-\t<natures>\n-\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n-\t</natures>\n-</projectDescription>"
  },
  {
    "sha": "641567baf5fa4fbe03a5be3666a8138570f912c3",
    "filename": ".travis.yml",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.travis.yml",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/.travis.yml",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/.travis.yml?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,10 @@\n+os: linux\n+dist: focal\n+language: java\n+script:\n+  - find . -type f -name \"*.java\" > sources.txt\n+  - javac -Xlint:deprecation -Xlint:unchecked @sources.txt\n+notifications:\n+    webhooks: https://www.travisbuddy.com/\n+    on_success: never\n+    on_failure: always"
  },
  {
    "sha": "072372d2bd30dfe2880293ff7e8d759de7cdb64f",
    "filename": "CONTRIBUTING.md",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/CONTRIBUTING.md",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/CONTRIBUTING.md",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/CONTRIBUTING.md?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -0,0 +1,29 @@\n+:+1::tada: Before guiding you through the contribution process TheAlgorithms/Java thank you for being one of us! :+1::tada:\n+\n+## How to contribute?\n+\n+#### **Did you find a bug?**\n+\n+- **Ensure the bug was not already reported** by searching on GitHub under [Project Issues](https://github.com/TheAlgorithms/Java/issues).\n+\n+- Please avoid opening issues asking to be \"assigned” to a particular algorithm. This merely creates unnecessary noise for maintainers. Instead, please submit your implementation in a pull request and it will be evaluated by project maintainers.\n+\n+- If you are unable to find an open issue referring to the same problem, depending on the type of issue follow the appropriate steps:\n+\n+#### **Do you want to contribute to the documentation?**\n+\n+- Please read the documentation in here [Contributing to the Documentation]() ,[open a new one issue](https://github.com/TheAlgorithms/Java/issues/new), make changes and then create a pull request, it will be put under review and accepted if it is appropriate.\n+\n+#### **Do you want to add a new feature?**\n+\n+- [Open a new one issue](https://github.com/TheAlgorithms/Java/issues/new). Be sure to include a **title and a clear description** and a **test case** demonstrating the new feature that you want to add to the project.\n+\n+#### **Do you want to fix a bug?**\n+\n+- [Open a new one issue](https://github.com/TheAlgorithms/Java/issues/new).Be sure to include a **title and a clear description** and a **test case** demonstrating the expected behaviour that is not occurring.\n+\n+#### **Do you have questions about the source code?**\n+\n+- Ask any question about how to use the repository in the [TheAlgorithms room in GITTER](https://gitter.im/TheAlgorithms/community?source=orgpage#) or [open a new one issue](https://github.com/TheAlgorithms/Java/issues/new)\n+\n+:+1::tada: That's all you need to know about the process now it's your turn to help us improve the repository, thank you again! :+1::tada:"
  },
  {
    "sha": "760ef7fd0c5dcd7bda94bd5def2e4b2d51d0ef87",
    "filename": "ClosestPair/ClosestPair.java",
    "status": "removed",
    "additions": 0,
    "deletions": 211,
    "changes": 211,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/ClosestPair/ClosestPair.java",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/ClosestPair/ClosestPair.java",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/ClosestPair/ClosestPair.java?ref=6d76e33c1973045f7c3cd91ef166de42170f1944",
    "patch": "@@ -1,211 +0,0 @@\n-import java.io.*;\n-import java.util.*;\n-\n-public class ClosestPair {\n-\tstatic int count = 0;// array length\n-\tstatic int secondCount = 0;// array length\n-\tstatic Location array[] = new Location[10000];\n-\tstatic Location point1 = null; // Minimum point coordinate\n-\tstatic Location point2 = null; // Minimum point coordinate\n-\tstatic double minNum = Double.MAX_VALUE;// Minimum point length\n-\n-\tprivate static class Location { // Location class\n-\t\tdouble x = 0, y = 0;\n-\n-\t\tpublic Location(double x, double y) { //Save x, y coordinates\n-\t\t\tthis.x = x;\n-\t\t\tthis.y = y;\n-\t\t}\n-\t}\n-\n-\tpublic static int xPartition(Location[] a, int first, int last) { // x-axis Quick Sorting\n-\t\tLocation pivot = a[last]; // pivot\n-\t\tint pIndex = last;\n-\t\tint i = first - 1;\n-\t\tLocation temp; // Temporarily store the value for position transformation\n-\t\tfor (int j = first; j <= last - 1; j++) {\n-\t\t\tif (a[j].x <= pivot.x) { // Less than or less than pivot\n-\t\t\t\ti++;\n-\t\t\t\ttemp = a[i]; // array[i] <-> array[j]\n-\t\t\t\ta[i] = a[j];\n-\t\t\t\ta[j] = temp;\n-\t\t\t}\n-\t\t}\n-\t\ti++;\n-\t\ttemp = a[i];// array[pivot] <-> array[i]\n-\t\ta[i] = a[pIndex];\n-\t\ta[pIndex] = temp;\n-\t\treturn i;// pivot index\n-\t}\n-\tpublic static int yPartition(Location[] a, int first, int last) { //y-axis Quick Sorting\n-\t\tLocation pivot = a[last]; // pivot\n-\t\tint pIndex = last;\n-\t\tint i = first - 1;\n-\t\tLocation temp; // Temporarily store the value for position transformation\n-\t\tfor (int j = first; j <= last - 1; j++) {\n-\t\t\tif (a[j].y <= pivot.y) { // Less than or less than pivot\n-\t\t\t\ti++;\n-\t\t\t\ttemp = a[i]; // array[i] <-> array[j]\n-\t\t\t\ta[i] = a[j];\n-\t\t\t\ta[j] = temp;\n-\t\t\t}\n-\t\t}\n-\t\ti++;\n-\t\ttemp = a[i];// array[pivot] <-> array[i]\n-\t\ta[i] = a[pIndex];\n-\t\ta[pIndex] = temp;\n-\t\treturn i;// pivot index\n-\t}\n-\n-\tpublic static void xQuickSort(Location[] a, int first, int last) { //x-axis Quick Sorting\n-\t\tif (first < last) {\n-\t\t\tint q = xPartition(a, first, last); // pivot\n-\t\t\txQuickSort(a, first, q - 1); // Left\n-\t\t\txQuickSort(a, q + 1, last); // Right\n-\t\t}\n-\t}\n-\n-\tpublic static void yQuickSort(Location[] a, int first, int last) { //y-axis Quick Sorting\n-\t\tif (first < last) {\n-\t\t\tint q = yPartition(a, first, last); // pivot\n-\t\t\tyQuickSort(a, first, q - 1); // Left\n-\t\t\tyQuickSort(a, q + 1, last); // Right\n-\t\t}\n-\t}\n-\n-\tpublic static double closestPair(Location[] a, int indexNum, int first, int last) {// closestPair\n-\t\tLocation divideArray[] = new Location[indexNum]; // array stored before divide\n-\t\tSystem.arraycopy(a, 0, divideArray, 0, indexNum); // Copy from previous array\n-\n-\t\tint totalNum = indexNum; // number of coordinates in the divideArray array\n-\t\tint divideX = indexNum / 2; // Intermediate value for divide\n-\t\tLocation leftArray[] = new Location[divideX]; //divide - left array\n-\t\tLocation rightArray[] = new Location[totalNum - divideX]; //divide - right array\n-\n-\t\tif (indexNum <= 3) { // If the number of coordinates is 3 or less\n-\t\t\treturn bruteForce(divideArray);\n-\t\t}\n-\t\tSystem.arraycopy(divideArray, 0, leftArray, 0, divideX); //divide - left array\n-\t\tSystem.arraycopy(divideArray, divideX, rightArray, 0, totalNum - divideX); //divide - right array\n-\n-\t\tdouble minLeftArea = 0; //Minimum length of left array\n-\t\tdouble minRightArea = 0; //Minimum length of right array\n-\t\tdouble minValue = 0; //Minimum lengt\n-\n-\t\tminLeftArea = closestPair(leftArray, divideX, 0, divideX - 1); // recursive closestPair\n-\t\tminRightArea = closestPair(rightArray, totalNum - divideX, divideX, totalNum - divideX - 1);\n-\t\tminValue = Math.min(minLeftArea, minRightArea);// window size (= minimum length)\n-\n-\t\t// Create window\n-\t\tfor (int i = 0; i < totalNum; i++) { // Set the size for creating a window and creating a new array for the coordinates in the window\n-\t\t\tdouble xGap = Math.abs(divideArray[divideX].x - divideArray[i].x);\n-\t\t\tif (xGap < minValue) {\n-\t\t\t\tsecondCount++; // size of the array\n-\t\t\t} else {\n-\t\t\t\tif (divideArray[i].x > divideArray[divideX].x) {\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tLocation firstWindow[] = new Location[secondCount]; // new array for coordinates in window\n-\t\tint k = 0;\n-\t\tfor (int i = 0; i < totalNum; i++) {\n-\t\t\tdouble xGap = Math.abs(divideArray[divideX].x - divideArray[i].x);\n-\t\t\tif (xGap < minValue) { // if it's inside a window\n-\t\t\t\tfirstWindow[k] = divideArray[i]; // put in an array\n-\t\t\t\tk++;\n-\t\t\t} else {\n-\t\t\t\tif (divideArray[i].x > divideArray[divideX].x) {\n-\t\t\t\t\tbreak;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tyQuickSort(firstWindow, 0, secondCount - 1);// Sort by y coordinates\n-\t\t/ * Coordinates in Window * /\n-\t\tdouble length = 0; \n-\t\tfor (int i = 0; i < secondCount - 1; i++) { // size comparison within window\n-\t\t\tfor (int j = (i + 1); j < secondCount; j++) {\n-\t\t\t\tdouble xGap = Math.abs(firstWindow[i].x - firstWindow[j].x);\n-\t\t\t\tdouble yGap = Math.abs(firstWindow[i].y - firstWindow[j].y);\n-\t\t\t\tif (yGap < minValue) {\n-\t\t\t\t\tlength = (double) Math.sqrt(Math.pow(xGap, 2) + Math.pow(yGap, 2));\n-\t\t\t\t\tif (length < minValue) { // If the measured distance is less than the current minimum distance\n-\t\t\t\t\t\tminValue = length;// Change minimum distance to current distance\n-\t\t\t\t\t\tif (length < minNum) { // Conditional statement for registering final coordinate\n-\t\t\t\t\t\t\tminNum = length;\n-\t\t\t\t\t\t\tpoint1 = firstWindow[i];\n-\t\t\t\t\t\t\tpoint2 = firstWindow[j];\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t} \n-\t\t\t\telse\n-\t\t\t\t\tbreak;\n-\t\t\t}\n-\t\t}\n-\t\tsecondCount = 0;\n-\t\treturn minValue;\n-\t}\n-\n-\tpublic static double bruteForce(Location[] array) { // When the number of coordinates is less than 3\n-\t\tdouble minValue = Double.MAX_VALUE; // minimum distance\n-\t\tdouble length = 0; \n-\t\tdouble xGap = 0, yGap = 0; // Difference between x, y coordinates\n-\t\tif (array.length == 2) { // When there are two coordinates\n-\t\t\txGap = (array[0].x - array[1].x); // Difference between x coordinates\n-\t\t\tyGap = (array[0].y - array[1].y); // Difference between y coordinates\n-\t\t\tlength = (double) Math.sqrt(Math.pow(xGap, 2) + Math.pow(yGap, 2)); // distance between coordinates\n-\t\t\tif (length < minNum) { // Conditional statement for registering final coordinate\n-\t\t\t\tminNum = length;\n-\t\t\t\tpoint1 = array[0];\n-\t\t\t\tpoint2 = array[1];\n-\t\t\t}\n-\t\t\treturn length;\n-\t\t} else if (array.length == 3) { // When there are 3 coordinates\n-\t\t\tfor (int i = 0; i < array.length - 1; i++) {\n-\t\t\t\tfor (int j = (i + 1); j < array.length; j++) {\n-\t\t\t\t\txGap = (array[i].x - array[j].x); // Difference between x coordinates\n-\t\t\t\t\tyGap = (array[i].y - array[j].y); // Difference between y coordinates\n-\t\t\t\t\tlength = (double) Math.sqrt(Math.pow(xGap, 2) + Math.pow(yGap, 2));  // distance between coordinates\n-\t\t\t\t\tif (length < minValue) { // If the measured distance is less than the current minimum distance\n-\t\t\t\t\t\tminValue = length; // Change minimum distance to current distance\n-\t\t\t\t\t\tif (length < minNum) { // Conditional statement for registering final coordinate\n-\t\t\t\t\t\t\tminNum = length;\n-\t\t\t\t\t\t\tpoint1 = array[i];\n-\t\t\t\t\t\t\tpoint2 = array[j];\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\treturn minValue;\n-\t\t}\n-\t\treturn minValue;\n-\t}\n-\n-\tpublic static void main(String[] args) throws IOException {\n-\t\t// TODO Auto-generated method stub\n-\t\tStringTokenizer token;\n-\n-\t\tBufferedReader in = new BufferedReader(new FileReader(\"closest_data.txt\"));\n-\t\t//Input data consists of one x-coordinate and one y-coordinate\n-\t\tString ch;\n-\n-\t\tSystem.out.println(\"Input data\");\n-\t\twhile ((ch = in.readLine()) != null) {\n-\t\t\ttoken = new StringTokenizer(ch, \" \"); \n-\n-\t\t\tarray[count] = new Location(Double.parseDouble(token.nextToken()), Double.parseDouble(token.nextToken())); // put in an array\n-\t\t\tcount++; // the number of coordinates actually in the array\n-\t\t\tSystem.out.println(\"x: \"+array[count - 1].x + \", y: \" + array[count - 1].y);\n-\t\t}\n-\n-\t\txQuickSort(array, 0, count - 1); // Sorting by x value\n-\n-\t\tdouble result; // minimum distance\n-\t\tresult = closestPair(array, count, 0, count - 1); // ClosestPair start\n-\t\tSystem.out.println(\"Output Data\");// minimum distance coordinates and distance output\n-\t\tSystem.out.println(\"(\" + point1.x + \", \" + point1.y + \")\");\n-\t\tSystem.out.println(\"(\" + point2.x + \", \" + point2.y + \")\");\n-\t\tSystem.out.println(\"Minimum Distance : \" + result);\n-\n-\t}\n-}"
  },
  {
    "sha": "8ebef63f4a66c6aab7d4ac054a3aa9d30bc123ee",
    "filename": "ClosestPair/closest_data.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 12,
    "changes": 12,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/ClosestPair/closest_data.txt",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/ClosestPair/closest_data.txt",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/ClosestPair/closest_data.txt?ref=6d76e33c1973045f7c3cd91ef166de42170f1944",
    "patch": "@@ -1,12 +0,0 @@\n-2 3\n-2 16\n-3 9\n-6 3\n-7 7\n-9 12\n-10 11\n-15 2\n-15 19\n-16 11\n-17 13\n-19 4"
  },
  {
    "sha": "132ac19ff6cac8f89e2f9c0e4fbdab3088d97268",
    "filename": "Compression/bin/HEncoder$Node$Nodecomparator.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/bin/HEncoder$Node$Nodecomparator.class",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/bin/HEncoder$Node$Nodecomparator.class",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Compression/bin/HEncoder$Node$Nodecomparator.class?ref=6d76e33c1973045f7c3cd91ef166de42170f1944"
  },
  {
    "sha": "9fcce4c5042a2435e9f72adbb12ab07fb091644d",
    "filename": "Compression/bin/HEncoder$Node.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/bin/HEncoder$Node.class",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/bin/HEncoder$Node.class",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Compression/bin/HEncoder$Node.class?ref=6d76e33c1973045f7c3cd91ef166de42170f1944"
  },
  {
    "sha": "3e74095523fee7207e16b95385ee3672a0f5e9fb",
    "filename": "Compression/bin/HEncoder.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/bin/HEncoder.class",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/bin/HEncoder.class",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Compression/bin/HEncoder.class?ref=6d76e33c1973045f7c3cd91ef166de42170f1944"
  },
  {
    "sha": "6465df8e705a17b2101d341c21177178b0ecf1ab",
    "filename": "Compression/bin/compressclient.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/bin/compressclient.class",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/bin/compressclient.class",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Compression/bin/compressclient.class?ref=6d76e33c1973045f7c3cd91ef166de42170f1944"
  },
  {
    "sha": "16c2d03aa1029eb85be2e4cf7fee29187320d1b2",
    "filename": "Compression/bin/genericheap.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/bin/genericheap.class",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/bin/genericheap.class",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Compression/bin/genericheap.class?ref=6d76e33c1973045f7c3cd91ef166de42170f1944"
  },
  {
    "sha": "37bd8fc0a0f089af663ac1d257277e62e1fffceb",
    "filename": "Compression/src/HEncoder.java",
    "status": "removed",
    "additions": 0,
    "deletions": 108,
    "changes": 108,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/src/HEncoder.java",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/src/HEncoder.java",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Compression/src/HEncoder.java?ref=6d76e33c1973045f7c3cd91ef166de42170f1944",
    "patch": "@@ -1,108 +0,0 @@\n-import java.util.ArrayList;\r\n-import java.util.Comparator;\r\n-import java.util.HashMap;\r\n-\r\n-public class HEncoder {\r\n-\r\n-\tpublic HashMap<Character, String> encoder = new HashMap<>(); // in order to encode\r\n-\tpublic HashMap<String, Character> decoder = new HashMap<>(); // in order to decode\r\n-\r\n-\tprivate static class Node {\r\n-\r\n-\t\tCharacter ch;\r\n-\t\tInteger freq;\r\n-\t\tNode left;\r\n-\t\tNode right;\r\n-\r\n-\t\tpublic static final Nodecomparator Ctor = new Nodecomparator();\r\n-\r\n-\t\tpublic static class Nodecomparator implements Comparator<Node> {\r\n-\r\n-\t\t\t@Override\r\n-\t\t\tpublic int compare(Node o1, Node o2) {\r\n-\t\t\t\treturn o2.freq - o1.freq;\r\n-\t\t\t}\r\n-\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tpublic HEncoder(String feeder) {\r\n-\t\t// 1. freq map\r\n-\t\tHashMap<Character, Integer> freqmap = new HashMap<>();\r\n-\t\tfor (int i = 0; i < feeder.length(); ++i) {\r\n-\t\t\tchar ch = feeder.charAt(i);\r\n-\t\t\tif (freqmap.containsKey(ch)) {\r\n-\t\t\t\tfreqmap.put(ch, freqmap.get(ch) + 1);\r\n-\t\t\t} else {\r\n-\t\t\t\tfreqmap.put(ch, 1);\r\n-\t\t\t}\r\n-\t\t}\r\n-\r\n-\t\t// 2. prepare the heap from keyset\r\n-\t\tgenericheap<Node> heap = new genericheap<Node>(Node.Ctor);\r\n-\t\tArrayList<Character> k = new ArrayList<>(freqmap.keySet());\r\n-\t\tfor (Character c : k) {\r\n-\t\t\tNode n = new Node();\r\n-\t\t\tn.ch = c;\r\n-\t\t\tn.left = null;\r\n-\t\t\tn.right = null;\r\n-\t\t\tn.freq = freqmap.get(c);\r\n-\t\t\theap.add(n);\r\n-\t\t}\r\n-\r\n-\t\t// 3.Prepare tree, remove two , merge, add it back\r\n-\t\tNode fn = new Node();\r\n-\t\twhile (heap.size() != 1) {\r\n-\t\t\tNode n1 = heap.removeHP();\r\n-\t\t\tNode n2 = heap.removeHP();\r\n-\t\t\tfn = new Node();\r\n-\r\n-\t\t\tfn.freq = n1.freq + n2.freq;\r\n-\t\t\tfn.left = n1;\r\n-\t\t\tfn.right = n2;\r\n-\r\n-\t\t\theap.add(fn);\r\n-\t\t}\r\n-\r\n-\t\t// 4. traverse\r\n-\r\n-\t\ttraverse(heap.removeHP(), \"\");\r\n-\t}\r\n-\r\n-\tprivate void traverse(Node node, String osf) {\r\n-\r\n-\t\tif (node.left == null && node.right == null) {\r\n-\t\t\tencoder.put(node.ch, osf);\r\n-\t\t\tdecoder.put(osf, node.ch);\r\n-\t\t\treturn;\r\n-\t\t}\r\n-\t\ttraverse(node.left, osf + \"0\");\r\n-\t\ttraverse(node.right, osf + \"1\");\r\n-\r\n-\t}\r\n-\r\n-\t// compression work done here\r\n-\tpublic String compress(String str) {\r\n-\t\tString rv = \"\";\r\n-\t\tfor (int i = 0; i < str.length(); ++i) {\r\n-\t\t\trv += encoder.get(str.charAt(i));\r\n-\t\t}\r\n-\t\treturn rv;\r\n-\t}\r\n-\t\r\n-\r\n-\t//in order to decompress\r\n-\tpublic String decompress(String str) {\r\n-\t\tString s = \"\";\r\n-\t\tString code = \"\";\r\n-\t\tfor (int i = 0; i < str.length(); ++i) {\r\n-\t\t\tcode += str.charAt(i);\r\n-\t\t\tif (decoder.containsKey(code)) {\r\n-\t\t\t\ts += decoder.get(code);\r\n-\t\t\t\tcode = \"\";\r\n-\t\t\t}\r\n-\t\t}\r\n-\r\n-\t\treturn s;\r\n-\t}\r\n-}\r"
  },
  {
    "sha": "496c8a849c8204ce7c8dd9f0db22e49ca7409aef",
    "filename": "Compression/src/compressclient.java",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/src/compressclient.java",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/src/compressclient.java",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Compression/src/compressclient.java?ref=6d76e33c1973045f7c3cd91ef166de42170f1944",
    "patch": "@@ -1,11 +0,0 @@\n-\r\n-public class compressclient {\r\n-\r\n-\tpublic static void main(String[] args) {\r\n-\r\n-\t\tHEncoder h= new HEncoder(\"aaaabbbcccccccccccdddd\");\r\n-\t\tSystem.out.println(h.compress(\"aabccd\"));\r\n-\t\tSystem.out.println(h.decompress(\"101011000111\"));\r\n-\t}\r\n-\r\n-}\r"
  },
  {
    "sha": "de00316f0d531b52b4d42ffa3d2dd6b111445a89",
    "filename": "Compression/src/genericheap.java",
    "status": "removed",
    "additions": 0,
    "deletions": 93,
    "changes": 93,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/src/genericheap.java",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/6d76e33c1973045f7c3cd91ef166de42170f1944/Compression/src/genericheap.java",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Compression/src/genericheap.java?ref=6d76e33c1973045f7c3cd91ef166de42170f1944",
    "patch": "@@ -1,93 +0,0 @@\n-\r\n-\r\n-import java.util.ArrayList;\r\n-import java.util.Comparator;\r\n-\r\n-public class genericheap<T> { // create a generic heap class <T> , where T can be of any type.\r\n-\r\n-\tprivate ArrayList<T> data = new ArrayList<>();\r\n-\tprivate Comparator<T> ctor;\r\n-\r\n-\tpublic genericheap(Comparator<T> ctor) { // constructor to initialize the generic comparator \r\n-\t\tthis.ctor=ctor;\r\n-\t}\t\r\n-\r\n-\tpublic int size() { // returns the size of the arraylist data\r\n-\t\treturn data.size();\r\n-\t}\r\n-\r\n-\tpublic boolean isEmpty() { // checks whether the list is empty or not :: return true or false for the same\r\n-\t\treturn data.isEmpty();\r\n-\t}\r\n-\r\n-\tpublic void display() { //displays the list\r\n-\t\tSystem.out.println(this.data);\r\n-\t}\r\n-\r\n-\tpublic void add(T integer) { // in this function we have added the <t> type object into the arraylist and called upheapify \r\n-\t\tdata.add(integer);\r\n-\t\tupheapify(data.size() - 1);\r\n-\t}\r\n-\r\n-\tprivate void upheapify(int ci) {\r\n-\t\tif (ci == 0) {\r\n-\t\t\treturn;\r\n-\t\t}\r\n-\t\tint pi = (ci - 1) / 2;\r\n-\t\tif (isLarger(ci,pi) == true) {\r\n-\t\t\tswap(ci, pi);\r\n-\t\t\tupheapify(pi);\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tprivate boolean isLarger(int i, int j) {\r\n-\t\tT ith = data.get(i);\r\n-\t\tT jth = data.get(j);\r\n-\t\tif(ctor.compare(ith,jth)>0)\r\n-\t\t{\r\n-\t\t\treturn true;\r\n-\t\t}\r\n-\t\telse\r\n-\t\t{\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tprivate void swap(int ci, int pi) { // swap function  written like this because of the generic property\r\n-\t\tT ith = data.get(ci);\r\n-\t\tT jth=data.get(pi);\r\n-\t\tdata.set(ci, jth);\r\n-\t\tdata.set(pi, ith);\r\n-\t}\r\n-\r\n-\tpublic T getHP() {\r\n-\t\treturn data.get(0);\r\n-\t}\r\n-\r\n-\tpublic T removeHP() {\r\n-\t\r\n-\t\tswap(0, data.size() - 1);\r\n-\t\tT rv=data.remove(data.size()-1);\r\n-\t\tdownheapify(0);\r\n-\t\treturn rv;\r\n-\t}\r\n-\r\n-\tprivate void downheapify(int pi) {\r\n-\t\tint lci = 2 * pi + 1;\r\n-\t\tint rci = 2 * pi + 2;\r\n-\r\n-\t\tint max = pi;\r\n-\r\n-\t\tif (lci < data.size() && isLarger(lci, max) == true) {\r\n-\t\t\tmax = lci;\r\n-\t\t}\r\n-\t\tif (rci < data.size() && isLarger(rci, max) == true) {\r\n-\t\t\tmax = rci;\r\n-\t\t}\r\n-\t\tif (max != pi) {\r\n-\t\t\tswap(pi, max);\r\n-\t\t\tdownheapify(max);\r\n-\t\t}\r\n-\t}\r\n-\r\n-}\r"
  },
  {
    "sha": "2fc4499a0526d8f90d5fed93fe440c32a8412da5",
    "filename": "Conversions/AnyBaseToAnyBase.java",
    "status": "modified",
    "additions": 116,
    "deletions": 119,
    "changes": 235,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/Conversions/AnyBaseToAnyBase.java",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/Conversions/AnyBaseToAnyBase.java",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Conversions/AnyBaseToAnyBase.java?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -1,130 +1,127 @@\n+package Conversions;\n+\n import java.util.Arrays;\n import java.util.HashSet;\n import java.util.InputMismatchException;\n import java.util.Scanner;\n \n /**\n- * Class for converting from \"any\" base to \"any\" other base, when \"any\" means from 2-36.\n- * Works by going from base 1 to decimal to base 2. Includes auxiliary method for \n- * determining whether a number is valid for a given base.\n- * \n+ * Class for converting from \"any\" base to \"any\" other base, when \"any\" means from 2-36. Works by\n+ * going from base 1 to decimal to base 2. Includes auxiliary method for determining whether a\n+ * number is valid for a given base.\n+ *\n  * @author Michael Rolland\n  * @version 2017.10.10\n- *\n  */\n public class AnyBaseToAnyBase {\n-\t\n-\t// Smallest and largest base you want to accept as valid input\n-\tstatic final int MINIMUM_BASE = 2;\n-\tstatic final int MAXIMUM_BASE = 36;\n-\t\n-\t// Driver\n-\tpublic static void main(String[] args) {\n-\t\tScanner in = new Scanner(System.in);\n-\t\tString n;\n-\t\tint b1=0,b2=0;\n-\t\twhile (true) {\n-\t\t\ttry {\n-\t\t\t\tSystem.out.print(\"Enter number: \");\n-\t\t\t\tn = in.next();\n-\t\t\t\tSystem.out.print(\"Enter beginning base (between \"+MINIMUM_BASE+\" and \"+MAXIMUM_BASE+\"): \");\n-\t\t\t\tb1 = in.nextInt();\n-\t\t\t\tif (b1 > MAXIMUM_BASE || b1 < MINIMUM_BASE) {\n-\t\t\t\t\tSystem.out.println(\"Invalid base!\");\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n-\t\t\t\tif (!validForBase(n, b1)) {\n-\t\t\t\t\tSystem.out.println(\"The number is invalid for this base!\");\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n-\t\t\t\tSystem.out.print(\"Enter end base (between \"+MINIMUM_BASE+\" and \"+MAXIMUM_BASE+\"): \");\n-\t\t\t\tb2 = in.nextInt();\n-\t\t\t\tif (b2 > MAXIMUM_BASE || b2 < MINIMUM_BASE) {\n-\t\t\t\t\tSystem.out.println(\"Invalid base!\");\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n-\t\t\t\tbreak;\n-\t\t\t} catch (InputMismatchException e) {\n-\t\t\t\tSystem.out.println(\"Invalid input.\");\n-\t\t\t\tin.next();\n-\t\t\t}\n-\t\t}\n-\t\tSystem.out.println(base2base(n, b1, b2));\n-\t}\n-\t\n-\t/**\n-\t * Checks if a number (as a String) is valid for a given base.\n-\t */\n-\tpublic static boolean validForBase(String n, int base) {\n-\t\tchar[] validDigits = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\n-\t\t\t\t'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',\n-\t\t\t\t'W', 'X', 'Y', 'Z'};\n-\t\t// digitsForBase contains all the valid digits for the base given\n-\t\tchar[] digitsForBase = Arrays.copyOfRange(validDigits, 0, base);\n-\t\t\n-\t\t// Convert character array into set for convenience of contains() method\n-\t\tHashSet<Character> digitsList = new HashSet();\n-\t\tfor (int i=0; i<digitsForBase.length; i++)\n-\t\t\tdigitsList.add(digitsForBase[i]);\n-\t\t\n-\t\t// Check that every digit in n is within the list of valid digits for that base.\n-\t\tfor (char c : n.toCharArray()) \n-\t\t\tif (!digitsList.contains(c))\n-\t\t\t\treturn false;\n-\t\t\n-\t\treturn true;\n-\t}\n-\t\n-\t/**\n-\t * Method to convert any integer from base b1 to base b2. Works by converting from b1 to decimal,\n-\t * then decimal to b2.\n-\t * @param n The integer to be converted.\n-\t * @param b1 Beginning base.\n-\t * @param b2 End base.\n-\t * @return n in base b2.\n-\t */\n-\tpublic static String base2base(String n, int b1, int b2) {\n-\t\t// Declare variables: decimal value of n, \n-\t\t// character of base b1, character of base b2,\n-\t\t// and the string that will be returned.\n-\t\tint decimalValue = 0, charB2;\n-\t\tchar charB1;\n-\t\tString output=\"\";\n-\t\t// Go through every character of n\n-\t\tfor (int i=0; i<n.length(); i++) {\n-\t\t\t// store the character in charB1\n-\t\t\tcharB1 = n.charAt(i);\n-\t\t\t// if it is a non-number, convert it to a decimal value >9 and store it in charB2\n-\t\t\tif (charB1 >= 'A' && charB1 <= 'Z') \n-\t\t\t\tcharB2 = 10 + (charB1 - 'A');\n-\t\t\t// Else, store the integer value in charB2\n-\t\t\telse \n-\t\t\t\tcharB2 = charB1 - '0';\n-\t\t\t// Convert the digit to decimal and add it to the\n-\t\t\t// decimalValue of n\n-\t\t\tdecimalValue = decimalValue * b1 + charB2;\n-\t\t}\n-\t\t\n-\t\t// Converting the decimal value to base b2:\n-\t\t// A number is converted from decimal to another base\n-\t\t// by continuously dividing by the base and recording \n-\t\t// the remainder until the quotient is zero. The number in the\n-\t\t// new base is the remainders, with the last remainder\n-\t\t// being the left-most digit.\n-\t\t\n-\t\t// While the quotient is NOT zero:\n-\t\twhile (decimalValue != 0) {\n-\t\t\t// If the remainder is a digit < 10, simply add it to\n-\t\t\t// the left side of the new number.\n-\t\t\tif (decimalValue % b2 < 10) \n-\t\t\t\toutput = Integer.toString(decimalValue % b2) + output;\n-\t\t\t// If the remainder is >= 10, add a character with the\n-\t\t\t// corresponding value to the new number. (A = 10, B = 11, C = 12, ...)\n-\t\t\telse\n-\t\t\t\toutput = (char)((decimalValue % b2)+55) + output;\n-\t\t\t// Divide by the new base again\n-\t\t\tdecimalValue /= b2;\n-\t\t}\n-\t\treturn output;\n-\t}\n+\n+  /** Smallest and largest base you want to accept as valid input */\n+  static final int MINIMUM_BASE = 2;\n+\n+  static final int MAXIMUM_BASE = 36;\n+\n+  public static void main(String[] args) {\n+    Scanner in = new Scanner(System.in);\n+    String n;\n+    int b1, b2;\n+    while (true) {\n+      try {\n+        System.out.print(\"Enter number: \");\n+        n = in.next();\n+        System.out.print(\n+            \"Enter beginning base (between \" + MINIMUM_BASE + \" and \" + MAXIMUM_BASE + \"): \");\n+        b1 = in.nextInt();\n+        if (b1 > MAXIMUM_BASE || b1 < MINIMUM_BASE) {\n+          System.out.println(\"Invalid base!\");\n+          continue;\n+        }\n+        if (!validForBase(n, b1)) {\n+          System.out.println(\"The number is invalid for this base!\");\n+          continue;\n+        }\n+        System.out.print(\n+            \"Enter end base (between \" + MINIMUM_BASE + \" and \" + MAXIMUM_BASE + \"): \");\n+        b2 = in.nextInt();\n+        if (b2 > MAXIMUM_BASE || b2 < MINIMUM_BASE) {\n+          System.out.println(\"Invalid base!\");\n+          continue;\n+        }\n+        break;\n+      } catch (InputMismatchException e) {\n+        System.out.println(\"Invalid input.\");\n+        in.next();\n+      }\n+    }\n+    System.out.println(base2base(n, b1, b2));\n+    in.close();\n+  }\n+\n+  /** Checks if a number (as a String) is valid for a given base. */\n+  public static boolean validForBase(String n, int base) {\n+    char[] validDigits = {\n+      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I',\n+      'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'\n+    };\n+    // digitsForBase contains all the valid digits for the base given\n+    char[] digitsForBase = Arrays.copyOfRange(validDigits, 0, base);\n+\n+    // Convert character array into set for convenience of contains() method\n+    HashSet<Character> digitsList = new HashSet<>();\n+    for (int i = 0; i < digitsForBase.length; i++) digitsList.add(digitsForBase[i]);\n+\n+    // Check that every digit in n is within the list of valid digits for that base.\n+    for (char c : n.toCharArray()) if (!digitsList.contains(c)) return false;\n+\n+    return true;\n+  }\n+\n+  /**\n+   * Method to convert any integer from base b1 to base b2. Works by converting from b1 to decimal,\n+   * then decimal to b2.\n+   *\n+   * @param n The integer to be converted.\n+   * @param b1 Beginning base.\n+   * @param b2 End base.\n+   * @return n in base b2.\n+   */\n+  public static String base2base(String n, int b1, int b2) {\n+    // Declare variables: decimal value of n,\n+    // character of base b1, character of base b2,\n+    // and the string that will be returned.\n+    int decimalValue = 0, charB2;\n+    char charB1;\n+    String output = \"\";\n+    // Go through every character of n\n+    for (int i = 0; i < n.length(); i++) {\n+      // store the character in charB1\n+      charB1 = n.charAt(i);\n+      // if it is a non-number, convert it to a decimal value >9 and store it in charB2\n+      if (charB1 >= 'A' && charB1 <= 'Z') charB2 = 10 + (charB1 - 'A');\n+      // Else, store the integer value in charB2\n+      else charB2 = charB1 - '0';\n+      // Convert the digit to decimal and add it to the\n+      // decimalValue of n\n+      decimalValue = decimalValue * b1 + charB2;\n+    }\n+\n+    // Converting the decimal value to base b2:\n+    // A number is converted from decimal to another base\n+    // by continuously dividing by the base and recording\n+    // the remainder until the quotient is zero. The number in the\n+    // new base is the remainders, with the last remainder\n+    // being the left-most digit.\n+    if (0 == decimalValue) return \"0\";\n+    // While the quotient is NOT zero:\n+    while (decimalValue != 0) {\n+      // If the remainder is a digit < 10, simply add it to\n+      // the left side of the new number.\n+      if (decimalValue % b2 < 10) output = Integer.toString(decimalValue % b2) + output;\n+      // If the remainder is >= 10, add a character with the\n+      // corresponding value to the new number. (A = 10, B = 11, C = 12, ...)\n+      else output = (char) ((decimalValue % b2) + 55) + output;\n+      // Divide by the new base again\n+      decimalValue /= b2;\n+    }\n+    return output;\n+  }\n }"
  },
  {
    "sha": "61b1a82f0ea3a9f0d2c97e0139765fdacdfd5c4f",
    "filename": "Conversions/AnyBaseToDecimal.java",
    "status": "modified",
    "additions": 44,
    "deletions": 52,
    "changes": 96,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/Conversions/AnyBaseToDecimal.java",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/Conversions/AnyBaseToDecimal.java",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Conversions/AnyBaseToDecimal.java?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -1,59 +1,51 @@\n-import java.io.BufferedReader;\n-import java.io.InputStreamReader;\n+package Conversions;\n \n-/**\n- *\n- * @author Varun Upadhyay (https://github.com/varunu28)\n- *\n- */\n+/** @author Varun Upadhyay (https://github.com/varunu28) */\n \n // Driver program\n public class AnyBaseToDecimal {\n-    public static void main (String[] args) throws Exception{\n-        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n-        \n-        String inp = br.readLine();\n-        int base =  Integer.parseInt(br.readLine());\n-\n-        System.out.println(\"Input in base \" + base + \" is: \" + inp);\n-        System.out.println(\"Decimal value of \" + inp + \" is: \" + convertToDecimal(inp, base));\n-\n-        br.close();\n-    }\n-\n-    /**\n-     * This method produces a decimal value of any given input number of any base\n-     * @param inp_num String of which we need the decimal value and base in integer format\n-     * @return string format of the decimal value\n-     */\n-\n-    public static String convertToDecimal(String inp_num, int base) {\n-        int len = inp_num.length();\n-        int num = 0;\n-        int pow = 1;\n-\n-        for (int i=len-1; i>=0; i--) {\n-            if (valOfChar(inp_num.charAt(i)) >= base) {\n-                return \"Invalid Number\";\n-            }\n-            num += valOfChar(inp_num.charAt(i))*pow;\n-            pow *= base;\n-        }\n-        return String.valueOf(num);\n+  public static void main(String[] args) {\n+    assert convertToDecimal(\"1010\", 2) == Integer.valueOf(\"1010\", 2);\n+    assert convertToDecimal(\"777\", 8) == Integer.valueOf(\"777\", 8);\n+    assert convertToDecimal(\"999\", 10) == Integer.valueOf(\"999\", 10);\n+    assert convertToDecimal(\"ABCDEF\", 16) == Integer.valueOf(\"ABCDEF\", 16);\n+    assert convertToDecimal(\"XYZ\", 36) == Integer.valueOf(\"XYZ\", 36);\n+  }\n+\n+  /**\n+   * Convert any radix to decimal number\n+   *\n+   * @param s the string to be convert\n+   * @param radix the radix\n+   * @return decimal of bits\n+   * @throws NumberFormatException if {@code bits} or {@code radix} is invalid\n+   */\n+  public static int convertToDecimal(String s, int radix) {\n+    int num = 0;\n+    int pow = 1;\n+\n+    for (int i = s.length() - 1; i >= 0; i--) {\n+      int digit = valOfChar(s.charAt(i));\n+      if (digit >= radix) {\n+        throw new NumberFormatException(\"For input string \" + s);\n+      }\n+      num += valOfChar(s.charAt(i)) * pow;\n+      pow *= radix;\n     }\n-\n-    /**\n-     * This method produces integer value of the input character and returns it\n-     * @param c Char of which we need the integer value of\n-     * @return integer value of input char\n-     */\n-\n-    public static int valOfChar(char c) {\n-        if (c >= '0' && c <= '9') {\n-            return (int)c - '0';\n-        }\n-        else {\n-            return (int)c - 'A' + 10;\n-        }\n+    return num;\n+  }\n+\n+  /**\n+   * Convert character to integer\n+   *\n+   * @param c the character\n+   * @return represented digit of given character\n+   * @throws NumberFormatException if {@code ch} is not UpperCase or Digit character.\n+   */\n+  public static int valOfChar(char c) {\n+    if (!(Character.isUpperCase(c) || Character.isDigit(c))) {\n+      throw new NumberFormatException(\"invalid character :\" + c);\n     }\n+    return Character.isDigit(c) ? c - '0' : c - 'A' + 10;\n+  }\n }"
  },
  {
    "sha": "c213513171ef7c621e6523b27c38eade8db672d4",
    "filename": "Conversions/AnytoAny.java",
    "status": "modified",
    "additions": 23,
    "deletions": 22,
    "changes": 45,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/Conversions/AnytoAny.java",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/Conversions/AnytoAny.java",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Conversions/AnytoAny.java?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -1,29 +1,30 @@\n-package Java.Conversions;\n+package Conversions;\n \n import java.util.Scanner;\n-//given a source number , source base, destination base, this code can give you the destination number.\n-//sn ,sb,db ---> ()dn  .   this is what we have to do    .\n+// given a source number , source base, destination base, this code can give you the destination\n+// number.\n+// sn ,sb,db ---> ()dn  .   this is what we have to do    .\n \n public class AnytoAny {\n \n-    public static void main(String[] args) {\n-        Scanner scn = new Scanner(System.in);\n-        int sn = scn.nextInt();\n-        int sb = scn.nextInt();\n-        int db = scn.nextInt();\n-        int m = 1, dec = 0, dn = 0;\n-        while (sn != 0) {\n-            dec = dec + (sn % 10) * m;\n-            m *= sb;\n-            sn /= 10;\n-        }\n-        m = 1;\n-        while (dec != 0) {\n-            dn = dn + (dec % db) * m;\n-            m *= 10;\n-            dec /= db;\n-        }\n-        System.out.println(dn);\n+  public static void main(String[] args) {\n+    Scanner scn = new Scanner(System.in);\n+    int sn = scn.nextInt();\n+    int sb = scn.nextInt();\n+    int db = scn.nextInt();\n+    int m = 1, dec = 0, dn = 0;\n+    while (sn != 0) {\n+      dec = dec + (sn % 10) * m;\n+      m *= sb;\n+      sn /= 10;\n     }\n-\n+    m = 1;\n+    while (dec != 0) {\n+      dn = dn + (dec % db) * m;\n+      m *= 10;\n+      dec /= db;\n+    }\n+    System.out.println(dn);\n+    scn.close();\n+  }\n }"
  },
  {
    "sha": "beb71af5107d19658f6f80653a3800e2d3f969ba",
    "filename": "Conversions/BinaryToDecimal.java",
    "status": "modified",
    "additions": 20,
    "deletions": 26,
    "changes": 46,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/Conversions/BinaryToDecimal.java",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/Conversions/BinaryToDecimal.java",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Conversions/BinaryToDecimal.java?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -1,33 +1,27 @@\n+package Conversions;\n+\n import java.util.Scanner;\n \n-/**\n- * This class converts a Binary number to a Decimal number\n- * \n- * @author Unknown\n- *\n- */\n-class BinaryToDecimal\n-{\n-\t\n-\t/**\n-\t * Main Method\n-\t * \n-\t * @param args Command line arguments\n-\t */\n-  public static void main(String args[])\n-  {\n-    Scanner sc=new Scanner(System.in);\n-    int n,k,d,s=0,c=0;\n+/** This class converts a Binary number to a Decimal number */\n+class BinaryToDecimal {\n+\n+  /**\n+   * Main Method\n+   *\n+   * @param args Command line arguments\n+   */\n+  public static void main(String args[]) {\n+    Scanner sc = new Scanner(System.in);\n+    int binNum, binCopy, d, s = 0, power = 0;\n     System.out.print(\"Binary number: \");\n-    n=sc.nextInt();\n-    k=n;\n-    while(k!=0)\n-    {\n-      d=k%10;\n-      s+=d*(int)Math.pow(2,c++);\n-      k/=10;\n+    binNum = sc.nextInt();\n+    binCopy = binNum;\n+    while (binCopy != 0) {\n+      d = binCopy % 10;\n+      s += d * (int) Math.pow(2, power++);\n+      binCopy /= 10;\n     }\n-    System.out.println(\"Decimal equivalent:\"+s);\n+    System.out.println(\"Decimal equivalent:\" + s);\n     sc.close();\n   }\n }"
  },
  {
    "sha": "c5ff3298fd0387e505070d03a070eea0733aadca",
    "filename": "Conversions/BinaryToHexadecimal.java",
    "status": "modified",
    "additions": 48,
    "deletions": 50,
    "changes": 98,
    "blob_url": "https://github.com/TheAlgorithms/Java/blob/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/Conversions/BinaryToHexadecimal.java",
    "raw_url": "https://github.com/TheAlgorithms/Java/raw/d20c018c6cf5d8695310c7e9f6dcdc5be549ee92/Conversions/BinaryToHexadecimal.java",
    "contents_url": "https://api.github.com/repos/TheAlgorithms/Java/contents/Conversions/BinaryToHexadecimal.java?ref=d20c018c6cf5d8695310c7e9f6dcdc5be549ee92",
    "patch": "@@ -1,57 +1,55 @@\n+package Conversions;\n+\n import java.util.*;\n+\n /**\n  * Converts any Binary Number to a Hexadecimal Number\n- * \n- * @author Nishita Aggarwal\n  *\n+ * @author Nishita Aggarwal\n  */\n public class BinaryToHexadecimal {\n-   \n-\t/**\n-\t * This method converts a binary number to\n-\t * a hexadecimal number.\n-\t * \n-\t * @param binary The binary number\n-\t * @return The hexadecimal number\n-\t */ \n-\tstatic String binToHex(int binary)\n-\t{\n-\t\t//hm to store hexadecimal codes for binary numbers within the range: 0000 to 1111 i.e. for decimal numbers 0 to 15\n-\t\tHashMap<Integer,String> hm=new HashMap<>();\t\n-\t\t//String to store hexadecimal code\n-\t\tString hex=\"\";\n-\t\tint i;\n-\t\tfor(i=0 ; i<10 ; i++)\n-\t\t{\n-\t\t\thm.put(i, String.valueOf(i));\n-\t\t}\n-\t\tfor(i=10 ; i<16 ; i++)\thm.put(i,String.valueOf((char)('A'+i-10)));\n-\t\tint currbit;\n-\t\twhile(binary != 0)\n-\t\t{\n-\t\t\tint code4 = 0;\t//to store decimal equivalent of number formed by 4 decimal digits\n-\t\t\tfor(i=0 ; i<4 ; i++)\n-\t\t\t{\n-\t\t\t\tcurrbit = binary % 10;\n-\t\t\t\tbinary = binary / 10;\n-\t\t\t\tcode4 += currbit * Math.pow(2, i);\n-\t\t\t}\n-\t\t\thex= hm.get(code4) + hex;\n-\t\t}\n-\t\treturn hex; \n-\t}\n-\t\n-\t/**\n-\t * Main method\n-\t * \n-\t * @param args Command line arguments\n-\t */\n-\tpublic static void main(String[] args) {\n-\t\tScanner sc = new Scanner(System.in);\n-\t\tSystem.out.println(\"Enter binary number:\");\n-\t\tint binary = sc.nextInt();\n-\t\tString hex = binToHex(binary);\n-\t\tSystem.out.println(\"Hexadecimal Code:\" + hex);\n-\t\tsc.close();\n-\t}\n+\n+  /**\n+   * This method converts a binary number to a hexadecimal number.\n+   *\n+   * @param binary The binary number\n+   * @return The hexadecimal number\n+   */\n+  static String binToHex(int binary) {\n+    // hm to store hexadecimal codes for binary numbers within the range: 0000 to 1111 i.e. for\n+    // decimal numbers 0 to 15\n+    HashMap<Integer, String> hm = new HashMap<>();\n+    // String to store hexadecimal code\n+    String hex = \"\";\n+    int i;\n+    for (i = 0; i < 10; i++) {\n+      hm.put(i, String.valueOf(i));\n+    }\n+    for (i = 10; i < 16; i++) hm.put(i, String.valueOf((char) ('A' + i - 10)));\n+    int currbit;\n+    while (binary != 0) {\n+      int code4 = 0; // to store decimal equivalent of number formed by 4 decimal digits\n+      for (i = 0; i < 4; i++) {\n+        currbit = binary % 10;\n+        binary = binary / 10;\n+        code4 += currbit * Math.pow(2, i);\n+      }\n+      hex = hm.get(code4) + hex;\n+    }\n+    return hex;\n+  }\n+\n+  /**\n+   * Main method\n+   *\n+   * @param args Command line arguments\n+   */\n+  public static void main(String[] args) {\n+    Scanner sc = new Scanner(System.in);\n+    System.out.println(\"Enter binary number:\");\n+    int binary = sc.nextInt();\n+    String hex = binToHex(binary);\n+    System.out.println(\"Hexadecimal Code:\" + hex);\n+    sc.close();\n+  }\n }"
  }
]
