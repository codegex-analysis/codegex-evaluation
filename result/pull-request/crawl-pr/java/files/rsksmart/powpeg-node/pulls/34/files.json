[
  {
    "sha": "d2322b78fef88da68361c3c0490b75b1e13b9312",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/rsksmart/powpeg-node/blob/a2e762040bf12bb8a0716e6e3680b22ced3f3862/build.gradle",
    "raw_url": "https://github.com/rsksmart/powpeg-node/raw/a2e762040bf12bb8a0716e6e3680b22ced3f3862/build.gradle",
    "contents_url": "https://api.github.com/repos/rsksmart/powpeg-node/contents/build.gradle?ref=a2e762040bf12bb8a0716e6e3680b22ced3f3862",
    "patch": "@@ -53,7 +53,7 @@ tasks.withType(AbstractArchiveTask) {\n \n ext {\n     bitcoinjcoreVersion = '0.15.6-rsk-1'\n-    bitcoinjVersion = '0.14.4-rsk-10-rc'\n+    bitcoinjVersion = '0.14.4-rsk-10-erp'\n     commonsLang3Version = '3.5'\n     commonsIoVersion = '2.5'\n     slf4jVersion = '1.7.25'"
  },
  {
    "sha": "e103af966b76e34acf4642002c729ab8303a0b66",
    "filename": "gradle/verification-metadata.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 560,
    "changes": 568,
    "blob_url": "https://github.com/rsksmart/powpeg-node/blob/a2e762040bf12bb8a0716e6e3680b22ced3f3862/gradle/verification-metadata.xml",
    "raw_url": "https://github.com/rsksmart/powpeg-node/raw/a2e762040bf12bb8a0716e6e3680b22ced3f3862/gradle/verification-metadata.xml",
    "contents_url": "https://api.github.com/repos/rsksmart/powpeg-node/contents/gradle/verification-metadata.xml?ref=a2e762040bf12bb8a0716e6e3680b22ced3f3862",
    "patch": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <verification-metadata xmlns=\"https://schema.gradle.org/dependency-verification\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"https://schema.gradle.org/dependency-verification https://schema.gradle.org/dependency-verification/dependency-verification-1.0.xsd\">\n    <configuration>\n-      <verify-metadata>true</verify-metadata>\n+      <verify-metadata>false</verify-metadata>\n       <verify-signatures>false</verify-signatures>\n       <trusted-artifacts>\n          <trust file=\".*-javadoc[.]jar\" regex=\"true\"/>\n@@ -14,122 +14,61 @@\n          <artifact name=\"logback-classic-1.2.2.jar\">\n             <sha256 value=\"48ade385bbae0222b2934b65738892117d8cb8366b3a3df442d3826c11cedff1\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"logback-classic-1.2.2.pom\">\n-            <sha256 value=\"19ea3a94ab4a8870bdffef76e62a28d4420c8a44c89f6bc95fc403fb3ac740a6\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"ch.qos.logback\" name=\"logback-core\" version=\"1.2.2\">\n          <artifact name=\"logback-core-1.2.2.jar\">\n             <sha256 value=\"280be7a9327e7434d214d6b9eb881c083c3e057a22d0ed7663a7ce81a718a494\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"logback-core-1.2.2.pom\">\n-            <sha256 value=\"0dc1754e50acec45185f1bac013ce14beddf3c4bb91e0491449d706fb3303d87\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"ch.qos.logback\" name=\"logback-parent\" version=\"1.2.2\">\n-         <artifact name=\"logback-parent-1.2.2.pom\">\n-            <sha256 value=\"2c664c1ecd9f17c11553bcb0c71c07c7932d8ee775dcba58f172d0681f5d5835\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"co.rsk\" name=\"lll-compiler\" version=\"0.0.2\">\n          <artifact name=\"lll-compiler-0.0.2.jar\">\n             <sha256 value=\"a645fdb272f56721761f65dd32caa952453efc07d98d292259d99353b6f647d0\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"lll-compiler-0.0.2.pom\">\n-            <sha256 value=\"d6b770710abd676df72d6305e62d948257fdfd061a885a7a79b5df5a70603b53\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"co.rsk\" name=\"native\" version=\"1.0.1\">\n-         <artifact name=\"native-1.0.1.jar\">\n-            <sha256 value=\"28012193abba5638493d6023f4c937307ec10470b4c4fb3bd92ad3d687315cf0\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-         <artifact name=\"native-1.0.1.pom\">\n-            <sha256 value=\"34c12e3819b63ff2f4bb7f61cae87f60ea328b68bbe59d5eed9af43e0191b792\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"co.rsk\" name=\"native\" version=\"1.2.0\">\n          <artifact name=\"native-1.2.0.jar\">\n             <sha256 value=\"43f2308bd6bf982604d960c4d5438d2f3b12fd09e9c041395634dcf50aded48b\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"native-1.2.0.pom\">\n-            <sha256 value=\"fdc35a9ab3a43880c1714de0a8e5f98b0a41b7e7d8cd805cfbf028392f2b1a14\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"co.rsk.bitcoinj\" name=\"bitcoinj-thin\" version=\"0.14.4-rsk-10-rc\">\n-         <artifact name=\"bitcoinj-thin-0.14.4-rsk-10-rc.jar\">\n-            <sha256 value=\"033a3386d27f2f20cf5aa997d3ea98e0070c796eb9cb1035f5820eee2a049654\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-         <artifact name=\"bitcoinj-thin-0.14.4-rsk-10-rc.pom\">\n-            <sha256 value=\"cc0f88b7339d309fc49efe0b51729e92e942ec85387c5f627a8eee283a6bb7b4\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.fasterxml\" name=\"oss-parent\" version=\"27\">\n-         <artifact name=\"oss-parent-27.pom\">\n-            <sha256 value=\"b9b8f388fd628057b1249756468b86726c8fd5816ce14d313cb40003a509beeb\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.fasterxml\" name=\"oss-parent\" version=\"32\">\n-         <artifact name=\"oss-parent-32.pom\">\n-            <sha256 value=\"9d398db630c4d252e86154875cf293f26a46e3996fdac0d04a814055801de036\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n-      <component group=\"com.fasterxml\" name=\"oss-parent\" version=\"33\">\n-         <artifact name=\"oss-parent-33.pom\">\n-            <sha256 value=\"c54370964cfcce2319bd9a85f5e14f500c8518989ae56b1b475df1b348b73108\" origin=\"Generated by Gradle\"/>\n+      <component group=\"co.rsk.bitcoinj\" name=\"bitcoinj-thin\" version=\"0.14.4-rsk-10-erp\">\n+         <artifact name=\"bitcoinj-thin-0.14.4-rsk-10-erp.jar\">\n+            <sha256 value=\"f220f55217d6c3adfd9a3f1b0b772d5d6439ceb55516270aa51a648d29663149\" origin=\"Generated by Gradle\">\n+               <also-trust value=\"dea3df78f99af2fd44108d37a832885d2631ea59d4a933a42c95832997d711cb\"/>\n+            </sha256>\n          </artifact>\n-      </component>\n-      <component group=\"com.fasterxml.jackson\" name=\"jackson-parent\" version=\"2.8\">\n-         <artifact name=\"jackson-parent-2.8.pom\">\n-            <sha256 value=\"3b51994c1a3a29c2c89728226c0be14b69888a1bb0ef311f8d65904cdfbd9358\" origin=\"Generated by Gradle\"/>\n+         <artifact name=\"bitcoinj-thin-0.14.4-rsk-10-erp.pom\">\n+            <sha256 value=\"9e75caf991c8c622fc36258087312a1245e6c4c848a44d1635b8c8b0b37c07c8\" origin=\"Generated by Gradle\"/>\n          </artifact>\n       </component>\n       <component group=\"com.fasterxml.jackson.core\" name=\"jackson-annotations\" version=\"2.8.0\">\n          <artifact name=\"jackson-annotations-2.8.0.jar\">\n             <sha256 value=\"e61b7343aceeb6ecda291d4ef133cd3e765f178c631c357ffd081abab7f15db8\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jackson-annotations-2.8.0.pom\">\n-            <sha256 value=\"38b3068aa7a8c02fe32929dd593c6dff3e21b9952b79d46b208c207c219d6521\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.fasterxml.jackson.core\" name=\"jackson-annotations\" version=\"2.8.5\">\n          <artifact name=\"jackson-annotations-2.8.5.jar\">\n             <sha256 value=\"4caf3936315439b509b8c3ef494d4e47eaa6d25c3b5299aadb0eafb3944ed32f\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jackson-annotations-2.8.5.pom\">\n-            <sha256 value=\"648bdea00ab0ce84c45a035b4f4db20345beaa558510a0c233a8874939fcf95d\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.fasterxml.jackson.core\" name=\"jackson-core\" version=\"2.8.7\">\n          <artifact name=\"jackson-core-2.8.7.jar\">\n             <sha256 value=\"256ff34118ab292d1b4f3ee4d2c3e5e5f0f609d8e07c57e8ad1f51c46d4fbb46\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jackson-core-2.8.7.pom\">\n-            <sha256 value=\"0d8f415d56320fbe3883ab7adee73bbb2c9a69c2a49af3608fd6b1efa15d8b5a\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.fasterxml.jackson.core\" name=\"jackson-databind\" version=\"2.8.7\">\n          <artifact name=\"jackson-databind-2.8.7.jar\">\n             <sha256 value=\"4f74337b6d18664be0f5b15c6664b17aa3972c9c175092328b139b894ff66f19\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jackson-databind-2.8.7.pom\">\n-            <sha256 value=\"4ec7b0b0cefe68966c56948eb2ddcdfa81a5fa03e6a76c0b24df4d19cdf24496\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.fasterxml.woodstox\" name=\"woodstox-core\" version=\"5.1.0\">\n          <artifact name=\"woodstox-core-5.1.0.jar\">\n             <sha256 value=\"6d6107c3e6aac8f1c3e3762b89164b329fb2b15ec0afc8961cf6c4dc355f10bf\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"woodstox-core-5.1.0.pom\">\n-            <sha256 value=\"102c9016088d5ed6724667292bdc5e7eff3681026409ba9e83fb5c897df87242\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.github.briandilley.jsonrpc4j\" name=\"jsonrpc4j\" version=\"1.5.1\">\n          <artifact name=\"jsonrpc4j-1.5.1.jar\">\n             <sha256 value=\"bb2cde1f554e152e69741353c6630e02e69f217abbd6703f8c038e6ed637c105\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jsonrpc4j-1.5.1.pom\">\n-            <sha256 value=\"9f29d912eda2cec14eff75cc6958509eb53d3453486ce04d82406308aaca481d\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.google\" name=\"google\" version=\"1\">\n          <artifact name=\"google-1.pom\">\n@@ -148,30 +87,16 @@\n          <artifact name=\"jsr305-3.0.2.jar\">\n             <sha256 value=\"766ad2a0783f2687962c8ad74ceecc38a28b9f72a2d085ee438b7813e928d0c7\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jsr305-3.0.2.pom\">\n-            <sha256 value=\"19889dbdf1b254b2601a5ee645b8147a974644882297684c798afe5d63d78dfe\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.google.errorprone\" name=\"error_prone_annotations\" version=\"2.3.2\">\n          <artifact name=\"error_prone_annotations-2.3.2.jar\">\n             <sha256 value=\"357cd6cfb067c969226c442451502aee13800a24e950fdfde77bcdb4565a668d\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"error_prone_annotations-2.3.2.pom\">\n-            <sha256 value=\"8d175561619289a527573cfbdcf872eb5c1216cf9ab692a0ef3dba6d793f63b4\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.google.errorprone\" name=\"error_prone_parent\" version=\"2.3.2\">\n-         <artifact name=\"error_prone_parent-2.3.2.pom\">\n-            <sha256 value=\"8d3b5b9fa211979e9c425e989825c07743d2eb4dc8c20ec61de0f5b3dc1a6333\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.google.guava\" name=\"failureaccess\" version=\"1.0.1\">\n          <artifact name=\"failureaccess-1.0.1.jar\">\n             <sha256 value=\"a171ee4c734dd2da837e4b16be9df4661afab72a41adaf31eb84dfdaf936ca26\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"failureaccess-1.0.1.pom\">\n-            <sha256 value=\"e96042ce78fecba0da2be964522947c87b40a291b5fd3cd672a434924103c4b9\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.google.guava\" name=\"guava\" version=\"18.0\">\n          <artifact name=\"guava-18.0.jar\">\n@@ -185,40 +110,21 @@\n          <artifact name=\"guava-28.1-android.jar\">\n             <sha256 value=\"e112ce92c0f0733965eede73d94589c59a72128b06b08bba5ebe2f9ea672ef60\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"guava-28.1-android.pom\">\n-            <sha256 value=\"0196bebabaa26560f108eeb104d62987ad8bea607d9b13eda3f0286b765d6ea6\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.google.guava\" name=\"guava-parent\" version=\"18.0\">\n          <artifact name=\"guava-parent-18.0.pom\">\n             <sha256 value=\"a4accc8895e757f6a33f087e4fd0b661c5638ffe5e0728f298efe7d80551b166\" origin=\"Generated by Gradle\"/>\n          </artifact>\n       </component>\n-      <component group=\"com.google.guava\" name=\"guava-parent\" version=\"26.0-android\">\n-         <artifact name=\"guava-parent-26.0-android.pom\">\n-            <sha256 value=\"f8698ab46ca996ce889c1afc8ca4f25eb8ac6b034dc898d4583742360016cc04\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.google.guava\" name=\"guava-parent\" version=\"28.1-android\">\n-         <artifact name=\"guava-parent-28.1-android.pom\">\n-            <sha256 value=\"f8afcb43fd24c3b6226e408bdb9cec569173715a4c2c80173ccaedd84e151891\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n       <component group=\"com.google.guava\" name=\"listenablefuture\" version=\"9999.0-empty-to-avoid-conflict-with-guava\">\n          <artifact name=\"listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar\">\n             <sha256 value=\"b372a037d4230aa57fbeffdef30fd6123f9c0c2db85d0aced00c91b974f33f99\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.pom\">\n-            <sha256 value=\"18d4b1db26153d4e55079ce1f76bb1fe05cdb862ef9954a88cbcc4ff38b8679b\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.google.j2objc\" name=\"j2objc-annotations\" version=\"1.3\">\n          <artifact name=\"j2objc-annotations-1.3.jar\">\n             <sha256 value=\"21af30c92267bd6122c0e0b4d20cccb6641a37eaf956c6540ec471d584e64a7b\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"j2objc-annotations-1.3.pom\">\n-            <sha256 value=\"5faca824ba115bee458730337dfdb2fcea46ba2fd774d4304edbf30fa6a3f055\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.google.protobuf\" name=\"protobuf-java\" version=\"2.6.1\">\n          <artifact name=\"protobuf-java-2.6.1.jar\">\n@@ -232,22 +138,11 @@\n          <artifact name=\"protobuf-java-3.6.1.jar\">\n             <sha256 value=\"fb66d913ff0578553b2e28a3338cbbbe2657e6cfe0e98d939f23aea219daf508\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"protobuf-java-3.6.1.pom\">\n-            <sha256 value=\"3d1cf96c47b28508d2290b86266f4d0e8ea534b0c7656825050d5bbce2fe51cc\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.google.protobuf\" name=\"protobuf-parent\" version=\"3.6.1\">\n-         <artifact name=\"protobuf-parent-3.6.1.pom\">\n-            <sha256 value=\"b83819781441b566ca1d334813cdd203aa7e2f7ae2baad674dceb1fe2d4bb441\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.googlecode.json-simple\" name=\"json-simple\" version=\"1.1.1\">\n          <artifact name=\"json-simple-1.1.1.jar\">\n             <sha256 value=\"4e69696892b88b41c55d49ab2fdcc21eead92bf54acc588c0050596c3b75199c\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"json-simple-1.1.1.pom\">\n-            <sha256 value=\"665f63590defb63d62add21d3525362cf937cf6a1c05e4b0145bae8da8a57f83\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.lambdaworks\" name=\"scrypt\" version=\"1.4.0\">\n          <artifact name=\"scrypt-1.4.0.jar\">\n@@ -269,9 +164,6 @@\n          <artifact name=\"core-1.52.0.0.jar\">\n             <sha256 value=\"07a401edbe26e1028e2324754557b741cc57306008df7b71a9e12ec32d65be8f\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"core-1.52.0.0.pom\">\n-            <sha256 value=\"d8671208115104a520b64a8e9321ea2a177377e65acb8682b813ea07bcbdf6b3\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.squareup.okhttp\" name=\"okhttp\" version=\"2.7.2\">\n          <artifact name=\"okhttp-2.7.2.jar\">\n@@ -285,9 +177,6 @@\n          <artifact name=\"okhttp-ws-2.7.2.jar\">\n             <sha256 value=\"f5de3c94147ebce5a6aa32a4639ca9e3df9614da5aac505c71481f425ea4208b\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"okhttp-ws-2.7.2.pom\">\n-            <sha256 value=\"87cf322d6fda9bb07095f0efa1cba28e714c1eee05795c322689d39e5d0d349d\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.squareup.okhttp\" name=\"parent\" version=\"2.7.2\">\n          <artifact name=\"parent-2.7.2.pom\">\n@@ -298,22 +187,11 @@\n          <artifact name=\"okhttp-3.12.6.jar\">\n             <sha256 value=\"ab45b9be99d9f070662b722cece5bdc2a0449fd34b9d5e51cdcd34663ae7b610\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"okhttp-3.12.6.pom\">\n-            <sha256 value=\"df6be334e615f6bd44ad3f1ede53ffa545232389a9ada0bfa793fab027062500\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.squareup.okhttp3\" name=\"parent\" version=\"3.12.6\">\n-         <artifact name=\"parent-3.12.6.pom\">\n-            <sha256 value=\"4fd317213f2a37bad6ff1d74e9a4fb0c5871a7b1bef563f9bc249170b546dbfd\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.squareup.okio\" name=\"okio\" version=\"1.15.0\">\n          <artifact name=\"okio-1.15.0.jar\">\n             <sha256 value=\"693fa319a7e8843300602b204023b7674f106ebcb577f2dd5807212b66118bd2\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"okio-1.15.0.pom\">\n-            <sha256 value=\"f1c10b1480d1ab75fb051a07b273e37cda2525e97e1607ee83e6833b70e1bfce\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.squareup.okio\" name=\"okio\" version=\"1.6.0\">\n          <artifact name=\"okio-1.6.0.jar\">\n@@ -323,264 +201,125 @@\n             <sha256 value=\"1be29d32516af3d4d16d1e6e160ca7773f6211b66ff80068d1c2b7aebceec2c9\" origin=\"Generated by Gradle\"/>\n          </artifact>\n       </component>\n-      <component group=\"com.squareup.okio\" name=\"okio-parent\" version=\"1.15.0\">\n-         <artifact name=\"okio-parent-1.15.0.pom\">\n-            <sha256 value=\"34e09a3ea2aacd721df399470d05a47aecdad801269a212195ffbf9d21056db2\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n       <component group=\"com.squareup.okio\" name=\"okio-parent\" version=\"1.6.0\">\n          <artifact name=\"okio-parent-1.6.0.pom\">\n             <sha256 value=\"73a95a071bbce9bf1df48bd3d3219d9ba74e4fc22a7a13cd969fa9a86e57d3b0\" origin=\"Generated by Gradle\"/>\n          </artifact>\n       </component>\n-      <component group=\"com.sun.activation\" name=\"all\" version=\"1.2.2\">\n-         <artifact name=\"all-1.2.2.pom\">\n-            <sha256 value=\"1973d499cc2c1264aff2d6d052a1c716ae613d018ae1c2f610dd6a4d1c24578e\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n       <component group=\"com.sun.activation\" name=\"jakarta.activation\" version=\"1.2.2\">\n          <artifact name=\"jakarta.activation-1.2.2.jar\">\n             <sha256 value=\"02156773e4ae9d048d14a56ad35d644bee9f1052a791d072df3ded3c656e6e1a\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jakarta.activation-1.2.2.pom\">\n-            <sha256 value=\"a8c937450f84f637f624923ba39392bf645c2d5eb2ffc7a1821d7f2e85561028\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.sun.xml.bind\" name=\"jaxb-bom-ext\" version=\"2.3.3\">\n-         <artifact name=\"jaxb-bom-ext-2.3.3.pom\">\n-            <sha256 value=\"1b02bd4272f2ade47f0e825264c435171cd3e09d11b23bbab8cc8421b3e83398\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.sun.xml.bind\" name=\"jaxb-impl\" version=\"2.3.3\">\n          <artifact name=\"jaxb-impl-2.3.3.jar\">\n             <sha256 value=\"e5178d0c7948247f75a13c689bf36f4d5d4910a121f712aa3b20ae94377069d8\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jaxb-impl-2.3.3.pom\">\n-            <sha256 value=\"7cf71c9532e7f4026a9b3364ba179d0c9859c316ffe604e9874bba2632230897\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.sun.xml.bind.mvn\" name=\"jaxb-bundles\" version=\"2.3.3\">\n-         <artifact name=\"jaxb-bundles-2.3.3.pom\">\n-            <sha256 value=\"53172bb8731f471f931a0451027e34c5b439fb1730a98f43f863b8da45faacc2\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.sun.xml.bind.mvn\" name=\"jaxb-parent\" version=\"2.3.3\">\n-         <artifact name=\"jaxb-parent-2.3.3.pom\">\n-            <sha256 value=\"44ccfeebbcf6745d38efbcc68e924cbf19907afd7e7b258c67e9895474880921\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.sun.xml.fastinfoset\" name=\"FastInfoset\" version=\"1.2.18\">\n          <artifact name=\"FastInfoset-1.2.18.jar\">\n             <sha256 value=\"a0174a5d6f3071a0d1b61310135c68d23ac915428b79b9969d4c226fc692ad35\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"FastInfoset-1.2.18.pom\">\n-            <sha256 value=\"6ee74494b7fe8cfd140e21b7f3f1bb3ce47a16a452293069fc3e4db6c2f36992\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.sun.xml.fastinfoset\" name=\"fastinfoset-project\" version=\"1.2.18\">\n-         <artifact name=\"fastinfoset-project-1.2.18.pom\">\n-            <sha256 value=\"cc9be443ed7bc9dda0449becb394068076395e50e690b7758e31aae58121177b\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.sun.xml.messaging.saaj\" name=\"metro-saaj\" version=\"1.5.2\">\n-         <artifact name=\"metro-saaj-1.5.2.pom\">\n-            <sha256 value=\"9d274640284d3f624cac8b7326101b1fb5477b7b5ce0fde23276396ab979d3e0\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.sun.xml.messaging.saaj\" name=\"saaj-impl\" version=\"1.5.2\">\n          <artifact name=\"saaj-impl-1.5.2.jar\">\n             <sha256 value=\"2d74a4ef75bc6ab4cdc06ed3732aae0b821dc108c75e3ca53fc7305207e74b5a\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"saaj-impl-1.5.2.pom\">\n-            <sha256 value=\"976267af14905baeea2cc334fb59f7d4e210d47763ff7c9d12e7cd1037863c90\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.sun.xml.stream.buffer\" name=\"streambuffer\" version=\"1.5.9\">\n          <artifact name=\"streambuffer-1.5.9.jar\">\n             <sha256 value=\"3f668190b4c32991352d9ea316f9908e2673338a27a5bc8c7d78036fabcfb2a8\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"streambuffer-1.5.9.pom\">\n-            <sha256 value=\"c7f36dd153f791ef43a30c60bcb79302185b6bfeed370111543f5b2833c6a8a9\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.sun.xml.ws\" name=\"jaxws-ri-bom\" version=\"2.3.3\">\n-         <artifact name=\"jaxws-ri-bom-2.3.3.pom\">\n-            <sha256 value=\"6e7adfc0e6a4f0aa7ef8a72e22ad90f9819d9fc76338af8312d767ed218a3c97\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.sun.xml.ws\" name=\"jaxws-ri-bom-ext\" version=\"2.3.3\">\n-         <artifact name=\"jaxws-ri-bom-ext-2.3.3.pom\">\n-            <sha256 value=\"096aa012276da3ce93e7436a2a92e6b6eb1a1092cf4706a40387b98ae232e1f5\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.sun.xml.ws\" name=\"jaxws-rt\" version=\"2.3.3\">\n          <artifact name=\"jaxws-rt-2.3.3.jar\">\n             <sha256 value=\"63d3c92664dfdc10b0fb0e59f85e230afac7c7814d9ff223cebb8c50012bf1aa\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jaxws-rt-2.3.3.pom\">\n-            <sha256 value=\"e7c46526a12d1a6b02930e6a80b23ed4eb30b21cdf5c4cca756bad2a4ee70a44\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.sun.xml.ws\" name=\"policy\" version=\"2.7.10\">\n          <artifact name=\"policy-2.7.10.jar\">\n             <sha256 value=\"ad12eaf70be2f0e24bdf5ef1ccfaae466a0e46b09a629b5ccf2a3031730a40a3\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"policy-2.7.10.pom\">\n-            <sha256 value=\"f4c7c595f08963be5e5201a205b2a2635fc7d9516c64439df9c77e1fce4578fb\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"com.sun.xml.ws\" name=\"project\" version=\"2.3.3\">\n-         <artifact name=\"project-2.3.3.pom\">\n-            <sha256 value=\"2ef0f3ecb7b4d83a5079e9ce1b502937a6bed7a56ff5bebff555343aedf9982e\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"com.typesafe\" name=\"config\" version=\"1.3.3\">\n          <artifact name=\"config-1.3.3.jar\">\n             <sha256 value=\"b5f1d6071f1548d05be82f59f9039c7d37a1787bd8e3c677e31ee275af4a4621\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"config-1.3.3.pom\">\n-            <sha256 value=\"2c268553f771eb572c41ad89ee043dc288b4a700fa51b6263b04eff92867781c\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"commons-codec\" name=\"commons-codec\" version=\"1.10\">\n          <artifact name=\"commons-codec-1.10.jar\">\n             <sha256 value=\"4241dfa94e711d435f29a4604a3e2de5c4aa3c165e23bd066be6fc1fc4309569\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"commons-codec-1.10.pom\">\n-            <sha256 value=\"bdb8db7012d112a6e3ea8fdb7c510b300d99eff0819d27dddba9c43397ea4cfb\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"commons-io\" name=\"commons-io\" version=\"2.5\">\n          <artifact name=\"commons-io-2.5.jar\">\n             <sha256 value=\"a10418348d234968600ccb1d988efcbbd08716e1d96936ccc1880e7d22513474\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"commons-io-2.5.pom\">\n-            <sha256 value=\"28ebb2998bc7d7acb25078526971640892000f3413586ff42d611f1043bfec30\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"io.airlift\" name=\"airbase\" version=\"28\">\n-         <artifact name=\"airbase-28.pom\">\n-            <sha256 value=\"66af780c8ebeea80fc472c6214b938b7b120a69768b8ccce4445fb881befecb5\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"io.netty\" name=\"netty-buffer\" version=\"4.0.56.Final\">\n          <artifact name=\"netty-buffer-4.0.56.Final.jar\">\n             <sha256 value=\"055f5ccfd7f9683c5d961fbf4466778d5b91ebf8b1f2ddd2eed539a82352b695\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"netty-buffer-4.0.56.Final.pom\">\n-            <sha256 value=\"02252c25459622315471f2c5ef54423e7b4322389be31835e5c9df38b706cc74\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"io.netty\" name=\"netty-codec\" version=\"4.0.56.Final\">\n          <artifact name=\"netty-codec-4.0.56.Final.jar\">\n             <sha256 value=\"f5921cb7f0f7a9188241321cbab4e208c75d49f4b97fae46eed01e60ef57800f\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"netty-codec-4.0.56.Final.pom\">\n-            <sha256 value=\"5589782148fed1630d2058a0d61afd75781d0367e0c86a993951adf68ff791db\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"io.netty\" name=\"netty-codec-http\" version=\"4.0.56.Final\">\n          <artifact name=\"netty-codec-http-4.0.56.Final.jar\">\n             <sha256 value=\"73e735f8d73946f860c667bd148be0d25b3e23a85ed62c6178c8bf74c17f9048\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"netty-codec-http-4.0.56.Final.pom\">\n-            <sha256 value=\"47a1901e59da867bfa0ccceaf90abd7a4ccd7e74733e1150d32021438f9cf630\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"io.netty\" name=\"netty-common\" version=\"4.0.56.Final\">\n          <artifact name=\"netty-common-4.0.56.Final.jar\">\n             <sha256 value=\"5d50a53f063c6544433951a04099b0eec17ddd5a1c7f5b0c63f38912daef1677\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"netty-common-4.0.56.Final.pom\">\n-            <sha256 value=\"7fc8ef2d968db5024cc9283e1de5e008457fb65202d0b047a42a049b32b50313\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"io.netty\" name=\"netty-handler\" version=\"4.0.56.Final\">\n          <artifact name=\"netty-handler-4.0.56.Final.jar\">\n             <sha256 value=\"b1a634a593bb9d1c3e881817991aa5e5fe34b338295ccc1f464511d0af809c61\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"netty-handler-4.0.56.Final.pom\">\n-            <sha256 value=\"f59fc4743a641161f662e4d62e289c6a14d30b0a96e37d00208180d6f3c41072\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"io.netty\" name=\"netty-parent\" version=\"4.0.56.Final\">\n-         <artifact name=\"netty-parent-4.0.56.Final.pom\">\n-            <sha256 value=\"35d2049698541333a636ef88cad8db1a89d1961080bb03d994c0f1ae415eb842\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"io.netty\" name=\"netty-transport\" version=\"4.0.56.Final\">\n          <artifact name=\"netty-transport-4.0.56.Final.jar\">\n             <sha256 value=\"adec23f7790a138014a15eff4c85939cddec63d49f9ef0810725cb4aa5518199\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"netty-transport-4.0.56.Final.pom\">\n-            <sha256 value=\"b9570395d1a483939f591b3cc640d7128368748d21c8ff70662525909114e9c7\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"jakarta.activation\" name=\"jakarta.activation-api\" version=\"1.2.2\">\n          <artifact name=\"jakarta.activation-api-1.2.2.jar\">\n             <sha256 value=\"a187a939103aef5849a7af84bd7e27be2d120c410af291437375ffe061f4f09d\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jakarta.activation-api-1.2.2.pom\">\n-            <sha256 value=\"5e50fe938068471f504a7efc4071823425b520eabc6f80c72d935ebd54683091\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"jakarta.annotation\" name=\"ca-parent\" version=\"1.3.5\">\n-         <artifact name=\"ca-parent-1.3.5.pom\">\n-            <sha256 value=\"bdbb049465f366edb5a4adbff293a841c9b75b238519e76f86fe4f7bfb9d7e2d\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"jakarta.annotation\" name=\"jakarta.annotation-api\" version=\"1.3.5\">\n          <artifact name=\"jakarta.annotation-api-1.3.5.jar\">\n             <sha256 value=\"85fb03fc054cdf4efca8efd9b6712bbb418e1ab98241c4539c8585bbc23e1b8a\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jakarta.annotation-api-1.3.5.pom\">\n-            <sha256 value=\"ba6874767f5415c5e0f644fab80e1bad5feab6d18150f22638067681866feaaf\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"jakarta.jws\" name=\"jakarta.jws-api\" version=\"2.1.0\">\n          <artifact name=\"jakarta.jws-api-2.1.0.jar\">\n             <sha256 value=\"d4c321f47a72001977fa11d2df408db23bf5f46e954aeb2c6f1ecda4dfef8fd8\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jakarta.jws-api-2.1.0.pom\">\n-            <sha256 value=\"ac1a67fa3100333d0138fe709fa9e164db9844b8f224779be572c8b61a185e95\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"jakarta.xml.bind\" name=\"jakarta.xml.bind-api\" version=\"2.3.3\">\n          <artifact name=\"jakarta.xml.bind-api-2.3.3.jar\">\n             <sha256 value=\"c04539f472e9a6dd0c7685ea82d677282269ab8e7baca2e14500e381e0c6cec5\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jakarta.xml.bind-api-2.3.3.pom\">\n-            <sha256 value=\"7fe2ca5dce4b14a646bbf921d13ca42caf2a2c0654da155c7563865c989396fd\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"jakarta.xml.bind\" name=\"jakarta.xml.bind-api-parent\" version=\"2.3.3\">\n-         <artifact name=\"jakarta.xml.bind-api-parent-2.3.3.pom\">\n-            <sha256 value=\"280da531760166d4412368d0dd899ef4aebfd0a7d82bf233502e29856806ada9\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"jakarta.xml.soap\" name=\"jakarta.xml.soap-api\" version=\"1.4.2\">\n          <artifact name=\"jakarta.xml.soap-api-1.4.2.jar\">\n             <sha256 value=\"0b2e9db574869c09b18e7fe87482be2e4e14b3f3cc8207646595806eede77706\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jakarta.xml.soap-api-1.4.2.pom\">\n-            <sha256 value=\"c649018e78c00192587289901e6801f9ba43dbd89167cc4f6048b9d0f162b9b6\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"jakarta.xml.ws\" name=\"jakarta.xml.ws-api\" version=\"2.3.3\">\n          <artifact name=\"jakarta.xml.ws-api-2.3.3.jar\">\n             <sha256 value=\"c8e0ba03c47cd5e996fd5d83540caaeab69cd8d531f128318d88e15467d112c1\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"jakarta.xml.ws-api-2.3.3.pom\">\n-            <sha256 value=\"5bd9d261b09a5e0e1d472fdd0d943e4ccafa191612b0f76c2e8f18f471049c27\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"javax.annotation\" name=\"javax.annotation-api\" version=\"1.3.2\">\n          <artifact name=\"javax.annotation-api-1.3.2.jar\">\n             <sha256 value=\"e04ba5195bcd555dc95650f7cc614d151e4bcd52d29a10b8aa2197f3ab89ab9b\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"javax.annotation-api-1.3.2.pom\">\n-            <sha256 value=\"46a4a251ca406e78e4853d7a2bae83282844a4992851439ee9a1f23716f06b97\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"junit\" name=\"junit\" version=\"4.12\">\n          <artifact name=\"junit-4.12.jar\">\n@@ -594,35 +333,16 @@\n          <artifact name=\"byte-buddy-1.9.3.jar\">\n             <sha256 value=\"a27350be602caea67a33d31281496c84c69b5ab34ddc228e9ff2253fc8f9cd31\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"byte-buddy-1.9.3.pom\">\n-            <sha256 value=\"bf1369bf5c99f36559f8fb1d20fd6043458124a7c74b4e31b554cef7418f7fc9\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"net.bytebuddy\" name=\"byte-buddy-agent\" version=\"1.9.3\">\n          <artifact name=\"byte-buddy-agent-1.9.3.jar\">\n             <sha256 value=\"547288e013a9d1f4a4ce2ab84c24e3edda6e433c7fa6b2c3c3613932671b05b1\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"byte-buddy-agent-1.9.3.pom\">\n-            <sha256 value=\"b319bef318299d6cb3d07bf85993dced3f104fc5c4b0652f5c4f9f548535d8cb\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"net.bytebuddy\" name=\"byte-buddy-parent\" version=\"1.9.3\">\n-         <artifact name=\"byte-buddy-parent-1.9.3.pom\">\n-            <sha256 value=\"af2d1ac7b49f7add3fe3217997e45ee656d141c67511bdbf945f5e78cc9e027a\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"net.iharder\" name=\"base64\" version=\"2.3.9\">\n          <artifact name=\"base64-2.3.9.jar\">\n             <sha256 value=\"f1a0e359eee29a5939c35e5fdedc574dd7e8ca065b056fc14b2b29e3ed3cd54d\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"base64-2.3.9.pom\">\n-            <sha256 value=\"dc2a45bcd09053e6e00f8b603a9170cffdb418c055dd35ab6ebb09d5682d627b\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"net.java\" name=\"jvnet-parent\" version=\"3\">\n-         <artifact name=\"jvnet-parent-3.pom\">\n-            <sha256 value=\"30f5789efa39ddbf96095aada3fc1260c4561faf2f714686717cb2dc5049475a\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"net.jcip\" name=\"jcip-annotations\" version=\"1.0\">\n          <artifact name=\"jcip-annotations-1.0.jar\">\n@@ -632,213 +352,85 @@\n             <sha256 value=\"5c19e6848cc550a95664fb082304bc5f9fcf7b672faf03af1635f0e93c268177\" origin=\"Generated by Gradle\"/>\n          </artifact>\n       </component>\n-      <component group=\"org.apache\" name=\"apache\" version=\"15\">\n-         <artifact name=\"apache-15.pom\">\n-            <sha256 value=\"36c2f2f979ac67b450c0cb480e4e9baf6b40f3a681f22ba9692287d1139ad494\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.apache\" name=\"apache\" version=\"16\">\n-         <artifact name=\"apache-16.pom\">\n-            <sha256 value=\"9f85ff2fd7d6cb3097aa47fb419ee7f0ebe869109f98aba9f4eca3f49e74a40e\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.apache\" name=\"apache\" version=\"18\">\n-         <artifact name=\"apache-18.pom\">\n-            <sha256 value=\"7831307285fd475bbc36b20ae38e7882f11c3153b1d5930f852d44eda8f33c17\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n       <component group=\"org.apache.commons\" name=\"commons-lang3\" version=\"3.5\">\n          <artifact name=\"commons-lang3-3.5.jar\">\n             <sha256 value=\"8ac96fc686512d777fca85e144f196cd7cfe0c0aec23127229497d1a38ff651c\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"commons-lang3-3.5.pom\">\n-            <sha256 value=\"45e7fbb2c231db903a5d5aadafc636a173a4d54560f78a11ff498028ef9e345e\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.apache.commons\" name=\"commons-parent\" version=\"35\">\n-         <artifact name=\"commons-parent-35.pom\">\n-            <sha256 value=\"7098a1ab8336ecd4c9dc21cbbcac869f82c66f64b8ac4f7988d41b4fcb44e49a\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.apache.commons\" name=\"commons-parent\" version=\"39\">\n-         <artifact name=\"commons-parent-39.pom\">\n-            <sha256 value=\"87cd27e1a02a5c3eb6d85059ce98696bb1b44c2b8b650f0567c86df60fa61da7\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.apache.commons\" name=\"commons-parent\" version=\"41\">\n-         <artifact name=\"commons-parent-41.pom\">\n-            <sha256 value=\"b2877c8016f8b28924c8e90dd5ae40cd11f328d02a1de98d80de22574ab36ec7\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.awaitility\" name=\"awaitility\" version=\"3.0.0\">\n          <artifact name=\"awaitility-3.0.0.jar\">\n             <sha256 value=\"a02982e89585a52c1c84296a895bfeb86ea250cca1a53bcfc8a14092fffa87c4\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"awaitility-3.0.0.pom\">\n-            <sha256 value=\"24d5948ca76470f6ea6b8bbfde30ddc8dd7cf8af4ae86b030f64080403315fbc\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.awaitility\" name=\"awaitility-parent\" version=\"3.0.0\">\n-         <artifact name=\"awaitility-parent-3.0.0.pom\">\n-            <sha256 value=\"4b5d557086d6b0f0d554a2534e031fc1317af6bfd48d1c9966aba6b13d5ae088\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.bitcoinj\" name=\"core\" version=\"0.15.6-rsk-1\">\n          <artifact name=\"core-0.15.6-rsk-1.jar\">\n             <sha256 value=\"deeba926a3cd09ac4fb438630876057c7706e1ff9f9ab1fb7996b65278f25e9b\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"core-0.15.6-rsk-1.pom\">\n-            <sha256 value=\"da074c82f2e1b0575d0a346b1444228dfdcb4367c54d531226b54268a8743ab2\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.bouncycastle\" name=\"bclcrypto-jdk15on\" version=\"1.59\">\n          <artifact name=\"bclcrypto-jdk15on-1.59.jar\">\n             <sha256 value=\"7d03ba37df4d0ddc4ea40d56554324c6f18062a930edadb0a1b3acbbbea28efc\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"bclcrypto-jdk15on-1.59.pom\">\n-            <sha256 value=\"94cad383653e8b88ead83c49f07ae1d92ba2342c1feb65c7718b3c4a4bdf1819\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.bouncycastle\" name=\"bcprov-jdk15to18\" version=\"1.63\">\n          <artifact name=\"bcprov-jdk15to18-1.63.jar\">\n             <sha256 value=\"82c28318b178da751d174b1adf6c43e0199f0fcf80a7bf6483caa226ae0d30b3\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"bcprov-jdk15to18-1.63.pom\">\n-            <sha256 value=\"40bc5efb0aa8ecb08d180edb4758255648877df6fd44ef0815db960a6c4d828f\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.checkerframework\" name=\"checker-compat-qual\" version=\"2.5.5\">\n          <artifact name=\"checker-compat-qual-2.5.5.jar\">\n             <sha256 value=\"11d134b245e9cacc474514d2d66b5b8618f8039a1465cdc55bbc0b34e0008b7a\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"checker-compat-qual-2.5.5.pom\">\n-            <sha256 value=\"42f21ebd9183be049ee5afc822b345403a5da764037875734a039b0d6e0353be\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.codehaus.mojo\" name=\"animal-sniffer-annotations\" version=\"1.18\">\n          <artifact name=\"animal-sniffer-annotations-1.18.jar\">\n             <sha256 value=\"47f05852b48ee9baefef80fa3d8cea60efa4753c0013121dd7fe5eef2e5c729d\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"animal-sniffer-annotations-1.18.pom\">\n-            <sha256 value=\"adf522f4839c35f5329ea97c407aebebfa8807b644852dc4d5cd7c97b7a6d2e0\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.codehaus.mojo\" name=\"animal-sniffer-parent\" version=\"1.18\">\n-         <artifact name=\"animal-sniffer-parent-1.18.pom\">\n-            <sha256 value=\"4e9df546a47cf6304a1317c46870100a8726fbea11b0dd18322f957e4070973c\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.codehaus.mojo\" name=\"mojo-parent\" version=\"50\">\n-         <artifact name=\"mojo-parent-50.pom\">\n-            <sha256 value=\"f819cad1b15b6a7791c8b601e96bde33765e4681395807db4537d2f0dedd493b\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.codehaus.woodstox\" name=\"stax2-api\" version=\"4.1\">\n          <artifact name=\"stax2-api-4.1.jar\">\n             <sha256 value=\"3e99c678c42ce353595b6cc71e62f25bd6e58860b3cf79b60adc9240a967924f\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"stax2-api-4.1.pom\">\n-            <sha256 value=\"66f5d29100a30a0b06c36a9f5a3b50f45ef16352be347ba3e22515a889da5fc5\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.eclipse.ee4j\" name=\"project\" version=\"1.0.5\">\n-         <artifact name=\"project-1.0.5.pom\">\n-            <sha256 value=\"916b4794d8d8220a59a3fdf6a64dbe794aeb23395e888b81ae36a9b5a2c591a6\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.eclipse.ee4j\" name=\"project\" version=\"1.0.6\">\n-         <artifact name=\"project-1.0.6.pom\">\n-            <sha256 value=\"4e7d8329d8da7dcf30779d824241be145f27108932f5a5a24eb907677bc8d72d\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.ethereum\" name=\"leveldbjni-all\" version=\"1.18.3\">\n          <artifact name=\"leveldbjni-all-1.18.3.jar\">\n             <sha256 value=\"18da00444c77080d4422b16c9d4750c4addabda350b702b4a6d628b86658e585\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"leveldbjni-all-1.18.3.pom\">\n-            <sha256 value=\"94995574dce953f86fde5c527b50494054f17e5401c0f725f90b857317ef94aa\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.fusesource\" name=\"fusesource-pom\" version=\"1.9\">\n-         <artifact name=\"fusesource-pom-1.9.pom\">\n-            <sha256 value=\"69022c7dd091ebb2b27f6b74709b19435e4c2e86cb6b5e698ce8f37258c60363\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.fusesource.hawtjni\" name=\"hawtjni-project\" version=\"1.9\">\n-         <artifact name=\"hawtjni-project-1.9.pom\">\n-            <sha256 value=\"9cb61fd058542f62058b9f803a1eb5b894a67ef06e63d90e09f4f7459a7fcca7\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.fusesource.hawtjni\" name=\"hawtjni-runtime\" version=\"1.9\">\n          <artifact name=\"hawtjni-runtime-1.9.jar\">\n             <sha256 value=\"74fe9764e1fb1ef20b159dbca2d29abd6de292082ce3fcf538f81ac912390416\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"hawtjni-runtime-1.9.pom\">\n-            <sha256 value=\"0c1d9f740fa3b7b9018292236d87ff451cdc2c4facaf0c2e6f3f7f1c4532bf68\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.fusesource.leveldbjni\" name=\"leveldbjni\" version=\"1.8\">\n          <artifact name=\"leveldbjni-1.8.jar\">\n             <sha256 value=\"05fe3a006d030aaf8d1e43f6c640a85f9f6b967c4499ce1ad5055ac236c3b944\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"leveldbjni-1.8.pom\">\n-            <sha256 value=\"f498b8df49f5b89d7e470d2232cd40f364af0623a83783c8a60d97dfedc77221\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.fusesource.leveldbjni\" name=\"leveldbjni-project\" version=\"1.8\">\n-         <artifact name=\"leveldbjni-project-1.8.pom\">\n-            <sha256 value=\"1a0c104ca7db4756e323888fb5dcff0839bee0f47aee309fa61bbe6b8d1f9e1b\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.glassfish.external\" name=\"management-api\" version=\"3.2.2\">\n          <artifact name=\"management-api-3.2.2.jar\">\n             <sha256 value=\"fa6d8ea08f0c59b3570c223a7e60329e17046573b79064a76affc558640f02d9\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"management-api-3.2.2.pom\">\n-            <sha256 value=\"5c0df398809f49575e7ccc58bb84f00dba8e797f86657083ff8cc208c6442c07\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.glassfish.gmbal\" name=\"gmbal\" version=\"4.0.1\">\n          <artifact name=\"gmbal-4.0.1.jar\">\n             <sha256 value=\"ba88b4a36f4f8a4c6b48f8d49e830590c0541b46d3577084481b7ca5820e8894\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"gmbal-4.0.1.pom\">\n-            <sha256 value=\"cccb589719c22b874be028aa99f21c1100ba476f5919665125a0b0ea6c2ab248\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.glassfish.ha\" name=\"ha-api\" version=\"3.1.12\">\n          <artifact name=\"ha-api-3.1.12.jar\">\n             <sha256 value=\"f1d8a01bf2d8c7f6204ba45f39ac54afb6f0c82b2c59bca7cd444aad0ef7193c\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"ha-api-3.1.12.pom\">\n-            <sha256 value=\"b6f615133619c2a64188c70e6f5dcb6ba120dc131987b431c09346a46e2a873f\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.glassfish.jaxb\" name=\"jaxb-bom\" version=\"2.3.3\">\n-         <artifact name=\"jaxb-bom-2.3.3.pom\">\n-            <sha256 value=\"123381e4250f4595375e72fdc0923203562e3d8e782b94f08b192d955ae2e2e0\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.glassfish.pfl\" name=\"pfl\" version=\"4.1.0\">\n-         <artifact name=\"pfl-4.1.0.pom\">\n-            <sha256 value=\"843c3fb791bf1e2c6c1188b205cc096f9133e43cd2a3212a99e076f17022464e\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.glassfish.pfl\" name=\"pfl-basic\" version=\"4.1.0\">\n          <artifact name=\"pfl-basic-4.1.0.jar\">\n             <sha256 value=\"6b9be9addaf18a574557a4d9905d83c7d12c92703a5e2995ba345ce840c732fe\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"pfl-basic-4.1.0.pom\">\n-            <sha256 value=\"43bcf534a8a9387e472ef61db459bc8e2061222159613a8b4554f966196de548\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.glassfish.pfl\" name=\"pfl-tf\" version=\"4.1.0\">\n          <artifact name=\"pfl-tf-4.1.0.jar\">\n             <sha256 value=\"973048449d4963d63c960de0300e1ac775c76bd04fd05f49233f9f8a6d995bb6\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"pfl-tf-4.1.0.pom\">\n-            <sha256 value=\"1cbdf44583906ccadd70b279168e03b4271b9d3e0a811413ea8d1b860553d355\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.hamcrest\" name=\"hamcrest-core\" version=\"1.3\">\n          <artifact name=\"hamcrest-core-1.3.jar\">\n@@ -852,9 +444,6 @@\n          <artifact name=\"hamcrest-library-1.3.jar\">\n             <sha256 value=\"711d64522f9ec410983bd310934296da134be4254a125080a0416ec178dfad1c\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"hamcrest-library-1.3.pom\">\n-            <sha256 value=\"1ceb4bfb0f098ae29b935044b2363e11323313fe3ed2055df8b79737d5056277\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.hamcrest\" name=\"hamcrest-parent\" version=\"1.3\">\n          <artifact name=\"hamcrest-parent-1.3.pom\">\n@@ -865,282 +454,141 @@\n          <artifact name=\"leveldb-0.9.jar\">\n             <sha256 value=\"0dcc623fcb8450e736b9d2b1b8d91b980e44920d6a22cec8c00f703548b3747f\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"leveldb-0.9.pom\">\n-            <sha256 value=\"50bc5a6fa4769b49d8e48238429011814e7c5826986dac92cf982e6bfdd84b8f\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.iq80.leveldb\" name=\"leveldb-api\" version=\"0.9\">\n          <artifact name=\"leveldb-api-0.9.jar\">\n             <sha256 value=\"279e3a5649cde0bf0d4e09fd1369ec0e9ee80344ec06527c37148c9a58684140\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"leveldb-api-0.9.pom\">\n-            <sha256 value=\"79e57fad4ee67ec82de74449d2077402415d52241dd1fffa585e7a5eaf13c6be\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.iq80.leveldb\" name=\"leveldb-project\" version=\"0.9\">\n-         <artifact name=\"leveldb-project-0.9.pom\">\n-            <sha256 value=\"27c70a5289a416365e56ddb51edfc1ac1432add5a5b9f1851eb2578d24ac35da\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.jacoco\" name=\"org.jacoco.agent\" version=\"0.8.5\">\n          <artifact name=\"org.jacoco.agent-0.8.5.jar\">\n             <sha256 value=\"852e1bf147fceab6caf7a82887dba2864d88bca6020524b67dddda073398d2f8\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"org.jacoco.agent-0.8.5.pom\">\n-            <sha256 value=\"c3b2f50b692f2b081d85613527917bc6812f922e1da469a11682653b16f283fd\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.jacoco\" name=\"org.jacoco.ant\" version=\"0.8.5\">\n          <artifact name=\"org.jacoco.ant-0.8.5.jar\">\n             <sha256 value=\"cd2289b9f955c8064054145f3871e18101840ae73ee6b9f835aea51573506cce\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"org.jacoco.ant-0.8.5.pom\">\n-            <sha256 value=\"4b74fc5373ad70d387f3738ce0e9d4b170944039739e2b12a87c24202c002282\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.jacoco\" name=\"org.jacoco.build\" version=\"0.8.5\">\n-         <artifact name=\"org.jacoco.build-0.8.5.pom\">\n-            <sha256 value=\"ad6e40d227647ddbeb4f47a04d1002299986d127b7244f8b34d7b742ba1ac1ca\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.jacoco\" name=\"org.jacoco.core\" version=\"0.8.5\">\n          <artifact name=\"org.jacoco.core-0.8.5.jar\">\n             <sha256 value=\"945818d150f89c03359ee9089568b2b83b4df4752fced02e6323f271481f0ddd\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"org.jacoco.core-0.8.5.pom\">\n-            <sha256 value=\"2df79bbe660731df5b4f7b8d343afff59aa8b7d9d552d9c2f6e94de71eb374ef\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.jacoco\" name=\"org.jacoco.report\" version=\"0.8.5\">\n          <artifact name=\"org.jacoco.report-0.8.5.jar\">\n             <sha256 value=\"c83e687be88e74477519eb67e20cc77a98deefaed920cd2a5531863c23d95906\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"org.jacoco.report-0.8.5.pom\">\n-            <sha256 value=\"574cc0a2a4e77a2939b2fc24cab92bca414d05d8a6ab9e48ffb8fbd7fe0ae725\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.javassist\" name=\"javassist\" version=\"3.24.0-GA\">\n          <artifact name=\"javassist-3.24.0-GA.jar\">\n             <sha256 value=\"aba81efa678b621203fb89aeff81d6f126f7a9dd709401e5609c42976684ae23\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"javassist-3.24.0-GA.pom\">\n-            <sha256 value=\"c9d3790f030276541d118a11be67fd271bf81e301b962780e542c2e5f636c1b1\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.jvnet.mimepull\" name=\"mimepull\" version=\"1.9.13\">\n          <artifact name=\"mimepull-1.9.13.jar\">\n             <sha256 value=\"5518bd3c5d88bea3b303952b22618313d6bf0ca7f131f78368108a04ebba3f17\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"mimepull-1.9.13.pom\">\n-            <sha256 value=\"6f266df5b76b7f83a1f250f86e8a4d6f0e71dc85eee61e6f0771d14d5004d448\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.jvnet.staxex\" name=\"stax-ex\" version=\"1.8.3\">\n          <artifact name=\"stax-ex-1.8.3.jar\">\n             <sha256 value=\"bee08da10bbc481418a1af70b9e9a80321b745bfb4dbdebbe98c1aa17c45caf8\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"stax-ex-1.8.3.pom\">\n-            <sha256 value=\"5188ee615c309a06eb3968db8286fe5b9c513a6977a5dbcb919edef5651d5a8d\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.mapdb\" name=\"mapdb\" version=\"2.0-beta13\">\n          <artifact name=\"mapdb-2.0-beta13.jar\">\n             <sha256 value=\"1268e9ec22ff770ef7e63d7cc72563406ad239422c791acc8b9ee4fdfba0bb1e\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"mapdb-2.0-beta13.pom\">\n-            <sha256 value=\"b3c70282bb85a10f80fe3d6a5b5a8c12cc3c673c952af288925de85c64a785c5\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.mockito\" name=\"mockito-core\" version=\"2.23.4\">\n          <artifact name=\"mockito-core-2.23.4.jar\">\n             <sha256 value=\"d77e018b6bc211d78ddcec54bc508732c4677b9a9eb9103793be85441b20bc5d\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"mockito-core-2.23.4.pom\">\n-            <sha256 value=\"f084fbc10e06df434d676fd3857f6a9200cfd8fdac6dc52847bbe48d722aea40\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.objenesis\" name=\"objenesis\" version=\"2.6\">\n-         <artifact name=\"objenesis-2.6.pom\">\n-            <sha256 value=\"4c1307909dc62df1bd91f075503f8bdef5ae445e13353f1752af9448bea1d3f1\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.objenesis\" name=\"objenesis\" version=\"3.0.1\">\n          <artifact name=\"objenesis-3.0.1.jar\">\n             <sha256 value=\"7a8ff780b9ff48415d7c705f60030b0acaa616e7f823c98eede3b63508d4e984\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"objenesis-3.0.1.pom\">\n-            <sha256 value=\"3dc1377e570974e6f182a6a1680d3284335b5d5cf3a8fea7bec1a5438bbdaff8\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.objenesis\" name=\"objenesis-parent\" version=\"2.6\">\n-         <artifact name=\"objenesis-parent-2.6.pom\">\n-            <sha256 value=\"3825feca2a3c176400b063dec7c6b0643e2b5256bbbfd4e0a7c11e0dd0983baa\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.objenesis\" name=\"objenesis-parent\" version=\"3.0.1\">\n-         <artifact name=\"objenesis-parent-3.0.1.pom\">\n-            <sha256 value=\"53372dbe8ec3814370937a87c03b42b70facb5ba570f99f89c126937d1d8bbcf\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.ow2\" name=\"ow2\" version=\"1.5\">\n-         <artifact name=\"ow2-1.5.pom\">\n-            <sha256 value=\"0f8a1b116e760b8fe6389c51b84e4b07a70fc11082d4f936e453b583dd50b43b\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.ow2.asm\" name=\"asm\" version=\"7.2\">\n          <artifact name=\"asm-7.2.jar\">\n             <sha256 value=\"7e6cc9e92eb94d04e39356c6d8144ca058cda961c344a7f62166a405f3206672\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"asm-7.2.pom\">\n-            <sha256 value=\"e9e529afbd4bc699f6a3380855d27d13017c360fdb68547e06d1c3842d84e262\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.ow2.asm\" name=\"asm-analysis\" version=\"7.2\">\n          <artifact name=\"asm-analysis-7.2.jar\">\n             <sha256 value=\"be922aae60ff1ff1768e8e6544a38a7f92bd0a6d6b0b9791f94955d1bd453de2\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"asm-analysis-7.2.pom\">\n-            <sha256 value=\"71faa63489b3de4d6251581d2b26e87e0c167c5a08198ca62853fd83644d841f\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.ow2.asm\" name=\"asm-commons\" version=\"7.2\">\n          <artifact name=\"asm-commons-7.2.jar\">\n             <sha256 value=\"0e86b8b179c5fb223d1a880a0ff4960b6978223984b94e62e71135f2d8ea3558\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"asm-commons-7.2.pom\">\n-            <sha256 value=\"190ed352a8c20594b196b20194d06773b91c86b8d36868f937e5dbd0e9c0d78d\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.ow2.asm\" name=\"asm-tree\" version=\"7.2\">\n          <artifact name=\"asm-tree-7.2.jar\">\n             <sha256 value=\"c063f5a67fa03cdc9bd79fd1c2ea6816cc4a19473ecdfbd9e9153b408c6f2656\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"asm-tree-7.2.pom\">\n-            <sha256 value=\"56765f0a8bd0978214f7ec87a9dafb5825b8191cff554a5adc14c65d1f5b0442\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.powermock\" name=\"powermock-api-mockito2\" version=\"2.0.2\">\n          <artifact name=\"powermock-api-mockito2-2.0.2.jar\">\n             <sha256 value=\"e949a14d738f67b35f2c78cf4994eadfb943458c826687b854912f10a30bbd7d\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"powermock-api-mockito2-2.0.2.pom\">\n-            <sha256 value=\"7cc32e92c61c12fac2936a2c69e93b4b7cbe5e68199e33bc3645393b12f8c54e\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.powermock\" name=\"powermock-api-support\" version=\"2.0.2\">\n          <artifact name=\"powermock-api-support-2.0.2.jar\">\n             <sha256 value=\"e6de4fe631b4dedf8ba7756f9ba68a815f3ae7f71b5dd545e7c028dcd7bfc96a\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"powermock-api-support-2.0.2.pom\">\n-            <sha256 value=\"43b900bb2cbeb941a62bd62bc845c49df0328a60aa58ecd194a0e79fe5163d62\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.powermock\" name=\"powermock-core\" version=\"2.0.2\">\n          <artifact name=\"powermock-core-2.0.2.jar\">\n             <sha256 value=\"4f94f514fa79bb804fa453376f8dfc03658e15f9bdf3ac6514b099654f98d084\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"powermock-core-2.0.2.pom\">\n-            <sha256 value=\"068f9e11671c8b168441ff122abeb3df436294d9a4674cbc564dea249ec63db3\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.powermock\" name=\"powermock-module-junit4\" version=\"2.0.2\">\n          <artifact name=\"powermock-module-junit4-2.0.2.jar\">\n             <sha256 value=\"4e280529f5a65413c050ba9dbdf7387f50a8bc5790e0f2f48494a622feb31694\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"powermock-module-junit4-2.0.2.pom\">\n-            <sha256 value=\"4986d77cdbccd74ed8cb20578328f62bf9dd21db93419c9d288a5ab369d6b2e5\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.powermock\" name=\"powermock-module-junit4-common\" version=\"2.0.2\">\n          <artifact name=\"powermock-module-junit4-common-2.0.2.jar\">\n             <sha256 value=\"efd7e61cdf14eae7eda1088139969dbcd3fa4151d5c2bf3ee03bca5d1bf0bfb7\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"powermock-module-junit4-common-2.0.2.pom\">\n-            <sha256 value=\"8327f2df29b7b5107293a949edaf139c7da9e63e3ed856042a9154c13673a136\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.powermock\" name=\"powermock-reflect\" version=\"2.0.2\">\n          <artifact name=\"powermock-reflect-2.0.2.jar\">\n             <sha256 value=\"b2a501e8eeb22d401c2017ada36530dd350aa3bbd905f79a82f684a73019b0a9\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"powermock-reflect-2.0.2.pom\">\n-            <sha256 value=\"8306c49b5931bcfb86ce0782302543a957a17271ec5f70ed3d8f0733c0589c07\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.slf4j\" name=\"log4j-over-slf4j\" version=\"1.7.25\">\n          <artifact name=\"log4j-over-slf4j-1.7.25.jar\">\n             <sha256 value=\"c84c5ce4bbb661369ccd4c7b99682027598a0fb2e3d63a84259dbe5c0bf1f949\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"log4j-over-slf4j-1.7.25.pom\">\n-            <sha256 value=\"ab5d6007f23e131b151873de8ca10e34674e3cb63facd11464ece43de99b2e02\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.slf4j\" name=\"slf4j-api\" version=\"1.7.25\">\n          <artifact name=\"slf4j-api-1.7.25.jar\">\n             <sha256 value=\"18c4a0095d5c1da6b817592e767bb23d29dd2f560ad74df75ff3961dbde25b79\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"slf4j-api-1.7.25.pom\">\n-            <sha256 value=\"7cd9d7a0b5d93dfd461a148891b43509cf403a9c7f9fb49060d3554df1c81e1e\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.slf4j\" name=\"slf4j-api\" version=\"1.7.29\">\n          <artifact name=\"slf4j-api-1.7.29.jar\">\n             <sha256 value=\"47b624903c712f9118330ad2fb91d0780f7f666c3f22919d0fc14522c5cad9ea\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"slf4j-api-1.7.29.pom\">\n-            <sha256 value=\"9d9e0a1ee8cd9d13a41a0f1b3592b6175a83d0b9b12a908d219da4a5b942875b\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.slf4j\" name=\"slf4j-parent\" version=\"1.7.25\">\n-         <artifact name=\"slf4j-parent-1.7.25.pom\">\n-            <sha256 value=\"18f5c52120db036e88d6136f8839c832d074bdda95c756c6f429249d2db54ac6\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.slf4j\" name=\"slf4j-parent\" version=\"1.7.29\">\n-         <artifact name=\"slf4j-parent-1.7.29.pom\">\n-            <sha256 value=\"35bb1c07b1b3b3265acc8335d8c03a90262de5a87ab67b444f269f3ac196a54f\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.sonarqube\" name=\"org.sonarqube.gradle.plugin\" version=\"2.7.1\">\n-         <artifact name=\"org.sonarqube.gradle.plugin-2.7.1.pom\">\n-            <sha256 value=\"87c78cf7ec0e420bcb835254b836f907a6b466a4fcc7790d52401c30c32e20fa\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.sonarsource.parent\" name=\"parent\" version=\"48\">\n-         <artifact name=\"parent-48.pom\">\n-            <sha256 value=\"bd1ca1c2768d1cf2a2f4440bebf85f751b3b123676d087e36178c060677efe64\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.sonarsource.scanner.api\" name=\"sonar-scanner-api\" version=\"2.12.0.1661\">\n          <artifact name=\"sonar-scanner-api-2.12.0.1661.jar\">\n             <sha256 value=\"8244163eb16779f16ae6c4e85e46a88485e6b540ae1cdf43271be80767945b7b\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"sonar-scanner-api-2.12.0.1661.pom\">\n-            <sha256 value=\"9c4f786beba5711701bf814b3604eba0d59b41713279235b0044c2c2d4f1a3b8\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n-      <component group=\"org.sonarsource.scanner.api\" name=\"sonar-scanner-api-parent\" version=\"2.12.0.1661\">\n-         <artifact name=\"sonar-scanner-api-parent-2.12.0.1661.pom\">\n-            <sha256 value=\"adfb526dfe4f1c5e34ebb9e450c1b1a7a2e6aebf21c96fcebaf63e2434c4e1ef\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.sonarsource.scanner.gradle\" name=\"sonarqube-gradle-plugin\" version=\"2.7.1\">\n          <artifact name=\"sonarqube-gradle-plugin-2.7.1.jar\">\n             <sha256 value=\"2661bae6b850d29f3bcae4e61469dd2b3d215891c1745f6958f5e46507a042dc\" origin=\"Generated by Gradle\"/>\n          </artifact>\n-         <artifact name=\"sonarqube-gradle-plugin-2.7.1.pom\">\n-            <sha256 value=\"d518514620cc9e74455f778426d780dba267f6ad6432fae0fb156887f676576c\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n       </component>\n       <component group=\"org.sonatype.oss\" name=\"oss-parent\" version=\"7\">\n          <artifact name=\"oss-parent-7.pom\">\n             <sha256 value=\"b51f8867c92b6a722499557fc3a1fdea77bdf9ef574722fe90ce436a29559454\" origin=\"Generated by Gradle\"/>\n          </artifact>\n       </component>\n-      <component group=\"org.sonatype.oss\" name=\"oss-parent\" version=\"9\">\n-         <artifact name=\"oss-parent-9.pom\">\n-            <sha256 value=\"fb40265f982548212ff82e362e59732b2187ec6f0d80182885c14ef1f982827a\" origin=\"Generated by Gradle\"/>\n-         </artifact>\n-      </component>\n    </components>\n </verification-metadata>"
  },
  {
    "sha": "d22a5039ea1ad11df547f98768d3a6583bbd809c",
    "filename": "src/main/java/co/rsk/federate/FedNodeRunner.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/rsksmart/powpeg-node/blob/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/main/java/co/rsk/federate/FedNodeRunner.java",
    "raw_url": "https://github.com/rsksmart/powpeg-node/raw/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/main/java/co/rsk/federate/FedNodeRunner.java",
    "contents_url": "https://api.github.com/repos/rsksmart/powpeg-node/contents/src/main/java/co/rsk/federate/FedNodeRunner.java?ref=a2e762040bf12bb8a0716e6e3680b22ced3f3862",
    "patch": "@@ -218,9 +218,10 @@ private void startFederate() throws Exception {\n         if (config.isFederatorEnabled()) {\n             // Setup a federation watcher to trigger starts and stops of the\n             // btc to rsk client upon federation changes\n-            FederationProvider federationProvider = new FederationProviderFromFederatorSupport(federatorSupport);\n-\n             bridgeConstants = this.config.getNetworkConstants().getBridgeConstants();\n+            FederationProvider federationProvider =\n+                new FederationProviderFromFederatorSupport(federatorSupport, bridgeConstants);\n+\n             BtcLockSenderProvider btcLockSenderProvider = new BtcLockSenderProvider();\n             PeginInstructionsProvider peginInstructionsProvider = new PeginInstructionsProvider();\n             btcToRskClientFileStorage = new BtcToRskClientFileStorageImpl(new BtcToRskClientFileStorageInfo(config));"
  },
  {
    "sha": "785dd6aa2911b2ff583ddecf5921c74702b5094a",
    "filename": "src/main/java/co/rsk/federate/FederationProviderFromFederatorSupport.java",
    "status": "modified",
    "additions": 48,
    "deletions": 3,
    "changes": 51,
    "blob_url": "https://github.com/rsksmart/powpeg-node/blob/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/main/java/co/rsk/federate/FederationProviderFromFederatorSupport.java",
    "raw_url": "https://github.com/rsksmart/powpeg-node/raw/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/main/java/co/rsk/federate/FederationProviderFromFederatorSupport.java",
    "contents_url": "https://api.github.com/repos/rsksmart/powpeg-node/contents/src/main/java/co/rsk/federate/FederationProviderFromFederatorSupport.java?ref=a2e762040bf12bb8a0716e6e3680b22ced3f3862",
    "patch": "@@ -20,6 +20,8 @@\n \n import co.rsk.bitcoinj.core.Address;\n import co.rsk.bitcoinj.core.BtcECKey;\n+import co.rsk.config.BridgeConstants;\n+import co.rsk.peg.ErpFederation;\n import co.rsk.peg.Federation;\n import co.rsk.peg.FederationMember;\n import org.ethereum.crypto.ECKey;\n@@ -40,9 +42,11 @@\n  */\n public class FederationProviderFromFederatorSupport implements FederationProvider {\n     private final FederatorSupport federatorSupport;\n+    private final BridgeConstants bridgeConstants;\n \n-    public FederationProviderFromFederatorSupport(FederatorSupport federatorSupport) {\n+    public FederationProviderFromFederatorSupport(FederatorSupport federatorSupport, BridgeConstants bridgeConstants) {\n         this.federatorSupport = federatorSupport;\n+        this.bridgeConstants = bridgeConstants;\n     }\n \n     @Override\n@@ -71,7 +75,24 @@ public Federation getActiveFederation() {\n         Instant creationTime = federatorSupport.getFederationCreationTime();\n         long creationBlockNumber = federatorSupport.getFederationCreationBlockNumber();\n \n-        return new Federation(members, creationTime, creationBlockNumber, federatorSupport.getBtcParams());\n+        Federation initialFederation =\n+            new Federation(members, creationTime, creationBlockNumber, federatorSupport.getBtcParams());\n+\n+        Address federationAddress = federatorSupport.getFederationAddress();\n+\n+        if (initialFederation.getAddress().equals(federationAddress)) {\n+            return initialFederation;\n+        }\n+\n+        // There is no reason for addresses not to match but being an ERP federation\n+        return new ErpFederation(\n+            members,\n+            creationTime,\n+            creationBlockNumber,\n+            federatorSupport.getBtcParams(),\n+            bridgeConstants.getErpFedPubKeysList(),\n+            bridgeConstants.getErpFedActivationDelay()\n+        );\n     }\n \n     @Override\n@@ -107,10 +128,34 @@ public Address getActiveFederationAddress() {\n \n             members.add(member);\n         }\n+\n         Instant creationTime = federatorSupport.getRetiringFederationCreationTime();\n         long creationBlockNumber = federatorSupport.getRetiringFederationCreationBlockNumber();\n \n-        return Optional.of(new Federation(members, creationTime, creationBlockNumber, federatorSupport.getBtcParams()));\n+        Federation initialFederation =\n+            new Federation(members, creationTime, creationBlockNumber, federatorSupport.getBtcParams());\n+\n+        Optional<Address> optionalFederationAddress = federatorSupport.getRetiringFederationAddress();\n+        Address federationAddress = null;\n+\n+        if (optionalFederationAddress.isPresent()) {\n+            federationAddress = optionalFederationAddress.get();\n+        }\n+\n+        if (initialFederation.getAddress().equals(federationAddress)) {\n+            return Optional.of(initialFederation);\n+        }\n+\n+        return Optional.of(\n+            new ErpFederation(\n+                members,\n+                creationTime,\n+                creationBlockNumber,\n+                federatorSupport.getBtcParams(),\n+                bridgeConstants.getErpFedPubKeysList(),\n+                bridgeConstants.getErpFedActivationDelay()\n+            )\n+        );\n     }\n \n     @Override"
  },
  {
    "sha": "66c5df1e1923d8969e4f955b473bcd4b59380ac0",
    "filename": "src/main/java/co/rsk/federate/btcreleaseclient/BtcReleaseClient.java",
    "status": "modified",
    "additions": 30,
    "deletions": 24,
    "changes": 54,
    "blob_url": "https://github.com/rsksmart/powpeg-node/blob/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/main/java/co/rsk/federate/btcreleaseclient/BtcReleaseClient.java",
    "raw_url": "https://github.com/rsksmart/powpeg-node/raw/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/main/java/co/rsk/federate/btcreleaseclient/BtcReleaseClient.java",
    "contents_url": "https://api.github.com/repos/rsksmart/powpeg-node/contents/src/main/java/co/rsk/federate/btcreleaseclient/BtcReleaseClient.java?ref=a2e762040bf12bb8a0716e6e3680b22ced3f3862",
    "patch": "@@ -3,7 +3,8 @@\n import co.rsk.bitcoinj.core.BtcECKey;\n import co.rsk.bitcoinj.core.BtcTransaction;\n import co.rsk.bitcoinj.core.TransactionInput;\n-import co.rsk.bitcoinj.script.FastBridgeRedeemScriptParser;\n+import co.rsk.bitcoinj.script.RedeemScriptParser;\n+import co.rsk.bitcoinj.script.RedeemScriptParserFactory;\n import co.rsk.bitcoinj.script.Script;\n import co.rsk.bitcoinj.script.ScriptChunk;\n import co.rsk.bitcoinj.wallet.RedeemData;\n@@ -306,7 +307,7 @@ protected void validateTxCanBeSigned(BtcTransaction btcTx) throws FederatorAlrea\n             for (int inputIndex = 0; inputIndex < btcTx.getInputs().size(); inputIndex++) {\n                 TransactionInput txIn = btcTx.getInput(inputIndex);\n                 Script redeemScript = getRedeemScriptFromInput(txIn);\n-                Script baseRedeemScript = FastBridgeRedeemScriptParser.extractRedeemScriptFromMultiSigFastBridgeRedeemScript(redeemScript);\n+                Script standardRedeemScript = extractStandardRedeemScript(redeemScript);\n \n                 // Check if input is not already signed by the current federator\n                 logger.trace(\"[validateTxCanBeSigned] Checking if the input {} is not already signed by the current federator\", inputIndex);\n@@ -331,7 +332,7 @@ protected void validateTxCanBeSigned(BtcTransaction btcTx) throws FederatorAlrea\n                 observedFederations.stream()\n                         .forEach(f -> logger.trace(\"[validateTxCanBeSigned] federation p2sh redeem script {}\", f.getRedeemScript()));\n                 List<Federation> spendingFedFilter = observedFederations.stream()\n-                        .filter(f -> f.getRedeemScript().equals(baseRedeemScript)).collect(Collectors.toList());\n+                        .filter(f -> f.getStandardRedeemScript().equals(standardRedeemScript)).collect(Collectors.toList());\n                 logger.debug(\"[validateTxCanBeSigned] spendingFedFilter size {}\", spendingFedFilter.size());\n                 if (spendingFedFilter.isEmpty()) {\n                     String message = String.format(\n@@ -398,17 +399,6 @@ public void onBtcRelease(BtcTransaction signedBtcTx) {\n         });\n     }\n \n-    private BtcTransaction convertToBtcTxFromRLPData(byte[] dataFromBtcReleaseTopic) {\n-        RLPList dataElements = (RLPList)RLP.decode2(dataFromBtcReleaseTopic).get(0);\n-\n-        return new BtcTransaction(bridgeConstants.getBtcParams(), dataElements.get(1).getRLPData());\n-    }\n-\n-    private BtcTransaction convertToBtcTxFromSolidityData(byte[] dataFromBtcReleaseTopic) {\n-        return new BtcTransaction(bridgeConstants.getBtcParams(),\n-                (byte[])BridgeEvents.RELEASE_BTC.getEvent().decodeEventData(dataFromBtcReleaseTopic)[0]);\n-    }\n-\n     /*\n     Received tx inputs are replaced by base inputs without signatures that spend from the given federation.\n     This way the tx has the same hash as the one registered in release_requested event topics.\n@@ -427,14 +417,9 @@ protected void removeSignaturesFromTransaction(BtcTransaction tx, Federation spe\n         }\n     }\n \n-    private static Script createBaseInputScriptThatSpendsFromTheFederation(Federation federation, Script customRedeemScript) {\n-        Script scriptPubKey = federation.getP2SHScript();\n-        Script redeemScript = federation.getRedeemScript();\n-        RedeemData redeemData = RedeemData.of(federation.getBtcPublicKeys(), redeemScript);\n-        // customRedeemScript might not be actually custom, but just in case, use the provided redeemScript\n-        Script inputScript = scriptPubKey.createEmptyInputScript(redeemData.keys.get(0), customRedeemScript);\n-\n-        return inputScript;\n+    protected Script extractStandardRedeemScript(Script redeemScript) {\n+        RedeemScriptParser parser = RedeemScriptParserFactory.get(redeemScript.getChunks());\n+        return parser.extractStandardRedeemScript();\n     }\n \n     protected Script getRedeemScriptFromInput(TransactionInput txInput) {\n@@ -447,10 +432,31 @@ protected Script getRedeemScriptFromInput(TransactionInput txInput) {\n \n     protected Federation getSpendingFederation(BtcTransaction btcTx) {\n         TransactionInput firstInput = btcTx.getInput(0);\n-        Script redeemScript = FastBridgeRedeemScriptParser.extractRedeemScriptFromMultiSigFastBridgeRedeemScript(getRedeemScriptFromInput(firstInput));\n+        Script redeemScript = extractStandardRedeemScript(getRedeemScriptFromInput(firstInput));\n+\n         List<Federation> spendingFedFilter = observedFederations.stream()\n-                .filter(f -> f.getRedeemScript().equals(redeemScript)).collect(Collectors.toList());\n+                .filter(f -> f.getStandardRedeemScript().equals(redeemScript)).collect(Collectors.toList());\n \n         return spendingFedFilter.get(0);\n     }\n+\n+    private static Script createBaseInputScriptThatSpendsFromTheFederation(Federation federation, Script customRedeemScript) {\n+        Script scriptPubKey = federation.getP2SHScript();\n+        Script redeemScript = federation.getRedeemScript();\n+        RedeemData redeemData = RedeemData.of(federation.getBtcPublicKeys(), redeemScript);\n+\n+        // customRedeemScript might not be actually custom, but just in case, use the provided redeemScript\n+        return scriptPubKey.createEmptyInputScript(redeemData.keys.get(0), customRedeemScript);\n+    }\n+\n+    private BtcTransaction convertToBtcTxFromRLPData(byte[] dataFromBtcReleaseTopic) {\n+        RLPList dataElements = (RLPList)RLP.decode2(dataFromBtcReleaseTopic).get(0);\n+\n+        return new BtcTransaction(bridgeConstants.getBtcParams(), dataElements.get(1).getRLPData());\n+    }\n+\n+    private BtcTransaction convertToBtcTxFromSolidityData(byte[] dataFromBtcReleaseTopic) {\n+        return new BtcTransaction(bridgeConstants.getBtcParams(),\n+            (byte[])BridgeEvents.RELEASE_BTC.getEvent().decodeEventData(dataFromBtcReleaseTopic)[0]);\n+    }\n }"
  },
  {
    "sha": "2daa163fd06167c182207d21875674b5546f3bee",
    "filename": "src/test/java/co/rsk/federate/FederationProviderFromFederatorSupportTest.java",
    "status": "modified",
    "additions": 228,
    "deletions": 84,
    "changes": 312,
    "blob_url": "https://github.com/rsksmart/powpeg-node/blob/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/test/java/co/rsk/federate/FederationProviderFromFederatorSupportTest.java",
    "raw_url": "https://github.com/rsksmart/powpeg-node/raw/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/test/java/co/rsk/federate/FederationProviderFromFederatorSupportTest.java",
    "contents_url": "https://api.github.com/repos/rsksmart/powpeg-node/contents/src/test/java/co/rsk/federate/FederationProviderFromFederatorSupportTest.java?ref=a2e762040bf12bb8a0716e6e3680b22ced3f3862",
    "patch": "@@ -3,6 +3,9 @@\n import co.rsk.bitcoinj.core.Address;\n import co.rsk.bitcoinj.core.BtcECKey;\n import co.rsk.bitcoinj.core.NetworkParameters;\n+import co.rsk.config.BridgeConstants;\n+import co.rsk.config.BridgeRegTestConstants;\n+import co.rsk.peg.ErpFederation;\n import co.rsk.peg.Federation;\n import co.rsk.peg.FederationMember;\n import org.ethereum.config.blockchain.upgrades.ActivationConfig;\n@@ -24,11 +27,36 @@\n public class FederationProviderFromFederatorSupportTest {\n     private FederatorSupport federatorSupportMock;\n     private FederationProvider federationProvider;\n+    private BridgeConstants bridgeConstants;\n+    private NetworkParameters regtestParams;\n+    private Address randomActiveAddress;\n+    private Address randomRetiringAddress;\n+    private Instant creationTime;\n+    private Address activeFedAddress;\n+    private Address retiringFedAddress;\n \n     @Before\n     public void createProvider() {\n+        bridgeConstants = BridgeRegTestConstants.getInstance();\n         federatorSupportMock = mock(FederatorSupport.class);\n-        federationProvider = new FederationProviderFromFederatorSupport(federatorSupportMock);\n+        federationProvider = new FederationProviderFromFederatorSupport(\n+            federatorSupportMock,\n+            bridgeConstants\n+        );\n+        regtestParams = NetworkParameters.fromID(NetworkParameters.ID_REGTEST);\n+        randomActiveAddress = new BtcECKey().toAddress(regtestParams);\n+        randomRetiringAddress = new BtcECKey().toAddress(regtestParams);\n+        creationTime = Instant.ofEpochMilli(5005L);\n+\n+        activeFedAddress = Address.fromBase58(\n+            regtestParams,\n+            \"2Mutaga98GgQJEmCj1TqhwLdJ3u8DFVUTw8\"\n+        );\n+\n+        retiringFedAddress = Address.fromBase58(\n+            regtestParams,\n+            \"2Mtdr1Ci3bX4XRfDGYbmGbuaquNspWqeqcC\"\n+        );\n     }\n \n     @Test\n@@ -38,17 +66,16 @@ public void getActiveFederation_beforeMultikey() {\n         when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n         when(federatorSupportMock.getFederationSize()).thenReturn(4);\n         when(federatorSupportMock.getFederationThreshold()).thenReturn(2);\n-        when(federatorSupportMock.getFederationCreationTime()).thenReturn(Instant.ofEpochMilli(5005L));\n-        when(federatorSupportMock.getBtcParams()).thenReturn(NetworkParameters.fromID(NetworkParameters.ID_REGTEST));\n+        when(federatorSupportMock.getFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getFederationAddress()).thenReturn(activeFedAddress);\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n         for (int i = 0; i < 4; i++) {\n             when(federatorSupportMock.getFederatorPublicKey(i)).thenReturn(BtcECKey.fromPrivate(BigInteger.valueOf((i+1)*1000)));\n         }\n \n-        Federation expectedFederation = new Federation(\n-                getFederationMembersFromPks(0, 1000, 2000, 3000, 4000),\n-                Instant.ofEpochMilli(5005L),\n-                0L,\n-                NetworkParameters.fromID(NetworkParameters.ID_REGTEST)\n+        Federation expectedFederation = createFederation(\n+            getFederationMembersFromPks(0, 1000, 2000, 3000, 4000),\n+            false\n         );\n \n         Assert.assertEquals(expectedFederation, federationProvider.getActiveFederation());\n@@ -62,33 +89,57 @@ public void getActiveFederation_afterMultikey() {\n         when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n         when(federatorSupportMock.getFederationSize()).thenReturn(4);\n         when(federatorSupportMock.getFederationThreshold()).thenReturn(2);\n-        when(federatorSupportMock.getFederationCreationTime()).thenReturn(Instant.ofEpochMilli(5005L));\n-        when(federatorSupportMock.getBtcParams()).thenReturn(NetworkParameters.fromID(NetworkParameters.ID_REGTEST));\n+        when(federatorSupportMock.getFederationCreationTime()).thenReturn(creationTime);\n+        (when(federatorSupportMock.getFederationAddress())).thenReturn(activeFedAddress);\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n         for (int i = 0; i < 4; i++) {\n             when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.BTC)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000)));\n             when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.RSK)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000+1)));\n             when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.MST)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000+2)));\n         }\n \n-        Federation expectedFederation = new Federation(\n-                getFederationMembersFromPks(1, 1000, 2000, 3000, 4000),\n-                Instant.ofEpochMilli(5005L),\n-                0L,\n-                NetworkParameters.fromID(NetworkParameters.ID_REGTEST)\n+        Federation expectedFederation = createFederation(\n+            getFederationMembersFromPks(1, 1000, 2000, 3000, 4000),\n+            false\n         );\n \n         Assert.assertEquals(expectedFederation, federationProvider.getActiveFederation());\n         verify(federatorSupportMock, times(1)).getFederationSize();\n     }\n \n+    @Test\n+    public void getActiveFederation_erp_federation() {\n+        ActivationConfig.ForBlock configMock = mock(ActivationConfig.ForBlock.class);\n+        when(configMock.isActive(RSKIP123)).thenReturn(true);\n+        when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n+        when(federatorSupportMock.getFederationSize()).thenReturn(5);\n+        when(federatorSupportMock.getFederationThreshold()).thenReturn(3);\n+        when(federatorSupportMock.getFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n+        for (int i = 0; i < 5; i++) {\n+            when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.BTC)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000)));\n+            when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.RSK)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000+1)));\n+            when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.MST)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000+2)));\n+        }\n+\n+        Federation expectedFederation = createFederation(\n+            getFederationMembersFromPks(1, 1000, 2000, 3000, 4000, 5000),\n+            true\n+        );\n+\n+        Federation obtainedFederation = federationProvider.getActiveFederation();\n+\n+        Assert.assertEquals(expectedFederation, obtainedFederation);\n+        Assert.assertTrue(obtainedFederation instanceof ErpFederation);\n+        verify(federatorSupportMock, times(1)).getFederationSize();\n+    }\n+\n     @Test\n     public void getActiveFederationAddress() {\n-        NetworkParameters regtestParameters = NetworkParameters.fromID(NetworkParameters.ID_REGTEST);\n-        Address randomAddress = new BtcECKey().toAddress(regtestParameters);\n-        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParameters);\n-        when(federatorSupportMock.getFederationAddress()).thenReturn(randomAddress);\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n+        when(federatorSupportMock.getFederationAddress()).thenReturn(randomActiveAddress);\n \n-        Assert.assertEquals(randomAddress, federationProvider.getActiveFederationAddress());\n+        Assert.assertEquals(randomActiveAddress, federationProvider.getActiveFederationAddress());\n     }\n \n     @Test\n@@ -104,19 +155,18 @@ public void getRetiringFederation_present_beforeMultikey() {\n         ActivationConfig.ForBlock configMock = mock(ActivationConfig.ForBlock.class);\n         when(configMock.isActive(RSKIP123)).thenReturn(false);\n         when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n-        when(federatorSupportMock.getRetiringFederationSize()).thenReturn(4);\n-        when(federatorSupportMock.getRetiringFederationThreshold()).thenReturn(2);\n-        when(federatorSupportMock.getRetiringFederationCreationTime()).thenReturn(Instant.ofEpochMilli(5005L));\n-        when(federatorSupportMock.getBtcParams()).thenReturn(NetworkParameters.fromID(NetworkParameters.ID_REGTEST));\n-        for (int i = 0; i < 4; i++) {\n-            when(federatorSupportMock.getRetiringFederatorPublicKey(i)).thenReturn(BtcECKey.fromPrivate(BigInteger.valueOf((i+1)*1000)));\n+        when(federatorSupportMock.getRetiringFederationSize()).thenReturn(6);\n+        when(federatorSupportMock.getRetiringFederationThreshold()).thenReturn(3);\n+        when(federatorSupportMock.getRetiringFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getRetiringFederationAddress()).thenReturn(Optional.of(retiringFedAddress));\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n+        for (int i = 0; i < 6; i++) {\n+            when(federatorSupportMock.getRetiringFederatorPublicKey(i)).thenReturn(BtcECKey.fromPrivate(BigInteger.valueOf((i+1)*2000)));\n         }\n \n-        Federation expectedFederation = new Federation(\n-                getFederationMembersFromPks(0, 1000, 2000, 3000, 4000),\n-                Instant.ofEpochMilli(5005L),\n-                0L,\n-                NetworkParameters.fromID(NetworkParameters.ID_REGTEST)\n+        Federation expectedFederation = createFederation(\n+            getFederationMembersFromPks(0, 2000, 4000, 6000, 8000, 10000, 12000),\n+            false\n         );\n \n         Assert.assertEquals(Optional.of(expectedFederation), federationProvider.getRetiringFederation());\n@@ -128,24 +178,52 @@ public void getRetiringFederation_present_afterMultikey() {\n         ActivationConfig.ForBlock configMock = mock(ActivationConfig.ForBlock.class);\n         when(configMock.isActive(RSKIP123)).thenReturn(true);\n         when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n-        when(federatorSupportMock.getRetiringFederationSize()).thenReturn(4);\n-        when(federatorSupportMock.getRetiringFederationThreshold()).thenReturn(2);\n-        when(federatorSupportMock.getRetiringFederationCreationTime()).thenReturn(Instant.ofEpochMilli(5005L));\n-        when(federatorSupportMock.getBtcParams()).thenReturn(NetworkParameters.fromID(NetworkParameters.ID_REGTEST));\n-        for (int i = 0; i < 4; i++) {\n+        when(federatorSupportMock.getRetiringFederationSize()).thenReturn(6);\n+        when(federatorSupportMock.getRetiringFederationThreshold()).thenReturn(3);\n+        when(federatorSupportMock.getRetiringFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getRetiringFederationAddress()).thenReturn(Optional.of(retiringFedAddress));\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n+        for (int i = 0; i < 6; i++) {\n+            when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.BTC)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*2000)));\n+            when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.RSK)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*2000+1)));\n+            when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.MST)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*2000+2)));\n+        }\n+\n+        Federation expectedFederation = createFederation(\n+            getFederationMembersFromPks(1,2000, 4000, 6000, 8000, 10000, 12000),\n+            false\n+        );\n+\n+        Assert.assertEquals(Optional.of(expectedFederation), federationProvider.getRetiringFederation());\n+        verify(federatorSupportMock, times(1)).getRetiringFederationSize();\n+    }\n+\n+    @Test\n+    public void getRetiringFederation_present_erp_federation() {\n+        ActivationConfig.ForBlock configMock = mock(ActivationConfig.ForBlock.class);\n+        when(configMock.isActive(RSKIP123)).thenReturn(true);\n+        when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n+        when(federatorSupportMock.getRetiringFederationSize()).thenReturn(5);\n+        when(federatorSupportMock.getRetiringFederationThreshold()).thenReturn(3);\n+        when(federatorSupportMock.getRetiringFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getRetiringFederationAddress()).thenReturn(Optional.of(randomActiveAddress));\n+\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n+        for (int i = 0; i < 5; i++) {\n             when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.BTC)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000)));\n             when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.RSK)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000+1)));\n             when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.MST)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000+2)));\n         }\n \n-        Federation expectedFederation = new Federation(\n-                getFederationMembersFromPks(1, 1000, 2000, 3000, 4000),\n-                Instant.ofEpochMilli(5005L),\n-                0L,\n-                NetworkParameters.fromID(NetworkParameters.ID_REGTEST)\n+        Federation expectedFederation = createFederation(\n+            getFederationMembersFromPks(1, 1000, 2000, 3000, 4000, 5000),\n+            true\n         );\n \n-        Assert.assertEquals(Optional.of(expectedFederation), federationProvider.getRetiringFederation());\n+        Federation obtainedFederation = federationProvider.getRetiringFederation().get();\n+\n+        Assert.assertTrue(obtainedFederation instanceof ErpFederation);\n+        Assert.assertEquals(expectedFederation, obtainedFederation);\n         verify(federatorSupportMock, times(1)).getRetiringFederationSize();\n     }\n \n@@ -156,19 +234,18 @@ public void getLiveFederations_onlyActive_beforeMultikey() {\n         when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n         when(federatorSupportMock.getFederationSize()).thenReturn(4);\n         when(federatorSupportMock.getFederationThreshold()).thenReturn(2);\n-        when(federatorSupportMock.getFederationCreationTime()).thenReturn(Instant.ofEpochMilli(5005L));\n-        when(federatorSupportMock.getBtcParams()).thenReturn(NetworkParameters.fromID(NetworkParameters.ID_REGTEST));\n+        when(federatorSupportMock.getFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getFederationAddress()).thenReturn(activeFedAddress);\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n         for (int i = 0; i < 4; i++) {\n             when(federatorSupportMock.getFederatorPublicKey(i)).thenReturn(BtcECKey.fromPrivate(BigInteger.valueOf((i+1)*1000)));\n         }\n \n         when(federatorSupportMock.getRetiringFederationSize()).thenReturn(-1);\n \n-        Federation expectedActiveFederation = new Federation(\n-                getFederationMembersFromPks(0, 1000, 2000, 3000, 4000),\n-                Instant.ofEpochMilli(5005L),\n-                0L,\n-                NetworkParameters.fromID(NetworkParameters.ID_REGTEST)\n+        Federation expectedActiveFederation = createFederation(\n+            getFederationMembersFromPks(0, 1000, 2000, 3000, 4000),\n+            false\n         );\n \n         List<Federation> liveFederations = federationProvider.getLiveFederations();\n@@ -185,8 +262,9 @@ public void getLiveFederations_onlyActive_afterMultikey() {\n         when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n         when(federatorSupportMock.getFederationSize()).thenReturn(4);\n         when(federatorSupportMock.getFederationThreshold()).thenReturn(2);\n-        when(federatorSupportMock.getFederationCreationTime()).thenReturn(Instant.ofEpochMilli(5005L));\n-        when(federatorSupportMock.getBtcParams()).thenReturn(NetworkParameters.fromID(NetworkParameters.ID_REGTEST));\n+        when(federatorSupportMock.getFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getFederationAddress()).thenReturn(activeFedAddress);\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n         for (int i = 0; i < 4; i++) {\n             when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.BTC)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000)));\n             when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.RSK)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000+1)));\n@@ -195,11 +273,9 @@ public void getLiveFederations_onlyActive_afterMultikey() {\n \n         when(federatorSupportMock.getRetiringFederationSize()).thenReturn(-1);\n \n-        Federation expectedActiveFederation = new Federation(\n-                getFederationMembersFromPks(1,1000, 2000, 3000, 4000),\n-                Instant.ofEpochMilli(5005L),\n-                0L,\n-                NetworkParameters.fromID(NetworkParameters.ID_REGTEST)\n+        Federation expectedActiveFederation = createFederation(\n+            getFederationMembersFromPks(1,1000, 2000, 3000, 4000),\n+            false\n         );\n \n         List<Federation> liveFederations = federationProvider.getLiveFederations();\n@@ -216,32 +292,30 @@ public void getLiveFederations_both_beforeMultikey() {\n         when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n         when(federatorSupportMock.getFederationSize()).thenReturn(4);\n         when(federatorSupportMock.getFederationThreshold()).thenReturn(2);\n-        when(federatorSupportMock.getFederationCreationTime()).thenReturn(Instant.ofEpochMilli(5005L));\n-        when(federatorSupportMock.getBtcParams()).thenReturn(NetworkParameters.fromID(NetworkParameters.ID_REGTEST));\n+        when(federatorSupportMock.getFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getFederationAddress()).thenReturn(activeFedAddress);\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n         for (int i = 0; i < 4; i++) {\n             when(federatorSupportMock.getFederatorPublicKey(i)).thenReturn(BtcECKey.fromPrivate(BigInteger.valueOf((i+1)*1000)));\n         }\n \n         when(federatorSupportMock.getRetiringFederationSize()).thenReturn(6);\n         when(federatorSupportMock.getRetiringFederationThreshold()).thenReturn(3);\n-        when(federatorSupportMock.getRetiringFederationCreationTime()).thenReturn(Instant.ofEpochMilli(15300L));\n-        when(federatorSupportMock.getBtcParams()).thenReturn(NetworkParameters.fromID(NetworkParameters.ID_REGTEST));\n+        when(federatorSupportMock.getRetiringFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getRetiringFederationAddress()).thenReturn(Optional.of(retiringFedAddress));\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n         for (int i = 0; i < 6; i++) {\n             when(federatorSupportMock.getRetiringFederatorPublicKey(i)).thenReturn(BtcECKey.fromPrivate(BigInteger.valueOf((i+1)*2000)));\n         }\n \n-        Federation expectedActiveFederation = new Federation(\n-                getFederationMembersFromPks(0,1000, 2000, 3000, 4000),\n-                Instant.ofEpochMilli(5005L),\n-                0L,\n-                NetworkParameters.fromID(NetworkParameters.ID_REGTEST)\n+        Federation expectedActiveFederation = createFederation(\n+            getFederationMembersFromPks(0,1000, 2000, 3000, 4000),\n+            false\n         );\n \n-        Federation expectedRetiringFederation = new Federation(\n-                getFederationMembersFromPks(0, 2000, 4000, 6000, 8000, 10000, 12000),\n-                Instant.ofEpochMilli(15300L),\n-                0L,\n-                NetworkParameters.fromID(NetworkParameters.ID_REGTEST)\n+        Federation expectedRetiringFederation = createFederation(\n+            getFederationMembersFromPks(0, 2000, 4000, 6000, 8000, 10000, 12000),\n+            false\n         );\n \n         List<Federation> liveFederations = federationProvider.getLiveFederations();\n@@ -259,8 +333,9 @@ public void getLiveFederations_both_afterMultikey() {\n         when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n         when(federatorSupportMock.getFederationSize()).thenReturn(4);\n         when(federatorSupportMock.getFederationThreshold()).thenReturn(2);\n-        when(federatorSupportMock.getFederationCreationTime()).thenReturn(Instant.ofEpochMilli(5005L));\n-        when(federatorSupportMock.getBtcParams()).thenReturn(NetworkParameters.fromID(NetworkParameters.ID_REGTEST));\n+        when(federatorSupportMock.getFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getFederationAddress()).thenReturn(activeFedAddress);\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n         for (int i = 0; i < 4; i++) {\n             when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.BTC)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000)));\n             when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.RSK)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000+1)));\n@@ -269,26 +344,23 @@ public void getLiveFederations_both_afterMultikey() {\n \n         when(federatorSupportMock.getRetiringFederationSize()).thenReturn(6);\n         when(federatorSupportMock.getRetiringFederationThreshold()).thenReturn(3);\n-        when(federatorSupportMock.getRetiringFederationCreationTime()).thenReturn(Instant.ofEpochMilli(15300L));\n-        when(federatorSupportMock.getBtcParams()).thenReturn(NetworkParameters.fromID(NetworkParameters.ID_REGTEST));\n+        when(federatorSupportMock.getRetiringFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getRetiringFederationAddress()).thenReturn(Optional.of(retiringFedAddress));\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n         for (int i = 0; i < 6; i++) {\n             when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.BTC)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*2000)));\n             when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.RSK)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*2000+1)));\n             when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.MST)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*2000+2)));\n         }\n \n-        Federation expectedActiveFederation = new Federation(\n-                getFederationMembersFromPks(1,1000, 2000, 3000, 4000),\n-                Instant.ofEpochMilli(5005L),\n-                0L,\n-                NetworkParameters.fromID(NetworkParameters.ID_REGTEST)\n+        Federation expectedActiveFederation = createFederation(\n+            getFederationMembersFromPks(1,1000, 2000, 3000, 4000),\n+            false\n         );\n \n-        Federation expectedRetiringFederation = new Federation(\n-                getFederationMembersFromPks(1,2000, 4000, 6000, 8000, 10000, 12000),\n-                Instant.ofEpochMilli(15300L),\n-                0L,\n-                NetworkParameters.fromID(NetworkParameters.ID_REGTEST)\n+        Federation expectedRetiringFederation = createFederation(\n+            getFederationMembersFromPks(1,2000, 4000, 6000, 8000, 10000, 12000),\n+            false\n         );\n \n         List<Federation> liveFederations = federationProvider.getLiveFederations();\n@@ -299,6 +371,78 @@ public void getLiveFederations_both_afterMultikey() {\n         verify(federatorSupportMock, times(1)).getRetiringFederationSize();\n     }\n \n+    @Test\n+    public void getLiveFederations_both_erp_federations() {\n+        ActivationConfig.ForBlock configMock = mock(ActivationConfig.ForBlock.class);\n+        when(configMock.isActive(RSKIP123)).thenReturn(true);\n+\n+        when(federatorSupportMock.getConfigForBestBlock()).thenReturn(configMock);\n+        when(federatorSupportMock.getFederationSize()).thenReturn(5);\n+        when(federatorSupportMock.getFederationThreshold()).thenReturn(3);\n+        when(federatorSupportMock.getFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getFederationAddress()).thenReturn(randomActiveAddress);\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n+        for (int i = 0; i < 5; i++) {\n+            when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.BTC)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000)));\n+            when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.RSK)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000+1)));\n+            when(federatorSupportMock.getFederatorPublicKeyOfType(i, FederationMember.KeyType.MST)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*1000+2)));\n+        }\n+\n+        when(federatorSupportMock.getRetiringFederationSize()).thenReturn(5);\n+        when(federatorSupportMock.getRetiringFederationThreshold()).thenReturn(3);\n+        when(federatorSupportMock.getRetiringFederationCreationTime()).thenReturn(creationTime);\n+        when(federatorSupportMock.getRetiringFederationAddress()).thenReturn(Optional.of(randomRetiringAddress));\n+        when(federatorSupportMock.getBtcParams()).thenReturn(regtestParams);\n+        for (int i = 0; i < 5; i++) {\n+            when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.BTC)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*2000)));\n+            when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.RSK)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*2000+1)));\n+            when(federatorSupportMock.getRetiringFederatorPublicKeyOfType(i, FederationMember.KeyType.MST)).thenReturn(ECKey.fromPrivate(BigInteger.valueOf((i+1)*2000+2)));\n+        }\n+\n+        Federation expectedActiveFederation = createFederation(\n+            getFederationMembersFromPks(1, 1000, 2000, 3000, 4000, 5000),\n+            true\n+            );\n+\n+\n+        Federation expectedRetiringFederation = createFederation(\n+            getFederationMembersFromPks(1,2000, 4000, 6000, 8000, 10000),\n+            true\n+        );\n+\n+        List<Federation> liveFederations = federationProvider.getLiveFederations();\n+        Assert.assertEquals(2, liveFederations.size());\n+        Assert.assertEquals(expectedActiveFederation, liveFederations.get(0));\n+        Assert.assertTrue(liveFederations.get(0) instanceof ErpFederation);\n+        Assert.assertEquals(expectedRetiringFederation, liveFederations.get(1));\n+        Assert.assertTrue(liveFederations.get(1) instanceof ErpFederation);\n+        verify(federatorSupportMock, times(1)).getFederationSize();\n+        verify(federatorSupportMock, times(1)).getRetiringFederationSize();\n+    }\n+\n+    private Federation createFederation(\n+        List<FederationMember> members,\n+        boolean isErp\n+    ) {\n+        if (isErp) {\n+            return new ErpFederation(\n+                members,\n+                creationTime,\n+                0L,\n+                regtestParams,\n+                bridgeConstants.getErpFedPubKeysList(),\n+                bridgeConstants.getErpFedActivationDelay()\n+            );\n+        }\n+\n+        return new Federation(\n+            members,\n+            creationTime,\n+            0L,\n+            regtestParams\n+        );\n+    }\n+\n     public static List<FederationMember> getFederationMembersFromPks(int offset, Integer... pks) {\n         return Arrays.stream(pks).map(n -> new FederationMember(\n                 BtcECKey.fromPrivate(BigInteger.valueOf(n)),"
  },
  {
    "sha": "8d2ca4bbece8ba2a93af84bc82e3f3c48545fdab",
    "filename": "src/test/java/co/rsk/federate/btcreleaseclient/BtcReleaseClientTest.java",
    "status": "modified",
    "additions": 237,
    "deletions": 123,
    "changes": 360,
    "blob_url": "https://github.com/rsksmart/powpeg-node/blob/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/test/java/co/rsk/federate/btcreleaseclient/BtcReleaseClientTest.java",
    "raw_url": "https://github.com/rsksmart/powpeg-node/raw/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/test/java/co/rsk/federate/btcreleaseclient/BtcReleaseClientTest.java",
    "contents_url": "https://api.github.com/repos/rsksmart/powpeg-node/contents/src/test/java/co/rsk/federate/btcreleaseclient/BtcReleaseClientTest.java?ref=a2e762040bf12bb8a0716e6e3680b22ced3f3862",
    "patch": "@@ -49,10 +49,10 @@\n import co.rsk.federate.signing.hsm.requirements.ReleaseRequirementsEnforcerException;\n import co.rsk.federate.signing.utils.TestUtils;\n import co.rsk.net.NodeBlockProcessor;\n+import co.rsk.peg.ErpFederation;\n import co.rsk.peg.Federation;\n import co.rsk.peg.FederationMember;\n import co.rsk.peg.StateForFederator;\n-import java.io.IOException;\n import java.math.BigInteger;\n import java.time.Instant;\n import java.util.ArrayList;\n@@ -62,6 +62,7 @@\n import java.util.SortedMap;\n import java.util.TreeMap;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.stream.Collectors;\n import org.ethereum.config.Constants;\n import org.ethereum.config.blockchain.upgrades.ActivationConfig;\n import org.ethereum.core.Block;\n@@ -78,11 +79,18 @@\n import org.mockito.ArgumentMatchers;\n import org.mockito.Mockito;\n import org.mockito.invocation.InvocationOnMock;\n+import org.spongycastle.util.encoders.Hex;\n \n public class BtcReleaseClientTest {\n     private NetworkParameters params;\n     private BridgeConstants bridgeConstants;\n \n+    private static final List<BtcECKey> erpFedKeys = Arrays.stream(new String[]{\n+        \"03b9fc46657cf72a1afa007ecf431de1cd27ff5cc8829fa625b66ca47b967e6b24\",\n+        \"029cecea902067992d52c38b28bf0bb2345bda9b21eca76b16a17c477a64e43301\",\n+        \"03284178e5fbcc63c54c3b38e3ef88adf2da6c526313650041b0ef955763634ebd\",\n+    }).map(hex -> BtcECKey.fromPublicOnly(Hex.decode(hex))).collect(Collectors.toList());\n+\n     @Before\n     public void setup() {\n         params = RegTestParams.get();\n@@ -96,10 +104,10 @@ public void if_start_not_called_rsk_blockchain_not_listened() {\n         Mockito.doReturn(Constants.regtest()).when(fedNodeSystemProperties).getNetworkConstants();\n \n         new BtcReleaseClient(\n-                ethereum,\n-                mock(FederatorSupport.class),\n-                fedNodeSystemProperties,\n-                mock(NodeBlockProcessor.class)\n+            ethereum,\n+            mock(FederatorSupport.class),\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n         );\n \n         Mockito.verify(ethereum, Mockito.never()).addListener(ArgumentMatchers.any(EthereumListener.class));\n@@ -112,10 +120,10 @@ public void when_start_called_rsk_blockchain_is_listened() {\n         Mockito.doReturn(Constants.regtest()).when(fedNodeSystemProperties).getNetworkConstants();\n \n         BtcReleaseClient btcReleaseClient = new BtcReleaseClient(\n-                ethereum,\n-                mock(FederatorSupport.class),\n-                fedNodeSystemProperties,\n-                mock(NodeBlockProcessor.class)\n+            ethereum,\n+            mock(FederatorSupport.class),\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n         );\n \n         Federation fed1 = TestUtils.createFederation(params, 1);\n@@ -134,10 +142,10 @@ public void if_stop_called_with_just_one_federation_rsk_blockchain_is_still_list\n         Mockito.doReturn(Constants.regtest()).when(fedNodeSystemProperties).getNetworkConstants();\n \n         BtcReleaseClient btcReleaseClient = new BtcReleaseClient(\n-                ethereum,\n-                mock(FederatorSupport.class),\n-                fedNodeSystemProperties,\n-                mock(NodeBlockProcessor.class)\n+            ethereum,\n+            mock(FederatorSupport.class),\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n         );\n \n         Federation fed1 = TestUtils.createFederation(params, 1);\n@@ -159,10 +167,10 @@ public void if_stop_called_with_federations_rsk_blockchain_is_not_listened() {\n         Mockito.doReturn(Constants.regtest()).when(fedNodeSystemProperties).getNetworkConstants();\n \n         BtcReleaseClient btcReleaseClient = new BtcReleaseClient(\n-                ethereum,\n-                mock(FederatorSupport.class),\n-                fedNodeSystemProperties,\n-                mock(NodeBlockProcessor.class)\n+            ethereum,\n+            mock(FederatorSupport.class),\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n         );\n \n         Federation fed1 = TestUtils.createFederation(params, 1);\n@@ -211,10 +219,10 @@ public void processReleases_ok() throws Exception {\n             .thenReturn(messageBuilder);\n \n         BtcReleaseClient client = new BtcReleaseClient(\n-                mock(Ethereum.class),\n-                mock(FederatorSupport.class),\n-                fedNodeSystemProperties,\n-                mock(NodeBlockProcessor.class)\n+            mock(Ethereum.class),\n+            mock(FederatorSupport.class),\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n         );\n \n         Keccak256 rskTxHash = Keccak256.ZERO_HASH;\n@@ -301,7 +309,7 @@ public void onBestBlock_catch_exception_add_signature() throws Exception {\n         Mockito.doReturn(Constants.regtest()).when(fedNodeSystemProperties).getNetworkConstants();\n \n         SignerMessageBuilderFactory signerMessageBuilderFactory = new SignerMessageBuilderFactory(\n-                mock(ReceiptStore.class)\n+            mock(ReceiptStore.class)\n         );\n \n         BlockStore blockStore = mock(BlockStore.class);\n@@ -336,10 +344,10 @@ public void onBestBlock_catch_exception_add_signature() throws Exception {\n         when(storageSynchronizer.isSynced()).thenReturn(true);\n \n         BtcReleaseClient btcReleaseClient = new BtcReleaseClient(\n-                ethereum,\n-                federatorSupport,\n-                fedNodeSystemProperties,\n-                mock(NodeBlockProcessor.class)\n+            ethereum,\n+            federatorSupport,\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n         );\n \n \n@@ -363,7 +371,7 @@ public void onBestBlock_catch_exception_add_signature() throws Exception {\n     }\n \n     @Test\n-    public void onBestBlock_return_when_node_is_syncing() throws Exception {\n+    public void onBestBlock_return_when_node_is_syncing() {\n         // Arrange\n         Federation federation = TestUtils.createFederation(params, 1);\n \n@@ -384,10 +392,10 @@ public void onBestBlock_return_when_node_is_syncing() throws Exception {\n         when(nodeBlockProcessor.hasBetterBlockToSync()).thenReturn(true);\n \n         BtcReleaseClient btcReleaseClient = new BtcReleaseClient(\n-                ethereum,\n-                federatorSupport,\n-                fedNodeSystemProperties,\n-                nodeBlockProcessor\n+            ethereum,\n+            federatorSupport,\n+            fedNodeSystemProperties,\n+            nodeBlockProcessor\n         );\n         btcReleaseClient.start(federation);\n \n@@ -399,7 +407,7 @@ public void onBestBlock_return_when_node_is_syncing() throws Exception {\n     }\n \n     @Test\n-    public void onBlock_return_when_node_is_syncing() throws Exception {\n+    public void onBlock_return_when_node_is_syncing() {\n         // Arrange\n         Federation federation = TestUtils.createFederation(params, 1);\n \n@@ -420,10 +428,10 @@ public void onBlock_return_when_node_is_syncing() throws Exception {\n         when(nodeBlockProcessor.hasBetterBlockToSync()).thenReturn(true);\n \n         BtcReleaseClient btcReleaseClient = new BtcReleaseClient(\n-                ethereum,\n-                federatorSupport,\n-                fedNodeSystemProperties,\n-                nodeBlockProcessor\n+            ethereum,\n+            federatorSupport,\n+            fedNodeSystemProperties,\n+            nodeBlockProcessor\n         );\n         btcReleaseClient.start(federation);\n \n@@ -449,33 +457,50 @@ public void validateTxCanBeSigned_ok() throws Exception {\n         TransactionInput releaseInput = TestUtils.createTransactionInput(params, releaseTx, federation);\n         releaseTx.addInput(releaseInput);\n \n-        FedNodeSystemProperties fedNodeSystemProperties = mock(FedNodeSystemProperties.class);\n-        when(fedNodeSystemProperties.getNetworkConstants()).thenReturn(Constants.regtest());\n-\n         BtcECKey fed1Key = federation.getBtcPublicKeys().get(0);\n         ECPublicKey signerPublicKey = new ECPublicKey(fed1Key.getPubKey());\n-        ECDSASigner signer = mock(ECDSASigner.class);\n-        Mockito.doReturn(signerPublicKey).when(signer).getPublicKey(ArgumentMatchers.any(KeyId.class));\n \n-        BtcReleaseClient client = new BtcReleaseClient(\n-                mock(Ethereum.class),\n-                mock(FederatorSupport.class),\n-                fedNodeSystemProperties,\n-                mock(NodeBlockProcessor.class)\n+        test_validateTxCanBeSigned(federation, releaseTx, signerPublicKey);\n+    }\n+\n+    @Test\n+    public void validateTxCanBeSigned_fast_bridge_ok() throws Exception {\n+        Federation federation = TestUtils.createFederation(params, 1);\n+\n+        // Create fast bridge redeem script\n+        Script fastBridgeRedeemScript = FastBridgeRedeemScriptParser.createMultiSigFastBridgeRedeemScript(\n+            federation.getStandardRedeemScript(),\n+            Sha256Hash.wrap(TestUtils.createHash(1).getBytes())\n         );\n-        client.setup(\n-            signer,\n-            mock(ActivationConfig.class),\n-            mock(SignerMessageBuilderFactory.class),\n-            mock(ReleaseCreationInformationGetter.class),\n-            mock(ReleaseRequirementsEnforcer.class),\n-            mock(BtcReleaseClientStorageAccessor.class),\n-            mock(BtcReleaseClientStorageSynchronizer.class)\n+\n+        // Create a tx from the Fed to a random btc address\n+        BtcTransaction releaseTx = createReleaseTxAndAddInput(federation, fastBridgeRedeemScript);\n+\n+        BtcECKey fed1Key = federation.getBtcPublicKeys().get(0);\n+        ECPublicKey signerPublicKey = new ECPublicKey(fed1Key.getPubKey());\n+\n+        test_validateTxCanBeSigned(federation, releaseTx, signerPublicKey);\n+    }\n+\n+    @Test\n+    public void validateTxCanBeSigned_erp_fed_ok() throws Exception {\n+        Federation federation = TestUtils.createFederation(params, 3);\n+        ErpFederation erpFederation = new ErpFederation(\n+            federation.getMembers(),\n+            federation.getCreationTime(),\n+            federation.getCreationBlockNumber(),\n+            params,\n+            erpFedKeys,\n+            5063\n         );\n-        client.start(federation);\n \n-        // Act\n-        client.validateTxCanBeSigned(releaseTx);\n+        // Create a tx from the Fed to a random btc address\n+        BtcTransaction releaseTx = createReleaseTxAndAddInput(federation);\n+\n+        BtcECKey fed1Key = erpFederation.getBtcPublicKeys().get(0);\n+        ECPublicKey signerPublicKey = new ECPublicKey(fed1Key.getPubKey());\n+\n+        test_validateTxCanBeSigned(erpFederation, releaseTx, signerPublicKey);\n     }\n \n     @Test(expected = FederatorAlreadySignedException.class)\n@@ -484,10 +509,10 @@ public void validateTxCanBeSigned_federatorAlreadySigned() throws Exception {\n         BtcECKey federator1PrivKey = new BtcECKey();\n         BtcECKey federator2PrivKey = new BtcECKey();\n         Federation federation = new Federation(\n-                FederationMember.getFederationMembersFromKeys(Arrays.asList(federator1PrivKey, federator2PrivKey)),\n-                Instant.now(),\n-                0,\n-                params\n+            FederationMember.getFederationMembersFromKeys(Arrays.asList(federator1PrivKey, federator2PrivKey)),\n+            Instant.now(),\n+            0,\n+            params\n         );\n \n         // Create a tx from the Fed to a random btc address\n@@ -518,10 +543,10 @@ public void validateTxCanBeSigned_federatorAlreadySigned() throws Exception {\n         Mockito.doReturn(signerPublicKey).when(signer).getPublicKey(ArgumentMatchers.any(KeyId.class));\n \n         BtcReleaseClient client = new BtcReleaseClient(\n-                mock(Ethereum.class),\n-                mock(FederatorSupport.class),\n-                fedNodeSystemProperties,\n-                mock(NodeBlockProcessor.class)\n+            mock(Ethereum.class),\n+            mock(FederatorSupport.class),\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n         );\n         client.setup(\n             signer,\n@@ -557,10 +582,10 @@ public void validateTxCanBeSigned_federationCantSign() throws Exception {\n         Mockito.doReturn(signerPublicKey).when(signer).getPublicKey(ArgumentMatchers.any(KeyId.class));\n \n         BtcReleaseClient client = new BtcReleaseClient(\n-                mock(Ethereum.class),\n-                mock(FederatorSupport.class),\n-                fedNodeSystemProperties,\n-                mock(NodeBlockProcessor.class)\n+            mock(Ethereum.class),\n+            mock(FederatorSupport.class),\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n         );\n         client.setup(\n             signer,\n@@ -582,10 +607,10 @@ public void removeSignaturesFromTransaction() throws Exception {\n         BtcECKey federator1PrivKey = new BtcECKey();\n         BtcECKey federator2PrivKey = new BtcECKey();\n         Federation federation = new Federation(\n-                FederationMember.getFederationMembersFromKeys(Arrays.asList(federator1PrivKey, federator2PrivKey)),\n-                Instant.now(),\n-                0,\n-                params\n+            FederationMember.getFederationMembersFromKeys(Arrays.asList(federator1PrivKey, federator2PrivKey)),\n+            Instant.now(),\n+            0,\n+            params\n         );\n \n         // Create a tx from the Fed to a random btc address\n@@ -614,10 +639,10 @@ public void removeSignaturesFromTransaction() throws Exception {\n         when(fedNodeSystemProperties.getNetworkConstants()).thenReturn(Constants.regtest());\n \n         BtcReleaseClient client = new BtcReleaseClient(\n-                mock(Ethereum.class),\n-                mock(FederatorSupport.class),\n-                fedNodeSystemProperties,\n-                mock(NodeBlockProcessor.class)\n+            mock(Ethereum.class),\n+            mock(FederatorSupport.class),\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n         );\n         client.setup(\n             mock(ECDSAHSMSigner.class),\n@@ -652,6 +677,34 @@ public void getRedeemScriptFromInput_standard_redeem_script() {\n         test_getRedeemScriptFromInput(false);\n     }\n \n+    @Test\n+    public void extractStandardRedeemScript_fast_bridge_redeem_script() {\n+        Federation federation = TestUtils.createFederation(params, 1);\n+        Script fastBridgeRedeemScript =\n+            FastBridgeRedeemScriptParser.createMultiSigFastBridgeRedeemScript(\n+                federation.getRedeemScript(),\n+                Sha256Hash.of(TestUtils.createHash(1).getBytes())\n+            );\n+\n+        test_extractStandardRedeemScript(federation.getRedeemScript(), fastBridgeRedeemScript);\n+    }\n+\n+    @Test\n+    public void extractStandardRedeemScript_erp_redeem_script() {\n+        Federation federation = TestUtils.createFederation(params, 1);\n+\n+        ErpFederation erpFederation = new ErpFederation(\n+            federation.getMembers(),\n+            federation.getCreationTime(),\n+            federation.getCreationBlockNumber(),\n+            params,\n+            erpFedKeys,\n+            5063\n+        );\n+\n+        test_extractStandardRedeemScript(federation.getRedeemScript(), erpFederation.getRedeemScript());\n+    }\n+\n     @Test\n     public void sets_rsk_tx_hash_with_file_data()\n         throws BtcReleaseClientException, SignerException,\n@@ -668,10 +721,113 @@ public void sets_default_rsk_tx_hash_if_no_file_data()\n         testUsageOfStorageWhenSigning(false);\n     }\n \n+    private void test_validateTxCanBeSigned(\n+        Federation federation,\n+        BtcTransaction releaseTx,\n+        ECPublicKey signerPublicKey\n+    ) throws Exception {\n+        FedNodeSystemProperties fedNodeSystemProperties = mock(FedNodeSystemProperties.class);\n+        when(fedNodeSystemProperties.getNetworkConstants()).thenReturn(Constants.regtest());\n+\n+        ECDSASigner signer = mock(ECDSASigner.class);\n+        doReturn(signerPublicKey).when(signer).getPublicKey(any(KeyId.class));\n+\n+        BtcReleaseClient client = new BtcReleaseClient(\n+            mock(Ethereum.class),\n+            mock(FederatorSupport.class),\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n+        );\n+        client.setup(\n+            signer,\n+            mock(ActivationConfig.class),\n+            mock(SignerMessageBuilderFactory.class),\n+            mock(ReleaseCreationInformationGetter.class),\n+            mock(ReleaseRequirementsEnforcer.class),\n+            mock(BtcReleaseClientStorageAccessor.class),\n+            mock(BtcReleaseClientStorageSynchronizer.class)\n+        );\n+        client.start(federation);\n+\n+        // Act\n+        client.validateTxCanBeSigned(releaseTx);\n+    }\n+\n+    private void test_extractStandardRedeemScript(\n+        Script expectedRedeemScript,\n+        Script redeemScriptToExtract)\n+    {\n+        FedNodeSystemProperties fedNodeSystemProperties = mock(FedNodeSystemProperties.class);\n+        when(fedNodeSystemProperties.getNetworkConstants()).thenReturn(Constants.regtest());\n+\n+        BtcReleaseClient client = new BtcReleaseClient(\n+            mock(Ethereum.class),\n+            mock(FederatorSupport.class),\n+            fedNodeSystemProperties,\n+            mock(NodeBlockProcessor.class)\n+        );\n+\n+        Assert.assertEquals(\n+            expectedRedeemScript,\n+            client.extractStandardRedeemScript(redeemScriptToExtract)\n+        );\n+    }\n+\n+    private void test_getRedeemScriptFromInput(boolean isFastBridgeRedeemScript) {\n+        BtcReleaseClient client = createBtcClient();\n+\n+        BtcECKey ecKey1 = BtcECKey.fromPrivate(BigInteger.valueOf(100));\n+        BtcECKey ecKey2 = BtcECKey.fromPrivate(BigInteger.valueOf(200));\n+        BtcECKey ecKey3 = BtcECKey.fromPrivate(BigInteger.valueOf(300));\n+\n+        List<BtcECKey> btcECKeys = Arrays.asList(ecKey1, ecKey2, ecKey3);\n+        Federation federation = createFederation(btcECKeys);\n+        Script federationRedeemScript = federation.getRedeemScript();\n+        Script inputScript;\n+\n+        if (isFastBridgeRedeemScript) {\n+            federationRedeemScript = FastBridgeRedeemScriptParser.createMultiSigFastBridgeRedeemScript(\n+                federationRedeemScript,\n+                Sha256Hash.of(new byte[]{1})\n+            );\n+\n+        }\n+        inputScript = federation.getP2SHScript().createEmptyInputScript(\n+            null,\n+            federationRedeemScript\n+        );\n+\n+        BtcTransaction spendTx = new BtcTransaction(params);\n+        spendTx.addInput(Sha256Hash.ZERO_HASH, 0, inputScript);\n+        spendTx.addOutput(Coin.valueOf(190_000_000), federation.getAddress());\n+\n+        Assert.assertEquals(\n+            federationRedeemScript,\n+            client.getRedeemScriptFromInput(spendTx.getInput(0))\n+        );\n+    }\n+\n+    private BtcTransaction createReleaseTxAndAddInput(Federation federation, Script redeemScript) {\n+        BtcTransaction releaseTx = new BtcTransaction(params);\n+        TransactionInput releaseInput = TestUtils.createTransactionInput(\n+            params,\n+            releaseTx,\n+            federation,\n+            redeemScript\n+        );\n+        releaseTx.addInput(releaseInput);\n+\n+        return releaseTx;\n+    }\n+\n+    private BtcTransaction createReleaseTxAndAddInput(Federation federation) {\n+        return createReleaseTxAndAddInput(federation, null);\n+    }\n+\n     private void testUsageOfStorageWhenSigning(boolean shouldHaveDataInFile)\n-    throws BtcReleaseClientException, SignerException,\n-    HSMReleaseCreationInformationException, ReleaseRequirementsEnforcerException,\n-    HSMUnsupportedVersionException, SignerMessageBuilderException {\n+        throws BtcReleaseClientException, SignerException,\n+        HSMReleaseCreationInformationException, ReleaseRequirementsEnforcerException,\n+        HSMUnsupportedVersionException, SignerMessageBuilderException {\n         FedNodeSystemProperties fedNodeSystemProperties = mock(FedNodeSystemProperties.class);\n         when(fedNodeSystemProperties.getNetworkConstants()).thenReturn(Constants.regtest());\n \n@@ -778,46 +934,6 @@ private void testUsageOfStorageWhenSigning(boolean shouldHaveDataInFile)\n         verify(federatorSupport).addSignature(any(), eq(otherRskTxHash.getBytes()));\n     }\n \n-    private void test_getRedeemScriptFromInput(boolean isFastBridgeRedeemScript) {\n-        BtcReleaseClient client = createBtcClient();\n-\n-        BtcECKey ecKey1 = BtcECKey.fromPrivate(BigInteger.valueOf(100));\n-        BtcECKey ecKey2 = BtcECKey.fromPrivate(BigInteger.valueOf(200));\n-        BtcECKey ecKey3 = BtcECKey.fromPrivate(BigInteger.valueOf(300));\n-\n-        List<BtcECKey> btcECKeys = Arrays.asList(ecKey1, ecKey2, ecKey3);\n-        Federation federation = createFederation(btcECKeys);\n-        Script federationRedeemScript = federation.getRedeemScript();\n-        Script inputScript;\n-\n-        if (isFastBridgeRedeemScript) {\n-            federationRedeemScript = FastBridgeRedeemScriptParser.createMultiSigFastBridgeRedeemScript(\n-                federationRedeemScript,\n-                Sha256Hash.of(new byte[]{1})\n-            );\n-\n-            inputScript = federation.getP2SHScript().createEmptyInputScript(\n-                null,\n-                federationRedeemScript\n-            );\n-\n-        } else {\n-            inputScript = federation.getP2SHScript().createEmptyInputScript(\n-                null,\n-                federationRedeemScript\n-            );\n-        }\n-\n-        BtcTransaction spendTx = new BtcTransaction(params);\n-        spendTx.addInput(Sha256Hash.ZERO_HASH, 0, inputScript);\n-        spendTx.addOutput(Coin.valueOf(190_000_000), federation.getAddress());\n-\n-        Assert.assertEquals(\n-            federationRedeemScript,\n-            client.getRedeemScriptFromInput(spendTx.getInput(0))\n-        );\n-    }\n-\n     private BtcReleaseClient createBtcClient() {\n         FedNodeSystemProperties fedNodeSystemProperties = mock(FedNodeSystemProperties.class);\n         when(fedNodeSystemProperties.getNetworkConstants()).thenReturn(Constants.regtest());\n@@ -843,6 +959,4 @@ private Federation createFederation(List<BtcECKey> btcECKeyList) {\n             params\n         );\n     }\n-\n-\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2158efc81cbac51720eca8d377a5876b29feb834",
    "filename": "src/test/java/co/rsk/federate/signing/utils/TestUtils.java",
    "status": "modified",
    "additions": 36,
    "deletions": 8,
    "changes": 44,
    "blob_url": "https://github.com/rsksmart/powpeg-node/blob/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/test/java/co/rsk/federate/signing/utils/TestUtils.java",
    "raw_url": "https://github.com/rsksmart/powpeg-node/raw/a2e762040bf12bb8a0716e6e3680b22ced3f3862/src/test/java/co/rsk/federate/signing/utils/TestUtils.java",
    "contents_url": "https://api.github.com/repos/rsksmart/powpeg-node/contents/src/test/java/co/rsk/federate/signing/utils/TestUtils.java?ref=a2e762040bf12bb8a0716e6e3680b22ced3f3862",
    "patch": "@@ -112,17 +112,21 @@ public static Block mockBlock(long number, Keccak256 hash, long difficultyValue)\n \n     public static Federation createFederation(NetworkParameters params, int amountOfMembers) {\n         List<BtcECKey> keys = Stream.generate(BtcECKey::new).limit(amountOfMembers).collect(Collectors.toList());\n-        Federation federation = new Federation(\n+\n+        return new Federation(\n                 FederationMember.getFederationMembersFromKeys(keys),\n                 Instant.now(),\n                 0,\n                 params\n         );\n-\n-        return federation;\n     }\n \n-    public static TransactionInput createTransactionInput(NetworkParameters params, BtcTransaction tx, Federation federation) {\n+    public static TransactionInput createTransactionInput(\n+        NetworkParameters params,\n+        BtcTransaction tx,\n+        Federation federation,\n+        Script redeemScript\n+    ) {\n         TransactionInput txInput = new TransactionInput(\n                 params,\n                 tx,\n@@ -131,12 +135,20 @@ public static TransactionInput createTransactionInput(NetworkParameters params,\n         );\n \n         // Create script to be signed by federation members\n-        Script inputScript = createBaseInputScriptThatSpendsFromTheFederation(federation);\n+        Script inputScript = createBaseInputScriptThatSpendsFromTheFederation(federation, redeemScript);\n         txInput.setScriptSig(inputScript);\n \n         return txInput;\n     }\n \n+    public static TransactionInput createTransactionInput(\n+        NetworkParameters params,\n+        BtcTransaction tx,\n+        Federation federation\n+    ) {\n+        return createTransactionInput(params, tx, federation, null);\n+    }\n+\n     public static BtcTransaction createBtcTransaction(NetworkParameters params, Federation federation) {\n         // Build prev btc tx\n         BtcTransaction prevTx = new BtcTransaction(params);\n@@ -152,12 +164,28 @@ public static BtcTransaction createBtcTransaction(NetworkParameters params, Fede\n         return btcTx;\n     }\n \n-    public static Script createBaseInputScriptThatSpendsFromTheFederation(Federation federation) {\n+    public static Script createBaseInputScriptThatSpendsFromTheFederation(\n+        Federation federation\n+    ) {\n+        return createBaseInputScriptThatSpendsFromTheFederation(federation, null);\n+    }\n+\n+    public static Script createBaseInputScriptThatSpendsFromTheFederation(\n+        Federation federation,\n+        Script customRedeemScript\n+    ) {\n         Script scriptPubKey = federation.getP2SHScript();\n         Script redeemScript = federation.getRedeemScript();\n         RedeemData redeemData = RedeemData.of(federation.getBtcPublicKeys(), redeemScript);\n-        Script inputScript = scriptPubKey.createEmptyInputScript(redeemData.keys.get(0), redeemData.redeemScript);\n \n-        return inputScript;\n+        if (customRedeemScript == null) {\n+            return scriptPubKey.createEmptyInputScript(\n+                redeemData.keys.get(0),\n+                redeemData.redeemScript\n+            );\n+        }\n+\n+        // customRedeemScript might not be actually custom, but just in case, use the provided redeemScript\n+        return scriptPubKey.createEmptyInputScript(redeemData.keys.get(0), customRedeemScript);\n     }\n }"
  }
]
