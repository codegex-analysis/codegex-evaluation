[
  {
    "sha": "f86fa11e9e5ed3fe3c9476d283aa7166d691a397",
    "filename": "src/com/zoerAleksandr/lesson5/Main.java",
    "status": "added",
    "additions": 97,
    "deletions": 0,
    "changes": 97,
    "blob_url": "https://github.com/zoerAleksandr/GeekBrainsLesson/blob/00a5996dcfb2e3e4b172ec32d7692646a90fb9ea/src/com/zoerAleksandr/lesson5/Main.java",
    "raw_url": "https://github.com/zoerAleksandr/GeekBrainsLesson/raw/00a5996dcfb2e3e4b172ec32d7692646a90fb9ea/src/com/zoerAleksandr/lesson5/Main.java",
    "contents_url": "https://api.github.com/repos/zoerAleksandr/GeekBrainsLesson/contents/src/com/zoerAleksandr/lesson5/Main.java?ref=00a5996dcfb2e3e4b172ec32d7692646a90fb9ea",
    "patch": "@@ -0,0 +1,97 @@\n+package com.zoerAleksandr.lesson5;\n+\n+/**\n+ * Project GeekBrainsLesson\n+ *\n+ * @Author Zoer Aleksandr\n+ * Created 17.03.2021 15:45\n+ */\n+class Main {\n+    public static void main(String[] args) {\n+        Animal[] animals = {\n+                new Dogs(\"Барбос\", 10, 2),\n+                new Dogs(\"Пегас\", 9, 3),\n+                new Cats(\"Пушок\", 2, 0),\n+                new Cats(\"Васька\", 3, 0),\n+        };\n+        System.out.printf(\"Всего животных - %d \\nИз них собак - %d, кошек - %d.\\n\\n\", Animal.getCountAnimal(),\n+                Dogs.getCountDogs(), Cats.getCountCats());\n+        for (Animal animal : animals) {\n+            animal.run(10);\n+            animal.swim(3);\n+        }\n+    }\n+}\n+\n+class Animal {\n+    private static int countAnimal;\n+    String name;\n+    private int maxRun;\n+    private int maxSwim;\n+    String type;\n+\n+    Animal(String name, int maxRun, int maxSwim) {\n+        this.name = name;\n+        this.maxRun = maxRun;\n+        this.maxSwim = maxSwim;\n+        countAnimal++;\n+    }\n+\n+    void run(int distance) {\n+        if (this.maxRun >= distance) {\n+            System.out.printf(\"%s %s пробежал дистанцию в %d км!\\n\", this.type, this.name, distance);\n+        } else {\n+            System.out.printf(\"%s %s не смог пробежать дистанцию в %d км :(\" +\n+                    \"\" + \"Он остановился на %d км.\\n\", this.type, this.name, distance, this.maxRun);\n+        }\n+    }\n+\n+    protected void swim(int distance) {\n+        if (this.maxSwim >= distance) {\n+            System.out.printf(\"%s %s проплыл дистанцию в %d км!\\n\\n\", this.type, this.name, distance);\n+        } else {\n+            System.out.printf(\"%s %s не смог проплыть дистанцию в %d км :(\" +\n+                    \" Он остановился на %d км.\\n\\n\", this.type, this.name, distance, this.maxSwim);\n+        }\n+    }\n+\n+    static int getCountAnimal() {\n+        return countAnimal;\n+    }\n+}\n+\n+class Dogs extends Animal {\n+\n+    private static int countDogs;\n+\n+\n+    Dogs(String name, int maxRun, int maxSwim) {\n+        super(name, maxRun, maxSwim);\n+        this.type = \"Собака\";\n+        countDogs++;\n+    }\n+\n+    static int getCountDogs() {\n+        return countDogs;\n+    }\n+}\n+\n+class Cats extends Animal {\n+\n+    private static int countCats;\n+\n+    Cats(String name, int maxRun, int maxSwim) {\n+        super(name, maxRun, maxSwim);\n+        this.type = \"Кот\";\n+        countCats++;\n+    }\n+\n+    @Override\n+    protected void swim(int distance) {\n+        System.out.printf(\"%s %s не вышел на старт! Коты не любят плавать.\\n\\n\", this.type, this.name);\n+    }\n+\n+    static int getCountCats() {\n+        return countCats;\n+    }\n+}"
  }
]
