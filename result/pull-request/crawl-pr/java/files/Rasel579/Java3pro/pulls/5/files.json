[
  {
    "sha": "e96534fb27b68192f27f985d3879e173ec77adb8",
    "filename": ".idea/uiDesigner.xml",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/.idea/uiDesigner.xml",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/.idea/uiDesigner.xml",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/.idea/uiDesigner.xml?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,124 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"Palette2\">\n+    <group name=\"Swing\">\n+      <item class=\"com.intellij.uiDesigner.HSpacer\" tooltip-text=\"Horizontal Spacer\" icon=\"/com/intellij/uiDesigner/icons/hspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"com.intellij.uiDesigner.VSpacer\" tooltip-text=\"Vertical Spacer\" icon=\"/com/intellij/uiDesigner/icons/vspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+      <item class=\"javax.swing.JPanel\" icon=\"/com/intellij/uiDesigner/icons/panel.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollPane\" icon=\"/com/intellij/uiDesigner/icons/scrollPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JButton\" icon=\"/com/intellij/uiDesigner/icons/button.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Button\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JRadioButton\" icon=\"/com/intellij/uiDesigner/icons/radioButton.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"RadioButton\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JCheckBox\" icon=\"/com/intellij/uiDesigner/icons/checkBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"CheckBox\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JLabel\" icon=\"/com/intellij/uiDesigner/icons/label.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Label\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JTextField\" icon=\"/com/intellij/uiDesigner/icons/textField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JPasswordField\" icon=\"/com/intellij/uiDesigner/icons/passwordField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JFormattedTextField\" icon=\"/com/intellij/uiDesigner/icons/formattedTextField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextArea\" icon=\"/com/intellij/uiDesigner/icons/textArea.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextPane\" icon=\"/com/intellij/uiDesigner/icons/textPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JEditorPane\" icon=\"/com/intellij/uiDesigner/icons/editorPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JComboBox\" icon=\"/com/intellij/uiDesigner/icons/comboBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JTable\" icon=\"/com/intellij/uiDesigner/icons/table.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JList\" icon=\"/com/intellij/uiDesigner/icons/list.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"2\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTree\" icon=\"/com/intellij/uiDesigner/icons/tree.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTabbedPane\" icon=\"/com/intellij/uiDesigner/icons/tabbedPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSplitPane\" icon=\"/com/intellij/uiDesigner/icons/splitPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSpinner\" icon=\"/com/intellij/uiDesigner/icons/spinner.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSlider\" icon=\"/com/intellij/uiDesigner/icons/slider.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSeparator\" icon=\"/com/intellij/uiDesigner/icons/separator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JProgressBar\" icon=\"/com/intellij/uiDesigner/icons/progressbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JToolBar\" icon=\"/com/intellij/uiDesigner/icons/toolbar.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\">\n+          <preferred-size width=\"-1\" height=\"20\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JToolBar$Separator\" icon=\"/com/intellij/uiDesigner/icons/toolbarSeparator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollBar\" icon=\"/com/intellij/uiDesigner/icons/scrollbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"0\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+    </group>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "94a25f7f4cb416c083d265558da75d457237d671",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/.idea/vcs.xml",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/.idea/vcs.xml?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "4cafb62467ce652b7aa4a33b3f99bfb7509c191a",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/pom.xml",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/pom.xml",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/pom.xml?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -12,5 +12,31 @@\n         <maven.compiler.source>15</maven.compiler.source>\n         <maven.compiler.target>15</maven.compiler.target>\n     </properties>\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter</artifactId>\n+            <version>5.6.2</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.testng</groupId>\n+            <artifactId>testng</artifactId>\n+            <version>RELEASE</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.testng</groupId>\n+            <artifactId>testng</artifactId>\n+            <version>RELEASE</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.testng</groupId>\n+            <artifactId>testng</artifactId>\n+            <version>RELEASE</version>\n+            <scope>compile</scope>\n+        </dependency>\n+    </dependencies>\n \n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "217a079507ab82fa0b9467df06eb7bfd5820b800",
    "filename": "src/main/java/lesson1_generics/Apple.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson1_generics/Apple.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson1_generics/Apple.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson1_generics/Apple.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,8 @@\n+package lesson1_generics;\n+\n+public class Apple extends  Fruit {\n+    private final float weight = 1.0f;\n+    Apple(){\n+        this.setWeight(weight);\n+    }\n+}"
  },
  {
    "sha": "2d8c36eb447bdcd4cba820eede15261b3e930dae",
    "filename": "src/main/java/lesson1_generics/Box.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson1_generics/Box.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson1_generics/Box.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson1_generics/Box.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,60 @@\n+package lesson1_generics;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+\n+public class Box<E extends Fruit> {\n+    private ArrayList <E> fruits = new ArrayList<>(this.getCapacity());\n+    private int capacity;\n+    Box(int capacity){\n+        this.capacity = capacity;\n+    }\n+\n+    public int getCapacity() {\n+        return capacity;\n+    }\n+\n+    public void add(E fruits){\n+        if (this.fruits.size() < capacity && !this.fruits.contains(fruits)) {\n+            this.fruits.add(fruits);\n+        }\n+    }\n+\n+    public void show(){\n+        System.out.println(this.fruits);\n+    }\n+\n+    public float getWeight(){\n+        float weight = 0.0f;\n+        for (E fruit : fruits) {\n+            weight+= fruit.getWeight();\n+        }\n+        System.out.println(weight);\n+        return weight;\n+    }\n+\n+    public boolean compare(Box<?> box){\n+      return Math.abs(this.getWeight() - box.getWeight()) < 0.001;\n+    };\n+\n+    public ArrayList<E> getFruits() {\n+        return fruits;\n+    }\n+\n+    public void remove (E fruit){\n+        this.fruits.remove(fruit);\n+    }\n+\n+    public void getOut(Box<E> box){\n+        int size = box.getCapacity();\n+        for (E fruit : fruits) {\n+              if (size > 0) {\n+                  box.getFruits().add(fruit);\n+                  size--;\n+              }\n+            }\n+        for (E fruit : box.getFruits()) {\n+            this.remove(fruit);\n+            }\n+        }\n+    }"
  },
  {
    "sha": "e3789ac0a12a828879786f1cd895a6ade82cb9b6",
    "filename": "src/main/java/lesson1_generics/Fruit.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson1_generics/Fruit.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson1_generics/Fruit.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson1_generics/Fruit.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,16 @@\n+package lesson1_generics;\n+\n+public class Fruit {\n+    private float weight;\n+\n+    public Fruit() {\n+    }\n+\n+    public void setWeight(float weight) {\n+        this.weight = weight;\n+    }\n+\n+    public float getWeight() {\n+        return weight;\n+    }\n+}"
  },
  {
    "sha": "236f65c33a3ac1862e28ea13366638e83e40d4b3",
    "filename": "src/main/java/lesson1_generics/Main.java",
    "status": "modified",
    "additions": 49,
    "deletions": 9,
    "changes": 58,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson1_generics/Main.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson1_generics/Main.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson1_generics/Main.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -1,26 +1,37 @@\n package lesson1_generics;\n \n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n public class Main {\n \n \n-    private static <T> void replace(T [] arr, int i, int j) {\n-        T temp = arr [i];\n+    private static <T> void replace(T[] arr, int i, int j) {\n+        T temp =  arr[i];\n         arr[i] = arr[j];\n-        arr[j] = temp;\n+        arr[j]  = temp;\n+    }\n+\n+    private static <T> ArrayList<T> convertToArrayList(T [] arr1) {\n+         ArrayList<T> arr = new ArrayList<T>(Arrays.asList(arr1));\n+         return arr;\n     }\n \n     public static void main(String[] args) {\n         //1. Написать метод, который меняет два элемента массива местами (массив может быть любого ссылочного типа);\n-        Integer[] arr = {3,4,5,6,3,1,3,4};\n-        for (Integer integer : arr) {\n-            System.out.print(integer);\n+        Number[] arr1 = new Number[]{1.0f ,2.0f, 4.0f, 5.0f};\n+        for (Object integer : arr1) {\n+            System.out.print(integer + \" \");\n         }\n-        replace(arr, 2, 3);\n+        replace(arr1, 2, 3);\n         System.out.println();\n-        for (Integer integer : arr) {\n-            System.out.print(integer);\n+        for (Object integer : arr1) {\n+            System.out.print(integer + \" \");\n         }\n         //2. Написать метод, который преобразует массив в ArrayList;\n+         ArrayList arrayList = convertToArrayList(arr1);\n+          System.out.println(arrayList + \" \" + arrayList.getClass());\n+\n         //3. Большая задача:\n         //Есть классы Fruit -> Apple, Orange (больше фруктов не надо);\n         //Класс Box, в который можно складывать фрукты. Коробки условно\n@@ -39,6 +50,35 @@ public static void main(String[] args) {\n         // не остается, а в другую перекидываются объекты, которые были в этой коробке;\n         //Не забываем про метод добавления фрукта в коробку.\n \n+        Apple apple = new Apple();\n+        Apple apple1 = new Apple();\n+        Apple apple2 = new Apple();\n+        Apple apple3 = new Apple();\n+        Apple apple4 = new Apple();\n+        Orange orange = new Orange();\n+        Orange orange1 = new Orange();\n+        Orange orange2 = new Orange();\n+        Box<Apple> boxApple = new Box<>(5);\n+        Box<Apple> newBoxApple = new Box<>(3);\n+        Box<Orange> newBoxOrange = new Box<>(3);\n+        Box<Orange> orangeBox = new Box<>(5);\n+        boxApple.add(apple);\n+        boxApple.add(apple1);\n+        boxApple.add(apple2);\n+        boxApple.add(apple3);\n+        boxApple.add(apple4);\n+        orangeBox.add(orange);\n+        orangeBox.add(orange1);\n+        orangeBox.add(orange2);\n+        boxApple.show();\n+        orangeBox.show();\n+        boxApple.getWeight();\n+        orangeBox.getWeight();\n+        System.out.println(boxApple.compare(orangeBox));\n+        boxApple.getOut(newBoxApple);\n+        boxApple.show();\n+        newBoxApple.show();\n+\n     }\n \n }"
  },
  {
    "sha": "285e55bffa53c1fa4305611fb4ffcae838c8086a",
    "filename": "src/main/java/lesson1_generics/Orange.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson1_generics/Orange.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson1_generics/Orange.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson1_generics/Orange.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,8 @@\n+package lesson1_generics;\n+\n+public class Orange extends  Fruit{\n+    private final float weight = 1.5f;\n+    Orange(){\n+        this.setWeight(weight);\n+    }\n+}"
  },
  {
    "sha": "3b0790b30a01bbbdfeb22570e49c146d973ca83d",
    "filename": "src/main/java/lesson4_multithreading/WaitAndNotify.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson4_multithreading/WaitAndNotify.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson4_multithreading/WaitAndNotify.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson4_multithreading/WaitAndNotify.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,71 @@\n+package lesson4_multithreading;\n+\n+public class WaitAndNotify {\n+    private  volatile char currentLetter = 'A';\n+\n+    public static  void main(String[] args) {\n+        WaitAndNotify w = new WaitAndNotify();\n+           Thread t1 = new Thread(() -> {\n+                   w.printA();\n+           });\n+           Thread t2 = new Thread(() -> {\n+                   w.printB();\n+           });\n+           Thread t3 = new Thread(() -> {\n+                   w.printC();\n+           });\n+\n+\n+\n+\n+           t1.start();\n+           t2.start();\n+           t3.start();\n+    }\n+\n+    private synchronized void printA()  {\n+            try {\n+                for (int i = 0; i < 5; i++) {\n+                    while (currentLetter != 'A'){\n+                        wait();\n+                    }\n+                    System.out.print(\"A\");\n+                    currentLetter = 'B';\n+                    notifyAll();\n+                }\n+            } catch (InterruptedException e){\n+                e.printStackTrace();\n+            }\n+    }\n+    private synchronized void printB(){\n+            try {\n+                for (int i = 0; i < 5; i++) {\n+                    while (currentLetter != 'B'){\n+                        wait();\n+                    }\n+                    System.out.print(\"B\");\n+                    currentLetter = 'C';\n+                    notifyAll();\n+                }\n+            } catch (InterruptedException e){\n+                e.printStackTrace();\n+            }\n+\n+        }\n+\n+    private synchronized void printC(){\n+            try {\n+                for (int i = 0; i < 5; i++) {\n+                    while (currentLetter != 'C'){\n+                        wait();\n+                    }\n+                    System.out.print(\"C\");\n+                    currentLetter = 'A';\n+                    notifyAll();\n+                }\n+            } catch (InterruptedException e){\n+                e.printStackTrace();\n+            }\n+\n+    }\n+}"
  },
  {
    "sha": "7b99c216290fcba92f715e1e617425ce59337275",
    "filename": "src/main/java/lesson5/Car.java",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/Car.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/Car.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson5/Car.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,68 @@\n+package lesson5;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.Semaphore;\n+\n+public class Car implements Runnable {\n+    private static int CARS_COUNT;\n+    private int competitors;\n+    private CountDownLatch cdl;\n+    private CountDownLatch finishCdl;\n+    private Semaphore smp = new Semaphore(1);\n+\n+    static {\n+        CARS_COUNT = 0;\n+    }\n+\n+    private Race race;\n+    private int speed;\n+    private String name;\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public int getSpeed() {\n+        return speed;\n+    }\n+\n+    public Car(Race race, int speed, int competitors, CountDownLatch cdl, CountDownLatch finishCdl) {\n+        this.race = race;\n+        this.cdl = cdl;\n+        this.finishCdl = finishCdl;\n+        this.competitors = competitors;\n+        this.speed = speed;\n+        CARS_COUNT++;\n+        this.name = \"Участник #\" + CARS_COUNT;\n+    }\n+\n+    @Override\n+    public void run() {\n+        try {\n+            System.out.println(this.name + \" готовится\");\n+            Thread.sleep(500 + (int) (Math.random() * 800));\n+            System.out.println(this.name + \" готов\");\n+            cdl.countDown();\n+            cdl.await();\n+\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+\n+\n+        for (int i = 0; i < race.getStages().size(); i++) {\n+            race.getStages().get(i).go(this);\n+        }\n+        finishCdl.countDown();\n+        try {\n+            smp.acquire();\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+        if (finishCdl.getCount() == competitors - 1){\n+            System.out.println(\"Выйграл \" + this.name);\n+        } else {\n+            smp.release();\n+        }\n+    }\n+}"
  },
  {
    "sha": "0789a881d8f03834555d591a0981fee6410ff7fd",
    "filename": "src/main/java/lesson5/MainClass.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/MainClass.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/MainClass.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson5/MainClass.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,40 @@\n+package lesson5;\n+//Все участники должны стартовать одновременно, несмотря на то, что на подготовку\n+// у каждого их них уходит разное время.\n+//В тоннель не может заехать одновременно больше половины участников (условность).\n+//Попробуйте все это синхронизировать.\n+//Только после того, как все завершат гонку, нужно выдать объявление об окончании.\n+//Можете корректировать классы (в т.ч. конструктор машин)\n+// и добавлять объекты классов из пакета util.concurrent.\n+\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+public class MainClass {\n+    public static final int CARS_COUNT = 4;\n+    public static CountDownLatch readyCdl = new CountDownLatch(CARS_COUNT);\n+    public static CountDownLatch finishCdl= new CountDownLatch(CARS_COUNT);\n+    public static void main(String[] args) throws InterruptedException {\n+        System.out.println(\"ВАЖНОЕ ОБЪЯВЛЕНИЕ >>> Подготовка!!!\");\n+        Race race = new Race(new Road(60), new Tunnel(CARS_COUNT), new Road(40));\n+        Car[] cars = new Car[CARS_COUNT];\n+        for (int i = 0; i < cars.length; i++) {\n+            cars[i] = new Car(race, 20 + (int) (Math.random() * 10), CARS_COUNT, readyCdl, finishCdl);\n+        }\n+        ExecutorService pool = Executors.newFixedThreadPool(CARS_COUNT);\n+        for (int i = 0; i < cars.length; i++) {\n+            pool.execute(new Thread(cars[i]));\n+\n+        }\n+        readyCdl.await();\n+        System.out.println(\"ВАЖНОЕ ОБЪЯВЛЕНИЕ >>> Гонка началась!!!\");\n+        finishCdl.await();\n+        System.out.println(\"ВАЖНОЕ ОБЪЯВЛЕНИЕ >>> Гонка закончилась!!!\");\n+        pool.shutdown();\n+    }\n+}\n+"
  },
  {
    "sha": "53902fc3a24fa4ed2638516bf580ee1d13b982c8",
    "filename": "src/main/java/lesson5/Race.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/Race.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/Race.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson5/Race.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,16 @@\n+package lesson5;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+public class Race {\n+    private ArrayList<Stage> stages;\n+\n+    public ArrayList<Stage> getStages() {\n+        return stages;\n+    }\n+\n+    public Race(Stage... stages) {\n+        this.stages = new ArrayList<>(Arrays.asList(stages));\n+    }\n+}"
  },
  {
    "sha": "b47dad23a715cc24efd908cbf6a528f60ae72875",
    "filename": "src/main/java/lesson5/Road.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/Road.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/Road.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson5/Road.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,19 @@\n+package lesson5;\n+\n+public class Road extends Stage {\n+    public Road(int length) {\n+        this.length = length;\n+        this.description = \"Дорога \" + length + \" метров\";\n+    }\n+\n+    @Override\n+    public void go(Car c) {\n+        try {\n+            System.out.println(c.getName() + \" начал этап: \" + description);\n+            Thread.sleep(length / c.getSpeed() * 1000);\n+            System.out.println(c.getName() + \" закончил этап: \" + description);\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  },
  {
    "sha": "7f16956a1019323877c84b23607fd66cdf3ed1d0",
    "filename": "src/main/java/lesson5/Stage.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/Stage.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/Stage.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson5/Stage.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,12 @@\n+package lesson5;\n+\n+public abstract class Stage {\n+    protected int length;\n+    protected String description;\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public abstract void go(Car c);\n+}"
  },
  {
    "sha": "afec1904434fb2281f33c6c3a9be1fec87ff6111",
    "filename": "src/main/java/lesson5/Tunnel.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/Tunnel.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson5/Tunnel.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson5/Tunnel.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,33 @@\n+package lesson5;\n+\n+import java.util.concurrent.Semaphore;\n+\n+public class Tunnel extends Stage {\n+    private int competitors;\n+    private Semaphore smp;\n+    public Tunnel(int competitors) {\n+        this.length = 80;\n+        this.description = \"Тоннель \" + length + \" метров\";\n+        this.competitors = competitors;\n+        smp = new Semaphore(competitors/2);\n+    }\n+\n+    @Override\n+    public void go(Car c) {\n+        try {\n+            try {\n+                smp.acquire();\n+                System.out.println(c.getName() + \" готовится к этапу(ждет): \" + description);\n+                System.out.println(c.getName() + \" начал этап: \" + description);\n+                Thread.sleep(length / c.getSpeed() * 1000);\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            } finally {\n+                System.out.println(c.getName() + \" закончил этап: \" + description);\n+                smp.release();\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  },
  {
    "sha": "80fa2d8990ea43012c2cfd508e9f08d3ccff3a53",
    "filename": "src/main/java/lesson6/TestArrays.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson6/TestArrays.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson6/TestArrays.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson6/TestArrays.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,31 @@\n+package lesson6;\n+\n+import java.util.Arrays;\n+\n+public class TestArrays {\n+    public  int[] checkElements(int[] arr){\n+        int[] newArr = new int[0];\n+        int container = 0;\n+        for (int i = 0; i < arr.length; i++) {\n+            if (arr[i] == 4){\n+                newArr = Arrays.copyOfRange(arr, ++i, arr.length );\n+                container++;\n+            }\n+        }\n+        if (container == 0) throw new RuntimeException();\n+        return newArr;\n+    }\n+\n+    public boolean isContain(int[] arr){\n+        for (int i : arr) {\n+            if (i == 1 || i == 4) return true;\n+        }\n+        return false;\n+    }\n+\n+    public static void main(String[] args) {\n+        int[] arr = {54,23,433,3, 4, 5, 6, 6};\n+        TestArrays testArrays = new TestArrays();\n+        System.out.println(Arrays.toString(testArrays.checkElements(arr)));\n+    }\n+}"
  },
  {
    "sha": "7dc768e5a3fa8ab4ba2f21027defec5160a087f7",
    "filename": "src/main/java/lesson7/AfterSuite.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/AfterSuite.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/AfterSuite.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson7/AfterSuite.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,11 @@\n+package lesson7;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.METHOD)\n+public @interface AfterSuite {\n+}"
  },
  {
    "sha": "c13c2eddeccc13a92509046d1329fe649559c8e3",
    "filename": "src/main/java/lesson7/BeforeSuite.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/BeforeSuite.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/BeforeSuite.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson7/BeforeSuite.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,11 @@\n+package lesson7;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.METHOD)\n+public @interface BeforeSuite {\n+}"
  },
  {
    "sha": "2a6f31cae11eeabc6b18e2c6e7fa89f75f4117ab",
    "filename": "src/main/java/lesson7/EqualTest.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/EqualTest.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/EqualTest.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson7/EqualTest.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,31 @@\n+package lesson7;\n+\n+public class EqualTest {\n+    @BeforeSuite\n+    public  Sum  generate(){\n+        return new Sum(2,3);\n+    }\n+\n+\n+\n+    @Test (priority = 0)\n+    public void testSum(){\n+        System.out.println(EqualTest.equals(5, generate().summa()));\n+    }\n+\n+    @Test(priority = 4)\n+    public void testDiff(){\n+        System.out.println(EqualTest.equals(0, generate().diff()));\n+    }\n+    @Test(priority = 3)\n+    public  void testSub(){\n+        System.out.println(EqualTest.equals(6,generate().sub()));\n+    }\n+\n+\n+    public static boolean equals(Object expected, Object actual ){\n+        if (expected.equals(actual)){\n+            return true;\n+        } else return false;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b5c54010e605030738eaa359434ac1bbcf19ee9a",
    "filename": "src/main/java/lesson7/Main.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/Main.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/Main.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson7/Main.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,25 @@\n+package lesson7;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class Main {\n+\n+\n+    //Создать класс, который может выполнять «тесты».\n+    //В качестве тестов выступают классы с наборами методов,\n+    // снабженных аннотациями @Test. Класс, запускающий тесты,\n+    // должен иметь статический метод start(Class testClass),\n+    // которому в качестве аргумента передается объект типа Class.\n+    // Из «класса-теста» вначале должен быть запущен метод с аннотацией @BeforeSuite,\n+    // если он присутствует. Далее запускаются методы с аннотациями @Test,\n+    // а по завершении всех тестов – метод с аннотацией @AfterSuite.\n+    //К каждому тесту необходимо добавить приоритеты (int-числа от 1 до 10),\n+    // в соответствии с которыми будет выбираться порядок их выполнения.\n+    // Если приоритет одинаковый, то порядок не имеет значения.\n+    // Методы с аннотациями @BeforeSuite и @AfterSuite должны присутствовать\n+    // в единственном экземпляре. Если это не так –\n+    // необходимо бросить RuntimeException при запуске «тестирования».\n+    public static void main(String[] args) throws InvocationTargetException, IllegalAccessException {\n+        TestClass.start(EqualTest.class);\n+    }\n+}"
  },
  {
    "sha": "2e503983c3d4c4cf0717a3bca3bdf3e3a0c31606",
    "filename": "src/main/java/lesson7/Sum.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/Sum.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/Sum.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson7/Sum.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,23 @@\n+package lesson7;\n+\n+public class Sum {\n+    public Integer a;\n+    public Integer b;\n+    Sum(Integer a , Integer b){\n+        this.a = a;\n+        this.b = b;\n+    }\n+\n+    public Integer summa(){\n+        return a + b;\n+    }\n+\n+    public Integer diff(){\n+        return a - b;\n+    }\n+\n+    public Integer sub(){\n+        return a*b;\n+    }\n+\n+}"
  },
  {
    "sha": "ad1d8f150984db22c482081f86770f95d51e37dc",
    "filename": "src/main/java/lesson7/Test.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/Test.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/Test.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson7/Test.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,12 @@\n+package lesson7;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.METHOD)\n+public @interface Test {\n+    int priority() default 1;\n+}"
  },
  {
    "sha": "47ab601cea6dd99b27c5a1826601030d502beb04",
    "filename": "src/main/java/lesson7/TestClass.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/TestClass.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/main/java/lesson7/TestClass.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/main/java/lesson7/TestClass.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,54 @@\n+package lesson7;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+public   class TestClass {\n+    private static Object obj;\n+    private static int countBeforeSuite = 0;\n+    private static int countAfterSuite = 0;\n+\n+    public static void start(Class testClass) throws InvocationTargetException, IllegalAccessException {\n+        Method[] methods = testClass.getMethods();\n+        Method[] annotationMethod = new Method[methods.length];\n+        try {\n+             obj = testClass.newInstance();\n+        } catch (InstantiationException e) {\n+            e.printStackTrace();\n+        } catch (IllegalAccessException e) {\n+            e.printStackTrace();\n+        }\n+\n+        for (Method method : methods) {\n+            if (method.getAnnotation(BeforeSuite.class) != null) {\n+                    countBeforeSuite++;\n+                if (countBeforeSuite > 1){\n+                    throw new RuntimeException();\n+                }\n+                method.invoke(obj);\n+            }\n+        }\n+\n+        for (Method method : methods) {\n+            if (method.getAnnotation(Test.class) != null) {\n+                annotationMethod[method.getAnnotation(Test.class).priority()] = method;\n+            }\n+        }\n+\n+        for (int i = annotationMethod.length - 1; i >= 0 ; i--) {\n+            if (annotationMethod[i] != null && annotationMethod[i].getAnnotation(Test.class) != null ){\n+                annotationMethod[i].invoke(obj);\n+            }\n+        }\n+\n+        for (Method method : methods) {\n+            if (method.getAnnotation(AfterSuite.class) != null) {\n+                countBeforeSuite++;\n+                if (countBeforeSuite > 1){\n+                    throw new RuntimeException();\n+                }\n+                method.invoke(obj);\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "27dbe39eb25b2d88cce0700a0a9a3cc25363c4cb",
    "filename": "src/test/java/TestArray.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/test/java/TestArray.java",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/src/test/java/TestArray.java",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/src/test/java/TestArray.java?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12",
    "patch": "@@ -0,0 +1,44 @@\n+import lesson6.TestArrays;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.CsvSource;\n+\n+import java.util.Arrays;\n+\n+\n+public class TestArray {\n+    private TestArrays testArray;\n+\n+    @BeforeEach\n+    public void init(){\n+        testArray = new TestArrays();\n+    }\n+\n+\n+\n+    @Test\n+    public void testCheck(){\n+        Assertions.assertEquals(Arrays.toString(new int[]{5, 6, 6}), Arrays.toString(testArray.checkElements(new int[]{54, 23, 433, 3, 4, 5, 6, 6})));\n+        Assertions.assertEquals(Arrays.toString(new int[]{1, 7}), Arrays.toString(testArray.checkElements(new int[]{4, 23, 433, 3, 4, 1, 7})));\n+        Assertions.assertEquals(Arrays.toString(new int[]{5, 1, 7}), Arrays.toString(testArray.checkElements(new int[]{4, 5, 1, 7})));\n+        Assertions.assertTrue(testArray.isContain(new int[]{1,3,4,1}));\n+    }\n+    @Test\n+    public void testCheckException(){\n+        Assertions.assertThrows(RuntimeException.class,() -> testArray.checkElements(new int[]{1,1,1}));\n+    }\n+\n+    @CsvSource({\n+            \"1, 3, 4, 56, 5\",\n+            \"2, 4, 6, 5, 4\",\n+            \"1, 3, 6, 5, 1\",\n+            \"0, 3, 6, 5, 0\",\n+    })\n+    @ParameterizedTest\n+    public void isBooleanTest(int a, int b, int c, int d, int f){\n+        Assertions.assertTrue(testArray.isContain(new int[]{a, b, c, d, f}));\n+    }\n+\n+}"
  },
  {
    "sha": "aad9f0d4f6697ca02ac382e4006c351ea2f3580c",
    "filename": "target/classes/lesson1_generics/Apple.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson1_generics/Apple.class",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson1_generics/Apple.class",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/target/classes/lesson1_generics/Apple.class?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12"
  },
  {
    "sha": "6a64e18bc31a5f9b637f65c3644bd0d7ec319a42",
    "filename": "target/classes/lesson1_generics/Box.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson1_generics/Box.class",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson1_generics/Box.class",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/target/classes/lesson1_generics/Box.class?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12"
  },
  {
    "sha": "e0f985bdcbacf0ca76e1c3297a5dc144ac251ba5",
    "filename": "target/classes/lesson1_generics/Fruit.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson1_generics/Fruit.class",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson1_generics/Fruit.class",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/target/classes/lesson1_generics/Fruit.class?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12"
  },
  {
    "sha": "81fab460dee0bc826e5a550f095b139506865557",
    "filename": "target/classes/lesson1_generics/Main.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson1_generics/Main.class",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson1_generics/Main.class",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/target/classes/lesson1_generics/Main.class?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12"
  },
  {
    "sha": "74720c3fa3ddbbcc7d6b1f5745a34e0dc04cb4c2",
    "filename": "target/classes/lesson1_generics/Orange.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson1_generics/Orange.class",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson1_generics/Orange.class",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/target/classes/lesson1_generics/Orange.class?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12"
  },
  {
    "sha": "4ab24e27375511adfb2d2b99d340c807f621bd09",
    "filename": "target/classes/lesson4_multithreading/WaitAndNotify.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Rasel579/Java3pro/blob/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson4_multithreading/WaitAndNotify.class",
    "raw_url": "https://github.com/Rasel579/Java3pro/raw/d245c64e046c2c07d49b1c62a8acb59e4598ee12/target/classes/lesson4_multithreading/WaitAndNotify.class",
    "contents_url": "https://api.github.com/repos/Rasel579/Java3pro/contents/target/classes/lesson4_multithreading/WaitAndNotify.class?ref=d245c64e046c2c07d49b1c62a8acb59e4598ee12"
  }
]
