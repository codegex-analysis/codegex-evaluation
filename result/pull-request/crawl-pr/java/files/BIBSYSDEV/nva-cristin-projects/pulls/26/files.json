[
  {
    "sha": "2868078807e72818a7fec23aac5fb081c847f42e",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/build.gradle",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/build.gradle",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/build.gradle?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -60,6 +60,10 @@ test {\n         events 'skipped', 'passed', 'failed'\n     }\n     finalizedBy jacocoTestReport\n+\n+    environment \"ALLOWED_ORIGIN\", \"*\"\n+    environment \"CRISTIN_API_HOST\", \"api.cristin.no\"\n+    environment \"BASE_URL\", \"https://api.dev.nva.aws.unit.no/project\"\n }\n \n pmd {\n@@ -102,15 +106,15 @@ jacocoTestCoverageVerification {\n             limit {\n                 counter = 'METHOD'\n                 value = 'COVEREDRATIO'\n-                minimum = 0.87\n+                minimum = 0.90\n             }\n         }\n \n         rule {\n             limit {\n                 counter = 'CLASS'\n                 value = 'COVEREDRATIO'\n-                minimum = 0.86\n+                minimum = 0.90\n             }\n         }\n     }"
  },
  {
    "sha": "184311dd8d60b65d1a58c471246cccf2e0a3a20d",
    "filename": "src/main/java/no/unit/nva/cristin/projects/Category.java",
    "status": "removed",
    "additions": 0,
    "deletions": 12,
    "changes": 12,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/Category.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/Category.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/Category.java?ref=7af1431041160e97c8a5a3182be8ec415498bd88",
    "patch": "@@ -1,12 +0,0 @@\n-package no.unit.nva.cristin.projects;\n-\n-\n-import java.util.Map;\n-\n-public class Category {\n-\n-    public String code;\n-    public Map<String, String> name;\n-\n-}\n-"
  },
  {
    "sha": "d7746ee855d4d151d3fbbf0957973964342e2071",
    "filename": "src/main/java/no/unit/nva/cristin/projects/Constants.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/Constants.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/Constants.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/Constants.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -0,0 +1,18 @@\n+package no.unit.nva.cristin.projects;\n+\n+import nva.commons.core.Environment;\n+\n+public class Constants {\n+\n+    private static final Environment ENVIRONMENT = new Environment();\n+    private static final String CRISTIN_API_HOST_ENV = \"CRISTIN_API_HOST\";\n+    public static final String PROJECT_SEARCH_CONTEXT_URL = \"https://example.org/search-api-context.json\";\n+    public static final String PROJECT_LOOKUP_CONTEXT_URL = \"https://example.org/project-context.json\";\n+    public static final String CRISTIN_API_HOST = ENVIRONMENT.readEnv(CRISTIN_API_HOST_ENV);\n+    // TODO: Improve this in NP-2281?\n+    public static final String CRISTIN_API_BASE_URL = \"https://\" + CRISTIN_API_HOST + \"/v2\";\n+    public static final String INSTITUTION_PATH = \"institutions\";\n+    public static final String PERSON_PATH = \"persons\";\n+    private static final String BASE_URL_ENV = \"BASE_URL\";\n+    public static final String BASE_URL = ENVIRONMENT.readEnv(BASE_URL_ENV);\n+}"
  },
  {
    "sha": "502fb87fc4b52baed858bcb54b11817de8abfa11",
    "filename": "src/main/java/no/unit/nva/cristin/projects/CristinApiClient.java",
    "status": "modified",
    "additions": 61,
    "deletions": 10,
    "changes": 71,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/CristinApiClient.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/CristinApiClient.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/CristinApiClient.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -1,6 +1,9 @@\n package no.unit.nva.cristin.projects;\n \n import static java.util.Arrays.asList;\n+import static no.unit.nva.cristin.projects.Constants.BASE_URL;\n+import static no.unit.nva.cristin.projects.Constants.CRISTIN_API_HOST;\n+import static no.unit.nva.cristin.projects.UriUtils.buildUri;\n import static nva.commons.core.attempt.Try.attempt;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n@@ -13,6 +16,7 @@\n import java.util.Map;\n import java.util.stream.Collectors;\n import no.unit.nva.cristin.projects.model.cristin.CristinProject;\n+import no.unit.nva.cristin.projects.model.nva.NvaProject;\n import nva.commons.core.JacocoGenerated;\n import nva.commons.core.JsonUtils;\n import org.apache.http.client.utils.URIBuilder;\n@@ -23,19 +27,66 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(CristinApiClient.class);\n \n+    private static final String TITLE = \"title\";\n+    private static final String CHARACTER_EQUALS = \"=\";\n     private static final String HTTPS = \"https\";\n     private static final String CRISTIN_API_PROJECTS_PATH = \"/v2/projects/\";\n     private static final ObjectMapper OBJECT_MAPPER = JsonUtils.objectMapper;\n-    private final transient String cristinApiHost;\n-\n-    public CristinApiClient(String cristinApiHost) {\n-        this.cristinApiHost = cristinApiHost;\n-    }\n+    private static final String SEARCH_PATH = \"search?QUERY_PARAMS\"; // TODO: NP-2281: Replace QUERY_PARAMS\n+    private static final String ERROR_MESSAGE_FETCHING_CRISTIN_PROJECT_WITH_ID =\n+        \"Error fetching cristin project with id: %s . Exception Message: %s\";\n \n     protected static <T> T fromJson(InputStreamReader reader, Class<T> classOfT) throws IOException {\n         return OBJECT_MAPPER.readValue(reader, classOfT);\n     }\n \n+    /**\n+     * Creates a wrapper object containing Cristin Projects transformed to NvaProjects with additional metadata. Is used\n+     * for serialization to the client.\n+     *\n+     * @param parameters The query params\n+     * @param language   Language used for some properties in Cristin API response\n+     * @return a ProjectsWrapper filled with transformed Cristin Projects and metadata\n+     * @throws IOException        if cannot read from connection\n+     * @throws URISyntaxException if URI is malformed\n+     */\n+    public ProjectsWrapper queryCristinProjectsIntoWrapperObjectWithAdditionalMetadata(\n+        Map<String, String> parameters, String language)\n+        throws IOException, URISyntaxException {\n+\n+        long startRequestTime = System.currentTimeMillis();\n+        List<CristinProject> enrichedProjects = queryAndEnrichProjects(parameters, language);\n+        long endRequestTime = System.currentTimeMillis();\n+\n+        ProjectsWrapper projectsWrapper = new ProjectsWrapper();\n+\n+        projectsWrapper.setId(buildUri(BASE_URL, SEARCH_PATH));\n+        projectsWrapper.setSize(0); // TODO: NP-2385: X-Total-Count header from Cristin response\n+        projectsWrapper.setSearchString(extractTitleSearchString(parameters));\n+        projectsWrapper.setProcessingTime(calculateProcessingTime(startRequestTime, endRequestTime));\n+        // TODO: NP-2385: Use Link header / Pagination data from Cristin response in the next two values\n+        projectsWrapper.setFirstRecord(0);\n+        projectsWrapper.setNextResults(null);\n+        projectsWrapper.setHits(transformCristinProjectsToNvaProjects(enrichedProjects));\n+\n+        return projectsWrapper;\n+    }\n+\n+    @JacocoGenerated\n+    protected long calculateProcessingTime(long startRequestTime, long endRequestTime) {\n+        return endRequestTime - startRequestTime;\n+    }\n+\n+    private String extractTitleSearchString(Map<String, String> parameters) {\n+        return TITLE + CHARACTER_EQUALS + parameters.get(TITLE);\n+    }\n+\n+    private List<NvaProject> transformCristinProjectsToNvaProjects(List<CristinProject> cristinProjects) {\n+        return cristinProjects.stream()\n+            .map(cristinProject -> new NvaProjectBuilder(cristinProject).build())\n+            .collect(Collectors.toList());\n+    }\n+\n     protected List<CristinProject> queryProjects(Map<String, String> parameters) throws IOException,\n                                                                                         URISyntaxException {\n         URL url = generateQueryProjectsUrl(parameters);\n@@ -48,8 +99,7 @@ public CristinApiClient(String cristinApiHost) {\n                                                           String language) throws IOException,\n                                                                                   URISyntaxException {\n         List<CristinProject> projects = queryProjects(parameters);\n-        List<CristinProject> enrichedProjects = enrichProjects(language, projects);\n-        return enrichedProjects;\n+        return enrichProjects(language, projects);\n     }\n \n     protected CristinProject getProject(String id, String language) throws IOException, URISyntaxException {\n@@ -73,7 +123,7 @@ protected URL generateQueryProjectsUrl(Map<String, String> parameters) throws Ma\n                                                                                   URISyntaxException {\n         URIBuilder uri = new URIBuilder()\n             .setScheme(HTTPS)\n-            .setHost(cristinApiHost)\n+            .setHost(CRISTIN_API_HOST)\n             .setPath(CRISTIN_API_PROJECTS_PATH);\n         if (parameters != null) {\n             parameters.keySet().forEach(s -> uri.addParameter(s, parameters.get(s)));\n@@ -84,7 +134,7 @@ protected URL generateQueryProjectsUrl(Map<String, String> parameters) throws Ma\n     protected URL generateGetProjectUrl(String id, String language) throws MalformedURLException, URISyntaxException {\n         URI uri = new URIBuilder()\n             .setScheme(HTTPS)\n-            .setHost(cristinApiHost)\n+            .setHost(CRISTIN_API_HOST)\n             .setPath(CRISTIN_API_PROJECTS_PATH + id)\n             .addParameter(\"lang\", language)\n             .build();\n@@ -98,7 +148,8 @@ protected URL generateGetProjectUrl(String id, String language) throws Malformed\n     private CristinProject enrichOneProject(String language, CristinProject project) {\n         return attempt(() -> getProject(project.cristinProjectId, language))\n             .orElse((failure) -> {\n-                logger.error(\"Error fetching cristin project with id: \" + project.cristinProjectId);\n+                logger.error(String.format(ERROR_MESSAGE_FETCHING_CRISTIN_PROJECT_WITH_ID,\n+                    project.cristinProjectId, failure.getException().getMessage()));\n                 return project;\n             });\n     }"
  },
  {
    "sha": "aa963214ffe421d040999d8d0664e465e650e39c",
    "filename": "src/main/java/no/unit/nva/cristin/projects/FetchCristinProjects.java",
    "status": "modified",
    "additions": 9,
    "deletions": 27,
    "changes": 36,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/FetchCristinProjects.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/FetchCristinProjects.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/FetchCristinProjects.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -8,8 +8,6 @@\n import java.util.Map;\n import java.util.Optional;\n import java.util.concurrent.ConcurrentHashMap;\n-import java.util.stream.Collectors;\n-import no.unit.nva.cristin.projects.model.cristin.CristinProject;\n import nva.commons.apigateway.ApiGatewayHandler;\n import nva.commons.apigateway.RequestInfo;\n import nva.commons.apigateway.exceptions.ApiGatewayException;\n@@ -37,12 +35,10 @@\n     private static final String CRISTIN_QUERY_PARAMETER_PER_PAGE_KEY = \"per_page\";\n     private static final String CRISTIN_QUERY_PARAMETER_PER_PAGE_VALUE = \"5\";\n \n-    public static final String LANGUAGE_QUERY_PARAMETER = \"language\";\n-    public static final String TITLE_QUERY_PARAMETER = \"title\";\n+    protected static final String LANGUAGE_QUERY_PARAMETER = \"language\";\n+    protected static final String TITLE_QUERY_PARAMETER = \"title\";\n     private static final String DEFAULT_LANGUAGE_CODE = \"nb\";\n-    private static final String CRISTIN_API_HOST_ENV = \"CRISTIN_API_HOST\";\n     private final transient CristinApiClient cristinApiClient;\n-    private final transient PresentationConverter presentationConverter = new PresentationConverter();\n \n     @SuppressWarnings(\"unused\")\n     @JacocoGenerated\n@@ -52,7 +48,7 @@ public FetchCristinProjects() {\n \n     @JacocoGenerated\n     public FetchCristinProjects(Environment environment) {\n-        this(new CristinApiClient(environment.readEnv(CRISTIN_API_HOST_ENV)), environment);\n+        this(new CristinApiClient(), environment);\n     }\n \n     protected FetchCristinProjects(CristinApiClient cristinApiClient, Environment environment) {\n@@ -67,7 +63,7 @@ protected ProjectsWrapper processInput(Void input, RequestInfo requestInfo, Cont\n         String language = getValidLanguage(requestInfo);\n         String title = getValidTitle(requestInfo);\n \n-        return createProjectsWrapper(language, title);\n+        return getTransformedCristinProjectsUsingWrapperObject(language, title);\n     }\n \n     @Override\n@@ -92,27 +88,13 @@ private String getValidLanguage(RequestInfo requestInfo) throws BadRequestExcept\n             .orElseThrow(() -> new BadRequestException(LANGUAGE_INVALID));\n     }\n \n-    private ProjectsWrapper createProjectsWrapper(String language, String title) {\n-        ProjectsWrapper wrapper = new ProjectsWrapper();\n-        wrapper.hits = createProjectPresentationList(language, title);\n-        wrapper.numberOfResults = wrapper.hits.size();\n-\n-        return wrapper;\n-    }\n-\n-    private List<ProjectPresentation> createProjectPresentationList(String language, String title) {\n+    private ProjectsWrapper getTransformedCristinProjectsUsingWrapperObject(String language, String title) {\n         Map<String, String> cristinQueryParameters = createCristinQueryParameters(title, language);\n-        List<CristinProject> projects = attempt(() ->\n-            cristinApiClient.queryAndEnrichProjects(cristinQueryParameters, language)).orElseThrow();\n-\n-        return transformProjectsToProjectPresentations(language, projects);\n-    }\n \n-    private List<ProjectPresentation> transformProjectsToProjectPresentations(String language,\n-                                                                              List<CristinProject> projects) {\n-        return projects.stream()\n-            .map(project -> presentationConverter.asProjectPresentation(project, language))\n-            .collect(Collectors.toList());\n+        return attempt(() ->\n+            cristinApiClient\n+                .queryCristinProjectsIntoWrapperObjectWithAdditionalMetadata(cristinQueryParameters, language))\n+            .orElseThrow();\n     }\n \n     private boolean isValidTitle(String str) {"
  },
  {
    "sha": "9f2a5822d6348572a15b1361cc38d774ee857134",
    "filename": "src/main/java/no/unit/nva/cristin/projects/FundingSourceNamePresentation.java",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/FundingSourceNamePresentation.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/FundingSourceNamePresentation.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/FundingSourceNamePresentation.java?ref=7af1431041160e97c8a5a3182be8ec415498bd88",
    "patch": "@@ -1,8 +0,0 @@\n-package no.unit.nva.cristin.projects;\n-\n-public class FundingSourceNamePresentation {\n-\n-    public String name;\n-    public String language;\n-\n-}"
  },
  {
    "sha": "4230610e963378334328717243aa23afff6ddd8b",
    "filename": "src/main/java/no/unit/nva/cristin/projects/FundingSourcePresentation.java",
    "status": "removed",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/FundingSourcePresentation.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/FundingSourcePresentation.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/FundingSourcePresentation.java?ref=7af1431041160e97c8a5a3182be8ec415498bd88",
    "patch": "@@ -1,13 +0,0 @@\n-package no.unit.nva.cristin.projects;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-public class FundingSourcePresentation {\n-\n-    public String fundingSourceCode;\n-    public String projectCode;\n-    public List<FundingSourceNamePresentation> names = new ArrayList<>();\n-\n-\n-}"
  },
  {
    "sha": "4eaedf4110e9b69538c1fd43e29d538d6c30ea20",
    "filename": "src/main/java/no/unit/nva/cristin/projects/InstitutionPresentation.java",
    "status": "removed",
    "additions": 0,
    "deletions": 9,
    "changes": 9,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/InstitutionPresentation.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/InstitutionPresentation.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/InstitutionPresentation.java?ref=7af1431041160e97c8a5a3182be8ec415498bd88",
    "patch": "@@ -1,9 +0,0 @@\n-package no.unit.nva.cristin.projects;\n-\n-public class InstitutionPresentation {\n-\n-    public String cristinInstitutionId;\n-    public String name;\n-    public String language;\n-\n-}"
  },
  {
    "sha": "f913460082af7df617a02db7fd7ad524f4057c0c",
    "filename": "src/main/java/no/unit/nva/cristin/projects/Interaction.java",
    "status": "removed",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/Interaction.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/Interaction.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/Interaction.java?ref=7af1431041160e97c8a5a3182be8ec415498bd88",
    "patch": "@@ -1,13 +0,0 @@\n-package no.unit.nva.cristin.projects;\n-\n-import static no.unit.nva.cristin.projects.JsonPropertyNames.CRISTIN_PERSON_ID;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-\n-public class Interaction {\n-\n-    @JsonProperty(CRISTIN_PERSON_ID)\n-    public String cristinPersonId;\n-    public String date;\n-\n-}\n-"
  },
  {
    "sha": "58bf580c4164f35ae73444979227c4833c829d74",
    "filename": "src/main/java/no/unit/nva/cristin/projects/JsonPropertyNames.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/JsonPropertyNames.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/JsonPropertyNames.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/JsonPropertyNames.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -47,4 +47,10 @@\n     public static final String AFFILIATION = \"affiliation\";\n     public static final String FIRST_NAME = \"firstName\";\n     public static final String LAST_NAME = \"lastName\";\n+    public static final String SIZE = \"size\";\n+    public static final String SEARCH_STRING = \"searchString\";\n+    public static final String PROCESSING_TIME = \"processingTime\";\n+    public static final String FIRST_RECORD = \"firstRecord\";\n+    public static final String NEXT_RESULTS = \"nextResults\";\n+    public static final String HITS = \"hits\";\n }"
  },
  {
    "sha": "d94b58187af75d03718e30c4d63a547dfffa698d",
    "filename": "src/main/java/no/unit/nva/cristin/projects/NvaProjectBuilder.java",
    "status": "modified",
    "additions": 72,
    "deletions": 47,
    "changes": 119,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/NvaProjectBuilder.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/NvaProjectBuilder.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/NvaProjectBuilder.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -1,12 +1,13 @@\n package no.unit.nva.cristin.projects;\n \n-import static nva.commons.core.attempt.Try.attempt;\n-import java.net.URI;\n+import static no.unit.nva.cristin.projects.Constants.CRISTIN_API_BASE_URL;\n+import static no.unit.nva.cristin.projects.Constants.INSTITUTION_PATH;\n+import static no.unit.nva.cristin.projects.Constants.PERSON_PATH;\n+import static no.unit.nva.cristin.projects.UriUtils.buildUri;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n-import java.util.Map.Entry;\n-import java.util.function.Predicate;\n+import java.util.Optional;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n import no.unit.nva.cristin.projects.model.cristin.CristinProject;\n@@ -20,10 +21,7 @@\n \n public class NvaProjectBuilder {\n \n-    private static final String PROJECT_CONTEXT_URL = \"https://example.org/search-api-context.json\";\n-    private static final String NVA_PROJECT_BASE_URL = \"https://sandbox.nva.unit.no/project\";\n-    private static final String CRISTIN_INSTITUTION_BASE_URI = \"https://api.cristin.no/v2/institutions\";\n-    private static final String CRISTIN_PERSON_BASE_URL = \"https://api.cristin.no/v2/persons\";\n+    // TODO: NP-2366: Add dynamic language URIs.\n     private static final String TEMPORARY_LANGUAGE_URL = \"https://lexvo.org/id/iso639-3/nno\";\n \n     private static final String PROJECT_TYPE = \"Project\";\n@@ -37,32 +35,71 @@\n     private static final Map<String, String> cristinRolesToNva = Map.of(\"PRO_MANAGER\", \"ProjectManager\",\n         \"PRO_PARTICIPANT\", \"ProjectParticipant\");\n \n+    private final transient CristinProject cristinProject;\n+    private final transient NvaProject nvaProject;\n+\n+    public NvaProjectBuilder(CristinProject cristinProject) {\n+        this.cristinProject = cristinProject;\n+        nvaProject = new NvaProject();\n+    }\n+\n     /**\n      * Build a NVA project datamodel from a Cristin project datamodel.\n      *\n-     * @param cristinProject The model to convert from\n      * @return a NvaProject converted from a CristinProject\n      */\n-    public static NvaProject mapCristinProjectToNvaProject(CristinProject cristinProject) {\n-        NvaProject nvaProject = new NvaProject();\n-\n-        nvaProject.setContext(PROJECT_CONTEXT_URL);\n-        nvaProject.setId(buildUri(NVA_PROJECT_BASE_URL, cristinProject.cristinProjectId));\n+    public NvaProject build() {\n+        // TODO: NP-2384: Remember to use setContext when serializing only a single NvaProject\n+        nvaProject.setId(buildUri(Constants.BASE_URL, cristinProject.cristinProjectId));\n         nvaProject.setType(PROJECT_TYPE);\n-        nvaProject.setIdentifier(\n-            Collections.singletonList(Map.of(TYPE, CRISTIN_IDENTIFIER_TYPE, VALUE, cristinProject.cristinProjectId)));\n-        nvaProject.setTitle(cristinProject.title.get(cristinProject.mainLanguage));\n+        nvaProject.setIdentifier(createCristinIdentifier());\n+        nvaProject.setTitle(extractMainTitle());\n+        nvaProject.setAlternativeTitles(extractAlternativeTitles());\n         nvaProject.setLanguage(buildUri(TEMPORARY_LANGUAGE_URL));\n-        nvaProject.setAlternativeTitles(extractAlternativeTitles(cristinProject));\n         nvaProject.setStartDate(cristinProject.startDate);\n         nvaProject.setEndDate(cristinProject.endDate);\n-        nvaProject.setCoordinatingInstitution(mapCristinInstitutionToNvaOrganization(\n-            cristinProject.coordinatingInstitution.institution));\n-        nvaProject.setContributors(transformCristinPersonsToNvaContributors(cristinProject.participants));\n+        nvaProject.setCoordinatingInstitution(extractCoordinatingInstitution());\n+        nvaProject.setContributors(extractContributors());\n \n         return nvaProject;\n     }\n \n+    private static NvaPerson mapCristinPersonToNvaPerson(Person person) {\n+        if (person == null) {\n+            return null;\n+        }\n+\n+        NvaPerson identity = new NvaPerson();\n+        identity.setId(buildUri(CRISTIN_API_BASE_URL, PERSON_PATH, person.cristinPersonId));\n+        identity.setType(PERSON_TYPE);\n+        identity.setFirstName(person.firstName);\n+        identity.setLastName(person.surname);\n+        return identity;\n+    }\n+\n+    private static NvaOrganization mapCristinInstitutionToNvaOrganization(Institution institution) {\n+        if (institution == null) {\n+            return null;\n+        }\n+\n+        NvaOrganization nvaOrganization = new NvaOrganization();\n+        nvaOrganization.setId(buildUri(CRISTIN_API_BASE_URL, INSTITUTION_PATH, institution.cristinInstitutionId));\n+        nvaOrganization.setType(ORGANIZATION_TYPE);\n+        nvaOrganization.setName(institution.institutionName);\n+        return nvaOrganization;\n+    }\n+\n+    private NvaOrganization extractCoordinatingInstitution() {\n+        return Optional.ofNullable(cristinProject.coordinatingInstitution)\n+            .map(elm -> mapCristinInstitutionToNvaOrganization(elm.institution))\n+            .orElse(null);\n+    }\n+\n+    private List<Map<String, String>> createCristinIdentifier() {\n+        return Collections.singletonList(\n+            Map.of(TYPE, CRISTIN_IDENTIFIER_TYPE, VALUE, cristinProject.cristinProjectId));\n+    }\n+\n     private static List<NvaContributor> transformCristinPersonsToNvaContributors(List<Person> participants) {\n         return participants.stream()\n             .flatMap(NvaProjectBuilder::generateRoleBasedContribution)\n@@ -82,35 +119,23 @@ private static NvaContributor createNvaContributorFromCristinPersonByRole(Person\n         return nvaContributor;\n     }\n \n-    private static NvaPerson mapCristinPersonToNvaPerson(Person person) {\n-        NvaPerson identity = new NvaPerson();\n-        identity.setId(buildUri(CRISTIN_PERSON_BASE_URL, person.cristinPersonId));\n-        identity.setType(PERSON_TYPE);\n-        identity.setFirstName(person.firstName);\n-        identity.setLastName(person.surname);\n-        return identity;\n-    }\n-\n-    private static NvaOrganization mapCristinInstitutionToNvaOrganization(Institution institution) {\n-        NvaOrganization nvaOrganization = new NvaOrganization();\n-        nvaOrganization.setId(buildUri(CRISTIN_INSTITUTION_BASE_URI, institution.cristinInstitutionId));\n-        nvaOrganization.setType(ORGANIZATION_TYPE);\n-        nvaOrganization.setName(institution.institutionName);\n-        return nvaOrganization;\n-    }\n-\n-    private static List<Map<String, String>> extractAlternativeTitles(CristinProject cristinProject) {\n-        return Collections.singletonList(\n-            cristinProject.title.entrySet().stream()\n-                .filter(excludeMainLanguageFromMapFilter(cristinProject.mainLanguage))\n-                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue)));\n+    private String extractMainTitle() {\n+        return Optional.ofNullable(cristinProject.title)\n+            .map(elm -> elm.get(cristinProject.mainLanguage))\n+            .orElse(null);\n     }\n \n-    private static Predicate<Entry<String, String>> excludeMainLanguageFromMapFilter(String mainLanguage) {\n-        return entry -> !entry.getKey().equals(mainLanguage);\n+    private List<Map<String, String>> extractAlternativeTitles() {\n+        return Optional.ofNullable(cristinProject.title)\n+            .filter(elm -> elm.keySet().remove(cristinProject.mainLanguage))\n+            .filter(elm -> !elm.isEmpty())\n+            .map(Collections::singletonList)\n+            .orElse(null);\n     }\n \n-    private static URI buildUri(String... parts) {\n-        return attempt(() -> new URI(String.join(\"/\", parts))).orElse(failure -> null);\n+    private List<NvaContributor> extractContributors() {\n+        return Optional.ofNullable(cristinProject.participants)\n+            .map(NvaProjectBuilder::transformCristinPersonsToNvaContributors)\n+            .orElse(null);\n     }\n }"
  },
  {
    "sha": "442d2ceae69a308a7264779d299d899bcea9fb6d",
    "filename": "src/main/java/no/unit/nva/cristin/projects/ParticipantPresentation.java",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/ParticipantPresentation.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/ParticipantPresentation.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/ParticipantPresentation.java?ref=7af1431041160e97c8a5a3182be8ec415498bd88",
    "patch": "@@ -1,8 +0,0 @@\n-package no.unit.nva.cristin.projects;\n-\n-public class ParticipantPresentation {\n-\n-    public String cristinPersonId;\n-    public String fullName;\n-\n-}"
  },
  {
    "sha": "2148747ed5f1506d173276beb151e52c4f734326",
    "filename": "src/main/java/no/unit/nva/cristin/projects/PresentationConverter.java",
    "status": "removed",
    "additions": 0,
    "deletions": 60,
    "changes": 60,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/PresentationConverter.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/PresentationConverter.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/PresentationConverter.java?ref=7af1431041160e97c8a5a3182be8ec415498bd88",
    "patch": "@@ -1,60 +0,0 @@\n-package no.unit.nva.cristin.projects;\n-\n-import java.util.ArrayList;\n-import java.util.Optional;\n-import java.util.TreeMap;\n-import java.util.stream.Collectors;\n-import no.unit.nva.cristin.projects.model.cristin.CristinProject;\n-\n-public class PresentationConverter {\n-\n-    protected ProjectPresentation asProjectPresentation(CristinProject project, String language) {\n-        ProjectPresentation projectPresentation = new ProjectPresentation();\n-        projectPresentation.cristinProjectId = project.cristinProjectId;\n-        projectPresentation.mainLanguage = project.mainLanguage;\n-\n-        Optional.ofNullable(project.title).orElse(new TreeMap<>() {\n-        }).forEach((key, value) -> {\n-            TitlePresentation titlePresentation = new TitlePresentation();\n-            titlePresentation.language = key;\n-            titlePresentation.title = value;\n-            projectPresentation.titles.add(titlePresentation);\n-        });\n-\n-        Optional.ofNullable(project.participants).orElse(new ArrayList<>()).forEach(person -> {\n-            ParticipantPresentation participantPresentation = new ParticipantPresentation();\n-            participantPresentation.cristinPersonId = person.cristinPersonId;\n-            participantPresentation.fullName = person.surname + \", \" + person.firstName;\n-            projectPresentation.participants.add(participantPresentation);\n-        });\n-\n-        InstitutionPresentation institutionPresentation = new InstitutionPresentation();\n-        if (Optional.ofNullable(project.coordinatingInstitution).isPresent()) {\n-            institutionPresentation.cristinInstitutionId = project.coordinatingInstitution.institution\n-                    .cristinInstitutionId;\n-            institutionPresentation.name = project.coordinatingInstitution.institution.institutionName\n-                    .get(language);\n-            institutionPresentation.language = language;\n-            projectPresentation.institutions.add(institutionPresentation);\n-        }\n-\n-        Optional.ofNullable(project.projectFundingSources).orElse(new ArrayList<>()).forEach(fundingSource -> {\n-            FundingSourcePresentation fundingSourcePresentation = new FundingSourcePresentation();\n-            fundingSourcePresentation.fundingSourceCode = fundingSource.fundingSourceCode;\n-            fundingSourcePresentation.projectCode = fundingSource.projectCode;\n-            fundingSourcePresentation.names = fundingSource.fundingSourceName.entrySet().stream()\n-                .map(name -> {\n-                    FundingSourceNamePresentation fundingSourceNamePresentation =\n-                        new FundingSourceNamePresentation();\n-                    fundingSourceNamePresentation.language = name.getKey();\n-                    fundingSourceNamePresentation.name = name.getValue();\n-                    return fundingSourceNamePresentation;\n-                })\n-                .collect(Collectors.toList());\n-            projectPresentation.fundings.add(fundingSourcePresentation);\n-        });\n-\n-        return projectPresentation;\n-    }\n-\n-}"
  },
  {
    "sha": "8d9c925ecf79fe710ec7815a473335fa01405ed6",
    "filename": "src/main/java/no/unit/nva/cristin/projects/ProjectPresentation.java",
    "status": "removed",
    "additions": 0,
    "deletions": 24,
    "changes": 24,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/ProjectPresentation.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/ProjectPresentation.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/ProjectPresentation.java?ref=7af1431041160e97c8a5a3182be8ec415498bd88",
    "patch": "@@ -1,24 +0,0 @@\n-package no.unit.nva.cristin.projects;\n-\n-import static no.unit.nva.cristin.projects.JsonPropertyNames.CRISTIN_PROJECT_ID;\n-import static no.unit.nva.cristin.projects.JsonPropertyNames.MAIN_LANGUAGE;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-@JsonPropertyOrder({CRISTIN_PROJECT_ID, MAIN_LANGUAGE})\n-public class ProjectPresentation {\n-\n-    @JsonProperty(\"@context\")\n-    public String context;\n-    public String id;\n-    @JsonProperty(CRISTIN_PROJECT_ID)\n-    public String cristinProjectId = \"\";\n-    @JsonProperty(MAIN_LANGUAGE)\n-    public String mainLanguage = \"\";\n-    public List<TitlePresentation> titles = new ArrayList<>();\n-    public List<ParticipantPresentation> participants = new ArrayList<>();\n-    public List<InstitutionPresentation> institutions = new ArrayList<>();\n-    public List<FundingSourcePresentation> fundings = new ArrayList<>();\n-}"
  },
  {
    "sha": "e3add0f78ac427ab72f36a29c9770f8edd1d4519",
    "filename": "src/main/java/no/unit/nva/cristin/projects/ProjectsWrapper.java",
    "status": "modified",
    "additions": 94,
    "deletions": 8,
    "changes": 102,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/ProjectsWrapper.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/ProjectsWrapper.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/ProjectsWrapper.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -1,17 +1,103 @@\n package no.unit.nva.cristin.projects;\n \n+import static no.unit.nva.cristin.projects.Constants.PROJECT_SEARCH_CONTEXT_URL;\n+import static no.unit.nva.cristin.projects.JsonPropertyNames.CONTEXT;\n+import static no.unit.nva.cristin.projects.JsonPropertyNames.FIRST_RECORD;\n+import static no.unit.nva.cristin.projects.JsonPropertyNames.HITS;\n+import static no.unit.nva.cristin.projects.JsonPropertyNames.ID;\n+import static no.unit.nva.cristin.projects.JsonPropertyNames.NEXT_RESULTS;\n+import static no.unit.nva.cristin.projects.JsonPropertyNames.PROCESSING_TIME;\n+import static no.unit.nva.cristin.projects.JsonPropertyNames.SEARCH_STRING;\n+import static no.unit.nva.cristin.projects.JsonPropertyNames.SIZE;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import java.net.URI;\n import java.util.List;\n+import no.unit.nva.cristin.projects.model.nva.NvaProject;\n+import nva.commons.core.JacocoGenerated;\n \n+@JacocoGenerated\n+@JsonPropertyOrder({CONTEXT, ID, SIZE, SEARCH_STRING, PROCESSING_TIME, FIRST_RECORD, NEXT_RESULTS, HITS})\n public class ProjectsWrapper {\n \n     @JsonProperty(\"@context\")\n-    public String context;\n-    public String id;\n-    public Integer numberOfResults;\n-    public String query;\n-    public String processingTime;\n-    public Integer firstRecord;\n-    public Integer totalRecords;\n-    public List<ProjectPresentation> hits;\n+    private String context = PROJECT_SEARCH_CONTEXT_URL;\n+    @JsonProperty\n+    private URI id;\n+    @JsonProperty\n+    private Integer size;\n+    @JsonProperty\n+    private String searchString;\n+    @JsonProperty\n+    private Long processingTime;\n+    @JsonProperty\n+    private Integer firstRecord;\n+    @JsonProperty\n+    private Integer nextResults;\n+    @JsonProperty\n+    private List<NvaProject> hits;\n+\n+    public String getContext() {\n+        return context;\n+    }\n+\n+    public void setContext(String context) {\n+        this.context = context;\n+    }\n+\n+    public URI getId() {\n+        return id;\n+    }\n+\n+    public void setId(URI id) {\n+        this.id = id;\n+    }\n+\n+    public Integer getSize() {\n+        return size;\n+    }\n+\n+    public void setSize(Integer size) {\n+        this.size = size;\n+    }\n+\n+    public String getSearchString() {\n+        return searchString;\n+    }\n+\n+    public void setSearchString(String searchString) {\n+        this.searchString = searchString;\n+    }\n+\n+    public Long getProcessingTime() {\n+        return processingTime;\n+    }\n+\n+    public void setProcessingTime(Long processingTime) {\n+        this.processingTime = processingTime;\n+    }\n+\n+    public Integer getFirstRecord() {\n+        return firstRecord;\n+    }\n+\n+    public void setFirstRecord(Integer firstRecord) {\n+        this.firstRecord = firstRecord;\n+    }\n+\n+    public Integer getNextResults() {\n+        return nextResults;\n+    }\n+\n+    public void setNextResults(Integer nextResults) {\n+        this.nextResults = nextResults;\n+    }\n+\n+    public List<NvaProject> getHits() {\n+        return hits;\n+    }\n+\n+    public void setHits(List<NvaProject> hits) {\n+        this.hits = hits;\n+    }\n }"
  },
  {
    "sha": "25b5ee80f09c3e536503740460e02b81635ea54b",
    "filename": "src/main/java/no/unit/nva/cristin/projects/TitlePresentation.java",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/TitlePresentation.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/7af1431041160e97c8a5a3182be8ec415498bd88/src/main/java/no/unit/nva/cristin/projects/TitlePresentation.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/TitlePresentation.java?ref=7af1431041160e97c8a5a3182be8ec415498bd88",
    "patch": "@@ -1,8 +0,0 @@\n-package no.unit.nva.cristin.projects;\n-\n-public class TitlePresentation {\n-\n-    public String title;\n-    public String language;\n-\n-}"
  },
  {
    "sha": "a185335673d0b58eaddac4ef0e23641e553d4390",
    "filename": "src/main/java/no/unit/nva/cristin/projects/UriUtils.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/UriUtils.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/UriUtils.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/UriUtils.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -0,0 +1,11 @@\n+package no.unit.nva.cristin.projects;\n+\n+import static nva.commons.core.attempt.Try.attempt;\n+import java.net.URI;\n+\n+public class UriUtils {\n+\n+    public static URI buildUri(String... parts) {\n+        return attempt(() -> new URI(String.join(\"/\", parts))).orElseThrow();\n+    }\n+}"
  },
  {
    "sha": "409b04407221a369beaf2a3493e4495fa3504dde",
    "filename": "src/main/java/no/unit/nva/cristin/projects/model/cristin/CristinProject.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/model/cristin/CristinProject.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/model/cristin/CristinProject.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/model/cristin/CristinProject.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -18,8 +18,8 @@\n     public Instant startDate;\n     public Instant endDate;\n     public String status;\n-    public Map<String, Instant> created;\n-    public Map<String, Instant> lastModified;\n+    public Map<String, String> created;\n+    public Map<String, String> lastModified;\n     public CristinOrganization coordinatingInstitution;\n     public List<FundingSource> projectFundingSources;\n     public List<Person> participants;"
  },
  {
    "sha": "a58003819ddeea00bd2c282cb2b23f2fc4e88fad",
    "filename": "src/main/java/no/unit/nva/cristin/projects/model/nva/NvaContributor.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/model/nva/NvaContributor.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/model/nva/NvaContributor.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/model/nva/NvaContributor.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -11,7 +11,6 @@\n public class NvaContributor {\n \n     private String type;\n-    // TODO: Do we want startDate and endDate fields as well?\n     private NvaPerson identity;\n     private NvaOrganization affiliation;\n "
  },
  {
    "sha": "ab10227c60f961ac4522ed94c9f7d35bf4977878",
    "filename": "src/main/java/no/unit/nva/cristin/projects/model/nva/NvaProject.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/model/nva/NvaProject.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/main/java/no/unit/nva/cristin/projects/model/nva/NvaProject.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/main/java/no/unit/nva/cristin/projects/model/nva/NvaProject.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -37,7 +37,7 @@\n     private List<Map<String, String>> alternativeTitles;\n     private Instant startDate;\n     private Instant endDate;\n-    // TODO: Add Grant/Funding field later\n+    // TODO: NP-2155: Add Grant/Funding field later\n     private NvaOrganization coordinatingInstitution;\n     private List<NvaContributor> contributors;\n "
  },
  {
    "sha": "8794a0a95387dec0694bb4a122a7800fb2cfb1ce",
    "filename": "src/test/java/no/unit/nva/cristin/projects/CristinApiClientStub.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/java/no/unit/nva/cristin/projects/CristinApiClientStub.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/java/no/unit/nva/cristin/projects/CristinApiClientStub.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/test/java/no/unit/nva/cristin/projects/CristinApiClientStub.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -9,8 +9,9 @@\n     private static final String CRISTIN_QUERY_PROJECTS_RESPONSE_JSON_FILE = \"/cristinQueryProjectsResponse.json\";\n     private static final String CRISTIN_GET_PROJECT_RESPONSE_JSON_FILE = \"/cristinGetProjectResponse.json\";\n \n-    public CristinApiClientStub(String cristinApiHost) {\n-        super(cristinApiHost);\n+    @Override\n+    protected long calculateProcessingTime(long startRequestTime, long endRequestTime) {\n+        return 1000;\n     }\n \n     @Override"
  },
  {
    "sha": "ae36cd53ab9aeff0cd7fdba7682b5bc6c01260a9",
    "filename": "src/test/java/no/unit/nva/cristin/projects/FetchCristinProjectsTest.java",
    "status": "modified",
    "additions": 9,
    "deletions": 18,
    "changes": 27,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/java/no/unit/nva/cristin/projects/FetchCristinProjectsTest.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/java/no/unit/nva/cristin/projects/FetchCristinProjectsTest.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/test/java/no/unit/nva/cristin/projects/FetchCristinProjectsTest.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -1,5 +1,6 @@\n package no.unit.nva.cristin.projects;\n \n+import static no.unit.nva.cristin.projects.Constants.PROJECT_LOOKUP_CONTEXT_URL;\n import static no.unit.nva.cristin.projects.FetchCristinProjects.LANGUAGE_QUERY_PARAMETER;\n import static no.unit.nva.cristin.projects.FetchCristinProjects.TITLE_QUERY_PARAMETER;\n import static nva.commons.apigateway.ApiGatewayHandler.APPLICATION_PROBLEM_JSON;\n@@ -11,7 +12,6 @@\n import static org.mockito.Mockito.doThrow;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.spy;\n-import static org.mockito.Mockito.when;\n import com.amazonaws.services.lambda.runtime.Context;\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n@@ -51,39 +51,29 @@\n     private static final String TITLE_ILLEGAL_CHARACTERS = \"abc123- ,-?\";\n     private static final String INVALID_JSON = \"This is not valid JSON!\";\n \n-    private static final String ALLOWED_ORIGIN_ENV = \"ALLOWED_ORIGIN\";\n-    private static final String CRISTIN_API_HOST_ENV = \"CRISTIN_API_HOST\";\n-    private static final String CRISTIN_API_DUMMY_HOST = \"example.com\";\n     private static final String ALLOW_ALL_ORIGIN = \"*\";\n     private static final String API_RESPONSE_NON_ENRICHED_PROJECTS_JSON = \"api_response_non_enriched_projects.json\";\n     private static final String API_RESPONSE_ONE_CRISTIN_PROJECT_TO_NVA_PROJECT_JSON =\n         \"api_response_one_cristin_project_to_nva_project.json\";\n+    private static final String CRISTIN_GET_PROJECT_RESPONSE = \"cristinGetProjectResponse.json\";\n     private static final ObjectMapper OBJECT_MAPPER = JsonUtils.objectMapper;\n     private CristinApiClient cristinApiClientStub;\n-    private Environment environment;\n+    private Environment environment = new Environment();\n     private Context context;\n     private ByteArrayOutputStream output;\n     private FetchCristinProjects handler;\n \n     @BeforeEach\n     void setUp() {\n-        environment = mock(Environment.class);\n-        when(environment.readEnv(ALLOWED_ORIGIN_ENV)).thenReturn(ALLOW_ALL_ORIGIN);\n-        when(environment.readEnv(CRISTIN_API_HOST_ENV)).thenReturn(CRISTIN_API_DUMMY_HOST);\n-        cristinApiClientStub = new CristinApiClientStub(environment.readEnv(CRISTIN_API_HOST_ENV));\n+        cristinApiClientStub = new CristinApiClientStub();\n         context = mock(Context.class);\n         output = new ByteArrayOutputStream();\n         handler = new FetchCristinProjects(cristinApiClientStub, environment);\n     }\n \n     @ParameterizedTest\n     @ArgumentsSource(TestPairProvider.class)\n-    void handlerReturnsExpectedBodyWhenRequestInputIsValid(String queryResponse,\n-                                                           String getResponse,\n-                                                           String expected) throws IOException {\n-        cristinApiClientStub = spy(cristinApiClientStub);\n-        when(cristinApiClientStub.fetchQueryResults(any())).thenReturn(getReader(queryResponse));\n-        when(cristinApiClientStub.fetchGetResult(any())).thenReturn(getReader(getResponse));\n+    void handlerReturnsExpectedBodyWhenRequestInputIsValid(String expected) throws IOException {\n         var actual = sendDefaultQuery().getBody();\n         assertEquals(OBJECT_MAPPER.readTree(expected).toPrettyString(),\n             OBJECT_MAPPER.readTree(actual).toPrettyString());\n@@ -210,12 +200,13 @@ public void readerThrowsIoExceptionWhenReadingInvalidJson() {\n     }\n \n     @Test\n-    void returnNvaProjectWhenCallingNvaProjectBuilderMethodWithValidCrisinProject() throws Exception {\n+    void returnNvaProjectWhenCallingNvaProjectBuilderMethodWithValidCristinProject() throws Exception {\n         var expected = getReader(API_RESPONSE_ONE_CRISTIN_PROJECT_TO_NVA_PROJECT_JSON);\n-        var cristinGetProject = getReader(TestPairProvider.CRISTIN_GET_PROJECT_RESPONSE);\n+        var cristinGetProject = getReader(CRISTIN_GET_PROJECT_RESPONSE);\n         CristinProject cristinProject =\n             attempt(() -> JsonUtils.objectMapper.readValue(cristinGetProject, CristinProject.class)).get();\n-        NvaProject nvaProject = NvaProjectBuilder.mapCristinProjectToNvaProject(cristinProject);\n+        NvaProject nvaProject = new NvaProjectBuilder(cristinProject).build();\n+        nvaProject.setContext(PROJECT_LOOKUP_CONTEXT_URL);\n         var actual = attempt(() -> JsonUtils.objectMapper.writeValueAsString(nvaProject)).get();\n \n         assertEquals(OBJECT_MAPPER.readTree(expected).toPrettyString(),"
  },
  {
    "sha": "df30bc054acab7aa7d711554c68f11094f22f3cb",
    "filename": "src/test/java/no/unit/nva/cristin/projects/TestPairProvider.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/java/no/unit/nva/cristin/projects/TestPairProvider.java",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/java/no/unit/nva/cristin/projects/TestPairProvider.java",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/test/java/no/unit/nva/cristin/projects/TestPairProvider.java?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -9,15 +9,13 @@\n \n public class TestPairProvider implements ArgumentsProvider {\n \n-    public static final String CRISTIN_QUERY_PROJECTS_RESPONSE = \"cristinQueryProjectsResponse.json\";\n-    public static final String CRISTIN_GET_PROJECT_RESPONSE = \"cristinGetProjectResponse.json\";\n     public static final String API_QUERY_RESPONSE_JSON =\n         IoUtils.stringFromResources(Path.of(\"api_query_response.json\"));\n \n     @Override\n     public Stream<? extends Arguments> provideArguments(ExtensionContext context) {\n         return Stream.of(\n-                Arguments.of(CRISTIN_QUERY_PROJECTS_RESPONSE, CRISTIN_GET_PROJECT_RESPONSE, API_QUERY_RESPONSE_JSON)\n+                Arguments.of(API_QUERY_RESPONSE_JSON)\n         );\n     }\n }"
  },
  {
    "sha": "141d36100fa5a05496d5b5476d7c389c3fd10956",
    "filename": "src/test/resources/api_query_response.json",
    "status": "modified",
    "additions": 161,
    "deletions": 131,
    "changes": 292,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/resources/api_query_response.json",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/resources/api_query_response.json",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/test/resources/api_query_response.json?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -1,173 +1,203 @@\n {\n-  \"numberOfResults\": 5,\n+  \"@context\": \"https://example.org/search-api-context.json\",\n+  \"id\": \"https://api.dev.nva.aws.unit.no/project/search?QUERY_PARAMS\",\n+  \"size\": 0,\n+  \"searchString\": \"title=reindeer\",\n+  \"processingTime\": 1000,\n+  \"firstRecord\": 0,\n   \"hits\": [\n     {\n-      \"cristin_project_id\": \"456789\",\n-      \"main_language\": \"en\",\n-      \"titles\": [\n+      \"id\": \"https://api.dev.nva.aws.unit.no/project/456789\",\n+      \"type\": \"Project\",\n+      \"identifier\": [\n         {\n-          \"title\": \"Example Title\",\n-          \"language\": \"en\"\n+          \"type\": \"CristinIdentifier\",\n+          \"value\": \"456789\"\n         }\n       ],\n-      \"participants\": [\n-        {\n-          \"cristinPersonId\": \"123456\",\n-          \"fullName\": \"Nordmann, Ola\"\n-        }\n-      ],\n-      \"institutions\": [\n-        {\n-          \"cristinInstitutionId\": \"1234\",\n-          \"language\": \"nb\"\n-        }\n-      ],\n-      \"fundings\": [\n-        {\n-          \"fundingSourceCode\": \"NFR\",\n-          \"projectCode\": \"654321\",\n-          \"names\": [\n-            {\n-              \"name\": \"Research Council of Norway (RCN)\",\n-              \"language\": \"en\"\n+      \"title\": \"Example Title\",\n+      \"language\": \"https://lexvo.org/id/iso639-3/nno\",\n+      \"startDate\": \"2018-11-01T00:00:00Z\",\n+      \"endDate\": \"2021-05-01T00:00:00Z\",\n+      \"coordinatingInstitution\": {\n+        \"id\": \"https://api.cristin.no/v2/institutions/1234\",\n+        \"type\": \"Organization\",\n+        \"name\": {\n+          \"en\": \"University\"\n+        }\n+      },\n+      \"contributors\": [\n+        {\n+          \"type\": \"ProjectManager\",\n+          \"identity\": {\n+            \"id\": \"https://api.cristin.no/v2/persons/123456\",\n+            \"type\": \"Person\",\n+            \"firstName\": \"Ola\",\n+            \"lastName\": \"Nordmann\"\n+          },\n+          \"affiliation\": {\n+            \"id\": \"https://api.cristin.no/v2/institutions/1234\",\n+            \"type\": \"Organization\",\n+            \"name\": {\n+              \"en\": \"University\"\n             }\n-          ]\n+          }\n         }\n       ]\n     },\n     {\n-      \"cristin_project_id\": \"456789\",\n-      \"main_language\": \"en\",\n-      \"titles\": [\n-        {\n-          \"title\": \"Example Title\",\n-          \"language\": \"en\"\n-        }\n-      ],\n-      \"participants\": [\n+      \"id\": \"https://api.dev.nva.aws.unit.no/project/456789\",\n+      \"type\": \"Project\",\n+      \"identifier\": [\n         {\n-          \"cristinPersonId\": \"123456\",\n-          \"fullName\": \"Nordmann, Ola\"\n+          \"type\": \"CristinIdentifier\",\n+          \"value\": \"456789\"\n         }\n       ],\n-      \"institutions\": [\n-        {\n-          \"cristinInstitutionId\": \"1234\",\n-          \"language\": \"nb\"\n-        }\n-      ],\n-      \"fundings\": [\n-        {\n-          \"fundingSourceCode\": \"NFR\",\n-          \"projectCode\": \"654321\",\n-          \"names\": [\n-            {\n-              \"name\": \"Research Council of Norway (RCN)\",\n-              \"language\": \"en\"\n+      \"title\": \"Example Title\",\n+      \"language\": \"https://lexvo.org/id/iso639-3/nno\",\n+      \"startDate\": \"2018-11-01T00:00:00Z\",\n+      \"endDate\": \"2021-05-01T00:00:00Z\",\n+      \"coordinatingInstitution\": {\n+        \"id\": \"https://api.cristin.no/v2/institutions/1234\",\n+        \"type\": \"Organization\",\n+        \"name\": {\n+          \"en\": \"University\"\n+        }\n+      },\n+      \"contributors\": [\n+        {\n+          \"type\": \"ProjectManager\",\n+          \"identity\": {\n+            \"id\": \"https://api.cristin.no/v2/persons/123456\",\n+            \"type\": \"Person\",\n+            \"firstName\": \"Ola\",\n+            \"lastName\": \"Nordmann\"\n+          },\n+          \"affiliation\": {\n+            \"id\": \"https://api.cristin.no/v2/institutions/1234\",\n+            \"type\": \"Organization\",\n+            \"name\": {\n+              \"en\": \"University\"\n             }\n-          ]\n+          }\n         }\n       ]\n     },\n     {\n-      \"cristin_project_id\": \"456789\",\n-      \"main_language\": \"en\",\n-      \"titles\": [\n+      \"id\": \"https://api.dev.nva.aws.unit.no/project/456789\",\n+      \"type\": \"Project\",\n+      \"identifier\": [\n         {\n-          \"title\": \"Example Title\",\n-          \"language\": \"en\"\n+          \"type\": \"CristinIdentifier\",\n+          \"value\": \"456789\"\n         }\n       ],\n-      \"participants\": [\n-        {\n-          \"cristinPersonId\": \"123456\",\n-          \"fullName\": \"Nordmann, Ola\"\n-        }\n-      ],\n-      \"institutions\": [\n-        {\n-          \"cristinInstitutionId\": \"1234\",\n-          \"language\": \"nb\"\n-        }\n-      ],\n-      \"fundings\": [\n-        {\n-          \"fundingSourceCode\": \"NFR\",\n-          \"projectCode\": \"654321\",\n-          \"names\": [\n-            {\n-              \"name\": \"Research Council of Norway (RCN)\",\n-              \"language\": \"en\"\n+      \"title\": \"Example Title\",\n+      \"language\": \"https://lexvo.org/id/iso639-3/nno\",\n+      \"startDate\": \"2018-11-01T00:00:00Z\",\n+      \"endDate\": \"2021-05-01T00:00:00Z\",\n+      \"coordinatingInstitution\": {\n+        \"id\": \"https://api.cristin.no/v2/institutions/1234\",\n+        \"type\": \"Organization\",\n+        \"name\": {\n+          \"en\": \"University\"\n+        }\n+      },\n+      \"contributors\": [\n+        {\n+          \"type\": \"ProjectManager\",\n+          \"identity\": {\n+            \"id\": \"https://api.cristin.no/v2/persons/123456\",\n+            \"type\": \"Person\",\n+            \"firstName\": \"Ola\",\n+            \"lastName\": \"Nordmann\"\n+          },\n+          \"affiliation\": {\n+            \"id\": \"https://api.cristin.no/v2/institutions/1234\",\n+            \"type\": \"Organization\",\n+            \"name\": {\n+              \"en\": \"University\"\n             }\n-          ]\n+          }\n         }\n       ]\n     },\n     {\n-      \"cristin_project_id\": \"456789\",\n-      \"main_language\": \"en\",\n-      \"titles\": [\n-        {\n-          \"title\": \"Example Title\",\n-          \"language\": \"en\"\n-        }\n-      ],\n-      \"participants\": [\n-        {\n-          \"cristinPersonId\": \"123456\",\n-          \"fullName\": \"Nordmann, Ola\"\n-        }\n-      ],\n-      \"institutions\": [\n+      \"id\": \"https://api.dev.nva.aws.unit.no/project/456789\",\n+      \"type\": \"Project\",\n+      \"identifier\": [\n         {\n-          \"cristinInstitutionId\": \"1234\",\n-          \"language\": \"nb\"\n+          \"type\": \"CristinIdentifier\",\n+          \"value\": \"456789\"\n         }\n       ],\n-      \"fundings\": [\n-        {\n-          \"fundingSourceCode\": \"NFR\",\n-          \"projectCode\": \"654321\",\n-          \"names\": [\n-            {\n-              \"name\": \"Research Council of Norway (RCN)\",\n-              \"language\": \"en\"\n+      \"title\": \"Example Title\",\n+      \"language\": \"https://lexvo.org/id/iso639-3/nno\",\n+      \"startDate\": \"2018-11-01T00:00:00Z\",\n+      \"endDate\": \"2021-05-01T00:00:00Z\",\n+      \"coordinatingInstitution\": {\n+        \"id\": \"https://api.cristin.no/v2/institutions/1234\",\n+        \"type\": \"Organization\",\n+        \"name\": {\n+          \"en\": \"University\"\n+        }\n+      },\n+      \"contributors\": [\n+        {\n+          \"type\": \"ProjectManager\",\n+          \"identity\": {\n+            \"id\": \"https://api.cristin.no/v2/persons/123456\",\n+            \"type\": \"Person\",\n+            \"firstName\": \"Ola\",\n+            \"lastName\": \"Nordmann\"\n+          },\n+          \"affiliation\": {\n+            \"id\": \"https://api.cristin.no/v2/institutions/1234\",\n+            \"type\": \"Organization\",\n+            \"name\": {\n+              \"en\": \"University\"\n             }\n-          ]\n+          }\n         }\n       ]\n     },\n     {\n-      \"cristin_project_id\": \"456789\",\n-      \"main_language\": \"en\",\n-      \"titles\": [\n-        {\n-          \"title\": \"Example Title\",\n-          \"language\": \"en\"\n-        }\n-      ],\n-      \"participants\": [\n+      \"id\": \"https://api.dev.nva.aws.unit.no/project/456789\",\n+      \"type\": \"Project\",\n+      \"identifier\": [\n         {\n-          \"cristinPersonId\": \"123456\",\n-          \"fullName\": \"Nordmann, Ola\"\n+          \"type\": \"CristinIdentifier\",\n+          \"value\": \"456789\"\n         }\n       ],\n-      \"institutions\": [\n-        {\n-          \"cristinInstitutionId\": \"1234\",\n-          \"language\": \"nb\"\n-        }\n-      ],\n-      \"fundings\": [\n-        {\n-          \"fundingSourceCode\": \"NFR\",\n-          \"projectCode\": \"654321\",\n-          \"names\": [\n-            {\n-              \"name\": \"Research Council of Norway (RCN)\",\n-              \"language\": \"en\"\n+      \"title\": \"Example Title\",\n+      \"language\": \"https://lexvo.org/id/iso639-3/nno\",\n+      \"startDate\": \"2018-11-01T00:00:00Z\",\n+      \"endDate\": \"2021-05-01T00:00:00Z\",\n+      \"coordinatingInstitution\": {\n+        \"id\": \"https://api.cristin.no/v2/institutions/1234\",\n+        \"type\": \"Organization\",\n+        \"name\": {\n+          \"en\": \"University\"\n+        }\n+      },\n+      \"contributors\": [\n+        {\n+          \"type\": \"ProjectManager\",\n+          \"identity\": {\n+            \"id\": \"https://api.cristin.no/v2/persons/123456\",\n+            \"type\": \"Person\",\n+            \"firstName\": \"Ola\",\n+            \"lastName\": \"Nordmann\"\n+          },\n+          \"affiliation\": {\n+            \"id\": \"https://api.cristin.no/v2/institutions/1234\",\n+            \"type\": \"Organization\",\n+            \"name\": {\n+              \"en\": \"University\"\n             }\n-          ]\n+          }\n         }\n       ]\n     }"
  },
  {
    "sha": "6d19fa97ad67672cf03bd81d4b5da0987e8924f8",
    "filename": "src/test/resources/api_response_non_enriched_projects.json",
    "status": "modified",
    "additions": 52,
    "deletions": 35,
    "changes": 87,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/resources/api_response_non_enriched_projects.json",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/resources/api_response_non_enriched_projects.json",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/test/resources/api_response_non_enriched_projects.json?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -1,63 +1,80 @@\n {\n-  \"numberOfResults\": 5,\n+  \"@context\": \"https://example.org/search-api-context.json\",\n+  \"id\": \"https://api.dev.nva.aws.unit.no/project/search?QUERY_PARAMS\",\n+  \"size\": 0,\n+  \"searchString\": \"title=reindeer\",\n+  \"processingTime\": 1000,\n+  \"firstRecord\": 0,\n   \"hits\": [\n     {\n-      \"cristin_project_id\": \"555666\",\n-      \"main_language\": \"en\",\n-      \"titles\": [\n+      \"id\": \"https://api.dev.nva.aws.unit.no/project/555666\",\n+      \"type\": \"Project\",\n+      \"identifier\": [\n         {\n-          \"title\": \"Opportunities and Challenges for Integrating Sámi Reindeer\",\n-          \"language\": \"en\"\n+          \"type\": \"CristinIdentifier\",\n+          \"value\": \"555666\"\n         }\n-      ]\n+      ],\n+      \"title\": \"Opportunities and Challenges for Integrating Sámi Reindeer\",\n+      \"language\": \"https://lexvo.org/id/iso639-3/nno\"\n     },\n     {\n-      \"cristin_project_id\": \"999888\",\n-      \"main_language\": \"no\",\n-      \"titles\": [\n+      \"id\": \"https://api.dev.nva.aws.unit.no/project/999888\",\n+      \"type\": \"Project\",\n+      \"identifier\": [\n         {\n-          \"title\": \"Absorption and metabolism of heavy metals\",\n-          \"language\": \"en\"\n-        },\n+          \"type\": \"CristinIdentifier\",\n+          \"value\": \"999888\"\n+        }\n+      ],\n+      \"title\": \"Opptak og omsetning av tungmetall\",\n+      \"language\": \"https://lexvo.org/id/iso639-3/nno\",\n+      \"alternativeTitles\": [\n         {\n-          \"title\": \"Opptak og omsetning av tungmetall\",\n-          \"language\": \"no\"\n+          \"en\": \"Absorption and metabolism of heavy metals\"\n         }\n       ]\n     },\n     {\n-      \"cristin_project_id\": \"111333\",\n-      \"main_language\": \"no\",\n-      \"titles\": [\n+      \"id\": \"https://api.dev.nva.aws.unit.no/project/111333\",\n+      \"type\": \"Project\",\n+      \"identifier\": [\n         {\n-          \"title\": \"En studie av reindriftens sårbarhet\",\n-          \"language\": \"no\"\n-        },\n+          \"type\": \"CristinIdentifier\",\n+          \"value\": \"111333\"\n+        }\n+      ],\n+      \"title\": \"En studie av reindriftens sårbarhet\",\n+      \"language\": \"https://lexvo.org/id/iso639-3/nno\",\n+      \"alternativeTitles\": [\n         {\n-          \"title\": \"Reindeer Herders' Vulnerability Network Study\",\n-          \"language\": \"en\"\n+          \"en\": \"Reindeer Herders' Vulnerability Network Study\"\n         }\n       ]\n     },\n     {\n-      \"cristin_project_id\": \"222444\",\n-      \"main_language\": \"no\",\n-      \"titles\": [\n+      \"id\": \"https://api.dev.nva.aws.unit.no/project/222444\",\n+      \"type\": \"Project\",\n+      \"identifier\": [\n         {\n-          \"title\": \"Predicting effects of climate change on Svalbard\",\n-          \"language\": \"no\"\n+          \"type\": \"CristinIdentifier\",\n+          \"value\": \"222444\"\n         }\n-      ]\n+      ],\n+      \"title\": \"Predicting effects of climate change on Svalbard\",\n+      \"language\": \"https://lexvo.org/id/iso639-3/nno\"\n     },\n     {\n-      \"cristin_project_id\": \"444222\",\n-      \"main_language\": \"en\",\n-      \"titles\": [\n+      \"id\": \"https://api.dev.nva.aws.unit.no/project/444222\",\n+      \"type\": \"Project\",\n+      \"identifier\": [\n         {\n-          \"title\": \"PREDICTING EFFECTS OF CLIMATE CHANGE\",\n-          \"language\": \"en\"\n+          \"type\": \"CristinIdentifier\",\n+          \"value\": \"444222\"\n         }\n-      ]\n+      ],\n+      \"title\": \"PREDICTING EFFECTS OF CLIMATE CHANGE\",\n+      \"language\": \"https://lexvo.org/id/iso639-3/nno\"\n     }\n   ]\n }\n\\ No newline at end of file"
  },
  {
    "sha": "b451baf5a1a45327d1dc215582c544a7e69c57d8",
    "filename": "src/test/resources/api_response_one_cristin_project_to_nva_project.json",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/resources/api_response_one_cristin_project_to_nva_project.json",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/src/test/resources/api_response_one_cristin_project_to_nva_project.json",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/src/test/resources/api_response_one_cristin_project_to_nva_project.json?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -1,6 +1,6 @@\n {\n-  \"@context\": \"https://example.org/search-api-context.json\",\n-  \"id\": \"https://sandbox.nva.unit.no/project/456789\",\n+  \"@context\": \"https://example.org/project-context.json\",\n+  \"id\": \"https://api.dev.nva.aws.unit.no/project/456789\",\n   \"type\": \"Project\",\n   \"identifier\": [\n     {\n@@ -10,9 +10,6 @@\n   ],\n   \"title\": \"Example Title\",\n   \"language\": \"https://lexvo.org/id/iso639-3/nno\",\n-  \"alternativeTitles\": [\n-    {}\n-  ],\n   \"startDate\": \"2018-11-01T00:00:00Z\",\n   \"endDate\": \"2021-05-01T00:00:00Z\",\n   \"coordinatingInstitution\": {"
  },
  {
    "sha": "7035e5e774a17d0ac6bb4a2695eb247b7c63c1db",
    "filename": "template.yaml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/blob/0c3c125dc4d5c9f8adf648c1c87649810be53188/template.yaml",
    "raw_url": "https://github.com/BIBSYSDEV/nva-cristin-projects/raw/0c3c125dc4d5c9f8adf648c1c87649810be53188/template.yaml",
    "contents_url": "https://api.github.com/repos/BIBSYSDEV/nva-cristin-projects/contents/template.yaml?ref=0c3c125dc4d5c9f8adf648c1c87649810be53188",
    "patch": "@@ -59,6 +59,7 @@ Resources:\n         Variables:\n           ALLOWED_ORIGIN: '*'\n           CRISTIN_API_HOST: 'api.cristin.no'\n+          BASE_URL: 'https://api.dev.nva.aws.unit.no/project'\n       Handler: no.unit.nva.cristin.projects.FetchCristinProjects::handleRequest\n       Runtime: java11\n       MemorySize: 512"
  }
]
