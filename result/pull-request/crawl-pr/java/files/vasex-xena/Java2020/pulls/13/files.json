[
  {
    "sha": "9191f41b5a975e43e3efd04bd1d7008eab67bd47",
    "filename": "src/java2/hw4/ChatFrame.java",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/vasex-xena/Java2020/blob/270fdfc12ca058fd62f5b35431ba9ecf57e899a8/src/java2/hw4/ChatFrame.java",
    "raw_url": "https://github.com/vasex-xena/Java2020/raw/270fdfc12ca058fd62f5b35431ba9ecf57e899a8/src/java2/hw4/ChatFrame.java",
    "contents_url": "https://api.github.com/repos/vasex-xena/Java2020/contents/src/java2/hw4/ChatFrame.java?ref=270fdfc12ca058fd62f5b35431ba9ecf57e899a8",
    "patch": "@@ -0,0 +1,73 @@\n+package java2.hw4;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+\n+public class ChatFrame extends JFrame {\n+    public ChatFrame() {\n+        setTitle(\"Custom chat\");\n+        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n+        setBounds(200,200,800,600);\n+        setVisible(true);\n+\n+        setLayout(new BorderLayout());\n+\n+        JPanel chatArea = new JPanel();\n+        chatArea.setLayout(new BorderLayout());\n+        JTextPane  textArea = new JTextPane ();\n+        chatArea.add(textArea, BorderLayout.CENTER);\n+        textArea.setEditable(false);\n+        StringBuilder sb = new StringBuilder();\n+\n+        JPanel inputField = new JPanel();\n+        inputField.setLayout(new BorderLayout());\n+        JTextField textField = new JTextField();\n+        textField.addKeyListener(new KeyListener() {\n+            @Override\n+            public void keyTyped(KeyEvent e) {\n+\n+            }\n+\n+            @Override\n+            public void keyPressed(KeyEvent e) {\n+                if (e.getKeyCode() == 10) {\n+\n+                }\n+            }\n+\n+            @Override\n+            public void keyReleased(KeyEvent e) {\n+                if (e.getKeyCode()==10){\n+                    sb.append(textField.getText());\n+                    sb.append(\"\\n\");\n+                    //                   System.out.print(sb.toString());\n+                    textArea.setText(sb.toString());\n+                    textField.setText(\"\");\n+                }\n+            }\n+        });\n+        inputField.add(textField, BorderLayout.CENTER);\n+        JButton enter = new JButton(\"ENTER\");\n+        enter.addActionListener(new AbstractAction() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                sb.append(textField.getText());\n+                sb.append(\"\\n\");\n+                textArea.setText(sb.toString());\n+                textField.setText(\"\");\n+            }\n+        });\n+        inputField.add(enter, BorderLayout.LINE_END);\n+\n+        add(chatArea, BorderLayout.CENTER);\n+        add(inputField, BorderLayout.PAGE_END);\n+    }\n+\n+\n+\n+    }\n+\n+"
  },
  {
    "sha": "b43a2f2b8fea16ba7da2b6cbe9a28250da5e164a",
    "filename": "src/java2/hw4/Main.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/vasex-xena/Java2020/blob/270fdfc12ca058fd62f5b35431ba9ecf57e899a8/src/java2/hw4/Main.java",
    "raw_url": "https://github.com/vasex-xena/Java2020/raw/270fdfc12ca058fd62f5b35431ba9ecf57e899a8/src/java2/hw4/Main.java",
    "contents_url": "https://api.github.com/repos/vasex-xena/Java2020/contents/src/java2/hw4/Main.java?ref=270fdfc12ca058fd62f5b35431ba9ecf57e899a8",
    "patch": "@@ -0,0 +1,15 @@\n+package java2.hw4;\n+\n+public class Main {\n+    public static void main(String[] args) {\n+\n+        /*\n+        * Создать окно для клиентской части чата: большое текстовое поле для отображения переписки в центре окна.\n+        * Однострочное текстовое поле для ввода сообщений и кнопка для отсылки сообщений на нижней панели.\n+        * Сообщение должно отсылаться либо по нажатию кнопки на форме, либо по нажатию кнопки Enter.\n+        * При «отсылке» сообщение перекидывается из нижнего поля в центральное.\n+         */\n+\n+        new ChatFrame();\n+    }\n+}"
  },
  {
    "sha": "82f360470514e1cc67567118dd69b60949c53610",
    "filename": "src/java2/hw5/Main.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/vasex-xena/Java2020/blob/270fdfc12ca058fd62f5b35431ba9ecf57e899a8/src/java2/hw5/Main.java",
    "raw_url": "https://github.com/vasex-xena/Java2020/raw/270fdfc12ca058fd62f5b35431ba9ecf57e899a8/src/java2/hw5/Main.java",
    "contents_url": "https://api.github.com/repos/vasex-xena/Java2020/contents/src/java2/hw5/Main.java?ref=270fdfc12ca058fd62f5b35431ba9ecf57e899a8",
    "patch": "@@ -0,0 +1,45 @@\n+package java2.hw5;\n+\n+public class Main {\n+    public static void main(String[] args) {\n+        singleTread();\n+        doubleTread();\n+        doubleTreadOpt();\n+    }\n+\n+    static void singleTread (){\n+        TestArray arraySingle = new TestArray();\n+        long singleStart = System.currentTimeMillis();\n+        Float[] a1 = arraySingle.doCalculations();\n+        long singleEnd = System.currentTimeMillis();\n+        long singleTime = singleEnd-singleStart;\n+//        for (float value: a1) {\n+//            System.out.print(value + \"  \");\n+//        }\n+        System.out.println(\"Single Tread time: \" + singleTime);\n+    }\n+\n+    static void doubleTread (){\n+        TestArray arrayDouble = new TestArray();\n+        long singleStart = System.currentTimeMillis();\n+        Float[] a1 = arrayDouble.doThreadCalculations();\n+        long singleEnd = System.currentTimeMillis();\n+        long singleTime = singleEnd-singleStart;\n+//        for (int i=1000; i<a1.length; i+=1000000) {\n+//            System.out.print(a1[i] + \"  \");\n+//        }\n+        System.out.println(\"Double Tread time: \" + singleTime);\n+    }\n+\n+    static void doubleTreadOpt (){\n+        TestArray arrayDoubleOpt = new TestArray();\n+        long singleStart = System.currentTimeMillis();\n+        Float[] a1 = arrayDoubleOpt.doThreadCalculationsOpt();\n+        long singleEnd = System.currentTimeMillis();\n+        long singleTime = singleEnd-singleStart;\n+//        for (int i=1000; i<a1.length; i+=1000000) {\n+//            System.out.print(a1[i] + \"  \");\n+//        }\n+        System.out.println(\"Double optimised Tread time: \" + singleTime);\n+    }\n+}"
  },
  {
    "sha": "74a29ebd1942b30ebd61ddecc76d651f4c8cbfdd",
    "filename": "src/java2/hw5/TestArray.java",
    "status": "added",
    "additions": 108,
    "deletions": 0,
    "changes": 108,
    "blob_url": "https://github.com/vasex-xena/Java2020/blob/270fdfc12ca058fd62f5b35431ba9ecf57e899a8/src/java2/hw5/TestArray.java",
    "raw_url": "https://github.com/vasex-xena/Java2020/raw/270fdfc12ca058fd62f5b35431ba9ecf57e899a8/src/java2/hw5/TestArray.java",
    "contents_url": "https://api.github.com/repos/vasex-xena/Java2020/contents/src/java2/hw5/TestArray.java?ref=270fdfc12ca058fd62f5b35431ba9ecf57e899a8",
    "patch": "@@ -0,0 +1,108 @@\n+package java2.hw5;\n+\n+import java.util.Arrays;\n+\n+public class TestArray {\n+    private static final int size = 10000000;\n+    private static final int h= size/2;\n+    private  Float[] myArray = new Float[size];\n+\n+\n+    public TestArray() {\n+        Arrays.fill(myArray, 1f);\n+    }\n+\n+    public Float[] doCalculations (){\n+        for (int i=0; i< myArray.length; i++){\n+              myArray[i]=(float)(myArray[i]*Math.sin(0.2f+ i / 5f)*Math.cos(0.2f+i / 5f)*Math.cos(0.4f+i / 2f));\n+        }\n+        return myArray;\n+    }\n+\n+    public  Float[] doThreadCalculations (){\n+        Thread t1 = new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                firstThreadCalculations();\n+            }\n+        });\n+        t1.start();\n+        Thread t2 = new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                secondThreadCalculations();\n+            }\n+        });\n+        t2.start();\n+        try {\n+            t1.join();\n+            t2.join();\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+        return myArray;\n+    }\n+\n+    public Float[] doThreadCalculationsOpt (){\n+        Thread t1 = new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                firstThreadCalculationsOpt();\n+            }\n+        });\n+        t1.start();\n+        Thread t2 = new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                secondThreadCalculationsOpt();\n+            }\n+        });\n+        t2.start();\n+        try {\n+            t1.join();\n+            t2.join();\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+        return myArray;\n+    }\n+\n+\n+    private   void firstThreadCalculations (){\n+                Float[] firstPart= new Float[h];\n+                System.arraycopy(myArray,0, firstPart, 0, h);\n+                for (int i=0; i< firstPart.length; i++){\n+                    firstPart[i]=(float)(firstPart[i]*Math.sin(0.2f+ i / 5f)*Math.cos(0.2f+i / 5f)*Math.cos(0.4f+i / 2f));\n+                }\n+                System.arraycopy(firstPart,0, myArray, 0, h);\n+    }\n+\n+    private  void secondThreadCalculations (){\n+                Float[] secondPart= new Float[h];\n+                System.arraycopy(myArray,h, secondPart, 0, h);\n+                for (int i=0; i< secondPart.length; i++){\n+                    secondPart[i]=(float)(secondPart[i]*Math.sin(0.2f+ i / 5f)*Math.cos(0.2f+i / 5f)*Math.cos(0.4f+i / 2f));\n+                }\n+                System.arraycopy(secondPart,0, myArray, h, h);\n+    }\n+\n+\n+    private  void firstThreadCalculationsOpt (){\n+  //              float[] firstPart= new float[h];\n+  //              System.arraycopy(myArray,0, firstPart, 0, h);\n+                for (int i=0; i< myArray.length/2; i++){\n+                    myArray[i]=(float)(myArray[i]*Math.sin(0.2f+ i / 5f)*Math.cos(0.2f+i / 5f)*Math.cos(0.4f+i / 2f));\n+                }\n+  //              System.arraycopy(firstPart,0, myArray, 0, h);\n+    }\n+\n+    private  void secondThreadCalculationsOpt (){\n+//                float[] secondPart= new float[h];\n+//                System.arraycopy(myArray,h, secondPart, 0, h);\n+                for (int i=myArray.length/2; i< myArray.length; i++){\n+                    myArray[i]=(float)(myArray[i]*Math.sin(0.2f+ i / 5f)*Math.cos(0.2f+i / 5f)*Math.cos(0.4f+i / 2f));\n+                }\n+//                System.arraycopy(secondPart,0, myArray, h, h);\n+    }\n+\n+}"
  }
]
