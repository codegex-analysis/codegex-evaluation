[
  {
    "sha": "2886684dcc3697524cbcb97dd2033d73c42f2642",
    "filename": "src/main/java/ru/geekbrains/market/aop/AppLoggingAspect.java",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/aop/AppLoggingAspect.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/aop/AppLoggingAspect.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/aop/AppLoggingAspect.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,86 @@\n+package ru.geekbrains.market.aop;\n+\n+import lombok.extern.log4j.Log4j;\n+import lombok.extern.log4j.Log4j2;\n+import org.aspectj.lang.JoinPoint;\n+import org.aspectj.lang.ProceedingJoinPoint;\n+import org.aspectj.lang.annotation.*;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.PostConstruct;\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+@Aspect\n+@Component\n+@Log4j\n+public class AppLoggingAspect {\n+    private List<String> methodSignatureList;\n+    private Map<String, Long> map;\n+    private long authDuration;\n+    private long cartDuration;\n+    private long orderDuration;\n+    private long productDuration;\n+    private long userDuration;\n+\n+    @PostConstruct\n+    public void init() {\n+        methodSignatureList = new ArrayList<>();\n+        map = new HashMap<>();\n+    }\n+\n+    @Pointcut(\"execution(public * ru.geekbrains.market.beans.Cart.*(..))\") // pointcut expression\n+    public void cartMethodTrackerPointcut() {\n+    }\n+\n+    @Pointcut(\"execution(public * ru.geekbrains.market.service.*.*(..))\") // pointcut expression\n+    public void controllersMethodTrackerPointcut() {\n+    }\n+\n+    @Pointcut(\"execution(public * ru.geekbrains.market.repository.*.*(..))\") // pointcut expression\n+    public void repositoriesMethodTrackerPointcut() {\n+    }\n+\n+    @Pointcut(\"cartMethodTrackerPointcut()  || controllersMethodTrackerPointcut() || repositoriesMethodTrackerPointcut()\")\n+    public void mostUsableMethodTrackerPointcut() {\n+    }\n+\n+    @After(\"mostUsableMethodTrackerPointcut()\") // pointcut expression\n+    public void beforeAnyMethodInProject(JoinPoint joinPoint) {\n+        String m = joinPoint.getSignature().toString();\n+        methodSignatureList.add(m.toString());\n+        methodSignatureList.stream()// collectors (java 8)\n+                .collect(Collectors.groupingBy(s -> s, Collectors.counting()))\n+                .entrySet().stream().sorted((e1, e2) -> e2.getValue().intValue() - e1.getValue().intValue())\n+                .limit(1)\n+                .findFirst()\n+                .ifPresent(w -> log.info(\"most usable method \" + w.getKey() + \" with count \" + w.getValue()));\n+    }\n+\n+    @Around(\"execution(public * ru.geekbrains.market.controller.*.*(..))\")\n+    public Object methodProfiling(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {\n+        long begin = System.currentTimeMillis();\n+        Object out = proceedingJoinPoint.proceed();\n+        long end = System.currentTimeMillis();\n+        if (proceedingJoinPoint.getSignature().toString().contains(\"Auth\")) {\n+            authDuration += end - begin;\n+            map.put(\"auth\", authDuration);\n+        } else if (proceedingJoinPoint.getSignature().toString().contains(\"Cart\")) {\n+            cartDuration += end - begin;\n+            map.put(\"cart\", cartDuration);\n+        } else if (proceedingJoinPoint.getSignature().toString().contains(\"Order\")) {\n+            orderDuration += end - begin;\n+            map.put(\"order\", orderDuration);\n+        } else if (proceedingJoinPoint.getSignature().toString().contains(\"Product\")) {\n+            productDuration += end - begin;\n+            map.put(\"product\", productDuration);\n+        } else {\n+            userDuration += end - begin;\n+            map.put(\"user\", userDuration);\n+        }\n+        Object maxEntry = Collections.max(map.entrySet(), Map.Entry.comparingByValue()).getKey();\n+        Object maxValue = Collections.max(map.entrySet(), Map.Entry.comparingByValue()).getValue();\n+        log.info(\"max time for methods in controller - \" + maxEntry + \"Controller  with time \" + maxValue);\n+        return out;\n+    }\n+}"
  },
  {
    "sha": "86d3e3849e15cf872fdfeb90576df1d646dc078e",
    "filename": "src/main/java/ru/geekbrains/market/configs/SecurityConfig.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/configs/SecurityConfig.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/configs/SecurityConfig.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/configs/SecurityConfig.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -22,7 +22,7 @@ protected void configure(HttpSecurity http) throws Exception {\n         http\n                 .csrf().disable()\n                 .authorizeRequests()\n-                .antMatchers(\"/api/v1/**\").permitAll()\n+                .antMatchers(\"/api/v1/orders/**\").authenticated()\n                 .antMatchers(\"/h2-console/**\").permitAll()\n                 .anyRequest().permitAll()\n                 .and()"
  },
  {
    "sha": "609dbf97bb0ad1612b63fdcfbc848443a0a59495",
    "filename": "src/main/java/ru/geekbrains/market/configs/WebServiceConfig.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/configs/WebServiceConfig.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/configs/WebServiceConfig.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/configs/WebServiceConfig.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,41 @@\n+package ru.geekbrains.market.configs;\n+\n+import org.springframework.boot.web.servlet.ServletRegistrationBean;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.ws.config.annotation.EnableWs;\n+import org.springframework.ws.config.annotation.WsConfigurerAdapter;\n+import org.springframework.ws.transport.http.MessageDispatcherServlet;\n+import org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition;\n+import org.springframework.xml.xsd.SimpleXsdSchema;\n+import org.springframework.xml.xsd.XsdSchema;\n+\n+@EnableWs\n+@Configuration\n+public class WebServiceConfig extends WsConfigurerAdapter {\n+    @Bean\n+    public ServletRegistrationBean messageDispatcherServlet(ApplicationContext applicationContext) {\n+        MessageDispatcherServlet servlet = new MessageDispatcherServlet();\n+        servlet.setApplicationContext(applicationContext);\n+        servlet.setTransformWsdlLocations(true);\n+        return new ServletRegistrationBean(servlet, \"/ws/*\");\n+    }\n+\n+    // http://localhost:8189/market/ws/products.wsdl\n+    @Bean(name = \"products\")\n+    public DefaultWsdl11Definition studentsWsdl11Definition(XsdSchema productsSchema) {\n+        DefaultWsdl11Definition wsdl11Definition = new DefaultWsdl11Definition();\n+        wsdl11Definition.setPortTypeName(\"ProductsPort\");\n+        wsdl11Definition.setLocationUri(\"/ws\");\n+        wsdl11Definition.setTargetNamespace(\"http://www.evgeniiboznyakov.com/spring/ws/products\");\n+        wsdl11Definition.setSchema(productsSchema);\n+        return wsdl11Definition;\n+    }\n+\n+    @Bean\n+    public XsdSchema productsSchema() {\n+        return new SimpleXsdSchema(new ClassPathResource(\"products.xsd\"));\n+    }\n+}"
  },
  {
    "sha": "cdfd3d98f603104d3d1d0c88a8db395715e92c59",
    "filename": "src/main/java/ru/geekbrains/market/controller/CartController.java",
    "status": "modified",
    "additions": 6,
    "deletions": 5,
    "changes": 11,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/controller/CartController.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/controller/CartController.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/controller/CartController.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -18,21 +18,22 @@ public CartDto getCart() {\n     }\n \n     @GetMapping(\"/add/{id}\")\n-    public void addToCart(@PathVariable Long id){\n+    public void addToCart(@PathVariable Long id) {\n         cart.addToCart(id);\n     }\n+\n     @GetMapping(\"/clear\")\n-    public void clearCart(){\n+    public void clearCart() {\n         cart.clear();\n     }\n \n     @GetMapping(\"/change_quantity/{p}/{i}\")\n-    public void updateQuantity(@PathVariable int p,@PathVariable int i){\n-        cart.updateQuantity(p,i);\n+    public void updateQuantity(@PathVariable int p, @PathVariable int i) {\n+        cart.updateQuantity(p, i);\n     }\n \n     @GetMapping(\"/product/{p}\")\n-    public void deleteFromCart(@PathVariable int p){\n+    public void deleteFromCart(@PathVariable int p) {\n         cart.deleteProduct(p);\n     }\n }"
  },
  {
    "sha": "60ddffba624fef55cf3013fdaf11e387c9844185",
    "filename": "src/main/java/ru/geekbrains/market/controller/OrderController.java",
    "status": "modified",
    "additions": 10,
    "deletions": 3,
    "changes": 13,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/controller/OrderController.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/controller/OrderController.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/controller/OrderController.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -5,6 +5,7 @@\n import org.springframework.web.bind.annotation.*;\n import ru.geekbrains.market.beans.OrderInfo;\n import ru.geekbrains.market.dto.OrderDto;\n+import ru.geekbrains.market.entity.Order;\n import ru.geekbrains.market.entity.User;\n import ru.geekbrains.market.exception_handling.ResourceNotFoundException;\n import ru.geekbrains.market.service.OrderService;\n@@ -22,11 +23,17 @@\n     private final OrderService orderService;\n     private final UserService userService;\n \n-    @PostMapping(\"/create\")\n+    @PostMapping\n     @ResponseStatus(HttpStatus.CREATED)\n-    public void createOrderFromCart(Principal principal, @RequestBody OrderInfo orderInfo) {\n+    public OrderDto createOrderFromCart(Principal principal,  @RequestBody OrderInfo orderInfo) {\n         User user = userService.findByUsername(principal.getName()).orElseThrow(() -> new ResourceNotFoundException(\"User not found\"));\n-        orderService.createFromUserCart(user, orderInfo);\n+        Order order = orderService.createFromUserCart(user, orderInfo);\n+        return new OrderDto(order);\n+    }\n+    @GetMapping(\"/{id}\")\n+    public OrderDto getOrderById(@PathVariable Long id) {\n+        Order order = orderService.findById(id).orElseThrow(() -> new ResourceNotFoundException(\"Order not found\"));\n+        return new OrderDto(order);\n     }\n \n     @GetMapping"
  },
  {
    "sha": "748a9c7362388ef140ae694207a8660b6afe68b3",
    "filename": "src/main/java/ru/geekbrains/market/controller/StudentEndpoint.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/controller/StudentEndpoint.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/controller/StudentEndpoint.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/controller/StudentEndpoint.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,57 @@\n+package ru.geekbrains.market.controller;\n+\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.ws.server.endpoint.annotation.Endpoint;\n+import org.springframework.ws.server.endpoint.annotation.PayloadRoot;\n+import org.springframework.ws.server.endpoint.annotation.RequestPayload;\n+import org.springframework.ws.server.endpoint.annotation.ResponsePayload;\n+import ru.geekbrains.market.service.ProductServiceImpl;\n+import ru.geekbrains.market.soap.GetAllProductsRequest;\n+import ru.geekbrains.market.soap.GetAllProductsResponse;\n+import ru.geekbrains.market.soap.GetProductByIdRequest;\n+import ru.geekbrains.market.soap.GetProductByIdResponse;\n+\n+@Endpoint\n+@RequiredArgsConstructor\n+public class StudentEndpoint {\n+    private static final String NAMESPACE_URI = \"http://www.evgeniiboznyakov.com/spring/ws/products\";\n+    private final ProductServiceImpl productService;\n+\n+    @PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getProductByIdRequest\")\n+    @ResponsePayload\n+    public GetProductByIdResponse getProductById(@RequestPayload GetProductByIdRequest request) {\n+        GetProductByIdResponse response = new GetProductByIdResponse();\n+        response.setProducts(productService.getById(request.getId()));\n+        return response;\n+    }\n+\n+ /*   Пример запроса: POST http://localhost:8189/market/ws\n+  <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:f=\"http://www.evgeniiboznyakov.com/spring/ws/products\">\n+            <soapenv:Header/>\n+            <soapenv:Body>\n+                <f:getProductByTitleRequest>\n+                <f:name>Boots</f:name>\n+                </f:getProductByTitleRequest>\n+            </soapenv:Body>\n+        </soapenv:Envelope>*/\n+\n+    /*\n+        Пример запроса: POST http://localhost:8189/market/ws\n+\n+       <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:f=\"http://www.evgeniiboznyakov.com/spring/ws/products\">\n+            <soapenv:Header/>\n+            <soapenv:Body>\n+                <f:getAllProductsRequest/>\n+            </soapenv:Body>\n+        </soapenv:Envelope>\n+     */\n+\n+    @PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getAllProductsRequest\")\n+    @ResponsePayload\n+    public GetAllProductsResponse getAllProducts(@RequestPayload GetAllProductsRequest request) {\n+        GetAllProductsResponse response = new GetAllProductsResponse();\n+        productService.getAllProductsSoap().forEach(response.getProducts()::add);\n+        return response;\n+    }\n+}"
  },
  {
    "sha": "82342dada0c769cf810ff729ca089f9108360c30",
    "filename": "src/main/java/ru/geekbrains/market/controller/UserController.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/controller/UserController.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/controller/UserController.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/controller/UserController.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -8,16 +8,19 @@\n import ru.geekbrains.market.exception_handling.MarketError;\n import ru.geekbrains.market.service.UserService;\n \n+import javax.persistence.EntityManager;\n+\n @RestController\n @RequestMapping(\"/api/v1/user\")\n @RequiredArgsConstructor\n public class UserController {\n     private final UserService userService;\n \n+\n     @PostMapping\n     public ResponseEntity<?> save(@RequestBody User user) {\n-        if (userService.findByUsername(user.getUsername()).isPresent() ||\n-        userService.findByEmail(user.getEmail()).isPresent()) {\n+\n+        if (userService.findByUsernameAndEmail(user.getUsername(),user.getEmail()).isPresent()){\n             return new ResponseEntity<>(new MarketError(HttpStatus.CONFLICT.value(), \"This user already exist\"), HttpStatus.CONFLICT);\n         } else {\n             userService.saveUser(user);"
  },
  {
    "sha": "596e8237f2ce5a2ff162c2d137dcfbe6288f3ce7",
    "filename": "src/main/java/ru/geekbrains/market/repository/ProductRepository.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/repository/ProductRepository.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/repository/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/repository/ProductRepository.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -2,10 +2,15 @@\n \n import org.springframework.data.jpa.repository.JpaRepository;\n import org.springframework.data.jpa.repository.JpaSpecificationExecutor;\n+import org.springframework.data.jpa.repository.Query;\n import org.springframework.stereotype.Repository;\n import ru.geekbrains.market.entity.Product;\n \n+import java.util.Optional;\n+\n \n @Repository\n public interface ProductRepository extends JpaRepository<Product,Long> , JpaSpecificationExecutor<Product> {\n+    @Query(\"select s from Product s where s.id = ?1\")\n+    Optional<Product> findById(int id);\n }"
  },
  {
    "sha": "cdce9f18cd0b3e35484b5ba2f6065fb8d98cf8cf",
    "filename": "src/main/java/ru/geekbrains/market/repository/UserRepository.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/repository/UserRepository.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/repository/UserRepository.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/repository/UserRepository.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -10,5 +10,5 @@\n @Repository\n public interface UserRepository extends JpaRepository<User, Long> {\n     Optional<User> findByUsername(String username);\n-    Optional<User> findByEmail(String email);\n+    Optional<User> findByUsernameAndEmail(String username,String email);\n }"
  },
  {
    "sha": "fa72b733bf3871bd2fcc691a0d10ccd403c310cc",
    "filename": "src/main/java/ru/geekbrains/market/repository/specification/ProductSpecifications.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/repository/specification/ProductSpecifications.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/repository/specification/ProductSpecifications.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/repository/specification/ProductSpecifications.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -6,11 +6,11 @@\n \n public class ProductSpecifications {\n     private static Specification<Product> priceGreaterOrEqualsThan(int minCost) {\n-        return (    Specification<Product>) (root, criteriaQuery, criteriaBuilder) -> criteriaBuilder.greaterThanOrEqualTo(root.get(\"cost\"), minCost);\n+        return (    Specification<Product>) (root, criteriaQuery, criteriaBuilder) -> criteriaBuilder.greaterThanOrEqualTo(root.get(\"price\"), minCost);\n     }\n \n     private static Specification<Product> priceLesserOrEqualsThan(int maxCost) {\n-        return (Specification<Product>) (root, criteriaQuery, criteriaBuilder) -> criteriaBuilder.lessThanOrEqualTo(root.get(\"cost\"), maxCost);\n+        return (Specification<Product>) (root, criteriaQuery, criteriaBuilder) -> criteriaBuilder.lessThanOrEqualTo(root.get(\"price\"), maxCost);\n     }\n \n     private static Specification<Product> titleLike(String titlePart) {"
  },
  {
    "sha": "cc41212706622463dbd3787fdb9a5868dfea6ef2",
    "filename": "src/main/java/ru/geekbrains/market/service/OrderService.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/service/OrderService.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/service/OrderService.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/service/OrderService.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -9,6 +9,7 @@\n import ru.geekbrains.market.entity.User;\n import ru.geekbrains.market.repository.OrderRepository;\n import java.util.List;\n+import java.util.Optional;\n \n @Service\n @RequiredArgsConstructor\n@@ -27,4 +28,7 @@ public Order createFromUserCart(User user, OrderInfo info) {\n         return orderRepository.findAllByOwnerUsername(username);\n     }\n \n+    public Optional<Order> findById(Long id) {\n+        return orderRepository.findById(id);\n+    }\n }"
  },
  {
    "sha": "3c7c9e8638f03ee194b29323526f4cdfb8055367",
    "filename": "src/main/java/ru/geekbrains/market/service/ProductService.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/service/ProductService.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/service/ProductService.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/service/ProductService.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -5,6 +5,7 @@\n import ru.geekbrains.market.dto.ProductDto;\n import ru.geekbrains.market.entity.Product;\n \n+import java.util.List;\n import java.util.Optional;\n \n public interface ProductService {\n@@ -13,5 +14,7 @@\n     void deleteProductById(Long id);\n     Page<ProductDto> findAll(Specification<Product> spec, int page, int pageSize);\n     Optional<Product> findProductById(Long id);\n+    List<ru.geekbrains.market.soap.Products> getAllProductsSoap();\n+    ru.geekbrains.market.soap.Products getById(Long id);\n \n }"
  },
  {
    "sha": "f7a43217da65c03dd1befbd7a3d29bd3c475498d",
    "filename": "src/main/java/ru/geekbrains/market/service/ProductServiceImpl.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/service/ProductServiceImpl.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/service/ProductServiceImpl.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/service/ProductServiceImpl.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -11,6 +11,7 @@\n \n import java.util.List;\n import java.util.Optional;\n+import java.util.function.Function;\n import java.util.stream.Collectors;\n \n @Service\n@@ -52,4 +53,21 @@ public void deleteProductById(Long id) {\n     public Page<ProductDto> findAll(Specification<Product> spec,int page,int pageSize) {\n         return productRepository.findAll(spec, PageRequest.of(page-1,pageSize)).map(ProductDto::new);\n     }\n+\n+    public static final Function<Product, ru.geekbrains.market.soap.Products> functionEntityToSoap = se -> {\n+        ru.geekbrains.market.soap.Products p = new ru.geekbrains.market.soap.Products();\n+        p.setId(se.getId());\n+        p.setTitle(se.getTitle());\n+        p.setPrice(se.getPrice());\n+        return p;\n+    };\n+\n+    public List<ru.geekbrains.market.soap.Products> getAllProductsSoap() {\n+        return productRepository.findAll().stream().map(functionEntityToSoap).collect(Collectors.toList());\n+    }\n+\n+    public ru.geekbrains.market.soap.Products getById(Long id) {\n+        return productRepository.findById(id).map(functionEntityToSoap).get();\n+    }\n+\n }"
  },
  {
    "sha": "600d5fa8e942e798299a4e2e2ddb1a9a5a803ba8",
    "filename": "src/main/java/ru/geekbrains/market/service/UserService.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/service/UserService.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/service/UserService.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/service/UserService.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -6,9 +6,9 @@\n import org.springframework.security.core.userdetails.UserDetails;\n import org.springframework.security.core.userdetails.UserDetailsService;\n import org.springframework.security.core.userdetails.UsernameNotFoundException;\n+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n import org.springframework.stereotype.Service;\n import org.springframework.transaction.annotation.Transactional;\n-import ru.geekbrains.market.configs.SecurityConfig;\n import ru.geekbrains.market.entity.Role;\n import ru.geekbrains.market.entity.User;\n import ru.geekbrains.market.exception_handling.ResourceNotFoundException;\n@@ -26,13 +26,13 @@\n public class UserService implements UserDetailsService {\n     private final UserRepository userRepository;\n     private final RoleRepository roleRepository;\n-    private final SecurityConfig securityConfig;\n+    private final BCryptPasswordEncoder passwordEncoder;\n \n     public Optional<User> findByUsername(String username) {\n         return userRepository.findByUsername(username);\n     }\n-    public Optional<User> findByEmail(String email) {\n-        return userRepository.findByEmail(email);\n+    public Optional<User> findByUsernameAndEmail(String name,String email) {\n+        return userRepository.findByUsernameAndEmail(name,email);\n     }\n \n     @Override\n@@ -47,7 +47,7 @@ public UserDetails loadUserByUsername(String username) throws UsernameNotFoundEx\n     }\n \n     public void saveUser(User user) {\n-        user.setPassword(securityConfig.passwordEncoder().encode(user.getPassword()));\n+        user.setPassword(passwordEncoder.encode(user.getPassword()));\n         String roleName = \"ROLE_USER\";\n         Role role = roleRepository.findByName(roleName).orElseThrow(() -> new ResourceNotFoundException(\"Unable to find role \" + roleName + \" add to user\"));\n         user.setRoles(List.of(role));"
  },
  {
    "sha": "0541b80ac813d00c62ba4673af2a4f38e7903d08",
    "filename": "src/main/java/ru/geekbrains/market/soap/GetAllProductsRequest.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/GetAllProductsRequest.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/GetAllProductsRequest.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/soap/GetAllProductsRequest.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,39 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.05 at 09:53:45 PM MSK \n+//\n+\n+\n+package ru.geekbrains.market.soap;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for anonymous complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType&gt;\n+ *   &lt;complexContent&gt;\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;\n+ *     &lt;/restriction&gt;\n+ *   &lt;/complexContent&gt;\n+ * &lt;/complexType&gt;\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"\")\n+@XmlRootElement(name = \"getAllProductsRequest\")\n+public class GetAllProductsRequest {\n+\n+\n+}"
  },
  {
    "sha": "aedef87bb2a9be53cec1100008342180b7ba3f48",
    "filename": "src/main/java/ru/geekbrains/market/soap/GetAllProductsResponse.java",
    "status": "added",
    "additions": 74,
    "deletions": 0,
    "changes": 74,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/GetAllProductsResponse.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/GetAllProductsResponse.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/soap/GetAllProductsResponse.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,74 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.05 at 09:53:45 PM MSK \n+//\n+\n+\n+package ru.geekbrains.market.soap;\n+\n+import javax.xml.bind.annotation.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\n+/**\n+ * <p>Java class for anonymous complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType&gt;\n+ *   &lt;complexContent&gt;\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;\n+ *       &lt;sequence&gt;\n+ *         &lt;element name=\"products\" type=\"{http://www.evgeniiboznyakov.com/spring/ws/products}products\" maxOccurs=\"unbounded\"/&gt;\n+ *       &lt;/sequence&gt;\n+ *     &lt;/restriction&gt;\n+ *   &lt;/complexContent&gt;\n+ * &lt;/complexType&gt;\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"\", propOrder = {\n+    \"products\"\n+})\n+@XmlRootElement(name = \"getAllProductsResponse\")\n+public class GetAllProductsResponse {\n+\n+    @XmlElement(required = true)\n+    protected List<Products> products;\n+\n+    /**\n+     * Gets the value of the products property.\n+     * \n+     * <p>\n+     * This accessor method returns a reference to the live list,\n+     * not a snapshot. Therefore any modification you make to the\n+     * returned list will be present inside the JAXB object.\n+     * This is why there is not a <CODE>set</CODE> method for the products property.\n+     * \n+     * <p>\n+     * For example, to add a new item, do as follows:\n+     * <pre>\n+     *    getProducts().add(newItem);\n+     * </pre>\n+     * \n+     * \n+     * <p>\n+     * Objects of the following type(s) are allowed in the list\n+     * {@link Products }\n+     * \n+     * \n+     */\n+    public List<Products> getProducts() {\n+        if (products == null) {\n+            products = new ArrayList<Products>();\n+        }\n+        return this.products;\n+    }\n+\n+}"
  },
  {
    "sha": "141179f4ffc7537e6a32ea54abaaffdc460349a8",
    "filename": "src/main/java/ru/geekbrains/market/soap/GetProductByIdRequest.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/GetProductByIdRequest.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/GetProductByIdRequest.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/soap/GetProductByIdRequest.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,61 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.05 at 09:53:45 PM MSK \n+//\n+\n+\n+package ru.geekbrains.market.soap;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for anonymous complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType&gt;\n+ *   &lt;complexContent&gt;\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;\n+ *       &lt;sequence&gt;\n+ *         &lt;element name=\"id\" type=\"{http://www.w3.org/2001/XMLSchema}long\"/&gt;\n+ *       &lt;/sequence&gt;\n+ *     &lt;/restriction&gt;\n+ *   &lt;/complexContent&gt;\n+ * &lt;/complexType&gt;\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"\", propOrder = {\n+    \"id\"\n+})\n+@XmlRootElement(name = \"getProductByIdRequest\")\n+public class GetProductByIdRequest {\n+\n+    protected long id;\n+\n+    /**\n+     * Gets the value of the id property.\n+     * \n+     */\n+    public long getId() {\n+        return id;\n+    }\n+\n+    /**\n+     * Sets the value of the id property.\n+     * \n+     */\n+    public void setId(long value) {\n+        this.id = value;\n+    }\n+\n+}"
  },
  {
    "sha": "5a0514bec600ff13d7dfa60223e451c045332344",
    "filename": "src/main/java/ru/geekbrains/market/soap/GetProductByIdResponse.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/GetProductByIdResponse.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/GetProductByIdResponse.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/soap/GetProductByIdResponse.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,67 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.05 at 09:53:45 PM MSK \n+//\n+\n+\n+package ru.geekbrains.market.soap;\n+\n+import javax.xml.bind.annotation.*;\n+\n+\n+/**\n+ * <p>Java class for anonymous complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType&gt;\n+ *   &lt;complexContent&gt;\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;\n+ *       &lt;sequence&gt;\n+ *         &lt;element name=\"products\" type=\"{http://www.evgeniiboznyakov.com/spring/ws/products}products\"/&gt;\n+ *       &lt;/sequence&gt;\n+ *     &lt;/restriction&gt;\n+ *   &lt;/complexContent&gt;\n+ * &lt;/complexType&gt;\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"\", propOrder = {\n+    \"products\"\n+})\n+@XmlRootElement(name = \"getProductByIdResponse\")\n+public class GetProductByIdResponse {\n+\n+    @XmlElement(required = true)\n+    protected Products products;\n+\n+    /**\n+     * Gets the value of the products property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link Products }\n+     *     \n+     */\n+    public Products getProducts() {\n+        return products;\n+    }\n+\n+    /**\n+     * Sets the value of the products property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link Products }\n+     *     \n+     */\n+    public void setProducts(Products value) {\n+        this.products = value;\n+    }\n+\n+}"
  },
  {
    "sha": "504de21ee7a3504d9905fcbf29ea4d633ccab373",
    "filename": "src/main/java/ru/geekbrains/market/soap/Products.java",
    "status": "added",
    "additions": 107,
    "deletions": 0,
    "changes": 107,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/Products.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/Products.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/soap/Products.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,107 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.05 at 09:53:45 PM MSK \n+//\n+\n+\n+package ru.geekbrains.market.soap;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for products complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType name=\"products\"&gt;\n+ *   &lt;complexContent&gt;\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\"&gt;\n+ *       &lt;sequence&gt;\n+ *         &lt;element name=\"id\" type=\"{http://www.w3.org/2001/XMLSchema}long\"/&gt;\n+ *         &lt;element name=\"title\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/&gt;\n+ *         &lt;element name=\"price\" type=\"{http://www.w3.org/2001/XMLSchema}int\"/&gt;\n+ *       &lt;/sequence&gt;\n+ *     &lt;/restriction&gt;\n+ *   &lt;/complexContent&gt;\n+ * &lt;/complexType&gt;\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"products\", propOrder = {\n+    \"id\",\n+    \"title\",\n+    \"price\"\n+})\n+public class Products {\n+\n+    protected long id;\n+    @XmlElement(required = true)\n+    protected String title;\n+    protected int price;\n+\n+    /**\n+     * Gets the value of the id property.\n+     * \n+     */\n+    public long getId() {\n+        return id;\n+    }\n+\n+    /**\n+     * Sets the value of the id property.\n+     * \n+     */\n+    public void setId(long value) {\n+        this.id = value;\n+    }\n+\n+    /**\n+     * Gets the value of the title property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link String }\n+     *     \n+     */\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    /**\n+     * Sets the value of the title property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link String }\n+     *     \n+     */\n+    public void setTitle(String value) {\n+        this.title = value;\n+    }\n+\n+    /**\n+     * Gets the value of the price property.\n+     * \n+     */\n+    public int getPrice() {\n+        return price;\n+    }\n+\n+    /**\n+     * Sets the value of the price property.\n+     * \n+     */\n+    public void setPrice(int value) {\n+        this.price = value;\n+    }\n+\n+}"
  },
  {
    "sha": "cdb0650f01a6e94570f4c08cb8bd09790f254bef",
    "filename": "src/main/java/ru/geekbrains/market/soap/package-info.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/package-info.java",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/java/ru/geekbrains/market/soap/package-info.java",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/java/ru/geekbrains/market/soap/package-info.java?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,9 @@\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 \n+// See <a href=\"https://javaee.github.io/jaxb-v2/\">https://javaee.github.io/jaxb-v2/</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2021.03.05 at 09:53:45 PM MSK \n+//\n+\n+@javax.xml.bind.annotation.XmlSchema(namespace = \"http://www.evgeniiboznyakov.com/spring/ws/products\", elementFormDefault = javax.xml.bind.annotation.XmlNsForm.QUALIFIED)\n+package ru.geekbrains.market.soap;"
  },
  {
    "sha": "94eedecc7f28a48d184e5101aaead5d4908253ce",
    "filename": "src/main/resources/application.yaml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/application.yaml",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/application.yaml",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/resources/application.yaml?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -13,6 +13,8 @@ spring:\n     properties:\n       hibernate:\n         dialect: org.hibernate.dialect.MySQLDialect\n+  aop:\n+    auto: true\n   h2:\n     console:\n       enabled: true"
  },
  {
    "sha": "b72e79f744c16b1a087a46938a01b08f747bc446",
    "filename": "src/main/resources/log4j.xml",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/log4j.xml",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/log4j.xml",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/resources/log4j.xml?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<!DOCTYPE log4j:configuration PUBLIC\n+        \"-//APACHE//DTD LOG4J 1.2//EN\"\n+        \"http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd\">\n+<log4j:configuration debug=\"false\">\n+    <appender name=\"ConsoleAppender\" class=\"org.apache.log4j.ConsoleAppender\">\n+        <param name=\"Encoding\" value=\"utf-8\"/>\n+        <layout class=\"org.apache.log4j.PatternLayout\">\n+            <param name=\"ConversionPattern\" value=\"%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n\"/>\n+        </layout>\n+    </appender>\n+    <appender name=\"FileAppender\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n+        <param name=\"File\" value=\"logs.txt\"/>\n+        <param name=\"DatePattern\" value=\"'-'yyyy-MM-dd\"/>\n+        <param name=\"Encoding\" value=\"utf-8\"/>\n+        <layout class=\"org.apache.log4j.PatternLayout\">\n+            <param name=\"ConversionPattern\" value=\"%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n\"/>\n+        </layout>\n+    </appender>\n+    <root>\n+        <priority value=\"TRACE\"/>\n+        <appender-ref ref=\"ConsoleAppender\"/>\n+        <appender-ref ref=\"FileAppender\"/>\n+    </root>\n+</log4j:configuration>\n+\n+\n+"
  },
  {
    "sha": "e1a108a463015d7d7ee34dcc4eb19e46360a0802",
    "filename": "src/main/resources/products.xsd",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/products.xsd",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/products.xsd",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/resources/products.xsd?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,42 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n+<xs:schema\n+        xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n+        xmlns:tns=\"http://www.evgeniiboznyakov.com/spring/ws/products\"\n+        targetNamespace=\"http://www.evgeniiboznyakov.com/spring/ws/products\" elementFormDefault=\"qualified\">\n+\n+    <xs:element name=\"getProductByIdRequest\">\n+        <xs:complexType>\n+            <xs:sequence>\n+                <xs:element name=\"id\" type=\"xs:long\"/>\n+            </xs:sequence>\n+        </xs:complexType>\n+    </xs:element>\n+\n+    <xs:element name=\"getAllProductsRequest\">\n+        <xs:complexType/>\n+    </xs:element>\n+\n+    <xs:element name=\"getProductByIdResponse\">\n+        <xs:complexType>\n+            <xs:sequence>\n+                <xs:element name=\"products\" type=\"tns:products\"/>\n+            </xs:sequence>\n+        </xs:complexType>\n+    </xs:element>\n+\n+    <xs:element name=\"getAllProductsResponse\">\n+        <xs:complexType>\n+            <xs:sequence>\n+                <xs:element name=\"products\" maxOccurs=\"unbounded\" type=\"tns:products\"/>\n+            </xs:sequence>\n+        </xs:complexType>\n+    </xs:element>\n+\n+    <xs:complexType name=\"products\">\n+        <xs:sequence>\n+            <xs:element name=\"id\" type=\"xs:long\"/>\n+            <xs:element name=\"title\" type=\"xs:string\"/>\n+            <xs:element name=\"price\" type=\"xs:int\"/>\n+        </xs:sequence>\n+    </xs:complexType>\n+</xs:schema>\n\\ No newline at end of file"
  },
  {
    "sha": "4a67e71b50a55c74f6a9c52ad82bf14aa8c4fe8a",
    "filename": "src/main/resources/static/cart/cart.html",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/cart/cart.html",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/cart/cart.html",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/resources/static/cart/cart.html?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,51 @@\n+<h3>Корзина</h3>\n+<table ng-show=\"Cart.items.length > 0\" class=\"table table-hover\" cellpadding=\"0\" cellspacing=\"0\">\n+    <thead>\n+    <tr>\n+        <td>Название</td>\n+        <td>Количество</td>\n+        <td>Цена</td>\n+        <td></td>\n+    </tr>\n+    </thead>\n+    <tbody>\n+    <tr ng-repeat=\"oi in Cart.items\">\n+        <td>{{oi.productTitle}}</td>\n+        <td >\n+            <button type=\"button\" class=\"btn btn-outline-danger\"\n+                    ng-click=\"updateQuantity(oi.productTitle,-1)\">\n+                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-bag-dash-fill\" viewBox=\"0 0 16 16\">\n+                    <path fill-rule=\"evenodd\" d=\"M10.5 3.5a2.5 2.5 0 0 0-5 0V4h5v-.5zm1 0V4H15v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4h3.5v-.5a3.5 3.5 0 1 1 7 0zM6 9.5a.5.5 0 0 0 0 1h4a.5.5 0 0 0 0-1H6z\"></path>\n+                </svg>\n+            </button>\n+            {{oi.quantity}}\n+            <button type=\"button\" class=\"btn btn-primary\"\n+                    ng-click=\"updateQuantity(oi.productTitle,1)\">\n+                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-bag-plus-fill\" viewBox=\"0 0 16 16\">\n+                    <path fill-rule=\"evenodd\" d=\"M10.5 3.5a2.5 2.5 0 0 0-5 0V4h5v-.5zm1 0V4H15v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4h3.5v-.5a3.5 3.5 0 1 1 7 0zM8.5 8a.5.5 0 0 0-1 0v1.5H6a.5.5 0 0 0 0 1h1.5V12a.5.5 0 0 0 1 0v-1.5H10a.5.5 0 0 0 0-1H8.5V8z\"></path>\n+                </svg>\n+            </button>\n+        </td>\n+        <td>{{oi.quantity + ' x ' + oi.pricePerProduct + ' = ' + oi.price}}</td>\n+        <td>\n+            <button type=\"button\" class=\"btn btn-outline-danger\"\n+                    ng-click=\"deleteCartProductById(oi.productTitle)\">\n+                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n+                    <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"></path>\n+                </svg>\n+            </button>\n+        </td>\n+    </tr>\n+    <tr>\n+        <td>Итого</td>\n+        <td></td>\n+        <td>{{Cart.totalPrice}}</td>\n+    </tr>\n+    </tbody>\n+</table>\n+<span ng-show=\"Cart.items.length == 0\">Ваша корзина пуста</span>\n+</div>\n+<div  ng-show='Cart.items.length > 0'>\n+    <button class=\"btn btn-danger\" ng-click=\"clearCart()\">Очистить корзину</button>\n+    <button class=\"btn btn-primary\" ng-click=\"goToOrderSubmit()\">Оформить заказ</button>\n+</div>\n\\ No newline at end of file"
  },
  {
    "sha": "75685ee0ef8cf06f6ec18784a049968974f3a995",
    "filename": "src/main/resources/static/cart/cart.js",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/cart/cart.js",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/cart/cart.js",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/resources/static/cart/cart.js?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,49 @@\n+angular.module('app').controller('cartController', function ($scope, $http, $location) {\n+    const contextPath = 'http://localhost:8189/market';\n+\n+    $scope.showCart = function () {\n+        $http.get(contextPath + '/api/v1/cart').then(function (response) {\n+            $scope.Cart = response.data;\n+        });\n+    };\n+\n+    $scope.addToCart = function (productId) {\n+        $http.get(contextPath + '/api/v1/cart/add/' + productId)\n+            .then(function (response) {\n+                $scope.showCart();\n+            });\n+    }\n+\n+    $scope.clearCart = function () {\n+        $http.get(contextPath + '/api/v1/cart/clear')\n+            .then(function (response) {\n+                $scope.showCart();\n+            });\n+    }\n+\n+    $scope.goToOrderSubmit = function () {\n+        $location.path('/order_confirmation');\n+    }\n+\n+    $scope.updateQuantity = function (title, i) {\n+        let pos = $scope.Cart.items.map(function (e) {\n+            return e.productTitle;\n+        }).indexOf(title);\n+        $http.get(contextPath + '/api/v1/cart/change_quantity/' + pos + '/' + i)\n+            .then(function (response) {\n+                $scope.showCart();\n+            });\n+    };\n+\n+    $scope.deleteCartProductById = function (title) {\n+        let pos = $scope.Cart.items.map(function (e) {\n+            return e.productTitle;\n+        }).indexOf(title);\n+        $http.get(contextPath + '/api/v1/cart/product/' + pos)\n+            .then(function (response) {\n+                $scope.showCart();\n+            });\n+    }\n+\n+    $scope.showCart();\n+});\n\\ No newline at end of file"
  },
  {
    "sha": "eae0fae6639dda8e9e8091e8193f0f7717c9b433",
    "filename": "src/main/resources/static/home/home.html",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/home/home.html",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/home/home.html",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/resources/static/home/home.html?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,6 @@\n+<div>\n+    <h1>О нас</h1>\n+    <p>\n+        Добро пожаловать в Happy Market!\n+    </p>\n+</div>\n\\ No newline at end of file"
  },
  {
    "sha": "be11a2121a40456084663e230244302af3707316",
    "filename": "src/main/resources/static/home/home.js",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/home/home.js",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/home/home.js",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/resources/static/home/home.js?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,3 @@\n+angular.module('app').controller('homeController', function ($scope, $http, $localStorage) {\n+    const contextPath = 'http://localhost:8189/market';\n+});\n\\ No newline at end of file"
  },
  {
    "sha": "18bf271a6c941f58b13d6bcdabd61a2e4d3db9fa",
    "filename": "src/main/resources/static/index.html",
    "status": "modified",
    "additions": 59,
    "deletions": 209,
    "changes": 268,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/index.html",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/index.html",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/resources/static/index.html?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -4,229 +4,79 @@\n \n <head>\n     <meta charset=\"utf-8\">\n-    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\n+    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\n     <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n     <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\n \n     <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.8.0/angular.min.js\"></script>\n-    <script src=\"index.js\"></script>\n+    <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.8.0/angular-route.min.js\"></script>\n+    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/ngStorage/0.3.11/ngStorage.min.js\"></script>\n </head>\n \n <body>\n \n-<div class=\"container\" ng-controller=\"indexController\">\n-    <h1>Market</h1>\n-    <div class=\"mb-3 text-center\" ng-show=\"!authorized\">\n-        <form class=\"form-signup\" ng-submit=\"tryToSignUp(newuser)\" style=\"max-width: 350px; padding: 15px; margin: 0 auto;\">\n-        <h1 class=\"h3 mb-3 font-weight-normal\">Зарегестрироваться</h1>\n-        <label for=\"Username\" class=\"sr-only\">Имя пользователя</label>\n-        <input type=\"text\" ng-model=\"newuser.username\" id=\"Username\" class=\"form-control\"\n-               placeholder=\"Имя пользователя\" style=\"margin-bottom: 10px;\" required=\"\">\n-        <label for=\"Password\" class=\"sr-only\">Пароль</label>\n-        <input type=\"password\" ng-model=\"newuser.password\" id=\"Password\" class=\"form-control\" placeholder=\"Пароль\"\n-               style=\"margin-bottom: 10px;\" required=\"\">\n-        <label for=\"inputEmail\" class=\"sr-only\">Email</label>\n-        <input type=\"email\" ng-model=\"newuser.email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email\"\n-               style=\"margin-bottom: 10px;\" required=\"\">\n-        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Зарегестрироваться</button>\n-        <p class=\"mt-5 mb-3 text-muted\">© GeekBrains 2021</p>\n-        </form>\n-        <form class=\"form-signin\" ng-submit=\"tryToAuth()\" style=\"max-width: 350px; padding: 15px; margin: 0 auto;\">\n-            <h1 class=\"h3 mb-3 font-weight-normal\">Пожалуйста войдите</h1>\n-            <label for=\"inputUsername\" class=\"sr-only\">Имя пользователя</label>\n-            <input type=\"text\" ng-model=\"user.username\" id=\"inputUsername\" class=\"form-control\"\n-                   placeholder=\"Имя пользователя\" style=\"margin-bottom: 10px;\" required=\"\">\n-            <label for=\"inputPassword\" class=\"sr-only\">Пароль</label>\n-            <input type=\"password\" ng-model=\"user.password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Пароль\"\n-                   style=\"margin-bottom: 10px;\" required=\"\">\n-            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Войти</button>\n-            <p class=\"mt-5 mb-3 text-muted\">© GeekBrains 2021</p>\n-        </form>\n-    </div>\n-    <div ng-show=\"authorized\">\n-        <h3>Добро пожаловать: {{username}}</h3>\n-    </div>\n-  <!--  <div class=\"mb-3 text-center\" ng-show=\"authorized\">\n-        <button class=\"btn btn-danger\" ng-click=\"logout()\">Выйти</button>\n-    </div>-->\n-    <div id=\"products\">\n-        <h3>Фильтр</h3>\n-        <form novalidate ng-submit=\"showProductsPage()\">\n-            <div class=\"form-group row\">\n-                <div class=\"form-group col-md-3\">\n-                    <label for=\"filterTitle\">Название товара</label>\n-                    <input class=\"form-control\" type=\"text\" ng-model=\"filter.title\" id=\"filterTitle\">\n-                </div>\n-                <div class=\"form-group col-md-3\">\n-                    <label for=\"filterMinCost\">Минимальная цена</label>\n-                    <input class=\"form-control\" type=\"number\" ng-model=\"filter.min_cost\" id=\"filterMinCost\">\n-                </div>\n-                <div class=\"form-group col-md-3\">\n-                    <label for=\"filterMaxCost\">Максимальная цена</label>\n-                    <input class=\"form-control\" type=\"number\" ng-model=\"filter.max_cost\" id=\"filterMaxCost\">\n-                </div>\n-            </div>\n-            <div>\n-                <button class=\"btn btn-success\" type=\"submit\">Применить</button>\n-            </div>\n-        </form>\n-\n-        <h3>Список товаров</h3>\n-        <table class=\"table table-hover\" cellpadding=\"0\" cellspacing=\"0\">\n-            <thead>\n-            <tr>\n-                <td>Название</td>\n-                <td>Цена</td>\n-                <td></td>\n-                <td></td>\n-            </tr>\n-            </thead>\n-            <tbody>\n-            <tr ng-repeat=\"p in ProductsPage.content\">\n-                <td>{{p.title}}</td>\n-                <td>{{p.price}}</td>\n-                <td>\n-                    <button class=\"btn btn-danger\" ng-click=\"deleteProductById(p.id)\">Удалить товар</button>\n-                    <button ng-hide='OrderItems.length > 0' type=\"button\" class=\"btn btn-primary\"\n-                            ng-click=\"addToCart(p.id)\">\n-                        <span class=\"glyphicon glyphicon-shopping-cart\"></span>\n-                    </button>\n-                </td>\n-            </tr>\n-            </tbody>\n-        </table>\n-\n-        <nav aria-label=\"Page navigation\">\n-            <ul class=\"pagination\">\n-                <li ng-hide=\"ProductsPage.first\">\n-                    <a class=\"page-link\" ng-click=\"showProductsPage(ProductsPage.number)\">Пред.</a>\n-                </li>\n-                <li ng-class=\"ProductsPage.number == pageIndex -1?'page-item active' : 'page-item'\"\n-                    ng-repeat=\"pageIndex in PaginationArray\">\n-                    <a class=\"page-link\" ng-click=\"showProductsPage(pageIndex)\">{{pageIndex}}</a>\n-                </li>\n-                <li ng-hide=\"ProductsPage.last\">\n-                    <a class=\"page-link\" ng-click=\"showProductsPage(ProductsPage.number + 2)\">След.</a>\n-                </li>\n-            </ul>\n-        </nav>\n+<div class=\"container\">\n+    <h1>Happy Market</h1>\n+    <div ng-controller=\"indexController\">\n+        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n+            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n+                <ul class=\"navbar-nav\">\n+                    <li class=\"nav-item\">\n+                        <a class=\"btn btn-outline-warning\" href=\"#!/\">Главная</a>\n+                    </li>\n+                    <li class=\"nav-item\">\n+                        <a class=\"btn btn-outline-warning\" href=\"#!/products\">Каталог товаров</a>\n+                    </li>\n+                    <li class=\"nav-item\">\n+                        <a class=\"btn btn-outline-warning\" href=\"#!/ws\">Каталог товаров SOAP</a>\n+                    </li>\n+                    <li class=\"nav-item\">\n+                        <a class=\"btn btn-outline-warning\" href=\"#!/orders\" ng-if=\"isUserLoggedIn()\">Мои заказы</a>\n+                    </li>\n+                    <li class=\"nav-item\">\n+                        <a class=\"btn btn-outline-warning\" href=\"#!/cart\">Корзина</a>\n+                    </li>\n+                    <li class=\"nav-item\" ng-show=\"!isUserLoggedIn()\">\n+                        <form class=\"align-middle\" ng-submit=\"tryToAuth()\">\n+                            <div class=\"input-group-prepend\">\n+                                <input id=\"navLoginField\" class=\"form-control\" ng-model=\"user.username\" type=\"text\"\n+                                       aria-describedby=\"inputGroup-sizing-sm\" style=\"margin-left: 10px;\" placeholder=\"Login\">\n \n+                                <input id=\"navPasswordField\" class=\"form-control\" ng-model=\"user.password\" type=\"password\"\n+                                       aria-describedby=\"inputGroup-sizing-sm\" style=\"margin-left: 10px;\" placeholder=\"Password\">\n \n-        <div ng-hide=\"Cart.items.length > 0 || OrderItems.length > 0 \">\n-            <h3>Корзина пуста</h3>\n-            <br>\n-        </div>\n-\n-        <div  ng-show='Cart.items.length > 0'>\n-            <h3>Корзина</h3>\n-            <table class=\"table table-hover\" cellpadding=\"0\" cellspacing=\"0\">\n-                <thead>\n-                <tr>\n-                    <td>Название</td>\n-                    <td>Количество</td>\n-                    <td>Цена</td>\n-                    <td></td>\n-                </tr>\n-                </thead>\n-                <tbody>\n-                <tr ng-repeat=\"oi in Cart.items\">\n-                    <td>{{oi.productTitle}}</td>\n-                    <td id=\"cart_quantity\">\n-                        <button type=\"button\" class=\"btn btn-primary\"\n-                                ng-click=\"updateQuantity(oi.productTitle,-1)\">\n-                            <span class=\"glyphicon glyphicon-minus\"></span>\n-                        </button>\n-                        {{oi.quantity}}\n-                        <button type=\"button\" class=\"btn btn-primary\"\n-                                ng-click=\"updateQuantity(oi.productTitle,1)\">\n-                            <span class=\"glyphicon glyphicon-plus\"></span>\n-                        </button>\n-                    </td>\n-                    <td>{{oi.quantity + ' x ' + oi.pricePerProduct + ' = ' + oi.price}}</td>\n-                    <td>\n-                        <button class=\"btn btn-danger\"\n-                                ng-click=\"deleteCartProductById(oi.productTitle)\">\n-                            <span class=\"glyphicon glyphicon-trash\"></span></button>\n-                    </td>\n-                </tr>\n-                <tr>\n-                    <td>Итого</td>\n-                    <td></td>\n-                    <td>{{Cart.totalPrice}}</td>\n-                </tr>\n-                </tbody>\n-            </table>\n-        </div>\n-        <div id=\"cart_buttons\" ng-show='Cart.items.length > 0'>\n-            <button class=\"btn btn-danger\" ng-click=\"clearCart()\">Очистить корзину</button>\n-            <button class=\"btn btn-primary\" ng-click=\"showInfo()\">Оформить заказ</button>\n-        </div>\n-    </div>\n-\n-    <div>\n-        <form hidden id=\"info_form\" ng-submit=\"createOrder()\">\n-            <h3>Доставка и оплата</h3>\n-            <table class=\"table table-hover\" cellpadding=\"0\" cellspacing=\"0\">\n-                <thead>\n-                <tr>\n-                    <td>Название</td>\n-                    <td>Количество</td>\n-                    <td>Цена</td>\n-                    <td></td>\n-                </tr>\n-                </thead>\n-                <tbody>\n-                <tr ng-repeat=\"oi in Cart.items\">\n-                    <td>{{oi.productTitle}}</td>\n-                    <td>\n-                        {{oi.quantity}}\n-                    </td>\n-                    <td>{{oi.quantity + ' x ' + oi.pricePerProduct + ' = ' + oi.price}}</td>\n-                </tr>\n-                <tr>\n-                    <td>Итого</td>\n-                    <td></td>\n-                    <td>{{Cart.totalPrice}}</td>\n-                </tr>\n-                </tbody>\n-            </table>\n-            <label for=\"inputAddress\" class=\"sr-only\">Адресс доставки</label>\n-            <input type=\"text\" ng-model=\"order.address\" id=\"inputAddress\" class=\"form-control\"\n-                   placeholder=\"Адресс доставки\" style=\"margin-bottom: 10px;\" required=\"\">\n-            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Оформить</button>\n-            <button hidden class=\"btn btn-lg btn-danger btn-block\" type=\"button\" ng-click=\"back()\">Назад к корзине\n-            </button>\n-        </form>\n+                                <button id=\"navLoginSubmit\" class=\"btn btn-outline-warning btn-sm\"\n+                                        style=\"margin-left: 10px;\" type=\"submit\">Войти\n+                                </button>\n+                            </div>\n+                        </form>\n+                    </li>\n+                    <li ng-show=\"!isUserLoggedIn()\">\n+                            <button ng-click=\"goToSignIn()\" id=\"navSignInSubmit\" class=\"btn btn-outline-warning\"\n+                                    style=\"margin-left: 10px;\" type=\"submit\">Регистрация\n+                            </button>\n \n+                    </li>\n+                    <li class=\"nav-item\" ng-show=\"isUserLoggedIn()\">\n+                        <button class=\"btn btn-outline-secondary\" ng-click=\"tryToLogout()\">Выйти</button>\n+                    </li>\n+                </ul>\n+            </div>\n+        </nav>\n+        <h2 ng-show=\"isUserLoggedIn()\">Добро пожаловать {{currentUserName}}</h2>\n     </div>\n \n-    <h3 ng-show=\"authorized\">Мои заказы</h3>\n-    <table class=\"table table-hover\" cellpadding=\"0\" cellspacing=\"0\">\n-        <thead>\n-        <tr>\n-            <td>ID</td>\n-            <td>Имя пользователя</td>\n-            <td>Цена</td>\n-            <td>Дата создания</td>\n-            <td>Адресс доставки</td>\n-        </tr>\n-        </thead>\n-        <tbody>\n-\n-        <tr ng-repeat=\"o in MyOrders\">\n-            <td>#{{o.id}}</td>\n-            <td>{{o.username}}</td>\n-            <td>{{o.totalPrice}}</td>\n-            <td>{{o.creationDateTime}}</td>\n-            <td>\n-                <label for=\"inputAddress\" class=\"sr-only\">Адресс доставки</label>\n-                <input readonly type=\"text\" ng-model=\"o.address\" id=\"\" class=\"form-control\"\n-                       placeholder=\"Адресс доставки\" style=\"margin-bottom: 10px;\" required=\"\">\n-            </td>\n+    <ng-view></ng-view>\n \n-        </tr>\n-        </tbody>\n-    </table>\n+    <script src=\"index.js\"></script>\n+    <script src=\"home/home.js\"></script>\n+    <script src=\"products/products.js\"></script>\n+    <script src=\"productsSoap/productsSoap.js\"></script>\n+    <script src=\"cart/cart.js\"></script>\n+    <script src=\"order_confirmation/order_confirmation.js\"></script>\n+    <script src=\"order_result/order_result.js\"></script>\n+    <script src=\"orders/orders.js\"></script>\n+    <script src=\"signIn/signIn.js\"></script>\n </div>\n </body>\n </html>\n\\ No newline at end of file"
  },
  {
    "sha": "068b82b8278cb00cc8a3ed2754bf00fe76334e9e",
    "filename": "src/main/resources/static/index.js",
    "status": "modified",
    "additions": 115,
    "deletions": 153,
    "changes": 268,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/index.js",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/index.js",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/resources/static/index.js?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -1,172 +1,134 @@\n-angular.module('app', []).controller('indexController', function ($scope, $http) {\n-        const contextPath = 'http://localhost:8189/market';\n-        $scope.authorized = false;\n-        $scope.username = null;\n-        $scope.p = null;\n-\n-        $scope.showProductsPage = function (pageIndex = 1) {\n-            $http({\n-                url: contextPath + '/api/v1/products',\n-                method: 'GET',\n-                params: {\n-                    title: $scope.filter ? $scope.filter.title : null,\n-                    min_cost: $scope.filter ? $scope.filter.min_cost : null,\n-                    max_cost: $scope.filter ? $scope.filter.max_cost : null,\n-                    p: pageIndex\n-                }\n-            }).then(function (response) {\n-                $scope.ProductsPage = response.data;\n-                let minPageIndex = pageIndex - 2;\n-                if (minPageIndex < 1) {\n-                    minPageIndex = 1;\n-                }\n-\n-                let maxPageIndex = pageIndex + 2;\n-                if (maxPageIndex > $scope.ProductsPage.totalPages) {\n-                    maxPageIndex = $scope.ProductsPage.totalPages;\n-                }\n-\n-                $scope.PaginationArray = $scope.generatePagesIndexes(minPageIndex, maxPageIndex)\n+(function ($localStorage) {\n+    'use strict';\n+\n+    angular\n+        .module('app', ['ngRoute', 'ngStorage'])\n+        .config(config)\n+        .run(run);\n+\n+    function config($routeProvider, $httpProvider) {\n+        $routeProvider\n+            .when('/', {\n+                templateUrl: 'home/home.html',\n+                controller: 'homeController'\n+            })\n+            .when('/products', {\n+                templateUrl: 'products/products.html',\n+                controller: 'productsController'\n+            })\n+            .when('/cart', {\n+                templateUrl: 'cart/cart.html',\n+                controller: 'cartController'\n+            })\n+            .when('/order_confirmation', {\n+                templateUrl: 'order_confirmation/order_confirmation.html',\n+                controller: 'orderConfirmationController'\n+            })\n+            .when('/ws', {\n+                templateUrl: 'productsSoap/productsSoap.html',\n+                controller: 'productsSoapController'\n+            })\n+            .when('/order_result/:orderId', {\n+                templateUrl: 'order_result/order_result.html',\n+                controller: 'orderResultController'\n+            })\n+            .when('/orders', {\n+                templateUrl: 'orders/orders.html',\n+                controller: 'ordersController'\n+            })\n+            .when('/signIn', {\n+                templateUrl: 'signIn/signIn.html',\n+                controller: 'signInController'\n+            })\n+            .otherwise({\n+                redirectTo: '/'\n             });\n-        };\n \n-        $scope.generatePagesIndexes = function (startPage, endPage) {\n-            let arr = [];\n-            for (let i = startPage; i < endPage + 1; i++) {\n-                arr.push(i);\n-            }\n-            return arr;\n-        }\n-\n-        $scope.submitCreateNewProduct = function () {\n-            $http.post(contextPath + '/api/v1/products', $scope.newProduct)\n-                .then(function (response) {\n-                    $scope.newProduct = null;\n-                    $scope.showProductsPage();\n-                });\n-        };\n-\n-        $scope.deleteProductById = function (productId) {\n-            $http.delete(contextPath + '/api/v1/products/' + productId)\n-                .then(function (response) {\n-                    $scope.showProductsPage();\n-                });\n-        }\n-\n-        $scope.deleteCartProductById = function (title) {\n-            let pos = $scope.Cart.items.map(function (e) {\n-                return e.productTitle;\n-            }).indexOf(title);\n-            $http.get(contextPath + '/api/v1/cart/product/' + pos)\n-                .then(function (response) {\n-                    $scope.showCart();\n-                });\n-        }\n+        // $httpProvider.interceptors.push(function ($q, $location) {\n+        //     return {\n+        //         'responseError': function (rejection, $localStorage, $http) {\n+        //             var defer = $q.defer();\n+        //             if (rejection.status == 401 || rejection.status == 403) {\n+        //                 console.log('error: 401-403');\n+        //                 $location.path('/auth');\n+        //                 if (!(localStorage.getItem(\"localUser\") === null)) {\n+        //                     delete $localStorage.currentUser;\n+        //                     $http.defaults.headers.common.Authorization = '';\n+        //                 }\n+        //                 console.log(rejection.data);\n+        //                 var answer = JSON.parse(rejection.data);\n+        //                 console.log(answer);\n+        //                 // window.alert(answer.message);\n+        //             }\n+        //             defer.reject(rejection);\n+        //             return defer.promise;\n+        //         }\n+        //     };\n+        // });\n+    }\n \n-        $scope.addToCart = function (id) {\n-            $http.get(contextPath + '/api/v1/cart/add/' + id)\n-                .then(function (response) {\n-                    $scope.showCart();\n-                });\n+    function run($rootScope, $http, $localStorage) {\n+        if ($localStorage.currentUser) {\n+            $http.defaults.headers.common.Authorization = 'Bearer ' + $localStorage.currentUser.token;\n         }\n+    }\n+})();\n \n-        $scope.showMyOrders = function () {\n-            $http({\n-                url: contextPath + '/api/v1/orders',\n-                method: 'GET'\n-            }).then(function (response) {\n-                $scope.MyOrders = response.data;\n-            });\n-        };\n-\n-        $scope.sumPrice = function (OrderItems) {\n-            for (var i = 0, sum = 0; i < OrderItems.length; ++i) {\n-                sum += OrderItems[i].price;\n-            }\n-            $scope.sum = sum;\n-        }\n+angular.module('app').controller('indexController', function ($scope, $http, $localStorage, $location) {\n+    const contextPath = 'http://localhost:8189/market';\n \n-        $scope.clearCart = function () {\n-            $http.get(contextPath + '/api/v1/cart/clear')\n-                .then(function (response) {\n-                    $scope.showCart();\n-                });\n+    $localStorage.afterSignInMethode = function () {\n+        if ($localStorage.user != null) {\n+            $scope.user = $localStorage.user;\n+            delete $localStorage.user;\n+            $scope.tryToAuth();\n         }\n+    }\n \n-        $scope.updateQuantity = function (title, i) {\n-            let pos = $scope.Cart.items.map(function (e) {\n-                return e.productTitle;\n-            }).indexOf(title);\n-            $http.get(contextPath + '/api/v1/cart/change_quantity/' + pos + '/' + i)\n-                .then(function (response) {\n-                    $scope.showCart();\n-                });\n-        };\n-\n-        $scope.showCart = function () {\n-            $http.get(contextPath + '/api/v1/cart').then(function (response) {\n-                $scope.Cart = response.data;\n-                document.getElementById('products').style.display = \"block\";\n-                document.getElementById('info_form').style.display = \"none\";\n+    $scope.tryToAuth = function () {\n+        $http.post(contextPath + '/auth', $scope.user)\n+            .then(function successCallback(response) {\n+                if (response.data.token) {\n+                    $http.defaults.headers.common.Authorization = 'Bearer ' + response.data.token;\n+                    $localStorage.currentUser = {username: $scope.user.username, token: response.data.token};\n+                    delete $scope.user;\n+                    delete $localStorage.afterSignInMethode;\n+                    $location.path('/');\n+                }\n+            }, function errorCallback(response) {\n+                window.alert(\"Wrong username or password!\");\n             });\n-        };\n+    };\n \n-        $scope.tryToAuth = function () {\n-            $http.post(contextPath + '/auth', $scope.user)\n-                .then(function successCallback(response) {\n-                    if (response.data.token) {\n-                        $http.defaults.headers.common.Authorization = 'Bearer ' + response.data.token;\n-                        $scope.username = $scope.user.username;\n-                        $scope.user.username = null;\n-                        $scope.user.password = null;\n-                        $scope.authorized = true;\n-                        $scope.showMyOrders();\n-                        $scope.showCart();\n-                    }\n-                }, function errorCallback(response) {\n-                    window.alert(\"Error\");\n-                });\n+    $scope.tryToLogout = function () {\n+        $scope.clearUser();\n+        if ($scope.user.username) {\n+            $scope.user.username = null;\n         }\n-\n-        $scope.tryToSignUp = function (newuser) {\n-            $http.post(contextPath + '/api/v1/user', newuser)\n-                .then(function successCallback(response) {\n-                    window.alert(\"Success\");\n-                    delete newuser.email;\n-                    $scope.user= newuser;\n-                    $scope.tryToAuth();\n-                }, function errorCallback(response) {\n-                    window.alert(\"This username or email already exist\");\n-                });\n+        if ($scope.user.password) {\n+            $scope.user.password = null;\n         }\n+    };\n \n+    $scope.clearUser = function () {\n+        delete $localStorage.currentUser;\n+        $http.defaults.headers.common.Authorization = '';\n+        $location.path('/home');\n+    };\n \n-        $scope.createOrder = function () {\n-            $http.post(contextPath + '/api/v1/orders/create', $scope.order)\n-                .then(function (response) {\n-                    $scope.order = null;\n-                    $scope.showMyOrders();\n-                    $scope.showCart();\n-                    document.getElementById('info_form').style.display = \"none\";\n-                    document.getElementById('products').style.display = \"block\";\n-                });\n+    $scope.isUserLoggedIn = function () {\n+        if ($localStorage.currentUser) {\n \n+            $scope.currentUserName = $localStorage.currentUser.username;\n+            return true;\n+        } else {\n+            return false;\n         }\n+    };\n \n-        $scope.showInfo = function () {\n-            if ($scope.authorized == false) {\n-                window.alert(\"Please sign in\");\n-            } else {\n-                document.getElementById('info_form').style.display = \"block\";\n-                document.getElementById('products').style.display = \"none\";\n+    $scope.goToSignIn = function () {\n+        $location.path('/signIn');\n+    }\n \n-            }\n-        }\n-        $scope.back = function () {\n-            document.getElementById('info_form').style.display = \"none\";\n-            document.getElementById('products').style.display = \"block\";\n \n-        }\n-        $scope.showProductsPage();\n-    }\n-);\n\\ No newline at end of file\n+});\n\\ No newline at end of file"
  },
  {
    "sha": "fe04fccb0aec06025d29d7ae6cd2199ae711d383",
    "filename": "src/main/resources/static/order_confirmation/order_confirmation.html",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/Euvgene/Market/blob/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/order_confirmation/order_confirmation.html",
    "raw_url": "https://github.com/Euvgene/Market/raw/ce424d34382141f653abd45fd954d60a707157f7/src/main/resources/static/order_confirmation/order_confirmation.html",
    "contents_url": "https://api.github.com/repos/Euvgene/Market/contents/src/main/resources/static/order_confirmation/order_confirmation.html?ref=ce424d34382141f653abd45fd954d60a707157f7",
    "patch": "@@ -0,0 +1,34 @@\n+<div>\n+    <h3>Ваш заказ</h3>\n+    <table  class=\"table table-hover\" cellpadding=\"0\" cellspacing=\"0\">\n+        <thead>\n+        <tr>\n+            <td>Название</td>\n+            <td>Количество</td>\n+            <td>Цена</td>\n+        </tr>\n+        </thead>\n+        <tbody>\n+        <tr ng-repeat=\"oi in Cart.items\">\n+            <td>{{oi.productTitle}}</td>\n+            <td>{{oi.quantity}}</td>\n+            <td>{{oi.quantity + ' x ' + oi.pricePerProduct + ' = ' + oi.price}}</td>\n+        </tr>\n+        <tr>\n+            <td>Итого</td>\n+            <td></td>\n+            <td>{{Cart.totalPrice}}</td>\n+        </tr>\n+        </tbody>\n+    </table>\n+\n+    <form novalidate ng-submit=\"submitOrder()\">\n+        <div class=\"form-group col-md-6\">\n+            <label for=\"orderAddress\">Адрес доставки</label>\n+            <input class=\"form-control\" type=\"text\" ng-model=\"order.address\" id=\"orderAddress\">\n+        </div>\n+        <div>\n+            <button class=\"btn btn-success\" type=\"submit\">Оформить заказ</button>\n+        </div>\n+    </form>\n+</div>\n\\ No newline at end of file"
  }
]
