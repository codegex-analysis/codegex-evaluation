[
  {
    "sha": "c66ae94624415a82011cbf7eb43f4205cdca27a5",
    "filename": "samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/bean/delivery/DeliveryBean.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/sakaiproject/sakai/blob/933facf19664608aac2c1735ea76fac10beabc55/samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/bean/delivery/DeliveryBean.java",
    "raw_url": "https://github.com/sakaiproject/sakai/raw/933facf19664608aac2c1735ea76fac10beabc55/samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/bean/delivery/DeliveryBean.java",
    "contents_url": "https://api.github.com/repos/sakaiproject/sakai/contents/samigo/samigo-app/src/java/org/sakaiproject/tool/assessment/ui/bean/delivery/DeliveryBean.java?ref=933facf19664608aac2c1735ea76fac10beabc55",
    "patch": "@@ -30,6 +30,7 @@\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.ResourceBundle;\n import java.util.Set;\n import java.util.TimeZone;\n@@ -2115,6 +2116,7 @@ public boolean isAvailable(){\n \t  boolean isAvailable = true;\n \t  Date currentDate = new Date();\n \t\tDate startDate;\n+\t\tverifyExtendedTimeDeliveryService();\n \t\tif (extendedTimeDeliveryService.hasExtendedTime()) {\n \t\t\tstartDate = extendedTimeDeliveryService.getStartDate();\n \t\t} else {\n@@ -2129,6 +2131,7 @@ public boolean isAvailable(){\n   public boolean pastDueDate(){\n     boolean pastDueDate = true;\n     Date currentDate = new Date();\n+    verifyExtendedTimeDeliveryService();\n     Date due = extendedTimeDeliveryService.hasExtendedTime() ? extendedTimeDeliveryService.getDueDate() : publishedAssessment.getAssessmentAccessControl().getDueDate();\n \n     if (due == null && AssessmentAccessControlIfc.ACCEPT_LATE_SUBMISSION.equals(publishedAssessment.getAssessmentAccessControl().getLateHandling())) {\n@@ -2147,6 +2150,7 @@ public boolean pastDueDate(){\n   public boolean isAcceptLateSubmission() {\n \t  boolean acceptLateSubmission = AssessmentAccessControlIfc.ACCEPT_LATE_SUBMISSION.equals(publishedAssessment.getAssessmentAccessControl().getLateHandling());\n \t  //If using extended Time Delivery, the late submission setting is based on retracted\n+\t  verifyExtendedTimeDeliveryService();\n \t  if (extendedTimeDeliveryService.hasExtendedTime()) {\n \t\t  //Accept it if it's not retracted on the extended time entry\n \t\t  acceptLateSubmission = (extendedTimeDeliveryService.getRetractDate() != null) ? !isRetracted(false) : false;\n@@ -2168,6 +2172,7 @@ public Date getRetractOrExtendedDate()\n   {\n     Date retractDate = null;\n     boolean acceptLateSubmission = AssessmentAccessControlIfc.ACCEPT_LATE_SUBMISSION.equals(publishedAssessment.getAssessmentAccessControl().getLateHandling());\n+    verifyExtendedTimeDeliveryService();\n     if (extendedTimeDeliveryService.hasExtendedTime()) {\n     \tretractDate = extendedTimeDeliveryService.getRetractDate();\n     } else if (acceptLateSubmission) {\n@@ -2606,4 +2611,13 @@ public String getPublishedURL() {\n         PublishedAssessmentSettingsBean pasBean = (PublishedAssessmentSettingsBean) ContextUtil.lookupBean(\"publishedSettings\");\n         return pasBean.generatePublishedURL(publishedAssessment);\n     }\n+\n+    /**\n+     * Ensure that the ExtendedTimeDeliveryService instance is making reference to the correct assessment.\n+     */\n+    private void verifyExtendedTimeDeliveryService() {\n+        if(!Objects.equals(extendedTimeDeliveryService.getPublishedAssessmentId(), publishedAssessment.getPublishedAssessmentId())) {\n+            extendedTimeDeliveryService = new ExtendedTimeDeliveryService(publishedAssessment);\n+        }\n+    }\n }"
  },
  {
    "sha": "46d18d784fda5865413451c1e15189a65d0fc810",
    "filename": "samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/util/ExtendedTimeDeliveryService.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/sakaiproject/sakai/blob/933facf19664608aac2c1735ea76fac10beabc55/samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/util/ExtendedTimeDeliveryService.java",
    "raw_url": "https://github.com/sakaiproject/sakai/raw/933facf19664608aac2c1735ea76fac10beabc55/samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/util/ExtendedTimeDeliveryService.java",
    "contents_url": "https://api.github.com/repos/sakaiproject/sakai/contents/samigo/samigo-services/src/java/org/sakaiproject/tool/assessment/util/ExtendedTimeDeliveryService.java?ref=933facf19664608aac2c1735ea76fac10beabc55",
    "patch": "@@ -19,6 +19,7 @@\n \n import java.util.*;\n \n+import lombok.Getter;\n import org.sakaiproject.authz.api.AuthzGroup;\n import org.sakaiproject.authz.api.AuthzGroupService;\n import org.sakaiproject.component.cover.ComponentManager;\n@@ -49,6 +50,9 @@\n \tprivate Date dueDate;\n \tprivate Date retractDate;\n \n+\t@Getter\n+\tprivate Long publishedAssessmentId;\n+\n \t/**\n \t * Creates an ExtendedTimeService object using the userId in the agentFacade as the current user\n \t * @param publishedAssessment a published assessment object\n@@ -74,7 +78,8 @@ public ExtendedTimeDeliveryService(PublishedAssessmentFacade publishedAssessment\n \t\t// Grab the site id from the publishedAssessment because the user may\n \t\t// not be in a site\n \t\t// if they're taking the test via url.\n-\t\tString pubId = publishedAssessment.getPublishedAssessmentId().toString();\n+\t\tpublishedAssessmentId = publishedAssessment.getPublishedAssessmentId();\n+\t\tString pubId = publishedAssessmentId.toString();\n \t\tsiteId = publishedAssessmentService.getPublishedAssessmentSiteId(pubId);\n \t\tPublishedAssessmentData pubData = publishedAssessmentService.getBasicInfoOfPublishedAssessment(pubId);\n "
  }
]
