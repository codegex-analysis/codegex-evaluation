[
  {
    "sha": "953db8dfb021ccec4e9631828a619be9728c97eb",
    "filename": "site-manage/datemanager/api/src/java/org/sakaiproject/datemanager/api/model/DateManagerUpdate.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/sakaiproject/sakai/blob/7150c9953bd75bcfeecd0d811822be1eeb4e789b/site-manage/datemanager/api/src/java/org/sakaiproject/datemanager/api/model/DateManagerUpdate.java",
    "raw_url": "https://github.com/sakaiproject/sakai/raw/7150c9953bd75bcfeecd0d811822be1eeb4e789b/site-manage/datemanager/api/src/java/org/sakaiproject/datemanager/api/model/DateManagerUpdate.java",
    "contents_url": "https://api.github.com/repos/sakaiproject/sakai/contents/site-manage/datemanager/api/src/java/org/sakaiproject/datemanager/api/model/DateManagerUpdate.java?ref=7150c9953bd75bcfeecd0d811822be1eeb4e789b",
    "patch": "@@ -15,16 +15,19 @@\n \n import java.time.Instant;\n \n-import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.Setter;\n \n-@AllArgsConstructor\n+@Getter @Setter\n public class DateManagerUpdate {\n \tpublic Object object;\n \tpublic Instant openDate;\n \tpublic Instant dueDate;\n \tpublic Instant acceptUntilDate;\n \tpublic Instant feedbackStartDate;\n \tpublic Instant feedbackEndDate;\n+\tpublic Instant signupBegins;\n+\tpublic Instant signupDeadline;\n \n \tpublic DateManagerUpdate(Object object, Instant openDate, Instant dueDate, Instant acceptUntilDate) {\n \t\tthis.object = object;"
  },
  {
    "sha": "aa60d98c3fc30126d884708eb7057aa4c9fdd2ac",
    "filename": "site-manage/datemanager/impl/src/bundle/datemanager.properties",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/sakaiproject/sakai/blob/7150c9953bd75bcfeecd0d811822be1eeb4e789b/site-manage/datemanager/impl/src/bundle/datemanager.properties",
    "raw_url": "https://github.com/sakaiproject/sakai/raw/7150c9953bd75bcfeecd0d811822be1eeb4e789b/site-manage/datemanager/impl/src/bundle/datemanager.properties",
    "contents_url": "https://api.github.com/repos/sakaiproject/sakai/contents/site-manage/datemanager/impl/src/bundle/datemanager.properties?ref=7150c9953bd75bcfeecd0d811822be1eeb4e789b",
    "patch": "@@ -5,8 +5,12 @@ error.open.date.not.found = Could not read Open date\n error.due.date.not.found = Could not read Due date\n error.accept.until.not.found = Could not read Accept Until date\n error.release.date.not.found = Could not read Release date\n+error.signup.begins.not.found = Could not read Sign-up Begin date\n+error.signup.deadline.not.found = Could not read Sign-up End date\n error.open.date.before.due.date = Open date must fall before due date\n error.open.date.before.close.date = Open date must fall before close date\n+error.signup.begins.after.open.date = Sign-up Begin date must fall before open date\n+error.signup.deadline.after.due.date = Sign-up End date must fall before due date\n error.due.date.before.accept.until = Due date cannot fall after Accept Until date\n error.feedback.start.not.found=Could not read Show Feedback On date\n error.feedback.end.not.found=Could not read Show Feedback Until date"
  },
  {
    "sha": "f169732a5a52be3608cc95946c38e8a0fe93a21e",
    "filename": "site-manage/datemanager/impl/src/java/org/sakaiproject/datemanager/impl/DateManagerServiceImpl.java",
    "status": "modified",
    "additions": 38,
    "deletions": 8,
    "changes": 46,
    "blob_url": "https://github.com/sakaiproject/sakai/blob/7150c9953bd75bcfeecd0d811822be1eeb4e789b/site-manage/datemanager/impl/src/java/org/sakaiproject/datemanager/impl/DateManagerServiceImpl.java",
    "raw_url": "https://github.com/sakaiproject/sakai/raw/7150c9953bd75bcfeecd0d811822be1eeb4e789b/site-manage/datemanager/impl/src/java/org/sakaiproject/datemanager/impl/DateManagerServiceImpl.java",
    "contents_url": "https://api.github.com/repos/sakaiproject/sakai/contents/site-manage/datemanager/impl/src/java/org/sakaiproject/datemanager/impl/DateManagerServiceImpl.java?ref=7150c9953bd75bcfeecd0d811822be1eeb4e789b",
    "patch": "@@ -484,7 +484,9 @@ public DateManagerValidation validateAssessments(String siteId, JSONArray assess\n \t\t\t\t\tfeedbackEnd = null;\n \t\t\t\t}\n \n-\t\t\t\tDateManagerUpdate update = new DateManagerUpdate(assessment, openDate, dueDate, acceptUntil, feedbackStart, feedbackEnd);\n+\t\t\t\tDateManagerUpdate update = new DateManagerUpdate(assessment, openDate, dueDate, acceptUntil);\n+\t\t\t\tupdate.setFeedbackStartDate(feedbackStart);\n+\t\t\t\tupdate.setFeedbackEndDate(feedbackEnd);\n \n \t\t\t\tif (dueDate != null && !update.openDate.isBefore(update.dueDate)) {\n \t\t\t\t\terrors.add(new DateManagerError(\"open_date\", rb.getString(\"error.open.date.before.due.date\"), \"assessments\", toolTitle, idx));\n@@ -662,6 +664,8 @@ public JSONArray getSignupMeetingsForContext(String siteId) {\n \t\t\tmobj.put(\"title\", meeting.getTitle());\n \t\t\tmobj.put(\"due_date\", formatToUserDateFormat(meeting.getEndTime()));\n \t\t\tmobj.put(\"open_date\", formatToUserDateFormat(meeting.getStartTime()));\n+\t\t\tmobj.put(\"signup_begins\", formatToUserDateFormat(meeting.getSignupBegins()));\n+\t\t\tmobj.put(\"signup_deadline\", formatToUserDateFormat(meeting.getSignupDeadline()));\n \t\t\tmobj.put(\"tool_title\", toolTitle);\n \t\t\tmobj.put(\"url\", url);\n \t\t\tmobj.put(\"extraInfo\", \"false\");\n@@ -697,6 +701,8 @@ public DateManagerValidation validateSignupMeetings(String siteId, JSONArray sig\n \n \t\t\t\tInstant openDate = userTimeService.parseISODateInUserTimezone((String)jsonMeeting.get(\"open_date\")).toInstant();\n \t\t\t\tInstant dueDate = userTimeService.parseISODateInUserTimezone((String)jsonMeeting.get(\"due_date\")).toInstant();\n+\t\t\t\tInstant signupBegins = userTimeService.parseISODateInUserTimezone((String)jsonMeeting.get(\"signup_begins\")).toInstant();\n+\t\t\t\tInstant signupDeadline = userTimeService.parseISODateInUserTimezone((String)jsonMeeting.get(\"signup_deadline\")).toInstant();\n \t\t\t\tboolean errored = false;\n \t\t\t\tif (openDate == null) {\n \t\t\t\t\terrors.add(new DateManagerError(\"open_date\", rb.getString(\"error.open.date.not.found\"), \"signupMeetings\", toolTitle, idx));\n@@ -706,6 +712,14 @@ public DateManagerValidation validateSignupMeetings(String siteId, JSONArray sig\n \t\t\t\t\terrors.add(new DateManagerError(\"due_date\", rb.getString(\"error.due.date.not.found\"), \"signupMeetings\", toolTitle, idx));\n \t\t\t\t\terrored = true;\n \t\t\t\t}\n+\t\t\t\tif (signupBegins == null) {\n+\t\t\t\t\terrors.add(new DateManagerError(\"signup_begins\", rb.getString(\"error.signup.begins.not.found\"), \"signupMeetings\", toolTitle, idx));\n+\t\t\t\t\terrored = true;\n+\t\t\t\t}\n+\t\t\t\tif (signupDeadline == null) {\n+\t\t\t\t\terrors.add(new DateManagerError(\"signup_deadline\", rb.getString(\"error.signup.deadline.not.found\"), \"signupMeetings\", toolTitle, idx));\n+\t\t\t\t\terrored = true;\n+\t\t\t\t}\n \t\t\t\tif (errored) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n@@ -717,10 +731,20 @@ public DateManagerValidation validateSignupMeetings(String siteId, JSONArray sig\n \t\t\t\t}\n \n \t\t\t\tDateManagerUpdate update = new DateManagerUpdate(meeting, openDate, dueDate, null);\n+\t\t\t\tupdate.setSignupBegins(signupBegins);\n+\t\t\t\tupdate.setSignupDeadline(signupDeadline);\n \t\t\t\tif (!update.openDate.isBefore(update.dueDate)) {\n \t\t\t\t\terrors.add(new DateManagerError(\"open_date\", rb.getString(\"error.open.date.before.due.date\"), \"signupMeetings\", toolTitle, idx));\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n+\t\t\t\tif (update.signupBegins.isAfter(update.openDate)) {\n+\t\t\t\t\terrors.add(new DateManagerError(\"signup_begins\", rb.getString(\"error.signup.begins.after.open.date\"), \"signupMeetings\", toolTitle, idx));\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\t\t\t\tif (update.signupDeadline.isAfter(update.dueDate)) {\n+\t\t\t\t\terrors.add(new DateManagerError(\"signup_deadline\", rb.getString(\"error.signup.deadline.after.due.date\"), \"signupMeetings\", toolTitle, idx));\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n \t\t\t\tupdates.add(update);\n \n \t\t\t} catch (Exception ex) {\n@@ -742,6 +766,8 @@ public void updateSignupMeetings(DateManagerValidation signupValidate) throws Ex\n \t\t\tSignupMeeting meeting = (SignupMeeting) update.object;\n \t\t\tmeeting.setStartTime(Date.from(update.openDate));\n \t\t\tmeeting.setEndTime(Date.from(update.dueDate));\n+\t\t\tmeeting.setSignupBegins(Date.from(update.signupBegins));\n+\t\t\tmeeting.setSignupDeadline(Date.from(update.signupDeadline));\n \t\t\tsignupService.updateSignupMeeting(meeting, true);\n \t\t}\n \t}\n@@ -1280,14 +1306,18 @@ public DateManagerValidation validateAnnouncements(String siteId, JSONArray anno\n \t * {@inheritDoc}\n \t */\n \t@Override\n-\tpublic void updateAnnouncements(DateManagerValidation announcementValidate) throws Exception {\n+\tpublic void updateAnnouncements(DateManagerValidation announcementValidate) {\n \t\tString anncRef = announcementService.channelReference(getCurrentSiteId(), SiteService.MAIN_CONTAINER);\n-\t\tAnnouncementChannel aChannel = announcementService.getAnnouncementChannel(anncRef);\n-\t\tfor (DateManagerUpdate update : (List<DateManagerUpdate>)(Object) announcementValidate.getUpdates()) {\n-\t\t\tAnnouncementMessageEdit msg = (AnnouncementMessageEdit) update.object;\n-\t\t\tmsg.getPropertiesEdit().addProperty(AnnouncementService.RELEASE_DATE, timeService.newTime(Date.from(update.openDate).getTime()).toString());\n-\t\t\tmsg.getPropertiesEdit().addProperty(AnnouncementService.RETRACT_DATE, timeService.newTime(Date.from(update.dueDate).getTime()).toString());\n-\t\t\taChannel.commitMessage(msg, NotificationService.NOTI_IGNORE);\n+\t\ttry {\n+\t\t\tAnnouncementChannel aChannel = announcementService.getAnnouncementChannel(anncRef);\n+\t\t\tfor (DateManagerUpdate update : (List<DateManagerUpdate>)(Object) announcementValidate.getUpdates()) {\n+\t\t\t\tAnnouncementMessageEdit msg = (AnnouncementMessageEdit) update.object;\n+\t\t\t\tmsg.getPropertiesEdit().addProperty(AnnouncementService.RELEASE_DATE, timeService.newTime(Date.from(update.openDate).getTime()).toString());\n+\t\t\t\tmsg.getPropertiesEdit().addProperty(AnnouncementService.RETRACT_DATE, timeService.newTime(Date.from(update.dueDate).getTime()).toString());\n+\t\t\t\taChannel.commitMessage(msg, NotificationService.NOTI_IGNORE);\n+\t\t\t}\n+\t\t} catch (Exception e) {\n+\t\t\tlog.error(\"Announcement channel {} doesn't exist. {}\", anncRef, e.getMessage());\n \t\t}\n \t}\n "
  },
  {
    "sha": "28f83df15d2f37d7a003322b71d276eb465991f7",
    "filename": "site-manage/datemanager/tool/src/main/resources/Messages.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/sakaiproject/sakai/blob/7150c9953bd75bcfeecd0d811822be1eeb4e789b/site-manage/datemanager/tool/src/main/resources/Messages.properties",
    "raw_url": "https://github.com/sakaiproject/sakai/raw/7150c9953bd75bcfeecd0d811822be1eeb4e789b/site-manage/datemanager/tool/src/main/resources/Messages.properties",
    "contents_url": "https://api.github.com/repos/sakaiproject/sakai/contents/site-manage/datemanager/tool/src/main/resources/Messages.properties?ref=7150c9953bd75bcfeecd0d811822be1eeb4e789b",
    "patch": "@@ -14,6 +14,8 @@ column.show.until = Show Until Date\n column.close.date = Close Date\n column.feedback.start.date = Show Feedback On\n column.feedback.end.date = Show Feedback Until\n+column.signup.begins.date = Sign-up Begin Date\n+column.signup.deadline.date = Sign-up End Date\n \n errors.instruction = Your update could not be saved due to the following errors:\n "
  },
  {
    "sha": "072ed8ccd81caf68bc71865448b5ae9926dec785",
    "filename": "site-manage/datemanager/tool/src/main/webapp/WEB-INF/templates/tool_fragment.html",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/sakaiproject/sakai/blob/7150c9953bd75bcfeecd0d811822be1eeb4e789b/site-manage/datemanager/tool/src/main/webapp/WEB-INF/templates/tool_fragment.html",
    "raw_url": "https://github.com/sakaiproject/sakai/raw/7150c9953bd75bcfeecd0d811822be1eeb4e789b/site-manage/datemanager/tool/src/main/webapp/WEB-INF/templates/tool_fragment.html",
    "contents_url": "https://api.github.com/repos/sakaiproject/sakai/contents/site-manage/datemanager/tool/src/main/webapp/WEB-INF/templates/tool_fragment.html?ref=7150c9953bd75bcfeecd0d811822be1eeb4e789b",
    "patch": "@@ -34,10 +34,12 @@\n \t\t\t\t\t</th:block>\n \t\t\t\t\t<th:block th:switch=\"${toolId}\">\n \t\t\t\t\t\t<th th:case=\"'assessments'\" th:text=\"#{column.feedback.start.date}\">Show Feedback On</th>\n+\t\t\t\t\t\t<th th:case=\"'signupMeetings'\" th:text=\"#{column.signup.begins.date}\">Sign-up Begins Date</th>\n \t\t\t\t\t\t<th:block th:case=\"*\"></th:block>\n \t\t\t\t\t</th:block>\n \t\t\t\t\t<th:block th:switch=\"${toolId}\">\n \t\t\t\t\t\t<th th:case=\"'assessments'\" th:text=\"#{column.feedback.end.date}\">Show Feedback Until</th>\n+\t\t\t\t\t\t<th th:case=\"'signupMeetings'\" th:text=\"#{column.signup.deadline.date}\">Sign-up Ends Date</th>\n \t\t\t\t\t\t<th:block th:case=\"*\"></th:block>\n \t\t\t\t\t</th:block>\n \t\t\t\t</tr>\n@@ -99,6 +101,14 @@\n \t\t\t\t\t\t\t\t\t<div><small class=\"errors\"></small></div>\n \t\t\t\t\t\t\t\t</div>\n \t\t\t\t\t\t\t</td>\n+\t\t\t\t\t\t\t<td th:case=\"'signupMeetings'\">\n+\t\t\t\t\t\t\t\t<div>\n+\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control datepicker\" />\n+\t\t\t\t\t\t\t\t\t<input type=\"hidden\" th:value=\"${item.signup_begins}\" th:attr=\"data-idx=${iter.index},data-tool=${toolId}\" data-field=\"signup_begins\" />\n+\t\t\t\t\t\t\t\t\t<div><small class=\"text-muted day-of-week\"></small></div>\n+\t\t\t\t\t\t\t\t\t<div><small class=\"errors\"></small></div>\n+\t\t\t\t\t\t\t\t</div>\n+\t\t\t\t\t\t\t</td>\n \t\t\t\t\t\t\t<th:block th:case=\"*\">\n \t\t\t\t\t\t\t</th:block>\n \t\t\t\t\t\t</th:block>\n@@ -111,6 +121,14 @@\n \t\t\t\t\t\t\t\t\t<div><small class=\"errors\"></small></div>\n \t\t\t\t\t\t\t\t</div>\n \t\t\t\t\t\t\t</td>\n+\t\t\t\t\t\t\t<td th:case=\"'signupMeetings'\">\n+\t\t\t\t\t\t\t\t<div>\n+\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control datepicker\" />\n+\t\t\t\t\t\t\t\t\t<input type=\"hidden\" th:value=\"${item.signup_deadline}\" th:attr=\"data-idx=${iter.index},data-tool=${toolId}\" data-field=\"signup_deadline\" />\n+\t\t\t\t\t\t\t\t\t<div><small class=\"text-muted day-of-week\"></small></div>\n+\t\t\t\t\t\t\t\t\t<div><small class=\"errors\"></small></div>\n+\t\t\t\t\t\t\t\t</div>\n+\t\t\t\t\t\t\t</td>\n \t\t\t\t\t\t\t<th:block th:case=\"*\">\n \t\t\t\t\t\t\t</th:block>\n \t\t\t\t\t\t</th:block>"
  }
]
