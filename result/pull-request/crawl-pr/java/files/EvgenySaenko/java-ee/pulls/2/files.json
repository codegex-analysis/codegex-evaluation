[
  {
    "sha": "9a99e67d6e38f93ef80b2100d5e2fbf3ef707205",
    "filename": ".github/workflows/first-web-app-build-deploy.yaml",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/.github/workflows/first-web-app-build-deploy.yaml",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/.github/workflows/first-web-app-build-deploy.yaml",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/.github/workflows/first-web-app-build-deploy.yaml?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -0,0 +1,25 @@\n+name: first-web-app build and deploy to remote Wildfly\n+\n+on: [push]\n+\n+\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - uses: actions/checkout@v2\n+\n+      - name: Set up JDK 11\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 11\n+\n+      - name: Build with Maven\n+        id: mvn_build\n+        run: |\n+          cd first-web-app\n+          mvn --batch-mode clean install wildfly:undeploy wildfly:deploy \\\n+          -Dwildfly.hostname=${{ secrets.WILDFLY_REMOTE_HOST }} \\\n+          -Dwildfly.username=${{ secrets.WILDFLY_ADMIN_LOGIN }} \\\n+          -Dwildfly.password=${{ secrets.WILDFLY_ADMIN_PASSWORD }}\n\\ No newline at end of file"
  },
  {
    "sha": "8d7d33d54b5fca723a7fa98ecdb4b194a1f40d49",
    "filename": "first-web-app/src/main/java/ru/geekbrains/AccessDeniedServlet.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/AccessDeniedServlet.java",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/AccessDeniedServlet.java",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/java/ru/geekbrains/AccessDeniedServlet.java?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -0,0 +1,23 @@\n+package ru.geekbrains;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.annotation.WebServlet;\n+import javax.servlet.http.HttpServlet;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+@WebServlet(urlPatterns = \"/access_denied\")\n+public class AccessDeniedServlet extends HttpServlet {\n+    private static final Logger logger = LoggerFactory.getLogger(AccessDeniedServlet.class);\n+\n+    @Override\n+    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n+        logger.info(\"Access denied servlet\");\n+\n+        resp.getWriter().println(\"<h1>Access denied</h1>\");\n+    }\n+}"
  },
  {
    "sha": "83718ac4f8bf998a39242c28e6176cdf26be9d5b",
    "filename": "first-web-app/src/main/java/ru/geekbrains/FirstHttpServlet.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/FirstHttpServlet.java",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/FirstHttpServlet.java",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/java/ru/geekbrains/FirstHttpServlet.java?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -0,0 +1,40 @@\n+package ru.geekbrains;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.annotation.WebServlet;\n+import javax.servlet.http.HttpServlet;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+/*\n+    \"\"                  /first-web-app\n+    \"/http-servlet\"     /first-web-app/http-servlet\n+    \"/http-servlet/*\"   /first-web-app/http-servlet\n+                        /first-web-app/http-servlet/sddadas\n+                        /first-web-app/http-servlet/sdfsdf/sdfsdf/sdfsdfsd/sdfsdfds\n+    \"*.jpeg\"            /first-web-app/dsfasdf/asdfasdf/asdfasdf.jpeg\n+    \"/*\"                 не рекомендуется использовать для сервлетов\n+    \"/\"                  запросы на все внешние префиксы сервера приложений\n+ */\n+\n+@WebServlet(urlPatterns = \"/http-servlet/*\")\n+public class FirstHttpServlet extends HttpServlet {\n+\n+    @Override\n+    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n+        resp.setHeader(\"some-header\", \"value\");\n+\n+        resp.getWriter().println(\"<h1>Hello from HTTP Servlet</h1>\");\n+        resp.getWriter().println(\"<h2>Можно и русскими буквами</h2>\");\n+\n+        resp.getWriter().println(\"<p>contextPath: \" + req.getContextPath() + \"</p>\");\n+        resp.getWriter().println(\"<p>servletPath: \" + req.getServletPath() + \"</p>\");\n+        resp.getWriter().println(\"<p>pathInfo: \" + req.getPathInfo() + \"</p>\");\n+        resp.getWriter().println(\"<p>queryString: \" + req.getQueryString() + \"</p>\");\n+        resp.getWriter().println(\"<p>param1: \" + req.getParameter(\"param1\") + \"</p>\");\n+        resp.getWriter().println(\"<p>param2: \" + req.getParameter(\"param2\") + \"</p>\");\n+        resp.getWriter().println(\"<p> Header - User-Agent: \" + req.getHeader(\"User-Agent\") + \"</p>\");\n+    }\n+\n+}"
  },
  {
    "sha": "8634da08d7130a69a722be797269d35e2929adb3",
    "filename": "first-web-app/src/main/java/ru/geekbrains/FirstServlet.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/FirstServlet.java",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/FirstServlet.java",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/java/ru/geekbrains/FirstServlet.java?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -6,11 +6,15 @@\n \n import javax.servlet.*;\n import java.io.IOException;\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n \n public class FirstServlet implements Servlet {\n     private static final Logger logger = LoggerFactory.getLogger(FirstServlet.class);\n     private ServletConfig config;\n \n+    private List<String> sharedList = new CopyOnWriteArrayList<>();\n+\n     @Override\n     public void init(ServletConfig config) throws ServletException {\n         logger.info(\"Servlet initialized\");\n@@ -23,11 +27,14 @@ public ServletConfig getServletConfig() {\n         return this.config;\n     }\n \n-    @Override\n+    @Override//вызывается при каждом запросе\n     public void service(ServletRequest req, ServletResponse res) throws ServletException, IOException {\n         logger.info(\"New request\");\n \n+        sharedList.add(\"asdada\");\n+\n         res.getWriter().println(\"<h1>Hello from Servlet!!!</h1>\");\n+        res.getWriter().println(\"<h2>Привет!!!</h2>\");\n     }\n \n     @Override"
  },
  {
    "sha": "33b7a34becddc42ad47b7fafb5339615b279adfe",
    "filename": "first-web-app/src/main/java/ru/geekbrains/ProductServlet.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/ProductServlet.java",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/ProductServlet.java",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/java/ru/geekbrains/ProductServlet.java?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -0,0 +1,62 @@\n+package ru.geekbrains;\n+\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import ru.geekbrains.listener.StartupListener;\n+import ru.geekbrains.persist.Product;\n+import ru.geekbrains.persist.ProductRepository;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.annotation.WebServlet;\n+import javax.servlet.http.HttpServlet;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+@WebServlet(urlPatterns = \"/product/*\")\n+public class ProductServlet extends HttpServlet {\n+\n+    private ProductRepository productRepository;\n+    private static final Logger logger = LoggerFactory.getLogger(StartupListener.class);\n+\n+\n+    @Override\n+    public void init() throws ServletException {\n+        productRepository = (ProductRepository) getServletContext().getAttribute(\"productRepository\");\n+    }\n+\n+    @Override\n+    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n+\n+        if (req.getPathInfo() == null) {\n+            resp.getWriter().println(\"<table>\");\n+            resp.getWriter().println(\"<tr>\");\n+            resp.getWriter().println(\"<th>Id</th>\");\n+            resp.getWriter().println(\"<th>Name</th>\");\n+            resp.getWriter().println(\"<th>Description</th>\");\n+            resp.getWriter().println(\"<th>Price</th>\");\n+            resp.getWriter().println(\"</tr>\");\n+\n+            for (Product product : productRepository.findAll()) {\n+                resp.getWriter().println(\"<tr>\");\n+                resp.getWriter().println(\"<td><a href='\" + getServletContext().getContextPath() + \"/product/\" + product.getId() + \"'>\" + product.getId() + \"</a></td>\");\n+                resp.getWriter().println(\"<td>\" + product.getName() + \"</td>\");\n+                resp.getWriter().println(\"<td>\" + product.getDescription() + \"</td>\");\n+                resp.getWriter().println(\"<td>\" + product.getPrice() + \"</td>\");\n+                resp.getWriter().println(\"</tr>\");\n+            }\n+            resp.getWriter().println(\"</table>\");\n+        } else {\n+            Product product = productRepository.findById(Long.valueOf(req.getPathInfo().replaceAll(\"\\\\W\", \"\")));\n+            resp.getWriter().println(\"<p>Product info</p>\");\n+            resp.getWriter().println(\"<p>Id: \" + product.getId() + \"</p>\");\n+            resp.getWriter().println(\"<p>Name: \" + product.getName() + \"</p>\");\n+            resp.getWriter().println(\"<p>Description: \" + product.getDescription() + \"</p>\");\n+            resp.getWriter().println(\"<p>Price: \" + product.getPrice() + \"</p>\");\n+            resp.getWriter().println(\"<a href='\" + getServletContext().getContextPath() + \"/product\" + \"'>\" + \"Products Page \" + \"</a>\");\n+        }\n+\n+    }\n+\n+}"
  },
  {
    "sha": "20715f29e5ea9d6699adf3d77807f5057aa90600",
    "filename": "first-web-app/src/main/java/ru/geekbrains/filter/EncodingFilter.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/filter/EncodingFilter.java",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/filter/EncodingFilter.java",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/java/ru/geekbrains/filter/EncodingFilter.java?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -0,0 +1,38 @@\n+package ru.geekbrains.filter;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.servlet.*;\n+import javax.servlet.annotation.WebFilter;\n+import java.io.IOException;\n+\n+@WebFilter(urlPatterns = \"/*\")\n+public class EncodingFilter implements Filter {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(EncodingFilter.class);\n+\n+    private FilterConfig filterConfig;\n+\n+    @Override\n+    public void init(FilterConfig filterConfig) throws ServletException {\n+        this.filterConfig = filterConfig;\n+    }\n+\n+    @Override\n+    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n+        logger.info(\"Encoding filter\");\n+        //перед тем как запрос прийдет на сервлет установим кодировку\n+        response.setContentType(\"text/html\");\n+        response.setCharacterEncoding(\"UTF-8\");\n+\n+        //все что выше это если что-то нужно сделать до того как запрос попадет сервлету\n+        chain.doFilter(request, response);\n+        //после как запрос уже попал в сервлет\n+    }\n+\n+    @Override\n+    public void destroy() {\n+\n+    }\n+}"
  },
  {
    "sha": "203541597d95f2aec8aa4b958d11c64d61f9aec2",
    "filename": "first-web-app/src/main/java/ru/geekbrains/filter/SecurityFilter.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/filter/SecurityFilter.java",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/filter/SecurityFilter.java",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/java/ru/geekbrains/filter/SecurityFilter.java?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -0,0 +1,37 @@\n+package ru.geekbrains.filter;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.servlet.*;\n+import javax.servlet.annotation.WebFilter;\n+import java.io.IOException;\n+\n+@WebFilter(\"/admin/*\")\n+public class SecurityFilter implements Filter {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(SecurityFilter.class);\n+\n+    private FilterConfig filterConfig;\n+\n+    @Override\n+    public void init(FilterConfig filterConfig) throws ServletException {\n+        this.filterConfig = filterConfig;\n+    }\n+\n+    @Override\n+    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n+        logger.info(\"Security filter\");\n+\n+        if (request.getParameter(\"username\") != null) {\n+            chain.doFilter(request, response);\n+        } else {//RequestDispatcher для внутренних запросов между сервлетами\n+            filterConfig.getServletContext().getRequestDispatcher(\"/access_denied\").forward(request, response);\n+        }\n+    }\n+\n+    @Override\n+    public void destroy() {\n+\n+    }\n+}"
  },
  {
    "sha": "fa20be99390a22d0f607e8ea1df1e77682fd71ff",
    "filename": "first-web-app/src/main/java/ru/geekbrains/listener/StartupListener.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/listener/StartupListener.java",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/listener/StartupListener.java",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/java/ru/geekbrains/listener/StartupListener.java?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -0,0 +1,31 @@\n+package ru.geekbrains.listener;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import ru.geekbrains.persist.Product;\n+import ru.geekbrains.persist.ProductRepository;\n+\n+import javax.servlet.ServletContextEvent;\n+import javax.servlet.ServletContextListener;\n+import javax.servlet.annotation.WebListener;\n+import java.math.BigDecimal;\n+\n+@WebListener\n+public class StartupListener implements ServletContextListener {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(StartupListener.class);\n+\n+    @Override//будет вызван когда приложение запустится один раз\n+    public void contextInitialized(ServletContextEvent sce) {\n+        logger.info(\"Startup Listener\");\n+\n+        //создастся репозиторий\n+        ProductRepository productRepository = new ProductRepository();\n+        //и наполнится контентом\n+        productRepository.save(new Product(null,\"Product1\",\"Description 1\", new BigDecimal(100)));\n+        productRepository.save(new Product(null,\"Product2\",\"Description 2\", new BigDecimal(200)));\n+        productRepository.save(new Product(null,\"Product3\",\"Description 3\", new BigDecimal(300)));\n+        //помещаем репозиторий сюда и вытащить его можем где угодно\n+        sce.getServletContext().setAttribute(\"productRepository\",productRepository);\n+    }\n+}"
  },
  {
    "sha": "d1adf5b57b087a505d721310585688d1d2efb992",
    "filename": "first-web-app/src/main/java/ru/geekbrains/persist/Product.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/persist/Product.java",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/persist/Product.java",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/java/ru/geekbrains/persist/Product.java?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -0,0 +1,56 @@\n+package ru.geekbrains.persist;\n+\n+import java.math.BigDecimal;\n+\n+public class Product {\n+\n+    private Long id;\n+\n+    private String name;\n+\n+    private String description;\n+\n+    private BigDecimal price;\n+\n+    public Product() {\n+    }\n+\n+    public Product(Long id, String name, String description, BigDecimal price) {\n+        this.id = id;\n+        this.name = name;\n+        this.description = description;\n+        this.price = price;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public BigDecimal getPrice() {\n+        return price;\n+    }\n+\n+    public void setPrice(BigDecimal price) {\n+        this.price = price;\n+    }\n+}"
  },
  {
    "sha": "9092431e73fe570b9add8e8e3074472b70784042",
    "filename": "first-web-app/src/main/java/ru/geekbrains/persist/ProductRepository.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/persist/ProductRepository.java",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/java/ru/geekbrains/persist/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/java/ru/geekbrains/persist/ProductRepository.java?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -0,0 +1,34 @@\n+package ru.geekbrains.persist;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+public class ProductRepository {\n+\n+    private final Map<Long, Product> productMap = new ConcurrentHashMap<>();\n+\n+    //используем для генерации id\n+    private final AtomicLong identity = new AtomicLong(0);\n+\n+    public void save(Product product) {\n+        if (product.getId() == null) {//присваиваем следующий id\n+            product.setId(identity.incrementAndGet());\n+        }\n+        productMap.put(product.getId(), product);\n+    }\n+\n+    public void delete(Long id) {\n+        productMap.remove(id);\n+    }\n+\n+    public Product findById(Long id) {\n+        return productMap.get(id);\n+    }\n+\n+    public List<Product> findAll() {\n+        return new ArrayList<>(productMap.values());\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "28ea1f417bb6c59b19838fe4815ecb27aea95d12",
    "filename": "first-web-app/src/main/webapp/WEB-INF/web.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/webapp/WEB-INF/web.xml",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/webapp/WEB-INF/web.xml",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/webapp/WEB-INF/web.xml?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -16,4 +16,12 @@\n         <url-pattern></url-pattern>\n     </servlet-mapping>\n \n+    <servlet-mapping>\n+        <servlet-name>default</servlet-name>\n+        <url-pattern>*.html</url-pattern>\n+        <url-pattern>*.js</url-pattern>\n+        <url-pattern>*.css</url-pattern>\n+        <url-pattern>*.jpg</url-pattern>\n+    </servlet-mapping>\n+\n </web-app>\n\\ No newline at end of file"
  },
  {
    "sha": "2ee591337d214f4e9141e838e41a858c4538d71c",
    "filename": "first-web-app/src/main/webapp/some.html",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/EvgenySaenko/java-ee/blob/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/webapp/some.html",
    "raw_url": "https://github.com/EvgenySaenko/java-ee/raw/6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5/first-web-app/src/main/webapp/some.html",
    "contents_url": "https://api.github.com/repos/EvgenySaenko/java-ee/contents/first-web-app/src/main/webapp/some.html?ref=6bf43e55b57e72c72c8a49ee2a3813e8d0a7e0a5",
    "patch": "@@ -0,0 +1,12 @@\n+\n+<html lang=\"en\">\n+\n+<head>\n+    <title>Some HTML</title>\n+</head>\n+\n+<body>\n+    <h1>Some HTML</h1>\n+</body>\n+\n+</html>\n\\ No newline at end of file"
  }
]
