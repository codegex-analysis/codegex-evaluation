[
  {
    "sha": "3cee72159577de7623a8e0e759652f8c3b1a0b59",
    "filename": "hw15/build.gradle",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/build.gradle",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/build.gradle",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/build.gradle?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,28 @@\n+plugins {\n+    id 'java'\n+}\n+\n+sourceCompatibility = JavaVersion.VERSION_15\n+targetCompatibility = JavaVersion.VERSION_15\n+\n+dependencies {\n+    testImplementation ('org.junit.jupiter:junit-jupiter-api')\n+    testImplementation ('org.junit.jupiter:junit-jupiter-engine')\n+    testImplementation ('org.junit.jupiter:junit-jupiter-params')\n+    testImplementation ('org.assertj:assertj-core')\n+    testImplementation ('org.mockito:mockito-core')\n+    testImplementation ('org.mockito:mockito-junit-jupiter')\n+}\n+\n+test {\n+    useJUnitPlatform()\n+    testLogging {\n+        events \"passed\", \"skipped\", \"failed\"\n+    }\n+}\n+\n+tasks.withType(JavaCompile) {\n+    options.with {\n+        encoding = 'UTF-8'\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "3022497bf3a73e1dfe9e0511386005e3358d499e",
    "filename": "hw15/src/main/java/ru/otus/Demo.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/Demo.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/Demo.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/Demo.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,34 @@\n+package ru.otus;\n+\n+import ru.otus.handler.ComplexProcessor;\n+import ru.otus.listener.ListenerPrinter;\n+import ru.otus.model.Message;\n+import ru.otus.processor.LoggerProcessor;\n+import ru.otus.processor.ProcessorConcatFields;\n+import ru.otus.processor.ProcessorUpperField10;\n+\n+import java.util.List;\n+\n+public class Demo {\n+    public static void main(String[] args) {\n+        var processors = List.of(new ProcessorConcatFields(),\n+                new LoggerProcessor(new ProcessorUpperField10()));\n+\n+        var complexProcessor = new ComplexProcessor(processors, (ex) -> {});\n+        var listenerPrinter = new ListenerPrinter();\n+        complexProcessor.addListener(listenerPrinter);\n+\n+        var message = new Message.Builder(1L)\n+                .field1(\"field1\")\n+                .field2(\"field2\")\n+                .field3(\"field3\")\n+                .field6(\"field6\")\n+                .field10(\"field10\")\n+                .build();\n+\n+        var result = complexProcessor.handle(message);\n+        System.out.println(\"result:\" + result);\n+\n+        complexProcessor.removeListener(listenerPrinter);\n+    }\n+}"
  },
  {
    "sha": "37eb2480a14081f345a2652fcdfb9b404063b1e8",
    "filename": "hw15/src/main/java/ru/otus/HomeWork.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/HomeWork.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/HomeWork.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/HomeWork.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,50 @@\n+package ru.otus;\n+\n+import ru.otus.handler.ComplexProcessor;\n+import ru.otus.listener.HistoryListener;\n+import ru.otus.model.Message;\n+import ru.otus.processor.*;\n+\n+import java.util.List;\n+\n+public class HomeWork {\n+\n+    /*\n+     Реализовать to do:\n+       1. Добавить поля field11 - field13 (для field13 используйте класс ObjectForMessage)\n+       2. Сделать процессор, который поменяет местами значения field11 и field12\n+       3. Сделать процессор, который будет выбрасывать исключение в четную секунду (сделайте тест с гарантированным результатом)\n+            Секунда должна определяьться во время выполнения.\n+       4. Сделать Listener для ведения истории: старое сообщение - новое (подумайте, как сделать, чтобы сообщения не портились)\n+     */\n+\n+    public static void main(String[] args) {\n+        /*\n+           по аналогии с Demo.class\n+           из элеменов \"to do\" создать new ComplexProcessor и обработать сообщение\n+         */\n+\n+        var processors = List.of(new ProcessorSwapFields11And12(),\n+                new LoggerProcessor(new ProcessorThrowingExceptionEveryEvenSecond(new TimeProvider())));\n+\n+        var complexProcessor = new ComplexProcessor(processors, (ex) -> System.out.println(ex.getMessage()));\n+        var listenerHistory = new HistoryListener();\n+        complexProcessor.addListener(listenerHistory);\n+\n+        var message = new Message.Builder(1L)\n+                .field1(\"field1\")\n+                .field2(\"field2\")\n+                .field3(\"field3\")\n+                .field6(\"field6\")\n+                .field10(\"field10\")\n+                .field11(\"field11\")\n+                .field12(\"field12\")\n+                .build();\n+\n+        var result = complexProcessor.handle(message);\n+        System.out.println(\"result:\" + result);\n+        System.out.println(listenerHistory.getHistory());\n+\n+        complexProcessor.removeListener(listenerHistory);\n+    }\n+}"
  },
  {
    "sha": "69d009f36c8ed346854e04f7bb38a9ffcde7c435",
    "filename": "hw15/src/main/java/ru/otus/TimeProvider.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/TimeProvider.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/TimeProvider.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/TimeProvider.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,10 @@\n+package ru.otus;\n+\n+import java.time.LocalDateTime;\n+\n+public class TimeProvider {\n+\n+    public LocalDateTime getCurrentTime(){\n+        return LocalDateTime.now();\n+    }\n+}"
  },
  {
    "sha": "4f94a9b12ce0e41dc7ff61a3a008d2ccd48c3b11",
    "filename": "hw15/src/main/java/ru/otus/handler/ComplexProcessor.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/handler/ComplexProcessor.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/handler/ComplexProcessor.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/handler/ComplexProcessor.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,55 @@\n+package ru.otus.handler;\n+\n+import ru.otus.model.Message;\n+import ru.otus.listener.Listener;\n+import ru.otus.processor.Processor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+public class ComplexProcessor implements Handler {\n+\n+    private final List<Listener> listeners = new ArrayList<>();\n+    private final List<Processor> processors;\n+    private final Consumer<Exception> errorHandler;\n+\n+    public ComplexProcessor(List<Processor> processors, Consumer<Exception> errorHandler) {\n+        this.processors = processors;\n+        this.errorHandler = errorHandler;\n+    }\n+\n+    @Override\n+    public Message handle(Message msg) {\n+        Message newMsg = msg;\n+        for (Processor pros : processors) {\n+            try {\n+                newMsg = pros.process(newMsg);\n+            } catch (Exception ex) {\n+                errorHandler.accept(ex);\n+            }\n+        }\n+        notify(msg, newMsg);\n+        return newMsg;\n+    }\n+\n+    @Override\n+    public void addListener(Listener listener) {\n+        listeners.add(listener);\n+    }\n+\n+    @Override\n+    public void removeListener(Listener listener) {\n+        listeners.remove(listener);\n+    }\n+\n+    private void notify(Message oldMsg, Message newMsg) {\n+        listeners.forEach(listener -> {\n+            try {\n+                listener.onUpdated(oldMsg, newMsg);\n+            } catch (Exception ex) {\n+                ex.printStackTrace();\n+            }\n+        });\n+    }\n+}"
  },
  {
    "sha": "52cb90240aa7df72e6c84c82af288b556a174c7d",
    "filename": "hw15/src/main/java/ru/otus/handler/Handler.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/handler/Handler.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/handler/Handler.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/handler/Handler.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.handler;\n+\n+import ru.otus.model.Message;\n+import ru.otus.listener.Listener;\n+\n+public interface Handler {\n+    Message handle(Message msg);\n+\n+    void addListener(Listener listener);\n+    void removeListener(Listener listener);\n+}"
  },
  {
    "sha": "2485a64f7ddc5f0b41b804d5af4964318cca977f",
    "filename": "hw15/src/main/java/ru/otus/listener/HistoryListener.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/listener/HistoryListener.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/listener/HistoryListener.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/listener/HistoryListener.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,38 @@\n+package ru.otus.listener;\n+\n+import ru.otus.model.Message;\n+import ru.otus.model.ObjectForMessage;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class HistoryListener implements Listener {\n+    private final Map<Message, Message> history = new LinkedHashMap<>();\n+\n+    @Override\n+    public void onUpdated(Message oldMsg, Message newMsg) {\n+        oldMsg = getCopyOfMessage(oldMsg);\n+        newMsg = getCopyOfMessage(newMsg);\n+\n+        history.put(oldMsg, newMsg);\n+    }\n+\n+    private Message getCopyOfMessage(Message message) {\n+        var objFromMessage = message.getField13();\n+        if (objFromMessage != null) {\n+            var objForMessage = new ObjectForMessage();\n+            objForMessage.setData(objFromMessage.getData());\n+            message = message.toBuilder().field13(objForMessage).build();\n+        }\n+        return message;\n+    }\n+\n+    public Map<Message, Message> getHistory() {\n+        return history;\n+    }\n+\n+    public Optional<Message> findMessageById(long id) {\n+        return history.keySet().stream().filter(message -> message.getId() == id).findFirst();\n+    }\n+}"
  },
  {
    "sha": "00573326cd647d6cd445fb376eaa725abf5edb64",
    "filename": "hw15/src/main/java/ru/otus/listener/Listener.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/listener/Listener.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/listener/Listener.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/listener/Listener.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.otus.listener;\n+\n+import ru.otus.model.Message;\n+\n+public interface Listener {\n+\n+    void onUpdated(Message oldMsg, Message newMsg);\n+\n+    //todo: 4. Сделать Listener для ведения истории: старое сообщение - новое (подумайте, как сделать, чтобы сообщения не портились)\n+    /*\n+     Сделайте такой тест:\n+        - положите сообщение в лисенер\n+        - поменяйте сообщение\n+        - проверьте, сто в лисенере сообщение не изменилось\n+    */\n+}"
  },
  {
    "sha": "c2728a8291fa227cfb512920602da6509b61c250",
    "filename": "hw15/src/main/java/ru/otus/listener/ListenerPrinter.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/listener/ListenerPrinter.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/listener/ListenerPrinter.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/listener/ListenerPrinter.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,12 @@\n+package ru.otus.listener;\n+\n+import ru.otus.model.Message;\n+\n+public class ListenerPrinter implements Listener {\n+\n+    @Override\n+    public void onUpdated(Message oldMsg, Message newMsg) {\n+        var logString = String.format(\"oldMsg:%s, newMsg:%s\", oldMsg, newMsg);\n+        System.out.println(logString);\n+    }\n+}"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "hw15/src/main/java/ru/otus/listener/homework/forHomework",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/listener/homework/forHomework",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/listener/homework/forHomework",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/listener/homework/forHomework?ref=0657a0331f19e5ade3228b4ee03bec487b450351"
  },
  {
    "sha": "de7a899b0cfc4b07078d4d608522d5cd45e050c9",
    "filename": "hw15/src/main/java/ru/otus/model/Message.java",
    "status": "added",
    "additions": 239,
    "deletions": 0,
    "changes": 239,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/model/Message.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/model/Message.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/model/Message.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,239 @@\n+package ru.otus.model;\n+\n+public class Message {\n+    private final long id;\n+    private final String field1;\n+    private final String field2;\n+    private final String field3;\n+    private final String field4;\n+    private final String field5;\n+    private final String field6;\n+    private final String field7;\n+    private final String field8;\n+    private final String field9;\n+    private final String field10;\n+    private final String field11;\n+    private final String field12;\n+    private final ObjectForMessage field13;\n+\n+    //todo: 1. Добавить поля field11 - field13 (для field13 используйте класс ObjectForMessage)\n+\n+    private Message(long id, String field1, String field2, String field3, String field4, String field5, String field6, String field7, String field8, String field9, String field10, String field11, String field12, ObjectForMessage field13) {\n+        this.id = id;\n+        this.field1 = field1;\n+        this.field2 = field2;\n+        this.field3 = field3;\n+        this.field4 = field4;\n+        this.field5 = field5;\n+        this.field6 = field6;\n+        this.field7 = field7;\n+        this.field8 = field8;\n+        this.field9 = field9;\n+        this.field10 = field10;\n+        this.field11 = field11;\n+        this.field12 = field12;\n+        this.field13 = field13;\n+    }\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public String getField1() {\n+        return field1;\n+    }\n+\n+    public String getField2() {\n+        return field2;\n+    }\n+\n+    public String getField3() {\n+        return field3;\n+    }\n+\n+    public String getField4() {\n+        return field4;\n+    }\n+\n+    public String getField5() {\n+        return field5;\n+    }\n+\n+    public String getField6() {\n+        return field6;\n+    }\n+\n+    public String getField7() {\n+        return field7;\n+    }\n+\n+    public String getField8() {\n+        return field8;\n+    }\n+\n+    public String getField9() {\n+        return field9;\n+    }\n+\n+    public String getField10() {\n+        return field10;\n+    }\n+\n+    public String getField11() {\n+        return field11;\n+    }\n+\n+    public String getField12() {\n+        return field12;\n+    }\n+\n+    public ObjectForMessage getField13() {\n+        return field13;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+\n+        Message message = (Message) o;\n+\n+        return id == message.id;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return (int) (id ^ (id >>> 32));\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder(id, field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Message{\" +\n+                \"id=\" + id +\n+                \", field1='\" + field1 + '\\'' +\n+                \", field2='\" + field2 + '\\'' +\n+                \", field3='\" + field3 + '\\'' +\n+                \", field4='\" + field4 + '\\'' +\n+                \", field5='\" + field5 + '\\'' +\n+                \", field6='\" + field6 + '\\'' +\n+                \", field7='\" + field7 + '\\'' +\n+                \", field8='\" + field8 + '\\'' +\n+                \", field9='\" + field9 + '\\'' +\n+                \", field10='\" + field10 + '\\'' +\n+                \", field11='\" + field11 + '\\'' +\n+                \", field12='\" + field12 + '\\'' +\n+                \", field13='\" + field13 + '\\'' +\n+                '}';\n+    }\n+\n+    public static class Builder {\n+        private final long id;\n+        private String field1;\n+        private String field2;\n+        private String field3;\n+        private String field4;\n+        private String field5;\n+        private String field6;\n+        private String field7;\n+        private String field8;\n+        private String field9;\n+        private String field10;\n+        private String field11;\n+        private String field12;\n+        private ObjectForMessage field13;\n+\n+        public Builder(long id) {\n+            this.id = id;\n+        }\n+\n+        private Builder(long id, String field1, String field2, String field3, String field4, String field5, String field6, String field7, String field8, String field9, String field10, String field11, String field12, ObjectForMessage field13) {\n+            this.id = id;\n+            this.field1 = field1;\n+            this.field2 = field2;\n+            this.field3 = field3;\n+            this.field4 = field4;\n+            this.field5 = field5;\n+            this.field6 = field6;\n+            this.field7 = field7;\n+            this.field8 = field8;\n+            this.field9 = field9;\n+            this.field10 = field10;\n+            this.field11 = field11;\n+            this.field12 = field12;\n+            this.field13 = field13;\n+        }\n+\n+        public Builder field1(String field1) {\n+            this.field1 = field1;\n+            return this;\n+        }\n+\n+        public Builder field2(String field2) {\n+            this.field2 = field2;\n+            return this;\n+        }\n+\n+        public Builder field3(String field3) {\n+            this.field3 = field3;\n+            return this;\n+        }\n+\n+        public Builder field4(String field4) {\n+            this.field4 = field4;\n+            return this;\n+        }\n+\n+        public Builder field5(String field5) {\n+            this.field5 = field5;\n+            return this;\n+        }\n+\n+        public Builder field6(String field6) {\n+            this.field6 = field6;\n+            return this;\n+        }\n+\n+        public Builder field7(String field7) {\n+            this.field7 = field7;\n+            return this;\n+        }\n+\n+        public Builder field8(String field8) {\n+            this.field8 = field8;\n+            return this;\n+        }\n+\n+        public Builder field9(String field9) {\n+            this.field9 = field9;\n+            return this;\n+        }\n+\n+        public Builder field10(String field10) {\n+            this.field10 = field10;\n+            return this;\n+        }\n+\n+        public Builder field11(String field11) {\n+            this.field11 = field11;\n+            return this;\n+        }\n+\n+        public Builder field12(String field12) {\n+            this.field12 = field12;\n+            return this;\n+        }\n+\n+        public Builder field13(ObjectForMessage field13) {\n+            this.field13 = field13;\n+            return this;\n+        }\n+\n+        public Message build() {\n+            return new Message(id, field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13);\n+        }\n+    }\n+}"
  },
  {
    "sha": "fa118c6379af9290c8f3125f9422f5800079c703",
    "filename": "hw15/src/main/java/ru/otus/model/ObjectForMessage.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/model/ObjectForMessage.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/model/ObjectForMessage.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/model/ObjectForMessage.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.otus.model;\n+\n+import java.util.List;\n+\n+public class ObjectForMessage {\n+    private List<String> data;\n+\n+    public List<String> getData() {\n+        return data;\n+    }\n+\n+    public void setData(List<String> data) {\n+        this.data = data;\n+    }\n+}"
  },
  {
    "sha": "0a60fd8522117f41b15b0aebf0f5f9f024ba6a7a",
    "filename": "hw15/src/main/java/ru/otus/processor/LoggerProcessor.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/LoggerProcessor.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/LoggerProcessor.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/processor/LoggerProcessor.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.otus.processor;\n+\n+import ru.otus.model.Message;\n+\n+public class LoggerProcessor implements Processor {\n+\n+\n+    private final Processor processor;\n+\n+    public LoggerProcessor(Processor processor) {\n+        this.processor = processor;\n+    }\n+\n+    @Override\n+    public Message process(Message message) {\n+        System.out.println(\"log processing message:\" + message);\n+        return processor.process(message);\n+    }\n+}"
  },
  {
    "sha": "eeb80f4d6837172bca2ef106e848c68718d398b4",
    "filename": "hw15/src/main/java/ru/otus/processor/Processor.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/Processor.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/Processor.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/processor/Processor.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.otus.processor;\n+\n+import ru.otus.model.Message;\n+\n+public interface Processor {\n+\n+    Message process(Message message);\n+\n+    //todo: 2. Сделать процессор, который поменяет местами значения field11 и field12\n+\n+    //todo: 3. Сделать процессор, который будет выбрасывать исключение в четную секунду (сделайте тест с гарантированным результатом)\n+    //         Секунда должна определяьться во время выполнения.\n+    //         Тест - важная часть задания\n+}"
  },
  {
    "sha": "da6952ce6b150ccffd634f876c89fd5238b8a024",
    "filename": "hw15/src/main/java/ru/otus/processor/ProcessorConcatFields.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/ProcessorConcatFields.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/ProcessorConcatFields.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/processor/ProcessorConcatFields.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,12 @@\n+package ru.otus.processor;\n+\n+import ru.otus.model.Message;\n+\n+public class ProcessorConcatFields implements Processor {\n+\n+    @Override\n+    public Message process(Message message) {\n+        var newFieldValue = String.join(\" \", \"concat:\", message.getField1(), message.getField2(), message.getField3());\n+        return message.toBuilder().field4(newFieldValue).build();\n+    }\n+}"
  },
  {
    "sha": "bd47697d60baf907c023b8c4a4f97533f2184491",
    "filename": "hw15/src/main/java/ru/otus/processor/ProcessorSwapFields11And12.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/ProcessorSwapFields11And12.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/ProcessorSwapFields11And12.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/processor/ProcessorSwapFields11And12.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,12 @@\n+package ru.otus.processor;\n+\n+import ru.otus.model.Message;\n+\n+public class ProcessorSwapFields11And12 implements Processor {\n+\n+    @Override\n+    public Message process(Message message) {\n+        String field11 = message.getField11();\n+        return message.toBuilder().field11(message.getField12()).field12(field11).build();\n+    }\n+}"
  },
  {
    "sha": "06cb22e45c04dd7417bd1f017c56817d0941961b",
    "filename": "hw15/src/main/java/ru/otus/processor/ProcessorThrowingExceptionEveryEvenSecond.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/ProcessorThrowingExceptionEveryEvenSecond.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/ProcessorThrowingExceptionEveryEvenSecond.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/processor/ProcessorThrowingExceptionEveryEvenSecond.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,21 @@\n+package ru.otus.processor;\n+\n+import ru.otus.TimeProvider;\n+import ru.otus.model.Message;\n+\n+public class ProcessorThrowingExceptionEveryEvenSecond implements Processor {\n+\n+    private TimeProvider timeProvider;\n+\n+    public ProcessorThrowingExceptionEveryEvenSecond(TimeProvider timeProvider) {\n+        this.timeProvider = timeProvider;\n+    }\n+\n+    @Override\n+    public Message process(Message message) {\n+        if (timeProvider.getCurrentTime().getSecond() % 2 == 0)\n+            throw new RuntimeException(\"Even second exception\");\n+\n+        return message;\n+    }\n+}"
  },
  {
    "sha": "aaa9adb56510a348868118e29b21142cde3f1d68",
    "filename": "hw15/src/main/java/ru/otus/processor/ProcessorUpperField10.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/ProcessorUpperField10.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/ProcessorUpperField10.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/processor/ProcessorUpperField10.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.processor;\n+\n+import ru.otus.model.Message;\n+\n+public class ProcessorUpperField10 implements Processor {\n+\n+    @Override\n+    public Message process(Message message) {\n+        return message.toBuilder().field4(message.getField10().toUpperCase()).build();\n+    }\n+}"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "hw15/src/main/java/ru/otus/processor/homework/forHomework",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/homework/forHomework",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/main/java/ru/otus/processor/homework/forHomework",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/main/java/ru/otus/processor/homework/forHomework?ref=0657a0331f19e5ade3228b4ee03bec487b450351"
  },
  {
    "sha": "c84be5611234c185c013869d01594fec4813f85c",
    "filename": "hw15/src/test/java/ru/otus/handler/ComplexProcessorTest.java",
    "status": "added",
    "additions": 120,
    "deletions": 0,
    "changes": 120,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/test/java/ru/otus/handler/ComplexProcessorTest.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/test/java/ru/otus/handler/ComplexProcessorTest.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/test/java/ru/otus/handler/ComplexProcessorTest.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,120 @@\n+package ru.otus.handler;\n+\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import ru.otus.TimeProvider;\n+import ru.otus.listener.Listener;\n+import ru.otus.model.Message;\n+import ru.otus.processor.Processor;\n+import ru.otus.processor.ProcessorThrowingExceptionEveryEvenSecond;\n+\n+import java.time.LocalDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n+import static org.mockito.Mockito.*;\n+\n+class ComplexProcessorTest {\n+\n+    @Test\n+    @DisplayName(\"Тестируем вызовы процессоров\")\n+    void handleProcessorsTest() {\n+        //given\n+        var message = new Message.Builder(1L).field7(\"field7\").build();\n+\n+        var processor1 = mock(Processor.class);\n+        when(processor1.process(message)).thenReturn(message);\n+\n+        var processor2 = mock(Processor.class);\n+        when(processor2.process(message)).thenReturn(message);\n+\n+        var processors = List.of(processor1, processor2);\n+\n+        var complexProcessor = new ComplexProcessor(processors, (ex) -> {\n+        });\n+\n+        //when\n+        var result = complexProcessor.handle(message);\n+\n+        //then\n+        verify(processor1).process(message);\n+        verify(processor2).process(message);\n+        assertThat(result).isEqualTo(message);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Тестируем обработку исключения\")\n+    void handleExceptionTest() {\n+        //given\n+        var message = new Message.Builder(1L).field8(\"field8\").build();\n+\n+        var processor1 = mock(Processor.class);\n+        when(processor1.process(message)).thenThrow(new RuntimeException(\"Test Exception\"));\n+\n+        var processor2 = mock(Processor.class);\n+        when(processor2.process(message)).thenReturn(message);\n+\n+        var processors = List.of(processor1, processor2);\n+\n+        var complexProcessor = new ComplexProcessor(processors, (ex) -> {\n+            throw new TestException(ex.getMessage());\n+        });\n+\n+        //when\n+        assertThatExceptionOfType(TestException.class).isThrownBy(() -> complexProcessor.handle(message));\n+\n+        //then\n+        verify(processor1, times(1)).process(message);\n+        verify(processor2, never()).process(message);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Тестируем уведомления\")\n+    void notifyTest() {\n+        //given\n+        var message = new Message.Builder(1L).field9(\"field9\").build();\n+\n+        var listener = mock(Listener.class);\n+\n+        var complexProcessor = new ComplexProcessor(new ArrayList<>(), (ex) -> {\n+        });\n+\n+        complexProcessor.addListener(listener);\n+\n+        //when\n+        complexProcessor.handle(message);\n+        complexProcessor.removeListener(listener);\n+        complexProcessor.handle(message);\n+\n+        //then\n+        verify(listener, times(1)).onUpdated(message, message);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Тестируем процессор, кидающий исключения в четную секунду\")\n+    void evenSecondExceptionTest() {\n+        var message = new Message.Builder(1L).field1(\"field1\").build();\n+\n+        var timeProviderEven = mock(TimeProvider.class);\n+        when(timeProviderEven.getCurrentTime()).thenReturn(LocalDateTime.now().withSecond(2));\n+\n+        var timeProviderOdd = mock(TimeProvider.class);\n+        when(timeProviderOdd.getCurrentTime()).thenReturn(LocalDateTime.now().withSecond(3));\n+\n+        var processorEven = new ProcessorThrowingExceptionEveryEvenSecond(timeProviderEven);\n+\n+        var processorOdd = new ProcessorThrowingExceptionEveryEvenSecond(timeProviderOdd);\n+\n+        assertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> processorEven.process(message));\n+        assertThat(processorOdd.process(message)).isEqualTo(message);\n+    }\n+\n+    private static class TestException extends RuntimeException {\n+        public TestException(String message) {\n+            super(message);\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ceed7b0ed3d7946fb258552f3236b69888714913",
    "filename": "hw15/src/test/java/ru/otus/listener/homework/HistoryListenerTest.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/test/java/ru/otus/listener/homework/HistoryListenerTest.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/hw15/src/test/java/ru/otus/listener/homework/HistoryListenerTest.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw15/src/test/java/ru/otus/listener/homework/HistoryListenerTest.java?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -0,0 +1,41 @@\n+package ru.otus.listener.homework;\n+\n+\n+import org.assertj.core.api.AssertionsForClassTypes;\n+import org.junit.jupiter.api.Test;\n+import ru.otus.listener.HistoryListener;\n+import ru.otus.model.Message;\n+import ru.otus.model.ObjectForMessage;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.assertj.core.api.AssertionsForInterfaceTypes.assertThat;\n+\n+class HistoryListenerTest {\n+\n+    @Test\n+    void ListenerTest() {\n+        //given\n+        var historyListener = new HistoryListener();\n+\n+        var id = 1L;\n+        var data = \"33\";\n+        var field13 =  new ObjectForMessage();\n+        field13.setData(List.of(data));\n+\n+        var message = new Message.Builder(id)\n+                .field10(\"field10\")\n+                .field13(field13)\n+                .build();\n+\n+        //when\n+        historyListener.onUpdated(message, message);\n+        message.getField13().setData(new ArrayList<>()); //меняем исходное сообщение\n+\n+        //then\n+        var messageFromHistory = historyListener.findMessageById(id);\n+        AssertionsForClassTypes.assertThat(messageFromHistory).isPresent();\n+        assertThat(messageFromHistory.get().getField13().getData()).containsExactly(data);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "bfcb4d60f1720b1fb4a345c8878838d11626ecc5",
    "filename": "settings.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/0657a0331f19e5ade3228b4ee03bec487b450351/settings.gradle",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/0657a0331f19e5ade3228b4ee03bec487b450351/settings.gradle",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/settings.gradle?ref=0657a0331f19e5ade3228b4ee03bec487b450351",
    "patch": "@@ -4,4 +4,5 @@ include 'hw04'\n include 'hw06'\n include 'hw08'\n include 'hw10'\n+include 'hw15'\n "
  }
]
