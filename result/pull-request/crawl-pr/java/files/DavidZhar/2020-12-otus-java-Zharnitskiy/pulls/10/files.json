[
  {
    "sha": "809de967764a9524ae594bda21336c834c3007dd",
    "filename": "hw16/build.gradle",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/build.gradle",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/build.gradle",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/build.gradle?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1,30 @@\n+plugins {\n+    id 'java'\n+}\n+\n+sourceCompatibility = JavaVersion.VERSION_15\n+targetCompatibility = JavaVersion.VERSION_15\n+\n+dependencies {\n+    implementation 'com.fasterxml.jackson.core:jackson-databind'\n+\n+    testImplementation ('org.junit.jupiter:junit-jupiter-api')\n+    testImplementation ('org.junit.jupiter:junit-jupiter-engine')\n+    testImplementation ('org.junit.jupiter:junit-jupiter-params')\n+    testImplementation ('org.assertj:assertj-core')\n+    testImplementation ('org.mockito:mockito-core')\n+    testImplementation ('org.mockito:mockito-junit-jupiter')\n+}\n+\n+test {\n+    useJUnitPlatform()\n+    testLogging {\n+        events \"passed\", \"skipped\", \"failed\"\n+    }\n+}\n+\n+tasks.withType(JavaCompile) {\n+    options.with {\n+        encoding = 'UTF-8'\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ff4edb293a3bf50909b6ea8594e9a024cbae7930",
    "filename": "hw16/src/main/java/ru/otus/dataprocessor/FileLoader.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/FileLoader.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/FileLoader.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/src/main/java/ru/otus/dataprocessor/FileLoader.java?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1,50 @@\n+package ru.otus.dataprocessor;\n+\n+import com.fasterxml.jackson.core.JsonParser;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.*;\n+import com.fasterxml.jackson.databind.module.SimpleModule;\n+import ru.otus.model.Measurement;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+public class FileLoader implements Loader {\n+    private final String fileName;\n+    private final ObjectMapper mapper;\n+\n+    public FileLoader(String fileName) {\n+        this.fileName = fileName;\n+        this.mapper = new ObjectMapper();\n+    }\n+\n+    @Override\n+    public List<Measurement> load() {\n+        //читает файл, парсит и возвращает результат\n+        try (Stream<String> lines = Files.lines(Paths.get(ClassLoader.getSystemResource(fileName).toURI()))) {\n+            String content = lines.collect(Collectors.joining(\"\\n\"));\n+\n+            SimpleModule module = new SimpleModule(\"MeasurementDeserializer\");\n+            module.addDeserializer(Measurement.class, new JsonDeserializer<>() {\n+                @Override\n+                public Measurement deserialize(JsonParser p, DeserializationContext ctxt) throws IOException, JsonProcessingException {\n+                    JsonNode node = p.readValueAsTree();\n+                    String name = node.has(\"name\") ? node.get(\"name\").asText() : \"\";\n+                    double value = node.has(\"value\") ? node.get(\"value\").doubleValue() : 0.0;\n+                    return new Measurement(name, value);\n+                }\n+            });\n+            mapper.registerModule(module);\n+            JavaType type = mapper.getTypeFactory().constructCollectionType(List.class, Measurement.class);\n+\n+            return mapper.readValue(content, type);\n+        } catch (Exception e) {\n+            throw new FileProcessException(e);\n+        }\n+    }\n+}"
  },
  {
    "sha": "db06333df044c2ee5eff6171f4da777275e89eb5",
    "filename": "hw16/src/main/java/ru/otus/dataprocessor/FileProcessException.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/FileProcessException.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/FileProcessException.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/src/main/java/ru/otus/dataprocessor/FileProcessException.java?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.dataprocessor;\n+\n+public class FileProcessException extends RuntimeException {\n+    public FileProcessException(Exception ex) {\n+        super(ex);\n+    }\n+\n+    public FileProcessException(String msg) {\n+        super(msg);\n+    }\n+}"
  },
  {
    "sha": "90df32385d12555f5a5d9a364a10d0aa1ab3c30d",
    "filename": "hw16/src/main/java/ru/otus/dataprocessor/FileSerializer.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/FileSerializer.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/FileSerializer.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/src/main/java/ru/otus/dataprocessor/FileSerializer.java?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1,27 @@\n+package ru.otus.dataprocessor;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.File;\n+import java.util.Map;\n+\n+public class FileSerializer implements Serializer {\n+\n+    private final String fileName;\n+    private final ObjectMapper mapper;\n+\n+    public FileSerializer(String fileName) {\n+        this.fileName = fileName;\n+        this.mapper = new ObjectMapper();\n+    }\n+\n+    @Override\n+    public void serialize(Map<String, Double> data) {\n+        //формирует результирующий json и сохраняет его в файл\n+        try {\n+            mapper.writeValue(new File(fileName), data);\n+        } catch (Exception e) {\n+            throw new FileProcessException(e);\n+        }\n+    }\n+}"
  },
  {
    "sha": "177a0ba3863e38ca5ddcd703fbb8983221193185",
    "filename": "hw16/src/main/java/ru/otus/dataprocessor/Loader.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/Loader.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/Loader.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/src/main/java/ru/otus/dataprocessor/Loader.java?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1,10 @@\n+package ru.otus.dataprocessor;\n+\n+import ru.otus.model.Measurement;\n+\n+import java.util.List;\n+\n+public interface Loader {\n+\n+    List<Measurement> load();\n+}"
  },
  {
    "sha": "58e05a6c8dfe374b6d31f6015338bbcd86867dda",
    "filename": "hw16/src/main/java/ru/otus/dataprocessor/Processor.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/Processor.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/Processor.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/src/main/java/ru/otus/dataprocessor/Processor.java?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.dataprocessor;\n+\n+import ru.otus.model.Measurement;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface Processor {\n+\n+    Map<String, Double> process(List<Measurement> data);\n+}"
  },
  {
    "sha": "fa68e5ab4f7dbecb2d9b4c0380730f45328ea33b",
    "filename": "hw16/src/main/java/ru/otus/dataprocessor/ProcessorAggregator.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/ProcessorAggregator.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/ProcessorAggregator.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/src/main/java/ru/otus/dataprocessor/ProcessorAggregator.java?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1,18 @@\n+package ru.otus.dataprocessor;\n+\n+import ru.otus.model.Measurement;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+public class ProcessorAggregator implements Processor {\n+\n+    @Override\n+    public Map<String, Double> process(List<Measurement> data) {\n+        //группирует выходящий список по name, при этом суммирует поля value\n+        return data.stream().collect(Collectors.groupingBy(Measurement::getName, TreeMap::new, Collectors.summingDouble(Measurement::getValue)));\n+    }\n+}"
  },
  {
    "sha": "1af8fb2e1c7db7bc139ceb9d1e2af92a5ec97161",
    "filename": "hw16/src/main/java/ru/otus/dataprocessor/Serializer.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/Serializer.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/dataprocessor/Serializer.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/src/main/java/ru/otus/dataprocessor/Serializer.java?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1,8 @@\n+package ru.otus.dataprocessor;\n+\n+import java.util.Map;\n+\n+public interface Serializer {\n+\n+    void serialize(Map<String, Double> data);\n+}"
  },
  {
    "sha": "3d82f8c55e7b997321a781c91540b6b4b22200d4",
    "filename": "hw16/src/main/java/ru/otus/model/Measurement.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/model/Measurement.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/main/java/ru/otus/model/Measurement.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/src/main/java/ru/otus/model/Measurement.java?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1,29 @@\n+package ru.otus.model;\n+\n+\n+//Допустим, этот класс библиотечный, его нельзя менять\n+public class Measurement {\n+    private final String name;\n+    private final double value;\n+\n+    public Measurement(String name, double value) {\n+        this.name = name;\n+        this.value = value;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public double getValue() {\n+        return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Measurement{\" +\n+                \"name='\" + name + '\\'' +\n+                \", value=\" + value +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "f8b422434fff0049e524b7e21eaf8ce05be92588",
    "filename": "hw16/src/test/java/ru/otus/dataprocessor/ProcessorTest.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/test/java/ru/otus/dataprocessor/ProcessorTest.java",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/test/java/ru/otus/dataprocessor/ProcessorTest.java",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/src/test/java/ru/otus/dataprocessor/ProcessorTest.java?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1,46 @@\n+package ru.otus.dataprocessor;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import static org.assertj.core.api.AssertionsForInterfaceTypes.assertThat;\n+\n+class ProcessorTest {\n+\n+    //Надо реализовать методы классов и убедиться, что тест проходит\n+\n+    @Test\n+    @DisplayName(\"Из файла читается json, обрабатывается, результат сериализуется в строку\")\n+    void processingTest(@TempDir Path tempDir) throws IOException {\n+        System.out.println(tempDir);\n+\n+        //given\n+        var inputDataFileName = \"inputData.json\";\n+        var outputDataFileName = \"outputData.json\";\n+        var fullOutputFilePath = String.format(\"%s%s%s\",tempDir, File.separator, outputDataFileName);\n+\n+        var loader = new FileLoader(inputDataFileName);\n+        var processor = new ProcessorAggregator();\n+        var serializer = new FileSerializer(fullOutputFilePath);\n+\n+        //when\n+        var loadedMeasurements = loader.load();\n+        var aggregatedMeasurements = processor.process(loadedMeasurements);\n+        serializer.serialize(aggregatedMeasurements);\n+\n+        //then\n+        assertThat(loadedMeasurements.size()).isEqualTo(9);\n+        assertThat(aggregatedMeasurements.entrySet().size()).isEqualTo(3);\n+\n+        var serializedOutput = Files.readString(Paths.get(fullOutputFilePath));\n+        //обратите внимание: важен порядок ключей\n+        assertThat(serializedOutput).isEqualTo(\"{\\\"val1\\\":3.0,\\\"val2\\\":30.0,\\\"val3\\\":33.0}\");\n+    }\n+}"
  },
  {
    "sha": "f0482566f2beb603d48cc51ea079a07741976a76",
    "filename": "hw16/src/test/resources/inputData.json",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/test/resources/inputData.json",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/hw16/src/test/resources/inputData.json",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/hw16/src/test/resources/inputData.json?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -0,0 +1 @@\n+[{\"name\":\"val1\",\"value\":0.0},{\"name\":\"val1\",\"value\":1.0},{\"name\":\"val1\",\"value\":2.0},{\"name\":\"val2\",\"value\":0.0},{\"name\":\"val2\",\"value\":10.0},{\"name\":\"val2\",\"value\":20.0},{\"name\":\"val3\",\"value\":10.0},{\"name\":\"val3\",\"value\":11.0},{\"name\":\"val3\",\"value\":12.0}]"
  },
  {
    "sha": "390ff9ab7c62d4e8c89fc2ee7c6d4a768f0109da",
    "filename": "settings.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/blob/bb82ae214f84efd8c31956110ae47c28cf81c72d/settings.gradle",
    "raw_url": "https://github.com/DavidZhar/2020-12-otus-java-Zharnitskiy/raw/bb82ae214f84efd8c31956110ae47c28cf81c72d/settings.gradle",
    "contents_url": "https://api.github.com/repos/DavidZhar/2020-12-otus-java-Zharnitskiy/contents/settings.gradle?ref=bb82ae214f84efd8c31956110ae47c28cf81c72d",
    "patch": "@@ -4,4 +4,5 @@ include 'hw04'\n include 'hw06'\n include 'hw08'\n include 'hw10'\n+include 'hw16'\n "
  }
]
