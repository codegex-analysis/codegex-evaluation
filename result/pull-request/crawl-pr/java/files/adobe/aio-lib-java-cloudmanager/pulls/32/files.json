[
  {
    "sha": "0fa271699265c998b71c16cc7f230403801fae79",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/.gitignore",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/.gitignore",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/.gitignore?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -46,6 +46,7 @@ tmp/\n local.properties\n .settings/\n .loadpath\n+.classpath\n \n # Eclipse Core\n .project"
  },
  {
    "sha": "942905ea9820e3a63c384a1e002175a3f4ce736c",
    "filename": "docs/index.md",
    "status": "modified",
    "additions": 5,
    "deletions": 6,
    "changes": 11,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/docs/index.md",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/docs/index.md",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/docs/index.md?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -16,7 +16,7 @@ Example:\n <dependency>\n     <groupId>io.adobe.cloudmanager</groupId>\n     <artifactId>aio-lib-cloudmanager</artifactId>\n-    <version>0.3.1-SNAPSHOT</version>\n+    <version>0.4.1-SNAPSHOT</version>\n </dependency>\n ```\n \n@@ -27,7 +27,7 @@ The default library is Java11, to use the Java8 library, use the classifier.\n <dependency>\n     <groupId>io.adobe.cloudmanager</groupId>\n     <artifactId>aio-lib-cloudmanager</artifactId>\n-    <version>0.3.1-SNAPSHOT</version>\n+    <version>0.4.1-SNAPSHOT</version>\n     <classifier>java8</classifier>\n </dependency>\n ```\n@@ -40,16 +40,15 @@ To make API calls into Cloud Manager, a JWT Token is required. This is created u\n \n PrivateKey privateKey; \n \n-// Load the private key...\n+// Load the private key \n \n // Values are from the API Integration configuration.\n AdobeClientCredentials org = new AdobeClientCredentials(\"Org Id\", \"Technical Account Id\", \"API Key\", \"Client Secret\", privateKey);\n-IdentityManagementApi imApi = new IdentityManagementApiImpl();\n-String token = imApi.authenticate(org);\n+String token = org.authenticate(org);\n \n ``` \n \n-Use the token returned from the IdentityManagementApi to instantiate the Cloud Manager API. Then make the desired requests:\n+Use the token returned from the authentication API to instantiate the Cloud Manager API. Then make the desired requests:\n \n ```java\n "
  },
  {
    "sha": "ee56f84d842fbed0e62dcc2b18a349ec099dfb4e",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 25,
    "deletions": 39,
    "changes": 64,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/pom.xml",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/pom.xml",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/pom.xml?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -64,9 +64,6 @@\n     <properties>\n         <jjwt.version>0.11.2</jjwt.version>\n         <junit.jupiter.version>5.7.0</junit.jupiter.version>\n-\n-        <swagger.annotations.version>2.0.10</swagger.annotations.version>\n-        <swagger.codegen.version>3.0.22</swagger.codegen.version>\n         <jersey.version>2.29.1</jersey.version>\n \n         <jackson.version>2.10.0</jackson.version>\n@@ -82,9 +79,21 @@\n     <build>\n         <plugins>\n             <plugin>\n-                <groupId>io.swagger.codegen.v3</groupId>\n-                <artifactId>swagger-codegen-maven-plugin</artifactId>\n-                <version>${swagger.codegen.version}</version>\n+                <groupId>org.openapitools</groupId>\n+                <artifactId>openapi-generator-maven-plugin</artifactId>\n+                <version>5.0.1</version>\n+                <configuration>\n+                    <generatorName>java</generatorName>\n+                    <generateApiDocumentation>false</generateApiDocumentation>\n+                    <generateModelDocumentation>false</generateModelDocumentation>\n+                    <generateApiTests>false</generateApiTests>\n+                    <configOptions>\n+                        <serializableModel>true</serializableModel>\n+                        <dateLibrary>java8</dateLibrary>\n+                    </configOptions>\n+                    <library>jersey2</library>\n+                    <skipValidateSpec>true</skipValidateSpec>\n+                </configuration>\n                 <executions>\n                     <execution>\n                         <id>generate-swagger-jwt</id>\n@@ -97,15 +106,6 @@\n                             <modelPackage>${project.groupId}.jwt.swagger.model</modelPackage>\n                             <apiPackage>${project.groupId}.jwt.swagger.api</apiPackage>\n                             <invokerPackage>${project.groupId}.jwt.swagger.invoker</invokerPackage>\n-                            <generateApiDocumentation>false</generateApiDocumentation>\n-                            <generateModelDocumentation>false</generateModelDocumentation>\n-                            <generateApiTests>false</generateApiTests>\n-                            <language>java</language>\n-                            <configOptions>\n-                                <serializableModel>true</serializableModel>\n-                                <dateLibrary>java8</dateLibrary>\n-                            </configOptions>\n-                            <library>jersey2</library>\n                         </configuration>\n                     </execution>\n                     <execution>\n@@ -119,15 +119,6 @@\n                             <modelPackage>${project.groupId}.swagger.model</modelPackage>\n                             <apiPackage>${project.groupId}.swagger.api</apiPackage>\n                             <invokerPackage>${project.groupId}.swagger.invoker</invokerPackage>\n-                            <generateApiDocumentation>false</generateApiDocumentation>\n-                            <generateModelDocumentation>false</generateModelDocumentation>\n-                            <generateApiTests>false</generateApiTests>\n-                            <language>java</language>\n-                            <configOptions>\n-                                <serializableModel>true</serializableModel>\n-                                <dateLibrary>java8</dateLibrary>\n-                            </configOptions>\n-                            <library>jersey2</library>\n                         </configuration>\n                     </execution>\n                     <execution>\n@@ -139,18 +130,7 @@\n                         <configuration>\n                             <inputSpec>${cm.events}</inputSpec>\n                             <modelPackage>${project.groupId}.swagger.events</modelPackage>\n-                            <generateApis>false</generateApis>\n                             <generateModelTests>false</generateModelTests>\n-                            <generateSupportingFiles>false</generateSupportingFiles>\n-                            <generateApiDocumentation>false</generateApiDocumentation>\n-                            <generateModelDocumentation>false</generateModelDocumentation>\n-                            <!-- override the default library to retrofit2 -->\n-                            <language>java</language>\n-                            <configOptions>\n-                                <serializableModel>true</serializableModel>\n-                                <dateLibrary>java8</dateLibrary>\n-                            </configOptions>\n-                            <library>jersey2</library>\n                         </configuration>\n                     </execution>\n                 </executions>\n@@ -403,11 +383,17 @@\n     </profiles>\n \n     <dependencies>\n-        <!-- Pulled from generated client -->\n+        <!-- Pulled from generated client, provides the necessary annotations (https://openapi-generator.tech/docs/plugins/#dependencies) -->\n+        <dependency>\n+            <groupId>io.swagger.parser.v3</groupId>\n+            <artifactId>swagger-parser</artifactId>\n+            <version>2.0.24</version>\n+        </dependency>\n+        \n         <dependency>\n-            <groupId>io.swagger.core.v3</groupId>\n-            <artifactId>swagger-annotations</artifactId>\n-            <version>${swagger.annotations.version}</version>\n+            <groupId>org.openapitools</groupId>\n+            <artifactId>jackson-databind-nullable</artifactId>\n+            <version>0.2.1</version>\n         </dependency>\n \n         <!-- HTTP client: jersey-client -->"
  },
  {
    "sha": "8660356a1e419aa19df9268fc5fd0b75dfb37c79",
    "filename": "src/main/java/io/adobe/cloudmanager/AdobeClientCredentials.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/AdobeClientCredentials.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/AdobeClientCredentials.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/AdobeClientCredentials.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "96c0bb767e6e1451c73653d6839672ef25727c00",
    "filename": "src/main/java/io/adobe/cloudmanager/CloudManagerApi.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/CloudManagerApi.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/CloudManagerApi.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/CloudManagerApi.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "0f5a43e3d2f9684dca353c871b12c80c061527e1",
    "filename": "src/main/java/io/adobe/cloudmanager/CloudManagerApiException.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/CloudManagerApiException.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/CloudManagerApiException.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/CloudManagerApiException.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "2f3ae653ef4f10095bd1ffa2e6507f00518e41f4",
    "filename": "src/main/java/io/adobe/cloudmanager/IdentityManagementApi.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/IdentityManagementApi.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/IdentityManagementApi.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/IdentityManagementApi.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "dc4238c8ec6c11baf7e7d84692eb7f75d8b53f5d",
    "filename": "src/main/java/io/adobe/cloudmanager/IdentityManagementApiException.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/IdentityManagementApiException.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/IdentityManagementApiException.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/IdentityManagementApiException.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "8f578764e0de748d5953b26e90da3e61afb116d8",
    "filename": "src/main/java/io/adobe/cloudmanager/PipelineUpdate.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/PipelineUpdate.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/PipelineUpdate.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/PipelineUpdate.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "60179f210cbac96f301cc94f109a1825a3610b3f",
    "filename": "src/main/java/io/adobe/cloudmanager/impl/CloudManagerApiImpl.java",
    "status": "modified",
    "additions": 54,
    "deletions": 52,
    "changes": 106,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/impl/CloudManagerApiImpl.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/impl/CloudManagerApiImpl.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/impl/CloudManagerApiImpl.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -43,6 +43,7 @@\n import io.adobe.cloudmanager.CloudManagerApi;\n import io.adobe.cloudmanager.CloudManagerApiException;\n import io.adobe.cloudmanager.PipelineUpdate;\n+import io.adobe.cloudmanager.jwt.swagger.invoker.ApiResponse;\n import io.adobe.cloudmanager.model.EmbeddedProgram;\n import io.adobe.cloudmanager.model.Environment;\n import io.adobe.cloudmanager.model.EnvironmentLog;\n@@ -100,7 +101,7 @@ private static String processTemplate(String path, Map<String, String> values) {\n   public List<EmbeddedProgram> listPrograms() throws CloudManagerApiException {\n     ProgramList programList = null;\n     try {\n-      programList = get(\"/api/programs\", new GenericType<ProgramList>() {});\n+      programList = get(\"listPrograms\", \"/api/programs\", new GenericType<ProgramList>() {});\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.LIST_PROGRAMS, baseUrl, \"/api/programs\", e);\n     }\n@@ -119,10 +120,10 @@ private static String processTemplate(String path, Map<String, String> values) {\n     EmbeddedProgram embeddedProgram = listPrograms().stream().filter(p -> programId.equals(p.getId())).findFirst()\n         .orElseThrow(() -> new CloudManagerApiException(ErrorType.FIND_PROGRAM, programId));\n     Program program = getProgram(embeddedProgram.getSelfLink());\n-    String pipelinesHref = program.getLinks().getHttpnsAdobeComadobecloudrelpipelines().getHref();\n+    String pipelinesHref = program.getLinks().getHttpColonNsAdobeComAdobecloudRelPipelines().getHref();\n     PipelineList pipelineList;\n     try {\n-      pipelineList = get(pipelinesHref, new GenericType<PipelineList>() {});\n+      pipelineList = get(\"getPipelines\", pipelinesHref, new GenericType<PipelineList>() {});\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.LIST_PIPELINES, baseUrl, pipelinesHref, e);\n     }\n@@ -143,10 +144,10 @@ public PipelineExecution startExecution(String programId, String pipelineId) thr\n \n   @Override\n   public PipelineExecution startExecution(Pipeline pipeline) throws CloudManagerApiException {\n-    String executionHref = pipeline.getLinks().getHttpnsAdobeComadobecloudrelexecution().getHref();\n+    String executionHref = pipeline.getLinks().getHttpColonNsAdobeComAdobecloudRelExecution().getHref();\n     io.adobe.cloudmanager.swagger.model.PipelineExecution execution = null;\n     try {\n-      execution = put(executionHref, new GenericType<io.adobe.cloudmanager.swagger.model.PipelineExecution>() {});\n+      execution = put(\"startExecution\", executionHref, new GenericType<io.adobe.cloudmanager.swagger.model.PipelineExecution>() {});\n     } catch (ApiException e) {\n       if (412 == e.getCode()) {\n         throw new CloudManagerApiException(ErrorType.PIPELINE_START_RUNNING);\n@@ -178,7 +179,7 @@ public Pipeline updatePipeline(Pipeline original, PipelineUpdate updates) throws\n \n     String pipelinePath = original.getLinks().getSelf().getHref();\n     try {\n-      io.adobe.cloudmanager.swagger.model.Pipeline result = patch(pipelinePath, toUpdate, new GenericType<io.adobe.cloudmanager.swagger.model.Pipeline>() {});\n+      io.adobe.cloudmanager.swagger.model.Pipeline result = patch(\"updatePipeline\", pipelinePath, toUpdate, new GenericType<io.adobe.cloudmanager.swagger.model.Pipeline>() {});\n       return new Pipeline(result, this);\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.UPDATE_PIPELINE, baseUrl, pipelinePath, e);\n@@ -192,7 +193,7 @@ public Pipeline updatePipeline(Pipeline original, PipelineUpdate updates) throws\n \n   @Override\n   public List<Variable> getEnvironmentVariables(Environment environment) throws CloudManagerApiException {\n-    HalLink variableLink = environment.getLinks().getHttpnsAdobeComadobecloudrelvariables();\n+    HalLink variableLink = environment.getLinks().getHttpColonNsAdobeComAdobecloudRelVariables();\n     if (variableLink == null) {\n       throw new CloudManagerApiException(ErrorType.FIND_VARIABLES_LINK_ENVIRONMENT, environment.getId(), environment.getProgramId());\n     }\n@@ -206,7 +207,7 @@ public Pipeline updatePipeline(Pipeline original, PipelineUpdate updates) throws\n \n   @Override\n   public List<Variable> setEnvironmentVariables(Environment environment, Variable... variables) throws CloudManagerApiException {\n-    HalLink variableLInk = environment.getLinks().getHttpnsAdobeComadobecloudrelvariables();\n+    HalLink variableLInk = environment.getLinks().getHttpColonNsAdobeComAdobecloudRelVariables();\n     if (variableLInk == null) {\n       throw new CloudManagerApiException(ErrorType.FIND_VARIABLES_LINK_ENVIRONMENT, environment.getId(), environment.getProgramId());\n     }\n@@ -220,7 +221,7 @@ public Pipeline updatePipeline(Pipeline original, PipelineUpdate updates) throws\n \n   @Override\n   public List<Variable> getPipelineVariables(Pipeline pipeline) throws CloudManagerApiException {\n-    HalLink variableLink = pipeline.getLinks().getHttpnsAdobeComadobecloudrelvariables();\n+    HalLink variableLink = pipeline.getLinks().getHttpColonNsAdobeComAdobecloudRelVariables();\n     if (variableLink == null) {\n       throw new CloudManagerApiException(ErrorType.FIND_VARIABLES_LINK_PIPELINE, pipeline.getId(), pipeline.getProgramId());\n     }\n@@ -234,7 +235,7 @@ public Pipeline updatePipeline(Pipeline original, PipelineUpdate updates) throws\n \n   @Override\n   public List<Variable> setPipelineVariables(Pipeline pipeline, Variable... variables) throws CloudManagerApiException {\n-    HalLink variableLink = pipeline.getLinks().getHttpnsAdobeComadobecloudrelvariables();\n+    HalLink variableLink = pipeline.getLinks().getHttpColonNsAdobeComAdobecloudRelVariables();\n     if (variableLink == null) {\n       throw new CloudManagerApiException(ErrorType.FIND_VARIABLES_LINK_PIPELINE, pipeline.getId(), pipeline.getProgramId());\n     }\n@@ -244,9 +245,9 @@ public Pipeline updatePipeline(Pipeline original, PipelineUpdate updates) throws\n   @Override\n   public PipelineExecution getCurrentExecution(String programId, String pipelineId) throws CloudManagerApiException {\n     Pipeline pipeline = getPipeline(programId, pipelineId);\n-    String executionHref = pipeline.getLinks().getHttpnsAdobeComadobecloudrelexecution().getHref();\n+    String executionHref = pipeline.getLinks().getHttpColonNsAdobeComAdobecloudRelExecution().getHref();\n     try {\n-      io.adobe.cloudmanager.swagger.model.PipelineExecution execution = get(executionHref, new GenericType<io.adobe.cloudmanager.swagger.model.PipelineExecution>() {});\n+      io.adobe.cloudmanager.swagger.model.PipelineExecution execution = get(\"getCurrentExecution\", executionHref, new GenericType<io.adobe.cloudmanager.swagger.model.PipelineExecution>() {});\n       return new PipelineExecution(execution, this);\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.GET_EXECUTION, baseUrl, executionHref, e);\n@@ -273,9 +274,9 @@ public PipelineExecution getExecution(String programId, String pipelineId, Strin\n   public PipelineExecution getExecution(Pipeline pipeline, String executionId) throws CloudManagerApiException {\n     Map<String, String> values = new HashMap<>();\n     values.put(\"executionId\", executionId);\n-    String executionHref = processTemplate(pipeline.getLinks().getHttpnsAdobeComadobecloudrelexecutionid().getHref(), values);\n+    String executionHref = processTemplate(pipeline.getLinks().getHttpColonNsAdobeComAdobecloudRelExecutionId().getHref(), values);\n     try {\n-      io.adobe.cloudmanager.swagger.model.PipelineExecution execution = get(executionHref, new GenericType<io.adobe.cloudmanager.swagger.model.PipelineExecution>() {});\n+      io.adobe.cloudmanager.swagger.model.PipelineExecution execution = get(\"getExecution\", executionHref, new GenericType<io.adobe.cloudmanager.swagger.model.PipelineExecution>() {});\n       return new PipelineExecution(execution, this);\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.GET_EXECUTION, baseUrl, executionHref, e);\n@@ -291,7 +292,7 @@ public void cancelExecution(String programId, String pipelineId, String executio\n   public void cancelExecution(PipelineExecution execution) throws CloudManagerApiException {\n     String href = execution.getCancelLink();\n     try {\n-      put(href, execution.getCancelBody());\n+      put(\"cancelExecution\", href, execution.getCancelBody());\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.CANCEL_EXECUTION, baseUrl, href, e);\n     }\n@@ -306,7 +307,7 @@ public void advanceExecution(String programId, String pipelineId, String executi\n   public void advanceExecution(PipelineExecution execution) throws CloudManagerApiException {\n     String href = execution.getAdvanceLink();\n     try {\n-      put(href, execution.getAdvanceBody());\n+      put(\"advanceExecution\", href, execution.getAdvanceBody());\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.ADVANCE_EXECUTION, baseUrl, href, e);\n     }\n@@ -326,7 +327,7 @@ public PipelineExecutionStepState getExecutionStepState(PipelineExecution execut\n   public void deletePipeline(Pipeline pipeline) throws CloudManagerApiException {\n     String pipelinePath = pipeline.getLinks().getSelf().getHref();\n     try {\n-      delete(pipelinePath);\n+      delete(\"deletePipeline\", pipelinePath);\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(CloudManagerApiException.ErrorType.DELETE_PIPELINE, baseUrl, pipelinePath, e);\n     }\n@@ -350,7 +351,7 @@ public void deleteProgram(String programId) throws CloudManagerApiException {\n   public void deleteProgram(EmbeddedProgram program) throws CloudManagerApiException {\n     String href = program.getLinks().getSelf().getHref();\n     try {\n-      delete(href);\n+      delete(\"deleteProgram\", href);\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.DELETE_PROGRAM, baseUrl, href, e);\n     }\n@@ -361,10 +362,10 @@ public void deleteProgram(EmbeddedProgram program) throws CloudManagerApiExcepti\n     EmbeddedProgram embeddedProgram = listPrograms().stream().filter(p -> programId.equals(p.getId())).findFirst()\n         .orElseThrow(() -> new CloudManagerApiException(ErrorType.FIND_PROGRAM, programId));\n     Program program = getProgram(embeddedProgram.getSelfLink());\n-    String environmentsHref = program.getLinks().getHttpnsAdobeComadobecloudrelenvironments().getHref();\n+    String environmentsHref = program.getLinks().getHttpColonNsAdobeComAdobecloudRelEnvironments().getHref();\n     EnvironmentList environmentList;\n     try {\n-      environmentList = get(environmentsHref, new GenericType<EnvironmentList>() {});\n+      environmentList = get(\"getEnvironments\", environmentsHref, new GenericType<EnvironmentList>() {});\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.RETRIEVE_ENVIRONMENTS, baseUrl, environmentsHref, e);\n     }\n@@ -380,7 +381,7 @@ public void deleteProgram(EmbeddedProgram program) throws CloudManagerApiExcepti\n   public void deleteEnvironment(Environment environment) throws CloudManagerApiException {\n     String environmentPath = environment.getLinks().getSelf().getHref();\n     try {\n-      delete(environmentPath);\n+      delete(\"deleteEnvironment\", environmentPath);\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.DELETE_ENVIRONMENT, baseUrl, environmentPath, e);\n     }\n@@ -415,9 +416,9 @@ public PipelineExecutionStepState getWaitingStep(PipelineExecution execution) th\n \n   @Override\n   public PipelineStepMetrics getQualityGateResults(PipelineExecutionStepState step) throws CloudManagerApiException {\n-    String href = step.getLinks().getHttpnsAdobeComadobecloudrelpipelinemetrics().getHref();\n+    String href = step.getLinks().getHttpColonNsAdobeComAdobecloudRelPipelineMetrics().getHref();\n     try {\n-      return get(href, new GenericType<PipelineStepMetrics>() {});\n+      return get(\"getQualityGateResults\", href, new GenericType<PipelineStepMetrics>() {});\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.GET_METRICS, baseUrl, href, e);\n     }\n@@ -430,7 +431,7 @@ public PipelineStepMetrics getQualityGateResults(PipelineExecutionStepState step\n \n   @Override\n   public List<EnvironmentLog> downloadLogs(Environment environment, String service, String name, int days, File dir) throws CloudManagerApiException {\n-    HalLink logLink = environment.getLinks().getHttpnsAdobeComadobecloudrellogs();\n+    HalLink logLink = environment.getLinks().getHttpColonNsAdobeComAdobecloudRelLogs();\n     if (logLink == null) {\n       throw new CloudManagerApiException(ErrorType.FIND_LOGS_LINK_ENVIRONMENT, environment.getId(), environment.getProgramId());\n     }\n@@ -452,7 +453,7 @@ public PipelineStepMetrics getQualityGateResults(PipelineExecutionStepState step\n         EnvironmentLog log = new EnvironmentLog(d);\n         String logfileName = String.format(\"%d-%s-%s-%s.log.gz\", log.getEnvironmentId(), log.getService(), log.getName(), log.getDate());\n         log.setPath(dir.getPath() + \"/\" + logfileName);\n-        log.setUrl(log.getLinks().getHttpnsAdobeComadobecloudrellogsdownload().getHref());\n+        log.setUrl(log.getLinks().getHttpColonNsAdobeComAdobecloudRelLogsDownload().getHref());\n         downloadLog(log);\n         downloaded.add(log);\n       }\n@@ -474,7 +475,7 @@ public void getExecutionStepLog(String programId, String pipelineId, String exec\n \n   @Override\n   public void getExecutionStepLog(PipelineExecutionStepState action, OutputStream outputStream) throws CloudManagerApiException {\n-    HalLink link = action.getLinks().getHttpnsAdobeComadobecloudrelpipelinelogs();\n+    HalLink link = action.getLinks().getHttpColonNsAdobeComAdobecloudRelPipelineLogs();\n     if (link == null) {\n       throw new CloudManagerApiException(ErrorType.FIND_LOGS_LINK_EXECUTION, action.getAction());\n     }\n@@ -484,7 +485,7 @@ public void getExecutionStepLog(PipelineExecutionStepState action, OutputStream\n \n   @Override\n   public void getExecutionStepLog(PipelineExecutionStepState action, String name, OutputStream outputStream) throws CloudManagerApiException {\n-    HalLink link = action.getLinks().getHttpnsAdobeComadobecloudrelpipelinelogs();\n+    HalLink link = action.getLinks().getHttpColonNsAdobeComAdobecloudRelPipelineLogs();\n     if (link == null) {\n       throw new CloudManagerApiException(ErrorType.FIND_LOGS_LINK_EXECUTION, action.getAction());\n     }\n@@ -499,7 +500,7 @@ private String getLogRedirect(HalLink link, String name) throws CloudManagerApiE\n     }\n     String url;\n     try {\n-      url = get(link.getHref(), params, new GenericType<Redirect>() {}).getRedirect();\n+      url = get(\"getLogRedirect\", link.getHref(), params, new GenericType<Redirect>() {}).getRedirect();\n       if (StringUtils.isBlank(url)) {\n         throw new CloudManagerApiException(ErrorType.NO_LOG_REDIRECT, String.format(\"%s%s\", baseUrl, link.getHref()), url);\n       }\n@@ -525,7 +526,7 @@ private void streamLog(OutputStream outputStream, String url) throws CloudManage\n \n   private Program getProgram(String path) throws CloudManagerApiException {\n     try {\n-      return get(path, new GenericType<Program>() {});\n+      return get(\"getProgram\", path, new GenericType<Program>() {});\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.GET_PROGRAM, baseUrl, path, e);\n     }\n@@ -549,7 +550,7 @@ private Pipeline getPipeline(String programId, String pipelineId) throws CloudMa\n   private List<Variable> getVariables(HalLink variableLink) throws CloudManagerApiException {\n     VariableList list;\n     try {\n-      list = get(variableLink.getHref(), new GenericType<VariableList>() {});\n+      list = get(\"getVariableLink\", variableLink.getHref(), new GenericType<VariableList>() {});\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.GET_VARIABLES, baseUrl, variableLink.getHref(), e);\n     }\n@@ -559,12 +560,12 @@ private Pipeline getPipeline(String programId, String pipelineId) throws CloudMa\n     return list.getEmbedded().getVariables().stream().map(Variable::new).collect(Collectors.toList());\n   }\n \n-  private List<Variable> setVariables(HalLink variableLInk, Variable[] variables) throws CloudManagerApiException {\n+  private List<Variable> setVariables(HalLink variableLink, Variable[] variables) throws CloudManagerApiException {\n     VariableList list;\n     try {\n-      list = patch(variableLInk.getHref(), variables, new GenericType<VariableList>() {});\n+      list = patch(\"setVariableLink\", variableLink.getHref(), variables, new GenericType<VariableList>() {});\n     } catch (ApiException e) {\n-      throw new CloudManagerApiException(ErrorType.SET_VARIABLES, baseUrl, variableLInk.getHref(), e);\n+      throw new CloudManagerApiException(ErrorType.SET_VARIABLES, baseUrl, variableLink.getHref(), e);\n     }\n     if (list.getTotalNumberOfItems().equals(0)) {\n       return Collections.emptyList();\n@@ -574,7 +575,7 @@ private Pipeline getPipeline(String programId, String pipelineId) throws CloudMa\n \n   private EnvironmentLogs getLogs(String path) throws CloudManagerApiException {\n     try {\n-      return get(path, new GenericType<EnvironmentLogs>() {});\n+      return get(\"getLogs\", path, new GenericType<EnvironmentLogs>() {});\n     } catch (ApiException e) {\n       throw new CloudManagerApiException(ErrorType.GET_LOGS, baseUrl, path, e);\n     }\n@@ -583,7 +584,7 @@ private EnvironmentLogs getLogs(String path) throws CloudManagerApiException {\n   private void downloadLog(EnvironmentLog log) throws CloudManagerApiException {\n     Redirect redirect;\n     try {\n-      redirect = get(log.getUrl(), new GenericType<Redirect>() {});\n+      redirect = get(\"getLog\", log.getUrl(), new GenericType<Redirect>() {});\n       File downloadedFile = new File(log.getPath());\n       FileUtils.copyInputStreamToFile(new URL(redirect.getRedirect()).openStream(), downloadedFile);\n     } catch (ApiException | MalformedURLException e) {\n@@ -593,39 +594,40 @@ private void downloadLog(EnvironmentLog log) throws CloudManagerApiException {\n     }\n   }\n \n-  private <T> T get(String path, GenericType<T> returnType) throws ApiException {\n-    return doRequest(path, \"GET\", Collections.emptyList(), null, returnType);\n+  private <T> T get(String operation, String path, GenericType<T> returnType) throws ApiException {\n+    return doRequest(operation, path, \"GET\", Collections.emptyList(), null, returnType);\n   }\n-  private <T> T get(String path, List<Pair> queryParams, GenericType<T> returnType) throws ApiException {\n-    return doRequest(path, \"GET\", queryParams, null, returnType);\n+  private <T> T get(String operation, String path, List<Pair> queryParams, GenericType<T> returnType) throws ApiException {\n+    return doRequest(operation, path, \"GET\", queryParams, null, returnType);\n   }\n \n-  private <T> T put(String path, Object body) throws ApiException {\n-    return put(path, body, null);\n+  private <T> T put(String operation, String path, Object body) throws ApiException {\n+    return put(operation, path, body, null);\n   }\n \n-  private <T> T put(String path, GenericType<T> returnType) throws ApiException {\n-    return put(path, \"\", returnType);\n+  private <T> T put(String operation, String path, GenericType<T> returnType) throws ApiException {\n+    return put(operation, path, \"\", returnType);\n   }\n \n-  private <T> T put(String path, Object body, GenericType<T> returnType) throws ApiException {\n-    return doRequest(path, \"PUT\", Collections.emptyList(), body, returnType);\n+  private <T> T put(String operation, String path, Object body, GenericType<T> returnType) throws ApiException {\n+    return doRequest(operation, path, \"PUT\", Collections.emptyList(), body, returnType);\n   }\n \n-  private <T> T patch(String path, Object body, GenericType<T> returnType) throws ApiException {\n-    return doRequest(path, \"PATCH\", Collections.emptyList(), body, returnType);\n+  private <T> T patch(String operation, String path, Object body, GenericType<T> returnType) throws ApiException {\n+    return doRequest(operation, path, \"PATCH\", Collections.emptyList(), body, returnType);\n   }\n \n-  private <T> T delete(String path) throws ApiException {\n-    return doRequest(path, \"DELETE\", Collections.emptyList(), null, null);\n+  private <T> T delete(String operation, String path) throws ApiException {\n+    return doRequest(operation, path, \"DELETE\", Collections.emptyList(), null, null);\n   }\n \n-  private <T> T doRequest(String path, String method, List<Pair> queryParams, Object body, GenericType<T> returnType) throws ApiException {\n+  private <T> T doRequest(String operation, String path, String method, List<Pair> queryParams, Object body, GenericType<T> returnType) throws ApiException {\n     Map<String, String> headers = new HashMap<>();\n     headers.put(\"x-gw-ims-org-id\", orgId);\n     headers.put(\"Authorization\", String.format(\"Bearer %s\", accessToken));\n     headers.put(\"x-api-key\", apiKey);\n \n-    return apiClient.invokeAPI(path, method, queryParams, body, headers, Collections.emptyMap(), \"application/json\", \"application/json\", new String[0], returnType);\n+    io.adobe.cloudmanager.swagger.invoker.ApiResponse<T> response = apiClient.invokeAPI(operation, path, method, queryParams, body, headers, Collections.emptyMap(), Collections.emptyMap(), \"application/json\", \"application/json\", new String[0], returnType, body == null);\n+    return response.getData();\n   }\n }"
  },
  {
    "sha": "c99c757352ae0e4fd17f834517137f87bdf768ac",
    "filename": "src/main/java/io/adobe/cloudmanager/impl/ConfiguredApiClient.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/impl/ConfiguredApiClient.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/impl/ConfiguredApiClient.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/impl/ConfiguredApiClient.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "55d21fb5d84b27c45594e27576eca53ba7e94f68",
    "filename": "src/main/java/io/adobe/cloudmanager/impl/IdentityManagementApiImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/impl/IdentityManagementApiImpl.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/impl/IdentityManagementApiImpl.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/impl/IdentityManagementApiImpl.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "dccfcdb73b37c14bb3091a64ae34e1b82d8abf5a",
    "filename": "src/main/java/io/adobe/cloudmanager/model/EmbeddedProgram.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/EmbeddedProgram.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/EmbeddedProgram.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/model/EmbeddedProgram.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "906cf3216c8038f8df9ad30e10a812e9d76ad789",
    "filename": "src/main/java/io/adobe/cloudmanager/model/Environment.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/Environment.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/Environment.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/model/Environment.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -62,7 +62,7 @@ public void delete() throws CloudManagerApiException {\n    * @throws CloudManagerApiException when any error occurs\n    */\n   public String getDeveloperConsoleUrl() throws CloudManagerApiException {\n-    HalLink link = delegate.getLinks().getHttpnsAdobeComadobecloudreldeveloperConsole();\n+    HalLink link = delegate.getLinks().getHttpColonNsAdobeComAdobecloudRelDeveloperConsole();\n     if (link == null) {\n       throw new CloudManagerApiException(CloudManagerApiException.ErrorType.NO_DEVELOPER_CONSOLE, getId(), getProgramId());\n     } else {"
  },
  {
    "sha": "7c804fa3dfcccc193dbae776b7b3d6dc9c682e8c",
    "filename": "src/main/java/io/adobe/cloudmanager/model/EnvironmentLog.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/EnvironmentLog.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/EnvironmentLog.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/model/EnvironmentLog.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "a6b16a6f1a47625bb5a49d07cd2a56cc4c0b6116",
    "filename": "src/main/java/io/adobe/cloudmanager/model/Pipeline.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/Pipeline.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/Pipeline.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/model/Pipeline.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "00196978efacb825ecc30a21b08c59e535bedf62",
    "filename": "src/main/java/io/adobe/cloudmanager/model/PipelineExecution.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/PipelineExecution.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/PipelineExecution.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/model/PipelineExecution.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -88,7 +88,7 @@ public void cancel() throws CloudManagerApiException {\n    */\n   public String getAdvanceLink() throws CloudManagerApiException {\n     PipelineExecutionStepState step = client.getWaitingStep(this);\n-    HalLink link = step.getLinks().getHttpnsAdobeComadobecloudrelpipelineadvance();\n+    HalLink link = step.getLinks().getHttpColonNsAdobeComAdobecloudRelPipelineAdvance();\n     if (link == null) {\n       throw new CloudManagerApiException(ErrorType.FIND_ADVANCE_LINK, step.getAction());\n     }\n@@ -138,9 +138,9 @@ public String getCancelLink() throws CloudManagerApiException {\n \n     if (io.adobe.cloudmanager.swagger.model.PipelineExecutionStepState.StatusEnum.WAITING.equals(step.getStatus()) &&\n         ACTION_DEPLOY.equals(step.getAction())) {\n-      link = step.getLinks().getHttpnsAdobeComadobecloudrelpipelineadvance();\n+      link = step.getLinks().getHttpColonNsAdobeComAdobecloudRelPipelineAdvance();\n     } else {\n-      link = step.getLinks().getHttpnsAdobeComadobecloudrelpipelinecancel();\n+      link = step.getLinks().getHttpColonNsAdobeComAdobecloudRelPipelineCancel();\n     }\n     if (link == null) {\n       throw new CloudManagerApiException(ErrorType.FIND_CANCEL_LINK, step.getAction());"
  },
  {
    "sha": "7f6fa70cc33abade088b986a2c06c133ec93cd34",
    "filename": "src/main/java/io/adobe/cloudmanager/model/PipelineExecutionStepState.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/PipelineExecutionStepState.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/PipelineExecutionStepState.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/model/PipelineExecutionStepState.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "d002923f5a2ca0b37c57def6e1ea9421834cfb41",
    "filename": "src/main/java/io/adobe/cloudmanager/model/Variable.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/Variable.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/model/Variable.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/model/Variable.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "30b7eb1ce520e7e1d438e320ebb1899ba99cdedd",
    "filename": "src/main/java/io/adobe/cloudmanager/util/Predicates.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/util/Predicates.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/main/java/io/adobe/cloudmanager/util/Predicates.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/main/java/io/adobe/cloudmanager/util/Predicates.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -57,12 +57,12 @@\n   /**\n    * Filters metrics that have passed.\n    */\n-  public static final Predicate<Metric> PASSED = Metric::isPassed;\n+  public static final Predicate<Metric> PASSED = Metric::getPassed;\n \n   /**\n    * Filters metrics that have failed.\n    */\n-  public static final Predicate<Metric> FAILED = (m -> !m.isPassed());\n+  public static final Predicate<Metric> FAILED = (m -> !m.getPassed());\n \n   /**\n    * Filters metrics that are of critical importance."
  },
  {
    "sha": "e9784a8c60e0d611fa6157ea68f3c365e89aeaea",
    "filename": "src/test/java/io/adobe/cloudmanager/AdobeClientCredentialsTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/AdobeClientCredentialsTest.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/AdobeClientCredentialsTest.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/test/java/io/adobe/cloudmanager/AdobeClientCredentialsTest.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "095297f0169758f54a3f7da4fd8e2438997a7639",
    "filename": "src/test/java/io/adobe/cloudmanager/impl/AbstractApiTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/AbstractApiTest.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/AbstractApiTest.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/test/java/io/adobe/cloudmanager/impl/AbstractApiTest.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "e229ddab4efe6af5f3ce66b44af0de8f35fe5865",
    "filename": "src/test/java/io/adobe/cloudmanager/impl/CloudManagerExpectationInitializer.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/CloudManagerExpectationInitializer.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/CloudManagerExpectationInitializer.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/test/java/io/adobe/cloudmanager/impl/CloudManagerExpectationInitializer.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "73219aa43db1a327d96aaab88ac31c8779601f3a",
    "filename": "src/test/java/io/adobe/cloudmanager/impl/EnvironmentsTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/EnvironmentsTest.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/EnvironmentsTest.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/test/java/io/adobe/cloudmanager/impl/EnvironmentsTest.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "e2bf9202a1bc9204f3ab2724c43f63612f145e9c",
    "filename": "src/test/java/io/adobe/cloudmanager/impl/ExecutionsTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/ExecutionsTest.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/ExecutionsTest.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/test/java/io/adobe/cloudmanager/impl/ExecutionsTest.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "492551a612139421df6810747c75ce702623a5dc",
    "filename": "src/test/java/io/adobe/cloudmanager/impl/IdentityManagementApiImplTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/IdentityManagementApiImplTest.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/IdentityManagementApiImplTest.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/test/java/io/adobe/cloudmanager/impl/IdentityManagementApiImplTest.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "9a6dce964ab1c8e05e19d261a0144afdc61dec39",
    "filename": "src/test/java/io/adobe/cloudmanager/impl/PipelinesTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/PipelinesTest.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/PipelinesTest.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/test/java/io/adobe/cloudmanager/impl/PipelinesTest.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "6d4a2efac30b621d854f4b56daf4fa8a0753c54b",
    "filename": "src/test/java/io/adobe/cloudmanager/impl/ProgramsTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/ProgramsTest.java",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/java/io/adobe/cloudmanager/impl/ProgramsTest.java",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/test/java/io/adobe/cloudmanager/impl/ProgramsTest.java?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -4,7 +4,7 @@\n  * #%L\n  * Adobe Cloud Manager Client Library\n  * %%\n- * Copyright (C) 2020 Adobe Inc.\n+ * Copyright (C) 2020 - 2021 Adobe Inc.\n  * %%\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License."
  },
  {
    "sha": "2d35db831d6aeb2ac2f1e8b98a203eb5af8d3247",
    "filename": "src/test/resources/mockserver.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adobe/aio-lib-java-cloudmanager/blob/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/resources/mockserver.properties",
    "raw_url": "https://github.com/adobe/aio-lib-java-cloudmanager/raw/56e012b71cc727699ef67bd6463fe30f331744b1/src/test/resources/mockserver.properties",
    "contents_url": "https://api.github.com/repos/adobe/aio-lib-java-cloudmanager/contents/src/test/resources/mockserver.properties?ref=56e012b71cc727699ef67bd6463fe30f331744b1",
    "patch": "@@ -2,7 +2,7 @@\n # #%L\n # Adobe Cloud Manager Client Library\n # %%\n-# Copyright (C) 2020 Adobe Inc.\n+# Copyright (C) 2020 - 2021 Adobe Inc.\n # %%\n # Licensed under the Apache License, Version 2.0 (the \"License\");\n # you may not use this file except in compliance with the License."
  }
]
