[
  {
    "sha": "0622acae3e3133a0491d30f546de659aba526e28",
    "filename": "google-cloud-artifact-registry/src/main/java/com/google/devtools/artifactregistry/v1beta2/ArtifactRegistryClient.java",
    "status": "modified",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/googleapis/java-artifact-registry/blob/4fad73ab0deaa32ff4808ee2bdbf67f60bdc8cc4/google-cloud-artifact-registry/src/main/java/com/google/devtools/artifactregistry/v1beta2/ArtifactRegistryClient.java",
    "raw_url": "https://github.com/googleapis/java-artifact-registry/raw/4fad73ab0deaa32ff4808ee2bdbf67f60bdc8cc4/google-cloud-artifact-registry/src/main/java/com/google/devtools/artifactregistry/v1beta2/ArtifactRegistryClient.java",
    "contents_url": "https://api.github.com/repos/googleapis/java-artifact-registry/contents/google-cloud-artifact-registry/src/main/java/com/google/devtools/artifactregistry/v1beta2/ArtifactRegistryClient.java?ref=4fad73ab0deaa32ff4808ee2bdbf67f60bdc8cc4",
    "patch": "@@ -273,6 +273,12 @@ public final ListRepositoriesPagedResponse listRepositories(ListRepositoriesRequ\n    *\n    * <pre>{@code\n    * try (ArtifactRegistryClient artifactRegistryClient = ArtifactRegistryClient.create()) {\n+   *   ListRepositoriesRequest request =\n+   *       ListRepositoriesRequest.newBuilder()\n+   *           .setParent(\"parent-995424086\")\n+   *           .setPageSize(883849137)\n+   *           .setPageToken(\"pageToken873572522\")\n+   *           .build();\n    *   while (true) {\n    *     ListRepositoriesResponse response =\n    *         artifactRegistryClient.listRepositoriesCallable().call(request);\n@@ -726,6 +732,12 @@ public final ListPackagesPagedResponse listPackages(ListPackagesRequest request)\n    *\n    * <pre>{@code\n    * try (ArtifactRegistryClient artifactRegistryClient = ArtifactRegistryClient.create()) {\n+   *   ListPackagesRequest request =\n+   *       ListPackagesRequest.newBuilder()\n+   *           .setParent(\"parent-995424086\")\n+   *           .setPageSize(883849137)\n+   *           .setPageToken(\"pageToken873572522\")\n+   *           .build();\n    *   while (true) {\n    *     ListPackagesResponse response = artifactRegistryClient.listPackagesCallable().call(request);\n    *     for (Package element : response.getResponsesList()) {\n@@ -983,6 +995,13 @@ public final ListVersionsPagedResponse listVersions(ListVersionsRequest request)\n    *\n    * <pre>{@code\n    * try (ArtifactRegistryClient artifactRegistryClient = ArtifactRegistryClient.create()) {\n+   *   ListVersionsRequest request =\n+   *       ListVersionsRequest.newBuilder()\n+   *           .setParent(\"parent-995424086\")\n+   *           .setPageSize(883849137)\n+   *           .setPageToken(\"pageToken873572522\")\n+   *           .setView(VersionView.forNumber(0))\n+   *           .build();\n    *   while (true) {\n    *     ListVersionsResponse response = artifactRegistryClient.listVersionsCallable().call(request);\n    *     for (Version element : response.getResponsesList()) {\n@@ -1246,6 +1265,13 @@ public final ListFilesPagedResponse listFiles(ListFilesRequest request) {\n    *\n    * <pre>{@code\n    * try (ArtifactRegistryClient artifactRegistryClient = ArtifactRegistryClient.create()) {\n+   *   ListFilesRequest request =\n+   *       ListFilesRequest.newBuilder()\n+   *           .setParent(\"parent-995424086\")\n+   *           .setFilter(\"filter-1274492040\")\n+   *           .setPageSize(883849137)\n+   *           .setPageToken(\"pageToken873572522\")\n+   *           .build();\n    *   while (true) {\n    *     ListFilesResponse response = artifactRegistryClient.listFilesCallable().call(request);\n    *     for (File element : response.getResponsesList()) {\n@@ -1411,6 +1437,13 @@ public final ListTagsPagedResponse listTags(ListTagsRequest request) {\n    *\n    * <pre>{@code\n    * try (ArtifactRegistryClient artifactRegistryClient = ArtifactRegistryClient.create()) {\n+   *   ListTagsRequest request =\n+   *       ListTagsRequest.newBuilder()\n+   *           .setParent(\"parent-995424086\")\n+   *           .setFilter(\"filter-1274492040\")\n+   *           .setPageSize(883849137)\n+   *           .setPageToken(\"pageToken873572522\")\n+   *           .build();\n    *   while (true) {\n    *     ListTagsResponse response = artifactRegistryClient.listTagsCallable().call(request);\n    *     for (Tag element : response.getResponsesList()) {"
  },
  {
    "sha": "01036ab6b68fa0004635d90a336e34a0d0fd2f7d",
    "filename": "google-cloud-artifact-registry/src/test/java/com/google/devtools/artifactregistry/v1beta2/MockArtifactRegistryImpl.java",
    "status": "modified",
    "additions": 50,
    "deletions": 42,
    "changes": 92,
    "blob_url": "https://github.com/googleapis/java-artifact-registry/blob/4fad73ab0deaa32ff4808ee2bdbf67f60bdc8cc4/google-cloud-artifact-registry/src/test/java/com/google/devtools/artifactregistry/v1beta2/MockArtifactRegistryImpl.java",
    "raw_url": "https://github.com/googleapis/java-artifact-registry/raw/4fad73ab0deaa32ff4808ee2bdbf67f60bdc8cc4/google-cloud-artifact-registry/src/test/java/com/google/devtools/artifactregistry/v1beta2/MockArtifactRegistryImpl.java",
    "contents_url": "https://api.github.com/repos/googleapis/java-artifact-registry/contents/google-cloud-artifact-registry/src/test/java/com/google/devtools/artifactregistry/v1beta2/MockArtifactRegistryImpl.java?ref=4fad73ab0deaa32ff4808ee2bdbf67f60bdc8cc4",
    "patch": "@@ -68,7 +68,7 @@ public void reset() {\n   @Override\n   public void listRepositories(\n       ListRepositoriesRequest request, StreamObserver<ListRepositoriesResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof ListRepositoriesResponse) {\n       requests.add(request);\n       responseObserver.onNext(((ListRepositoriesResponse) response));\n@@ -80,7 +80,7 @@ public void listRepositories(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method ListRepositories, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   ListRepositoriesResponse.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -89,7 +89,7 @@ public void listRepositories(\n   @Override\n   public void getRepository(\n       GetRepositoryRequest request, StreamObserver<Repository> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Repository) {\n       requests.add(request);\n       responseObserver.onNext(((Repository) response));\n@@ -101,7 +101,7 @@ public void getRepository(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method GetRepository, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Repository.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -110,7 +110,7 @@ public void getRepository(\n   @Override\n   public void createRepository(\n       CreateRepositoryRequest request, StreamObserver<Operation> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Operation) {\n       requests.add(request);\n       responseObserver.onNext(((Operation) response));\n@@ -122,7 +122,7 @@ public void createRepository(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method CreateRepository, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Operation.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -131,7 +131,7 @@ public void createRepository(\n   @Override\n   public void updateRepository(\n       UpdateRepositoryRequest request, StreamObserver<Repository> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Repository) {\n       requests.add(request);\n       responseObserver.onNext(((Repository) response));\n@@ -143,7 +143,7 @@ public void updateRepository(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method UpdateRepository, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Repository.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -152,7 +152,7 @@ public void updateRepository(\n   @Override\n   public void deleteRepository(\n       DeleteRepositoryRequest request, StreamObserver<Operation> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Operation) {\n       requests.add(request);\n       responseObserver.onNext(((Operation) response));\n@@ -164,7 +164,7 @@ public void deleteRepository(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method DeleteRepository, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Operation.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -173,7 +173,7 @@ public void deleteRepository(\n   @Override\n   public void listPackages(\n       ListPackagesRequest request, StreamObserver<ListPackagesResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof ListPackagesResponse) {\n       requests.add(request);\n       responseObserver.onNext(((ListPackagesResponse) response));\n@@ -185,15 +185,15 @@ public void listPackages(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method ListPackages, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   ListPackagesResponse.class.getName(),\n                   Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void getPackage(GetPackageRequest request, StreamObserver<Package> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Package) {\n       requests.add(request);\n       responseObserver.onNext(((Package) response));\n@@ -205,7 +205,7 @@ public void getPackage(GetPackageRequest request, StreamObserver<Package> respon\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method GetPackage, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Package.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -214,7 +214,7 @@ public void getPackage(GetPackageRequest request, StreamObserver<Package> respon\n   @Override\n   public void deletePackage(\n       DeletePackageRequest request, StreamObserver<Operation> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Operation) {\n       requests.add(request);\n       responseObserver.onNext(((Operation) response));\n@@ -226,7 +226,7 @@ public void deletePackage(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method DeletePackage, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Operation.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -235,7 +235,7 @@ public void deletePackage(\n   @Override\n   public void listVersions(\n       ListVersionsRequest request, StreamObserver<ListVersionsResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof ListVersionsResponse) {\n       requests.add(request);\n       responseObserver.onNext(((ListVersionsResponse) response));\n@@ -247,15 +247,15 @@ public void listVersions(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method ListVersions, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   ListVersionsResponse.class.getName(),\n                   Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void getVersion(GetVersionRequest request, StreamObserver<Version> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Version) {\n       requests.add(request);\n       responseObserver.onNext(((Version) response));\n@@ -267,7 +267,7 @@ public void getVersion(GetVersionRequest request, StreamObserver<Version> respon\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method GetVersion, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Version.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -276,7 +276,7 @@ public void getVersion(GetVersionRequest request, StreamObserver<Version> respon\n   @Override\n   public void deleteVersion(\n       DeleteVersionRequest request, StreamObserver<Operation> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Operation) {\n       requests.add(request);\n       responseObserver.onNext(((Operation) response));\n@@ -288,7 +288,7 @@ public void deleteVersion(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method DeleteVersion, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Operation.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -297,7 +297,7 @@ public void deleteVersion(\n   @Override\n   public void listFiles(\n       ListFilesRequest request, StreamObserver<ListFilesResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof ListFilesResponse) {\n       requests.add(request);\n       responseObserver.onNext(((ListFilesResponse) response));\n@@ -309,15 +309,15 @@ public void listFiles(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method ListFiles, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   ListFilesResponse.class.getName(),\n                   Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void getFile(GetFileRequest request, StreamObserver<File> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof File) {\n       requests.add(request);\n       responseObserver.onNext(((File) response));\n@@ -329,13 +329,15 @@ public void getFile(GetFileRequest request, StreamObserver<File> responseObserve\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method GetFile, expected %s or %s\",\n-                  response.getClass().getName(), File.class.getName(), Exception.class.getName())));\n+                  response == null ? \"null\" : response.getClass().getName(),\n+                  File.class.getName(),\n+                  Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void listTags(ListTagsRequest request, StreamObserver<ListTagsResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof ListTagsResponse) {\n       requests.add(request);\n       responseObserver.onNext(((ListTagsResponse) response));\n@@ -347,15 +349,15 @@ public void listTags(ListTagsRequest request, StreamObserver<ListTagsResponse> r\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method ListTags, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   ListTagsResponse.class.getName(),\n                   Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void getTag(GetTagRequest request, StreamObserver<Tag> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Tag) {\n       requests.add(request);\n       responseObserver.onNext(((Tag) response));\n@@ -367,13 +369,15 @@ public void getTag(GetTagRequest request, StreamObserver<Tag> responseObserver)\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method GetTag, expected %s or %s\",\n-                  response.getClass().getName(), Tag.class.getName(), Exception.class.getName())));\n+                  response == null ? \"null\" : response.getClass().getName(),\n+                  Tag.class.getName(),\n+                  Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void createTag(CreateTagRequest request, StreamObserver<Tag> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Tag) {\n       requests.add(request);\n       responseObserver.onNext(((Tag) response));\n@@ -385,13 +389,15 @@ public void createTag(CreateTagRequest request, StreamObserver<Tag> responseObse\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method CreateTag, expected %s or %s\",\n-                  response.getClass().getName(), Tag.class.getName(), Exception.class.getName())));\n+                  response == null ? \"null\" : response.getClass().getName(),\n+                  Tag.class.getName(),\n+                  Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void updateTag(UpdateTagRequest request, StreamObserver<Tag> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Tag) {\n       requests.add(request);\n       responseObserver.onNext(((Tag) response));\n@@ -403,13 +409,15 @@ public void updateTag(UpdateTagRequest request, StreamObserver<Tag> responseObse\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method UpdateTag, expected %s or %s\",\n-                  response.getClass().getName(), Tag.class.getName(), Exception.class.getName())));\n+                  response == null ? \"null\" : response.getClass().getName(),\n+                  Tag.class.getName(),\n+                  Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void deleteTag(DeleteTagRequest request, StreamObserver<Empty> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Empty) {\n       requests.add(request);\n       responseObserver.onNext(((Empty) response));\n@@ -421,15 +429,15 @@ public void deleteTag(DeleteTagRequest request, StreamObserver<Empty> responseOb\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method DeleteTag, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Empty.class.getName(),\n                   Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void setIamPolicy(SetIamPolicyRequest request, StreamObserver<Policy> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Policy) {\n       requests.add(request);\n       responseObserver.onNext(((Policy) response));\n@@ -441,15 +449,15 @@ public void setIamPolicy(SetIamPolicyRequest request, StreamObserver<Policy> res\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method SetIamPolicy, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Policy.class.getName(),\n                   Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void getIamPolicy(GetIamPolicyRequest request, StreamObserver<Policy> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Policy) {\n       requests.add(request);\n       responseObserver.onNext(((Policy) response));\n@@ -461,7 +469,7 @@ public void getIamPolicy(GetIamPolicyRequest request, StreamObserver<Policy> res\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method GetIamPolicy, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Policy.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -471,7 +479,7 @@ public void getIamPolicy(GetIamPolicyRequest request, StreamObserver<Policy> res\n   public void testIamPermissions(\n       TestIamPermissionsRequest request,\n       StreamObserver<TestIamPermissionsResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof TestIamPermissionsResponse) {\n       requests.add(request);\n       responseObserver.onNext(((TestIamPermissionsResponse) response));\n@@ -483,7 +491,7 @@ public void testIamPermissions(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method TestIamPermissions, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   TestIamPermissionsResponse.class.getName(),\n                   Exception.class.getName())));\n     }"
  },
  {
    "sha": "2db249c3797d5d8db2c73c31ac7527f2577b42f7",
    "filename": "synth.metadata",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/googleapis/java-artifact-registry/blob/4fad73ab0deaa32ff4808ee2bdbf67f60bdc8cc4/synth.metadata",
    "raw_url": "https://github.com/googleapis/java-artifact-registry/raw/4fad73ab0deaa32ff4808ee2bdbf67f60bdc8cc4/synth.metadata",
    "contents_url": "https://api.github.com/repos/googleapis/java-artifact-registry/contents/synth.metadata?ref=4fad73ab0deaa32ff4808ee2bdbf67f60bdc8cc4",
    "patch": "@@ -4,15 +4,15 @@\n       \"git\": {\n         \"name\": \".\",\n         \"remote\": \"https://github.com/googleapis/java-artifact-registry.git\",\n-        \"sha\": \"4102afdb736f6a4b21ad47fcef7f5e439c1c2d37\"\n+        \"sha\": \"4599f106cba716571404a4364a8a0a9a43ae1caa\"\n       }\n     },\n     {\n       \"git\": {\n         \"name\": \"googleapis-gen\",\n         \"remote\": \"https://github.com/googleapis/googleapis-gen.git\",\n-        \"sha\": \"ba5ec70708cd72caa1692a95ce57891e3ade61dd\",\n-        \"internalRef\": \"361377784\"\n+        \"sha\": \"ebd77e76effb65c4fba8c64f31c15062c250a4c2\",\n+        \"internalRef\": \"362856902\"\n       }\n     },\n     {"
  }
]
