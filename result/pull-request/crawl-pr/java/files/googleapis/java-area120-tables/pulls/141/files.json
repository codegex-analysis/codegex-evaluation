[
  {
    "sha": "235716f5dbe255a1616c441504fe352eff6b2ff3",
    "filename": "google-area120-tables/src/main/java/com/google/area120/tables/v1alpha/TablesServiceClient.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/googleapis/java-area120-tables/blob/5e3e2aa113f55fe6ae583c732c4fb2b27f1de9bc/google-area120-tables/src/main/java/com/google/area120/tables/v1alpha/TablesServiceClient.java",
    "raw_url": "https://github.com/googleapis/java-area120-tables/raw/5e3e2aa113f55fe6ae583c732c4fb2b27f1de9bc/google-area120-tables/src/main/java/com/google/area120/tables/v1alpha/TablesServiceClient.java",
    "contents_url": "https://api.github.com/repos/googleapis/java-area120-tables/contents/google-area120-tables/src/main/java/com/google/area120/tables/v1alpha/TablesServiceClient.java?ref=5e3e2aa113f55fe6ae583c732c4fb2b27f1de9bc",
    "patch": "@@ -326,6 +326,11 @@ public final ListTablesPagedResponse listTables(ListTablesRequest request) {\n    *\n    * <pre>{@code\n    * try (TablesServiceClient tablesServiceClient = TablesServiceClient.create()) {\n+   *   ListTablesRequest request =\n+   *       ListTablesRequest.newBuilder()\n+   *           .setPageSize(883849137)\n+   *           .setPageToken(\"pageToken873572522\")\n+   *           .build();\n    *   while (true) {\n    *     ListTablesResponse response = tablesServiceClient.listTablesCallable().call(request);\n    *     for (Table element : response.getResponsesList()) {\n@@ -494,6 +499,11 @@ public final ListWorkspacesPagedResponse listWorkspaces(ListWorkspacesRequest re\n    *\n    * <pre>{@code\n    * try (TablesServiceClient tablesServiceClient = TablesServiceClient.create()) {\n+   *   ListWorkspacesRequest request =\n+   *       ListWorkspacesRequest.newBuilder()\n+   *           .setPageSize(883849137)\n+   *           .setPageToken(\"pageToken873572522\")\n+   *           .build();\n    *   while (true) {\n    *     ListWorkspacesResponse response =\n    *         tablesServiceClient.listWorkspacesCallable().call(request);\n@@ -693,6 +703,14 @@ public final ListRowsPagedResponse listRows(ListRowsRequest request) {\n    *\n    * <pre>{@code\n    * try (TablesServiceClient tablesServiceClient = TablesServiceClient.create()) {\n+   *   ListRowsRequest request =\n+   *       ListRowsRequest.newBuilder()\n+   *           .setParent(\"parent-995424086\")\n+   *           .setPageSize(883849137)\n+   *           .setPageToken(\"pageToken873572522\")\n+   *           .setView(View.forNumber(0))\n+   *           .setFilter(\"filter-1274492040\")\n+   *           .build();\n    *   while (true) {\n    *     ListRowsResponse response = tablesServiceClient.listRowsCallable().call(request);\n    *     for (Row element : response.getResponsesList()) {"
  },
  {
    "sha": "8f4800012419d63b65195ef310bf94c1fd93970f",
    "filename": "google-area120-tables/src/test/java/com/google/area120/tables/v1alpha/MockTablesServiceImpl.java",
    "status": "modified",
    "additions": 30,
    "deletions": 24,
    "changes": 54,
    "blob_url": "https://github.com/googleapis/java-area120-tables/blob/5e3e2aa113f55fe6ae583c732c4fb2b27f1de9bc/google-area120-tables/src/test/java/com/google/area120/tables/v1alpha/MockTablesServiceImpl.java",
    "raw_url": "https://github.com/googleapis/java-area120-tables/raw/5e3e2aa113f55fe6ae583c732c4fb2b27f1de9bc/google-area120-tables/src/test/java/com/google/area120/tables/v1alpha/MockTablesServiceImpl.java",
    "contents_url": "https://api.github.com/repos/googleapis/java-area120-tables/contents/google-area120-tables/src/test/java/com/google/area120/tables/v1alpha/MockTablesServiceImpl.java?ref=5e3e2aa113f55fe6ae583c732c4fb2b27f1de9bc",
    "patch": "@@ -81,7 +81,7 @@ public void reset() {\n \n   @Override\n   public void getTable(GetTableRequest request, StreamObserver<Table> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Table) {\n       requests.add(request);\n       responseObserver.onNext(((Table) response));\n@@ -93,7 +93,7 @@ public void getTable(GetTableRequest request, StreamObserver<Table> responseObse\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method GetTable, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Table.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -102,7 +102,7 @@ public void getTable(GetTableRequest request, StreamObserver<Table> responseObse\n   @Override\n   public void listTables(\n       ListTablesRequest request, StreamObserver<ListTablesResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof ListTablesResponse) {\n       requests.add(request);\n       responseObserver.onNext(((ListTablesResponse) response));\n@@ -114,7 +114,7 @@ public void listTables(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method ListTables, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   ListTablesResponse.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -123,7 +123,7 @@ public void listTables(\n   @Override\n   public void getWorkspace(\n       GetWorkspaceRequest request, StreamObserver<Workspace> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Workspace) {\n       requests.add(request);\n       responseObserver.onNext(((Workspace) response));\n@@ -135,7 +135,7 @@ public void getWorkspace(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method GetWorkspace, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Workspace.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -144,7 +144,7 @@ public void getWorkspace(\n   @Override\n   public void listWorkspaces(\n       ListWorkspacesRequest request, StreamObserver<ListWorkspacesResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof ListWorkspacesResponse) {\n       requests.add(request);\n       responseObserver.onNext(((ListWorkspacesResponse) response));\n@@ -156,15 +156,15 @@ public void listWorkspaces(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method ListWorkspaces, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   ListWorkspacesResponse.class.getName(),\n                   Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void getRow(GetRowRequest request, StreamObserver<Row> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Row) {\n       requests.add(request);\n       responseObserver.onNext(((Row) response));\n@@ -176,13 +176,15 @@ public void getRow(GetRowRequest request, StreamObserver<Row> responseObserver)\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method GetRow, expected %s or %s\",\n-                  response.getClass().getName(), Row.class.getName(), Exception.class.getName())));\n+                  response == null ? \"null\" : response.getClass().getName(),\n+                  Row.class.getName(),\n+                  Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void listRows(ListRowsRequest request, StreamObserver<ListRowsResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof ListRowsResponse) {\n       requests.add(request);\n       responseObserver.onNext(((ListRowsResponse) response));\n@@ -194,15 +196,15 @@ public void listRows(ListRowsRequest request, StreamObserver<ListRowsResponse> r\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method ListRows, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   ListRowsResponse.class.getName(),\n                   Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void createRow(CreateRowRequest request, StreamObserver<Row> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Row) {\n       requests.add(request);\n       responseObserver.onNext(((Row) response));\n@@ -214,14 +216,16 @@ public void createRow(CreateRowRequest request, StreamObserver<Row> responseObse\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method CreateRow, expected %s or %s\",\n-                  response.getClass().getName(), Row.class.getName(), Exception.class.getName())));\n+                  response == null ? \"null\" : response.getClass().getName(),\n+                  Row.class.getName(),\n+                  Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void batchCreateRows(\n       BatchCreateRowsRequest request, StreamObserver<BatchCreateRowsResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof BatchCreateRowsResponse) {\n       requests.add(request);\n       responseObserver.onNext(((BatchCreateRowsResponse) response));\n@@ -233,15 +237,15 @@ public void batchCreateRows(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method BatchCreateRows, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   BatchCreateRowsResponse.class.getName(),\n                   Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void updateRow(UpdateRowRequest request, StreamObserver<Row> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Row) {\n       requests.add(request);\n       responseObserver.onNext(((Row) response));\n@@ -253,14 +257,16 @@ public void updateRow(UpdateRowRequest request, StreamObserver<Row> responseObse\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method UpdateRow, expected %s or %s\",\n-                  response.getClass().getName(), Row.class.getName(), Exception.class.getName())));\n+                  response == null ? \"null\" : response.getClass().getName(),\n+                  Row.class.getName(),\n+                  Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void batchUpdateRows(\n       BatchUpdateRowsRequest request, StreamObserver<BatchUpdateRowsResponse> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof BatchUpdateRowsResponse) {\n       requests.add(request);\n       responseObserver.onNext(((BatchUpdateRowsResponse) response));\n@@ -272,15 +278,15 @@ public void batchUpdateRows(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method BatchUpdateRows, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   BatchUpdateRowsResponse.class.getName(),\n                   Exception.class.getName())));\n     }\n   }\n \n   @Override\n   public void deleteRow(DeleteRowRequest request, StreamObserver<Empty> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Empty) {\n       requests.add(request);\n       responseObserver.onNext(((Empty) response));\n@@ -292,7 +298,7 @@ public void deleteRow(DeleteRowRequest request, StreamObserver<Empty> responseOb\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method DeleteRow, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Empty.class.getName(),\n                   Exception.class.getName())));\n     }\n@@ -301,7 +307,7 @@ public void deleteRow(DeleteRowRequest request, StreamObserver<Empty> responseOb\n   @Override\n   public void batchDeleteRows(\n       BatchDeleteRowsRequest request, StreamObserver<Empty> responseObserver) {\n-    Object response = responses.remove();\n+    Object response = responses.poll();\n     if (response instanceof Empty) {\n       requests.add(request);\n       responseObserver.onNext(((Empty) response));\n@@ -313,7 +319,7 @@ public void batchDeleteRows(\n           new IllegalArgumentException(\n               String.format(\n                   \"Unrecognized response type %s for method BatchDeleteRows, expected %s or %s\",\n-                  response.getClass().getName(),\n+                  response == null ? \"null\" : response.getClass().getName(),\n                   Empty.class.getName(),\n                   Exception.class.getName())));\n     }"
  },
  {
    "sha": "b2d2ce55729e209f69438f413c77b6f21e98f360",
    "filename": "synth.metadata",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/googleapis/java-area120-tables/blob/5e3e2aa113f55fe6ae583c732c4fb2b27f1de9bc/synth.metadata",
    "raw_url": "https://github.com/googleapis/java-area120-tables/raw/5e3e2aa113f55fe6ae583c732c4fb2b27f1de9bc/synth.metadata",
    "contents_url": "https://api.github.com/repos/googleapis/java-area120-tables/contents/synth.metadata?ref=5e3e2aa113f55fe6ae583c732c4fb2b27f1de9bc",
    "patch": "@@ -4,15 +4,15 @@\n       \"git\": {\n         \"name\": \".\",\n         \"remote\": \"https://github.com/googleapis/java-area120-tables.git\",\n-        \"sha\": \"cc85ce1d9d550be924ca482ae647e40d8afa8c55\"\n+        \"sha\": \"9258b007de6b7cb994ffad3eff41f7391ae6b7df\"\n       }\n     },\n     {\n       \"git\": {\n         \"name\": \"googleapis-gen\",\n         \"remote\": \"https://github.com/googleapis/googleapis-gen.git\",\n-        \"sha\": \"ba5ec70708cd72caa1692a95ce57891e3ade61dd\",\n-        \"internalRef\": \"361377784\"\n+        \"sha\": \"ebd77e76effb65c4fba8c64f31c15062c250a4c2\",\n+        \"internalRef\": \"362856902\"\n       }\n     },\n     {"
  }
]
