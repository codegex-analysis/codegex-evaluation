[
  {
    "sha": "7040e4677468a41aa2f63e3b0b40c342bdb6cb0a",
    "filename": "samples/snippets/pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/googleapis/java-analytics-data/blob/c485d2ef1816a443afe263482fcbccc85687c7b4/samples/snippets/pom.xml",
    "raw_url": "https://github.com/googleapis/java-analytics-data/raw/c485d2ef1816a443afe263482fcbccc85687c7b4/samples/snippets/pom.xml",
    "contents_url": "https://api.github.com/repos/googleapis/java-analytics-data/contents/samples/snippets/pom.xml?ref=c485d2ef1816a443afe263482fcbccc85687c7b4",
    "patch": "@@ -28,7 +28,7 @@\n     <dependency>\n       <groupId>com.google.analytics</groupId>\n       <artifactId>google-analytics-data</artifactId>\n-      <version>0.6.0</version>\n+      <version>0.7.0</version>\n     </dependency>\n \n     <dependency>"
  },
  {
    "sha": "74a163cf7463537dd3f5f91d669b28bde7a2a23a",
    "filename": "samples/snippets/src/main/java/com/example/analytics/QuickstartJsonCredentialsSample.java",
    "status": "added",
    "additions": 109,
    "deletions": 0,
    "changes": 109,
    "blob_url": "https://github.com/googleapis/java-analytics-data/blob/c485d2ef1816a443afe263482fcbccc85687c7b4/samples/snippets/src/main/java/com/example/analytics/QuickstartJsonCredentialsSample.java",
    "raw_url": "https://github.com/googleapis/java-analytics-data/raw/c485d2ef1816a443afe263482fcbccc85687c7b4/samples/snippets/src/main/java/com/example/analytics/QuickstartJsonCredentialsSample.java",
    "contents_url": "https://api.github.com/repos/googleapis/java-analytics-data/contents/samples/snippets/src/main/java/com/example/analytics/QuickstartJsonCredentialsSample.java?ref=c485d2ef1816a443afe263482fcbccc85687c7b4",
    "patch": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.analytics;\n+\n+/* Google Analytics Data API sample quickstart application.\n+\n+This application demonstrates the usage of the Analytics Data API using\n+service account credentials from a JSON file downloaded from\n+the Google Cloud Console.\n+\n+Before you start the application, please review the comments starting with\n+\"TODO(developer)\" and update the code to use correct values.\n+\n+To run this sample using Maven:\n+  cd java-analytics-data/samples/snippets\n+  mvn compile\n+  mvn exec:java -Dexec.mainClass=\"com.example.analytics.QuickstartJsonCredentialsSample\"\n+ */\n+\n+// [START google_analytics_data_quickstart]\n+import com.google.analytics.data.v1beta.BetaAnalyticsDataClient;\n+import com.google.analytics.data.v1beta.BetaAnalyticsDataSettings;\n+import com.google.analytics.data.v1beta.DateRange;\n+import com.google.analytics.data.v1beta.Dimension;\n+import com.google.analytics.data.v1beta.Metric;\n+import com.google.analytics.data.v1beta.Row;\n+import com.google.analytics.data.v1beta.RunReportRequest;\n+import com.google.analytics.data.v1beta.RunReportResponse;\n+import com.google.api.gax.core.FixedCredentialsProvider;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import java.io.FileInputStream;\n+\n+public class QuickstartJsonCredentialsSample {\n+\n+  // This is an example snippet that calls the Google Analytics Data API and runs a simple report\n+  // on the provided GA4 property id.\n+  static void sampleRunReport(String propertyId, String credentialsJsonPath) throws Exception {\n+    /**\n+     * TODO(developer): Uncomment this variable and replace with your\n+     * Google Analytics 4 property ID before running the sample.\n+     */\n+    // propertyId = \"YOUR-GA4-PROPERTY-ID\";\n+\n+    // [START google_analytics_data_initialize]\n+    /** TODO(developer): Uncomment this variable and replace with a valid path to\n+     * the credentials.json file for your service account downloaded from the\n+     * Cloud Console.\n+     */\n+    // credentialsJsonPath = \"/path/to/credentials.json\";\n+\n+    // Explicitly use service account credentials by specifying\n+    // the private key file.\n+    GoogleCredentials credentials = GoogleCredentials\n+        .fromStream(new FileInputStream(credentialsJsonPath));\n+\n+    BetaAnalyticsDataSettings betaAnalyticsDataSettings =\n+        BetaAnalyticsDataSettings.newBuilder()\n+            .setCredentialsProvider(FixedCredentialsProvider.create(credentials))\n+            .build();\n+\n+    try (BetaAnalyticsDataClient analyticsData =\n+        BetaAnalyticsDataClient.create(betaAnalyticsDataSettings)) {\n+      // [END google_analytics_data_initialize]\n+\n+      // [START google_analytics_data_run_report]\n+      RunReportRequest request = RunReportRequest.newBuilder()\n+          .setProperty(\"properties/\" + propertyId)\n+          .addDimensions(\n+              Dimension.newBuilder().setName(\"city\"))\n+          .addMetrics(Metric.newBuilder().setName(\"activeUsers\"))\n+          .addDateRanges(\n+              DateRange.newBuilder().setStartDate(\"2020-03-31\").setEndDate(\"today\")).build();\n+\n+      // Make the request.\n+      RunReportResponse response = analyticsData.runReport(request);\n+      // [END google_analytics_data_run_report]\n+\n+      // [START google_analytics_data_print_report]\n+      System.out.println(\"Report result:\");\n+      // Iterate through every row of the API response.\n+      for (Row row : response.getRowsList()) {\n+        System.out.printf(\"%s, %s%n\", row.getDimensionValues(0).getValue(),\n+            row.getMetricValues(0).getValue());\n+      }\n+      // [END google_analytics_data_print_report]\n+    }\n+  }\n+\n+\n+  public static void main(String... args) throws Exception {\n+    sampleRunReport(\"YOUR-GA4-PROPERTY-ID\", \"/path/to/credentials.json\");\n+  }\n+}\n+\n+// [END google_analytics_data_quickstart]"
  },
  {
    "sha": "567e638228962ea3593fb0c507ee3a836abef015",
    "filename": "samples/snippets/src/main/java/com/example/analytics/QuickstartSample.java",
    "status": "modified",
    "additions": 39,
    "deletions": 47,
    "changes": 86,
    "blob_url": "https://github.com/googleapis/java-analytics-data/blob/c485d2ef1816a443afe263482fcbccc85687c7b4/samples/snippets/src/main/java/com/example/analytics/QuickstartSample.java",
    "raw_url": "https://github.com/googleapis/java-analytics-data/raw/c485d2ef1816a443afe263482fcbccc85687c7b4/samples/snippets/src/main/java/com/example/analytics/QuickstartSample.java",
    "contents_url": "https://api.github.com/repos/googleapis/java-analytics-data/contents/samples/snippets/src/main/java/com/example/analytics/QuickstartSample.java?ref=c485d2ef1816a443afe263482fcbccc85687c7b4",
    "patch": "@@ -16,82 +16,74 @@\n \n package com.example.analytics;\n \n-/* This application demonstrates the usage of the Analytics Data API using\n- service account credentials. For more information on service accounts, see\n- https://cloud.google.com/iam/docs/understanding-service-accounts\n+/* Google Analytics Data API sample quickstart application.\n \n- The following document provides instructions on setting service account\n- credentials for your application:\n- https://cloud.google.com/docs/authentication/production\n+This application demonstrates the usage of the Analytics Data API using service account credentials.\n \n- In a nutshell, you need to:\n+Before you start the application, please review the comments starting with\n+\"TODO(developer)\" and update the code to use correct values.\n \n- 1. Create a service account and download the key JSON file.\n- https://cloud.google.com/docs/authentication/production#creating_a_service_account\n-\n- 2. Provide service account credentials using one of the following options:\n- - set the GOOGLE_APPLICATION_CREDENTIALS environment variable, the API\n- client will use the value of this variable to find the service account key\n- JSON file.\n-\n- https://cloud.google.com/docs/authentication/production#setting_the_environment_variable\n-\n- OR\n-\n- - manually pass the path to the service account key JSON file to the API client\n- by specifying the keyFilename parameter in the constructor.\n- https://cloud.google.com/docs/authentication/production#passing_the_path_to_the_service_account_key_in_code\n-\n- To run this sample using Maven:\n-   cd java-analytics-data/samples/snippets\n-   mvn compile\n-   mvn exec:java -Dexec.mainClass=\"QuickstartSample\"\n+To run this sample using Maven:\n+  cd java-analytics-data/samples/snippets\n+  mvn compile\n+  mvn exec:java -Dexec.mainClass=\"com.example.analytics.QuickstartSample\"\n  */\n \n-// [START analytics_data_quickstart]\n+// [START google_analytics_data_quickstart]\n \n-import com.google.analytics.data.v1alpha.AlphaAnalyticsDataClient;\n-import com.google.analytics.data.v1alpha.DateRange;\n-import com.google.analytics.data.v1alpha.Dimension;\n-import com.google.analytics.data.v1alpha.Entity;\n-import com.google.analytics.data.v1alpha.Metric;\n-import com.google.analytics.data.v1alpha.Row;\n-import com.google.analytics.data.v1alpha.RunReportRequest;\n-import com.google.analytics.data.v1alpha.RunReportResponse;\n+import com.google.analytics.data.v1beta.BetaAnalyticsDataClient;\n+import com.google.analytics.data.v1beta.DateRange;\n+import com.google.analytics.data.v1beta.Dimension;\n+import com.google.analytics.data.v1beta.Metric;\n+import com.google.analytics.data.v1beta.Row;\n+import com.google.analytics.data.v1beta.RunReportRequest;\n+import com.google.analytics.data.v1beta.RunReportResponse;\n \n public class QuickstartSample {\n \n   // This is an example snippet that calls the Google Analytics Data API and runs a simple report\n   // on the provided GA4 property id.\n-  static void sampleRunReport(String ga4PropertyId) throws Exception {\n-    // Instantiates a client using default credentials.\n-    // See https://cloud.google.com/docs/authentication/production for more information\n-    // about managing credentials.\n-    try (AlphaAnalyticsDataClient analyticsData = AlphaAnalyticsDataClient.create()) {\n+  static void sampleRunReport(String propertyId) throws Exception {\n+    /**\n+     * TODO(developer): Uncomment this variable and replace with your\n+     * Google Analytics 4 property ID before running the sample.\n+     */\n+    // propertyId = \"YOUR-GA4-PROPERTY-ID\";\n+\n+    // [START google_analytics_data_initialize]\n+    // Using a default constructor instructs the client to use the credentials\n+    // specified in GOOGLE_APPLICATION_CREDENTIALS environment variable.\n+    try (BetaAnalyticsDataClient analyticsData = BetaAnalyticsDataClient.create()) {\n+      // [END google_analytics_data_initialize]\n+\n+      // [START google_analytics_data_run_report]\n       RunReportRequest request = RunReportRequest.newBuilder()\n-          .setEntity(Entity.newBuilder().setPropertyId(ga4PropertyId))\n+          .setProperty(\"properties/\" + propertyId)\n           .addDimensions(\n               Dimension.newBuilder().setName(\"city\"))\n           .addMetrics(Metric.newBuilder().setName(\"activeUsers\"))\n           .addDateRanges(\n               DateRange.newBuilder().setStartDate(\"2020-03-31\").setEndDate(\"today\")).build();\n \n-      // Make the request\n+      // Make the request.\n       RunReportResponse response = analyticsData.runReport(request);\n+      // [END google_analytics_data_run_report]\n \n+      // [START google_analytics_data_print_report]\n       System.out.println(\"Report result:\");\n+      // Iterate through every row of the API response.\n       for (Row row : response.getRowsList()) {\n         System.out.printf(\"%s, %s%n\", row.getDimensionValues(0).getValue(),\n             row.getMetricValues(0).getValue());\n       }\n+      // [END google_analytics_data_print_report]\n     }\n   }\n \n+\n   public static void main(String... args) throws Exception {\n-    // TODO(developer): Replace this variable with your GA4 property ID before running the sample.\n-    String ga4PropertyId = \"GA4 PROPERTY ID\";\n-    sampleRunReport(ga4PropertyId);\n+    sampleRunReport(\"YOUR-GA4-PROPERTY-ID\");\n   }\n }\n \n-// [END analytics_data_quickstart]\n+// [END google_analytics_data_quickstart]"
  },
  {
    "sha": "5f847f70d634cdd484c559407b11b71bc5aa6900",
    "filename": "samples/snippets/src/test/java/com/example/analytics/QuickstartJsonCredentialsSampleTest.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/googleapis/java-analytics-data/blob/c485d2ef1816a443afe263482fcbccc85687c7b4/samples/snippets/src/test/java/com/example/analytics/QuickstartJsonCredentialsSampleTest.java",
    "raw_url": "https://github.com/googleapis/java-analytics-data/raw/c485d2ef1816a443afe263482fcbccc85687c7b4/samples/snippets/src/test/java/com/example/analytics/QuickstartJsonCredentialsSampleTest.java",
    "contents_url": "https://api.github.com/repos/googleapis/java-analytics-data/contents/samples/snippets/src/test/java/com/example/analytics/QuickstartJsonCredentialsSampleTest.java?ref=c485d2ef1816a443afe263482fcbccc85687c7b4",
    "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.analytics;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+/**\n+ * Tests for quickstart sample.\n+ */\n+@RunWith(JUnit4.class)\n+public class QuickstartJsonCredentialsSampleTest {\n+\n+  private String ga4PropertyId =\n+      System.getProperty(\"analyticsdata.quickstart.ga4PropertyId\", \"222596558\");\n+\n+  private String credentialsJsonPath = System.getenv(\"GOOGLE_APPLICATION_CREDENTIALS\");\n+\n+\n+  private String runSample(String ga4PropertyId) throws Exception {\n+    PrintStream stdOut = System.out;\n+    ByteArrayOutputStream bout = new ByteArrayOutputStream();\n+    PrintStream out = new PrintStream(bout);\n+    System.setOut(out);\n+\n+    // Run the test using default system credentials by passing an empty path to the\n+    // private key file.\n+    QuickstartJsonCredentialsSample.sampleRunReport(ga4PropertyId, credentialsJsonPath);\n+\n+    System.setOut(stdOut);\n+    return bout.toString();\n+  }\n+\n+  @Test\n+  public void testQuickstart() throws Exception {\n+    // Act\n+    String out = runSample(ga4PropertyId);\n+\n+    // Assert\n+    assertThat(out).contains(\"Report result:\");\n+  }\n+}"
  },
  {
    "sha": "3fd79e287cc78f23c95d8b02569f9429d2362e74",
    "filename": "samples/snippets/src/test/java/com/example/analytics/QuickstartSampleTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/googleapis/java-analytics-data/blob/c485d2ef1816a443afe263482fcbccc85687c7b4/samples/snippets/src/test/java/com/example/analytics/QuickstartSampleTest.java",
    "raw_url": "https://github.com/googleapis/java-analytics-data/raw/c485d2ef1816a443afe263482fcbccc85687c7b4/samples/snippets/src/test/java/com/example/analytics/QuickstartSampleTest.java",
    "contents_url": "https://api.github.com/repos/googleapis/java-analytics-data/contents/samples/snippets/src/test/java/com/example/analytics/QuickstartSampleTest.java?ref=c485d2ef1816a443afe263482fcbccc85687c7b4",
    "patch": "@@ -39,6 +39,8 @@ private String runSample(String ga4PropertyId) throws Exception {\n     PrintStream out = new PrintStream(bout);\n     System.setOut(out);\n \n+    // Run the test using default system credentials by passing an empty path to the\n+    // private key file.\n     QuickstartSample.sampleRunReport(ga4PropertyId);\n \n     System.setOut(stdOut);\n@@ -53,4 +55,4 @@ public void testQuickstart() throws Exception {\n     // Assert\n     assertThat(out).contains(\"Report result:\");\n   }\n-}\n\\ No newline at end of file\n+}"
  }
]
