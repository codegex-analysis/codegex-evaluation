[
  {
    "sha": "0b5c50e3311b6f63175403772405630f050c0e7c",
    "filename": "google-oauth-client/src/test/java/com/google/api/client/auth/oauth2/TokenRequestTest.java",
    "status": "modified",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/googleapis/google-oauth-java-client/blob/8a59660339db5dc832a0c193dca7564671dd6cfa/google-oauth-client/src/test/java/com/google/api/client/auth/oauth2/TokenRequestTest.java",
    "raw_url": "https://github.com/googleapis/google-oauth-java-client/raw/8a59660339db5dc832a0c193dca7564671dd6cfa/google-oauth-client/src/test/java/com/google/api/client/auth/oauth2/TokenRequestTest.java",
    "contents_url": "https://api.github.com/repos/googleapis/google-oauth-java-client/contents/google-oauth-client/src/test/java/com/google/api/client/auth/oauth2/TokenRequestTest.java?ref=8a59660339db5dc832a0c193dca7564671dd6cfa",
    "patch": "@@ -15,8 +15,14 @@\n package com.google.api.client.auth.oauth2;\n \n import com.google.api.client.http.GenericUrl;\n+import com.google.api.client.http.HttpContent;\n+import com.google.api.client.http.UrlEncodedContent;\n import com.google.api.client.json.gson.GsonFactory;\n import com.google.api.client.testing.http.MockHttpTransport;\n+import com.google.common.collect.ImmutableList;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n import junit.framework.TestCase;\n \n /**\n@@ -45,4 +51,36 @@ static void check(TokenRequest request, String grantType) {\n     assertEquals(JSON_FACTORY, request.getJsonFactory());\n     assertEquals(AUTHORIZATION_SERVER_URL, request.getTokenServerUrl());\n   }\n+\n+  public void testScopes() throws IOException {\n+    TokenRequest request =\n+        new TokenRequest(TRANSPORT, JSON_FACTORY, AUTHORIZATION_SERVER_URL, \"foo\")\n+            .setScopes(ImmutableList.of(\"scope1\"));\n+    HttpContent content = new UrlEncodedContent(request);\n+    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n+    content.writeTo(outputStream);\n+    String encoded = new String(outputStream.toByteArray(), StandardCharsets.UTF_8);\n+    assertEquals(\"grant_type=foo&scope=scope1\", encoded);\n+  }\n+\n+  public void testEmptyScopes() throws IOException {\n+    TokenRequest request =\n+        new TokenRequest(TRANSPORT, JSON_FACTORY, AUTHORIZATION_SERVER_URL, \"foo\")\n+            .setScopes(ImmutableList.<String>of());\n+    HttpContent content = new UrlEncodedContent(request);\n+    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n+    content.writeTo(outputStream);\n+    String encoded = new String(outputStream.toByteArray(), StandardCharsets.UTF_8);\n+    assertEquals(\"grant_type=foo&scope\", encoded);\n+  }\n+\n+  public void testNullScopes() throws IOException {\n+    TokenRequest request =\n+        new TokenRequest(TRANSPORT, JSON_FACTORY, AUTHORIZATION_SERVER_URL, \"foo\").setScopes(null);\n+    HttpContent content = new UrlEncodedContent(request);\n+    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n+    content.writeTo(outputStream);\n+    String encoded = new String(outputStream.toByteArray(), StandardCharsets.UTF_8);\n+    assertEquals(\"grant_type=foo\", encoded);\n+  }\n }"
  }
]
