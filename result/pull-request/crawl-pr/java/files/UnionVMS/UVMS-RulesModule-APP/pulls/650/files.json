[
  {
    "sha": "ae2017946f4bd5fba22a7c72c5956e52cc2810a0",
    "filename": "LIQUIBASE/changelog/db-changelog-master.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/LIQUIBASE/changelog/db-changelog-master.xml",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/LIQUIBASE/changelog/db-changelog-master.xml",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/LIQUIBASE/changelog/db-changelog-master.xml?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -97,4 +97,5 @@\n     <include file=\"changelog/v3.4/db-changelog-UNIONVMS-4477.xml\" />\n     <include file=\"changelog/v3.4/db-changelog-UNIONVMS-4685.xml\" />\n     <include file=\"changelog/v3.4/db-changelog-UNIONVMS-4660.xml\" />\n+    <include file=\"changelog/v3.4/db-changelog-UNIONVMS-4945.xml\" />\n </databaseChangeLog>"
  },
  {
    "sha": "bc0b724061fcfa166e801ca46533e8198b5ac205",
    "filename": "LIQUIBASE/changelog/v3.4/db-changelog-UNIONVMS-4660.xml",
    "status": "modified",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/LIQUIBASE/changelog/v3.4/db-changelog-UNIONVMS-4660.xml",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/LIQUIBASE/changelog/v3.4/db-changelog-UNIONVMS-4660.xml",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/LIQUIBASE/changelog/v3.4/db-changelog-UNIONVMS-4660.xml?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -498,4 +498,33 @@\n         </rollback>\n     </changeSet>\n \n+    <changeSet id=\"UNIONVMS-4660-update-VP-L03-00-0004\" author=\"gmanifavas\">\n+        <insert  tableName=\"rule\">\n+            <column name=\"template_id\" value=\"2000\" />\n+            <column name=\"property_names\" value=\"id\" />\n+            <column name=\"note\" value=\"\" />\n+            <column name=\"level\" value=\"L03\" />\n+            <column name=\"error_type\" value=\"ERROR\" />\n+            <column name=\"disabled\" value=\"false\" />\n+            <column name=\"br_id\" value=\"VP-L03-00-0004\" />\n+            <column name=\"rule_id\" value=\"20004\"/>\n+        </insert >\n+        <insert  tableName=\"context_expression\">\n+            <column name=\"expression\" value=\"!isEmpty(existingIds) &amp;&amp; hasDuplicateId(ids, existingIds)\"/>\n+            <column name=\"failure_message\" value=\"Message ID already exists.\"/>\n+            <column name=\"context\" value=\"EU\"/>\n+            <column name=\"rule_id\" value=\"20004\"/>\n+            <column name=\"id\" value=\"20004\"/>\n+        </insert >\n+\n+        <rollback>\n+            <delete tableName=\"context_expression\">\n+                <where>rule_id = 20004</where>\n+            </delete>\n+            <delete tableName=\"rule\">\n+                <where>br_id = 'VP-L03-00-0004'</where>\n+            </delete>\n+        </rollback>\n+    </changeSet>\n+\n </databaseChangeLog>"
  },
  {
    "sha": "4d805ea057d007f2b918da51ea222b5876d6f118",
    "filename": "LIQUIBASE/changelog/v3.4/db-changelog-UNIONVMS-4945.xml",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/LIQUIBASE/changelog/v3.4/db-changelog-UNIONVMS-4945.xml",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/LIQUIBASE/changelog/v3.4/db-changelog-UNIONVMS-4945.xml",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/LIQUIBASE/changelog/v3.4/db-changelog-UNIONVMS-4945.xml?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -0,0 +1,28 @@\n+<databaseChangeLog xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+                   xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+                   xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd\">\n+\n+\t<changeSet id=\"UNIONVMS-4945-movement-id-tables\" author=\"gmanifavas\">\n+\t\t<createTable tableName=\"movement_doc_id_lock\">\n+\t\t\t<column name=\"uuid\" type=\"varchar(50)\">\n+\t\t\t\t<constraints primaryKey=\"true\" primaryKeyName=\"movement_doc_id_lock_pk\"/>\n+\t\t\t</column>\n+\t\t</createTable>\n+\n+\t\t<createTable tableName=\"movement_doc_id\">\n+\t\t\t<column name=\"id\" type=\"bigint\">\n+\t\t\t\t<constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"movement_doc_id_pk\"/>\n+\t\t\t</column>\n+\t\t\t<column name=\"uuid\" type=\"TEXT\">\n+\t\t\t\t<constraints nullable=\"false\"/>\n+\t\t\t</column>\n+\t\t\t<column name=\"created_on\" type=\"TIMESTAMP\">\n+\t\t\t\t<constraints nullable=\"false\"/>\n+\t\t\t</column>\n+\t\t</createTable>\n+\n+\t\t<createIndex tableName=\"movement_doc_id\" indexName=\"movement_doc_id_guid_inx\">\n+\t\t\t<column name=\"uuid\"/>\n+\t\t</createIndex>\n+\t</changeSet>\n+</databaseChangeLog>"
  },
  {
    "sha": "4694ee1b49dfb66aa619b3e496cb3e8a066d3ac5",
    "filename": "domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/MovementDocumentIdDao.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/MovementDocumentIdDao.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/MovementDocumentIdDao.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/MovementDocumentIdDao.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -0,0 +1,55 @@\n+/*\n+ Developed by the European Commission - Directorate General for Maritime Affairs and Fisheries @ European Union, 2015-2016.\n+\n+ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The IFDM Suite is free software: you can redistribute it\n+ and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of\n+ the License, or any later version. The IFDM Suite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n+ details. You should have received a copy of the GNU General Public License along with the IFDM Suite. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package eu.europa.ec.fisheries.uvms.rules.dao;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.Query;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import eu.europa.ec.fisheries.uvms.commons.service.dao.AbstractDAO;\n+import eu.europa.ec.fisheries.uvms.rules.entity.MovementDocumentId;\n+import org.apache.commons.collections.CollectionUtils;\n+import org.apache.commons.lang.StringUtils;\n+\n+public class MovementDocumentIdDao extends AbstractDAO<MovementDocumentId> {\n+\n+    private EntityManager em;\n+\n+    public MovementDocumentIdDao(EntityManager em) {\n+        this.em = em;\n+    }\n+\n+    @Override public EntityManager getEntityManager() {\n+        return em;\n+    }\n+\n+    public List<MovementDocumentId> loadMovementDocumentIDByIds(Set<MovementDocumentId> ids) {\n+        Set<String> stringSet = new HashSet<>();\n+        if(CollectionUtils.isEmpty(ids)){\n+            return new ArrayList<>();\n+        }\n+        for (MovementDocumentId id : ids) {\n+            String uuid = id.getUuid();\n+            if(StringUtils.isNotEmpty(uuid)){\n+                stringSet.add(uuid);\n+                stringSet.add(uuid.toLowerCase());\n+                stringSet.add(uuid.toUpperCase());\n+            }\n+        }\n+        Query query = getEntityManager().createNamedQuery(MovementDocumentId.LOAD_BY_UUID);\n+        query.setParameter(\"uuids\", stringSet);\n+        return query.getResultList();\n+    }\n+\n+}"
  },
  {
    "sha": "b06a1f29081e7d20ede8e6d8e8dbe5488756b30b",
    "filename": "domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/MovementDocumentIdLockDao.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/MovementDocumentIdLockDao.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/MovementDocumentIdLockDao.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/MovementDocumentIdLockDao.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -0,0 +1,10 @@\n+package eu.europa.ec.fisheries.uvms.rules.dao;\n+\n+import javax.ejb.Local;\n+\n+@Local\n+public interface MovementDocumentIdLockDao {\n+\tvoid takeNoteOfDocumentIdInNewTx(String documentId);\n+\n+\tvoid lock(String documentId);\n+}"
  },
  {
    "sha": "acabf0d9cd31ec80cb33dd6c786a82cfa7c0f578",
    "filename": "domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/RulesDao.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/RulesDao.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/RulesDao.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/RulesDao.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -20,6 +20,7 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n import eu.europa.ec.fisheries.uvms.rules.entity.AlarmReport;\n import eu.europa.ec.fisheries.uvms.rules.entity.CustomRule;\n import eu.europa.ec.fisheries.uvms.rules.entity.FADocumentID;\n+import eu.europa.ec.fisheries.uvms.rules.entity.MovementDocumentId;\n import eu.europa.ec.fisheries.uvms.rules.entity.PreviousReport;\n import eu.europa.ec.fisheries.uvms.rules.entity.RawMessage;\n import eu.europa.ec.fisheries.uvms.rules.entity.RuleSubscription;\n@@ -168,13 +169,21 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n     List<ValidationMessage> getValidationMessagesByRawMsgGuid(String rawMsgGuid, String type) throws DaoException;\n \n     List<FADocumentID> loadFADocumentIDByIdsByIds(Set<FADocumentID> incomingIDs);\n+    \n+    List<MovementDocumentId> loadMovementDocumentIDByIds(Set<MovementDocumentId> incomingIDs);\n \n     void takeNoteOfDocumentIds(Set<FADocumentID> incomingIDs);\n+    \n+    void takeNoteOfMovementDocumentIds(Set<MovementDocumentId> incomingIDs);\n \n     List<String> lockDocumentIds(Set<FADocumentID> incomingIDs);\n+    \n+    List<String> lockMovementDocumentIds(Set<MovementDocumentId> incomingIDs);\n \n     void createFaDocumentIdEntity(Set<FADocumentID> incomingID) throws ServiceException;\n-\n+    \n+    void createMovementDocumentIdEntity(Set<MovementDocumentId> incomingID) throws ServiceException;\n+    \n     void saveFaIdsPerTripList(List<String> tripList);\n \n     List<String> loadExistingFaIdsPerTrip(List<String> idsFromIncommingMessage);"
  },
  {
    "sha": "d979a080fd025bb7f82977db3a77d040a49ab49b",
    "filename": "domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/bean/MovementDocumentIdLockDaoBean.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/bean/MovementDocumentIdLockDaoBean.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/bean/MovementDocumentIdLockDaoBean.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/bean/MovementDocumentIdLockDaoBean.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -0,0 +1,40 @@\n+package eu.europa.ec.fisheries.uvms.rules.dao.bean;\n+\n+import static javax.ejb.TransactionAttributeType.REQUIRES_NEW;\n+\n+import javax.ejb.Stateless;\n+import javax.ejb.TransactionAttribute;\n+import javax.persistence.EntityManager;\n+import javax.persistence.LockModeType;\n+import javax.persistence.PersistenceContext;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import eu.europa.ec.fisheries.uvms.rules.dao.MovementDocumentIdLockDao;\n+import eu.europa.ec.fisheries.uvms.rules.entity.MovementDocumentIdLock;\n+\n+@Stateless\n+public class MovementDocumentIdLockDaoBean implements MovementDocumentIdLockDao {\n+\n+\tprivate static final Map<String,Object> ZERO_LOCK_TIMEOUT = Collections.singletonMap(\"javax.persistence.lock.timeout\", 0);\n+\n+\t@PersistenceContext(unitName = \"rulesPostgresPU\")\n+\tpublic EntityManager em;\n+\n+\t@TransactionAttribute(REQUIRES_NEW)\n+\t@Override\n+\tpublic void takeNoteOfDocumentIdInNewTx(String documentId) {\n+\t\tMovementDocumentIdLock lock = em.find(MovementDocumentIdLock.class, documentId);\n+\t\tif( lock == null ) {\n+\t\t\tem.persist(new MovementDocumentIdLock(documentId));\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void lock(String documentId) {\n+\t\tMovementDocumentIdLock lock = em.find(MovementDocumentIdLock.class, documentId, LockModeType.PESSIMISTIC_WRITE, ZERO_LOCK_TIMEOUT);\n+\t\tif( lock == null ) {\n+\t\t\tthrow new IllegalStateException(\"lock \" + documentId + \" should have been created\");\n+\t\t}\n+\t}\n+}"
  },
  {
    "sha": "2c85703433cbeb7046680e83ea5fe35bdf2af74a",
    "filename": "domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/bean/RulesDaoBean.java",
    "status": "modified",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/bean/RulesDaoBean.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/bean/RulesDaoBean.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/dao/bean/RulesDaoBean.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -33,6 +33,8 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n import eu.europa.ec.fisheries.uvms.rules.dao.FADocumentIDDAO;\n import eu.europa.ec.fisheries.uvms.rules.dao.FaDocumentIdLockDao;\n import eu.europa.ec.fisheries.uvms.rules.dao.FaIdsPerTripDao;\n+import eu.europa.ec.fisheries.uvms.rules.dao.MovementDocumentIdDao;\n+import eu.europa.ec.fisheries.uvms.rules.dao.MovementDocumentIdLockDao;\n import eu.europa.ec.fisheries.uvms.rules.dao.RawMessageDao;\n import eu.europa.ec.fisheries.uvms.rules.dao.RulesDao;\n import eu.europa.ec.fisheries.uvms.rules.dao.TemplateDao;\n@@ -41,6 +43,7 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n import eu.europa.ec.fisheries.uvms.rules.entity.CustomRule;\n import eu.europa.ec.fisheries.uvms.rules.entity.FADocumentID;\n import eu.europa.ec.fisheries.uvms.rules.entity.FaIdsPerTrip;\n+import eu.europa.ec.fisheries.uvms.rules.entity.MovementDocumentId;\n import eu.europa.ec.fisheries.uvms.rules.entity.PreviousReport;\n import eu.europa.ec.fisheries.uvms.rules.entity.RawMessage;\n import eu.europa.ec.fisheries.uvms.rules.entity.RuleSubscription;\n@@ -67,10 +70,14 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n     private ValidationMessageDao validationMessageDao;\n     private FADocumentIDDAO fishingActivityIdDao;\n     private FaIdsPerTripDao faIdsPerTripDao;\n+    private MovementDocumentIdDao movementDocumentIdDao;\n \n     @EJB\n     private FaDocumentIdLockDao faDocumentIdLockDao;\n \n+    @EJB\n+    private MovementDocumentIdLockDao movementDocumentIdLockDao;\n+\n     @PersistenceContext(unitName = \"rulesPostgresPU\")\n     public EntityManager em;\n \n@@ -81,6 +88,7 @@ public void init() {\n         validationMessageDao = new ValidationMessageDao(em);\n         fishingActivityIdDao = new FADocumentIDDAO(em);\n         faIdsPerTripDao = new FaIdsPerTripDao(em);\n+        movementDocumentIdDao = new MovementDocumentIdDao(em);\n     }\n \n     @Override\n@@ -617,6 +625,11 @@ public void createOrUpdateValidationMessagesWithPermission(String rawMessageGuid\n         return fishingActivityIdDao.loadFADocumentIDByIdsByIds(incomingIDs);\n     }\n \n+    @Override\n+    public List<MovementDocumentId> loadMovementDocumentIDByIds(Set<MovementDocumentId> incomingIDs) {\n+        return movementDocumentIdDao.loadMovementDocumentIDByIds(incomingIDs);\n+    }\n+\n     @Override\n     public void takeNoteOfDocumentIds(Set<FADocumentID> incomingIDs) {\n         incomingIDs.stream()\n@@ -625,6 +638,14 @@ public void takeNoteOfDocumentIds(Set<FADocumentID> incomingIDs) {\n                 .forEach(this::takeNoteOfDocumentIdAllowingDuplicates);\n     }\n \n+    @Override\n+    public void takeNoteOfMovementDocumentIds(Set<MovementDocumentId> incomingIDs) {\n+        incomingIDs.stream()\n+                .map(MovementDocumentId::getUuid)\n+                .sorted()\n+                .forEach(this::takeNoteOfMovementDocumentIdAllowingDuplicates);\n+    }\n+\n     private void takeNoteOfDocumentIdAllowingDuplicates(String documentId) {\n         try {\n             faDocumentIdLockDao.takeNoteOfDocumentIdInNewTx(documentId);\n@@ -633,6 +654,14 @@ private void takeNoteOfDocumentIdAllowingDuplicates(String documentId) {\n         }\n     }\n \n+    private void takeNoteOfMovementDocumentIdAllowingDuplicates(String documentId) {\n+        try {\n+            movementDocumentIdLockDao.takeNoteOfDocumentIdInNewTx(documentId);\n+        } catch( EntityExistsException eee ) {\n+            // ignore it\n+        }\n+    }\n+\n     public List<String> lockDocumentIds(Set<FADocumentID> incomingIDs) {\n         return incomingIDs.stream()\n                 .map(FADocumentID::getUuid)\n@@ -641,6 +670,15 @@ private void takeNoteOfDocumentIdAllowingDuplicates(String documentId) {\n                 .collect(Collectors.toList());\n     }\n \n+    @Override\n+    public List<String> lockMovementDocumentIds(Set<MovementDocumentId> incomingIDs) {\n+        return incomingIDs.stream()\n+                .map(MovementDocumentId::getUuid)\n+                .sorted()\n+                .peek(movementDocumentIdLockDao::lock)\n+                .collect(Collectors.toList());\n+    }\n+\n     @Override\n     public void createFaDocumentIdEntity(Set<FADocumentID> incomingIDsList) throws ServiceException {\n         if(CollectionUtils.isNotEmpty(incomingIDsList)){\n@@ -650,6 +688,13 @@ public void createFaDocumentIdEntity(Set<FADocumentID> incomingIDsList) throws S\n         }\n     }\n \n+    @Override\n+    public void createMovementDocumentIdEntity(Set<MovementDocumentId> incomingID) throws ServiceException {\n+        for(MovementDocumentId movementDocumentId: incomingID) {\n+            movementDocumentIdDao.createEntity(movementDocumentId);\n+        }\n+    }\n+\n     @Override\n     public void saveFaIdsPerTripList(List<String> tripList) {\n         if(CollectionUtils.isNotEmpty(tripList)){"
  },
  {
    "sha": "fa897ab00e60683740b074178321afa26ace3c1a",
    "filename": "domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/entity/MovementDocumentId.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/entity/MovementDocumentId.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/entity/MovementDocumentId.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/entity/MovementDocumentId.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -0,0 +1,60 @@\n+/*\n+ Developed by the European Commission - Directorate General for Maritime Affairs and Fisheries @ European Union, 2015-2016.\n+\n+ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The IFDM Suite is free software: you can redistribute it\n+ and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of\n+ the License, or any later version. The IFDM Suite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n+ details. You should have received a copy of the GNU General Public License along with the IFDM Suite. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package eu.europa.ec.fisheries.uvms.rules.entity;\n+\n+import javax.persistence.Embedded;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.NamedQueries;\n+import javax.persistence.NamedQuery;\n+import javax.persistence.PrePersist;\n+import javax.persistence.Table;\n+import java.io.Serializable;\n+\n+import eu.europa.ec.fisheries.uvms.commons.date.DateUtils;\n+import eu.europa.ec.fisheries.uvms.commons.domain.Audit;\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+import lombok.NoArgsConstructor;\n+import lombok.NonNull;\n+import lombok.RequiredArgsConstructor;\n+\n+@Table(name = \"movement_doc_id\")\n+@Data\n+@Entity\n+@EqualsAndHashCode(exclude = {\"id\", \"audit\"})\n+@NamedQueries({\n+        @NamedQuery(name = MovementDocumentId.LOAD_BY_UUID, query = \"FROM MovementDocumentId f WHERE f.uuid in (:uuids)\")\n+})\n+@RequiredArgsConstructor\n+@NoArgsConstructor\n+public class MovementDocumentId implements Serializable {\n+\n+    public static final String LOAD_BY_UUID = \"MovementDocumentId.loadByUUID\";\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    private Long id;\n+\n+    @NonNull\n+    private String uuid;\n+\n+    @Embedded\n+    private Audit audit = new Audit();\n+\n+    @PrePersist\n+    private void prePersist() {\n+        audit.setCreatedOn(DateUtils.nowUTC().toDate());\n+    }\n+\n+}"
  },
  {
    "sha": "924b6c409d704a4c969d7e41dd488d060f904336",
    "filename": "domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/entity/MovementDocumentIdLock.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/entity/MovementDocumentIdLock.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/entity/MovementDocumentIdLock.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/domain/src/main/java/eu/europa/ec/fisheries/uvms/rules/entity/MovementDocumentIdLock.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -0,0 +1,33 @@\n+package eu.europa.ec.fisheries.uvms.rules.entity;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.NamedQueries;\n+import javax.persistence.NamedQuery;\n+import javax.persistence.Table;\n+\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+import lombok.NoArgsConstructor;\n+import lombok.NonNull;\n+import lombok.RequiredArgsConstructor;\n+\n+@Entity\n+@Table(name = \"movement_doc_id_lock\")\n+@NamedQueries({\n+\t\t@NamedQuery(name = MovementDocumentIdLock.LOAD_BY_UUID, query = \"FROM MovementDocumentIdLock f WHERE f.uuid in (:uuids)\")\n+})\n+@Data\n+@EqualsAndHashCode\n+@RequiredArgsConstructor\n+@NoArgsConstructor\n+public class MovementDocumentIdLock {\n+\n+\tpublic static final String LOAD_BY_UUID = \"MovementDocumentIdLock.loadByUuid\";\n+\n+\t@Id\n+\t@NonNull\n+\t@Column(name = \"uuid\")\n+\tprivate String uuid;\n+}"
  },
  {
    "sha": "2a4adb326a8af081909f974dd97f169c13e4295d",
    "filename": "service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/bean/movement/RulesMovementProcessorBean.java",
    "status": "modified",
    "additions": 23,
    "deletions": 4,
    "changes": 27,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/bean/movement/RulesMovementProcessorBean.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/bean/movement/RulesMovementProcessorBean.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/bean/movement/RulesMovementProcessorBean.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -16,6 +16,7 @@\n import static eu.europa.ec.fisheries.uvms.movement.model.exception.ErrorCode.MOVEMENT_DUPLICATE_ERROR;\n import static eu.europa.ec.fisheries.uvms.rules.service.config.BusinessObjectType.RECEIVING_MOVEMENT_MSG;\n import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.DATA_FLOW;\n+import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.MOVEMENT_DOC_IDS;\n import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.SENDER_RECEIVER;\n import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.XML;\n \n@@ -74,6 +75,7 @@\n import eu.europa.ec.fisheries.uvms.commons.message.api.MessageException;\n import eu.europa.ec.fisheries.uvms.commons.message.impl.JAXBUtils;\n import eu.europa.ec.fisheries.uvms.commons.notifications.NotificationMessage;\n+import eu.europa.ec.fisheries.uvms.commons.service.exception.ServiceException;\n import eu.europa.ec.fisheries.uvms.config.model.mapper.ModuleRequestMapper;\n import eu.europa.ec.fisheries.uvms.exchange.model.exception.ExchangeModelMapperException;\n import eu.europa.ec.fisheries.uvms.exchange.model.exception.ExchangeModelMarshallException;\n@@ -85,6 +87,10 @@\n import eu.europa.ec.fisheries.uvms.movement.model.exception.MovementModelException;\n import eu.europa.ec.fisheries.uvms.movement.model.mapper.MovementModuleRequestMapper;\n import eu.europa.ec.fisheries.uvms.movement.model.mapper.MovementModuleResponseMapper;\n+import eu.europa.ec.fisheries.uvms.rules.dao.RulesDao;\n+import eu.europa.ec.fisheries.uvms.rules.entity.FADocumentID;\n+import eu.europa.ec.fisheries.uvms.rules.entity.FAUUIDType;\n+import eu.europa.ec.fisheries.uvms.rules.entity.MovementDocumentId;\n import eu.europa.ec.fisheries.uvms.rules.message.consumer.RulesResponseConsumer;\n import eu.europa.ec.fisheries.uvms.rules.message.producer.bean.*;\n import eu.europa.ec.fisheries.uvms.rules.model.constant.AuditObjectTypeEnum;\n@@ -127,8 +133,11 @@\n import lombok.extern.slf4j.Slf4j;\n import org.apache.commons.collections.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n+import un.unece.uncefact.data.standard.fluxfareportmessage._3.FLUXFAReportMessage;\n import un.unece.uncefact.data.standard.fluxvesselpositionmessage._4.FLUXVesselPositionMessage;\n import un.unece.uncefact.data.standard.mdr.communication.ObjectRepresentation;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FAReportDocument;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXReportDocument;\n import un.unece.uncefact.data.standard.unqualifieddatatype._18.IDType;\n \n import javax.annotation.PostConstruct;\n@@ -218,6 +227,9 @@\n     @AlarmReportCountEvent\n     private Event<NotificationMessage> alarmReportCountEvent;\n \n+    @Inject\n+    private RulesDao rulesDaoBean;\n+\n     private Map<String, MovementTypeType> mapToMovementType;\n \n     private RulesFLUXMessageHelper fluxMessageHelper;\n@@ -281,10 +293,16 @@ public void setMovementReportReceived(SetFLUXMovementReportRequest request, Stri\n                 return;\n             }\n \n+            Set<MovementDocumentId> idsFromIncomingMessage = fluxMessageHelper.mapToMovementDocumentID(fluxVesselPositionMessage);\n+            rulesDaoBean.takeNoteOfMovementDocumentIds(idsFromIncomingMessage);\n+            rulesDaoBean.lockMovementDocumentIds(idsFromIncomingMessage);\n+            List<MovementDocumentId> storedIds = rulesDaoBean.loadMovementDocumentIDByIds(idsFromIncomingMessage);\n+\n             Map<ExtraValueType, Object> extraValues = new EnumMap<>(ExtraValueType.class);\n             extraValues.put(SENDER_RECEIVER, request.getSenderOrReceiver());\n             extraValues.put(XML, request.getRequest());\n             extraValues.put(DATA_FLOW, request.getFluxDataFlow());\n+            extraValues.put(MOVEMENT_DOC_IDS, storedIds);\n             Collection<AbstractFact> factsResults = rulesEngine.evaluate(RECEIVING_MOVEMENT_MSG,fluxVesselPositionMessage,extraValues,null);\n \n             final String reportId = fluxVesselPositionMessage.getFLUXReportDocument().getIDS().stream()\n@@ -300,7 +318,8 @@ public void setMovementReportReceived(SetFLUXMovementReportRequest request, Stri\n             }\n             // Decomment this one and comment the other when validation is working! Still work needs to be done after this!\n             // processReceivedMovementsAsBatch(movementReportsList, pluginType, userName, request.getLogGuid());\n-            enrichAndSenMovementsAsBatch(validationResult, movementReportsList, userName, request.getLogGuid(), request, request.getLogGuid());\n+            idsFromIncomingMessage.removeAll(storedIds);\n+            enrichAndSenMovementsAsBatch(validationResult, movementReportsList, userName, request.getLogGuid(), request, request.getLogGuid(), idsFromIncomingMessage);\n             // Send some response to Movement, if it originated from there (manual movement)\n             if (MovementSourceType.MANUAL.equals(movementReportsList.get(0).getSource())) {// A person has created a position\n                 ProcessedMovementAck response = MovementModuleResponseMapper.mapProcessedMovementAck(eu.europa.ec.fisheries.schema.movement.common.v1.AcknowledgeTypeType.OK,\n@@ -312,7 +331,6 @@ public void setMovementReportReceived(SetFLUXMovementReportRequest request, Stri\n         }\n     }\n \n-\n     /**\n      * This method is just up until the new movement flow is ready from Swe team!\n      * It is actually avoiding validation process all together since it doesn't work as of now!\n@@ -322,14 +340,15 @@ public void setMovementReportReceived(SetFLUXMovementReportRequest request, Stri\n      * @param exchangeLogGuid\n      * @throws RulesServiceException\n      */\n-    private void enrichAndSenMovementsAsBatch(ValidationResult validationResult, List<RawMovementType> rawMovements, String username, String exchangeLogGuid, SetFLUXMovementReportRequest request, String reportId) throws RulesServiceException {\n+    private void enrichAndSenMovementsAsBatch(ValidationResult validationResult, List<RawMovementType> rawMovements, String username, String exchangeLogGuid, SetFLUXMovementReportRequest request, String reportId, Set<MovementDocumentId> idsFromIncomingMessage) throws RulesServiceException {\n         try {\n             // Enrich with MobilTerminal and Assets data. Get Mobile Terminal if it exists.\n             EnrichedMovementWrapper enrichedWrapper = enrichBatchWithMobileTerminalAndAssets(rawMovements);\n             CreateMovementBatchResponse movementBatchResponse = sendBatchToMovement(enrichedWrapper.getAssetList(), rawMovements, username);\n             ExchangeLogStatusTypeType status;\n             if (movementBatchResponse != null && SimpleResponse.OK.equals(movementBatchResponse.getPermitted())) {\n                 if (SimpleResponse.OK.equals(movementBatchResponse.getResponse())) {\n+                    rulesDaoBean.createMovementDocumentIdEntity(idsFromIncomingMessage);\n                     status = ExchangeLogStatusTypeType.fromValue(fluxMessageHelper.calculateMessageValidationStatus(validationResult).value());\n                 } else {\n                     status = ExchangeLogStatusTypeType.FAILED;\n@@ -340,7 +359,7 @@ private void enrichAndSenMovementsAsBatch(ValidationResult validationResult, Lis\n             }\n             sendBatchBackToExchange(exchangeLogGuid, rawMovements, MovementRefTypeType.MOVEMENT, username);\n             updateRequestMessageStatusInExchange(exchangeLogGuid, status);\n-        } catch (MessageException | MobileTerminalModelMapperException | MobileTerminalUnmarshallException | JMSException | AssetModelMapperException | RulesModelException e) {\n+        } catch (MessageException | MobileTerminalModelMapperException | MobileTerminalUnmarshallException | JMSException | AssetModelMapperException | RulesModelException | ServiceException e) {\n             throw new RulesServiceException(e.getMessage(), e);\n         }\n     }"
  },
  {
    "sha": "45d45344264da8707843aaac4f9a22ec0c177405",
    "filename": "service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/business/fact/MovementReportDocumentFact.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/business/fact/MovementReportDocumentFact.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/business/fact/MovementReportDocumentFact.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/business/fact/MovementReportDocumentFact.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -40,8 +40,12 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n     private VesselCountryType registrationVesselCountry;\n     private IDType registrationVesselCountryIdType;\n     private DateTime dateTime;\n+    private List<String> existingIds;\n \n-\n+    public boolean hasDuplicateId(List<IDType> ids, List<String> existingIds) {\n+        return ids.stream().map(IDType::getValue).anyMatch(existingIds::contains);\n+    }\n+    \n     public boolean containsTypesOfIdXTimes(List<IDType> ids,String schemaType,int count){\n \n         int counter = 0;"
  },
  {
    "sha": "ccbf8700b3590d555f86f22efb32ad2fdb5dd4cd",
    "filename": "service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/business/generator/MovementFactGenerator.java",
    "status": "modified",
    "additions": 19,
    "deletions": 9,
    "changes": 28,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/business/generator/MovementFactGenerator.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/business/generator/MovementFactGenerator.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/business/generator/MovementFactGenerator.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -11,21 +11,22 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n \n package eu.europa.ec.fisheries.uvms.rules.service.business.generator;\n \n+import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.DATA_FLOW;\n+import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.MOVEMENT_DOC_IDS;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import eu.europa.ec.fisheries.uvms.rules.entity.MovementDocumentId;\n import eu.europa.ec.fisheries.uvms.rules.service.business.AbstractFact;\n import eu.europa.ec.fisheries.uvms.rules.service.business.MessageType;\n import eu.europa.ec.fisheries.uvms.rules.service.exception.RulesValidationException;\n import eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.MovementReportDocumentFactMapper;\n import eu.europa.ec.fisheries.uvms.rules.service.mapper.xpath.util.XPathStringWrapper;\n import un.unece.uncefact.data.standard.fluxvesselpositionmessage._4.FLUXVesselPositionMessage;\n import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._18.FLUXReportDocumentType;\n-import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._18.VesselTransportMeansType;\n-import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.VesselTransportMeans;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.DATA_FLOW;\n-import static eu.europa.ec.fisheries.uvms.rules.service.constants.XPathConstants.MOVEMENT_REPORT_DOCUMENT;\n \n public class MovementFactGenerator extends AbstractGenerator {\n \n@@ -53,7 +54,7 @@ public MovementFactGenerator() {\n     public List<AbstractFact> generateAllFacts() {\n         List<AbstractFact> facts = new ArrayList<>();\n         FLUXReportDocumentType fluxReportDocument = vesselPositionMessage.getFLUXReportDocument();\n-\n+        movementReportDocumentFactMapper.setExistingIds(extractExistingIds());\n         if (fluxReportDocument != null) {\n             facts.add(movementReportDocumentFactMapper.generateFactForMovementReportDocument(vesselPositionMessage));\n             facts.addAll(movementReportDocumentFactMapper.generateFactForMovementReportDocumentId(vesselPositionMessage));\n@@ -75,4 +76,13 @@ public void setBusinessObjectMessage(Object businessObject) throws RulesValidati\n         }\n         this.vesselPositionMessage = (FLUXVesselPositionMessage) businessObject;\n     }\n+\n+    private List<String> extractExistingIds() {\n+        @SuppressWarnings(\"unchecked\")\n+        List<MovementDocumentId> faDocumentIDS = Optional.ofNullable((List<MovementDocumentId>) extraValueMap.get(MOVEMENT_DOC_IDS)).orElse(new ArrayList<>());\n+        return (faDocumentIDS)\n+                .stream()\n+                .map(MovementDocumentId::getUuid)\n+                .collect(Collectors.toList());\n+    }\n }"
  },
  {
    "sha": "e127986d774c682cde8704ffe636fb10325622ce",
    "filename": "service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/config/ExtraValueType.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/config/ExtraValueType.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/config/ExtraValueType.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/config/ExtraValueType.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -22,5 +22,6 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n     CREATION_DATE_OF_MESSAGE,\n     RESPONSE_IDS,\n     XML,\n-    DATA_FLOW\n+    DATA_FLOW,\n+    MOVEMENT_DOC_IDS\n }"
  },
  {
    "sha": "6c57e125ffe0ff778fd395d56ab3dbc64a822355",
    "filename": "service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/mapper/RulesFLUXMessageHelper.java",
    "status": "modified",
    "additions": 56,
    "deletions": 16,
    "changes": 72,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/mapper/RulesFLUXMessageHelper.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/mapper/RulesFLUXMessageHelper.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/mapper/RulesFLUXMessageHelper.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -10,22 +10,38 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n \n package eu.europa.ec.fisheries.uvms.rules.service.mapper;\n \n-import javax.xml.XMLConstants;\n+import static eu.europa.ec.fisheries.schema.rules.rule.v1.RawMsgType.FA_QUERY;\n+import static eu.europa.ec.fisheries.schema.rules.rule.v1.RawMsgType.FA_REPORT;\n+import static eu.europa.ec.fisheries.schema.rules.rule.v1.RawMsgType.FA_RESPONSE;\n+import static eu.europa.ec.fisheries.uvms.rules.entity.FAUUIDType.FA_QUERY_ID;\n+import static eu.europa.ec.fisheries.uvms.rules.entity.FAUUIDType.FA_REPORT_REF_ID;\n+import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.RESPONSE_IDS;\n+import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.SENDER_RECEIVER;\n+import static eu.europa.ec.fisheries.uvms.rules.service.mapper.xpath.util.SchemaInitializer.SCHEMA_MAP;\n+import static java.util.Collections.singletonList;\n+\n import javax.xml.bind.UnmarshalException;\n import javax.xml.datatype.DatatypeConfigurationException;\n import javax.xml.datatype.DatatypeFactory;\n import javax.xml.datatype.XMLGregorianCalendar;\n-import javax.xml.validation.Schema;\n-import javax.xml.validation.SchemaFactory;\n-import java.net.URL;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.EnumMap;\n+import java.util.GregorianCalendar;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.UUID;\n+\n import eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType;\n import eu.europa.ec.fisheries.schema.rules.module.v1.RulesModuleMethod;\n import eu.europa.ec.fisheries.schema.rules.rule.v1.RawMsgType;\n import eu.europa.ec.fisheries.schema.rules.rule.v1.ValidationMessageType;\n import eu.europa.ec.fisheries.uvms.commons.message.impl.JAXBUtils;\n import eu.europa.ec.fisheries.uvms.rules.entity.FADocumentID;\n import eu.europa.ec.fisheries.uvms.rules.entity.FAUUIDType;\n+import eu.europa.ec.fisheries.uvms.rules.entity.MovementDocumentId;\n import eu.europa.ec.fisheries.uvms.rules.service.bean.RulesConfigurationCache;\n import eu.europa.ec.fisheries.uvms.rules.service.business.ValidationResult;\n import eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType;\n@@ -34,24 +50,24 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n import org.apache.commons.lang3.StringUtils;\n import org.joda.time.DateTime;\n import org.joda.time.DateTimeZone;\n-import org.xml.sax.SAXException;\n import un.unece.uncefact.data.standard.fluxfaquerymessage._3.FLUXFAQueryMessage;\n import un.unece.uncefact.data.standard.fluxfareportmessage._3.FLUXFAReportMessage;\n import un.unece.uncefact.data.standard.fluxresponsemessage._6.FLUXResponseMessage;\n-import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.*;\n+import un.unece.uncefact.data.standard.fluxvesselpositionmessage._4.FLUXVesselPositionMessage;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._18.FLUXReportDocumentType;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FAQuery;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FAReportDocument;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXParty;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXReportDocument;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXResponseDocument;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FishingActivity;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FishingTrip;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.ValidationQualityAnalysis;\n+import un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.ValidationResultDocument;\n import un.unece.uncefact.data.standard.unqualifieddatatype._20.CodeType;\n import un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType;\n import un.unece.uncefact.data.standard.unqualifieddatatype._20.IDType;\n import un.unece.uncefact.data.standard.unqualifieddatatype._20.TextType;\n-import static eu.europa.ec.fisheries.schema.rules.rule.v1.RawMsgType.FA_QUERY;\n-import static eu.europa.ec.fisheries.schema.rules.rule.v1.RawMsgType.FA_REPORT;\n-import static eu.europa.ec.fisheries.schema.rules.rule.v1.RawMsgType.FA_RESPONSE;\n-import static eu.europa.ec.fisheries.uvms.rules.entity.FAUUIDType.FA_QUERY_ID;\n-import static eu.europa.ec.fisheries.uvms.rules.entity.FAUUIDType.FA_REPORT_REF_ID;\n-import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.RESPONSE_IDS;\n-import static eu.europa.ec.fisheries.uvms.rules.service.config.ExtraValueType.SENDER_RECEIVER;\n-import static eu.europa.ec.fisheries.uvms.rules.service.mapper.xpath.util.SchemaInitializer.SCHEMA_MAP;\n-import static java.util.Collections.singletonList;\n \n @Slf4j\n public class RulesFLUXMessageHelper {\n@@ -128,6 +144,17 @@ public void fillFluxTLOnValue(FLUXResponseMessage fluxResponseMessage, String on\n         return ids;\n     }\n \n+    public Set<MovementDocumentId> mapToMovementDocumentID(FLUXVesselPositionMessage fluxVesselPositionMessage) {\n+        Set<MovementDocumentId> ids = new HashSet<>();\n+        if (fluxVesselPositionMessage != null){\n+            FLUXReportDocumentType fluxReportDocument = fluxVesselPositionMessage.getFLUXReportDocument();\n+            if (fluxReportDocument != null){\n+                mapFluxReportDocumentIDS(ids, fluxReportDocument);\n+            }\n+        }\n+        return ids;\n+    }\n+\n     private void mapFaReportDocuments(Set<FADocumentID> ids, List<FAReportDocument> faReportDocuments) {\n         if (CollectionUtils.isNotEmpty(faReportDocuments)){\n             for (FAReportDocument faReportDocument : faReportDocuments) {\n@@ -155,6 +182,19 @@ private void mapFluxReportDocumentIDS(Set<FADocumentID> ids, FLUXReportDocument\n             }\n         }\n     }\n+    \n+    private void mapFluxReportDocumentIDS(Set<MovementDocumentId> ids, FLUXReportDocumentType fluxReportDocument) {\n+        if (fluxReportDocument != null){\n+            List<un.unece.uncefact.data.standard.unqualifieddatatype._18.IDType> fluxReportDocumentIDS = fluxReportDocument.getIDS();\n+            if (CollectionUtils.isNotEmpty(fluxReportDocumentIDS)){\n+                un.unece.uncefact.data.standard.unqualifieddatatype._18.IDType idType = fluxReportDocumentIDS.get(0);\n+                if (idType != null){\n+                    ids.add(new MovementDocumentId(idType.getValue()));\n+                }\n+               \n+            }\n+        }\n+    }\n \n     public List<String> collectFaIdsAndTripIds(FLUXFAReportMessage fluxFaRepMessage) {\n         List<String> idsReqList = new ArrayList<>();"
  },
  {
    "sha": "722bf5114894dfece91f0cec23ebc4e52d31a2ed",
    "filename": "service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/mapper/fact/MovementReportDocumentFactMapper.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/blob/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/mapper/fact/MovementReportDocumentFactMapper.java",
    "raw_url": "https://github.com/UnionVMS/UVMS-RulesModule-APP/raw/37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/mapper/fact/MovementReportDocumentFactMapper.java",
    "contents_url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP/contents/service/src/main/java/eu/europa/ec/fisheries/uvms/rules/service/mapper/fact/MovementReportDocumentFactMapper.java?ref=37e30e1bde7b1cb1ae8d65d3d46f203d07c607ae",
    "patch": "@@ -41,8 +41,10 @@ This file is part of the Integrated Fisheries Data Management (IFDM) Suite. The\n @Slf4j\n public class MovementReportDocumentFactMapper {\n \n-    private XPathStringWrapper xPathUtil;\n     public static final String ID = \"id\";\n+    \n+    private XPathStringWrapper xPathUtil;\n+    private List<String> existingIds;\n \n \n     public MovementReportDocumentFactMapper() {\n@@ -67,6 +69,7 @@ public MovementReportDocumentFact generateFactForMovementReportDocument(FLUXVess\n         fact.setCreationDateTime(getDate(creationDateTime));\n         xPathUtil.appendWithoutWrapping(partialXpath).append(FLUX_REPORT_DOCUMENT, XPathConstants.CREATION_DATE_TIME).storeInRepo(fact, CREATION_DATE_TIME);\n         fact.setIds(vesselPositionMessage.getFLUXReportDocument().getIDS());\n+        fact.setExistingIds(existingIds);\n         xPathUtil.appendWithoutWrapping(partialXpath).append(FLUX_REPORT_DOCUMENT, XPathConstants.ID).storeInRepo(fact, \"id\");\n         CodeType purposeCode = vesselPositionMessage.getFLUXReportDocument().getPurposeCode();\n         fact.setPurposeCode(purposeCode);\n@@ -200,6 +203,9 @@ private static Date getDate(DateTimeType dateTimeType) {\n         return date;\n     }\n \n+    public void setExistingIds(List<String> existingIds) {\n+        this.existingIds = existingIds;\n+    }\n \n \n }"
  }
]
