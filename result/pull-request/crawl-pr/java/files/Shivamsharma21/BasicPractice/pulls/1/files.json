[
  {
    "sha": "ef7fd8af61bbb5267cdea0ad58d0c5b51c1a56ce",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/.gitignore",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/.gitignore",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/.gitignore?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -13,3 +13,6 @@\n .externalNativeBuild\n .cxx\n local.properties\n+XVC\n+alexa.rc\n+base.rc\n\\ No newline at end of file"
  },
  {
    "sha": "94a25f7f4cb416c083d265558da75d457237d671",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/.idea/vcs.xml",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/.idea/vcs.xml?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "430e3c91e2c8135cd80b00c15438fb5eb92851c9",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/BubbleSortExample.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/BubbleSortExample.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/BubbleSortExample.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/BubbleSortExample.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,27 @@\n+package com.example.java_programs;\n+\n+\n+        // Bubble Sort Algorithm\n+\n+public class BubbleSortExample {\n+\n+    public static void main(String[] args) {\n+\n+        int temp = 0;\n+\n+\n+        int arr[] = {22, 56, 21, 2, 56, 87};\n+        for (int j = 0; j < arr.length-1; j++) {\n+            for (int i = 0; i < arr.length-1; i++) {\n+                if (arr[i] > arr[i + 1]) {\n+                    temp = arr[i];\n+                    arr[i] = arr[i + 1];\n+                    arr[i + 1] = temp;\n+                                         }\n+            }\n+            }\n+        for(int k =0; k<arr.length; k++){\n+               System.out.println(arr[k]);\n+            }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "913b0cd4921430f8a77412d54debfd1d5c51553c",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/ComparableInterface.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/ComparableInterface.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/ComparableInterface.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/ComparableInterface.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,64 @@\n+package com.example.java_programs;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+\n+public class ComparableInterface {\n+\n+    public static void main(String []args){\n+\n+            ArrayList<Student> arrayList = new ArrayList<>();\n+\n+            arrayList.add(new Student(\"Shivam\",23,1009));\n+            arrayList.add(new Student(\"James\",34,5021));\n+            arrayList.add(new Student(\"Will\",20,7779));\n+            arrayList.add(new Student(\"Max\",31,1239));\n+            arrayList.add(new Student(\"Blake\",28,1009));\n+            arrayList.add(new Student(\"Smith\",26,9876));\n+            arrayList.add(new Student(\"Wiz\",19,8241));\n+            arrayList.add(new Student(\"Drake\",17,9356));\n+\n+\n+            Collections.sort(arrayList);\n+\n+            for (Student student: arrayList){\n+                System.out.println(student.rollno+\" \"+student.name+\" \"+student.age);\n+            }\n+\n+        }\n+\n+    }\n+\n+class Student implements Comparable<Student>{\n+\n+    int rollno =0;\n+\n+    int age =0;\n+\n+    String name =\"\";\n+\n+\n+    Student(String name,int age,int rollno){\n+\n+        this.name = name;\n+\n+        this.age = age;\n+\n+        this.rollno = rollno;\n+    }\n+\n+    public int compareTo( Student s) {\n+\n+        if (age == s.age){\n+            return 0;\n+        }\n+        if(age>s.age){\n+            return 1;\n+        }\n+        else{\n+            return -1;\n+        }\n+    }\n+\n+}\n+"
  },
  {
    "sha": "8d0501981459e673cd07bf815dc37661a1df1f9c",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/FindLeapYear.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/FindLeapYear.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/FindLeapYear.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/FindLeapYear.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,29 @@\n+package com.example.java_programs;\n+\n+public class FindLeapYear {\n+\n+    public static void main(String []args){\n+\n+        int year = 2016;\n+\n+        if (year % 4 ==0 ){\n+\n+            if (year % 100 ==0){\n+\n+                if (year % 400 ==0){\n+\n+                    System.out.println(\"Its a leap year\");\n+\n+                }else{\n+                    System.out.println(\"Its Not a leap Year\");\n+                }\n+            }else {\n+                System.out.println(\"Its a leap year\");\n+            }\n+        }else {\n+            System.out.println(\"Its Is not a leap year\");\n+        }\n+    }\n+\n+\n+}"
  },
  {
    "sha": "245feab8840ea6fb9339bd1f16a5ffaa49f7a243",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/HashMap.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/HashMap.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/HashMap.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/HashMap.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,39 @@\n+package com.example.java_programs;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class HashMap {\n+\n+    public static void main(String []args){\n+\n+        Map<String,Integer> users = new java.util.HashMap<String,Integer>();\n+\n+\n+        users.put(\"Shivam\",939029);\n+        users.put(\"Stefen\",657777);\n+        users.put(\"Carolin\",213333);\n+        users.put(\"Jim\",989877);\n+        users.put(\"Fread\",433454);\n+\n+        System.out.println(users.get(\"Shivam\"));\n+\n+        ////   for getting all the keys of map\n+\n+        Set<String> keys = users.keySet();\n+\n+        for (String s : keys){\n+            System.out.println(s +\" : \"+users.get(s));\n+        }\n+\n+   //   Another way to finding the Key and value  in the hashmap //\n+\n+        Set<Map.Entry<String,Integer>>entryMap = users.entrySet();\n+            for (Map.Entry<String,Integer>e: entryMap){\n+                System.out.println(e.getKey() + \":\"+ e.getValue());\n+\n+            }\n+    }\n+\n+\n+}"
  },
  {
    "sha": "42bdece3bf211a3c50b98285fe23127e275b15bd",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/InitilizationBlock.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/InitilizationBlock.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/InitilizationBlock.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/InitilizationBlock.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,30 @@\n+package com.example.java_programs;\n+\n+public class InitilizationBlock {\n+\n+    public static void main(String args[]){\n+        B3 b1=new B3();\n+        B3 b2=new B3(10);\n+    }\n+\n+}\n+class A{\n+    A(){\n+        System.out.println(\"parent class constructor invoked\");\n+    }\n+}\n+\n+class B3 extends A{\n+    B3(){\n+        super();\n+        System.out.println(\"child class constructor invoked\");\n+    }\n+\n+    B3(int a){\n+        super();\n+        System.out.println(\"child class constructor invoked \"+a);\n+    }\n+\n+    {System.out.println(\"instance initializer block is invoked\");}\n+\n+}"
  },
  {
    "sha": "08494cf19f3ab05bfe6b370fd2a352bdc2b20cb5",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/InsertionSort.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/InsertionSort.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/InsertionSort.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/InsertionSort.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,36 @@\n+package com.example.java_programs;\n+\n+\n+public class InsertionSort {\n+\n+    public static void main(String[] args) {\n+\n+        int arr[] = {46, 21, 13, 41, 47, 87, 19, 55};\n+        int i;\n+        int temp = 0;\n+        int min = 0;\n+\n+        for (i = 0; i < arr.length; i++) {\n+\n+            min = i;\n+\n+            for (int j = i + 1; j < arr.length; j++) {\n+\n+                if (arr[j] < arr[min]) {\n+                    min = j;\n+                }\n+\n+\n+            }\n+            temp = arr[i];\n+            arr[i] = arr[min];\n+            arr[min] = temp;\n+\n+        }\n+        for (int z = 0; z < arr.length; z++) {\n+            System.out.println(arr[z]);\n+        }\n+    }\n+}\n+\n+"
  },
  {
    "sha": "6d95ffc258ad0272563055f5452bd5c5856092fd",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/LlinkedList.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/LlinkedList.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/LlinkedList.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/LlinkedList.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,43 @@\n+package com.example.java_programs;\n+\n+import java.util.LinkedList;\n+\n+public class LlinkedList {\n+\n+    public static void main(String []args){\n+        LinkedList<String> linkedList = new LinkedList<String>();\n+        linkedList.add(\"Shivam\");\n+        linkedList.add(\"Won\");\n+        linkedList.add(\"Pixi\");\n+        linkedList.add(\"John\");\n+        linkedList.add(\"Drake\");\n+\n+        System.out.println(linkedList);\n+\n+        LinkedList<String> linkedList1 = (LinkedList) linkedList.clone();\n+\n+        System.out.println(linkedList1);\n+\n+        String item = linkedList.peek();  // peek function return first element of the list\n+\n+        System.out.println(\"First element of list is ->>\"+ item);\n+\n+         int size   = linkedList.size();\n+\n+         System.out.println(\"Return the size of an list\"+size); // return the size of this list  //\n+\n+        String s = linkedList.get(1); // used to get the  specific element from the list  //\n+\n+        System.out.println(s);\n+\n+        linkedList.remove(1);  /// used to removing  item by index //\n+\n+        System.out.println(linkedList);\n+\n+        linkedList.clear(); // used to clear the list //\n+\n+        System.out.println(linkedList);\n+\n+\n+    }\n+}"
  },
  {
    "sha": "1c42ffcdcf87113a8b2c4a460dcc9867d7d8dbaf",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/Matrix.java",
    "status": "added",
    "additions": 102,
    "deletions": 0,
    "changes": 102,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/Matrix.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/Matrix.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/Matrix.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,102 @@\n+package com.example.java_programs;\n+\n+        /// program of addition of two matrix ///\n+\n+public class Matrix {\n+    public static void main(String[] args) {\n+\n+        //////////////              //////////////////\n+\n+        MatrixChecker matrixChecker = new MatrixChecker();\n+\n+        matrixChecker.Checker();\n+\n+\n+       ///////////                  /////////////////\n+\n+        int arr[][] = {{1, 2, 3}, {4, 5, 6}, {1, 1, 1}};\n+\n+        int arr2[][] = {{1, 1, 1}, {1, 1, 1}, {1, 1, 1}};\n+\n+        int arr3[][] = new int[3][3];\n+\n+        for (int i = 0; i < arr.length; i++) {\n+\n+            for (int j = 0; j < arr2.length; j++) {\n+\n+                arr3[i][j] = arr[i][j] + arr2[i][j];\n+\n+            }\n+\n+        }\n+\n+        /// loop for printing resultant Matrix\n+        for (int k = 0; k < arr3.length; k++) {\n+\n+            System.out.println(\"\");\n+\n+            for (int t = 0; t < arr3.length; t++) {\n+\n+                System.out.print(arr3[k][t]);\n+            }\n+        }\n+    }\n+}\n+\n+/// this class is Used to identify that two matrix are equal or not\n+\n+class MatrixChecker{\n+\n+    public void Checker(){\n+\n+        boolean status = true;\n+\n+        int rowofJ,rowofZ,colofJ,colofZ;\n+\n+        int J[][] = {\n+                {4, 4, 4},\n+                {4, 4, 4},\n+                {4, 4, 4}\n+        };\n+\n+        int Z[][] = {\n+                {4, 4, 4},\n+                {4, 4, 4},\n+                {4, 4, 4}\n+        };\n+\n+\n+            rowofJ  =  J.length;     // this will give the number of rows in J\n+\n+            colofJ = J[0].length;   // this will give the number of columns in J\n+\n+\n+            rowofZ = Z.length;   //this will give the number of rows in Z\n+\n+            colofZ = Z[0].length;   // this will give the columns in Z\n+\n+        if (rowofJ != rowofJ && colofJ != colofZ){\n+                System.out.println(\"Matrix are Not Equal\");\n+        }\n+\n+\n+         for (int i =0; i<rowofJ; i++){\n+\n+             for (int k =0; k <rowofZ; k++){\n+\n+                 if (J[i][k] != Z[i][k]){\n+\n+                     status = false;\n+                     break;\n+\n+                 }\n+             }\n+         }\n+\n+        if (status){\n+            System.out.println(\"Matrix are Equal\");\n+        }\n+\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "e877a785775f3e18e2d521df5470662ca8234ea5",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/ObjectCloning.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/ObjectCloning.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/ObjectCloning.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/ObjectCloning.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,27 @@\n+package com.example.java_programs;\n+\n+\n+public class ObjectCloning implements Cloneable {\n+\n+    String name =\"\";\n+    int age =0;\n+\n+      ObjectCloning(String name,int age){\n+          this.name = name;\n+          this.age = age;\n+      }\n+\n+      public Object clone() throws CloneNotSupportedException {\n+          return super.clone();\n+      }\n+\n+    public static void main(String []args) throws CloneNotSupportedException {\n+       ObjectCloning objectCloning = new ObjectCloning(\"Shivam\",23);\n+       ObjectCloning objectCloning1 = (ObjectCloning) objectCloning.clone();\n+\n+      System.out.println(\"Name = \"+objectCloning1.name+\" \\n\"+ \"Age = \"+objectCloning1.age);\n+        System.out.println(\"\");\n+      }\n+\n+\n+}"
  },
  {
    "sha": "71d12e27ca0ccfa189ebe2b94986d70b0b43bff1",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/Stack.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/Stack.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/Stack.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/Stack.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,35 @@\n+package com.example.java_programs;\n+\n+\n+/// example of stack in java\n+\n+// stack is based on the principal of LIFO (Last in first Out)\n+\n+public class Stack {\n+\n+    public static void main(String []args){\n+\n+     java.util.Stack<Integer> stack = new java.util.Stack<>();\n+\n+        stack.push(22);\n+        stack.push(18);\n+        stack.push(220);\n+        stack.push(84);\n+        stack.push(12);\n+        stack.push(34);\n+\n+     boolean status = stack.empty();    // shows if the stack is empty or not  //\n+\n+     System.out.println(\"\"+status);\n+\n+        System.out.println(stack);\n+\n+        System.out.println(stack.pop()); // return the last inserted element in Stack  //\n+\n+        System.out.println(stack);\n+\n+\n+    }\n+\n+\n+}"
  },
  {
    "sha": "13e1e416a987b3d0dc554688b75e8b5dfe220655",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/SwitchExample.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/SwitchExample.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/SwitchExample.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/SwitchExample.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,64 @@\n+package com.example.java_programs;\n+\n+import java.util.Scanner;\n+\n+public class SwitchExample {\n+\n+    public static void main(String []args){\n+\n+        int operation = 0;\n+\n+        Scanner sc = new Scanner(System.in);\n+\n+        System.out.println(\"1 Addition\");\n+        System.out.println(\"2 Subtraction\");\n+        System.out.println(\"3 Multiplication\");\n+\n+        System.out.println(\"Enter the Operation You want to do \");\n+\n+        operation   = sc.nextInt();\n+\n+        switch (operation){\n+\n+            case 1 :\n+                System.out.println(\"Enter The number you want to Addition\");\n+                int a=0,b=0,c=0;\n+                a = sc.nextInt();\n+                b = sc.nextInt();\n+                c = a+b;\n+                System.out.println(\"Answer is ->>\"+c);\n+                break;\n+\n+            case 2 :\n+                    System.out.println(\"Enter The number you want to Subtraction\");\n+                    int q =0,w=0,e=0;\n+                    q =sc.nextInt();\n+                    w =sc.nextInt();\n+                    e = q-w;\n+                    System.out.println(\"Your Answer is ->>\"+ e);\n+                    break;\n+\n+            case 3 :\n+                System.out.println(\"Enter The number you want to Multiply\");\n+                int y =0,t=0,l=0;\n+                y =sc.nextInt();\n+                t =sc.nextInt();\n+                l =y*t;\n+                System.out.println(\"Answer is ->>\"+l);\n+                break;\n+\n+            case 4:\n+                System.out.println(\"Enter the numbers you want to Divide\");\n+                int h=0,k=0,n=0;\n+                h = sc.nextInt();\n+                k = sc.nextInt();\n+                n = h/k;\n+                System.out.println(\"Answer is ->>\"+n);\n+                break;\n+\n+            default:\n+                System.out.println(\"Enter a valid choice\");\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "be841e725746a369f001cf50a5a9f5acde60521c",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/TreeSetExample.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/TreeSetExample.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/TreeSetExample.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/TreeSetExample.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,25 @@\n+package com.example.java_programs;\n+\n+import java.util.TreeSet;\n+\n+public class TreeSetExample {\n+        public static void main(String args[]){\n+            TreeSet<String> set=new TreeSet<String>();\n+            set.add(\"A\");\n+            set.add(\"B\");\n+            set.add(\"C\");\n+            set.add(\"D\");\n+            set.add(\"E\");\n+            System.out.println(\"Initial Set: \"+set);\n+\n+            System.out.println(\"Reverse Set: \"+set.descendingSet());\n+\n+            System.out.println(\"Head Set: \"+set.headSet(\"C\", true));\n+\n+            System.out.println(\"SubSet: \"+set.subSet(\"A\", false, \"E\", true));\n+\n+            System.out.println(\"TailSet: \"+set.tailSet(\"C\", false));\n+        }\n+    }\n+    \n+"
  },
  {
    "sha": "ab2263c731d0daa1a859adf67bfdcebe4f3134b3",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/TypeConversion.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/TypeConversion.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/TypeConversion.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/TypeConversion.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,23 @@\n+package com.example.java_programs;\n+\n+public class TypeConversion {\n+    public static void main(String []args){\n+       int i = 230;\n+\n+       float f = 3476.99f;\n+\n+       double d = 3340928;\n+\n+            i =(int)f;\n+\n+           f = (float)d;\n+\n+           d = (double)i;\n+\n+////// comment\n+\n+       System.out.println(i);\n+        System.out.println(f);\n+         System.out.println(d);\n+    }\n+}"
  },
  {
    "sha": "96fb8223e7e3d96e7fc7a5a10295734172b991f7",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/UrlClassJava.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/UrlClassJava.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/UrlClassJava.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/UrlClassJava.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,36 @@\n+package com.example.java_programs;\n+\n+import java.net.URL;\n+\n+    ////   this class Is demonstrate the URL class of java And its function.\n+\n+\n+public class UrlClassJava {\n+\n+    public static void main(String [] args){\n+        try{\n+\n+            URL url = new URL(\"https://www.youtube.com/watch?v=l-YVzkQMLKg\");\n+\n+            System.out.println(\"Protocol: \"+url.getProtocol());\n+\n+            System.out.println(\"Host Name: \"+url.getHost());\n+\n+            System.out.println(\"Port Number: \"+url.getPort());\n+\n+            System.out.println(\"File Name: \"+url.getFile());\n+\n+            System.out.println(\"Query String: \"+url.getQuery());\n+\n+            System.out.println(\"Path: \"+url.getPath());\n+\n+            System.out.println(\"Default Port Number: \"+url.getDefaultPort());\n+\n+\n+\n+        }catch (Exception e){\n+\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "da0574edb175602df9ceed5351f872b7f0d18d2e",
    "filename": "Java_Programs/src/main/java/com/example/java_programs/WrapperClassExample.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/WrapperClassExample.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/Java_Programs/src/main/java/com/example/java_programs/WrapperClassExample.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/Java_Programs/src/main/java/com/example/java_programs/WrapperClassExample.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,51 @@\n+package com.example.java_programs;\n+\n+public class WrapperClassExample {\n+\n+    public static void main(String []args){\n+\n+        ///////     Primitive data type Declaration\n+\n+        int i =10;\n+\n+        char a ='a';\n+\n+        float f =364.3f;\n+\n+        double d =216498686;\n+\n+        ////  Wrapper class  converting Primitive data type to Object    ////\n+\n+        String s1 =\"Shivam\";\n+\n+        Integer  integer = new Integer(10);\n+\n+        Float   _float = new Float(200.3f);\n+\n+        Character character = new Character('A');\n+\n+        Double _double = new Double(82641986);\n+\n+\n+\n+        String s = Integer.toString(i);         //  Wrapper class Method converting Int value tp string\n+\n+        String L =\"1732.3f\";\n+\n+        Float parseFloat = Float.parseFloat(L);\n+\n+        System.out.println(s);\n+\n+        System.out.println(parseFloat);\n+\n+        String k =\"1726\";\n+\n+        Integer integer1 = Integer.parseInt(k);\n+\n+        System.out.println(integer1);\n+\n+        System.out.println(Integer.toHexString(10));\n+        System.out.println(Integer.toHexString(15));\n+    }\n+\n+}"
  },
  {
    "sha": "24212b01c076a88082e9379dc3ccce1063b7884c",
    "filename": "app/src/main/java/com/example/basicpractice/FunctionOverloading.kt",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/app/src/main/java/com/example/basicpractice/FunctionOverloading.kt",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/app/src/main/java/com/example/basicpractice/FunctionOverloading.kt",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/app/src/main/java/com/example/basicpractice/FunctionOverloading.kt?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -12,7 +12,6 @@ fun main(){\n      printNumber(a)\n     printNumber(d)\n    printNumber(f)\n-\n }\n \n    /// function are identifies by their Signature  ///"
  },
  {
    "sha": "89c021d8e6b4cec040145a396ed9e459efb08993",
    "filename": "app/src/main/java/com/example/basicpractice/XCV.java",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Shivamsharma21/BasicPractice/blob/0f89a2d67499253deef6229f161935c7b5f4888e/app/src/main/java/com/example/basicpractice/XCV.java",
    "raw_url": "https://github.com/Shivamsharma21/BasicPractice/raw/0f89a2d67499253deef6229f161935c7b5f4888e/app/src/main/java/com/example/basicpractice/XCV.java",
    "contents_url": "https://api.github.com/repos/Shivamsharma21/BasicPractice/contents/app/src/main/java/com/example/basicpractice/XCV.java?ref=0f89a2d67499253deef6229f161935c7b5f4888e",
    "patch": "@@ -0,0 +1,4 @@\n+package com.example.basicpractice;\n+\n+public class XCV {\n+}"
  }
]
