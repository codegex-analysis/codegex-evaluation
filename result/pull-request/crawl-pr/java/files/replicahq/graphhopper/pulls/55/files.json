[
  {
    "sha": "57cb0a1d15710c1928a547da933b0925a5bd908e",
    "filename": "grpc/src/main/java/RouterImpl.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/replicahq/graphhopper/blob/46f521192754a4aa0b6f260e249f8cbfa1cadf6f/grpc/src/main/java/RouterImpl.java",
    "raw_url": "https://github.com/replicahq/graphhopper/raw/46f521192754a4aa0b6f260e249f8cbfa1cadf6f/grpc/src/main/java/RouterImpl.java",
    "contents_url": "https://api.github.com/repos/replicahq/graphhopper/contents/grpc/src/main/java/RouterImpl.java?ref=46f521192754a4aa0b6f260e249f8cbfa1cadf6f",
    "patch": "@@ -197,10 +197,10 @@ public void routeMatrix(MatrixRouteRequest request, StreamObserver<MatrixRouteRe\n                     }\n \n                     long time = element.getTime();\n-                    timeRow.add(time == Long.MAX_VALUE ? null : Math.round((double)time / 1000.0D));\n+                    timeRow.add(time == Long.MAX_VALUE ? -1 : Math.round((double)time / 1000.0D));\n \n                     double distance = element.getDistance();\n-                    distanceRow.add(distance == Double.MAX_VALUE ? null : Math.round(distance));\n+                    distanceRow.add(distance == Double.MAX_VALUE ? -1 : Math.round(distance));\n \n                     debugBuilder.append(element.getDebugInfo());\n                 }"
  }
]
