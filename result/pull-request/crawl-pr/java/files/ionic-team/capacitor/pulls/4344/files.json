[
  {
    "sha": "655990a14133a71c3ec238407c616f9e69d89494",
    "filename": "ios/Capacitor/Capacitor.xcodeproj/project.pbxproj",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/ionic-team/capacitor/blob/76fd2f388018ee0b31224534a3ad5d866eb05f7e/ios/Capacitor/Capacitor.xcodeproj/project.pbxproj",
    "raw_url": "https://github.com/ionic-team/capacitor/raw/76fd2f388018ee0b31224534a3ad5d866eb05f7e/ios/Capacitor/Capacitor.xcodeproj/project.pbxproj",
    "contents_url": "https://api.github.com/repos/ionic-team/capacitor/contents/ios/Capacitor/Capacitor.xcodeproj/project.pbxproj?ref=76fd2f388018ee0b31224534a3ad5d866eb05f7e",
    "patch": "@@ -7,6 +7,7 @@\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n+\t\t04CF072125FFBB3F00E16E54 /* WebViewCredential.swift in Sources */ = {isa = PBXBuildFile; fileRef = 04CF072025FFBB3F00E16E54 /* WebViewCredential.swift */; };\n \t\t373A69C1255C9360000A6F44 /* NotificationHandlerProtocol.swift in Sources */ = {isa = PBXBuildFile; fileRef = 373A69C0255C9360000A6F44 /* NotificationHandlerProtocol.swift */; };\n \t\t373A69F2255C95D0000A6F44 /* NotificationRouter.swift in Sources */ = {isa = PBXBuildFile; fileRef = 373A69F1255C95D0000A6F44 /* NotificationRouter.swift */; };\n \t\t501CBAA71FC0A723009B0D4D /* WebKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 501CBAA61FC0A723009B0D4D /* WebKit.framework */; };\n@@ -130,6 +131,7 @@\n /* End PBXCopyFilesBuildPhase section */\n \n /* Begin PBXFileReference section */\n+\t\t04CF072025FFBB3F00E16E54 /* WebViewCredential.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = WebViewCredential.swift; sourceTree = \"<group>\"; };\n \t\t373A69C0255C9360000A6F44 /* NotificationHandlerProtocol.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NotificationHandlerProtocol.swift; sourceTree = \"<group>\"; };\n \t\t373A69F1255C95D0000A6F44 /* NotificationRouter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NotificationRouter.swift; sourceTree = \"<group>\"; };\n \t\t501CBAA61FC0A723009B0D4D /* WebKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = WebKit.framework; path = System/Library/Frameworks/WebKit.framework; sourceTree = SDKROOT; };\n@@ -311,6 +313,7 @@\n \t\t\t\t62959B0A2524DA7700A3D7F1 /* CAPBridgeDelegate.swift */,\n \t\t\t\t62E207AD2588234500A78983 /* WebViewDelegationHandler.swift */,\n \t\t\t\t625AF1EC258963C700869675 /* WebViewAssetHandler.swift */,\n+\t\t\t\t04CF072025FFBB3F00E16E54 /* WebViewCredential.swift */,\n \t\t\t\t62959AEA2524DA7700A3D7F1 /* Plugins */,\n \t\t\t\t623D6907254C6FDF002D01D1 /* CAPInstanceDescriptor.h */,\n \t\t\t\t623D6908254C6FDF002D01D1 /* CAPInstanceDescriptor.m */,\n@@ -588,6 +591,7 @@\n \t\t\t\t623D691E254C7462002D01D1 /* CAPInstanceConfiguration.m in Sources */,\n \t\t\t\t623D68FA254C5037002D01D1 /* KeyPath.swift in Sources */,\n \t\t\t\t62959B222524DA7800A3D7F1 /* Console.swift in Sources */,\n+\t\t\t\t04CF072125FFBB3F00E16E54 /* WebViewCredential.swift in Sources */,\n \t\t\t\t62959B3A2524DA7800A3D7F1 /* CAPLog.swift in Sources */,\n \t\t\t\t6214934725509C3F006C36F9 /* CAPInstanceConfiguration.swift in Sources */,\n \t\t\t\t623D6914254C7030002D01D1 /* CAPInstanceDescriptor.swift in Sources */,"
  },
  {
    "sha": "4e8f9ff72ac2dcc032bbbbd250d1b548a7d04d64",
    "filename": "ios/Capacitor/Capacitor/CAPBridgeViewController.swift",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/ionic-team/capacitor/blob/76fd2f388018ee0b31224534a3ad5d866eb05f7e/ios/Capacitor/Capacitor/CAPBridgeViewController.swift",
    "raw_url": "https://github.com/ionic-team/capacitor/raw/76fd2f388018ee0b31224534a3ad5d866eb05f7e/ios/Capacitor/Capacitor/CAPBridgeViewController.swift",
    "contents_url": "https://api.github.com/repos/ionic-team/capacitor/contents/ios/Capacitor/Capacitor/CAPBridgeViewController.swift?ref=76fd2f388018ee0b31224534a3ad5d866eb05f7e",
    "patch": "@@ -10,6 +10,7 @@ import Cordova\n \n     public fileprivate(set) var webView: WKWebView?\n \n+    public var credential: WebViewCredential?\n     public var isStatusBarVisible = true\n     public var statusBarStyle: UIStatusBarStyle = .default\n     public var statusBarAnimation: UIStatusBarAnimation = .slide\n@@ -44,6 +45,7 @@ import Cordova\n         let assetHandler = WebViewAssetHandler()\n         assetHandler.setAssetPath(configuration.appLocation.path)\n         let delegationHandler = WebViewDelegationHandler()\n+        delegationHandler.credential = credential\n         prepareWebView(with: configuration, assetHandler: assetHandler, delegationHandler: delegationHandler)\n         view = webView\n         // create the bridge"
  },
  {
    "sha": "5896ad1a995f8b2165e62f4a70118198eb1036f7",
    "filename": "ios/Capacitor/Capacitor/WebViewCredential.swift",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/ionic-team/capacitor/blob/76fd2f388018ee0b31224534a3ad5d866eb05f7e/ios/Capacitor/Capacitor/WebViewCredential.swift",
    "raw_url": "https://github.com/ionic-team/capacitor/raw/76fd2f388018ee0b31224534a3ad5d866eb05f7e/ios/Capacitor/Capacitor/WebViewCredential.swift",
    "contents_url": "https://api.github.com/repos/ionic-team/capacitor/contents/ios/Capacitor/Capacitor/WebViewCredential.swift?ref=76fd2f388018ee0b31224534a3ad5d866eb05f7e",
    "patch": "@@ -0,0 +1,19 @@\n+import Foundation\n+\n+@objc(WebViewCredential)\n+open class WebViewCredential: NSObject {\n+    @objc public let user: String\n+    @objc public let password: String\n+    @objc public let persistence: URLCredential.Persistence\n+\n+    @objc public var asURLCredential: URLCredential {\n+        URLCredential(user: user, password: password, persistence: persistence)\n+    }\n+\n+    @objc public init(user: String, password: String, persistence: URLCredential.Persistence) {\n+        self.user = user\n+        self.password = password\n+        self.persistence = persistence\n+        super.init()\n+    }\n+}"
  },
  {
    "sha": "6e0e4e442787d922757ac4a58bc7da815a5a0b31",
    "filename": "ios/Capacitor/Capacitor/WebViewDelegationHandler.swift",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/ionic-team/capacitor/blob/76fd2f388018ee0b31224534a3ad5d866eb05f7e/ios/Capacitor/Capacitor/WebViewDelegationHandler.swift",
    "raw_url": "https://github.com/ionic-team/capacitor/raw/76fd2f388018ee0b31224534a3ad5d866eb05f7e/ios/Capacitor/Capacitor/WebViewDelegationHandler.swift",
    "contents_url": "https://api.github.com/repos/ionic-team/capacitor/contents/ios/Capacitor/Capacitor/WebViewDelegationHandler.swift?ref=76fd2f388018ee0b31224534a3ad5d866eb05f7e",
    "patch": "@@ -6,6 +6,7 @@ import WebKit\n @objc(CAPWebViewDelegationHandler)\n internal class WebViewDelegationHandler: NSObject, WKNavigationDelegate, WKUIDelegate, WKScriptMessageHandler {\n     weak var bridge: CapacitorBridge?\n+    var credential: WebViewCredential?\n     fileprivate(set) var contentController = WKUserContentController()\n     enum WebViewLoadingState {\n         case unloaded\n@@ -236,6 +237,16 @@ internal class WebViewDelegationHandler: NSObject, WKNavigationDelegate, WKUIDel\n         return nil\n     }\n \n+    public func webView(_ webView: WKWebView, didReceive challenge: URLAuthenticationChallenge, completionHandler: @escaping (URLSession.AuthChallengeDisposition, URLCredential?) -> Void) {\n+        guard let credential = self.credential else {\n+            CAPLog.print(\"⚡️  Error didReceive challenge. Nil credentials\")\n+            return\n+        }\n+        let urlCredential = credential.asURLCredential\n+        challenge.sender?.use(urlCredential, for: challenge)\n+        completionHandler(.useCredential, urlCredential)\n+    }\n+\n     // MARK: - Private\n \n     private func logJSError(_ error: [String: Any]) {"
  }
]
