[
  {
    "sha": "509fcc881bf467df98968e20542b9150e42b9e1b",
    "filename": "hw12/build.gradle",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/build.gradle",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/build.gradle",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/build.gradle?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,43 @@\n+plugins {\n+    id 'org.springframework.boot' version '2.4.0'\n+    id 'io.spring.dependency-management' version '1.0.10.RELEASE'\n+    id 'java'\n+}\n+\n+group 'ru.otus.spring-2020-11'\n+version '1.0-SNAPSHOT'\n+\n+repositories {\n+    mavenCentral()\n+}\n+\n+final lombok_version = '1.18.16'\n+final springboot_version = '2.4.2'\n+final mongock_version = '4.1.19'\n+\n+dependencies {\n+    implementation \"org.springframework.boot:spring-boot-starter:$springboot_version\"\n+    implementation \"org.springframework.boot:spring-boot-starter-data-mongodb:$springboot_version\"\n+    implementation \"org.springframework.boot:spring-boot-starter-web:$springboot_version\"\n+    implementation \"org.springframework.boot:spring-boot-starter-thymeleaf:$springboot_version\"\n+    implementation \"org.springframework.boot:spring-boot-starter-security:$springboot_version\"\n+    implementation \"com.github.cloudyrock.mongock:mongock-spring-v5:$mongock_version\"\n+    implementation \"com.github.cloudyrock.mongock:mongodb-springdata-v3-driver:$mongock_version\"\n+//    implementation \"org.springframework.shell:spring-shell-starter:2.0.1.RELEASE\"\n+    implementation \"ch.qos.logback:logback-classic:1.2.3\"\n+    implementation \"org.apache.commons:commons-lang3:3.11\"\n+    implementation \"com.h2database:h2:1.4.200\"\n+    compileOnly \"org.projectlombok:lombok:$lombok_version\"\n+    annotationProcessor \"org.projectlombok:lombok:$lombok_version\"\n+    annotationProcessor \"org.springframework.boot:spring-boot-configuration-processor:$springboot_version\"\n+\n+    testImplementation \"org.springframework.boot:spring-boot-starter-test:$springboot_version\"\n+    testCompile \"org.assertj:assertj-core:3.18.1\"\n+    testCompile \"ch.qos.logback:logback-classic:1.2.3\"\n+    testCompileOnly \"org.projectlombok:lombok:$lombok_version\"\n+    testAnnotationProcessor \"org.projectlombok:lombok:$lombok_version\"\n+}\n+\n+test {\n+    useJUnitPlatform()\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f805b28a727143daa2ed6fa28243705031f392b8",
    "filename": "hw12/settings.gradle",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/settings.gradle",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/settings.gradle",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/settings.gradle?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,2 @@\n+rootProject.name = 'hw12'\n+"
  },
  {
    "sha": "aa799e16d94d0fbebe894876624213af6c90dfd4",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/EntryPoint.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/EntryPoint.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/EntryPoint.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/EntryPoint.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.otus.spring_2020_11.hw12;\n+\n+import com.github.cloudyrock.spring.v5.EnableMongock;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;\n+\n+@SpringBootApplication\n+@EnableMongoRepositories\n+@EnableMongock\n+public class EntryPoint {\n+    public static void main(String[] args) {\n+        SpringApplication.run(EntryPoint.class, args);\n+    }\n+}"
  },
  {
    "sha": "5e5d406cdee027223284263b9cfced3bf3c097ca",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/changelogs/InitMongoDbChangelog.java",
    "status": "added",
    "additions": 58,
    "deletions": 0,
    "changes": 58,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/changelogs/InitMongoDbChangelog.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/changelogs/InitMongoDbChangelog.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/changelogs/InitMongoDbChangelog.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,58 @@\n+package ru.otus.spring_2020_11.hw12.changelogs;\n+\n+import com.github.cloudyrock.mongock.ChangeLog;\n+import com.github.cloudyrock.mongock.ChangeSet;\n+import com.github.cloudyrock.mongock.driver.mongodb.springdata.v3.decorator.impl.MongockTemplate;\n+import org.springframework.data.domain.Sort;\n+import org.springframework.data.mongodb.core.index.Index;\n+import org.springframework.security.crypto.bcrypt.BCrypt;\n+import ru.otus.spring_2020_11.hw12.domain.Author;\n+import ru.otus.spring_2020_11.hw12.domain.Book;\n+import ru.otus.spring_2020_11.hw12.domain.Genre;\n+import ru.otus.spring_2020_11.hw12.repostitory.AuthorRepository;\n+import ru.otus.spring_2020_11.hw12.repostitory.BookRepository;\n+import ru.otus.spring_2020_11.hw12.security.dao.UserRepository;\n+import ru.otus.spring_2020_11.hw12.security.dto.UserDb;\n+\n+@ChangeLog(order = \"001\")\n+public class InitMongoDbChangelog {\n+\n+    private Author london;\n+    private Author adams;\n+    private Author corey;\n+\n+    @ChangeSet(order = \"000\", id = \"wipe\", author = \"nemo\", runAlways = true)\n+    public void wipe(MongockTemplate template) {\n+        template.getDb().drop();\n+\n+        final var titleIndex = new Index()\n+                .on(\"title\", Sort.Direction.ASC)\n+                .named(\"title_index\")\n+                .unique();\n+        final var genreIndex = new Index()\n+                .named(\"genre_index\")\n+                .on(\"genre\", Sort.Direction.ASC);\n+\n+        template.indexOps(Book.class).ensureIndex(titleIndex);\n+        template.indexOps(Book.class).ensureIndex(genreIndex);\n+    }\n+\n+    @ChangeSet(order = \"001\", id = \"initAuthors\", author = \"nemo\", runAlways = true)\n+    public void initAuthors(AuthorRepository repo) {\n+        london = repo.save(new Author(\"Jack\", \"London\"));\n+        adams = repo.save(new Author(\"Douglas\", \"Adams\"));\n+        corey = repo.save(new Author(\"James\", \"Corey\"));\n+    }\n+\n+    @ChangeSet(order = \"002\", id = \"initBooks\", author = \"nemo\", runAlways = true)\n+    public void initBooks(BookRepository repository) {\n+        repository.save(new Book(london, new Genre(\"adventure\"), \"White Fang\"));\n+        repository.save(new Book(corey, new Genre(\"science fiction\"), \"The Expanse\"));\n+        repository.save(new Book(adams, new Genre(\"comic science fiction\"), \"The Hitchhiker's Guide to the Galaxy\"));\n+    }\n+\n+    @ChangeSet(order = \"003\", id = \"initUser\", author = \"nemo\", runAlways = true)\n+    public void initUser(UserRepository repository) {\n+        repository.save(new UserDb(\"user\", BCrypt.hashpw(\"pass\", BCrypt.gensalt())));\n+    }\n+}"
  },
  {
    "sha": "f627bff1fce502e0bcf092e7703eafd23a8bd8bc",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/controller/BookController.java",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/controller/BookController.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/controller/BookController.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/controller/BookController.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,88 @@\n+package ru.otus.spring_2020_11.hw12.controller;\n+\n+import lombok.NonNull;\n+import lombok.RequiredArgsConstructor;\n+import lombok.val;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import ru.otus.spring_2020_11.hw12.controller.model.BookFlat;\n+import ru.otus.spring_2020_11.hw12.domain.Book;\n+import ru.otus.spring_2020_11.hw12.domain.Genre;\n+import ru.otus.spring_2020_11.hw12.repostitory.AuthorRepository;\n+import ru.otus.spring_2020_11.hw12.repostitory.BookRepository;\n+\n+@Controller\n+@RequiredArgsConstructor\n+public class BookController {\n+    @NonNull\n+    private final BookRepository bookRepository;\n+    @NonNull\n+    private final AuthorRepository authorRepository;\n+\n+    @GetMapping(\"/\")\n+    public String showBooksAll(Model model) {\n+        val books = bookRepository.findAll();\n+        model.addAttribute(\"books\", books);\n+\n+        return \"list\";\n+    }\n+\n+    @GetMapping(\"/edit\")\n+    public String showBookById(@RequestParam(\"id\") String id, Model model) {\n+        val book = bookRepository.findById(id).orElseThrow(RuntimeException::new);\n+        model.addAttribute(\"book\", book);\n+\n+        return \"edit\";\n+    }\n+\n+    @Transactional\n+    @PostMapping(\"/edit\")\n+    public String updateBook(BookFlat bookFlat) {\n+        bookRepository.save(convertToBook(bookFlat));\n+\n+        return \"redirect:/\";\n+    }\n+\n+    @GetMapping(\"/delete\")\n+    public String deleteBookById(@RequestParam(\"id\") String id) {\n+        bookRepository.deleteById(id);\n+\n+        return \"redirect:/\";\n+    }\n+\n+    @GetMapping(\"/add\")\n+    public String showAddBook() {\n+        return \"add\";\n+    }\n+\n+    @Transactional\n+    @PostMapping(\"/add\")\n+    public String insertBook(BookFlat bookFlat) {\n+        bookRepository.save(convertToBook(bookFlat));\n+\n+        return \"redirect:/\";\n+    }\n+\n+    private Book convertToBook(BookFlat bookFlat) {\n+        val book = bookFlat.getId() == null ? new Book() : bookRepository.findById(bookFlat.getId()).get();\n+        val author = authorRepository.findById(bookFlat.getAuthorId()).get();\n+        val genre = new Genre(bookFlat.getGenre());\n+\n+        book.setAuthor(author);\n+        book.setGenre(genre);\n+        book.setTitle(bookFlat.getTitle());\n+\n+        return book;\n+    }\n+\n+    @ExceptionHandler\n+    public ResponseEntity<String> handleNotFound(Exception ex) {\n+        return ResponseEntity.badRequest().body(ex.getMessage());\n+    }\n+}"
  },
  {
    "sha": "43fe416032346a80d29b1af17b3854694ce0fcc2",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/controller/model/BookFlat.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/controller/model/BookFlat.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/controller/model/BookFlat.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/controller/model/BookFlat.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.spring_2020_11.hw12.controller.model;\n+\n+import lombok.Data;\n+\n+@Data\n+public class BookFlat {\n+    private String id;\n+    private String authorId;\n+    private String genre;\n+    private String title;\n+}"
  },
  {
    "sha": "a333c571b3d9699990c8c93c34a8b5a5b30c06e3",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Author.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Author.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Author.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Author.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.otus.spring_2020_11.hw12.domain;\n+\n+import lombok.*;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@RequiredArgsConstructor\n+@Document(collection = \"author\")\n+public class Author {\n+    @Id\n+    private String id;\n+    @NonNull\n+    private String firstName;\n+    @NonNull\n+    private String lastName;\n+}"
  },
  {
    "sha": "eb22101dc17f2f5fda2e1449d37a67ea90de466f",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Book.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Book.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Book.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Book.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,42 @@\n+package ru.otus.spring_2020_11.hw12.domain;\n+\n+import lombok.*;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.mongodb.core.index.CompoundIndex;\n+import org.springframework.data.mongodb.core.index.CompoundIndexes;\n+import org.springframework.data.mongodb.core.mapping.DBRef;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+import org.springframework.data.mongodb.core.mapping.Field;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@RequiredArgsConstructor\n+@ToString(exclude = \"commentaries\")\n+@Document(collection = \"book\")\n+@CompoundIndexes({\n+        @CompoundIndex(name = \"title_index\", def = \"{ 'title': 1 }\", unique = true),\n+        @CompoundIndex(name = \"genre_index\", def = \"{ 'genre': 1 }\")\n+})\n+public class Book {\n+    @Id\n+    private String id;\n+\n+    @Field\n+    @DBRef\n+    @NonNull\n+    private Author author;\n+\n+    @Field\n+    @NonNull\n+    private Genre genre;\n+\n+    @NonNull\n+    private String title;\n+\n+    @Field\n+    private List<Commentary> commentaries = new ArrayList<>();\n+}"
  },
  {
    "sha": "5d68d8777ceca85a38559c30579facc59ef92933",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Commentary.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Commentary.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Commentary.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Commentary.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,10 @@\n+package ru.otus.spring_2020_11.hw12.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+\n+@Data\n+@AllArgsConstructor\n+public class Commentary {\n+    private String message;\n+}"
  },
  {
    "sha": "0b2b5ac8eb2355c5863db45c0603d6c324bf42f9",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Genre.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Genre.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Genre.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/domain/Genre.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.spring_2020_11.hw12.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+\n+@Data\n+@AllArgsConstructor\n+public class Genre {\n+    private String name;\n+}\n+"
  },
  {
    "sha": "353f7dc650598e1d6b64ea7e42f9c858f57e2fb2",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/model/BookFlat.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/model/BookFlat.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/model/BookFlat.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/model/BookFlat.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.spring_2020_11.hw12.model;\n+\n+import lombok.Data;\n+\n+@Data\n+public class BookFlat {\n+    private String id;\n+    private String authorId;\n+    private String genre;\n+    private String title;\n+}"
  },
  {
    "sha": "2aaae2a9483aeee004852a9cb5e888fa1ff8f53d",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/AuthorRepository.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/AuthorRepository.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/AuthorRepository.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/AuthorRepository.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.otus.spring_2020_11.hw12.repostitory;\n+\n+import org.springframework.data.mongodb.repository.MongoRepository;\n+import ru.otus.spring_2020_11.hw12.domain.Author;\n+\n+public interface AuthorRepository extends MongoRepository<Author, String> {\n+}"
  },
  {
    "sha": "79de43c480ecdfed03e7c8618656baf705866386",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepository.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepository.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepository.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepository.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.spring_2020_11.hw12.repostitory;\n+\n+import org.springframework.data.mongodb.repository.MongoRepository;\n+import ru.otus.spring_2020_11.hw12.domain.Book;\n+import ru.otus.spring_2020_11.hw12.domain.Genre;\n+\n+import java.util.List;\n+\n+public interface BookRepository extends BookRepositoryCustom, MongoRepository<Book, String> {\n+    Book findByTitle(String title);\n+\n+    List<Book> findByGenre(Genre genre);\n+}"
  },
  {
    "sha": "95671b2065d161a0390f29b2e31f1d802a4ea30b",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepositoryCustom.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepositoryCustom.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepositoryCustom.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepositoryCustom.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.spring_2020_11.hw12.repostitory;\n+\n+import ru.otus.spring_2020_11.hw12.domain.Book;\n+import ru.otus.spring_2020_11.hw12.domain.Commentary;\n+import ru.otus.spring_2020_11.hw12.domain.Genre;\n+\n+import java.util.List;\n+\n+public interface BookRepositoryCustom {\n+    List<Genre> findAllGenre();\n+\n+    void addCommentary(Book book, Commentary commentary);\n+}"
  },
  {
    "sha": "17118b5aeaebe4f7cd9ab314c919a5719f23e829",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepositoryCustomImpl.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepositoryCustomImpl.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepositoryCustomImpl.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/repostitory/BookRepositoryCustomImpl.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,43 @@\n+package ru.otus.spring_2020_11.hw12.repostitory;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.data.mongodb.core.MongoTemplate;\n+import org.springframework.data.mongodb.core.aggregation.Aggregation;\n+import org.springframework.data.mongodb.core.query.Criteria;\n+import org.springframework.data.mongodb.core.query.Query;\n+import org.springframework.data.mongodb.core.query.Update;\n+import ru.otus.spring_2020_11.hw12.domain.Book;\n+import ru.otus.spring_2020_11.hw12.domain.Commentary;\n+import ru.otus.spring_2020_11.hw12.domain.Genre;\n+\n+import java.util.List;\n+\n+import static org.springframework.data.mongodb.core.aggregation.Aggregation.newAggregation;\n+import static org.springframework.data.mongodb.core.aggregation.Aggregation.project;\n+import static org.springframework.data.mongodb.core.aggregation.ObjectOperators.ObjectToArray.valueOfToArray;\n+\n+@Slf4j\n+@AllArgsConstructor\n+public class BookRepositoryCustomImpl implements BookRepositoryCustom {\n+    private final MongoTemplate mongoTemplate;\n+\n+    @Override\n+    public void addCommentary(Book book, Commentary commentary) {\n+        mongoTemplate.updateFirst(\n+                Query.query(Criteria.where(\"id\").is(book.getId())),\n+                new Update().push(\"commentaries\", commentary),\n+                Book.class\n+        );\n+    }\n+\n+    @Override\n+    public List<Genre> findAllGenre() {\n+        Aggregation aggregation = newAggregation(\n+                project().andExclude(\"_id\").and(valueOfToArray(\"genre\")).as(\"genre_entity\"),\n+                project().and(\"genre_entity.v\").as(\"name\")\n+        );\n+\n+        return mongoTemplate.aggregate(aggregation, Book.class, Genre.class).getMappedResults();\n+    }\n+}"
  },
  {
    "sha": "7c01f517a40ffaf0845eacf39b92e99147b4ef68",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/SecurityConfiguration.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/SecurityConfiguration.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/SecurityConfiguration.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/SecurityConfiguration.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.otus.spring_2020_11.hw12.security;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.builders.WebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n+import org.springframework.security.crypto.password.PasswordEncoder;\n+\n+@EnableWebSecurity\n+public class SecurityConfiguration extends WebSecurityConfigurerAdapter {\n+    @Override\n+    public void configure(WebSecurity web) {\n+        web.ignoring()\n+                .antMatchers(\"/\");\n+    }\n+\n+    @Override\n+    public void configure(HttpSecurity http) throws Exception {\n+        http.csrf().disable()\n+                .authorizeRequests()\n+                .antMatchers(\n+                        \"/edit\",\n+                        \"/delete\",\n+                        \"/add\"\n+                )\n+                .authenticated()\n+\n+                .and()\n+\n+                .formLogin();\n+    }\n+\n+    @Bean\n+    public PasswordEncoder passwordEncoder() {\n+        return new BCryptPasswordEncoder();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "74b8fb7cde2bfd1551cc99fd28cadce867985b9e",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/UserDetailsDb.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/UserDetailsDb.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/UserDetailsDb.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/UserDetailsDb.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,48 @@\n+package ru.otus.spring_2020_11.hw12.security;\n+\n+import lombok.AllArgsConstructor;\n+import org.springframework.security.core.userdetails.UserDetails;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+@AllArgsConstructor\n+public class UserDetailsDb implements UserDetails {\n+    private final String username;\n+    private final String password;\n+\n+    @Override\n+    public Collection getAuthorities() {\n+        return Collections.EMPTY_LIST;\n+    }\n+\n+    @Override\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+    @Override\n+    public String getUsername() {\n+        return username;\n+    }\n+\n+    @Override\n+    public boolean isAccountNonExpired() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean isAccountNonLocked() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean isCredentialsNonExpired() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean isEnabled() {\n+        return true;\n+    }\n+}"
  },
  {
    "sha": "b1c13aabb25fa4b93669a1bc4b74f3721eccae1b",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/UserDetailsDbService.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/UserDetailsDbService.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/UserDetailsDbService.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/UserDetailsDbService.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.otus.spring_2020_11.hw12.security;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.val;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.security.core.userdetails.UserDetailsService;\n+import org.springframework.security.core.userdetails.UsernameNotFoundException;\n+import org.springframework.stereotype.Service;\n+import ru.otus.spring_2020_11.hw12.security.dao.UserRepository;\n+\n+@AllArgsConstructor\n+@Service\n+public class UserDetailsDbService implements UserDetailsService {\n+    private final UserRepository repo;\n+\n+    @Override\n+    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n+        val user = repo.findByLogin(username);\n+\n+        return new UserDetailsDb(user.getLogin(), user.getPassword());\n+    }\n+}"
  },
  {
    "sha": "4a51839216e4ead4403154508dae30f12e22c4cd",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/dao/UserRepository.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/dao/UserRepository.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/dao/UserRepository.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/dao/UserRepository.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,8 @@\n+package ru.otus.spring_2020_11.hw12.security.dao;\n+\n+import org.springframework.data.mongodb.repository.MongoRepository;\n+import ru.otus.spring_2020_11.hw12.security.dto.UserDb;\n+\n+public interface UserRepository extends MongoRepository<UserDb, String> {\n+    UserDb findByLogin(String login);\n+}"
  },
  {
    "sha": "395b1f9f83d06dd464b51f0f916738c7a1f7b271",
    "filename": "hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/dto/UserDb.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/dto/UserDb.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/dto/UserDb.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/java/ru/otus/spring_2020_11/hw12/security/dto/UserDb.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.otus.spring_2020_11.hw12.security.dto;\n+\n+import lombok.*;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@RequiredArgsConstructor\n+@Document(collection = \"user\")\n+public class UserDb {\n+    @Id\n+    private String id;\n+    @NonNull\n+    private String login;\n+    @NonNull\n+    private String password;\n+}"
  },
  {
    "sha": "e09714691b743f7e7dfdeff4a5475a83c58f6f39",
    "filename": "hw12/src/main/resources/application.yml",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/resources/application.yml",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/resources/application.yml?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,17 @@\n+spring:\n+\n+  data:\n+    mongodb:\n+      host: localhost\n+      port: 27017\n+      database: test\n+      auto-index-creation: true\n+\n+logging:\n+  level:\n+    org.springframework.data.mongodb.core.MongoTemplate: DEBUG\n+\n+mongock:\n+  runner-type: \"InitializingBean\"\n+  change-logs-scan-package:\n+    - ru.otus.spring_2020_11.hw12.changelogs\n\\ No newline at end of file"
  },
  {
    "sha": "db7295371d0e7598f77fce936af36275e20e40fb",
    "filename": "hw12/src/main/resources/templates/add.html",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/resources/templates/add.html",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/resources/templates/add.html",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/resources/templates/add.html?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,29 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\"/>\n+    <title>Правка книги</title>\n+</head>\n+<body>\n+<form id=\"edit-form\" th:action=\"@{/add}\" th:method=\"post\" action=\"add.html\">\n+    <h1>Добавить книгу:</h1>\n+    <div class=\"row\">\n+        <label for=\"author-id-input\">Author ID:</label>\n+        <input id=\"author-id-input\" name=\"authorId\" type=\"text\"/>\n+    </div>\n+    <div class=\"row\">\n+        <label for=\"genre-input\">Genre:</label>\n+        <input id=\"genre-input\" name=\"genre\" type=\"text\"/>\n+    </div>\n+    <div class=\"row\">\n+        <label for=\"title-input\">Title:</label>\n+        <input id=\"title-input\" name=\"title\" type=\"text\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <button type=\"submit\">Сохранить</button>\n+    </div>\n+</form>\n+\n+</body>\n+</html>"
  },
  {
    "sha": "e7ec58524e9155e0ab59ee2b99fe989cd5a73f46",
    "filename": "hw12/src/main/resources/templates/edit.html",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/resources/templates/edit.html",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/resources/templates/edit.html",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/resources/templates/edit.html?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,34 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\"/>\n+    <title>Правка книги</title>\n+</head>\n+<body>\n+<form id=\"edit-form\" th:action=\"@{/edit(id=${book.id})}\" th:method=\"post\" action=\"edit.html\">\n+    <h1>Править книгу:</h1>\n+    <div class=\"row\">\n+        <label for=\"id-input\">Book ID:</label>\n+        <label for=\"id-input\" th:text=\"${book.id}\">id</label>\n+        <input id=\"id-input\" type=\"text\" th:value=\"${book.id}\" value=\"1\" hidden=\"true\"/>\n+    </div>\n+    <div class=\"row\">\n+        <label for=\"author-id-input\">Author ID:</label>\n+        <input id=\"author-id-input\" name=\"authorId\" type=\"text\" th:value=\"${book.author.id}\" value=\"1\"/>\n+    </div>\n+    <div class=\"row\">\n+        <label for=\"genre-input\">Genre:</label>\n+        <input id=\"genre-input\" name=\"genre\" type=\"text\" th:value=\"${book.genre.name}\" value=\"1\"/>\n+    </div>\n+    <div class=\"row\">\n+        <label for=\"title-input\">Title:</label>\n+        <input id=\"title-input\" name=\"title\" type=\"text\" th:value=\"${book.title}\" value=\"Title\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <button type=\"submit\">Сохранить</button>\n+    </div>\n+</form>\n+\n+</body>\n+</html>"
  },
  {
    "sha": "f6c6faab041f09ae3e4a2527ce36b590b137073c",
    "filename": "hw12/src/main/resources/templates/list.html",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/resources/templates/list.html",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/main/resources/templates/list.html",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/main/resources/templates/list.html?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,36 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\"/>\n+    <title>Список</title>\n+</head>\n+<body>\n+<h1>Список книг</h1>\n+<table class=\"book\">\n+    <thead>\n+    <tr>\n+        <th>ID</th>\n+        <th>Author</th>\n+        <th>Genre</th>\n+        <th>Title</th>\n+    </tr>\n+    </thead>\n+    <tbody>\n+    <tr th:each=\"book : ${books}\">\n+        <td th:text=\"${book.id}\">1</td>\n+        <td th:text=\"${book.author}\">Author</td>\n+        <td th:text=\"${book.genre}\">Genre</td>\n+        <td th:text=\"${book.title}\">Title</td>\n+        <td>\n+            <a th:href=\"@{/edit(id=${book.id})}\" href=\"edit.html\">Правка</a>\n+        </td>\n+        <td>\n+            <a th:href=\"@{/delete(id=${book.id})}\" href=\"delete.html\">Удалить</a>\n+        </td>\n+    </tr>\n+    </tbody>\n+</table>\n+<br>\n+<a th:href=\"@{/add}\" href=\"add.html\">Добавить книгу</a>\n+</body>\n+</html>"
  },
  {
    "sha": "db034296f2fd74c359cc6cf77dc1f7a0bbda999b",
    "filename": "hw12/src/test/java/ru/otus/spring_2020_11/hw12/BookRepositoryTest.java",
    "status": "added",
    "additions": 98,
    "deletions": 0,
    "changes": 98,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/test/java/ru/otus/spring_2020_11/hw12/BookRepositoryTest.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/test/java/ru/otus/spring_2020_11/hw12/BookRepositoryTest.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/test/java/ru/otus/spring_2020_11/hw12/BookRepositoryTest.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,98 @@\n+package ru.otus.spring_2020_11.hw12;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import lombok.val;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.data.mongo.DataMongoTest;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.dao.DataIntegrityViolationException;\n+import ru.otus.spring_2020_11.hw12.domain.Book;\n+import ru.otus.spring_2020_11.hw12.domain.Genre;\n+import ru.otus.spring_2020_11.hw12.repostitory.AuthorRepository;\n+import ru.otus.spring_2020_11.hw12.repostitory.BookRepository;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n+\n+@Slf4j\n+@DataMongoTest\n+@ComponentScan({\n+        \"ru.otus.spring_2020_11.hw12.repository\",\n+        \"ru.otus.spring_2020_11.hw12.domain\"\n+})\n+public class BookRepositoryTest {\n+    private static final Genre GENRE = new Genre(\"g\");\n+    private static final String TITLE = \"t\";\n+\n+    @Autowired\n+    private BookRepository bookRepository;\n+    @Autowired\n+    private AuthorRepository authorRepository;\n+\n+    @Test\n+    void get_by_id_absent() {\n+        assertThat(bookRepository.findById(\"00000000000\").isPresent())\n+                .isFalse();\n+    }\n+\n+    @Test\n+    void insert_title_dublicate() {\n+        val author = authorRepository.findAll().get(0);\n+\n+        assertThatExceptionOfType(DataIntegrityViolationException.class)\n+                .isThrownBy(() -> bookRepository.save(new Book(author, GENRE, TITLE)));\n+    }\n+\n+    @Test\n+    void delete_by_id() {\n+        val books = bookRepository.findAll();\n+\n+        assertThat(books).hasSize(1);\n+\n+        val book = books.get(0);\n+        assertThat(book)\n+                .isNotNull();\n+\n+        bookRepository.delete(book);\n+\n+        assertThat(bookRepository.findAll()).isEmpty();\n+    }\n+\n+    @Test\n+    void find_by_title() {\n+        val author = authorRepository.findAll().stream()\n+                .filter(a -> \"a\".equals(a.getFirstName()))\n+                .findFirst()\n+                .orElse(null);\n+\n+        assertThat(author).isNotNull();\n+\n+        val book = bookRepository.findByTitle(TITLE);\n+\n+        assertThat(book)\n+                .isNotNull()\n+                .hasFieldOrPropertyWithValue(\"title\", TITLE)\n+                .hasFieldOrPropertyWithValue(\"author\", author)\n+                .hasFieldOrPropertyWithValue(\"genre\", GENRE);\n+    }\n+\n+    @Test\n+    void find_by_genre() {\n+        val author = authorRepository.findAll().stream()\n+                .filter(a -> \"a\".equals(a.getFirstName()))\n+                .findFirst()\n+                .orElse(null);\n+\n+        assertThat(author).isNotNull();\n+\n+        bookRepository.save(new Book(author, GENRE, \"title\"));\n+\n+        val books = bookRepository.findByGenre(GENRE);\n+\n+        assertThat(books)\n+                .hasSize(2)\n+                .allMatch(b -> GENRE.equals(b.getGenre()))\n+                .anyMatch(b -> \"title\".equals(b.getTitle()));\n+    }\n+}"
  },
  {
    "sha": "1435aa52fb5c7343bcd703be0fba24cb96e9181c",
    "filename": "hw12/src/test/java/ru/otus/spring_2020_11/hw12/changelogs/InitMongoDbChangelog.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/test/java/ru/otus/spring_2020_11/hw12/changelogs/InitMongoDbChangelog.java",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/test/java/ru/otus/spring_2020_11/hw12/changelogs/InitMongoDbChangelog.java",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/test/java/ru/otus/spring_2020_11/hw12/changelogs/InitMongoDbChangelog.java?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,46 @@\n+package ru.otus.spring_2020_11.hw12.changelogs;\n+\n+import com.github.cloudyrock.mongock.ChangeLog;\n+import com.github.cloudyrock.mongock.ChangeSet;\n+import com.github.cloudyrock.mongock.driver.mongodb.springdata.v3.decorator.impl.MongockTemplate;\n+import org.springframework.data.domain.Sort;\n+import org.springframework.data.mongodb.core.index.Index;\n+import ru.otus.spring_2020_11.hw12.domain.Author;\n+import ru.otus.spring_2020_11.hw12.domain.Book;\n+import ru.otus.spring_2020_11.hw12.domain.Genre;\n+import ru.otus.spring_2020_11.hw12.repostitory.AuthorRepository;\n+import ru.otus.spring_2020_11.hw12.repostitory.BookRepository;\n+\n+@ChangeLog(order = \"001\")\n+public class InitMongoDbChangelog {\n+\n+    private Author a;\n+    private Author b;\n+\n+    @ChangeSet(order = \"000\", id = \"wipe\", author = \"nemo\", runAlways = true)\n+    public void wipe(MongockTemplate template) {\n+        template.getDb().drop();\n+\n+        final var titleIndex = new Index()\n+                .on(\"title\", Sort.Direction.ASC)\n+                .named(\"title_index\")\n+                .unique();\n+        final var genreIndex = new Index()\n+                .named(\"genre_index\")\n+                .on(\"genre\", Sort.Direction.ASC);\n+\n+        template.indexOps(Book.class).ensureIndex(titleIndex);\n+        template.indexOps(Book.class).ensureIndex(genreIndex);\n+    }\n+\n+    @ChangeSet(order = \"001\", id = \"initAuthors\", author = \"nemo\", runAlways = true)\n+    public void initAuthors(AuthorRepository repo) {\n+        a = repo.save(new Author(\"a\", \"b\"));\n+        b = repo.save(new Author(\"q\", \"w\"));\n+    }\n+\n+    @ChangeSet(order = \"002\", id = \"initBooks\", author = \"nemo\", runAlways = true)\n+    public void initBooks(BookRepository repository) {\n+        repository.save(new Book(a, new Genre(\"g\"), \"t\"));\n+    }\n+}"
  },
  {
    "sha": "db6bd3031aa9778fa8b1f2b7b87d26a932e4f08e",
    "filename": "hw12/src/test/resources/application.yml",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/nemocapt/otus_spring/blob/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/test/resources/application.yml",
    "raw_url": "https://github.com/nemocapt/otus_spring/raw/a7a1b121b97c99de1bf4edc98e237474c9416ca7/hw12/src/test/resources/application.yml",
    "contents_url": "https://api.github.com/repos/nemocapt/otus_spring/contents/hw12/src/test/resources/application.yml?ref=a7a1b121b97c99de1bf4edc98e237474c9416ca7",
    "patch": "@@ -0,0 +1,12 @@\n+spring:\n+\n+  data:\n+    mongodb:\n+      host: localhost\n+      port: 27017\n+      database: test\n+\n+mongock:\n+  runner-type: \"InitializingBean\"\n+  change-logs-scan-package:\n+    - ru.otus.spring_2020_11.hw12.changelogs\n\\ No newline at end of file"
  }
]
