[
  {
    "sha": "2f2247f6a9a13e2c43a761bd1aea7838813da2e9",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/pom.xml",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/pom.xml",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/pom.xml?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -25,7 +25,10 @@\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-starter-web</artifactId>\n \t\t</dependency>\n-\n+\t\t<dependency>\n+\t\t\t<groupId>org.projectlombok</groupId>\n+\t\t\t<artifactId>lombok</artifactId>\n+\t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.postgresql</groupId>\n \t\t\t<artifactId>postgresql</artifactId>"
  },
  {
    "sha": "bb3a87c4cb7739b4b9a2bca69f064873699db3a6",
    "filename": "src/main/java/com/example/demo/grade/domain/Grade.java",
    "status": "modified",
    "additions": 5,
    "deletions": 49,
    "changes": 54,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/grade/domain/Grade.java",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/grade/domain/Grade.java",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/src/main/java/com/example/demo/grade/domain/Grade.java?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -1,60 +1,16 @@\n package com.example.demo.grade.domain;\n \n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n import java.time.LocalDate;\n-import java.util.Objects;\n \n+@AllArgsConstructor\n+@Getter\n public class Grade{\n     private final int gradeId;\n     private final GradeScale gradeScale;\n     private final long studentId;\n     private final LocalDate insertionDate;\n     private final int gradeWeight;\n-\n-    public Grade(int gradeId, GradeScale gradeScale, long studentId, LocalDate insertionDate, int gradeWeight) {\n-        this.gradeId = gradeId;\n-        this.gradeScale = gradeScale;\n-        this.studentId = studentId;\n-        this.insertionDate = insertionDate;\n-        this.gradeWeight = gradeWeight;\n-    }\n-\n-    public GradeScale getGradeScale() {\n-        return gradeScale;\n-    }\n-\n-    public long getStudentId() {\n-        return studentId;\n-    }\n-\n-    public int getGradeValue() {\n-        return this.gradeScale.getGradeValue();\n-    }\n-\n-    public int getGradeId() {\n-        return gradeId;\n-    }\n-\n-    public LocalDate getInsertionDate() {\n-        return insertionDate;\n-    }\n-\n-    public int getGradeWeight() {\n-        return gradeWeight;\n-    }\n-\n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (o == null || getClass() != o.getClass()) return false;\n-        Grade grade = (Grade) o;\n-        return studentId == grade.studentId &&\n-                gradeWeight == grade.gradeWeight &&\n-                gradeScale == grade.gradeScale &&\n-                insertionDate.equals(grade.insertionDate);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(studentId, insertionDate, gradeWeight);\n-    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "db325bee9bc9f583e7541cfff4d47a47ac244ade",
    "filename": "src/main/java/com/example/demo/grade/infrastructure/api/GradeController.java",
    "status": "modified",
    "additions": 7,
    "deletions": 3,
    "changes": 10,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/grade/infrastructure/api/GradeController.java",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/grade/infrastructure/api/GradeController.java",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/src/main/java/com/example/demo/grade/infrastructure/api/GradeController.java?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -7,6 +7,7 @@\n import org.springframework.web.bind.annotation.*;\n \n import java.util.List;\n+import java.util.stream.Collectors;\n \n @RestController\n @RequestMapping\n@@ -21,15 +22,17 @@ public GradeController(GradeFacade gradeFacade) {\n \n     @GetMapping(\"/grades\")\n     public ResponseEntity<GradeResponse> getAllGrades(@RequestParam(value = \"sortType\", required = false, defaultValue = \"INSERTION_DATE_ASC\") GradeSortTypes gradeSortType) {\n-        return ResponseEntity.ok(new GradeResponse(gradeFacade.getAllGradesSorted(gradeSortType)));\n+        List<GradeDto> gradeDtoList = GradeMapper.gradeListToGradeDtoList(gradeFacade.getAllGradesSorted(gradeSortType));\n+        return ResponseEntity.ok(new GradeResponse(gradeDtoList));\n     }\n \n     @GetMapping(\"/students/{studentId}/grades\")\n     public ResponseEntity<GradeResponse> getStudentGradesByIdPath(@PathVariable long studentId,\n                                                                   @RequestParam(value = \"sortType\", required = false, defaultValue = \"INSERTION_DATE_ASC\") GradeSortTypes gradeSortType) {\n         List<Grade> studentGradeList = gradeFacade.getSortedGradesForOneStudent(studentId, gradeSortType);\n         if (!studentGradeList.isEmpty()) {\n-            return ResponseEntity.ok(new GradeResponse(studentGradeList));\n+            List<GradeDto> gradeDtoList = GradeMapper.gradeListToGradeDtoList(studentGradeList);\n+            return ResponseEntity.ok(new GradeResponse(gradeDtoList));\n         } else {\n             return ResponseEntity.notFound().build();\n         }\n@@ -40,7 +43,8 @@ public GradeController(GradeFacade gradeFacade) {\n                                                           @RequestParam(value = \"sortType\", required = false, defaultValue = \"INSERTION_DATE_ASC\") GradeSortTypes gradeSortType) {\n         List<Grade> studentGradeList = gradeFacade.getSortedGradesForOneStudent(studentId,gradeSortType);\n         if (!studentGradeList.isEmpty()) {\n-            return ResponseEntity.ok(new GradeResponse(studentGradeList));\n+            List<GradeDto> studentGradeDtoList = GradeMapper.gradeListToGradeDtoList(studentGradeList);\n+            return ResponseEntity.ok(new GradeResponse(studentGradeDtoList));\n         } else {\n             return ResponseEntity.notFound().build();\n         }"
  },
  {
    "sha": "24a0f611fb3cf08df6df39ff2037fd8db4704e10",
    "filename": "src/main/java/com/example/demo/grade/infrastructure/api/GradeDto.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/grade/infrastructure/api/GradeDto.java",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/grade/infrastructure/api/GradeDto.java",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/src/main/java/com/example/demo/grade/infrastructure/api/GradeDto.java?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -0,0 +1,17 @@\n+package com.example.demo.grade.infrastructure.api;\n+\n+import com.example.demo.grade.domain.GradeScale;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.time.LocalDate;\n+\n+@Getter\n+@AllArgsConstructor\n+public class GradeDto {\n+    private final int gradeId;\n+    private final GradeScale gradeScale;\n+    private final long studentId;\n+    private final LocalDate insertionDate;\n+    private final int gradeWeight;\n+}"
  },
  {
    "sha": "7abf4b938d8975b6161cbf04c71f72156ca733af",
    "filename": "src/main/java/com/example/demo/grade/infrastructure/api/GradeMapper.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/grade/infrastructure/api/GradeMapper.java",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/grade/infrastructure/api/GradeMapper.java",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/src/main/java/com/example/demo/grade/infrastructure/api/GradeMapper.java?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -0,0 +1,35 @@\n+package com.example.demo.grade.infrastructure.api;\n+\n+import com.example.demo.grade.domain.Grade;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class GradeMapper {\n+\n+    public static List<GradeDto> gradeListToGradeDtoList(List<Grade> gradeList){\n+        List<GradeDto> gradeDtoList = gradeList.stream()\n+                .map(GradeMapper::toDto)\n+                .collect(Collectors.toList());\n+        return gradeDtoList;\n+    }\n+\n+    public static GradeDto toDto(Grade grade) {\n+        GradeDto gradeDto = new GradeDto(grade.getGradeId(),\n+                grade.getGradeScale(),\n+                grade.getStudentId(),\n+                grade.getInsertionDate(),\n+                grade.getGradeWeight());\n+        return gradeDto;\n+    }\n+\n+    public static Grade fromDto(GradeDto gradeDto) {\n+        Grade grade = new Grade(gradeDto.getGradeId(),\n+                gradeDto.getGradeScale(),\n+                gradeDto.getStudentId(),\n+                gradeDto.getInsertionDate(),\n+                gradeDto.getGradeWeight());\n+        return grade;\n+    }\n+}"
  },
  {
    "sha": "0f43e0e0fa4a8537f7038c58d25c2641d85561e5",
    "filename": "src/main/java/com/example/demo/grade/infrastructure/api/GradeResponse.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/grade/infrastructure/api/GradeResponse.java",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/grade/infrastructure/api/GradeResponse.java",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/src/main/java/com/example/demo/grade/infrastructure/api/GradeResponse.java?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -5,19 +5,19 @@\n import java.util.List;\n \n public class GradeResponse {\n-    private List<Grade> gradeList;\n+    private List<GradeDto> gradeList;\n     private int gradeCount;\n \n-    public GradeResponse(List<Grade> gradeList) {\n+    public GradeResponse(List<GradeDto> gradeList) {\n         this.gradeList = gradeList;\n         this.gradeCount = gradeList.size();\n     }\n \n-    public List<Grade> getGradeList() {\n+    public List<GradeDto> getGradeList() {\n         return gradeList;\n     }\n \n-    public void setGradeList(List<Grade> gradeList) {\n+    public void setGradeList(List<GradeDto> gradeList) {\n         this.gradeList = gradeList;\n     }\n "
  },
  {
    "sha": "19f87ebc5b65bafcef67f6218e4aa9f778780303",
    "filename": "src/main/java/com/example/demo/student/domain/Student.java",
    "status": "modified",
    "additions": 5,
    "deletions": 67,
    "changes": 72,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/student/domain/Student.java",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/student/domain/Student.java",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/src/main/java/com/example/demo/student/domain/Student.java?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -1,8 +1,12 @@\n package com.example.demo.student.domain;\n \n-import java.time.LocalDate;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n \n+import java.time.LocalDate;\n \n+@AllArgsConstructor\n+@Getter\n public class Student {\n \n     private Long id;\n@@ -11,72 +15,6 @@\n     private LocalDate dateOfBirth;\n     private Integer age;\n     private Gender gender;\n-\n-    public Student() {\n-    }\n-\n-    public Student(Long id, String name, String email, LocalDate dateOfBirth, Integer age) {\n-        this.id = id;\n-        this.name = name;\n-        this.email = email;\n-        this.dateOfBirth = dateOfBirth;\n-        this.age = age;\n-    }\n-\n-    public Student(String name, String email, LocalDate dateOfBirth, Integer age) {\n-        this.name = name;\n-        this.email = email;\n-        this.dateOfBirth = dateOfBirth;\n-        this.age = age;\n-    }\n-\n-    public Long getId() {\n-        return id;\n-    }\n-\n-    public String getName() {\n-        return name;\n-    }\n-\n-    public String getEmail() {\n-        return email;\n-    }\n-\n-    public LocalDate getDateOfBirth() {\n-        return dateOfBirth;\n-    }\n-\n-    public Integer getAge() {\n-        return age;\n-    }\n-\n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n-\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n-\n-    public void setEmail(String email) {\n-        this.email = email;\n-    }\n-\n-    public void setDateOfBirth(LocalDate dateOfBirth) {\n-        this.dateOfBirth = dateOfBirth;\n-    }\n-\n-    public void setAge(Integer age) {\n-        this.age = age;\n-    }\n-\n-    public Gender getGender() {\n-        return gender;\n-    }\n-\n-    public void setGender(Gender gender) {\n-        this.gender = gender;\n-    }\n }\n \n "
  },
  {
    "sha": "8711e4e01face775fb1de907038eb5ddec5221c9",
    "filename": "src/main/java/com/example/demo/student/infrastructure/api/StudentController.java",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/student/infrastructure/api/StudentController.java",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/student/infrastructure/api/StudentController.java",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/src/main/java/com/example/demo/student/infrastructure/api/StudentController.java?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -7,6 +7,7 @@\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.*;\n \n+import java.util.List;\n import java.util.Optional;\n \n @RestController\n@@ -22,10 +23,10 @@ public StudentController(StudentFacade studentFacade) {\n     }\n \n     @GetMapping(\"/{ID}\")\n-    public ResponseEntity<Student> getStudentByIdPath(@PathVariable(value = \"ID\") int studentId) {\n+    public ResponseEntity<StudentDto> getStudentByIdPath(@PathVariable(value = \"ID\") int studentId) {\n         Optional<Student> student = studentFacade.getStudent(studentId);\n         if (student.isPresent()) {\n-            return ResponseEntity.ok(student.get());\n+            return ResponseEntity.ok(StudentMapper.toDto(student.get()));\n             //new ResponseEntity<>(student.get(), HttpStatus.OK);\n         } else {\n             return ResponseEntity.notFound().build();\n@@ -34,15 +35,15 @@ public StudentController(StudentFacade studentFacade) {\n \n     @GetMapping\n     public ResponseEntity<StudentResponse> getAllStudents(@RequestParam(value = \"sortType\", required = false, defaultValue = \"NAME_ASC\") StudentSortTypes studentSortType) {\n-\n-        return new ResponseEntity<>(new StudentResponse(studentFacade.getSortedStudents(studentSortType)), HttpStatus.OK);\n+        List<StudentDto> studentDtoList = StudentMapper.studentListToStudentDtoList(studentFacade.getSortedStudents(studentSortType));\n+        return new ResponseEntity<>(new StudentResponse(studentDtoList), HttpStatus.OK);\n     }\n \n     @GetMapping(\"/byId\")\n-    public ResponseEntity<Student> getStudent(@RequestParam(value = \"ID\") int studentId) {\n+    public ResponseEntity<StudentDto> getStudent(@RequestParam(value = \"ID\") int studentId) {\n         Optional<Student> student = studentFacade.getStudent(studentId);\n         if (student.isPresent()) {\n-            return ResponseEntity.ok(student.get());\n+            return ResponseEntity.ok(StudentMapper.toDto(student.get()));\n         } else {\n             return ResponseEntity.notFound().build();\n         }"
  },
  {
    "sha": "d583fde1bd24a0d437436f0e6920a9b15c9cebcc",
    "filename": "src/main/java/com/example/demo/student/infrastructure/api/StudentDto.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/student/infrastructure/api/StudentDto.java",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/student/infrastructure/api/StudentDto.java",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/src/main/java/com/example/demo/student/infrastructure/api/StudentDto.java?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -0,0 +1,18 @@\n+package com.example.demo.student.infrastructure.api;\n+\n+import com.example.demo.student.domain.Gender;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.time.LocalDate;\n+\n+@Getter\n+@AllArgsConstructor\n+public class StudentDto {\n+    private Long id;\n+    private String name;\n+    private String email;\n+    private LocalDate dateOfBirth;\n+    private Integer age;\n+    private Gender gender;\n+}"
  },
  {
    "sha": "2f7ab27d59ea75be950acf46ad9a8987e842de0e",
    "filename": "src/main/java/com/example/demo/student/infrastructure/api/StudentMapper.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/student/infrastructure/api/StudentMapper.java",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/student/infrastructure/api/StudentMapper.java",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/src/main/java/com/example/demo/student/infrastructure/api/StudentMapper.java?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -0,0 +1,37 @@\n+package com.example.demo.student.infrastructure.api;\n+\n+import com.example.demo.student.domain.Student;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class StudentMapper {\n+    public static List<StudentDto> studentListToStudentDtoList(List<Student> studentList) {\n+        List<StudentDto> studentDtoList = studentList.stream()\n+                .map(StudentMapper::toDto)\n+                .collect(Collectors.toList());\n+        return studentDtoList;\n+    }\n+\n+    public static Student fromDto(StudentDto studentDto) {\n+        Student student = new Student(studentDto.getId(),\n+                studentDto.getName(),\n+                studentDto.getEmail(),\n+                studentDto.getDateOfBirth(),\n+                studentDto.getAge(),\n+                studentDto.getGender());\n+        return student;\n+    }\n+\n+\n+    public static StudentDto toDto(Student student) {\n+        StudentDto studentDto = new StudentDto(student.getId(),\n+                student.getName(),\n+                student.getEmail(),\n+                student.getDateOfBirth(),\n+                student.getAge(),\n+                student.getGender());\n+        return studentDto;\n+    }\n+}\n+"
  },
  {
    "sha": "76150a58467e202188cbf15c4d3dc399c22226b5",
    "filename": "src/main/java/com/example/demo/student/infrastructure/api/StudentResponse.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/hantczak/StudentDataStorage/blob/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/student/infrastructure/api/StudentResponse.java",
    "raw_url": "https://github.com/hantczak/StudentDataStorage/raw/48df22c5631a319228d8314e167818a65395159b/src/main/java/com/example/demo/student/infrastructure/api/StudentResponse.java",
    "contents_url": "https://api.github.com/repos/hantczak/StudentDataStorage/contents/src/main/java/com/example/demo/student/infrastructure/api/StudentResponse.java?ref=48df22c5631a319228d8314e167818a65395159b",
    "patch": "@@ -5,19 +5,19 @@\n import java.util.List;\n \n public class StudentResponse {\n-    private List<Student> students;\n+    private List<StudentDto> students;\n     private int studentCount;\n \n-    public StudentResponse(List<Student> students){\n+    public StudentResponse(List<StudentDto> students){\n         this.students = students;\n         this.studentCount= students.size();\n     }\n \n-    public List<Student> getStudents() {\n+    public List<StudentDto> getStudents() {\n         return students;\n     }\n \n-    public void setStudents(List<Student> students) {\n+    public void setStudents(List<StudentDto> students) {\n         this.students = students;\n     }\n "
  }
]
