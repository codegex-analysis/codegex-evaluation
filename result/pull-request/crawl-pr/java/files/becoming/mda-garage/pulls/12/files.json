[
  {
    "sha": "e76d1f3241d38db9b28f05133823bbed1ad289ff",
    "filename": ".mvn/wrapper/MavenWrapperDownloader.java",
    "status": "modified",
    "additions": 6,
    "deletions": 7,
    "changes": 13,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/.mvn/wrapper/MavenWrapperDownloader.java",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/.mvn/wrapper/MavenWrapperDownloader.java",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/.mvn/wrapper/MavenWrapperDownloader.java?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -13,20 +13,19 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n import java.net.*;\n import java.io.*;\n import java.nio.channels.*;\n import java.util.Properties;\n \n public class MavenWrapperDownloader {\n \n-    private static final String WRAPPER_VERSION      = \"0.5.6\";\n+    private static final String WRAPPER_VERSION = \"0.5.6\";\n     /**\n      * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.\n      */\n     private static final String DEFAULT_DOWNLOAD_URL = \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/\"\n-            + WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \".jar\";\n+        + WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \".jar\";\n \n     /**\n      * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to\n@@ -55,7 +54,7 @@ public static void main(String args[]) {\n         // wrapperUrl parameter.\n         File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);\n         String url = DEFAULT_DOWNLOAD_URL;\n-        if (mavenWrapperPropertyFile.exists()) {\n+        if(mavenWrapperPropertyFile.exists()) {\n             FileInputStream mavenWrapperPropertyFileInputStream = null;\n             try {\n                 mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\n@@ -66,7 +65,7 @@ public static void main(String args[]) {\n                 System.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");\n             } finally {\n                 try {\n-                    if (mavenWrapperPropertyFileInputStream != null) {\n+                    if(mavenWrapperPropertyFileInputStream != null) {\n                         mavenWrapperPropertyFileInputStream.close();\n                     }\n                 } catch (IOException e) {\n@@ -77,8 +76,8 @@ public static void main(String args[]) {\n         System.out.println(\"- Downloading from: \" + url);\n \n         File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);\n-        if (!outputFile.getParentFile().exists()) {\n-            if (!outputFile.getParentFile().mkdirs()) {\n+        if(!outputFile.getParentFile().exists()) {\n+            if(!outputFile.getParentFile().mkdirs()) {\n                 System.out.println(\n                         \"- ERROR creating output directory '\" + outputFile.getParentFile().getAbsolutePath() + \"'\");\n             }"
  },
  {
    "sha": "b58672daa68675d17d734cab66c4b996ff8f3e92",
    "filename": "Readme.md",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/Readme.md",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/Readme.md",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/Readme.md?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -24,3 +24,20 @@ Garage for storing expensive cars, like Porsche, Aston Martin, Lamborghini, etc.\n - Backend service with exposed API\n - Optional - Frontend App running in a browser\n \n+# 08/03\n+\n+add State Diagram for the place inside in Garage\n+\n+# 15/03\n+\n+Read links :\n+ * [Wikipedia] : (https://en.wikipedia.org/wiki/Domain_model)\n+ * [Create Domain Model] : (https://sparxsystems.com/enterprise_architect_user_guide/14.0/model_domains/create_a_domain_model.html)\n+\n+## Description\n+\n+Le terme \"Domain model\" est un modèle de conception qui incopore à la fois les données et le comportement. En jargon informatique, cela signifie qu'un modèle de domaine est une représentation formelle d'un domaine de connaissance avec des concepts, des rôles, des types de données, des individus et des règles utilisés pour définir une logique de description.\n+\n+En gros, c'est un système qui décrit des aspects d'un domaine spécifique, il est aussi appelé modèle d'objet métier. Le modèle est ensuite utilisé pour répondre à des besoins ou pour solutionner des problématiques. Le modèle de domaine est une représentation de concepts significatifs du monde réel pertinents pour le domaine qui doivent être modélisés dans un logiciel. \n+\n+ Les concepts incluent les données impliquées dans l'entreprise et les règles que l'entreprise utilise en relation avec ces données. Cela permet de communiquer une représentation du modèle à des parties prenantes non technique telles que par exemple les bases de données ou des composants logiciels en cours de conception."
  },
  {
    "sha": "549e00a2a96fa9d7c5dbc9859664a78d980158c2",
    "filename": "bin/.gitignore",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/.gitignore",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/.gitignore",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/.gitignore?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,33 @@\n+HELP.md\n+target/\n+!.mvn/wrapper/maven-wrapper.jar\n+!**/src/main/**/target/\n+!**/src/test/**/target/\n+\n+### STS ###\n+.apt_generated\n+.classpath\n+.factorypath\n+.project\n+.settings\n+.springBeans\n+.sts4-cache\n+\n+### IntelliJ IDEA ###\n+.idea\n+*.iws\n+*.iml\n+*.ipr\n+\n+### NetBeans ###\n+/nbproject/private/\n+/nbbuild/\n+/dist/\n+/nbdist/\n+/.nb-gradle/\n+build/\n+!**/src/main/**/build/\n+!**/src/test/**/build/\n+\n+### VS Code ###\n+.vscode/"
  },
  {
    "sha": "fbb1350a907a9c9e2c1320a2f5929b8a2d237de2",
    "filename": "bin/.mvn/wrapper/MavenWrapperDownloader.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/.mvn/wrapper/MavenWrapperDownloader.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/.mvn/wrapper/MavenWrapperDownloader.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/.mvn/wrapper/MavenWrapperDownloader.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "2cc7d4a55c0cd0092912bf49ae38b3a9e3fd0054",
    "filename": "bin/.mvn/wrapper/maven-wrapper.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/.mvn/wrapper/maven-wrapper.jar",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/.mvn/wrapper/maven-wrapper.jar",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/.mvn/wrapper/maven-wrapper.jar?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "642d572ce90e5085986bdd9c9204b9404f028084",
    "filename": "bin/.mvn/wrapper/maven-wrapper.properties",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/.mvn/wrapper/maven-wrapper.properties?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,2 @@\n+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip\n+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
  },
  {
    "sha": "3d7a46623757026c14c05660b0e3e7bab751f48d",
    "filename": "bin/LICENSE",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/LICENSE",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/LICENSE",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/LICENSE?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,21 @@\n+MIT License\n+\n+Copyright (c) Rodislav MOLDOVAN\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE.\n\\ No newline at end of file"
  },
  {
    "sha": "e2e2c103bfa1f6244263a0bc8cb5da2f29f1b952",
    "filename": "bin/Readme.md",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/Readme.md",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/Readme.md",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/Readme.md?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,30 @@\n+# Garage Management Software\n+\n+## Need\n+\n+Garage for storing expensive cars, like Porsche, Aston Martin, Lamborghini, etc.\n+\n+## Actors\n+\n+- Rentees - people who rented places in garage\n+- Owner - person who owns the garage\n+\n+## Features\n+\n+- Owner - open garage\n+- Owner - close garage\n+\n+- Rentee - book place\n+- Rentee - unbook place\n+- Rentee - enter garage with a car\n+- Rentee - exit garage with a car\n+\n+## Solution\n+\n+- Backend service with exposed API\n+- Optional - Frontend App running in a browser\n+\n+# 08/03\n+\n+add State Diagram for the place inside in Garage\n+"
  },
  {
    "sha": "a16b5431b4c3cab50323a3f558003fd0abd87dad",
    "filename": "bin/mvnw",
    "status": "added",
    "additions": 310,
    "deletions": 0,
    "changes": 310,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/mvnw",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/mvnw",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/mvnw?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,310 @@\n+#!/bin/sh\n+# ----------------------------------------------------------------------------\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#    https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+# ----------------------------------------------------------------------------\n+\n+# ----------------------------------------------------------------------------\n+# Maven Start Up Batch script\n+#\n+# Required ENV vars:\n+# ------------------\n+#   JAVA_HOME - location of a JDK home dir\n+#\n+# Optional ENV vars\n+# -----------------\n+#   M2_HOME - location of maven2's installed home dir\n+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+#     e.g. to debug Maven itself, use\n+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+# ----------------------------------------------------------------------------\n+\n+if [ -z \"$MAVEN_SKIP_RC\" ] ; then\n+\n+  if [ -f /etc/mavenrc ] ; then\n+    . /etc/mavenrc\n+  fi\n+\n+  if [ -f \"$HOME/.mavenrc\" ] ; then\n+    . \"$HOME/.mavenrc\"\n+  fi\n+\n+fi\n+\n+# OS specific support.  $var _must_ be set to either true or false.\n+cygwin=false;\n+darwin=false;\n+mingw=false\n+case \"`uname`\" in\n+  CYGWIN*) cygwin=true ;;\n+  MINGW*) mingw=true;;\n+  Darwin*) darwin=true\n+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n+    if [ -z \"$JAVA_HOME\" ]; then\n+      if [ -x \"/usr/libexec/java_home\" ]; then\n+        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n+      else\n+        export JAVA_HOME=\"/Library/Java/Home\"\n+      fi\n+    fi\n+    ;;\n+esac\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  if [ -r /etc/gentoo-release ] ; then\n+    JAVA_HOME=`java-config --jre-home`\n+  fi\n+fi\n+\n+if [ -z \"$M2_HOME\" ] ; then\n+  ## resolve links - $0 may be a link to maven's home\n+  PRG=\"$0\"\n+\n+  # need this for relative symlinks\n+  while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+      PRG=\"$link\"\n+    else\n+      PRG=\"`dirname \"$PRG\"`/$link\"\n+    fi\n+  done\n+\n+  saveddir=`pwd`\n+\n+  M2_HOME=`dirname \"$PRG\"`/..\n+\n+  # make it fully qualified\n+  M2_HOME=`cd \"$M2_HOME\" && pwd`\n+\n+  cd \"$saveddir\"\n+  # echo Using m2 at $M2_HOME\n+fi\n+\n+# For Cygwin, ensure paths are in UNIX format before anything is touched\n+if $cygwin ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\n+fi\n+\n+# For Mingw, ensure paths are in UNIX format before anything is touched\n+if $mingw ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ]; then\n+  javaExecutable=\"`which javac`\"\n+  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n+    # readlink(1) is not available as standard on Solaris 10.\n+    readLink=`which readlink`\n+    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n+      if $darwin ; then\n+        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n+      else\n+        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n+      fi\n+      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n+      JAVA_HOME=\"$javaHome\"\n+      export JAVA_HOME\n+    fi\n+  fi\n+fi\n+\n+if [ -z \"$JAVACMD\" ] ; then\n+  if [ -n \"$JAVA_HOME\"  ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+      # IBM's JDK on AIX uses strange locations for the executables\n+      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+      JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+  else\n+    JAVACMD=\"`which java`\"\n+  fi\n+fi\n+\n+if [ ! -x \"$JAVACMD\" ] ; then\n+  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n+  echo \"  We cannot execute $JAVACMD\" >&2\n+  exit 1\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  echo \"Warning: JAVA_HOME environment variable is not set.\"\n+fi\n+\n+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n+\n+# traverses directory structure from process work directory to filesystem root\n+# first directory with .mvn subdirectory is considered project base directory\n+find_maven_basedir() {\n+\n+  if [ -z \"$1\" ]\n+  then\n+    echo \"Path not specified to find_maven_basedir\"\n+    return 1\n+  fi\n+\n+  basedir=\"$1\"\n+  wdir=\"$1\"\n+  while [ \"$wdir\" != '/' ] ; do\n+    if [ -d \"$wdir\"/.mvn ] ; then\n+      basedir=$wdir\n+      break\n+    fi\n+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n+    if [ -d \"${wdir}\" ]; then\n+      wdir=`cd \"$wdir/..\"; pwd`\n+    fi\n+    # end of workaround\n+  done\n+  echo \"${basedir}\"\n+}\n+\n+# concatenates all lines of a file\n+concat_lines() {\n+  if [ -f \"$1\" ]; then\n+    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n+  fi\n+}\n+\n+BASE_DIR=`find_maven_basedir \"$(pwd)\"`\n+if [ -z \"$BASE_DIR\" ]; then\n+  exit 1;\n+fi\n+\n+##########################################################################################\n+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+# This allows using the maven wrapper in projects that prohibit checking in binary data.\n+##########################################################################################\n+if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n+    fi\n+else\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n+    fi\n+    if [ -n \"$MVNW_REPOURL\" ]; then\n+      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    else\n+      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    fi\n+    while IFS=\"=\" read key value; do\n+      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n+      esac\n+    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Downloading from: $jarUrl\"\n+    fi\n+    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n+    if $cygwin; then\n+      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n+    fi\n+\n+    if command -v wget > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found wget ... using wget\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n+        else\n+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n+        fi\n+    elif command -v curl > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found curl ... using curl\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        else\n+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        fi\n+\n+    else\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Falling back to using Java to download\"\n+        fi\n+        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n+        # For Cygwin, switch paths to Windows format before running javac\n+        if $cygwin; then\n+          javaClass=`cygpath --path --windows \"$javaClass\"`\n+        fi\n+        if [ -e \"$javaClass\" ]; then\n+            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n+                fi\n+                # Compiling the Java class\n+                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n+            fi\n+            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                # Running the downloader\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Running MavenWrapperDownloader.java ...\"\n+                fi\n+                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n+            fi\n+        fi\n+    fi\n+fi\n+##########################################################################################\n+# End of extension\n+##########################################################################################\n+\n+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\n+if [ \"$MVNW_VERBOSE\" = true ]; then\n+  echo $MAVEN_PROJECTBASEDIR\n+fi\n+MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n+  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\n+fi\n+\n+# Provide a \"standardized\" way to retrieve the CLI args that will\n+# work with both Windows and non-Windows executions.\n+MAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\n+export MAVEN_CMD_LINE_ARGS\n+\n+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+exec \"$JAVACMD\" \\\n+  $MAVEN_OPTS \\\n+  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n+  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\""
  },
  {
    "sha": "c8d43372c986d97911cdc21bd87e0cbe3d83bdda",
    "filename": "bin/mvnw.cmd",
    "status": "added",
    "additions": 182,
    "deletions": 0,
    "changes": 182,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/mvnw.cmd",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/mvnw.cmd",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/mvnw.cmd?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,182 @@\n+@REM ----------------------------------------------------------------------------\n+@REM Licensed to the Apache Software Foundation (ASF) under one\n+@REM or more contributor license agreements.  See the NOTICE file\n+@REM distributed with this work for additional information\n+@REM regarding copyright ownership.  The ASF licenses this file\n+@REM to you under the Apache License, Version 2.0 (the\n+@REM \"License\"); you may not use this file except in compliance\n+@REM with the License.  You may obtain a copy of the License at\n+@REM\n+@REM    https://www.apache.org/licenses/LICENSE-2.0\n+@REM\n+@REM Unless required by applicable law or agreed to in writing,\n+@REM software distributed under the License is distributed on an\n+@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+@REM KIND, either express or implied.  See the License for the\n+@REM specific language governing permissions and limitations\n+@REM under the License.\n+@REM ----------------------------------------------------------------------------\n+\n+@REM ----------------------------------------------------------------------------\n+@REM Maven Start Up Batch script\n+@REM\n+@REM Required ENV vars:\n+@REM JAVA_HOME - location of a JDK home dir\n+@REM\n+@REM Optional ENV vars\n+@REM M2_HOME - location of maven2's installed home dir\n+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+@REM     e.g. to debug Maven itself, use\n+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+@REM ----------------------------------------------------------------------------\n+\n+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n+@echo off\n+@REM set title of command window\n+title %0\n+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n+@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n+\n+@REM set %HOME% to equivalent of $HOME\n+if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n+\n+@REM Execute a user defined script before this one\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n+@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n+if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n+:skipRcPre\n+\n+@setlocal\n+\n+set ERROR_CODE=0\n+\n+@REM To isolate internal variables from possible post scripts, we use another setlocal\n+@setlocal\n+\n+@REM ==== START VALIDATION ====\n+if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n+\n+echo.\n+echo Error: JAVA_HOME not found in your environment. >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+:OkJHome\n+if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n+\n+echo.\n+echo Error: JAVA_HOME is set to an invalid directory. >&2\n+echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+@REM ==== END VALIDATION ====\n+\n+:init\n+\n+@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n+@REM Fallback to current working directory if not found.\n+\n+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n+IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n+\n+set EXEC_DIR=%CD%\n+set WDIR=%EXEC_DIR%\n+:findBaseDir\n+IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n+cd ..\n+IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n+set WDIR=%CD%\n+goto findBaseDir\n+\n+:baseDirFound\n+set MAVEN_PROJECTBASEDIR=%WDIR%\n+cd \"%EXEC_DIR%\"\n+goto endDetectBaseDir\n+\n+:baseDirNotFound\n+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n+cd \"%EXEC_DIR%\"\n+\n+:endDetectBaseDir\n+\n+IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n+\n+@setlocal EnableExtensions EnableDelayedExpansion\n+for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n+\n+:endReadAdditionalConfig\n+\n+SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n+set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+\n+FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n+    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n+)\n+\n+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n+if exist %WRAPPER_JAR% (\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Found %WRAPPER_JAR%\n+    )\n+) else (\n+    if not \"%MVNW_REPOURL%\" == \"\" (\n+        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    )\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n+        echo Downloading from: %DOWNLOAD_URL%\n+    )\n+\n+    powershell -Command \"&{\"^\n+\t\t\"$webclient = new-object System.Net.WebClient;\"^\n+\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n+\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n+\t\t\"}\"^\n+\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n+\t\t\"}\"\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Finished downloading %WRAPPER_JAR%\n+    )\n+)\n+@REM End of extension\n+\n+@REM Provide a \"standardized\" way to retrieve the CLI args that will\n+@REM work with both Windows and non-Windows executions.\n+set MAVEN_CMD_LINE_ARGS=%*\n+\n+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n+if ERRORLEVEL 1 goto error\n+goto end\n+\n+:error\n+set ERROR_CODE=1\n+\n+:end\n+@endlocal & set ERROR_CODE=%ERROR_CODE%\n+\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n+@REM check for post script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\n+if exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n+:skipRcPost\n+\n+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\n+if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n+\n+if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n+\n+exit /B %ERROR_CODE%"
  },
  {
    "sha": "1c26b6e38184e18c445cec657fb3871634ded5f6",
    "filename": "bin/pom.xml",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/pom.xml",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/pom.xml",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/pom.xml?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,68 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<parent>\n+\t\t<groupId>org.springframework.boot</groupId>\n+\t\t<artifactId>spring-boot-starter-parent</artifactId>\n+\t\t<version>2.4.3</version>\n+\t\t<relativePath/> <!-- lookup parent from repository -->\n+\t</parent>\n+\t<groupId>fr.idmc.m2</groupId>\n+\t<artifactId>model-driven-architecture</artifactId>\n+\t<version>0.0.1-SNAPSHOT</version>\n+\t<name>Model Driven Architecture</name>\n+\t<description>Demo MDA</description>\n+\t<properties>\n+\t\t<java.version>11</java.version>\n+\t</properties>\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.h2database</groupId>\n+\t\t\t<artifactId>h2</artifactId>\n+\t\t\t<scope>runtime</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-configuration-processor</artifactId>\n+\t\t\t<optional>true</optional>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.projectlombok</groupId>\n+\t\t\t<artifactId>lombok</artifactId>\n+\t\t\t<optional>true</optional>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t</dependencies>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludes>\n+\t\t\t\t\t\t<exclude>\n+\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n+\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n+\t\t\t\t\t\t</exclude>\n+\t\t\t\t\t</excludes>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+</project>"
  },
  {
    "sha": "03735d0bb1e7a0cb8ba8e242ace0fb90e1a40520",
    "filename": "bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/Main.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/Main.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/Main.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/Main.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "593d0f226a7f005d9bb8915122b4d94faf177826",
    "filename": "bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/ModelDrivenArchitectureApplication.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/ModelDrivenArchitectureApplication.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/ModelDrivenArchitectureApplication.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/ModelDrivenArchitectureApplication.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "9bb4d89e9376872dc0d379103c5fe2df356f2bd7",
    "filename": "bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/core/GarageConfig.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/core/GarageConfig.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/core/GarageConfig.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/core/GarageConfig.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "32ff62502f26fc8aed4b9309823ddd14119131ab",
    "filename": "bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/core/GarageController.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/core/GarageController.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/core/GarageController.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/core/GarageController.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "bf106bb5f9935a7afff2f19f9b85651e007ac287",
    "filename": "bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/actor/Owner.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/actor/Owner.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/actor/Owner.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/actor/Owner.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "d9802eecf9a5d26c8a70a62f665971b1fc228a94",
    "filename": "bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/DigitalKey.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/DigitalKey.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/DigitalKey.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/DigitalKey.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "f2d444d615b34b2f2e0e2fa55ee8baa3759e75fc",
    "filename": "bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/DigitalLock.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/DigitalLock.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/DigitalLock.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/DigitalLock.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "e7de2e787608939a08334861503ee02311fdbe92",
    "filename": "bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/Gate.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/Gate.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/Gate.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/Gate.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "38d752953f6b56ff882902fb7426e481e5dfdaab",
    "filename": "bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/Motor.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/Motor.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/Motor.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/java/fr/idmc/m2/modeldrivenarchitecture/model/garage/Motor.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "e8dd884d5dc6602dfa98a8b9636f31588e5ff2f2",
    "filename": "bin/src/main/java/tech/becoming/mda/one/OneApplication.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/tech/becoming/mda/one/OneApplication.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/java/tech/becoming/mda/one/OneApplication.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/java/tech/becoming/mda/one/OneApplication.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "8b137891791fe96927ad78e64b0aad7bded08bdc",
    "filename": "bin/src/main/resources/application.properties",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/resources/application.properties",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/main/resources/application.properties?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1 @@\n+"
  },
  {
    "sha": "7b37a6ccbf9b5a695c9c42bf8756efa29f526282",
    "filename": "bin/src/test/java/fr/idmc/m2/modeldrivenarchitecture/ModelDrivenArchitectureApplicationTests.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/test/java/fr/idmc/m2/modeldrivenarchitecture/ModelDrivenArchitectureApplicationTests.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/test/java/fr/idmc/m2/modeldrivenarchitecture/ModelDrivenArchitectureApplicationTests.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/test/java/fr/idmc/m2/modeldrivenarchitecture/ModelDrivenArchitectureApplicationTests.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "bcd3013f812dd4b2e8201e9dd6b4e426d62613c5",
    "filename": "bin/src/test/java/tech/becoming/mda/one/OneApplicationTests.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/test/java/tech/becoming/mda/one/OneApplicationTests.class",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/src/test/java/tech/becoming/mda/one/OneApplicationTests.class",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/src/test/java/tech/becoming/mda/one/OneApplicationTests.class?ref=5ff0646461c5eb30096b7545d92db3948962f5b9"
  },
  {
    "sha": "ddbc02eaacdc6591fd956a92113b00f7e7a8158b",
    "filename": "bin/uml/Components.puml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/Components.puml",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/Components.puml",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/uml/Components.puml?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,19 @@\n+@startuml\n+'https://plantuml.com/component-diagram\n+\n+\n+package \"Actors\" {\n+  [Garage Owner] as [owner]\n+  [Rentee] as [rentee]\n+}\n+\n+package \"Garage\" {\n+  [Garage] as [garage]\n+  [Place] as [place]\n+}\n+\n+package \"Cars\" {\n+    [Car] as [car]\n+}\n+\n+@enduml\n\\ No newline at end of file"
  },
  {
    "sha": "8dbd32b6e9862bf7dca358b3959b4dde0cd7c17a",
    "filename": "bin/uml/Open Garage - Fail.puml",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/Open%20Garage%20-%20Fail.puml",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/Open%20Garage%20-%20Fail.puml",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/uml/Open%20Garage%20-%20Fail.puml?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,11 @@\n+@startuml\n+'https://plantuml.com/sequence-diagram\n+autonumber\n+\n+Owner -> DigitalKey: press open button\n+\n+DigitalKey -> DigitalLock: Send open signal\n+DigitalLock -> DigitalLock: Validate the key\n+DigitalLock -> DigitalLock: Validation fails\n+\n+@enduml\n\\ No newline at end of file"
  },
  {
    "sha": "7142d4edfebe19169169717cb98013c9e05d59e5",
    "filename": "bin/uml/Open Garage - Ok.puml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/Open%20Garage%20-%20Ok.puml",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/Open%20Garage%20-%20Ok.puml",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/uml/Open%20Garage%20-%20Ok.puml?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,20 @@\n+@startuml\n+'https://plantuml.com/sequence-diagram\n+autonumber\n+\n+Owner -> DigitalKey: press open button\n+\n+DigitalKey -> DigitalLock: Send open signal\n+DigitalLock -> DigitalLock: Validate the key\n+DigitalLock -> Motor: Open the gate\n+\n+Motor -> Motor: Turn gears\n+Motor -> Gate: Open\n+\n+Gate --> Owner: Gate starts to open\n+Gate -> Garage: Sets Garage open\n+Gate --> Owner: Owner can see the Gate open\n+\n+Owner -> Garage: Walks into the Garage\n+\n+@enduml\n\\ No newline at end of file"
  },
  {
    "sha": "ac2c2d39134fa1dd23d164c98e4b626b03269140",
    "filename": "bin/uml/Open Garage.puml",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/Open%20Garage.puml",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/Open%20Garage.puml",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/uml/Open%20Garage.puml?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,11 @@\n+@startuml\n+'https://plantuml.com/sequence-diagram\n+\n+autonumber\n+\n+Alice -> Bob: Authentication Request\n+Bob --> Alice: Authentication Response\n+\n+Alice -> Bob: Another authentication Request\n+Alice <-- Bob: another authentication Response\n+@enduml\n\\ No newline at end of file"
  },
  {
    "sha": "d026d95490de332ec9ef4beea1e9888391507fa6",
    "filename": "bin/uml/Use Cases.puml",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/Use%20Cases.puml",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/Use%20Cases.puml",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/uml/Use%20Cases.puml?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,22 @@\n+@startuml\n+'https://plantuml.com/use-case-diagram\n+\n+:Garage Owner: as owner\n+(Open Garage) as (open)\n+(Close Garage) as (close)\n+\n+:Rentee: as rentee\n+(Book a place) as (book)\n+(Un-Book a place) as (unbook)\n+(Enter garage with a Car) as (enter)\n+(Exit garage with a Car) as (exit)\n+\n+owner ---> (open)\n+owner ---> (close)\n+\n+rentee --> (book)\n+rentee --> (unbook)\n+rentee --> (enter)\n+rentee --> (exit)\n+\n+@enduml\n\\ No newline at end of file"
  },
  {
    "sha": "c4deac1ef82a723b354e66de0cb204c5ea45bbeb",
    "filename": "bin/uml/state_diagram.puml",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/becoming/mda-garage/blob/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/state_diagram.puml",
    "raw_url": "https://github.com/becoming/mda-garage/raw/5ff0646461c5eb30096b7545d92db3948962f5b9/bin/uml/state_diagram.puml",
    "contents_url": "https://api.github.com/repos/becoming/mda-garage/contents/bin/uml/state_diagram.puml?ref=5ff0646461c5eb30096b7545d92db3948962f5b9",
    "patch": "@@ -0,0 +1,9 @@\n+@startuml\n+scale 600 width\n+\n+[*] -> Available\n+Available --> Unavailable  : take place\n+Unavailable --> Available :  move place\n+\n+\n+@enduml\n\\ No newline at end of file"
  }
]
