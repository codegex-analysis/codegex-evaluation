[
  {
    "sha": "fb5b07bfe219adffa447f379346ce5c25957ac43",
    "filename": ".idea/misc.xml",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/.idea/misc.xml",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/.idea/misc.xml?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -1,5 +1,10 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project version=\"4\">\n+  <component name=\"EntryPointsManager\">\n+    <list size=\"1\">\n+      <item index=\"0\" class=\"java.lang.String\" itemvalue=\"javax.inject.Named\" />\n+    </list>\n+  </component>\n   <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n   <component name=\"FrameworkDetectionExcludesConfiguration\">\n     <file type=\"web\" url=\"file://$PROJECT_DIR$\" />\n@@ -11,7 +16,7 @@\n       </list>\n     </option>\n   </component>\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"false\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\n     <output url=\"file://$PROJECT_DIR$/out\" />\n   </component>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "c0f85e9df37e750acab10a0689411a032af91839",
    "filename": "datasource.cli",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/datasource.cli",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/datasource.cli",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/datasource.cli?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -0,0 +1,11 @@\n+# 1. creating datasource section in standalone.xml config\n+data-source add \\\n+   --jndi-name=java:/jboss/datasources/MySQLDS \\\n+   --name=MySQLDS \\\n+   --connection-url=jdbc:mysql://localhost:3306/java_ee_03_03?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC \\\n+   --driver-name=mysql \\\n+   --user-name=root \\\n+   --password=1234\n+\n+# 2. restarting Wildfly server\n+:reload\n\\ No newline at end of file"
  },
  {
    "sha": "2f6cdd06d367e437dcd52e73400e3b2dc1ce5713",
    "filename": "mysql-driver.cli",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/mysql-driver.cli",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/mysql-driver.cli",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/mysql-driver.cli?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -0,0 +1,12 @@\n+# 1. creating the mysql module in JBOSS_HOME/modules/mysql\n+# put here correct path to your MySQL connection driver\n+module add \\\n+  --name=com.mysql.driver \\\n+  --dependencies=javax.api,javax.transaction.api \\\n+  --resources=C:\\PF\\mysql-connector-java-8.0.11.jar\n+\n+# 2. creating driver section in standalone.xml config\n+/subsystem=datasources/jdbc-driver=mysql:add( driver-name=mysql, driver-module-name=com.mysql.driver, driver-class-name=com.mysql.jdbc.Driver )\n+\n+# 3. restarting Wildfly server\n+:reload\n\\ No newline at end of file"
  },
  {
    "sha": "a5b941cb42c51ad0e30855ddc448c9001fc8b360",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/pom.xml",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/pom.xml",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/pom.xml?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -57,6 +57,33 @@\n       <scope>provided</scope>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.hibernate.javax.persistence</groupId>\n+      <artifactId>hibernate-jpa-2.1-api</artifactId>\n+      <version>1.0.2.Final</version>\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-core</artifactId>\n+      <version>5.3.7.Final</version>\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.hibernate.validator</groupId>\n+      <artifactId>hibernate-validator</artifactId>\n+      <version>6.0.15.Final</version>\n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>mysql</groupId>\n+      <artifactId>mysql-connector-java</artifactId>\n+      <version>8.0.16</version>\n+      <scope>runtime</scope>\n+    </dependency>\n   </dependencies>\n \n   <build>"
  },
  {
    "sha": "d0b4d6eda64dc3393cbfe79e4d836770fa96cbd0",
    "filename": "src/main/java/ru/geekbrains/servlet/CartServlet.java",
    "status": "removed",
    "additions": 0,
    "deletions": 41,
    "changes": 41,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/CartServlet.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/CartServlet.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/CartServlet.java?ref=174c3912aa8432716a1504ab1330ae379a2a5ac9",
    "patch": "@@ -1,41 +0,0 @@\n-package ru.geekbrains.servlet;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import java.io.IOException;\n-\n-@WebServlet(name = \"CartServlet\", urlPatterns = \"/cart\")\n-public class CartServlet extends HttpServlet {\n-\n-    private static Logger logger = LoggerFactory.getLogger(CartServlet.class);\n-\n-    @Override\n-    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-        logger.info(\"New {} request\", this.getServletName());\n-        resp.getWriter().printf(\"<h1>This is a %s </h1>\", getServletInfo());\n-\n-        resp.getWriter().println(\"<ul>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/main'>Главная страница</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/catalog'>Каталог товаров</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/product'>Товар</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/cart'>Корзина</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/order'>Оформить заказ</a></li>\");\n-        resp.getWriter().println(\"</ul>\");\n-    }\n-\n-    @Override\n-    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-        super.doPost(req, resp);\n-    }\n-\n-    @Override\n-    public String getServletInfo() {\n-        return \"CartServlet\";\n-    }\n-}"
  },
  {
    "sha": "265eda0f23604d5e194b1ed6d64401780751d3cb",
    "filename": "src/main/java/ru/geekbrains/servlet/CatalogServlet.java",
    "status": "removed",
    "additions": 0,
    "deletions": 34,
    "changes": 34,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/CatalogServlet.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/CatalogServlet.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/CatalogServlet.java?ref=174c3912aa8432716a1504ab1330ae379a2a5ac9",
    "patch": "@@ -1,34 +0,0 @@\n-package ru.geekbrains.servlet;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import java.io.IOException;\n-\n-@WebServlet(name = \"CatalogServlet\", urlPatterns = \"/catalog\")\n-public class CatalogServlet extends HttpServlet {\n-\n-    private static Logger logger = LoggerFactory.getLogger(CatalogServlet.class);\n-\n-\n-    @Override\n-    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-        logger.info(\"New {} request\", this.getServletName());\n-\n-    }\n-\n-    @Override\n-    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-\n-    }\n-\n-    @Override\n-    public String getServletInfo() {\n-        return \"CatalogServlet\";\n-    }\n-}"
  },
  {
    "sha": "3afe1eee0dfb9c293c291e8b55ad5db97f8095a9",
    "filename": "src/main/java/ru/geekbrains/servlet/CategoryServlet.java",
    "status": "removed",
    "additions": 0,
    "deletions": 94,
    "changes": 94,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/CategoryServlet.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/CategoryServlet.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/CategoryServlet.java?ref=174c3912aa8432716a1504ab1330ae379a2a5ac9",
    "patch": "@@ -1,94 +0,0 @@\n-package ru.geekbrains.servlet;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import ru.geekbrains.servlet.data.category.Category;\n-import ru.geekbrains.servlet.data.category.CategoryData;\n-import ru.geekbrains.servlet.data.user.User;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import java.io.IOException;\n-\n-@WebServlet(name = \"CategoryServlet\", urlPatterns = \"/category/*\")\n-public class CategoryServlet extends HttpServlet {\n-    private static Logger logger = LoggerFactory.getLogger(ProductServlet.class);\n-\n-    private CategoryData categoryData;\n-\n-    @Override\n-    public void init() throws ServletException {\n-        this.categoryData = (CategoryData) getServletContext().getAttribute(\"categoryData\");\n-        if (categoryData == null) {\n-            throw new ServletException(\"Users not initialize error\");\n-        }\n-    }\n-\n-    @Override\n-    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-        logger.info(req.getPathInfo());\n-        if (req.getPathInfo() == null || req.getPathInfo().equals(\"/\")) {\n-            req.setAttribute(\"categories\", categoryData.findAll());\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/category.jsp\").forward(req, resp);\n-        } else if (req.getPathInfo().equals(\"/edit\")) {\n-            Category category = checkCorrectData(req, resp);\n-            if (category == null){\n-                return;\n-            }\n-            req.setAttribute(\"category\", category);\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/category_form.jsp\").forward(req, resp);\n-        } else if (req.getPathInfo().equals(\"/delete\")){\n-            Category category = checkCorrectData(req, resp);\n-            if (category == null){\n-                return;\n-            }\n-            categoryData.deleteById(category.getId());\n-            resp.sendRedirect(getServletContext().getContextPath() + \"/category\");\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/category.jsp\").forward(req, resp);\n-        } else if (req.getPathInfo().equals(\"/new\")){\n-            req.setAttribute(\"user\", new User(\"\", \"\"));\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/category_form.jsp\").forward(req, resp);\n-        }\n-\n-    }\n-\n-    private Category checkCorrectData(HttpServletRequest req, HttpServletResponse resp){\n-        long id;\n-        try {\n-            id = Long.parseLong(req.getParameter(\"id\"));\n-        } catch (NumberFormatException e) {\n-            resp.setStatus(400);\n-            return null;\n-        }\n-        Category category = categoryData.findById(id);\n-        if (category == null) {\n-            resp.setStatus(404);\n-            return null;\n-        }\n-        return category;\n-    }\n-\n-    @Override\n-    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-\n-        Long id = null;\n-\n-        try {\n-            id = Long.parseLong(req.getParameter(\"id\"));\n-        } catch (NumberFormatException ignored) {\n-        }\n-\n-        Category category = new Category(req.getParameter(\"title\"));\n-        category.setId(id);\n-        categoryData.saveOrUpdate(category);\n-        resp.sendRedirect(getServletContext().getContextPath() + \"/category\");\n-    }\n-\n-    @Override\n-    public String getServletInfo() {\n-        return \"CategoryServlet\";\n-    }\n-}"
  },
  {
    "sha": "b3780ff9dc24902e1ad461fa8b49fb993d761fbf",
    "filename": "src/main/java/ru/geekbrains/servlet/MainServlet.java",
    "status": "removed",
    "additions": 0,
    "deletions": 36,
    "changes": 36,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/MainServlet.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/MainServlet.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/MainServlet.java?ref=174c3912aa8432716a1504ab1330ae379a2a5ac9",
    "patch": "@@ -1,36 +0,0 @@\n-package ru.geekbrains.servlet;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-import javax.servlet.*;\n-import javax.servlet.annotation.WebServlet;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import java.io.IOException;\n-\n-@WebServlet(name = \"MainServlet\",urlPatterns = \"/main\")\n-public class MainServlet extends HttpServlet {\n-    private static Logger logger = LoggerFactory.getLogger(MainServlet.class);\n-\n-    @Override\n-    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-        logger.info(\"New request\");\n-\n-        resp.getWriter().printf(\"<h1>This is a %s </h1>\", getServletInfo());\n-        resp.getWriter().println(\"<ul>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/main'>Главная страница</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/catalog'>Каталог товаров</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/product'>Товар</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/cart'>Корзина</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/order'>Оформить заказ</a></li>\");\n-        resp.getWriter().println(\"</ul>\");\n-\n-    }\n-\n-    @Override\n-    public String getServletInfo() {\n-        return \"MainServlet\";\n-    }\n-}"
  },
  {
    "sha": "4daa8c142262e4e44bd55ec44cd6da1c1f27fccf",
    "filename": "src/main/java/ru/geekbrains/servlet/OrderServlet.java",
    "status": "removed",
    "additions": 0,
    "deletions": 41,
    "changes": 41,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/OrderServlet.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/OrderServlet.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/OrderServlet.java?ref=174c3912aa8432716a1504ab1330ae379a2a5ac9",
    "patch": "@@ -1,41 +0,0 @@\n-package ru.geekbrains.servlet;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import java.io.IOException;\n-\n-@WebServlet(name = \"OrderServlet\", urlPatterns = \"/order\")\n-public class OrderServlet extends HttpServlet {\n-\n-    private static Logger logger = LoggerFactory.getLogger(OrderServlet.class);\n-\n-    @Override\n-    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-        logger.info(\"New {} request\", this.getServletName());\n-        resp.getWriter().printf(\"<h1>This is a %s </h1>\", getServletInfo());\n-\n-        resp.getWriter().println(\"<ul>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/main'>Главная страница</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/catalog'>Каталог товаров</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/product'>Товар</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/cart'>Корзина</a></li>\");\n-        resp.getWriter().println(\"<li> <a href='\" + getServletContext().getContextPath() + \"/order'>Оформить заказ</a></li>\");\n-        resp.getWriter().println(\"</ul>\");\n-    }\n-\n-    @Override\n-    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-        super.doPost(req, resp);\n-    }\n-\n-    @Override\n-    public String getServletInfo() {\n-        return \"OrderServlet\";\n-    }\n-}"
  },
  {
    "sha": "0af5306af342d69491afafa2a6bf98b4ad57743b",
    "filename": "src/main/java/ru/geekbrains/servlet/ProductServlet.java",
    "status": "removed",
    "additions": 0,
    "deletions": 103,
    "changes": 103,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/ProductServlet.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/ProductServlet.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/ProductServlet.java?ref=174c3912aa8432716a1504ab1330ae379a2a5ac9",
    "patch": "@@ -1,103 +0,0 @@\n-package ru.geekbrains.servlet;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import ru.geekbrains.servlet.data.product.Product;\n-import ru.geekbrains.servlet.data.product.ProductData;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import java.io.IOException;\n-import java.math.BigDecimal;\n-\n-@WebServlet(name = \"ProductServlet\", urlPatterns = \"/product/*\")\n-public class ProductServlet extends HttpServlet {\n-\n-    private static Logger logger = LoggerFactory.getLogger(ProductServlet.class);\n-\n-    private ProductData productData;\n-\n-    @Override\n-    public void init() throws ServletException {\n-        this.productData = (ProductData) getServletContext().getAttribute(\"productData\");\n-        if (productData == null) {\n-            throw new ServletException(\"Products not initialize error\");\n-        }\n-    }\n-\n-    @Override\n-    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-        logger.info(req.getPathInfo());\n-        if (req.getPathInfo() == null || req.getPathInfo().equals(\"/\")) {\n-            req.setAttribute(\"products\", productData.findAll());\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/product.jsp\").forward(req, resp);\n-        } else if (req.getPathInfo().equals(\"/edit\")) {\n-            Product product = checkCorrectData(req, resp);\n-            if (product == null){\n-                return;\n-            }\n-            req.setAttribute(\"product\", product);\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/product_form.jsp\").forward(req, resp);\n-        } else if (req.getPathInfo().equals(\"/delete\")){\n-            Product product = checkCorrectData(req, resp);\n-            if (product == null){\n-                return;\n-            }\n-            productData.deleteById(product.getId());\n-            resp.sendRedirect(getServletContext().getContextPath() + \"/product\");\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/product.jsp\").forward(req, resp);\n-        } else if (req.getPathInfo().equals(\"/new\")){\n-            req.setAttribute(\"product\", new Product(\"\", \"\", new BigDecimal(0)));\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/product_form.jsp\").forward(req, resp);\n-        }\n-\n-    }\n-\n-    private Product checkCorrectData(HttpServletRequest req, HttpServletResponse resp){\n-        long id;\n-        try {\n-            id = Long.parseLong(req.getParameter(\"id\"));\n-        } catch (NumberFormatException e) {\n-            resp.setStatus(400);\n-            return null;\n-        }\n-        Product product = productData.findById(id);\n-        if (product == null) {\n-            resp.setStatus(404);\n-            return null;\n-        }\n-        return product;\n-    }\n-\n-    @Override\n-    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-\n-        Long id = null;\n-        BigDecimal price;\n-\n-        try {\n-            id = Long.parseLong(req.getParameter(\"id\"));\n-        } catch (NumberFormatException ignored) {\n-        }\n-\n-        try {\n-            price = new BigDecimal(req.getParameter(\"price\"));\n-        } catch (NumberFormatException ex) {\n-            resp.setStatus(400);\n-            return;\n-        }\n-\n-        Product product = new Product(req.getParameter(\"name\"), req.getParameter(\"description\"), price);\n-        product.setId(id);\n-        productData.saveOrUpdate(product);\n-        resp.sendRedirect(getServletContext().getContextPath() + \"/product\");\n-    }\n-\n-    @Override\n-    public String getServletInfo() {\n-        return \"ProductServlet\";\n-    }\n-}"
  },
  {
    "sha": "1aa75287c69d67e85daf8aacd2de0b85fd1ed954",
    "filename": "src/main/java/ru/geekbrains/servlet/UserServlet.java",
    "status": "removed",
    "additions": 0,
    "deletions": 95,
    "changes": 95,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/UserServlet.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/UserServlet.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/UserServlet.java?ref=174c3912aa8432716a1504ab1330ae379a2a5ac9",
    "patch": "@@ -1,95 +0,0 @@\n-package ru.geekbrains.servlet;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import ru.geekbrains.servlet.data.user.User;\n-import ru.geekbrains.servlet.data.user.UserData;\n-\n-import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n-import javax.servlet.http.HttpServlet;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import java.io.IOException;\n-\n-@WebServlet(name = \"UserServlet\", urlPatterns = \"/user/*\")\n-public class UserServlet extends HttpServlet {\n-\n-    private static Logger logger = LoggerFactory.getLogger(ProductServlet.class);\n-\n-    private UserData userData;\n-\n-    @Override\n-    public void init() throws ServletException {\n-        this.userData = (UserData) getServletContext().getAttribute(\"userData\");\n-        if (userData == null) {\n-            throw new ServletException(\"Users not initialize error\");\n-        }\n-    }\n-\n-    @Override\n-    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-        logger.info(req.getPathInfo());\n-        if (req.getPathInfo() == null || req.getPathInfo().equals(\"/\")) {\n-            req.setAttribute(\"users\", userData.findAll());\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/user.jsp\").forward(req, resp);\n-        } else if (req.getPathInfo().equals(\"/edit\")) {\n-            User user = checkCorrectData(req, resp);\n-            if (user == null){\n-                return;\n-            }\n-            req.setAttribute(\"user\", user);\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/user_form.jsp\").forward(req, resp);\n-        } else if (req.getPathInfo().equals(\"/delete\")){\n-            User user = checkCorrectData(req, resp);\n-            if (user == null){\n-                return;\n-            }\n-            userData.deleteById(user.getId());\n-            resp.sendRedirect(getServletContext().getContextPath() + \"/user\");\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/user.jsp\").forward(req, resp);\n-        } else if (req.getPathInfo().equals(\"/new\")){\n-            req.setAttribute(\"user\", new User(\"\", \"\"));\n-            getServletContext().getRequestDispatcher(\"/WEB-INF/user_form.jsp\").forward(req, resp);\n-        }\n-\n-    }\n-\n-    private User checkCorrectData(HttpServletRequest req, HttpServletResponse resp){\n-        long id;\n-        try {\n-            id = Long.parseLong(req.getParameter(\"id\"));\n-        } catch (NumberFormatException e) {\n-            resp.setStatus(400);\n-            return null;\n-        }\n-        User user = userData.findById(id);\n-        if (user == null) {\n-            resp.setStatus(404);\n-            return null;\n-        }\n-        return user;\n-    }\n-\n-    @Override\n-    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n-\n-        Long id = null;\n-\n-        try {\n-            id = Long.parseLong(req.getParameter(\"id\"));\n-        } catch (NumberFormatException ignored) {\n-        }\n-\n-        User user = new User(req.getParameter(\"username\"), req.getParameter(\"password\"));\n-        user.setId(id);\n-        userData.saveOrUpdate(user);\n-        resp.sendRedirect(getServletContext().getContextPath() + \"/user\");\n-    }\n-\n-    @Override\n-    public String getServletInfo() {\n-        return \"UserServlet\";\n-    }\n-\n-}"
  },
  {
    "sha": "d7ac1c240b7c7700a5c5c3254a2849d65de8b938",
    "filename": "src/main/java/ru/geekbrains/servlet/controller/CategoryController.java",
    "status": "modified",
    "additions": 12,
    "deletions": 3,
    "changes": 15,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/controller/CategoryController.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/controller/CategoryController.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/controller/CategoryController.java?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -5,6 +5,7 @@\n import ru.geekbrains.servlet.data.product.Product;\n \n import javax.enterprise.context.SessionScoped;\n+import javax.faces.event.ComponentSystemEvent;\n import javax.inject.Inject;\n import javax.inject.Named;\n import java.io.Serializable;\n@@ -13,11 +14,22 @@\n @Named\n @SessionScoped\n public class CategoryController implements Serializable {\n+\n     @Inject\n     private CategoryData categoryData;\n \n     private Category category;\n \n+    private List<Category> categories;\n+\n+    public void getCategoryData(ComponentSystemEvent componentSystemEvent) {\n+        categories = categoryData.findAll();\n+    }\n+\n+    public List<Category> getAllCategories(){\n+        return categories;\n+    }\n+\n     public Category getCategory() {\n         return category;\n     }\n@@ -31,9 +43,6 @@ public String createCategory() {\n         return \"/category_form.xhtml?faces-redirect-true\";\n     }\n \n-    public List<Category> getAllCategories() {\n-        return categoryData.findAll();\n-    }\n \n     public String editCategory(Category category) {\n         this.category = category;"
  },
  {
    "sha": "191fad42a6b521e1316c56e7962d958931ed621c",
    "filename": "src/main/java/ru/geekbrains/servlet/controller/ProductController.java",
    "status": "modified",
    "additions": 15,
    "deletions": 1,
    "changes": 16,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/controller/ProductController.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/controller/ProductController.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/controller/ProductController.java?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -1,9 +1,12 @@\n package ru.geekbrains.servlet.controller;\n \n+import ru.geekbrains.servlet.data.category.Category;\n import ru.geekbrains.servlet.data.product.Product;\n import ru.geekbrains.servlet.data.product.ProductData;\n \n import javax.enterprise.context.SessionScoped;\n+import javax.faces.event.ComponentSystemEvent;\n+import javax.faces.event.ValueChangeEvent;\n import javax.inject.Inject;\n import javax.inject.Named;\n import java.io.Serializable;\n@@ -17,6 +20,12 @@\n \n     private Product product;\n \n+    private List<Product> products;\n+\n+    public void loadData(ComponentSystemEvent componentSystemEvent) {\n+        products = productData.findAll();\n+    }\n+\n     public Product getProduct() {\n         return product;\n     }\n@@ -31,7 +40,7 @@ public String createProduct() {\n     }\n \n     public List<Product> getAllProducts() {\n-        return productData.findAll();\n+        return products;\n     }\n \n     public String editProduct(Product product) {\n@@ -47,4 +56,9 @@ public String saveProduct() {\n         productData.saveOrUpdate(this.product);\n         return \"/product.xhtml?faces-redirect-true\";\n     }\n+\n+    public void changeCategory(ValueChangeEvent valueChangeEvent) {\n+        Category category = (Category) valueChangeEvent.getNewValue();\n+        product.setCategory(category);\n+    }\n }"
  },
  {
    "sha": "7725967e3e5524eea1322064fb0e7998a014a341",
    "filename": "src/main/java/ru/geekbrains/servlet/data/cart/Cart.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/data/cart/Cart.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/data/cart/Cart.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/data/cart/Cart.java?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -24,7 +24,7 @@\n     }\n \n     public void addToCart(Product product) {\n-        productCart = new Product(product);\n+        productCart = product.copy(product);\n         Long id = atomicLong.incrementAndGet();\n         productCart.setId(id);\n         productMap.put(id, productCart);"
  },
  {
    "sha": "beda8ebb3dbe323e91be22985f46c6f93d484edb",
    "filename": "src/main/java/ru/geekbrains/servlet/data/category/Category.java",
    "status": "modified",
    "additions": 20,
    "deletions": 5,
    "changes": 25,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/data/category/Category.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/data/category/Category.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/data/category/Category.java?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -2,16 +2,31 @@\n \n import ru.geekbrains.servlet.data.product.Product;\n \n+import javax.persistence.*;\n+import java.io.Serializable;\n import java.util.ArrayList;\n-\n-public class Category {\n+import java.util.List;\n+\n+@Entity\n+@Table(name = \"category\")\n+@NamedQueries({\n+        @NamedQuery(name = \"findAllCategory\", query = \"from Category\"),\n+        @NamedQuery(name = \"countAllCategory\", query = \"select count(*) from Category\"),\n+        @NamedQuery(name = \"deleteByIdCategory\", query = \"delete from Category category where category.id = :id\")\n+})\n+public class Category implements Serializable {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n     private Long id;\n+    @Column(name = \"title\")\n     private String title;\n-    private ArrayList<Product> products;\n+    @OneToMany(mappedBy = \"category\", cascade = CascadeType.PERSIST, orphanRemoval = true)\n+    private List<Product> products;\n \n     public Category(){}\n \n-    public Category(String title) {\n+    public Category(Long id, String title) {\n+        this.id = id;\n         this.title = title;\n         this.products = new ArrayList<>();\n     }\n@@ -33,7 +48,7 @@ public void setTitle(String title) {\n     }\n \n     public ArrayList<Product> getProducts() {\n-        return products;\n+        return new ArrayList<>(products);\n     }\n \n     public void setProducts(ArrayList<Product> products) {"
  },
  {
    "sha": "fee203766ad8b9cd7c48ac7ff8e64aa31fbb1812",
    "filename": "src/main/java/ru/geekbrains/servlet/data/category/CategoryData.java",
    "status": "modified",
    "additions": 37,
    "deletions": 13,
    "changes": 50,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/data/category/CategoryData.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/data/category/CategoryData.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/data/category/CategoryData.java?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -1,8 +1,16 @@\n package ru.geekbrains.servlet.data.category;\n \n+import ru.geekbrains.servlet.data.product.Product;\n+\n import javax.annotation.PostConstruct;\n+import javax.annotation.Resource;\n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Named;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.transaction.Transactional;\n+import javax.transaction.UserTransaction;\n+import java.math.BigDecimal;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n@@ -12,33 +20,49 @@\n @Named\n @ApplicationScoped\n public class CategoryData {\n-    private static Map<Long, Category> categories = new ConcurrentHashMap<>();\n \n-    private AtomicLong atomicLong = new AtomicLong(0);\n+    @PersistenceContext(unitName = \"ds\")\n+    private EntityManager manager;\n+\n+    @Resource\n+    private UserTransaction transaction;\n+\n+    @PostConstruct\n+    public void init() throws Exception {\n+        if (countAll() == 0) {\n+            try {\n+                transaction.begin();\n+                saveOrUpdate(new Category(null, \"Apple\"));\n+                saveOrUpdate(new Category(null, \"Samsung\"));\n+            } catch (Exception e) {\n+                transaction.rollback();\n+            }\n+        }\n+    }\n+\n+    public Long countAll(){\n+        return manager.createNamedQuery(\"countAllCategory\", Long.class).getSingleResult();\n+    }\n \n     public List<Category> findAll(){\n-        return new ArrayList<>(categories.values());\n+        return manager.createNamedQuery(\"findAllCategory\", Category.class).getResultList();\n     }\n \n     public Category findById(Long id){\n-        return categories.get(id);\n+        return manager.find(Category.class, id);\n     }\n \n+    @Transactional\n     public void saveOrUpdate(Category category){\n         if (category.getId() == null){\n-            Long id = atomicLong.incrementAndGet();\n-            category.setId(id);\n+            manager.persist(category);\n         }\n-        categories.put(category.getId(), category);\n+        manager.merge(category);\n     }\n \n+    @Transactional\n     public void deleteById(Long id){\n-        categories.remove(id);\n+        manager.createNamedQuery(\"deleteByIdCategory\", Category.class).setParameter(\"id\", id).executeUpdate();\n     }\n \n-    @PostConstruct\n-    public void init(){\n-        this.saveOrUpdate(new Category(\"Iphone\"));\n-        this.saveOrUpdate(new Category(\"Samsung\"));\n-    }\n }"
  },
  {
    "sha": "acbe0db4ecbee432f03de126d8e591269b313452",
    "filename": "src/main/java/ru/geekbrains/servlet/data/product/Product.java",
    "status": "modified",
    "additions": 61,
    "deletions": 6,
    "changes": 67,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/data/product/Product.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/data/product/Product.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/data/product/Product.java?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -1,34 +1,63 @@\n package ru.geekbrains.servlet.data.product;\n \n+import ru.geekbrains.servlet.data.category.Category;\n+\n+import javax.persistence.*;\n+import java.io.Serializable;\n import java.math.BigDecimal;\n \n-public class Product {\n+@Entity\n+@Table(name = \"product\")\n+@NamedQueries({\n+        @NamedQuery(name = \"findAllProduct\", query = \"from Product\"),\n+        @NamedQuery(name = \"countAllProduct\", query = \"select count(*) from Product\"),\n+        @NamedQuery(name = \"deleteByIdProduct\", query = \"delete from Product p where p.id = :id\")\n+})\n+public class Product implements Serializable {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n     private Long id;\n+    @Column(name = \"name\", length = 255, nullable = false, updatable = true)\n     private String name;\n+    @Column(name = \"description\")\n     private String description;\n+    @Column(name = \"price\", scale = 2, precision = 10)\n     private BigDecimal price;\n+    @Column(name = \"count\")\n+    private int count;\n+    @Column(name = \"active\")\n+    private boolean active;\n+    @ManyToOne(optional = false, cascade = CascadeType.ALL)\n+    @JoinColumn(name = \"category_id\")\n+    private Category category;\n \n     public Product() {\n     }\n \n-    public Product(String name, String description, BigDecimal price) {\n+    public Product(Long id, String name, String description, BigDecimal price) {\n+        this.id = id;\n         this.name = name;\n         this.description = description;\n         this.price = price;\n+        this.category = new Category();\n     }\n \n-    public Product(Product product){\n-        this(product.name, product.description, product.price);\n+    public Category getCategory() {\n+        return category;\n     }\n \n-    public void setId(Long id) {\n-        this.id = id;\n+    public void setCategory(Category category) {\n+        this.category = category;\n     }\n \n     public Long getId() {\n         return id;\n     }\n \n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n     public String getName() {\n         return name;\n     }\n@@ -52,4 +81,30 @@ public BigDecimal getPrice() {\n     public void setPrice(BigDecimal price) {\n         this.price = price;\n     }\n+\n+    public int getCount() {\n+        return count;\n+    }\n+\n+    public void setCount(int count) {\n+        this.count = count;\n+    }\n+\n+    public boolean isActive() {\n+        return active;\n+    }\n+\n+    public void setActive(boolean active) {\n+        this.active = active;\n+    }\n+\n+\n+\n+    public Product copy(Product product) {\n+        Product copyProduct = new Product();\n+        copyProduct.setName(product.name);\n+        copyProduct.setDescription(product.description);\n+        copyProduct.setPrice(product.price);\n+        return copyProduct;\n+    }\n }"
  },
  {
    "sha": "61d6e30479023b726a92e3192070f207bc012db1",
    "filename": "src/main/java/ru/geekbrains/servlet/data/product/ProductData.java",
    "status": "modified",
    "additions": 39,
    "deletions": 26,
    "changes": 65,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/data/product/ProductData.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/java/ru/geekbrains/servlet/data/product/ProductData.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/data/product/ProductData.java?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -1,49 +1,62 @@\n package ru.geekbrains.servlet.data.product;\n \n import javax.annotation.PostConstruct;\n+import javax.annotation.Resource;\n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Named;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.transaction.Transactional;\n+import javax.transaction.UserTransaction;\n import java.math.BigDecimal;\n-import java.util.ArrayList;\n import java.util.List;\n-import java.util.Map;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.atomic.AtomicLong;\n \n @Named\n @ApplicationScoped\n public class ProductData {\n-    private static Map<Long, Product> productMap = new ConcurrentHashMap<>();\n \n-    private AtomicLong atomicLong = new AtomicLong(0);\n+    @PersistenceContext(unitName = \"ds\")\n+    private EntityManager manager;\n \n-    public List<Product> findAll(){\n-        return new ArrayList<>(productMap.values());\n+    @Resource\n+    private UserTransaction transaction;\n+\n+    @PostConstruct\n+    public void init() throws Exception {\n+        if (countAll() == 0) {\n+            try {\n+                transaction.begin();\n+                saveOrUpdate(new Product(null, \"Iphone 7\", \"This is Iphone 7\", new BigDecimal(25000)));\n+                saveOrUpdate(new Product(null, \"Iphone 12\", \"This is Iphone 12\", new BigDecimal(120000)));\n+            } catch (Exception e) {\n+                transaction.rollback();\n+            }\n+        }\n     }\n \n-    public Product findById(Long id){\n-        return productMap.get(id);\n+    public Long countAll() {\n+        return manager.createNamedQuery(\"countAllProduct\", Long.class).getSingleResult();\n     }\n \n-    public void saveOrUpdate(Product product){\n-        if (product.getId() == null){\n-            Long id = atomicLong.incrementAndGet();\n-            product.setId(id);\n-        }\n-        productMap.put(product.getId(), product);\n+    public List<Product> findAll() {\n+        return manager.createNamedQuery(\"findAllProduct\", Product.class).getResultList();\n     }\n \n-    public void deleteById(Long id){\n-        productMap.remove(id);\n+    public Product findById(Long id) {\n+        return manager.find(Product.class, id);\n     }\n \n-    @PostConstruct\n-    public void init() {\n-        this.saveOrUpdate(new Product(\"Iphone 7\",\n-                \"Old and not sensational\",\n-                new BigDecimal(20000)));\n-        this.saveOrUpdate(new Product(\"Iphone 12\",\n-                \"New and sensational\",\n-                new BigDecimal(120000)));\n+    @Transactional\n+    public void saveOrUpdate(Product product) {\n+        if (product.getId() == null) {\n+            manager.persist(product);\n+        }\n+        manager.merge(product);\n+    }\n+\n+    @Transactional\n+    public void deleteById(Long id) {\n+        manager.createNamedQuery(\"deleteByIdProduct\", Product.class).setParameter(\"id\", id).executeUpdate();\n     }\n+\n }"
  },
  {
    "sha": "bc55db2c6da3b63adf2b0a3236d41e686a08abfc",
    "filename": "src/main/java/ru/geekbrains/servlet/listener/BootstrapListener.java",
    "status": "removed",
    "additions": 0,
    "deletions": 36,
    "changes": 36,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/listener/BootstrapListener.java",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/174c3912aa8432716a1504ab1330ae379a2a5ac9/src/main/java/ru/geekbrains/servlet/listener/BootstrapListener.java",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/java/ru/geekbrains/servlet/listener/BootstrapListener.java?ref=174c3912aa8432716a1504ab1330ae379a2a5ac9",
    "patch": "@@ -1,36 +0,0 @@\n-package ru.geekbrains.servlet.listener;\n-\n-import ru.geekbrains.servlet.data.category.CategoryData;\n-import ru.geekbrains.servlet.data.product.Product;\n-import ru.geekbrains.servlet.data.product.ProductData;\n-import ru.geekbrains.servlet.data.user.User;\n-import ru.geekbrains.servlet.data.user.UserData;\n-\n-import javax.servlet.ServletContextEvent;\n-import javax.servlet.ServletContextListener;\n-import javax.servlet.annotation.WebListener;\n-import java.math.BigDecimal;\n-\n-@WebListener\n-public class BootstrapListener implements ServletContextListener {\n-\n-    @Override\n-    public void contextInitialized(ServletContextEvent sce) {\n-        ProductData products = new ProductData();\n-        products.saveOrUpdate(new Product(\"Iphone 7\",\n-                \"Old and not sensational\",\n-                new BigDecimal(20000)));\n-        products.saveOrUpdate(new Product(\"Iphone 12\",\n-                \"New and sensational\",\n-                new BigDecimal(120000)));\n-        sce.getServletContext().setAttribute(\"productData\", products);\n-\n-        UserData users = new UserData();\n-        users.saveOrUpdate(new User(\"admin\", \"admin\"));\n-        sce.getServletContext().setAttribute(\"userData\", users);\n-\n-        CategoryData categoryData = new CategoryData();\n-        categoryData.saveOrUpdate(new ru.geekbrains.servlet.data.category.Category(\"IPhone's\"));\n-        sce.getServletContext().setAttribute(\"categoryData\", categoryData);\n-    }\n-}"
  },
  {
    "sha": "a83dfa025f7c4bbee7f4bef6caa8a7ce89dd29fb",
    "filename": "src/main/resources/META-INF/persistence.xml",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/resources/META-INF/persistence.xml",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/resources/META-INF/persistence.xml",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/resources/META-INF/persistence.xml?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<persistence xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\n+             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+             xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence\n+                http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\n+             version=\"2.1\">\n+\n+    <persistence-unit name=\"ds\" transaction-type=\"JTA\">\n+        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>\n+        <jta-data-source>java:/jboss/datasources/MySQLDS</jta-data-source>\n+        <properties>\n+            <property name=\"hibernate.connection.useUnicode\" value=\"true\"/>\n+            <property name=\"hibernate.connection.characterEncoding\" value=\"UTF-8\"/>\n+\n+            <property name=\"hibernate.hbm2ddl.auto\" value=\"update\"/>\n+\n+            <property name=\"hibernate.show_sql\" value=\"true\"/>\n+            <property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.MySQL57Dialect\"/>\n+            <property name=\"hibernate.format_sql\" value=\"true\"/>\n+        </properties>\n+    </persistence-unit>\n+\n+</persistence>\n\\ No newline at end of file"
  },
  {
    "sha": "9cec2328911a0cdc6f97a91311e3130a34ba08c7",
    "filename": "src/main/webapp/category.xhtml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/webapp/category.xhtml",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/webapp/category.xhtml",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/webapp/category.xhtml?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -16,7 +16,7 @@\n </h:head>\n \n <h:body>\n-\n+    <f:event listener=\"#{categoryController.getCategoryData}\" type=\"preRenderView\"/>\n     <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n         <a class=\"navbar-brand\" href=\"#\">EShop</a>\n "
  },
  {
    "sha": "255dbc10568ea54207109e155cc20976f3171f7b",
    "filename": "src/main/webapp/product.xhtml",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/webapp/product.xhtml",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/webapp/product.xhtml",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/webapp/product.xhtml?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -17,6 +17,8 @@\n \n <h:body>\n \n+    <f:event listener=\"#{productController.loadData}\" type=\"preRenderView\"/>\n+\n     <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n         <a class=\"navbar-brand\" href=\"#\">EShop</a>\n \n@@ -57,6 +59,10 @@\n                             <f:facet name=\"header\">Discription</f:facet>\n                             #{product.description}\n                         </h:column>\n+                        <h:column>\n+                            <f:facet name=\"header\">Category</f:facet>\n+                            #{product.category.title}\n+                        </h:column>\n                         <h:column>\n                             <f:facet name=\"header\">Price</f:facet>\n                             #{product.price}"
  },
  {
    "sha": "42cb728979af9afd6bd564987e427d86c128ec2c",
    "filename": "src/main/webapp/product_form.xhtml",
    "status": "modified",
    "additions": 15,
    "deletions": 1,
    "changes": 16,
    "blob_url": "https://github.com/Lokkill/firstapp/blob/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/webapp/product_form.xhtml",
    "raw_url": "https://github.com/Lokkill/firstapp/raw/fb35ac45197f86c0f3d84922864ef6b50abffd14/src/main/webapp/product_form.xhtml",
    "contents_url": "https://api.github.com/repos/Lokkill/firstapp/contents/src/main/webapp/product_form.xhtml?ref=fb35ac45197f86c0f3d84922864ef6b50abffd14",
    "patch": "@@ -34,6 +34,7 @@\n         </div>\n     </nav>\n \n+    <f:event listener=\"${categoryController.getCategoryData}\" type=\"preRenderView\"/>\n     <div class=\"container\">\n         <div class=\"row py-2\">\n             <div class=\"col-12\">\n@@ -47,11 +48,24 @@\n                         <h:inputText styleClass=\"form-control\" id=\"description\"\n                                      value=\"#{productController.product.description}\"/>\n                     </div>\n+                    <div class=\"form-group\">\n+                        <label>Category</label>\n+                        <h:selectOneMenu styleClass = \"form-control\"\n+                                         id = \"categorySelect\"\n+                                         value = \"#{productController.product.category}\"\n+                                         onchange=\"submit()\"\n+                                         valueChangeListener=\"#{productController.changeCategory}\">\n+                            <f:selectItem value=\"#{categoryController.allCategories}\"\n+                                          var = \"categories\"\n+                                          itemValue=\"#{categories}\"\n+                                            itemLabel=\"#{categories.title}\"/>\n+                        </h:selectOneMenu>\n+                    </div>\n                     <div class=\"form-group\">\n                         <label>Price</label>\n                         <h:inputText styleClass=\"form-control\" id=\"price\" value=\"#{productController.product.price}\"/>\n                     </div>\n-                    <h:commandButton value=\"Submit\" styleClass=\"btn btn-primary\"\n+                    <h:commandButton value=\"submit\" styleClass=\"btn btn-primary\"\n                                      action=\"#{productController.saveProduct}\"/>\n                 </h:form>\n             </div>"
  }
]
