[
  {
    "sha": "42afabfd2abebf31384ca7797186a27a4b7dbee8",
    "filename": "homework7_rxjava/.gitignore",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/.gitignore",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/.gitignore",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/.gitignore?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1 @@\n+/build\n\\ No newline at end of file"
  },
  {
    "sha": "e64203fa2f950a064635523a1bc36bdcab5f8a84",
    "filename": "homework7_rxjava/build.gradle",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/build.gradle",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/build.gradle",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/build.gradle?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,65 @@\n+plugins {\n+    id 'com.android.application'\n+    id 'kotlin-android'\n+    id 'kotlin-kapt'\n+}\n+\n+android {\n+    compileSdkVersion 30\n+    buildToolsVersion \"30.0.2\"\n+\n+    defaultConfig {\n+        applicationId \"com.example.homework6_rxjava\"\n+        minSdkVersion 21\n+        targetSdkVersion 30\n+        versionCode 1\n+        versionName \"1.0\"\n+        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n+\n+        javaCompileOptions {\n+            annotationProcessorOptions {\n+                arguments += [\n+                        \"room.schemaLocation\":\"$projectDir/schemas\".toString(),\n+                        \"room.incremental\":\"true\",\n+                        \"room.expandProjection\":\"true\"]\n+            }\n+        }\n+\n+    }\n+\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+    compileOptions {\n+        sourceCompatibility JavaVersion.VERSION_1_8\n+        targetCompatibility JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8'\n+    }\n+}\n+\n+dependencies {\n+\n+    def room_version = \"2.2.6\"\n+\n+    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'\n+    implementation \"io.reactivex.rxjava3:rxjava:3.0.9\"\n+\n+    implementation \"androidx.room:room-runtime:$room_version\"\n+    kapt \"androidx.room:room-compiler:$room_version\"\n+    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'\n+    implementation \"androidx.room:room-ktx:$room_version\"\n+    testImplementation \"androidx.room:room-testing:$room_version\"\n+    implementation \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n+    implementation 'androidx.core:core-ktx:1.3.2'\n+    implementation 'androidx.appcompat:appcompat:1.2.0'\n+    implementation 'com.google.android.material:material:1.2.1'\n+    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\n+    testImplementation 'junit:junit:4.13.1'\n+    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\n+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "481bb434814107eb79d7a30b676d344b0df2f8ce",
    "filename": "homework7_rxjava/proguard-rules.pro",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/proguard-rules.pro",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/proguard-rules.pro",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/proguard-rules.pro?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,21 @@\n+# Add project specific ProGuard rules here.\n+# You can control the set of applied configuration files using the\n+# proguardFiles setting in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n+\n+# Uncomment this to preserve the line number information for\n+# debugging stack traces.\n+#-keepattributes SourceFile,LineNumberTable\n+\n+# If you keep the line number information, uncomment this to\n+# hide the original source file name.\n+#-renamesourcefileattribute SourceFile\n\\ No newline at end of file"
  },
  {
    "sha": "18e222e66d5366a12a66a47b76914caa0e96ca85",
    "filename": "homework7_rxjava/schemas/com.example.homework6_rxjava.room.DataBaseInfo/1.json",
    "status": "added",
    "additions": 142,
    "deletions": 0,
    "changes": 142,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/schemas/com.example.homework6_rxjava.room.DataBaseInfo/1.json",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/schemas/com.example.homework6_rxjava.room.DataBaseInfo/1.json",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/schemas/com.example.homework6_rxjava.room.DataBaseInfo/1.json?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,142 @@\n+{\n+  \"formatVersion\": 1,\n+  \"database\": {\n+    \"version\": 1,\n+    \"identityHash\": \"760d012434e50a38a4a822c30944d866\",\n+    \"entities\": [\n+      {\n+        \"tableName\": \"car_data\",\n+        \"createSql\": \"CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `car_image` TEXT NOT NULL DEFAULT 'no image', `owner_name` TEXT NOT NULL DEFAULT 'no owner', `car_producer` TEXT NOT NULL DEFAULT ' no producer', `car_model` TEXT NOT NULL DEFAULT ' no model', `car_plate` TEXT NOT NULL DEFAULT 'no plate')\",\n+        \"fields\": [\n+          {\n+            \"fieldPath\": \"id\",\n+            \"columnName\": \"id\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"carImage\",\n+            \"columnName\": \"car_image\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no image'\"\n+          },\n+          {\n+            \"fieldPath\": \"ownerName\",\n+            \"columnName\": \"owner_name\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no owner'\"\n+          },\n+          {\n+            \"fieldPath\": \"carProducer\",\n+            \"columnName\": \"car_producer\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"' no producer'\"\n+          },\n+          {\n+            \"fieldPath\": \"carModel\",\n+            \"columnName\": \"car_model\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"' no model'\"\n+          },\n+          {\n+            \"fieldPath\": \"carPlate\",\n+            \"columnName\": \"car_plate\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no plate'\"\n+          }\n+        ],\n+        \"primaryKey\": {\n+          \"columnNames\": [\n+            \"id\"\n+          ],\n+          \"autoGenerate\": true\n+        },\n+        \"indices\": [],\n+        \"foreignKeys\": []\n+      },\n+      {\n+        \"tableName\": \"work_data\",\n+        \"createSql\": \"CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `carId` INTEGER NOT NULL, `work_date` TEXT NOT NULL DEFAULT 'no date', `work_name` TEXT NOT NULL DEFAULT ' no work', `work_description` TEXT NOT NULL DEFAULT ' no description', `work_cost` TEXT NOT NULL DEFAULT 'no cost', `work_status` TEXT NOT NULL DEFAULT 'no work status', FOREIGN KEY(`carId`) REFERENCES `car_data`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )\",\n+        \"fields\": [\n+          {\n+            \"fieldPath\": \"id\",\n+            \"columnName\": \"id\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"carId\",\n+            \"columnName\": \"carId\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"workDate\",\n+            \"columnName\": \"work_date\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no date'\"\n+          },\n+          {\n+            \"fieldPath\": \"workName\",\n+            \"columnName\": \"work_name\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"' no work'\"\n+          },\n+          {\n+            \"fieldPath\": \"workDescription\",\n+            \"columnName\": \"work_description\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"' no description'\"\n+          },\n+          {\n+            \"fieldPath\": \"workCost\",\n+            \"columnName\": \"work_cost\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no cost'\"\n+          },\n+          {\n+            \"fieldPath\": \"workStatus\",\n+            \"columnName\": \"work_status\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no work status'\"\n+          }\n+        ],\n+        \"primaryKey\": {\n+          \"columnNames\": [\n+            \"id\"\n+          ],\n+          \"autoGenerate\": true\n+        },\n+        \"indices\": [],\n+        \"foreignKeys\": [\n+          {\n+            \"table\": \"car_data\",\n+            \"onDelete\": \"CASCADE\",\n+            \"onUpdate\": \"CASCADE\",\n+            \"columns\": [\n+              \"carId\"\n+            ],\n+            \"referencedColumns\": [\n+              \"id\"\n+            ]\n+          }\n+        ]\n+      }\n+    ],\n+    \"views\": [],\n+    \"setupQueries\": [\n+      \"CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)\",\n+      \"INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '760d012434e50a38a4a822c30944d866')\"\n+    ]\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "18e222e66d5366a12a66a47b76914caa0e96ca85",
    "filename": "homework7_rxjava/schemas/com.example.homework7_rxjava.room.DataBaseInfo/1.json",
    "status": "added",
    "additions": 142,
    "deletions": 0,
    "changes": 142,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/schemas/com.example.homework7_rxjava.room.DataBaseInfo/1.json",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/schemas/com.example.homework7_rxjava.room.DataBaseInfo/1.json",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/schemas/com.example.homework7_rxjava.room.DataBaseInfo/1.json?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,142 @@\n+{\n+  \"formatVersion\": 1,\n+  \"database\": {\n+    \"version\": 1,\n+    \"identityHash\": \"760d012434e50a38a4a822c30944d866\",\n+    \"entities\": [\n+      {\n+        \"tableName\": \"car_data\",\n+        \"createSql\": \"CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `car_image` TEXT NOT NULL DEFAULT 'no image', `owner_name` TEXT NOT NULL DEFAULT 'no owner', `car_producer` TEXT NOT NULL DEFAULT ' no producer', `car_model` TEXT NOT NULL DEFAULT ' no model', `car_plate` TEXT NOT NULL DEFAULT 'no plate')\",\n+        \"fields\": [\n+          {\n+            \"fieldPath\": \"id\",\n+            \"columnName\": \"id\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"carImage\",\n+            \"columnName\": \"car_image\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no image'\"\n+          },\n+          {\n+            \"fieldPath\": \"ownerName\",\n+            \"columnName\": \"owner_name\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no owner'\"\n+          },\n+          {\n+            \"fieldPath\": \"carProducer\",\n+            \"columnName\": \"car_producer\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"' no producer'\"\n+          },\n+          {\n+            \"fieldPath\": \"carModel\",\n+            \"columnName\": \"car_model\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"' no model'\"\n+          },\n+          {\n+            \"fieldPath\": \"carPlate\",\n+            \"columnName\": \"car_plate\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no plate'\"\n+          }\n+        ],\n+        \"primaryKey\": {\n+          \"columnNames\": [\n+            \"id\"\n+          ],\n+          \"autoGenerate\": true\n+        },\n+        \"indices\": [],\n+        \"foreignKeys\": []\n+      },\n+      {\n+        \"tableName\": \"work_data\",\n+        \"createSql\": \"CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `carId` INTEGER NOT NULL, `work_date` TEXT NOT NULL DEFAULT 'no date', `work_name` TEXT NOT NULL DEFAULT ' no work', `work_description` TEXT NOT NULL DEFAULT ' no description', `work_cost` TEXT NOT NULL DEFAULT 'no cost', `work_status` TEXT NOT NULL DEFAULT 'no work status', FOREIGN KEY(`carId`) REFERENCES `car_data`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )\",\n+        \"fields\": [\n+          {\n+            \"fieldPath\": \"id\",\n+            \"columnName\": \"id\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"carId\",\n+            \"columnName\": \"carId\",\n+            \"affinity\": \"INTEGER\",\n+            \"notNull\": true\n+          },\n+          {\n+            \"fieldPath\": \"workDate\",\n+            \"columnName\": \"work_date\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no date'\"\n+          },\n+          {\n+            \"fieldPath\": \"workName\",\n+            \"columnName\": \"work_name\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"' no work'\"\n+          },\n+          {\n+            \"fieldPath\": \"workDescription\",\n+            \"columnName\": \"work_description\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"' no description'\"\n+          },\n+          {\n+            \"fieldPath\": \"workCost\",\n+            \"columnName\": \"work_cost\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no cost'\"\n+          },\n+          {\n+            \"fieldPath\": \"workStatus\",\n+            \"columnName\": \"work_status\",\n+            \"affinity\": \"TEXT\",\n+            \"notNull\": true,\n+            \"defaultValue\": \"'no work status'\"\n+          }\n+        ],\n+        \"primaryKey\": {\n+          \"columnNames\": [\n+            \"id\"\n+          ],\n+          \"autoGenerate\": true\n+        },\n+        \"indices\": [],\n+        \"foreignKeys\": [\n+          {\n+            \"table\": \"car_data\",\n+            \"onDelete\": \"CASCADE\",\n+            \"onUpdate\": \"CASCADE\",\n+            \"columns\": [\n+              \"carId\"\n+            ],\n+            \"referencedColumns\": [\n+              \"id\"\n+            ]\n+          }\n+        ]\n+      }\n+    ],\n+    \"views\": [],\n+    \"setupQueries\": [\n+      \"CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)\",\n+      \"INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '760d012434e50a38a4a822c30944d866')\"\n+    ]\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "227e8af500bbc4e26c71ef7b1aa56efd24ab5c11",
    "filename": "homework7_rxjava/src/androidTest/java/com/example/homework7_rxjava/ExampleInstrumentedTest.kt",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/androidTest/java/com/example/homework7_rxjava/ExampleInstrumentedTest.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/androidTest/java/com/example/homework7_rxjava/ExampleInstrumentedTest.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/androidTest/java/com/example/homework7_rxjava/ExampleInstrumentedTest.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,24 @@\n+package com.example.homework7_rxjava\n+\n+import androidx.test.platform.app.InstrumentationRegistry\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+import org.junit.Assert.*\n+\n+/**\n+ * Instrumented test, which will execute on an Android device.\n+ *\n+ * See [testing documentation](http://d.android.com/tools/testing).\n+ */\n+@RunWith(AndroidJUnit4::class)\n+class ExampleInstrumentedTest {\n+    @Test\n+    fun useAppContext() {\n+        // Context of the app under test.\n+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext\n+        assertEquals(\"com.example.homework6_rxjava\", appContext.packageName)\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "37583d126f3ac2b6d67e2e6e74bff3dd5cfafd94",
    "filename": "homework7_rxjava/src/main/AndroidManifest.xml",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/AndroidManifest.xml?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.example.homework7_rxjava\">\n+\n+    <application\n+        android:name=\".App\"\n+        android:allowBackup=\"true\"\n+        android:icon=\"@mipmap/ic_launcher\"\n+        android:label=\"@string/app_name\"\n+        android:roundIcon=\"@mipmap/ic_launcher_round\"\n+        android:supportsRtl=\"true\"\n+        android:theme=\"@style/Theme.MyApplication\">\n+        <activity android:name=\"com.example.homework7_rxjava.MainActivity\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+\n+        <activity android:name=\"com.example.homework7_rxjava.car.AddCarActivity\"/>\n+        <activity android:name=\"com.example.homework7_rxjava.car.EditCarActivity\"/>\n+        <activity android:name=\"com.example.homework7_rxjava.work.WorksListActivity\"/>\n+        <activity android:name=\"com.example.homework7_rxjava.work.AddWorkActivity\"/>\n+        <activity android:name=\"com.example.homework7_rxjava.work.EditWorkActivity\"/>\n+\n+        <provider\n+            android:authorities=\"com.example.homework7_rxjava\"\n+            android:exported=\"true\"\n+            android:name=\".WorkContentProvider\"/>\n+\n+\n+    </application>\n+\n+</manifest>\n\\ No newline at end of file"
  },
  {
    "sha": "3a2e1954092e6973db592d5a7a7dc6e8e7f324f9",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/App.kt",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/App.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/App.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/App.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,13 @@\n+package com.example.homework7_rxjava\n+\n+import android.app.Application\n+import com.example.homework7_rxjava.room.DataBaseInfo\n+\n+class App: Application() {\n+\n+\n+    override fun onCreate() {\n+        super.onCreate()\n+        DataBaseInfo.getInstance(this)\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "eda5c69d880b963c4fcb2d0cd8d41b69a982c5c1",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/MainActivity.kt",
    "status": "added",
    "additions": 135,
    "deletions": 0,
    "changes": 135,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/MainActivity.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/MainActivity.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/MainActivity.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,135 @@\n+package com.example.homework7_rxjava\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.view.Menu\n+import android.view.View\n+import android.widget.TextView\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.appcompat.widget.SearchView\n+import androidx.appcompat.widget.Toolbar\n+import androidx.recyclerview.widget.LinearLayoutManager\n+import androidx.recyclerview.widget.RecyclerView\n+import com.example.homework7_rxjava.car.AddCarActivity\n+import com.example.homework7_rxjava.car.CarItemAdapter\n+import com.example.homework7_rxjava.car.EditCarActivity\n+import com.example.homework7_rxjava.room.CarInfoEntity\n+import com.example.homework7_rxjava.room.DataBaseInfo\n+import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers\n+import io.reactivex.rxjava3.core.Single\n+import io.reactivex.rxjava3.schedulers.Schedulers\n+//import kotlinx.coroutines.*\n+import java.io.File\n+import java.text.SimpleDateFormat\n+import java.util.*\n+import kotlin.collections.ArrayList\n+\n+// constants must be outside the class\n+private const val ADD_CAR_CODE = 111\n+private const val EDIT_CAR_CODE = 222\n+\n+class MainActivity : AppCompatActivity(), CarItemAdapter.OnItemClickListener {\n+\n+    private val CARS = ArrayList<CarInfoEntity>()\n+    private val filteredCars = ArrayList<CarInfoEntity>()\n+    private lateinit var recyclerView: RecyclerView\n+    private lateinit var carAdapter: CarItemAdapter\n+    private lateinit var mainText: TextView\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_cars_list)\n+\n+        val toolbar: Toolbar? = findViewById(R.id.toolbar_cars_list)\n+        setSupportActionBar(toolbar)\n+\n+        mainText = findViewById(R.id.emptyCarList_text)\n+        getAllInfoRX()\n+\n+        recyclerView = findViewById(R.id.carListRecycler)\n+        carAdapter = CarItemAdapter(filteredCars, this)\n+        recyclerView.adapter = carAdapter\n+        recyclerView.layoutManager = LinearLayoutManager(this, RecyclerView.VERTICAL, false)\n+\n+        logFile()\n+\n+        findViewById<View>(R.id.addCarFab).setOnClickListener {\n+            val intent = Intent(this@MainActivity, AddCarActivity::class.java)\n+            startActivityForResult(intent, ADD_CAR_CODE)\n+        }\n+    }\n+\n+    override fun onItemClick(position: Int) {\n+        val intent = Intent(this@MainActivity, EditCarActivity::class.java)\n+        intent.putExtra(\"ID\", CARS.get(position).id)\n+        startActivityForResult(intent, EDIT_CAR_CODE)\n+    }\n+// search menu for filtration\n+    override fun onCreateOptionsMenu(menu: Menu?): Boolean {\n+        menuInflater.inflate(R.menu.search_menu, menu)\n+        val  menuItem = menu?.findItem(R.id.menu_search)\n+        val searchView: SearchView = menuItem?.actionView as SearchView\n+\n+        searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {\n+            override fun onQueryTextSubmit(query: String?): Boolean {\n+                return true\n+            }\n+            // producer and plate filter in search menu\n+            override fun onQueryTextChange(newText: String?): Boolean {\n+                if (newText!!.isNotEmpty()) {\n+                    filteredCars.clear()\n+                    val search = newText.toLowerCase(Locale.ROOT)\n+                    val cars = CARS.filter { it.carProducer.toLowerCase(Locale.ROOT).contains(search) ||\n+                            it.carPlate.contains(search) }\n+                    filteredCars.addAll(cars)\n+                    carAdapter.notifyDataSetChanged()\n+                } else {\n+                    filteredCars.clear()\n+                    filteredCars.addAll(CARS)\n+                    carAdapter.notifyDataSetChanged()\n+                }\n+                return true\n+            }\n+        })\n+        return super.onCreateOptionsMenu(menu)\n+    }\n+\n+    private fun getAllInfoRX(){\n+        val db = DataBaseInfo.getInstance(this)\n+        Single.create<List<CarInfoEntity>> { emitter ->\n+            val dbList = db?.getCarInfoDao()?.getAllData() ?: emptyList()\n+            emitter.onSuccess(dbList)\n+        }.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribe { dbList ->\n+                    CARS.clear()\n+                    CARS.addAll(dbList.sortedBy { it.carProducer.toLowerCase(Locale.ROOT) })\n+                    if (CARS.isNotEmpty()) {\n+                        mainText.text = \"\"\n+                    }\n+                    filteredCars.addAll(CARS)\n+                    carAdapter.notifyDataSetChanged()\n+                }\n+    }\n+\n+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n+        if (requestCode == ADD_CAR_CODE && resultCode == RESULT_OK) {\n+            filteredCars.clear()\n+            getAllInfoRX()\n+        }\n+        if (requestCode == EDIT_CAR_CODE && resultCode == RESULT_OK) {\n+            filteredCars.clear()\n+            getAllInfoRX()\n+        }\n+        super.onActivityResult(requestCode, resultCode, data)\n+    }\n+    //create and write to log file\n+    private fun logFile(){\n+        val file = File(filesDir, \"log.txt\")\n+        val simpleDateFormat = SimpleDateFormat.getDateTimeInstance()\n+        val currentDateAndTime = simpleDateFormat.format(Date())\n+        val stringBuilder = StringBuilder()\n+        file.appendText(stringBuilder.appendLine(currentDateAndTime).toString())\n+    }\n+}\n+"
  },
  {
    "sha": "9f5e4cf606b5296656360a571eff5ecc99c65702",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/WorkContentProvider.kt",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/WorkContentProvider.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/WorkContentProvider.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/WorkContentProvider.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,52 @@\n+package com.example.homework7_rxjava\n+\n+import android.content.ContentProvider\n+import android.content.ContentValues\n+import android.content.UriMatcher\n+import android.net.Uri\n+import com.example.homework7_rxjava.room.DataBaseInfo\n+\n+class WorkContentProvider: ContentProvider() {\n+\n+    private var database: DataBaseInfo? = null\n+\n+    override fun onCreate(): Boolean {\n+        context?.run {\n+            database = DataBaseInfo.getInstance(this)\n+        }\n+        return true\n+    }\n+\n+    override fun query(uri: Uri, projection: Array<out String>?, selection: String?, selectionArgs: Array<out String>?, sortOrder: String?) =\n+       when(uriMatcher.match(uri)){\n+           URI_CODE_WORKS -> database?.getWorkInfoDao()?.getWorkItemInfo()\n+           else -> null\n+    }\n+\n+    override fun getType(uri: Uri): String? {\n+        TODO(\"Not yet implemented\")\n+    }\n+\n+    override fun insert(uri: Uri, values: ContentValues?): Uri? {\n+        TODO(\"Not yet implemented\")\n+    }\n+\n+    override fun delete(uri: Uri, selection: String?, selectionArgs: Array<out String>?): Int {\n+        TODO(\"Not yet implemented\")\n+    }\n+\n+    override fun update(uri: Uri, values: ContentValues?, selection: String?, selectionArgs: Array<out String>?): Int {\n+        TODO(\"Not yet implemented\")\n+    }\n+\n+    companion object{\n+\n+        private const val AUTHORITY = \"com.example.homework7_rxjava\"\n+        private const val URI_CODE_WORKS = 123\n+\n+        private val uriMatcher = UriMatcher(UriMatcher.NO_MATCH).apply {\n+            addURI(AUTHORITY, \"database/works\", URI_CODE_WORKS)\n+        }\n+    }\n+}\n+"
  },
  {
    "sha": "e9cce2dfb8be78652d704bf16092c12887b42529",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/AddCarActivity.kt",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/AddCarActivity.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/AddCarActivity.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/AddCarActivity.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,55 @@\n+package com.example.homework7_rxjava.car\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.view.View\n+import android.widget.EditText\n+import androidx.appcompat.app.AppCompatActivity\n+import com.example.homework7_rxjava.R\n+import com.example.homework7_rxjava.room.CarInfoEntity\n+import com.example.homework7_rxjava.room.DataBaseInfo\n+import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers\n+import io.reactivex.rxjava3.core.Single\n+import io.reactivex.rxjava3.schedulers.Schedulers\n+\n+class AddCarActivity : AppCompatActivity() {\n+\n+    private lateinit var name: EditText\n+    private lateinit var producer: EditText\n+    private lateinit var model: EditText\n+    private lateinit var plate: EditText\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_add_car)\n+\n+        name = findViewById(R.id.edit_text_owner_name_add_car)\n+        producer = findViewById(R.id.edit_text_producer_add_car)\n+        model = findViewById(R.id.edit_text_model_add_car)\n+        plate = findViewById(R.id.edit_view_plate_number_add_car)\n+\n+        findViewById<View>(R.id.arrow_back_add_car).setOnClickListener { finish() }\n+\n+        findViewById<View>(R.id.save_add_car).setOnClickListener {\n+            val name = name.text.toString()\n+            val producer = producer.text.toString()\n+            val model = model.text.toString()\n+            val plate = plate.text.toString()\n+\n+            val carItem = CarInfoEntity(0, \"no image\", name, producer, model, plate)\n+            setDataIntentRX(carItem)\n+            finish()\n+        }\n+    }\n+\n+    private fun setDataIntentRX(carItem: CarInfoEntity){\n+        val intent = Intent()\n+        setResult(RESULT_OK, intent)\n+        val db = DataBaseInfo.getInstance(this)\n+         Single.create<CarInfoEntity> { emitter -> db?.getCarInfoDao()?.insertCarEntity(carItem)\n+             emitter.onSuccess(carItem)\n+         }.subscribeOn(Schedulers.io())\n+                 .observeOn(AndroidSchedulers.mainThread())\n+                 .subscribe()\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "17bf44d1127726f81fd52cfe4a6e471b463b3f29",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/CarItemAdapter.kt",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/CarItemAdapter.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/CarItemAdapter.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/CarItemAdapter.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,69 @@\n+package com.example.homework7_rxjava.car\n+\n+import android.content.Intent\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.widget.ImageView\n+import android.widget.TextView\n+import androidx.recyclerview.widget.RecyclerView\n+import com.example.homework7_rxjava.R\n+import com.example.homework7_rxjava.work.WorksListActivity\n+import com.example.homework7_rxjava.room.CarInfoEntity\n+\n+class CarItemAdapter(private var carItemList: List<CarInfoEntity>,\n+                     private val listener: OnItemClickListener):\n+        RecyclerView.Adapter<CarItemAdapter.CarItemViewHolder>() {\n+\n+   inner class CarItemViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView),\n+    View.OnClickListener{\n+\n+        private val carImageView: ImageView = itemView.findViewById(R.id.car_photo_image)\n+        private val ownerName: TextView = itemView.findViewById(R.id.owner_name)\n+        private val carProducer: TextView = itemView.findViewById(R.id.car_producer)\n+        private val carModel: TextView = itemView.findViewById(R.id.car_model)\n+        private val carPlate: TextView = itemView.findViewById(R.id.car_plate)\n+        private val editCar: ImageView = itemView.findViewById(R.id.edit_car)\n+\n+        fun bind(carItem: CarInfoEntity){\n+            ownerName.text = carItem.ownerName\n+            carProducer.text = carItem.carProducer\n+            carModel.text = carItem.carModel\n+            carPlate.text = carItem.carPlate\n+            carImageView.setOnClickListener {\n+                val intent = Intent(carImageView.context, WorksListActivity::class.java)\n+                val position = adapterPosition\n+                intent.putExtra(\"ID\",carItemList.get(position).id)\n+                carImageView.context.startActivity(intent)\n+            }\n+        }\n+\n+        init {\n+            editCar.setOnClickListener(this)\n+        }\n+\n+        override fun onClick(v: View?) {\n+            val position = adapterPosition\n+            if (position != RecyclerView.NO_POSITION){\n+            listener.onItemClick(position)\n+            }\n+        }\n+    }\n+\n+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): CarItemViewHolder {\n+        val view: View = LayoutInflater.from(parent.context).inflate(R.layout.item_car, parent, false)\n+        return CarItemViewHolder(view)\n+    }\n+\n+    override fun onBindViewHolder(holder: CarItemViewHolder, position: Int) {\n+        holder.bind(carItemList.get(position))\n+    }\n+\n+    override fun getItemCount(): Int {\n+        return carItemList.size\n+    }\n+\n+    interface OnItemClickListener{\n+        fun onItemClick(position: Int)\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "766fc1ac3acab033f0c058cc0c51f8cf5b7b41ab",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/EditCarActivity.kt",
    "status": "added",
    "additions": 75,
    "deletions": 0,
    "changes": 75,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/EditCarActivity.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/EditCarActivity.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/car/EditCarActivity.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,75 @@\n+package com.example.homework7_rxjava.car\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.view.View\n+import android.widget.EditText\n+import androidx.appcompat.app.AppCompatActivity\n+import com.example.homework7_rxjava.R\n+import com.example.homework7_rxjava.room.CarInfoEntity\n+import com.example.homework7_rxjava.room.DataBaseInfo\n+import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers\n+import io.reactivex.rxjava3.core.Single\n+import io.reactivex.rxjava3.schedulers.Schedulers\n+\n+class EditCarActivity: AppCompatActivity() {\n+\n+    private lateinit var name: EditText\n+    private lateinit var producer: EditText\n+    private lateinit var model: EditText\n+    private lateinit var plate: EditText\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_edit_car)\n+\n+        name = findViewById(R.id.edit_text_owner_name_car_info)\n+        producer = findViewById(R.id.edit_text_producer_car_info)\n+        model = findViewById(R.id.edit_text_model_car_info)\n+        plate = findViewById(R.id.edit_view_plate_number_car_info)\n+\n+        getDataRX()\n+\n+        findViewById<View>(R.id.arrow_back_edit_car).setOnClickListener {\n+            finish() }\n+        findViewById<View>(R.id.save_edit_car).setOnClickListener {\n+            setUpdatedDataRX()\n+            finish()\n+        }\n+    }\n+\n+    private fun setUpdatedDataRX(){\n+        val id = intent.getLongExtra(\"ID\", 0)\n+        val intent = Intent()\n+        setResult(RESULT_OK, intent)\n+        val name = name.text.toString()\n+        val producer = producer.text.toString()\n+        val model = model.text.toString()\n+        val plate = plate.text.toString()\n+\n+        val car = CarInfoEntity(id,\"no image\",name,producer,model,plate)\n+        val database = DataBaseInfo.getInstance(applicationContext)\n+        Single.create<CarInfoEntity> { emitter ->\n+            database?.getCarInfoDao()?.updateCarEntity(car)\n+            emitter.onSuccess(car)\n+        }.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribe()\n+    }\n+\n+    private fun getDataRX(){\n+        val id = intent.getLongExtra(\"ID\", 0)\n+        val database = DataBaseInfo.getInstance(applicationContext)\n+        Single.create<CarInfoEntity> { emitter ->\n+            val carEntity = database?.getCarInfoDao()?.getInfoId(id)\n+            emitter.onSuccess(carEntity)\n+        }.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribe { carEntity ->\n+                    name.setText(carEntity?.ownerName)\n+                    producer.setText(carEntity?.carProducer)\n+                    model.setText(carEntity?.carModel)\n+                    plate.setText(carEntity?.carPlate)\n+                }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f9c22d694e026ecd57442545d4510afa436a8a2c",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/CarInfoDao.kt",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/CarInfoDao.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/CarInfoDao.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/CarInfoDao.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,22 @@\n+package com.example.homework7_rxjava.room\n+\n+import androidx.room.Dao\n+import androidx.room.Insert\n+import androidx.room.Query\n+import androidx.room.Update\n+\n+@Dao\n+interface CarInfoDao {\n+\n+    @Query(\"SELECT * FROM car_data\")\n+    fun getAllData():  List<CarInfoEntity>\n+\n+   @Query(\"SELECT * FROM car_data WHERE id =:carId\")\n+    fun getInfoId(carId: Long): CarInfoEntity\n+\n+   @Insert\n+    fun insertCarEntity(carInfoEntity: CarInfoEntity)\n+\n+   @Update\n+    fun  updateCarEntity(carInfoEntity: CarInfoEntity)\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "4dac78e23d15c193be695baa19dedb42c4731479",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/CarInfoEntity.kt",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/CarInfoEntity.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/CarInfoEntity.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/CarInfoEntity.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,15 @@\n+package com.example.homework7_rxjava.room\n+\n+import androidx.room.ColumnInfo\n+import androidx.room.Entity\n+import androidx.room.PrimaryKey\n+\n+@Entity(tableName = \"car_data\")\n+ class CarInfoEntity(\n+        @PrimaryKey(autoGenerate = true)  val id: Long,\n+        @ColumnInfo(name = \"car_image\", defaultValue = \"no image\") val carImage: String,\n+        @ColumnInfo(name = \"owner_name\", defaultValue = \"no owner\") val ownerName: String,\n+        @ColumnInfo(name = \"car_producer\", defaultValue = \" no producer\") val carProducer: String,\n+        @ColumnInfo(name = \"car_model\", defaultValue = \" no model\") val carModel: String,\n+        @ColumnInfo(name = \"car_plate\", defaultValue = \"no plate\") val carPlate: String)\n+"
  },
  {
    "sha": "d4abd9027c8c7e986a87d899b4f88ff7d227392a",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/DataBaseInfo.kt",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/DataBaseInfo.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/DataBaseInfo.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/DataBaseInfo.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,26 @@\n+package com.example.homework7_rxjava.room\n+\n+import android.content.Context\n+import androidx.room.Database\n+import androidx.room.Room\n+import androidx.room.RoomDatabase\n+\n+@Database(entities = [CarInfoEntity::class, WorkEntity::class],version = 1)\n+abstract class DataBaseInfo: RoomDatabase() {\n+\n+    abstract fun getCarInfoDao(): CarInfoDao\n+\n+    abstract fun getWorkInfoDao(): WorkInfoDao\n+\n+    companion object{\n+        private var DB: DataBaseInfo? = null\n+\n+        fun getInstance(context: Context): DataBaseInfo? {\n+            if(DB == null){\n+                DB = Room.databaseBuilder(context, DataBaseInfo::class.java, \"db_car_works4\")\n+                        .build()\n+            }\n+            return DB\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "e78e47173a728d8355c993f48af48ea149ddae46",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/WorkEntity.kt",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/WorkEntity.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/WorkEntity.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/WorkEntity.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,23 @@\n+package com.example.homework7_rxjava.room\n+\n+import androidx.room.ColumnInfo\n+import androidx.room.Entity\n+import androidx.room.ForeignKey\n+import androidx.room.ForeignKey.CASCADE\n+import androidx.room.PrimaryKey\n+\n+@Entity(tableName = \"work_data\",\n+        foreignKeys = arrayOf(\n+                ForeignKey(entity = CarInfoEntity::class,\n+                        parentColumns = arrayOf(\"id\"),\n+                        childColumns = arrayOf(\"carId\"),\n+                        onDelete = CASCADE,\n+                        onUpdate = CASCADE)))\n+class WorkEntity(\n+        @PrimaryKey(autoGenerate = true) val id: Long,\n+        @ColumnInfo val carId: Long,\n+        @ColumnInfo(name = \"work_date\", defaultValue = \"no date\") val workDate: String,\n+        @ColumnInfo(name = \"work_name\", defaultValue = \" no work\") val workName: String,\n+        @ColumnInfo(name = \"work_description\", defaultValue = \" no description\") val workDescription: String,\n+        @ColumnInfo(name = \"work_cost\", defaultValue = \"no cost\") val workCost: String,\n+        @ColumnInfo(name = \"work_status\", defaultValue = \"no work status\") val workStatus: String)"
  },
  {
    "sha": "b38a6c7ede79bdc76fd4f4dc76243783cf6fe76e",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/WorkInfoDao.kt",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/WorkInfoDao.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/WorkInfoDao.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/room/WorkInfoDao.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,32 @@\n+package com.example.homework7_rxjava.room\n+\n+import android.database.Cursor\n+import androidx.room.*\n+\n+@Dao\n+interface WorkInfoDao {\n+\n+   @Query(\"SELECT * FROM work_data WHERE id =:workId\")\n+   fun getWorkId(workId: Long): WorkEntity\n+\n+   @Query(\"SELECT * FROM work_data WHERE carId=:carId\")\n+   fun getWorksForCar(carId: Long): List<WorkEntity>\n+\n+   @Query(\"SELECT * FROM work_data WHERE id = :id\")\n+   fun getInfo(id: Long): Cursor?\n+\n+   @Query(\"SELECT * FROM work_data\")\n+   fun getAllInfo(): Cursor?\n+\n+   @Query(\"SELECT work_date,work_name,work_cost,work_status FROM work_data\")\n+   fun getWorkItemInfo(): Cursor?\n+\n+   @Insert\n+   fun insertWorkEntity(workEntity: WorkEntity)\n+\n+   @Update\n+   fun  updateWorkEntity(workEntity: WorkEntity)\n+\n+   @Delete\n+   fun deleteWorkEntity(workEntity: WorkEntity)\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f0253465a3ccec46551ae7560e0e7808e5f4c5fc",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/AddWorkActivity.kt",
    "status": "added",
    "additions": 89,
    "deletions": 0,
    "changes": 89,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/AddWorkActivity.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/AddWorkActivity.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/AddWorkActivity.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,89 @@\n+package com.example.homework7_rxjava.work\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.view.View\n+import android.widget.EditText\n+import android.widget.TextView\n+import android.widget.Toast\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.appcompat.widget.AppCompatRadioButton\n+import com.example.homework7_rxjava.R\n+import com.example.homework7_rxjava.room.DataBaseInfo\n+import com.example.homework7_rxjava.room.WorkEntity\n+import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers\n+import io.reactivex.rxjava3.core.Completable\n+import io.reactivex.rxjava3.schedulers.Schedulers\n+import java.text.SimpleDateFormat\n+import java.util.*\n+\n+class AddWorkActivity: AppCompatActivity() {\n+\n+    private var workStatus = \"\"\n+    private var carId: Long = 0\n+\n+    private lateinit var workDate: TextView\n+    private lateinit var workName: EditText\n+    private lateinit var workCost: EditText\n+    private lateinit var workDescription: EditText\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_add_work)\n+        findViewById<View>(R.id.arrow_back_add_work).setOnClickListener { finish() }\n+\n+        workDate = findViewById(R.id.work_date)\n+        workName = findViewById(R.id.work_name_edit_text)\n+        workCost = findViewById(R.id.work_cost_edit_text)\n+        workDescription = findViewById(R.id.description_edit_text)\n+\n+        setDate()\n+        workStatus = getString(R.string.work_pending)\n+        carId = intent.getLongExtra(\"CAR_ID\",0)\n+\n+        findViewById<View>(R.id.save_edit_work).setOnClickListener {\n+            val workDate = workDate.text.toString()\n+            val workName = workName.text.toString()\n+            val workCost = workCost.text.toString()\n+            val workDescription = workDescription.text.toString()\n+\n+            if (workName.isEmpty()||workCost.isEmpty()||workDescription.isEmpty()){\n+                val fieldsCheck: String = getString(R.string.fields_check_add_work)\n+                Toast.makeText(applicationContext,fieldsCheck,Toast.LENGTH_LONG).show()\n+            } else{\n+                val workItem = WorkEntity(0,carId,workDate,workName,workDescription,workCost,workStatus)\n+                setDataIntentRX(workItem)\n+                finish()\n+            }\n+        }\n+    }\n+\n+    fun onRadioButtonClicked(view: View){\n+        val isSelected = (view as AppCompatRadioButton).isChecked\n+        when(view.id){\n+            R.id.work_icon_pending ->\n+                if (isSelected){ workStatus = getString(R.string.work_pending) }\n+            R.id.work_icon_progress ->\n+                if (isSelected){ workStatus = getString(R.string.work_in_progress) }\n+            R.id.work_icon_completed ->\n+                if (isSelected){ workStatus = getString(R.string.work_completed) }\n+        }\n+    }\n+\n+    private fun setDate(){\n+        val simpleDateFormat = SimpleDateFormat.getDateInstance()\n+        val currentDate = simpleDateFormat.format(Date())\n+        workDate.text = currentDate\n+    }\n+\n+    private fun setDataIntentRX(workEntity: WorkEntity){\n+        val intent = Intent()\n+        setResult(RESULT_OK, intent)\n+        val database = DataBaseInfo.getInstance(this)\n+        Completable.create { emitter -> database?.getWorkInfoDao()?.insertWorkEntity(workEntity)\n+            emitter.onComplete()\n+        }.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribe()\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "44fd388ccc7b3591bb029e5a4e6253e0546b7d3a",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/EditWorkActivity.kt",
    "status": "added",
    "additions": 140,
    "deletions": 0,
    "changes": 140,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/EditWorkActivity.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/EditWorkActivity.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/EditWorkActivity.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,140 @@\n+package com.example.homework7_rxjava.work\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.view.View\n+import android.widget.EditText\n+import android.widget.TextView\n+import androidx.appcompat.app.AlertDialog\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.appcompat.widget.AppCompatRadioButton\n+import com.example.homework7_rxjava.R\n+import com.example.homework7_rxjava.room.DataBaseInfo\n+import com.example.homework7_rxjava.room.WorkEntity\n+import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers\n+import io.reactivex.rxjava3.core.Single\n+import io.reactivex.rxjava3.schedulers.Schedulers\n+\n+class EditWorkActivity: AppCompatActivity() {\n+\n+    private var workStatus = \"\"\n+    private var ID: Long = 0\n+    private var carID: Long = 0\n+\n+    private lateinit var workDate: TextView\n+    private lateinit var workNameText: TextView\n+    private lateinit var workNameEdit : EditText\n+    private lateinit var workCostEdit: EditText\n+    private lateinit var descriptionEdit: EditText\n+\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_edit_work)\n+\n+         workDate = findViewById(R.id.edit_work_date)\n+         workNameText = findViewById(R.id.work_name_edit_work)\n+         workNameEdit = findViewById(R.id.work_name_edit_text)\n+         workCostEdit = findViewById(R.id.work_cost_edit_text)\n+         descriptionEdit = findViewById(R.id.description_edit_text)\n+\n+\n+        findViewById<View>(R.id.arrow_back_edit_work).setOnClickListener { finish() }\n+        ID = intent.getLongExtra(\"ID\", 0)\n+        carID = intent.getLongExtra(\"carID\",0)\n+        getWorkItemDataRX()\n+\n+        findViewById<View>(R.id.save_edit_work).setOnClickListener {\n+            updateWorkItemRX()\n+            finish()\n+        }\n+\n+        findViewById<View>(R.id.delete_edit_work).setOnClickListener {\n+            val builder = AlertDialog.Builder(this)\n+            builder.setMessage(getString(R.string.dialog_delete_work_message))\n+            builder.setPositiveButton(getString(R.string.dialog_ok)){ dialog, id ->\n+                deleteWorkItemRX()\n+                finish()\n+            }\n+            builder.setNegativeButton(getString(R.string.dialog_cancel)){ dialog, id ->}\n+            val alertDialog: AlertDialog = builder.create()\n+            alertDialog.setCancelable(true)\n+            alertDialog.show()\n+        }\n+    }\n+\n+    private fun deleteWorkItemRX(){\n+        val intent = Intent()\n+        setResult(RESULT_OK,intent)\n+        val workNameEdit =  workNameEdit.text.toString()\n+        val workCostEdit = workCostEdit.text.toString()\n+        val descriptionEdit = descriptionEdit.text.toString()\n+        val workDate = workDate.text.toString()\n+\n+        val work = WorkEntity(ID,carID,workDate, workNameEdit, descriptionEdit, workCostEdit,workStatus)\n+        val database = DataBaseInfo.getInstance(applicationContext)\n+        Single.create<WorkEntity> { emitter ->\n+            database?.getWorkInfoDao()?.deleteWorkEntity(work)\n+            emitter.onSuccess(work)\n+        }.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribe()\n+    }\n+\n+    private fun updateWorkItemRX(){\n+        val intent = Intent()\n+        setResult(RESULT_OK,intent)\n+        val workNameEdit =  workNameEdit.text.toString()\n+        val workCostEdit = workCostEdit.text.toString()\n+        val descriptionEdit = descriptionEdit.text.toString()\n+        val workDate = workDate.text.toString()\n+\n+        val work = WorkEntity(ID,carID,workDate, workNameEdit, descriptionEdit, workCostEdit,workStatus)\n+        val database = DataBaseInfo.getInstance(applicationContext)\n+        Single.create<WorkEntity> { emitter ->\n+            database?.getWorkInfoDao()?.updateWorkEntity(work)\n+            emitter.onSuccess(work)\n+        }.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribe()\n+    }\n+\n+  private fun getWorkItemDataRX(){\n+      val database = DataBaseInfo.getInstance(applicationContext)\n+      Single.create<WorkEntity> { emitter ->  val workEntity =database?.getWorkInfoDao()?.getWorkId(ID)\n+          emitter.onSuccess(workEntity)\n+      }.subscribeOn(Schedulers.io())\n+              .observeOn(AndroidSchedulers.mainThread())\n+              .subscribe { workEntity ->\n+\n+                  workNameText.text = workEntity?.workName\n+                  workDate.text = workEntity?.workDate\n+                  workNameEdit.setText(workEntity?.workName)\n+                  workCostEdit.setText(workEntity?.workCost)\n+                  descriptionEdit.setText(workEntity?.workDescription)\n+                  workStatus = workEntity?.workStatus.toString()\n+\n+                  if (workStatus.equals(getString(R.string.work_pending))){\n+                      findViewById<AppCompatRadioButton>(R.id.work_icon_pending_edit).isChecked = true\n+                  }\n+                  if (workStatus.equals(getString(R.string.work_in_progress))){\n+                      findViewById<AppCompatRadioButton>(R.id.work_icon_progress_edit).isChecked = true\n+                  }\n+                  if (workStatus.equals(getString(R.string.work_completed))){\n+                      findViewById<AppCompatRadioButton>(R.id.work_icon_completed_edit).isChecked = true\n+                  }\n+              }\n+  }\n+\n+    fun onRadioButtonClicked(view: View) {\n+        val isSelected = (view as AppCompatRadioButton).isChecked\n+        when(view.id){\n+            R.id.work_icon_pending_edit ->\n+                if (isSelected){ workStatus = getString(R.string.work_pending) }\n+            R.id.work_icon_progress_edit ->\n+                if (isSelected){ workStatus = getString(R.string.work_in_progress) }\n+            R.id.work_icon_completed_edit ->\n+                if (isSelected){ workStatus = getString(R.string.work_completed) }\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "e35df22ab7f2785b7a12b56389d61a9cc43b5801",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/WorkItemAdapter.kt",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/WorkItemAdapter.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/WorkItemAdapter.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/WorkItemAdapter.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,83 @@\n+package com.example.homework7_rxjava.work\n+\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import android.widget.TextView\n+import androidx.recyclerview.widget.RecyclerView\n+import com.example.homework7_rxjava.R\n+import com.example.homework7_rxjava.room.WorkEntity\n+\n+\n+class WorkItemAdapter(private val workEntityList: List<WorkEntity>,\n+                      private val listener: OnItemClickListener):\n+                        RecyclerView.Adapter<WorkItemAdapter.WorkItemViewHolder>() {\n+\n+   inner class WorkItemViewHolder(itemView: View): RecyclerView.ViewHolder(itemView), View.OnClickListener{\n+\n+        private val workStatus: TextView = itemView.findViewById(R.id.working_progress_text_item)\n+        private val workName : TextView = itemView.findViewById(R.id.work_name_item)\n+        private val workDate : TextView = itemView.findViewById(R.id.work_date_item)\n+        private val workPrice : TextView = itemView.findViewById(R.id.work_price_item)\n+\n+        fun bind(workItem: WorkEntity){\n+            workStatus.text = workItem.workStatus\n+            workName.text = workItem.workName\n+            workDate.text = workItem.workDate\n+            workPrice.text = workItem.workCost\n+        }\n+\n+       init {\n+           itemView.setOnClickListener (this)\n+       }\n+\n+       override fun onClick(v: View?) {\n+           val position = adapterPosition\n+           if (position != RecyclerView.NO_POSITION){\n+               listener.onItemClick(position)\n+           }\n+       }\n+   }\n+\n+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): WorkItemViewHolder {\n+        val view: View = LayoutInflater.from(parent.context).inflate(R.layout.item_work, parent, false)\n+        return WorkItemViewHolder(view)\n+    }\n+\n+    override fun onBindViewHolder(holder: WorkItemViewHolder, position: Int) {\n+        val item = workEntityList[position]\n+        val pending = holder.itemView.context.getString(R.string.work_pending)\n+        val progress = holder.itemView.context.getString(R.string.work_in_progress)\n+        val completed = holder.itemView.context.getString(R.string.work_completed)\n+        if (item.workStatus.equals(pending)){\n+            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {\n+                holder.itemView.findViewById<TextView>(R.id.working_progress_text_item).setTextColor(holder.itemView.context.getColor(R.color.red))\n+                holder.itemView.findViewById<TextView>(R.id.working_progress_text_item).\n+                setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.ic_baseline_construction_pending24, 0, 0)\n+            }\n+        }\n+        if (item.workStatus.equals(progress)){\n+            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {\n+                holder.itemView.findViewById<TextView>(R.id.working_progress_text_item).setTextColor(holder.itemView.context.getColor(R.color.dark_yellow))\n+                holder.itemView.findViewById<TextView>(R.id.working_progress_text_item).\n+                setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.ic_baseline_construction_progress24, 0, 0)\n+            }\n+        }\n+        if (item.workStatus.equals(completed)){\n+            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {\n+                holder.itemView.findViewById<TextView>(R.id.working_progress_text_item).setTextColor(holder.itemView.context.getColor(R.color.green))\n+                holder.itemView.findViewById<TextView>(R.id.working_progress_text_item).\n+                setCompoundDrawablesWithIntrinsicBounds(0, R.drawable.ic_baseline_construction_completed24, 0, 0)\n+            }\n+        }\n+        holder.bind(workEntityList.get(position))\n+    }\n+\n+    override fun getItemCount(): Int {\n+        return workEntityList.size\n+    }\n+\n+    interface OnItemClickListener{\n+        fun onItemClick(position: Int)\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "cd124ce2fd262366c1f60919e36a346ebb71ad0a",
    "filename": "homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/WorksListActivity.kt",
    "status": "added",
    "additions": 176,
    "deletions": 0,
    "changes": 176,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/WorksListActivity.kt",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/WorksListActivity.kt",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/java/com/example/homework7_rxjava/work/WorksListActivity.kt?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,176 @@\n+package com.example.homework7_rxjava.work\n+\n+import android.content.Intent\n+import android.os.Bundle\n+import android.view.Menu\n+import android.view.MenuItem\n+import android.view.View\n+import android.widget.TextView\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.appcompat.widget.SearchView\n+import androidx.appcompat.widget.Toolbar\n+import androidx.recyclerview.widget.LinearLayoutManager\n+import androidx.recyclerview.widget.RecyclerView\n+import com.example.homework7_rxjava.R\n+import com.example.homework7_rxjava.room.CarInfoEntity\n+import com.example.homework7_rxjava.room.DataBaseInfo\n+import com.example.homework7_rxjava.room.WorkEntity\n+import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers\n+import io.reactivex.rxjava3.core.Single\n+import io.reactivex.rxjava3.schedulers.Schedulers\n+import kotlinx.coroutines.*\n+import java.util.*\n+import kotlin.collections.ArrayList\n+\n+private const val ADD_WORK_CODE = 333\n+private const val EDIT_WORK_CODE = 444\n+\n+\n+class WorksListActivity: AppCompatActivity(), WorkItemAdapter.OnItemClickListener {\n+\n+    private var workList = ArrayList<WorkEntity>()\n+    private var filteredWorkList = ArrayList<WorkEntity>()\n+    private lateinit var recyclerView: RecyclerView\n+    private lateinit var workItemAdapter: WorkItemAdapter\n+    private var carId: Long = 0\n+\n+    private lateinit var producer: TextView\n+    private lateinit var model: TextView\n+    private lateinit var plate: TextView\n+    private lateinit var mainText: TextView\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_works_list)\n+\n+        val toolbar: Toolbar? = findViewById(R.id.toolbar_work_list)\n+        setSupportActionBar(toolbar)\n+\n+        producer = findViewById(R.id.car_producer_works_list_toolbar)\n+        model = findViewById(R.id.car_model_works_list_toolbar)\n+        plate = findViewById(R.id.car_plate_works_list_toolbar)\n+        mainText = findViewById(R.id.emptyWorkList_text)\n+\n+        getCarDataRX()\n+        getAllWorksForCarRX()\n+\n+        recyclerView = findViewById(R.id.workListRecycler)\n+        workItemAdapter = WorkItemAdapter(filteredWorkList,this)\n+        recyclerView.adapter = workItemAdapter\n+        recyclerView.layoutManager = LinearLayoutManager(this, RecyclerView.VERTICAL, false)\n+\n+        findViewById<View>(R.id.arrow_back_works_list).setOnClickListener { finish() }\n+        findViewById<View>(R.id.addWorkFab).setOnClickListener {\n+            val intent = Intent(this@WorksListActivity, AddWorkActivity::class.java)\n+            intent.putExtra(\"CAR_ID\", carId)\n+            startActivityForResult(intent, ADD_WORK_CODE)\n+        }\n+    }\n+\n+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n+        if (requestCode == ADD_WORK_CODE && resultCode == RESULT_OK){\n+            filteredWorkList.clear()\n+            getAllWorksForCarRX()\n+        }\n+        if (requestCode == EDIT_WORK_CODE && resultCode == RESULT_OK){\n+            filteredWorkList.clear()\n+            getAllWorksForCarRX()\n+        }\n+        super.onActivityResult(requestCode, resultCode, data)\n+    }\n+\n+    override fun onCreateOptionsMenu(menu: Menu?): Boolean {\n+        menuInflater.inflate(R.menu.works_menu, menu)\n+        val  menuItem = menu?.findItem(R.id.menu_work_search)\n+        val searchView: SearchView = menuItem?.actionView as SearchView\n+\n+        searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {\n+            override fun onQueryTextSubmit(query: String?): Boolean {\n+                return true\n+            }\n+            // producer and plate filter in search menu\n+            override fun onQueryTextChange(newText: String?): Boolean {\n+                if (newText!!.isNotEmpty()) {\n+                    filteredWorkList.clear()\n+                    val search = newText.toLowerCase(Locale.ROOT)\n+                    val works = workList.filter { it.workName.toLowerCase(Locale.ROOT).contains(search) }\n+                    filteredWorkList.addAll(works)\n+                    workItemAdapter.notifyDataSetChanged()\n+                } else {\n+                    filteredWorkList.clear()\n+                    filteredWorkList.addAll(workList)\n+                    workItemAdapter.notifyDataSetChanged()\n+                }\n+                return true\n+            }\n+        })\n+        return super.onCreateOptionsMenu(menu)\n+    }\n+\n+    override fun onOptionsItemSelected(item: MenuItem): Boolean {\n+        when(item.itemId){\n+            R.id.pending ->{\n+                filteredWorkList.clear()\n+                val works = workList.filter { it.workStatus == getString(R.string.work_pending) }\n+                filteredWorkList.addAll(works)\n+                workItemAdapter.notifyDataSetChanged()\n+            }\n+            R.id.in_progress ->{\n+                filteredWorkList.clear()\n+                val works = workList.filter { it.workStatus.equals(getString(R.string.work_in_progress)) }\n+                filteredWorkList.addAll(works)\n+                workItemAdapter.notifyDataSetChanged()\n+            }\n+            R.id.completed ->{\n+                filteredWorkList.clear()\n+                val works = workList.filter { it.workStatus.equals(getString(R.string.work_completed)) }\n+                filteredWorkList.addAll(works)\n+                workItemAdapter.notifyDataSetChanged()\n+            }\n+        }\n+        return super.onOptionsItemSelected(item)\n+    }\n+\n+    //getting car data for work activity toolbar\n+    private fun getCarDataRX(){\n+        val id = intent.getLongExtra(\"ID\", 0)\n+        carId = id\n+        val database = DataBaseInfo.getInstance(applicationContext)\n+        Single.create<CarInfoEntity> { emitter -> val carEntity = database?.getCarInfoDao()?.getInfoId(id)\n+            emitter.onSuccess(carEntity)\n+        }.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribe { carEntity ->\n+                    producer.text = carEntity?.carProducer\n+                    model.text = carEntity?.carModel\n+                    plate.text = carEntity?.carPlate\n+                }\n+    }\n+\n+    private fun getAllWorksForCarRX(){\n+        val database = DataBaseInfo.getInstance(applicationContext)\n+        Single.create<List<WorkEntity>> { emitter ->\n+            val dbList = database?.getWorkInfoDao()?.getWorksForCar(carId) ?: emptyList()\n+            emitter.onSuccess(dbList)\n+        }.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribe { dbList ->\n+                    workList.clear()\n+                    workList.addAll(dbList)\n+                    if (workList.isNotEmpty()){\n+                        mainText.text = \"\"\n+                    }\n+                    workList.sortBy { it.workName }\n+                    filteredWorkList.addAll(workList)\n+                    workItemAdapter.notifyDataSetChanged()\n+\n+                }\n+    }\n+\n+    override fun onItemClick(position: Int) {\n+        val intent = Intent(this@WorksListActivity, EditWorkActivity::class.java)\n+        intent.putExtra(\"ID\",workList.get(position).id)\n+        intent.putExtra(\"carID\",workList.get(position).carId)\n+        startActivityForResult(intent,EDIT_WORK_CODE)\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2b068d11462a4b96669193de13a711a3a36220a0",
    "filename": "homework7_rxjava/src/main/res/drawable-v24/ic_launcher_foreground.xml",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable-v24/ic_launcher_foreground.xml",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable-v24/ic_launcher_foreground.xml",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/res/drawable-v24/ic_launcher_foreground.xml?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,30 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:aapt=\"http://schemas.android.com/aapt\"\n+    android:width=\"108dp\"\n+    android:height=\"108dp\"\n+    android:viewportWidth=\"108\"\n+    android:viewportHeight=\"108\">\n+    <path android:pathData=\"M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z\">\n+        <aapt:attr name=\"android:fillColor\">\n+            <gradient\n+                android:endX=\"85.84757\"\n+                android:endY=\"92.4963\"\n+                android:startX=\"42.9492\"\n+                android:startY=\"49.59793\"\n+                android:type=\"linear\">\n+                <item\n+                    android:color=\"#44000000\"\n+                    android:offset=\"0.0\" />\n+                <item\n+                    android:color=\"#00000000\"\n+                    android:offset=\"1.0\" />\n+            </gradient>\n+        </aapt:attr>\n+    </path>\n+    <path\n+        android:fillColor=\"#FFFFFF\"\n+        android:fillType=\"nonZero\"\n+        android:pathData=\"M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z\"\n+        android:strokeWidth=\"1\"\n+        android:strokeColor=\"#00000000\" />\n+</vector>\n\\ No newline at end of file"
  },
  {
    "sha": "2ea5583d49a9ded7a94576bde582c15aa334005f",
    "filename": "homework7_rxjava/src/main/res/drawable/completed_selector.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/completed_selector.xml",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/completed_selector.xml",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/res/drawable/completed_selector.xml?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:drawable=\"@drawable/ic_baseline_construction_completed\" android:state_checked=\"true\"/>\n+    <item android:drawable=\"@drawable/ic_baseline_construction_48\" android:state_checked=\"false\"/>\n+\n+</selector>\n\\ No newline at end of file"
  },
  {
    "sha": "fa122e182d2126f3005aec787656461869560916",
    "filename": "homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_back_24.xml",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_back_24.xml",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_back_24.xml",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_back_24.xml?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,5 @@\n+<vector android:height=\"24dp\" android:tint=\"#FFFFFF\"\n+    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\n+    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <path android:fillColor=\"@android:color/white\" android:pathData=\"M20,11H7.83l5.59,-5.59L12,4l-8,8 8,8 1.41,-1.41L7.83,13H20v-2z\"/>\n+</vector>"
  },
  {
    "sha": "40dd15d3e1e84e337ea1b42eb4bdd4caef48ba71",
    "filename": "homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_forward_24.xml",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_forward_24.xml",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_forward_24.xml",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_forward_24.xml?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,5 @@\n+<vector android:height=\"24dp\" android:tint=\"#D3D3D3\"\n+    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\n+    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <path android:fillColor=\"@android:color/white\" android:pathData=\"M12,4l-1.41,1.41L16.17,11H4v2h12.17l-5.58,5.59L12,20l8,-8z\"/>\n+</vector>"
  },
  {
    "sha": "7f39a8e40cb759ef96121a5ada84ff44b7fd4872",
    "filename": "homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_forward_48.xml",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_forward_48.xml",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_forward_48.xml",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/res/drawable/ic_baseline_arrow_forward_48.xml?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,5 @@\n+<vector android:height=\"48dp\" android:tint=\"#D3D3D3\"\n+    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\n+    android:width=\"48dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <path android:fillColor=\"@android:color/white\" android:pathData=\"M12,4l-1.41,1.41L16.17,11H4v2h12.17l-5.58,5.59L12,20l8,-8z\"/>\n+</vector>"
  },
  {
    "sha": "91411013bab215f3272676cc2dafb84299be70b7",
    "filename": "homework7_rxjava/src/main/res/drawable/ic_baseline_camera_alt_24.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_camera_alt_24.xml",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_camera_alt_24.xml",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/res/drawable/ic_baseline_camera_alt_24.xml?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,6 @@\n+<vector android:height=\"24dp\" android:tint=\"#FFFFFF\"\n+    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\n+    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <path android:fillColor=\"@android:color/white\" android:pathData=\"M12,12m-3.2,0a3.2,3.2 0,1 1,6.4 0a3.2,3.2 0,1 1,-6.4 0\"/>\n+    <path android:fillColor=\"@android:color/white\" android:pathData=\"M9,2L7.17,4L4,4c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2L22,6c0,-1.1 -0.9,-2 -2,-2h-3.17L15,2L9,2zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5z\"/>\n+</vector>"
  },
  {
    "sha": "5722b9f400eafd00d3700344bab8e8075d7ac911",
    "filename": "homework7_rxjava/src/main/res/drawable/ic_baseline_card_travel_24.xml",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_card_travel_24.xml",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_card_travel_24.xml",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/res/drawable/ic_baseline_card_travel_24.xml?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,5 @@\n+<vector android:height=\"24dp\" android:tint=\"#FFFFFF\"\n+    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\n+    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <path android:fillColor=\"@android:color/white\" android:pathData=\"M20,6h-3L17,4c0,-1.11 -0.89,-2 -2,-2L9,2c-1.11,0 -2,0.89 -2,2v2L4,6c-1.11,0 -2,0.89 -2,2v11c0,1.11 0.89,2 2,2h16c1.11,0 2,-0.89 2,-2L22,8c0,-1.11 -0.89,-2 -2,-2zM9,4h6v2L9,6L9,4zM20,19L4,19v-2h16v2zM20,14L4,14L4,8h3v2h2L9,8h6v2h2L17,8h3v6z\"/>\n+</vector>"
  },
  {
    "sha": "2501e9fd9fdde21ecf8372a6a9471c91590c1ea3",
    "filename": "homework7_rxjava/src/main/res/drawable/ic_baseline_check_24.xml",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/StanHigh/hwandroid/blob/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_check_24.xml",
    "raw_url": "https://github.com/StanHigh/hwandroid/raw/8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36/homework7_rxjava/src/main/res/drawable/ic_baseline_check_24.xml",
    "contents_url": "https://api.github.com/repos/StanHigh/hwandroid/contents/homework7_rxjava/src/main/res/drawable/ic_baseline_check_24.xml?ref=8a21bc016de25f53a10fa7c3ed4d6a007bcfdb36",
    "patch": "@@ -0,0 +1,5 @@\n+<vector android:height=\"24dp\" android:tint=\"#FFFFFF\"\n+    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\n+    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <path android:fillColor=\"@android:color/white\" android:pathData=\"M9,16.17L4.83,12l-1.42,1.41L9,19 21,7l-1.41,-1.41z\"/>\n+</vector>"
  }
]
