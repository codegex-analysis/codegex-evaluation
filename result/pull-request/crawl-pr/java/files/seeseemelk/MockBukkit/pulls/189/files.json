[
  {
    "sha": "a4eacac7fb2679c10614c0a2e9ae60c69ab03525",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/entity/PlayerMock.java",
    "status": "modified",
    "additions": 130,
    "deletions": 126,
    "changes": 256,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4019548455af97a58f2c13717f2de52fbfd1fe70/src/main/java/be/seeseemelk/mockbukkit/entity/PlayerMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4019548455af97a58f2c13717f2de52fbfd1fe70/src/main/java/be/seeseemelk/mockbukkit/entity/PlayerMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/entity/PlayerMock.java?ref=4019548455af97a58f2c13717f2de52fbfd1fe70",
    "patch": "@@ -5,8 +5,8 @@\n \n import java.net.InetSocketAddress;\n import java.nio.charset.StandardCharsets;\n-import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.LinkedList;\n import java.util.List;\n@@ -131,7 +131,7 @@ public PlayerMock(ServerMock server, String name, UUID uuid)\n \t}\n \n \t@Override\n-\tpublic EntityType getType()\n+\tpublic @NotNull EntityType getType()\n \t{\n \t\treturn EntityType.PLAYER;\n \t}\n@@ -251,7 +251,7 @@ public void respawn()\n \t\t\trespawnLocation = getLocation().getWorld().getSpawnLocation();\n \t\t}\n \n-\t\tPlayerRespawnEvent event = new PlayerRespawnEvent(this, respawnLocation, isBedSpawn);\n+\t\tPlayerRespawnEvent event = new PlayerRespawnEvent(this, respawnLocation, isBedSpawn,false);\n \t\tBukkit.getPluginManager().callEvent(event);\n \n \t\t// Reset location and health\n@@ -261,7 +261,7 @@ public void respawn()\n \t}\n \n \t@Override\n-\tpublic PlayerInventory getInventory()\n+\tpublic @NotNull PlayerInventory getInventory()\n \t{\n \t\tif (inventory == null)\n \t\t{\n@@ -271,13 +271,13 @@ public PlayerInventory getInventory()\n \t}\n \n \t@Override\n-\tpublic GameMode getGameMode()\n+\tpublic @NotNull GameMode getGameMode()\n \t{\n \t\treturn gamemode;\n \t}\n \n \t@Override\n-\tpublic void setGameMode(GameMode mode)\n+\tpublic void setGameMode(@NotNull GameMode mode)\n \t{\n \t\tgamemode = mode;\n \t}\n@@ -318,20 +318,20 @@ public boolean isBanned()\n \t}\n \n \t@Override\n-\tpublic InventoryView getOpenInventory()\n+\tpublic @NotNull InventoryView getOpenInventory()\n \t{\n \t\treturn inventoryView;\n \t}\n \n \t@Override\n-\tpublic void openInventory(InventoryView inventory)\n+\tpublic void openInventory(@NotNull InventoryView inventory)\n \t{\n \t\tcloseInventory();\n \t\tinventoryView = inventory;\n \t}\n \n \t@Override\n-\tpublic InventoryView openInventory(Inventory inventory)\n+\tpublic InventoryView openInventory(@NotNull Inventory inventory)\n \t{\n \t\tcloseInventory();\n \t\tinventoryView = new PlayerInventoryViewMock(this, inventory);\n@@ -381,6 +381,7 @@ public void assertInventoryView(String message, InventoryType type, Predicate<In\n \t * @param type      The {@link InventoryType} you are expecting\n \t * @param predicate A custom {@link Predicate} to check the opened {@link Inventory}.\n \t */\n+\t@SuppressWarnings(\"unused\")\n \tpublic void assertInventoryView(InventoryType type, Predicate<Inventory> predicate)\n \t{\n \t\tassertInventoryView(\"The InventoryView Assertion has failed\", type, predicate);\n@@ -391,6 +392,7 @@ public void assertInventoryView(InventoryType type, Predicate<Inventory> predica\n \t *\n \t * @param type The {@link InventoryType} you are expecting\n \t */\n+\t@SuppressWarnings(\"unused\")\n \tpublic void assertInventoryView(InventoryType type)\n \t{\n \t\tassertInventoryView(\"The InventoryView Assertion has failed\", type, inv -> true);\n@@ -402,19 +404,20 @@ public void assertInventoryView(InventoryType type)\n \t * @param message The message to display upon failure\n \t * @param type    The {@link InventoryType} you are expecting\n \t */\n+\t@SuppressWarnings(\"unused\")\n \tpublic void assertInventoryView(String message, InventoryType type)\n \t{\n \t\tassertInventoryView(message, type, inv -> true);\n \t}\n \n \t@Override\n-\tpublic boolean performCommand(String command)\n+\tpublic boolean performCommand(@NotNull String command)\n \t{\n \t\treturn Bukkit.dispatchCommand(this, command);\n \t}\n \n \t@Override\n-\tpublic Inventory getEnderChest()\n+\tpublic @NotNull Inventory getEnderChest()\n \t{\n \t\tif (enderChest == null)\n \t\t{\n@@ -425,14 +428,14 @@ public Inventory getEnderChest()\n \t}\n \n \t@Override\n-\tpublic MainHand getMainHand()\n+\tpublic @NotNull MainHand getMainHand()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean setWindowProperty(Property prop, int value)\n+\tpublic boolean setWindowProperty(@NotNull Property prop, int value)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -453,20 +456,20 @@ public InventoryView openEnchanting(Location location, boolean force)\n \t}\n \n \t@Override\n-\tpublic InventoryView openMerchant(Villager trader, boolean force)\n+\tpublic InventoryView openMerchant(@NotNull Villager trader, boolean force)\n \t{\n \t\treturn openMerchant((Merchant) trader, force);\n \t}\n \n \t@Override\n-\tpublic InventoryView openMerchant(Merchant merchant, boolean force)\n+\tpublic InventoryView openMerchant(@NotNull Merchant merchant, boolean force)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic ItemStack getItemInHand()\n+\tpublic @NotNull ItemStack getItemInHand()\n \t{\n \t\treturn getInventory().getItemInMainHand();\n \t}\n@@ -478,9 +481,9 @@ public void setItemInHand(ItemStack item)\n \t}\n \n \t@Override\n-\tpublic ItemStack getItemOnCursor()\n+\tpublic @NotNull ItemStack getItemOnCursor()\n \t{\n-\t\treturn cursor == null ? null : cursor.clone();\n+\t\treturn cursor == null ? new ItemStack(Material.AIR,0) : cursor.clone();\n \t}\n \n \t@Override\n@@ -490,21 +493,21 @@ public void setItemOnCursor(ItemStack item)\n \t}\n \n \t@Override\n-\tpublic boolean hasCooldown(Material material)\n+\tpublic boolean hasCooldown(@NotNull Material material)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic int getCooldown(Material material)\n+\tpublic int getCooldown(@NotNull Material material)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setCooldown(Material material, int ticks)\n+\tpublic void setCooldown(@NotNull Material material, int ticks)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -592,21 +595,21 @@ public double getEyeHeight(boolean ignorePose)\n \t}\n \n \t@Override\n-\tpublic List<Block> getLineOfSight(Set<Material> transparent, int maxDistance)\n+\tpublic @NotNull List<Block> getLineOfSight(Set<Material> transparent, int maxDistance)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Block getTargetBlock(Set<Material> transparent, int maxDistance)\n+\tpublic @NotNull Block getTargetBlock(Set<Material> transparent, int maxDistance)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic List<Block> getLastTwoTargetBlocks(Set<Material> transparent, int maxDistance)\n+\tpublic @NotNull List<Block> getLastTwoTargetBlocks(Set<Material> transparent, int maxDistance)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -662,7 +665,7 @@ public Player getKiller()\n \t}\n \n \t@Override\n-\tpublic boolean hasLineOfSight(Entity other)\n+\tpublic boolean hasLineOfSight(@NotNull Entity other)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -710,7 +713,7 @@ public boolean isLeashed()\n \t}\n \n \t@Override\n-\tpublic Entity getLeashHolder()\n+\tpublic @NotNull Entity getLeashHolder()\n \t{\n \t\tthrow new IllegalStateException(\"Players cannot be leashed\");\n \t}\n@@ -771,28 +774,28 @@ public boolean isConversing()\n \t}\n \n \t@Override\n-\tpublic void acceptConversationInput(String input)\n+\tpublic void acceptConversationInput(@NotNull String input)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean beginConversation(Conversation conversation)\n+\tpublic boolean beginConversation(@NotNull Conversation conversation)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void abandonConversation(Conversation conversation)\n+\tpublic void abandonConversation(@NotNull Conversation conversation)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void abandonConversation(Conversation conversation, ConversationAbandonedEvent details)\n+\tpublic void abandonConversation(@NotNull Conversation conversation, @NotNull ConversationAbandonedEvent details)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -831,28 +834,28 @@ public void setLastPlayed(long time)\n \t}\n \n \t@Override\n-\tpublic Map<String, Object> serialize()\n+\tpublic @NotNull Map<String, Object> serialize()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void sendPluginMessage(Plugin source, String channel, byte[] message)\n+\tpublic void sendPluginMessage(@NotNull Plugin source, @NotNull String channel, byte[] message)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Set<String> getListeningPluginChannels()\n+\tpublic @NotNull Set<String> getListeningPluginChannels()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic String getDisplayName()\n+\tpublic @NotNull String getDisplayName()\n \t{\n \t\treturn displayName;\n \t}\n@@ -864,7 +867,7 @@ public void setDisplayName(String name)\n \t}\n \n \t@Override\n-\tpublic String getPlayerListName()\n+\tpublic @NotNull String getPlayerListName()\n \t{\n \t\treturn this.playerListName == null ? getName() : this.playerListName;\n \t}\n@@ -985,43 +988,43 @@ public boolean isSleepingIgnored()\n \n \t@Override\n \t@Deprecated\n-\tpublic void playNote(Location loc, byte instrument, byte note)\n+\tpublic void playNote(@NotNull Location loc, byte instrument, byte note)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void playNote(Location loc, Instrument instrument, Note note)\n+\tpublic void playNote(@NotNull Location loc, @NotNull Instrument instrument, @NotNull Note note)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void playSound(Location location, String sound, float volume, float pitch)\n+\tpublic void playSound(@NotNull Location location, @NotNull String sound, float volume, float pitch)\n \t{\n \t\t// The string sound is equivalent to the internal sound name, not Sound.valueOf()\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void playSound(Location location, Sound sound, float volume, float pitch)\n+\tpublic void playSound(@NotNull Location location, @NotNull Sound sound, float volume, float pitch)\n \t{\n \t\tplaySound(location, sound, SoundCategory.MASTER, volume, pitch);\n \t}\n \n \t@Override\n-\tpublic void playSound(Location location, String sound, SoundCategory category, float volume, float pitch)\n+\tpublic void playSound(@NotNull Location location, @NotNull String sound, @NotNull SoundCategory category, float volume, float pitch)\n \t{\n \t\t// The string sound is equivalent to the internal sound name, not Sound.valueOf()\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void playSound(Location location, Sound sound, SoundCategory category, float volume, float pitch)\n+\tpublic void playSound(@NotNull Location location, @NotNull Sound sound, @NotNull SoundCategory category, float volume, float pitch)\n \t{\n \t\theardSounds.add(new AudioExperience(sound, category, location, volume, pitch));\n \t}\n@@ -1044,6 +1047,7 @@ public void assertSoundHeard(String message, Sound sound, Predicate<AudioExperie\n \t\tfail(message);\n \t}\n \n+\t@SuppressWarnings(\"unused\")\n \tpublic void assertSoundHeard(Sound sound)\n \t{\n \t\tassertSoundHeard(\"Sound Heard Assertion failed\", sound);\n@@ -1055,68 +1059,68 @@ public void assertSoundHeard(Sound sound, Predicate<AudioExperience> predicate)\n \t}\n \n \t@Override\n-\tpublic void stopSound(Sound sound)\n+\tpublic void stopSound(@NotNull Sound sound)\n \t{\n \t\tstopSound(sound, SoundCategory.MASTER);\n \t}\n \n \t@Override\n-\tpublic void stopSound(String sound)\n+\tpublic void stopSound(@NotNull String sound)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void stopSound(Sound sound, SoundCategory category)\n+\tpublic void stopSound(@NotNull Sound sound, SoundCategory category)\n \t{\n \t\t// We will just pretend the Sound has stopped.\n \t}\n \n \t@Override\n-\tpublic void stopSound(String sound, SoundCategory category)\n+\tpublic void stopSound(@NotNull String sound, SoundCategory category)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void playEffect(Location loc, Effect effect, int data)\n+\tpublic void playEffect(@NotNull Location loc, @NotNull Effect effect, int data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void playEffect(Location loc, Effect effect, T data)\n+\tpublic <T> void playEffect(@NotNull Location loc, @NotNull Effect effect, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void sendBlockChange(Location loc, Material material, byte data)\n+\tpublic void sendBlockChange(@NotNull Location loc, @NotNull Material material, byte data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean sendChunkChange(Location loc, int sx, int sy, int sz, byte[] data)\n+\tpublic boolean sendChunkChange(@NotNull Location loc, int sx, int sy, int sz, byte[] data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void sendSignChange(Location loc, String[] lines)\n+\tpublic void sendSignChange(@NotNull Location loc, String[] lines)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void sendMap(MapView map)\n+\tpublic void sendMap(@NotNull MapView map)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1130,126 +1134,126 @@ public void updateInventory()\n \t}\n \n \t@Override\n-\tpublic void incrementStatistic(Statistic statistic)\n+\tpublic void incrementStatistic(@NotNull Statistic statistic)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void decrementStatistic(Statistic statistic)\n+\tpublic void decrementStatistic(@NotNull Statistic statistic)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void incrementStatistic(Statistic statistic, int amount)\n+\tpublic void incrementStatistic(@NotNull Statistic statistic, int amount)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void decrementStatistic(Statistic statistic, int amount)\n+\tpublic void decrementStatistic(@NotNull Statistic statistic, int amount)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setStatistic(Statistic statistic, int newValue)\n+\tpublic void setStatistic(@NotNull Statistic statistic, int newValue)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic int getStatistic(Statistic statistic)\n+\tpublic int getStatistic(@NotNull Statistic statistic)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void incrementStatistic(Statistic statistic, Material material)\n+\tpublic void incrementStatistic(@NotNull Statistic statistic, @NotNull Material material)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void decrementStatistic(Statistic statistic, Material material)\n+\tpublic void decrementStatistic(@NotNull Statistic statistic, @NotNull Material material)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic int getStatistic(Statistic statistic, Material material)\n+\tpublic int getStatistic(@NotNull Statistic statistic, @NotNull Material material)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void incrementStatistic(Statistic statistic, Material material, int amount)\n+\tpublic void incrementStatistic(@NotNull Statistic statistic, @NotNull Material material, int amount)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void decrementStatistic(Statistic statistic, Material material, int amount)\n+\tpublic void decrementStatistic(@NotNull Statistic statistic, @NotNull Material material, int amount)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setStatistic(Statistic statistic, Material material, int newValue)\n+\tpublic void setStatistic(@NotNull Statistic statistic, @NotNull Material material, int newValue)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void incrementStatistic(Statistic statistic, EntityType entityType)\n+\tpublic void incrementStatistic(@NotNull Statistic statistic, @NotNull EntityType entityType)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void decrementStatistic(Statistic statistic, EntityType entityType)\n+\tpublic void decrementStatistic(@NotNull Statistic statistic, @NotNull EntityType entityType)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic int getStatistic(Statistic statistic, EntityType entityType)\n+\tpublic int getStatistic(@NotNull Statistic statistic, @NotNull EntityType entityType)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void incrementStatistic(Statistic statistic, EntityType entityType, int amount)\n+\tpublic void incrementStatistic(@NotNull Statistic statistic, @NotNull EntityType entityType, int amount)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void decrementStatistic(Statistic statistic, EntityType entityType, int amount)\n+\tpublic void decrementStatistic(@NotNull Statistic statistic, @NotNull EntityType entityType, int amount)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setStatistic(Statistic statistic, EntityType entityType, int newValue)\n+\tpublic void setStatistic(@NotNull Statistic statistic, @NotNull EntityType entityType, int newValue)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1291,7 +1295,7 @@ public void resetPlayerTime()\n \t}\n \n \t@Override\n-\tpublic void setPlayerWeather(WeatherType type)\n+\tpublic void setPlayerWeather(@NotNull WeatherType type)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1466,36 +1470,36 @@ public void setAllowFlight(boolean flight)\n \n \t@Override\n \t@Deprecated\n-\tpublic void hidePlayer(Player player)\n+\tpublic void hidePlayer(@NotNull Player player)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void hidePlayer(Plugin plugin, Player player)\n+\tpublic void hidePlayer(@NotNull Plugin plugin, @NotNull Player player)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n \t@Deprecated\n-\tpublic void showPlayer(Player player)\n+\tpublic void showPlayer(@NotNull Player player)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void showPlayer(Plugin plugin, Player player)\n+\tpublic void showPlayer(@NotNull Plugin plugin, @NotNull Player player)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean canSee(Player player)\n+\tpublic boolean canSee(@NotNull Player player)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1545,35 +1549,35 @@ public float getWalkSpeed()\n \n \t@Override\n \t@Deprecated\n-\tpublic void setTexturePack(String url)\n+\tpublic void setTexturePack(@NotNull String url)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setResourcePack(String url)\n+\tpublic void setResourcePack(@NotNull String url)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setResourcePack(String url, byte[] hash)\n+\tpublic void setResourcePack(@NotNull String url, byte[] hash)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Scoreboard getScoreboard()\n+\tpublic @NotNull Scoreboard getScoreboard()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setScoreboard(Scoreboard scoreboard)\n+\tpublic void setScoreboard(@NotNull Scoreboard scoreboard)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1643,106 +1647,106 @@ public void resetTitle()\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, Location location, int count)\n+\tpublic void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, double x, double y, double z, int count)\n+\tpublic void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, Location location, int count, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, double x, double y, double z, int count, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, Location location, int count, double offsetX, double offsetY,\n-\t                          double offsetZ)\n+\tpublic void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, double offsetX, double offsetY,\n+\t\t\t\t\t\t\t  double offsetZ)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, double x, double y, double z, int count, double offsetX,\n-\t                          double offsetY, double offsetZ)\n+\tpublic void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, double offsetX,\n+\t\t\t\t\t\t\t  double offsetY, double offsetZ)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, Location location, int count, double offsetX, double offsetY,\n-\t                              double offsetZ, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, double offsetX, double offsetY,\n+\t\t\t\t\t\t\t\t  double offsetZ, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, double x, double y, double z, int count, double offsetX,\n-\t                              double offsetY, double offsetZ, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, double offsetX,\n+\t\t\t\t\t\t\t\t  double offsetY, double offsetZ, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, Location location, int count, double offsetX, double offsetY,\n-\t                          double offsetZ, double extra)\n+\tpublic void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, double offsetX, double offsetY,\n+\t\t\t\t\t\t\t  double offsetZ, double extra)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, double x, double y, double z, int count, double offsetX,\n-\t                          double offsetY, double offsetZ, double extra)\n+\tpublic void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, double offsetX,\n+\t\t\t\t\t\t\t  double offsetY, double offsetZ, double extra)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, Location location, int count, double offsetX, double offsetY,\n-\t                              double offsetZ, double extra, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, double offsetX, double offsetY,\n+\t\t\t\t\t\t\t\t  double offsetZ, double extra, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, double x, double y, double z, int count, double offsetX,\n-\t                              double offsetY, double offsetZ, double extra, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, double offsetX,\n+\t\t\t\t\t\t\t\t  double offsetY, double offsetZ, double extra, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic AdvancementProgress getAdvancementProgress(Advancement advancement)\n+\tpublic @NotNull AdvancementProgress getAdvancementProgress(@NotNull Advancement advancement)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic String getLocale()\n+\tpublic @NotNull String getLocale()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1819,7 +1823,7 @@ public void setPlayerListHeaderFooter(String header, String footer)\n \t}\n \n \t@Override\n-\tpublic void sendBlockChange(Location loc, BlockData block)\n+\tpublic void sendBlockChange(@NotNull Location loc, @NotNull BlockData block)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1833,26 +1837,26 @@ public void updateCommands()\n \t}\n \n \t@Override\n-\tpublic boolean discoverRecipe(NamespacedKey recipe)\n+\tpublic boolean discoverRecipe(@NotNull NamespacedKey recipe)\n \t{\n-\t\treturn discoverRecipes(Arrays.asList(recipe)) != 0;\n+\t\treturn discoverRecipes(Collections.singletonList(recipe)) != 0;\n \t}\n \n \t@Override\n-\tpublic int discoverRecipes(Collection<NamespacedKey> recipes)\n+\tpublic int discoverRecipes(@NotNull Collection<NamespacedKey> recipes)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean undiscoverRecipe(NamespacedKey recipe)\n+\tpublic boolean undiscoverRecipe(@NotNull NamespacedKey recipe)\n \t{\n-\t\treturn undiscoverRecipes(Arrays.asList(recipe)) != 0;\n+\t\treturn undiscoverRecipes(Collections.singletonList(recipe)) != 0;\n \t}\n \n \t@Override\n-\tpublic int undiscoverRecipes(Collection<NamespacedKey> recipes)\n+\tpublic int undiscoverRecipes(@NotNull Collection<NamespacedKey> recipes)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1866,7 +1870,7 @@ public Block getTargetBlockExact(int maxDistance)\n \t}\n \n \t@Override\n-\tpublic Block getTargetBlockExact(int maxDistance, FluidCollisionMode fluidCollisionMode)\n+\tpublic Block getTargetBlockExact(int maxDistance, @NotNull FluidCollisionMode fluidCollisionMode)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1880,21 +1884,21 @@ public RayTraceResult rayTraceBlocks(double maxDistance)\n \t}\n \n \t@Override\n-\tpublic RayTraceResult rayTraceBlocks(double maxDistance, FluidCollisionMode fluidCollisionMode)\n+\tpublic RayTraceResult rayTraceBlocks(double maxDistance, @NotNull FluidCollisionMode fluidCollisionMode)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic BoundingBox getBoundingBox()\n+\tpublic @NotNull BoundingBox getBoundingBox()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic BlockFace getFacing()\n+\tpublic @NotNull BlockFace getFacing()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1908,7 +1912,7 @@ public int getClientViewDistance()\n \t}\n \n \t@Override\n-\tpublic boolean sleep(Location location, boolean force)\n+\tpublic boolean sleep(@NotNull Location location, boolean force)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1922,21 +1926,21 @@ public void wakeup(boolean setSpawnLocation)\n \t}\n \n \t@Override\n-\tpublic Location getBedLocation()\n+\tpublic @NotNull Location getBedLocation()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> T getMemory(MemoryKey<T> memoryKey)\n+\tpublic <T> T getMemory(@NotNull MemoryKey<T> memoryKey)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void setMemory(MemoryKey<T> memoryKey, T memoryValue)\n+\tpublic <T> void setMemory(@NotNull MemoryKey<T> memoryKey, T memoryValue)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1957,28 +1961,28 @@ public void setAbsorptionAmount(double amount)\n \t}\n \n \t@Override\n-\tpublic Pose getPose()\n+\tpublic @NotNull Pose getPose()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void sendSignChange(Location loc, String[] lines, DyeColor dyeColor) throws IllegalArgumentException\n+\tpublic void sendSignChange(@NotNull Location loc, String[] lines, @NotNull DyeColor dyeColor) throws IllegalArgumentException\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void openBook(ItemStack book)\n+\tpublic void openBook(@NotNull ItemStack book)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void attack(Entity target)\n+\tpublic void attack(@NotNull Entity target)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -2020,14 +2024,14 @@ public float getAttackCooldown()\n \t}\n \n \t@Override\n-\tpublic boolean hasDiscoveredRecipe(NamespacedKey recipe)\n+\tpublic boolean hasDiscoveredRecipe(@NotNull NamespacedKey recipe)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Set<NamespacedKey> getDiscoveredRecipes()\n+\tpublic @NotNull Set<NamespacedKey> getDiscoveredRecipes()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -2041,14 +2045,14 @@ public boolean dropItem(boolean dropAll)\n \t}\n \n \t@Override\n-\tpublic Set<UUID> getCollidableExemptions()\n+\tpublic @NotNull Set<UUID> getCollidableExemptions()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void sendBlockDamage(Location loc, float progress)\n+\tpublic void sendBlockDamage(@NotNull Location loc, float progress)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -2097,7 +2101,7 @@ public void setStarvationRate(int ticks)\n \t}\n \n \t@Override\n-\tpublic PlayerSpigotMock spigot()\n+\tpublic @NotNull PlayerSpigotMock spigot()\n \t{\n \t\treturn playerSpigotMock;\n \t}"
  },
  {
    "sha": "5b3f33ce2e8d90fe69d285df7ce646b119f7720f",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/plugin/PluginManagerMock.java",
    "status": "modified",
    "additions": 42,
    "deletions": 41,
    "changes": 83,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4019548455af97a58f2c13717f2de52fbfd1fe70/src/main/java/be/seeseemelk/mockbukkit/plugin/PluginManagerMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4019548455af97a58f2c13717f2de52fbfd1fe70/src/main/java/be/seeseemelk/mockbukkit/plugin/PluginManagerMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/plugin/PluginManagerMock.java?ref=4019548455af97a58f2c13717f2de52fbfd1fe70",
    "patch": "@@ -170,7 +170,7 @@ public void assertEventFired(@NotNull Class<? extends Event> eventClass)\n \t}\n \n \t@Override\n-\tpublic Plugin getPlugin(String name)\n+\tpublic Plugin getPlugin(@NotNull String name)\n \t{\n \t\tfor (Plugin plugin : plugins)\n \t\t{\n@@ -392,7 +392,7 @@ public void callEvent(@NotNull Event event)\n \t\t{\n \t\t\tthrow new IllegalStateException(\"Asynchronous Events cannot be called on the main Thread.\");\n \t\t}\n-\t\t\n+\n \t\tevents.add(event);\n \t\tHandlerList handlers = event.getHandlers();\n \t\tRegisteredListener[] listeners = handlers.getRegisteredListeners();\n@@ -405,7 +405,7 @@ public void callEvent(@NotNull Event event)\n \t/**\n \t * This method invokes {@link #callEvent(Event)} from a different {@link Thread}\n \t * using the {@link BukkitSchedulerMock}.\n-\t * \n+\t *\n \t * @param event The asynchronous {@link Event} to call.\n \t */\n \tpublic void callEventAsynchronously(@NotNull Event event)\n@@ -416,7 +416,7 @@ public void callEventAsynchronously(@NotNull Event event)\n \t\t}\n \n \t\t// Our Scheduler will call the Event on a dedicated Event Thread Executor\n-\t\tserver.getScheduler().scheduleAsyncEventCall(() -> callEvent(event));\n+\t\tserver.getScheduler().scheduleAsyncEventCall(event);\n \t}\n \n \tprivate void callRegisteredListener(@NotNull RegisteredListener registration, @NotNull Event event)\n@@ -454,7 +454,7 @@ private void callRegisteredListener(@NotNull RegisteredListener registration, @N\n \n \n \t@Override\n-\tpublic void enablePlugin(Plugin plugin)\n+\tpublic void enablePlugin(@NotNull Plugin plugin)\n \t{\n \t\tif (plugin instanceof JavaPlugin)\n \t\t{\n@@ -485,12 +485,16 @@ private void addSection(PluginCommand command, String name, Object value)\n \t\t\tcommand.setDescription((String) value);\n \t\t\tbreak;\n \t\tcase \"aliases\":\n-\t\t\tList<String> aliases = new ArrayList<>();\n \t\t\tif (value instanceof List<?>)\n \t\t\t\tcommand.setAliases(\n-\t\t\t\t    ((List<?>) aliases).stream().map(Object::toString).collect(Collectors.toList()));\n+\t\t\t\t\t\t((List<?>)value).stream().map(Object::toString).collect(Collectors.toList()));\n \t\t\telse\n-\t\t\t\tcommand.setAliases(Arrays.asList(value.toString()));\n+\t\t\t\tif(value != null)\n+\t\t\t\t{\n+\t\t\t\t\tcommand.setAliases(Collections.singletonList(value.toString()));\n+\t\t\t\t} else {\n+\t\t\t\t\tcommand.setAliases(Collections.emptyList());\n+\t\t\t\t}\n \t\t\tbreak;\n \t\tcase \"permission\":\n \t\t\tcommand.setPermission((String) value);\n@@ -514,30 +518,27 @@ private void addSection(PluginCommand command, String name, Object value)\n \tprotected void addCommandsFrom(Plugin plugin)\n \t{\n \t\tMap<String, Map<String, Object>> commands = plugin.getDescription().getCommands();\n-\t\tif (commands != null)\n+\t\tfor (Entry<String, Map<String, Object>> entry : commands.entrySet())\n \t\t{\n-\t\t\tfor (Entry<String, Map<String, Object>> entry : commands.entrySet())\n+\t\t\tPluginCommand command = PluginCommandUtils.createPluginCommand(entry.getKey(), plugin);\n+\t\t\tfor (Entry<String, Object> section : entry.getValue().entrySet())\n \t\t\t{\n-\t\t\t\tPluginCommand command = PluginCommandUtils.createPluginCommand(entry.getKey(), plugin);\n-\t\t\t\tfor (Entry<String, Object> section : entry.getValue().entrySet())\n-\t\t\t\t{\n-\t\t\t\t\taddSection(command, section.getKey(), section.getValue());\n-\t\t\t\t}\n-\t\t\t\tthis.commands.add(command);\n-\t\t\t\tthis.server.getCommandMap().register(plugin.getName(), command);\n+\t\t\t\taddSection(command, section.getKey(), section.getValue());\n \t\t\t}\n+\t\t\tthis.commands.add(command);\n+\t\t\tthis.server.getCommandMap().register(plugin.getName(), command);\n \t\t}\n \t}\n \n \t@Override\n-\tpublic void registerInterface(Class<? extends PluginLoader> loader) throws IllegalArgumentException\n+\tpublic void registerInterface(@NotNull Class<? extends PluginLoader> loader) throws IllegalArgumentException\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean isPluginEnabled(String name)\n+\tpublic boolean isPluginEnabled(@NotNull String name)\n \t{\n \t\tboolean result = false;\n \n@@ -569,15 +570,15 @@ public boolean isPluginEnabled(Plugin plugin)\n \t}\n \n \t@Override\n-\tpublic Plugin loadPlugin(File file)\n+\tpublic Plugin loadPlugin(@NotNull File file)\n \tthrows InvalidPluginException, InvalidDescriptionException, UnknownDependencyException\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Plugin[] loadPlugins(File directory)\n+\tpublic Plugin[] loadPlugins(@NotNull File directory)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -608,7 +609,7 @@ public void clearEvents()\n \t}\n \n \t@Override\n-\tpublic void registerEvents(Listener listener, Plugin plugin)\n+\tpublic void registerEvents(@NotNull Listener listener, Plugin plugin)\n \t{\n \t\tif (!plugin.isEnabled())\n \t\t{\n@@ -622,15 +623,15 @@ public void registerEvents(Listener listener, Plugin plugin)\n \t}\n \n \t@Override\n-\tpublic void registerEvent(Class<? extends Event> event, Listener listener, EventPriority priority,\n-\t                          EventExecutor executor, Plugin plugin)\n+\tpublic void registerEvent(@NotNull Class<? extends Event> event, @NotNull Listener listener, @NotNull EventPriority priority,\n+\t\t\t\t\t\t\t  @NotNull EventExecutor executor, @NotNull Plugin plugin)\n \t{\n \t\tregisterEvent(event, listener, priority, executor, plugin, false);\n \t}\n \n \t@Override\n-\tpublic void registerEvent(Class<? extends Event> event, Listener listener, EventPriority priority,\n-\t                          EventExecutor executor, Plugin plugin, boolean ignoreCancelled)\n+\tpublic void registerEvent(@NotNull Class<? extends Event> event, @NotNull Listener listener, @NotNull EventPriority priority,\n+\t\t\t\t\t\t\t  @NotNull EventExecutor executor, @NotNull Plugin plugin, boolean ignoreCancelled)\n \t{\n \t\tValidate.notNull(listener, \"Listener cannot be null\");\n \t\tValidate.notNull(priority, \"Priority cannot be null\");\n@@ -680,7 +681,7 @@ private HandlerList getEventListeners(Class<? extends Event> type)\n \t}\n \n \t@Override\n-\tpublic void disablePlugin(Plugin plugin)\n+\tpublic void disablePlugin(@NotNull Plugin plugin)\n \t{\n \t\tif (plugin instanceof JavaPlugin)\n \t\t{\n@@ -697,32 +698,32 @@ public void disablePlugin(Plugin plugin)\n \t}\n \n \t@Override\n-\tpublic Permission getPermission(String name)\n+\tpublic Permission getPermission(@NotNull String name)\n \t{\n \t\treturn permissions.stream().filter(permission -> permission.getName().equals(name)).findFirst().orElse(null);\n \t}\n \n \t@Override\n-\tpublic void addPermission(Permission perm)\n+\tpublic void addPermission(@NotNull Permission perm)\n \t{\n \t\tpermissions.add(perm);\n \t}\n \n \t@Override\n-\tpublic void removePermission(Permission perm)\n+\tpublic void removePermission(@NotNull Permission perm)\n \t{\n \t\tpermissions.remove(perm);\n \t}\n \n \t@Override\n-\tpublic void removePermission(String name)\n+\tpublic void removePermission(@NotNull String name)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Set<Permission> getDefaultPermissions(boolean op)\n+\tpublic @NotNull Set<Permission> getDefaultPermissions(boolean op)\n \t{\n \t\tSet<Permission> permissions = new HashSet<>();\n \t\tfor (Permission permission : this.permissions)\n@@ -737,7 +738,7 @@ else if (op && permissionDefault == PermissionDefault.OP)\n \t}\n \n \t@Override\n-\tpublic void recalculatePermissionDefaults(Permission perm)\n+\tpublic void recalculatePermissionDefaults(@NotNull Permission perm)\n \t{\n \n \t}\n@@ -764,19 +765,19 @@ public void recalculatePermissionDefaults(Permission perm)\n \t}\n \n \t@Override\n-\tpublic void subscribeToPermission(String permission, Permissible permissible)\n+\tpublic void subscribeToPermission(@NotNull String permission, @NotNull Permissible permissible)\n \t{\n \t\tgetPermissionSubscriptions(permissible).add(permission);\n \t}\n \n \t@Override\n-\tpublic void unsubscribeFromPermission(String permission, Permissible permissible)\n+\tpublic void unsubscribeFromPermission(@NotNull String permission, @NotNull Permissible permissible)\n \t{\n \t\tgetPermissionSubscriptions(permissible).remove(permission);\n \t}\n \n \t@Override\n-\tpublic Set<Permissible> getPermissionSubscriptions(String permission)\n+\tpublic @NotNull Set<Permissible> getPermissionSubscriptions(@NotNull String permission)\n \t{\n \t\tSet<Permissible> subscriptions = new HashSet<>();\n \t\tfor (Entry<Permissible, Set<String>> entry : permissionSubscriptions.entrySet())\n@@ -792,28 +793,28 @@ public void unsubscribeFromPermission(String permission, Permissible permissible\n \t}\n \n \t@Override\n-\tpublic void subscribeToDefaultPerms(boolean op, Permissible permissible)\n+\tpublic void subscribeToDefaultPerms(boolean op, @NotNull Permissible permissible)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void unsubscribeFromDefaultPerms(boolean op, Permissible permissible)\n+\tpublic void unsubscribeFromDefaultPerms(boolean op, @NotNull Permissible permissible)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Set<Permissible> getDefaultPermSubscriptions(boolean op)\n+\tpublic @NotNull Set<Permissible> getDefaultPermSubscriptions(boolean op)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Set<Permission> getPermissions()\n+\tpublic @NotNull Set<Permission> getPermissions()\n \t{\n \t\treturn Collections.unmodifiableSet(new HashSet<>(permissions));\n \t}\n@@ -828,4 +829,4 @@ public boolean useTimings()\n \t\treturn false;\n \t}\n \n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "ea47c87db20fcb88d8f8c498b38e7bed76eb0086",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/scheduler/BukkitSchedulerMock.java",
    "status": "modified",
    "additions": 45,
    "deletions": 35,
    "changes": 80,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4019548455af97a58f2c13717f2de52fbfd1fe70/src/main/java/be/seeseemelk/mockbukkit/scheduler/BukkitSchedulerMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4019548455af97a58f2c13717f2de52fbfd1fe70/src/main/java/be/seeseemelk/mockbukkit/scheduler/BukkitSchedulerMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/scheduler/BukkitSchedulerMock.java?ref=4019548455af97a58f2c13717f2de52fbfd1fe70",
    "patch": "@@ -11,23 +11,28 @@\n import java.util.function.Consumer;\n import java.util.logging.Logger;\n \n+import be.seeseemelk.mockbukkit.MockBukkit;\n+import org.bukkit.event.Event;\n import org.bukkit.plugin.Plugin;\n import org.bukkit.scheduler.BukkitRunnable;\n import org.bukkit.scheduler.BukkitScheduler;\n import org.bukkit.scheduler.BukkitTask;\n import org.bukkit.scheduler.BukkitWorker;\n \n import be.seeseemelk.mockbukkit.UnimplementedOperationException;\n+import org.jetbrains.annotations.NotNull;\n \n public class BukkitSchedulerMock implements BukkitScheduler\n {\n \tprivate static final String LOGGER_NAME = \"BukkitSchedulerMock\";\n \tprivate long currentTick = 0;\n \tprivate int id = 0;\n \tprivate List<ScheduledTask> tasks = new LinkedList<>();\n-\tprivate ExecutorService pool = Executors.newCachedThreadPool();\n-\tprivate AtomicInteger asyncTasksRunning = new AtomicInteger();\n-\tprivate AtomicReference<Exception> asyncException = new AtomicReference<>();\n+\tprivate final ExecutorService pool = Executors.newCachedThreadPool();\n+\tprivate final ExecutorService asyncEventExecutor = Executors.newCachedThreadPool();\n+\n+\tprivate final AtomicInteger asyncTasksRunning = new AtomicInteger();\n+\tprivate final AtomicReference<Exception> asyncException = new AtomicReference<>();\n \tprivate int asyncTasksQueued = 0;\n \n \t/**\n@@ -38,11 +43,16 @@ public void shutdown()\n \t{\n \t\twaitAsyncTasksFinished();\n \t\tpool.shutdown();\n-\n+\t\tasyncEventExecutor.shutdownNow();\n \t\tif (asyncException.get() != null)\n \t\t\tthrow new AsyncTaskException(asyncException.get());\n \t}\n \n+\tpublic Future<?> scheduleAsyncEventCall(Event event)\n+\t{\n+\t\treturn asyncEventExecutor.submit(() -> MockBukkit.getMock().getPluginManager().callEvent(event));\n+\t}\n+\n \t/**\n \t * Get the current tick of the server.\n \t *\n@@ -129,19 +139,19 @@ public void waitAsyncTasksFinished()\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTask(Plugin plugin, Runnable task)\n+\tpublic @NotNull BukkitTask runTask(@NotNull Plugin plugin, @NotNull Runnable task)\n \t{\n \t\treturn runTaskLater(plugin, task, 1L);\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTask(Plugin plugin, BukkitRunnable task)\n+\tpublic @NotNull BukkitTask runTask(@NotNull Plugin plugin, @NotNull BukkitRunnable task)\n \t{\n \t\treturn runTask(plugin, (Runnable) task);\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTaskLater(Plugin plugin, Runnable task, long delay)\n+\tpublic @NotNull BukkitTask runTaskLater(@NotNull Plugin plugin, @NotNull Runnable task, long delay)\n \t{\n \t\tdelay = Math.max(delay, 1);\n \t\tScheduledTask scheduledTask = new ScheduledTask(id++, plugin, true, currentTick + delay, task);\n@@ -150,7 +160,7 @@ public BukkitTask runTaskLater(Plugin plugin, Runnable task, long delay)\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTaskTimer(Plugin plugin, Runnable task, long delay, long period)\n+\tpublic @NotNull BukkitTask runTaskTimer(@NotNull Plugin plugin, @NotNull Runnable task, long delay, long period)\n \t{\n \t\tdelay = Math.max(delay, 1);\n \t\tRepeatingTask repeatingTask = new RepeatingTask(id++, plugin, true, currentTick + delay, period, task);\n@@ -159,79 +169,79 @@ public BukkitTask runTaskTimer(Plugin plugin, Runnable task, long delay, long pe\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTaskTimer(Plugin plugin, BukkitRunnable task, long delay, long period)\n+\tpublic @NotNull BukkitTask runTaskTimer(@NotNull Plugin plugin, @NotNull BukkitRunnable task, long delay, long period)\n \t{\n \t\treturn runTaskTimer(plugin, (Runnable) task, delay, period);\n \t}\n \n \t@Override\n-\tpublic int scheduleSyncDelayedTask(Plugin plugin, Runnable task, long delay)\n+\tpublic int scheduleSyncDelayedTask(@NotNull Plugin plugin, @NotNull Runnable task, long delay)\n \t{\n \t\tLogger.getLogger(LOGGER_NAME).warning(\"Consider using runTaskLater instead of scheduleSyncDelayTask\");\n \t\treturn runTaskLater(plugin, task, delay).getTaskId();\n \t}\n \n \t@Override\n-\tpublic int scheduleSyncDelayedTask(Plugin plugin, BukkitRunnable task, long delay)\n+\tpublic int scheduleSyncDelayedTask(@NotNull Plugin plugin, @NotNull BukkitRunnable task, long delay)\n \t{\n \t\tLogger.getLogger(LOGGER_NAME).warning(\"Consider using runTaskLater instead of scheduleSyncDelayTask\");\n \t\treturn runTaskLater(plugin, (Runnable) task, delay).getTaskId();\n \t}\n \n \t@Override\n-\tpublic int scheduleSyncDelayedTask(Plugin plugin, Runnable task)\n+\tpublic int scheduleSyncDelayedTask(@NotNull Plugin plugin, @NotNull Runnable task)\n \t{\n \t\tLogger.getLogger(LOGGER_NAME).warning(\"Consider using runTask instead of scheduleSyncDelayTask\");\n \t\treturn runTask(plugin, task).getTaskId();\n \t}\n \n \t@Override\n-\tpublic int scheduleSyncDelayedTask(Plugin plugin, BukkitRunnable task)\n+\tpublic int scheduleSyncDelayedTask(@NotNull Plugin plugin, @NotNull BukkitRunnable task)\n \t{\n \t\tLogger.getLogger(LOGGER_NAME).warning(\"Consider using runTask instead of scheduleSyncDelayTask\");\n \t\treturn runTask(plugin, (Runnable) task).getTaskId();\n \t}\n \n \t@Override\n-\tpublic int scheduleSyncRepeatingTask(Plugin plugin, Runnable task, long delay, long period)\n+\tpublic int scheduleSyncRepeatingTask(@NotNull Plugin plugin, @NotNull Runnable task, long delay, long period)\n \t{\n \t\tLogger.getLogger(LOGGER_NAME).warning(\"Consider using runTaskTimer instead of scheduleSyncRepeatingTask\");\n \t\treturn runTaskTimer(plugin, task, delay, period).getTaskId();\n \t}\n \n \t@Override\n-\tpublic int scheduleSyncRepeatingTask(Plugin plugin, BukkitRunnable task, long delay, long period)\n+\tpublic int scheduleSyncRepeatingTask(@NotNull Plugin plugin, @NotNull BukkitRunnable task, long delay, long period)\n \t{\n \t\tLogger.getLogger(LOGGER_NAME).warning(\"Consider using runTaskTimer instead of scheduleSyncRepeatingTask\");\n \t\treturn runTaskTimer(plugin, (Runnable) task, delay, period).getTaskId();\n \t}\n \n \t@Override\n-\tpublic int scheduleAsyncDelayedTask(Plugin plugin, Runnable task, long delay)\n+\tpublic int scheduleAsyncDelayedTask(@NotNull Plugin plugin, @NotNull Runnable task, long delay)\n \t{\n \t\tLogger.getLogger(LOGGER_NAME)\n \t\t.warning(\"Consider using runTaskLaterAsynchronously instead of scheduleAsyncDelayedTask\");\n \t\treturn runTaskLaterAsynchronously(plugin, task, delay).getTaskId();\n \t}\n \n \t@Override\n-\tpublic int scheduleAsyncDelayedTask(Plugin plugin, Runnable task)\n+\tpublic int scheduleAsyncDelayedTask(@NotNull Plugin plugin, @NotNull Runnable task)\n \t{\n \t\tLogger.getLogger(LOGGER_NAME)\n \t\t.warning(\"Consider using runTaskAsynchronously instead of scheduleAsyncDelayedTask\");\n \t\treturn runTaskAsynchronously(plugin, task).getTaskId();\n \t}\n \n \t@Override\n-\tpublic int scheduleAsyncRepeatingTask(Plugin plugin, Runnable task, long delay, long period)\n+\tpublic int scheduleAsyncRepeatingTask(@NotNull Plugin plugin, @NotNull Runnable task, long delay, long period)\n \t{\n \t\tLogger.getLogger(LOGGER_NAME)\n \t\t.warning(\"Consider using runTaskTimerAsynchronously instead of scheduleAsyncRepeatingTask\");\n \t\treturn runTaskTimerAsynchronously(plugin, task, delay, period).getTaskId();\n \t}\n \n \t@Override\n-\tpublic <T> Future<T> callSyncMethod(Plugin plugin, Callable<T> task)\n+\tpublic <T> @NotNull Future<T> callSyncMethod(@NotNull Plugin plugin, @NotNull Callable<T> task)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -251,7 +261,7 @@ public void cancelTask(int taskId)\n \t}\n \n \t@Override\n-\tpublic void cancelTasks(Plugin plugin)\n+\tpublic void cancelTasks(@NotNull Plugin plugin)\n \t{\n \t\tfor (ScheduledTask task : tasks)\n \t\t{\n@@ -281,21 +291,21 @@ public boolean isQueued(int taskId)\n \t}\n \n \t@Override\n-\tpublic List<BukkitWorker> getActiveWorkers()\n+\tpublic @NotNull List<BukkitWorker> getActiveWorkers()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic List<BukkitTask> getPendingTasks()\n+\tpublic @NotNull List<BukkitTask> getPendingTasks()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTaskAsynchronously(Plugin plugin, Runnable task)\n+\tpublic @NotNull BukkitTask runTaskAsynchronously(@NotNull Plugin plugin, @NotNull Runnable task)\n \t{\n \t\tScheduledTask scheduledTask = new ScheduledTask(id++, plugin, false, currentTick, new AsyncRunnable(task));\n \t\tasyncTasksRunning.incrementAndGet();\n@@ -304,19 +314,19 @@ public BukkitTask runTaskAsynchronously(Plugin plugin, Runnable task)\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTaskAsynchronously(Plugin plugin, BukkitRunnable task)\n+\tpublic @NotNull BukkitTask runTaskAsynchronously(@NotNull Plugin plugin, @NotNull BukkitRunnable task)\n \t{\n \t\treturn runTaskAsynchronously(plugin, (Runnable) task);\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTaskLater(Plugin plugin, BukkitRunnable task, long delay)\n+\tpublic @NotNull BukkitTask runTaskLater(@NotNull Plugin plugin, @NotNull BukkitRunnable task, long delay)\n \t{\n \t\treturn runTaskLater(plugin, (Runnable) task, delay);\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTaskLaterAsynchronously(Plugin plugin, Runnable task, long delay)\n+\tpublic @NotNull BukkitTask runTaskLaterAsynchronously(@NotNull Plugin plugin, @NotNull Runnable task, long delay)\n \t{\n \t\tScheduledTask scheduledTask = new ScheduledTask(id++, plugin, false, currentTick + delay,\n \t\t        new AsyncRunnable(task));\n@@ -326,13 +336,13 @@ public BukkitTask runTaskLaterAsynchronously(Plugin plugin, Runnable task, long\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTaskLaterAsynchronously(Plugin plugin, BukkitRunnable task, long delay)\n+\tpublic @NotNull BukkitTask runTaskLaterAsynchronously(@NotNull Plugin plugin, @NotNull BukkitRunnable task, long delay)\n \t{\n \t\treturn runTaskLaterAsynchronously(plugin, (Runnable) task, delay);\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTaskTimerAsynchronously(Plugin plugin, Runnable task, long delay, long period)\n+\tpublic @NotNull BukkitTask runTaskTimerAsynchronously(@NotNull Plugin plugin, @NotNull Runnable task, long delay, long period)\n \t{\n \t\tRepeatingTask scheduledTask = new RepeatingTask(id++, plugin, false, currentTick + delay, period,\n \t\t        new AsyncRunnable(task));\n@@ -341,7 +351,7 @@ public BukkitTask runTaskTimerAsynchronously(Plugin plugin, Runnable task, long\n \t}\n \n \t@Override\n-\tpublic BukkitTask runTaskTimerAsynchronously(Plugin plugin, BukkitRunnable task, long delay, long period)\n+\tpublic @NotNull BukkitTask runTaskTimerAsynchronously(@NotNull Plugin plugin, @NotNull BukkitRunnable task, long delay, long period)\n \t{\n \t\treturn runTaskTimerAsynchronously(plugin, (Runnable) task, delay, period);\n \t}\n@@ -372,42 +382,42 @@ public void run()\n \t}\n \n \t@Override\n-\tpublic void runTask(Plugin plugin, Consumer<BukkitTask> task)\n+\tpublic void runTask(@NotNull Plugin plugin, @NotNull Consumer<BukkitTask> task)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void runTaskAsynchronously(Plugin plugin, Consumer<BukkitTask> task)\n+\tpublic void runTaskAsynchronously(@NotNull Plugin plugin, @NotNull Consumer<BukkitTask> task)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void runTaskLater(Plugin plugin, Consumer<BukkitTask> task, long delay)\n+\tpublic void runTaskLater(@NotNull Plugin plugin, @NotNull Consumer<BukkitTask> task, long delay)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void runTaskLaterAsynchronously(Plugin plugin, Consumer<BukkitTask> task, long delay)\n+\tpublic void runTaskLaterAsynchronously(@NotNull Plugin plugin, @NotNull Consumer<BukkitTask> task, long delay)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void runTaskTimer(Plugin plugin, Consumer<BukkitTask> task, long delay, long period)\n+\tpublic void runTaskTimer(@NotNull Plugin plugin, @NotNull Consumer<BukkitTask> task, long delay, long period)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void runTaskTimerAsynchronously(Plugin plugin, Consumer<BukkitTask> task, long delay, long period)\n+\tpublic void runTaskTimerAsynchronously(@NotNull Plugin plugin, @NotNull Consumer<BukkitTask> task, long delay, long period)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();"
  }
]
