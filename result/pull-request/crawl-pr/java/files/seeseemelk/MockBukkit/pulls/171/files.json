[
  {
    "sha": "00103ebd50d79ee33080dba57e9dcda1249748d6",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/ChunkMock.java",
    "status": "modified",
    "additions": 13,
    "deletions": 11,
    "changes": 24,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/ChunkMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/ChunkMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/ChunkMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -4,6 +4,8 @@\n \n import be.seeseemelk.mockbukkit.persistence.PersistentDataContainerMock;\n import org.apache.commons.lang.Validate;\n+import org.jetbrains.annotations.NotNull;\n+\n import org.bukkit.Chunk;\n import org.bukkit.ChunkSnapshot;\n import org.bukkit.World;\n@@ -22,7 +24,7 @@\n \tprivate boolean loaded = true;\n \tprivate final PersistentDataContainer persistentDataContainer = new PersistentDataContainerMock();\n \n-\tprotected ChunkMock(final World world, final int x, final int z)\n+\tprotected ChunkMock(@NotNull final World world, final int x, final int z)\n \t{\n \t\tthis.world = world;\n \t\tthis.x = x;\n@@ -42,13 +44,13 @@ public int getZ()\n \t}\n \n \t@Override\n-\tpublic World getWorld()\n+\tpublic @NotNull World getWorld()\n \t{\n \t\treturn world;\n \t}\n \n \t@Override\n-\tpublic Block getBlock(int x, int y, int z)\n+\tpublic @NotNull Block getBlock(int x, int y, int z)\n \t{\n \t\tValidate.isTrue(x >= 0 && x <= 15, \"x is out of range (expected 0-15)\");\n \t\tValidate.isTrue(y >= 0 && y <= 255, \"y is out of range (expected 0-255)\");\n@@ -57,14 +59,14 @@ public Block getBlock(int x, int y, int z)\n \t}\n \n \t@Override\n-\tpublic ChunkSnapshot getChunkSnapshot()\n+\tpublic @NotNull ChunkSnapshot getChunkSnapshot()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic ChunkSnapshot getChunkSnapshot(boolean includeMaxblocky, boolean includeBiome, boolean includeBiomeTempRain)\n+\tpublic @NotNull ChunkSnapshot getChunkSnapshot(boolean includeMaxblocky, boolean includeBiome, boolean includeBiomeTempRain)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -158,21 +160,21 @@ public void setForceLoaded(boolean forced)\n \t}\n \n \t@Override\n-\tpublic boolean addPluginChunkTicket(Plugin plugin)\n+\tpublic boolean addPluginChunkTicket(@NotNull Plugin plugin)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean removePluginChunkTicket(Plugin plugin)\n+\tpublic boolean removePluginChunkTicket(@NotNull Plugin plugin)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Collection<Plugin> getPluginChunkTickets()\n+\tpublic @NotNull Collection<Plugin> getPluginChunkTickets()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -193,15 +195,15 @@ public void setInhabitedTime(long ticks)\n \t}\n \n \t@Override\n-\tpublic boolean contains(BlockData block)\n+\tpublic boolean contains(@NotNull BlockData block)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic PersistentDataContainer getPersistentDataContainer()\n+\tpublic @NotNull PersistentDataContainer getPersistentDataContainer()\n \t{\n \t\treturn persistentDataContainer;\n \t}\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "28a7ab70464e8c5788c67c72d65a7611fd9bf18c",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/Coordinate.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/Coordinate.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/Coordinate.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/Coordinate.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -34,7 +34,7 @@ public Coordinate()\n \t@Override\n \tpublic int hashCode()\n \t{\n-\t\treturn (x << 0) + (y << 8) + (z << 16);\n+\t\treturn x + (y << 8) + (z << 16);\n \t}\n \n \t@Override"
  },
  {
    "sha": "8b7c42276021f007bc844a8a8cb5ff4adf088f5f",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/MockBanList.java",
    "status": "modified",
    "additions": 13,
    "deletions": 11,
    "changes": 24,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/MockBanList.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/MockBanList.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/MockBanList.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -5,47 +5,49 @@\n \n import java.util.*;\n \n+import org.jetbrains.annotations.NotNull;\n+\n public class MockBanList implements BanList\n {\n \n \tprivate final Map<String, BanEntry> bans = new HashMap<>();\n \n \t@Override\n-\tpublic BanEntry getBanEntry(String target)\n+\tpublic BanEntry getBanEntry(@NotNull String target)\n \t{\n \t\treturn bans.getOrDefault(target, null);\n \t}\n \n \t@Override\n-\tpublic BanEntry addBan(String target, String reason, Date expires, String source)\n+\tpublic BanEntry addBan(@NotNull String target, String reason, Date expires, String source)\n \t{\n \t\tfinal BanEntry entry = new MockBanEntry(target, expires, reason, source);\n \t\tthis.bans.put(target, entry);\n \t\treturn entry;\n \t}\n \n \t@Override\n-\tpublic Set<BanEntry> getBanEntries()\n+\tpublic @NotNull Set<BanEntry> getBanEntries()\n \t{\n \t\treturn new HashSet<>(this.bans.values());\n \t}\n \n \t@Override\n-\tpublic boolean isBanned(String target)\n+\tpublic boolean isBanned(@NotNull String target)\n \t{\n \t\treturn this.bans.containsKey(target);\n \t}\n \n \t@Override\n-\tpublic void pardon(String target)\n+\tpublic void pardon(@NotNull String target)\n \t{\n \t\tthis.bans.remove(target);\n \t}\n \n \tpublic static final class MockBanEntry implements BanEntry\n \t{\n \n-\t\tprivate String target;\n+\t\tprivate final String target;\n \t\tprivate String source;\n \t\tprivate String reason;\n \t\tprivate Date created;\n@@ -61,31 +63,31 @@ public MockBanEntry(final String target, final Date expires, final String reason\n \t\t}\n \n \t\t@Override\n-\t\tpublic String getTarget()\n+\t\tpublic @NotNull String getTarget()\n \t\t{\n \t\t\treturn this.target;\n \t\t}\n \n \t\t@Override\n-\t\tpublic Date getCreated()\n+\t\tpublic @NotNull Date getCreated()\n \t\t{\n \t\t\treturn this.created;\n \t\t}\n \n \t\t@Override\n-\t\tpublic void setCreated(Date created)\n+\t\tpublic void setCreated(@NotNull Date created)\n \t\t{\n \t\t\tthis.created = created;\n \t\t}\n \n \t\t@Override\n-\t\tpublic String getSource()\n+\t\tpublic @NotNull String getSource()\n \t\t{\n \t\t\treturn this.source;\n \t\t}\n \n \t\t@Override\n-\t\tpublic void setSource(String source)\n+\t\tpublic void setSource(@NotNull String source)\n \t\t{\n \t\t\tthis.source = source;\n \t\t}"
  },
  {
    "sha": "8d2f05cba093abe91ae8d3d49dd1455e6e62d53c",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/MockBukkit.java",
    "status": "modified",
    "additions": 1,
    "deletions": 5,
    "changes": 6,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/MockBukkit.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/MockBukkit.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/MockBukkit.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -322,11 +322,7 @@ public static void unmock()\n \t\t}\n \t\tfinally\n \t\t{\n-\t\t\tif (mock.getPluginManager() != null)\n-\t\t\t{\n-\t\t\t\tmock.getPluginManager().disablePlugins();\n-\t\t\t}\n-\n+\t\t\tmock.getPluginManager().disablePlugins();\n \t\t\tmock.getPluginManager().unload();\n \t\t\tsetServerInstanceToNull();\n \t\t}"
  },
  {
    "sha": "2078e10764165a7ff965893aebb211af8d0b4c20",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/PlayerList.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/PlayerList.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/PlayerList.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/PlayerList.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -22,10 +22,10 @@\n \n /**\n  * Replica of the Bukkit internal PlayerList and CraftPlayerList implementation\n- * \n+ *\n  * @author seeseemelk\n  * @author TheBusyBiscuit\n- * \n+ *\n  */\n public class PlayerList\n {\n@@ -34,8 +34,8 @@\n \tprivate final List<PlayerMock> onlinePlayers = new CopyOnWriteArrayList<>();\n \tprivate final Set<OfflinePlayer> offlinePlayers = Collections.synchronizedSet(new HashSet<>());\n \n-\tprivate BanList ipBans = new MockBanList();\n-\tprivate BanList profileBans = new MockBanList();\n+\tprivate final BanList ipBans = new MockBanList();\n+\tprivate final BanList profileBans = new MockBanList();\n \n \tpublic void setMaxPlayers(int maxPlayers)\n \t{\n@@ -180,7 +180,7 @@ public OfflinePlayer getOfflinePlayer(@NotNull String name)\n \n \t\tfor (OfflinePlayer offlinePlayer : offlinePlayers)\n \t\t{\n-\t\t\tif (offlinePlayer.getName().equals(name))\n+\t\t\tif (name.equals(offlinePlayer.getName()))\n \t\t\t{\n \t\t\t\treturn offlinePlayer;\n \t\t\t}"
  },
  {
    "sha": "31e300ad88c958b7121fdd9a7a7e9dae899870eb",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/ServerMock.java",
    "status": "modified",
    "additions": 86,
    "deletions": 86,
    "changes": 172,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/ServerMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/ServerMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/ServerMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -130,15 +130,14 @@\n \tprivate final PlayerList playerList = new PlayerList();\n \tprivate ConsoleCommandSender consoleSender;\n \tprivate GameMode defaultGameMode = GameMode.SURVIVAL;\n-\tprivate MockCommandMap commandMap;\n-\tprivate HelpMapMock helpMap;\n+\tprivate final MockCommandMap commandMap;\n+\tprivate final HelpMapMock helpMap = new HelpMapMock();\n \n \tpublic ServerMock()\n \t{\n \t\tmainThread = Thread.currentThread();\n \t\tlogger = Logger.getLogger(\"ServerMock\");\n \t\tcommandMap = new MockCommandMap(this);\n-\t\thelpMap = new HelpMapMock();\n \t\tServerMock.registerSerializables();\n \n \t\t// Register default Minecraft Potion Effect Types\n@@ -415,25 +414,25 @@ public CommandResult execute(String command, CommandSender sender, String... arg\n \t}\n \n \t@Override\n-\tpublic String getName()\n+\tpublic @NotNull String getName()\n \t{\n \t\treturn \"ServerMock\";\n \t}\n \n \t@Override\n-\tpublic String getVersion()\n+\tpublic @NotNull String getVersion()\n \t{\n \t\treturn \"0.1.0\";\n \t}\n \n \t@Override\n-\tpublic String getBukkitVersion()\n+\tpublic @NotNull String getBukkitVersion()\n \t{\n \t\treturn BUKKIT_VERSION;\n \t}\n \n \t@Override\n-\tpublic Collection<? extends PlayerMock> getOnlinePlayers()\n+\tpublic @NotNull Collection<? extends PlayerMock> getOnlinePlayers()\n \t{\n \t\treturn playerList.getOnlinePlayers();\n \t}\n@@ -445,31 +444,31 @@ public String getBukkitVersion()\n \t}\n \n \t@Override\n-\tpublic Player getPlayer(String name)\n+\tpublic Player getPlayer(@NotNull String name)\n \t{\n \t\treturn playerList.getPlayer(name);\n \t}\n \n \t@Override\n-\tpublic Player getPlayerExact(String name)\n+\tpublic Player getPlayerExact(@NotNull String name)\n \t{\n \t\treturn playerList.getPlayerExact(name);\n \t}\n \n \t@Override\n-\tpublic List<Player> matchPlayer(String name)\n+\tpublic @NotNull List<Player> matchPlayer(@NotNull String name)\n \t{\n \t\treturn playerList.matchPlayer(name);\n \t}\n \n \t@Override\n-\tpublic Player getPlayer(UUID id)\n+\tpublic Player getPlayer(@NotNull UUID id)\n \t{\n \t\treturn playerList.getPlayer(id);\n \t}\n \n \t@Override\n-\tpublic PluginManagerMock getPluginManager()\n+\tpublic @NotNull PluginManagerMock getPluginManager()\n \t{\n \t\treturn pluginManager;\n \t}\n@@ -499,7 +498,7 @@ private boolean isLabelOfCommand(PluginCommand command, String label)\n \t}\n \n \t@Override\n-\tpublic PluginCommand getPluginCommand(String name)\n+\tpublic PluginCommand getPluginCommand(@NotNull String name)\n \t{\n \t\tassertMainThread();\n \t\tfor (PluginCommand command : getPluginManager().getCommands())\n@@ -513,13 +512,13 @@ public PluginCommand getPluginCommand(String name)\n \t}\n \n \t@Override\n-\tpublic Logger getLogger()\n+\tpublic @NotNull Logger getLogger()\n \t{\n \t\treturn logger;\n \t}\n \n \t@Override\n-\tpublic ConsoleCommandSender getConsoleSender()\n+\tpublic @NotNull ConsoleCommandSender getConsoleSender()\n \t{\n \t\tif (consoleSender == null)\n \t\t{\n@@ -596,55 +595,55 @@ public InventoryMock createInventory(InventoryHolder owner, InventoryType type,\n \t}\n \n \t@Override\n-\tpublic InventoryMock createInventory(InventoryHolder owner, InventoryType type)\n+\tpublic @NotNull InventoryMock createInventory(InventoryHolder owner, @NotNull InventoryType type)\n \t{\n \t\treturn createInventory(owner, type, \"Inventory\");\n \t}\n \n \t@Override\n-\tpublic InventoryMock createInventory(InventoryHolder owner, InventoryType type, String title)\n+\tpublic @NotNull InventoryMock createInventory(InventoryHolder owner, @NotNull InventoryType type, @NotNull String title)\n \t{\n \t\treturn createInventory(owner, type, title, -1);\n \t}\n \n \t@Override\n-\tpublic InventoryMock createInventory(InventoryHolder owner, int size)\n+\tpublic @NotNull InventoryMock createInventory(InventoryHolder owner, int size)\n \t{\n \t\treturn createInventory(owner, size, \"Inventory\");\n \t}\n \n \t@Override\n-\tpublic InventoryMock createInventory(InventoryHolder owner, int size, String title)\n+\tpublic @NotNull InventoryMock createInventory(InventoryHolder owner, int size, @NotNull String title)\n \t{\n \t\treturn createInventory(owner, InventoryType.CHEST, title, size);\n \t}\n \n \t@Override\n-\tpublic ItemFactory getItemFactory()\n+\tpublic @NotNull ItemFactory getItemFactory()\n \t{\n \t\treturn factory;\n \t}\n \n \t@Override\n-\tpublic List<World> getWorlds()\n+\tpublic @NotNull List<World> getWorlds()\n \t{\n \t\treturn new ArrayList<>(worlds);\n \t}\n \n \t@Override\n-\tpublic World getWorld(String name)\n+\tpublic World getWorld(@NotNull String name)\n \t{\n \t\treturn worlds.stream().filter(world -> world.getName().equals(name)).findAny().orElse(null);\n \t}\n \n \t@Override\n-\tpublic World getWorld(UUID uid)\n+\tpublic World getWorld(@NotNull UUID uid)\n \t{\n \t\treturn worlds.stream().filter(world -> world.getUID().equals(uid)).findAny().orElse(null);\n \t}\n \n \t@Override\n-\tpublic BukkitSchedulerMock getScheduler()\n+\tpublic @NotNull BukkitSchedulerMock getScheduler()\n \t{\n \t\treturn scheduler;\n \t}\n@@ -656,28 +655,28 @@ public int getMaxPlayers()\n \t}\n \n \t@Override\n-\tpublic Set<String> getIPBans()\n+\tpublic @NotNull Set<String> getIPBans()\n \t{\n \t\treturn this.playerList.getIPBans().getBanEntries().stream().map(BanEntry::getTarget)\n \t\t       .collect(Collectors.toSet());\n \t}\n \n \t@Override\n-\tpublic void banIP(String address)\n+\tpublic void banIP(@NotNull String address)\n \t{\n \t\tassertMainThread();\n \t\tthis.playerList.getIPBans().addBan(address, null, null, null);\n \t}\n \n \t@Override\n-\tpublic void unbanIP(String address)\n+\tpublic void unbanIP(@NotNull String address)\n \t{\n \t\tassertMainThread();\n \t\tthis.playerList.getIPBans().pardon(address);\n \t}\n \n \t@Override\n-\tpublic BanList getBanList(Type type)\n+\tpublic @NotNull BanList getBanList(Type type)\n \t{\n \t\tswitch (type)\n \t\t{\n@@ -690,26 +689,26 @@ public BanList getBanList(Type type)\n \t}\n \n \t@Override\n-\tpublic Set<OfflinePlayer> getOperators()\n+\tpublic @NotNull Set<OfflinePlayer> getOperators()\n \t{\n \t\treturn playerList.getOperators();\n \t}\n \n \t@Override\n-\tpublic GameMode getDefaultGameMode()\n+\tpublic @NotNull GameMode getDefaultGameMode()\n \t{\n \t\treturn this.defaultGameMode;\n \t}\n \n \t@Override\n-\tpublic void setDefaultGameMode(GameMode mode)\n+\tpublic void setDefaultGameMode(@NotNull GameMode mode)\n \t{\n \t\tassertMainThread();\n \t\tthis.defaultGameMode = mode;\n \t}\n \n \t@Override\n-\tpublic int broadcastMessage(String message)\n+\tpublic int broadcastMessage(@NotNull String message)\n \t{\n \t\tCollection<? extends PlayerMock> players = getOnlinePlayers();\n \n@@ -738,20 +737,22 @@ public boolean addRecipe(Recipe recipe)\n \t}\n \n \t@Override\n-\tpublic List<Recipe> getRecipesFor(@NotNull ItemStack item)\n+\tpublic @NotNull List<Recipe> getRecipesFor(@NotNull ItemStack item)\n \t{\n \t\tassertMainThread();\n \n \t\treturn recipes.stream().filter(recipe ->\n \t\t{\n \t\t\tItemStack result = recipe.getResult();\n \t\t\t// Amount is explicitly ignored here\n+\t\t\tif ((result.hasItemMeta() && !item.hasItemMeta()) || (!result.hasItemMeta() && item.hasItemMeta()))\n+\t\t\t\treturn false;\n \t\t\treturn result.getType() == item.getType() && result.getItemMeta().equals(item.getItemMeta());\n \t\t}).collect(Collectors.toList());\n \t}\n \n \t@Override\n-\tpublic Recipe getRecipe(NamespacedKey key)\n+\tpublic Recipe getRecipe(@NotNull NamespacedKey key)\n \t{\n \t\tassertMainThread();\n \n@@ -768,7 +769,7 @@ public Recipe getRecipe(NamespacedKey key)\n \t}\n \n \t@Override\n-\tpublic boolean removeRecipe(NamespacedKey key)\n+\tpublic boolean removeRecipe(@NotNull NamespacedKey key)\n \t{\n \t\tassertMainThread();\n \n@@ -790,7 +791,7 @@ public boolean removeRecipe(NamespacedKey key)\n \t}\n \n \t@Override\n-\tpublic Iterator<Recipe> recipeIterator()\n+\tpublic @NotNull Iterator<Recipe> recipeIterator()\n \t{\n \t\tassertMainThread();\n \t\treturn recipes.iterator();\n@@ -804,7 +805,7 @@ public void clearRecipes()\n \t}\n \n \t@Override\n-\tpublic boolean dispatchCommand(CommandSender sender, String commandLine)\n+\tpublic boolean dispatchCommand(@NotNull CommandSender sender, String commandLine)\n \t{\n \t\tassertMainThread();\n \t\tString[] commands = commandLine.split(\" \");\n@@ -823,20 +824,20 @@ public boolean dispatchCommand(CommandSender sender, String commandLine)\n \t}\n \n \t@Override\n-\tpublic HelpMap getHelpMap()\n+\tpublic @NotNull HelpMap getHelpMap()\n \t{\n \t\treturn helpMap;\n \t}\n \n \t@Override\n-\tpublic void sendPluginMessage(Plugin source, String channel, byte[] message)\n+\tpublic void sendPluginMessage(@NotNull Plugin source, @NotNull String channel, byte[] message)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Set<String> getListeningPluginChannels()\n+\tpublic @NotNull Set<String> getListeningPluginChannels()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -857,14 +858,14 @@ public int getViewDistance()\n \t}\n \n \t@Override\n-\tpublic String getIp()\n+\tpublic @NotNull String getIp()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic String getWorldType()\n+\tpublic @NotNull String getWorldType()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -906,7 +907,7 @@ public void setWhitelist(boolean value)\n \t}\n \n \t@Override\n-\tpublic Set<OfflinePlayer> getWhitelistedPlayers()\n+\tpublic @NotNull Set<OfflinePlayer> getWhitelistedPlayers()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -920,14 +921,14 @@ public void reloadWhitelist()\n \t}\n \n \t@Override\n-\tpublic String getUpdateFolder()\n+\tpublic @NotNull String getUpdateFolder()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic File getUpdateFolderFile()\n+\tpublic @NotNull File getUpdateFolderFile()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -955,34 +956,34 @@ public int getTicksPerMonsterSpawns()\n \t}\n \n \t@Override\n-\tpublic SimpleServicesManager getServicesManager()\n+\tpublic @NotNull SimpleServicesManager getServicesManager()\n \t{\n \t\treturn servicesManager;\n \t}\n \n \t@Override\n-\tpublic World createWorld(WorldCreator creator)\n+\tpublic World createWorld(@NotNull WorldCreator creator)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean unloadWorld(String name, boolean save)\n+\tpublic boolean unloadWorld(@NotNull String name, boolean save)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean unloadWorld(World world, boolean save)\n+\tpublic boolean unloadWorld(@NotNull World world, boolean save)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic MapView createMap(World world)\n+\tpublic @NotNull MapView createMap(@NotNull World world)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1017,7 +1018,7 @@ public void resetRecipes()\n \t}\n \n \t@Override\n-\tpublic Map<String, String[]> getCommandAliases()\n+\tpublic @NotNull Map<String, String[]> getCommandAliases()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1066,20 +1067,20 @@ public void shutdown()\n \t}\n \n \t@Override\n-\tpublic int broadcast(String message, String permission)\n+\tpublic int broadcast(@NotNull String message, @NotNull String permission)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic OfflinePlayer getOfflinePlayer(String name)\n+\tpublic @NotNull OfflinePlayer getOfflinePlayer(@NotNull String name)\n \t{\n \t\treturn playerList.getOfflinePlayer(name);\n \t}\n \n \t@Override\n-\tpublic OfflinePlayer getOfflinePlayer(UUID id)\n+\tpublic @NotNull OfflinePlayer getOfflinePlayer(@NotNull UUID id)\n \t{\n \t\tOfflinePlayer player = playerList.getOfflinePlayer(id);\n \n@@ -1094,28 +1095,28 @@ public OfflinePlayer getOfflinePlayer(UUID id)\n \t}\n \n \t@Override\n-\tpublic Set<OfflinePlayer> getBannedPlayers()\n+\tpublic @NotNull Set<OfflinePlayer> getBannedPlayers()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic File getWorldContainer()\n+\tpublic @NotNull File getWorldContainer()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Messenger getMessenger()\n+\tpublic @NotNull Messenger getMessenger()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Merchant createMerchant(String title)\n+\tpublic @NotNull Merchant createMerchant(String title)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1156,7 +1157,7 @@ public boolean isPrimaryThread()\n \t}\n \n \t@Override\n-\tpublic String getMotd()\n+\tpublic @NotNull String getMotd()\n \t{\n \t\treturn MOTD;\n \t}\n@@ -1169,7 +1170,7 @@ public String getShutdownMessage()\n \t}\n \n \t@Override\n-\tpublic WarningState getWarningState()\n+\tpublic @NotNull WarningState getWarningState()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1189,14 +1190,14 @@ public CachedServerIcon getServerIcon()\n \t}\n \n \t@Override\n-\tpublic CachedServerIcon loadServerIcon(File file)\n+\tpublic @NotNull CachedServerIcon loadServerIcon(@NotNull File file)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic CachedServerIcon loadServerIcon(BufferedImage image)\n+\tpublic @NotNull CachedServerIcon loadServerIcon(@NotNull BufferedImage image)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1217,69 +1218,68 @@ public int getIdleTimeout()\n \t}\n \n \t@Override\n-\tpublic ChunkData createChunkData(World world)\n+\tpublic @NotNull ChunkData createChunkData(@NotNull World world)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic BossBar createBossBar(String title, BarColor color, BarStyle style, BarFlag... flags)\n+\tpublic @NotNull BossBar createBossBar(String title, @NotNull BarColor color, @NotNull BarStyle style, BarFlag... flags)\n \t{\n-\t\tBossBar bar = new BossBarMock(title, color, style, flags);\n-\t\treturn bar;\n+\t\treturn new BossBarMock(title, color, style, flags);\n \t}\n \n \t@Override\n-\tpublic Entity getEntity(UUID uuid)\n+\tpublic Entity getEntity(@NotNull UUID uuid)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Advancement getAdvancement(NamespacedKey key)\n+\tpublic Advancement getAdvancement(@NotNull NamespacedKey key)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Iterator<Advancement> advancementIterator()\n+\tpublic @NotNull Iterator<Advancement> advancementIterator()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic UnsafeValues getUnsafe()\n+\tpublic @NotNull UnsafeValues getUnsafe()\n \t{\n \t\treturn unsafe;\n \t}\n \n \t@Override\n-\tpublic BlockData createBlockData(Material material)\n+\tpublic @NotNull BlockData createBlockData(@NotNull Material material)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic BlockData createBlockData(Material material, Consumer<BlockData> consumer)\n+\tpublic @NotNull BlockData createBlockData(@NotNull Material material, Consumer<BlockData> consumer)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic BlockData createBlockData(String data)\n+\tpublic @NotNull BlockData createBlockData(@NotNull String data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic BlockData createBlockData(Material material, String data)\n+\tpublic @NotNull BlockData createBlockData(Material material, String data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1312,7 +1312,7 @@ public void addTagRegistry(@NotNull TagRegistry registry)\n \n \t@SuppressWarnings(\"unchecked\")\n \t@Override\n-\tpublic <T extends Keyed> Tag<T> getTag(String registryKey, NamespacedKey key, Class<T> clazz)\n+\tpublic <T extends Keyed> Tag<T> getTag(@NotNull String registryKey, @NotNull NamespacedKey key, @NotNull Class<T> clazz)\n \t{\n \t\tif (clazz == Material.class)\n \t\t{\n@@ -1392,29 +1392,29 @@ private void registerPotionEffectType(int id, String name, boolean instant, int\n \t}\n \n \t@Override\n-\tpublic LootTable getLootTable(NamespacedKey key)\n+\tpublic LootTable getLootTable(@NotNull NamespacedKey key)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic ItemStack createExplorerMap(World world, Location location, StructureType structureType)\n+\tpublic @NotNull ItemStack createExplorerMap(@NotNull World world, @NotNull Location location, @NotNull StructureType structureType)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic ItemStack createExplorerMap(World world, Location location, StructureType structureType, int radius,\n-\t                                   boolean findUnexplored)\n+\tpublic @NotNull ItemStack createExplorerMap(@NotNull World world, @NotNull Location location, @NotNull StructureType structureType, int radius,\n+\t\t\t\t\t\t\t\t\t\t\t\tboolean findUnexplored)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic KeyedBossBar createBossBar(NamespacedKey key, String title, BarColor color, BarStyle style, BarFlag... flags)\n+\tpublic @NotNull KeyedBossBar createBossBar(@NotNull NamespacedKey key, String title, @NotNull BarColor color, @NotNull BarStyle style, BarFlag... flags)\n \t{\n \t\tValidate.notNull(key, \"A NamespacedKey must never be null\");\n \t\tKeyedBossBarMock bar = new KeyedBossBarMock(key, title, color, style, flags);\n@@ -1423,27 +1423,27 @@ public KeyedBossBar createBossBar(NamespacedKey key, String title, BarColor colo\n \t}\n \n \t@Override\n-\tpublic Iterator<KeyedBossBar> getBossBars()\n+\tpublic @NotNull Iterator<KeyedBossBar> getBossBars()\n \t{\n \t\treturn bossBars.values().stream().map(bossbar -> (KeyedBossBar) bossbar).iterator();\n \t}\n \n \t@Override\n-\tpublic KeyedBossBar getBossBar(NamespacedKey key)\n+\tpublic KeyedBossBar getBossBar(@NotNull NamespacedKey key)\n \t{\n \t\tValidate.notNull(key, \"A NamespacedKey must never be null\");\n \t\treturn bossBars.get(key);\n \t}\n \n \t@Override\n-\tpublic boolean removeBossBar(NamespacedKey key)\n+\tpublic boolean removeBossBar(@NotNull NamespacedKey key)\n \t{\n \t\tValidate.notNull(key, \"A NamespacedKey must never be null\");\n \t\treturn bossBars.remove(key, bossBars.get(key));\n \t}\n \n \t@Override\n-\tpublic List<Entity> selectEntities(CommandSender sender, String selector)\n+\tpublic @NotNull List<Entity> selectEntities(@NotNull CommandSender sender, @NotNull String selector)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1457,7 +1457,7 @@ public MapView getMap(int id)\n \t}\n \n \t@Override\n-\tpublic <T extends Keyed> Iterable<Tag<T>> getTags(String registry, Class<T> clazz)\n+\tpublic <T extends Keyed> @NotNull Iterable<Tag<T>> getTags(@NotNull String registry, @NotNull Class<T> clazz)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1507,7 +1507,7 @@ public int getWaterAmbientSpawnLimit()\n \t}\n \n \t@Override\n-\tpublic Spigot spigot()\n+\tpublic @NotNull Spigot spigot()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();"
  },
  {
    "sha": "bce45677b740262a5d3ea3c3328d93a8554ab1cb",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/WorldMock.java",
    "status": "modified",
    "additions": 144,
    "deletions": 139,
    "changes": 283,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/WorldMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/WorldMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/WorldMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -57,6 +57,8 @@\n import org.bukkit.util.Consumer;\n import org.bukkit.util.RayTraceResult;\n import org.bukkit.util.Vector;\n+\n+import org.apache.commons.lang.Validate;\n import org.jetbrains.annotations.NotNull;\n \n import be.seeseemelk.mockbukkit.block.BlockMock;\n@@ -79,12 +81,12 @@\n \tprivate final MetadataTable metadataTable = new MetadataTable();\n \n \tprivate Environment environment = Environment.NORMAL;\n-\tprivate ServerMock server;\n-\tprivate Material defaultBlock;\n-\tprivate int height;\n-\tprivate int grassHeight;\n+\tprivate final ServerMock server;\n+\tprivate final Material defaultBlock;\n+\tprivate final int height;\n+\tprivate final int grassHeight;\n \tprivate String name = \"World\";\n-\tprivate UUID uuid = UUID.randomUUID();\n+\tprivate final UUID uuid = UUID.randomUUID();\n \tprivate Location spawnLocation;\n \tprivate long fullTime = 0;\n \tprivate int weatherDuration = 0;\n@@ -177,7 +179,7 @@ else if (c.y <= grassHeight)\n \t}\n \n \t@Override\n-\tpublic BlockMock getBlockAt(int x, int y, int z)\n+\tpublic @NotNull BlockMock getBlockAt(int x, int y, int z)\n \t{\n \t\tCoordinate coordinate = new Coordinate(x, y, z);\n \t\tif (blocks.containsKey(coordinate))\n@@ -191,13 +193,13 @@ public BlockMock getBlockAt(int x, int y, int z)\n \t}\n \n \t@Override\n-\tpublic BlockMock getBlockAt(Location location)\n+\tpublic @NotNull BlockMock getBlockAt(Location location)\n \t{\n \t\treturn getBlockAt(location.getBlockX(), location.getBlockY(), location.getBlockZ());\n \t}\n \n \t@Override\n-\tpublic String getName()\n+\tpublic @NotNull String getName()\n \t{\n \t\treturn name;\n \t}\n@@ -213,13 +215,13 @@ public void setName(String name)\n \t}\n \n \t@Override\n-\tpublic UUID getUID()\n+\tpublic @NotNull UUID getUID()\n \t{\n \t\treturn uuid;\n \t}\n \n \t@Override\n-\tpublic Location getSpawnLocation()\n+\tpublic @NotNull Location getSpawnLocation()\n \t{\n \t\tif (spawnLocation == null)\n \t\t{\n@@ -251,7 +253,7 @@ public boolean setSpawnLocation(int x, int y, int z)\n \t}\n \n \t@Override\n-\tpublic List<Entity> getEntities()\n+\tpublic @NotNull List<Entity> getEntities()\n \t{\n \t\t// MockBukkit.assertMocking();\n \t\tList<Entity> entities = new ArrayList<>();\n@@ -263,46 +265,45 @@ public boolean setSpawnLocation(int x, int y, int z)\n \t}\n \n \t@Override\n-\tpublic ChunkMock getChunkAt(int x, int z)\n+\tpublic @NotNull ChunkMock getChunkAt(int x, int z)\n \t{\n-\t\tChunkMock chunk = new ChunkMock(this, x, z);\n-\t\treturn chunk;\n+\t\treturn new ChunkMock(this, x, z);\n \t}\n \n \t@Override\n-\tpublic void sendPluginMessage(Plugin source, String channel, byte[] message)\n+\tpublic void sendPluginMessage(@NotNull Plugin source, @NotNull String channel, byte[] message)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Set<String> getListeningPluginChannels()\n+\tpublic @NotNull Set<String> getListeningPluginChannels()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setMetadata(String metadataKey, MetadataValue newMetadataValue)\n+\tpublic void setMetadata(@NotNull String metadataKey, @NotNull MetadataValue newMetadataValue)\n \t{\n \t\tmetadataTable.setMetadata(metadataKey, newMetadataValue);\n \t}\n \n \t@Override\n-\tpublic List<MetadataValue> getMetadata(String metadataKey)\n+\tpublic @NotNull List<MetadataValue> getMetadata(@NotNull String metadataKey)\n \t{\n \t\treturn metadataTable.getMetadata(metadataKey);\n \t}\n \n \t@Override\n-\tpublic boolean hasMetadata(String metadataKey)\n+\tpublic boolean hasMetadata(@NotNull String metadataKey)\n \t{\n \t\treturn metadataTable.hasMetadata(metadataKey);\n \t}\n \n \t@Override\n-\tpublic void removeMetadata(String metadataKey, Plugin owningPlugin)\n+\tpublic void removeMetadata(@NotNull String metadataKey, @NotNull Plugin owningPlugin)\n \t{\n \t\tmetadataTable.removeMetadata(metadataKey, owningPlugin);\n \t}\n@@ -315,42 +316,42 @@ public int getHighestBlockYAt(int x, int z)\n \t}\n \n \t@Override\n-\tpublic int getHighestBlockYAt(Location location)\n+\tpublic int getHighestBlockYAt(@NotNull Location location)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Block getHighestBlockAt(int x, int z)\n+\tpublic @NotNull Block getHighestBlockAt(int x, int z)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Block getHighestBlockAt(Location location)\n+\tpublic @NotNull Block getHighestBlockAt(@NotNull Location location)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Chunk getChunkAt(Location location)\n+\tpublic @NotNull Chunk getChunkAt(@NotNull Location location)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Chunk getChunkAt(Block block)\n+\tpublic @NotNull Chunk getChunkAt(@NotNull Block block)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean isChunkLoaded(Chunk chunk)\n+\tpublic boolean isChunkLoaded(@NotNull Chunk chunk)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -364,7 +365,7 @@ public boolean isChunkLoaded(Chunk chunk)\n \t}\n \n \t@Override\n-\tpublic void loadChunk(Chunk chunk)\n+\tpublic void loadChunk(@NotNull Chunk chunk)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -399,7 +400,7 @@ public boolean loadChunk(int x, int z, boolean generate)\n \t}\n \n \t@Override\n-\tpublic boolean unloadChunk(Chunk chunk)\n+\tpublic boolean unloadChunk(@NotNull Chunk chunk)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -442,9 +443,11 @@ public boolean refreshChunk(int x, int z)\n \t}\n \n \t@Override\n-\tpublic Item dropItem(@NotNull Location loc, ItemStack item)\n+\tpublic @NotNull Item dropItem(@NotNull Location loc, @NotNull ItemStack item)\n \t{\n-\t\tif (item == null || item.getType() == Material.AIR)\n+\t\tValidate.notNull(loc);\n+\t\tValidate.notNull(item);\n+\t\tif (item.getType() == Material.AIR)\n \t\t{\n \t\t\tthrow new IllegalArgumentException(\"Cannot drop null or air\");\n \t\t}\n@@ -456,7 +459,7 @@ public Item dropItem(@NotNull Location loc, ItemStack item)\n \t}\n \n \t@Override\n-\tpublic Item dropItemNaturally(@NotNull Location location, ItemStack item)\n+\tpublic @NotNull Item dropItemNaturally(@NotNull Location location, @NotNull ItemStack item)\n \t{\n \t\tRandom random = ThreadLocalRandom.current();\n \n@@ -473,28 +476,28 @@ public Item dropItemNaturally(@NotNull Location location, ItemStack item)\n \t}\n \n \t@Override\n-\tpublic Arrow spawnArrow(Location location, Vector direction, float speed, float spread)\n+\tpublic @NotNull Arrow spawnArrow(@NotNull Location location, @NotNull Vector direction, float speed, float spread)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean generateTree(Location location, TreeType type)\n+\tpublic boolean generateTree(@NotNull Location location, @NotNull TreeType type)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean generateTree(Location loc, TreeType type, BlockChangeDelegate delegate)\n+\tpublic boolean generateTree(@NotNull Location loc, @NotNull TreeType type, @NotNull BlockChangeDelegate delegate)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Entity spawnEntity(Location loc, EntityType type)\n+\tpublic @NotNull Entity spawnEntity(@NotNull Location loc, @NotNull EntityType type)\n \t{\n \t\tEntityMock entity = mockEntity(type);\n \t\tentity.setLocation(loc);\n@@ -527,21 +530,21 @@ private EntityMock mockEntity(@NotNull EntityType type)\n \t}\n \n \t@Override\n-\tpublic LightningStrike strikeLightning(Location loc)\n+\tpublic @NotNull LightningStrike strikeLightning(@NotNull Location loc)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic LightningStrike strikeLightningEffect(Location loc)\n+\tpublic @NotNull LightningStrike strikeLightningEffect(@NotNull Location loc)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic List<LivingEntity> getLivingEntities()\n+\tpublic @NotNull List<LivingEntity> getLivingEntities()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -550,34 +553,34 @@ public LightningStrike strikeLightningEffect(Location loc)\n \t@SuppressWarnings(\"unchecked\")\n \t@Override\n \t@Deprecated\n-\tpublic <T extends Entity> Collection<T> getEntitiesByClass(Class<T>... classes)\n+\tpublic <T extends Entity> @NotNull Collection<T> getEntitiesByClass(Class<T>... classes)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T extends Entity> Collection<T> getEntitiesByClass(Class<T> cls)\n+\tpublic <T extends Entity> @NotNull Collection<T> getEntitiesByClass(@NotNull Class<T> cls)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Collection<Entity> getEntitiesByClasses(Class<?>... classes)\n+\tpublic @NotNull Collection<Entity> getEntitiesByClasses(Class<?>... classes)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic List<Player> getPlayers()\n+\tpublic @NotNull List<Player> getPlayers()\n \t{\n \t\treturn Bukkit.getOnlinePlayers().stream().filter(p -> p.getWorld() == this).collect(Collectors.toList());\n \t}\n \n \t@Override\n-\tpublic Collection<Entity> getNearbyEntities(Location location, double x, double y, double z)\n+\tpublic @NotNull Collection<Entity> getNearbyEntities(@NotNull Location location, double x, double y, double z)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -683,21 +686,21 @@ public boolean createExplosion(double x, double y, double z, float power, boolea\n \t}\n \n \t@Override\n-\tpublic boolean createExplosion(Location loc, float power)\n+\tpublic boolean createExplosion(@NotNull Location loc, float power)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean createExplosion(Location loc, float power, boolean setFire)\n+\tpublic boolean createExplosion(@NotNull Location loc, float power, boolean setFire)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Environment getEnvironment()\n+\tpublic @NotNull Environment getEnvironment()\n \t{\n \t\treturn this.environment;\n \t}\n@@ -748,73 +751,73 @@ public void save()\n \t}\n \n \t@Override\n-\tpublic List<BlockPopulator> getPopulators()\n+\tpublic @NotNull List<BlockPopulator> getPopulators()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T extends Entity> T spawn(Location location, Class<T> clazz) throws IllegalArgumentException\n+\tpublic <T extends Entity> @NotNull T spawn(@NotNull Location location, @NotNull Class<T> clazz) throws IllegalArgumentException\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T extends Entity> T spawn(Location location, Class<T> clazz, Consumer<T> function)\n+\tpublic <T extends Entity> @NotNull T spawn(@NotNull Location location, @NotNull Class<T> clazz, Consumer<T> function)\n \tthrows IllegalArgumentException\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic FallingBlock spawnFallingBlock(Location location, MaterialData data) throws IllegalArgumentException\n+\tpublic @NotNull FallingBlock spawnFallingBlock(@NotNull Location location, @NotNull MaterialData data) throws IllegalArgumentException\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n \t@Deprecated\n-\tpublic FallingBlock spawnFallingBlock(Location location, Material material, byte data)\n+\tpublic @NotNull FallingBlock spawnFallingBlock(@NotNull Location location, @NotNull Material material, byte data)\n \tthrows IllegalArgumentException\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void playEffect(Location location, Effect effect, int data)\n+\tpublic void playEffect(@NotNull Location location, @NotNull Effect effect, int data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void playEffect(Location location, Effect effect, int data, int radius)\n+\tpublic void playEffect(@NotNull Location location, @NotNull Effect effect, int data, int radius)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void playEffect(Location location, Effect effect, T data)\n+\tpublic <T> void playEffect(@NotNull Location location, @NotNull Effect effect, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void playEffect(Location location, Effect effect, T data, int radius)\n+\tpublic <T> void playEffect(@NotNull Location location, @NotNull Effect effect, T data, int radius)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic ChunkSnapshot getEmptyChunkSnapshot(int x, int z, boolean includeBiome, boolean includeBiomeTempRain)\n+\tpublic @NotNull ChunkSnapshot getEmptyChunkSnapshot(int x, int z, boolean includeBiome, boolean includeBiomeTempRain)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -842,14 +845,14 @@ public boolean getAllowMonsters()\n \t}\n \n \t@Override\n-\tpublic Biome getBiome(int x, int z)\n+\tpublic @NotNull Biome getBiome(int x, int z)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setBiome(int x, int z, Biome bio)\n+\tpublic void setBiome(int x, int z, @NotNull Biome bio)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -912,21 +915,21 @@ public void setAutoSave(boolean value)\n \t}\n \n \t@Override\n-\tpublic void setDifficulty(Difficulty difficulty)\n+\tpublic void setDifficulty(@NotNull Difficulty difficulty)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Difficulty getDifficulty()\n+\tpublic @NotNull Difficulty getDifficulty()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic File getWorldFolder()\n+\tpublic @NotNull File getWorldFolder()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1031,28 +1034,28 @@ public void setAmbientSpawnLimit(int limit)\n \t}\n \n \t@Override\n-\tpublic void playSound(Location location, Sound sound, float volume, float pitch)\n+\tpublic void playSound(@NotNull Location location, @NotNull Sound sound, float volume, float pitch)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void playSound(Location location, String sound, float volume, float pitch)\n+\tpublic void playSound(@NotNull Location location, @NotNull String sound, float volume, float pitch)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void playSound(Location location, Sound sound, SoundCategory category, float volume, float pitch)\n+\tpublic void playSound(@NotNull Location location, @NotNull Sound sound, @NotNull SoundCategory category, float volume, float pitch)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void playSound(Location location, String sound, SoundCategory category, float volume, float pitch)\n+\tpublic void playSound(@NotNull Location location, @NotNull String sound, @NotNull SoundCategory category, float volume, float pitch)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1061,7 +1064,7 @@ public void playSound(Location location, String sound, SoundCategory category, f\n \t@Override\n \tpublic String[] getGameRules()\n \t{\n-\t\treturn gameRules.values().stream().map(Object::toString).collect(Collectors.toList()).toArray(new String[0]);\n+\t\treturn gameRules.values().stream().map(Object::toString).toArray(String[]::new);\n \t}\n \n \t@Override\n@@ -1072,15 +1075,16 @@ public String getGameRuleValue(String rule)\n \t\tGameRule<?> gameRule = GameRule.getByName(rule);\n \t\tif (gameRule == null)\n \t\t\treturn null;\n-\t\treturn getGameRuleValue(gameRule).toString();\n+\t\tObject result = getGameRuleValue(gameRule);\n+\t\treturn result == null ? null : result.toString();\n \t}\n \n \t@SuppressWarnings(\"unchecked\")\n \t@Override\n-\tpublic boolean setGameRuleValue(String rule, String value)\n+\tpublic boolean setGameRuleValue(@NotNull String rule, @NotNull String value)\n \t{\n-\t\tif (rule == null)\n-\t\t\treturn false;\n+\t\tValidate.notNull(rule);\n+\t\tValidate.notNull(value);\n \t\tGameRule<?> gameRule = GameRule.getByName(rule);\n \t\tif (gameRule == null)\n \t\t\treturn false;\n@@ -1104,112 +1108,113 @@ else if (gameRule.getType().equals(Integer.TYPE))\n \t}\n \n \t@Override\n-\tpublic boolean isGameRule(String rule)\n+\tpublic boolean isGameRule(@NotNull String rule)\n \t{\n-\t\treturn rule != null && GameRule.getByName(rule) != null;\n+\t\tValidate.notNull(rule);\n+\t\treturn GameRule.getByName(rule) != null;\n \t}\n \n \t@Override\n-\tpublic WorldBorder getWorldBorder()\n+\tpublic @NotNull WorldBorder getWorldBorder()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, Location location, int count)\n+\tpublic void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, double x, double y, double z, int count)\n+\tpublic void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, Location location, int count, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, double x, double y, double z, int count, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, Location location, int count, double offsetX, double offsetY,\n-\t                          double offsetZ)\n+\tpublic void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, double offsetX, double offsetY,\n+\t\t\t\t\t\t\t  double offsetZ)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, double x, double y, double z, int count, double offsetX,\n-\t                          double offsetY, double offsetZ)\n+\tpublic void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, double offsetX,\n+\t\t\t\t\t\t\t  double offsetY, double offsetZ)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, Location location, int count, double offsetX, double offsetY,\n-\t                              double offsetZ, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, double offsetX, double offsetY,\n+\t\t\t\t\t\t\t\t  double offsetZ, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, double x, double y, double z, int count, double offsetX,\n-\t                              double offsetY, double offsetZ, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, double offsetX,\n+\t\t\t\t\t\t\t\t  double offsetY, double offsetZ, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, Location location, int count, double offsetX, double offsetY,\n-\t                          double offsetZ, double extra)\n+\tpublic void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, double offsetX, double offsetY,\n+\t\t\t\t\t\t\t  double offsetZ, double extra)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void spawnParticle(Particle particle, double x, double y, double z, int count, double offsetX,\n-\t                          double offsetY, double offsetZ, double extra)\n+\tpublic void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, double offsetX,\n+\t\t\t\t\t\t\t  double offsetY, double offsetZ, double extra)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, Location location, int count, double offsetX, double offsetY,\n-\t                              double offsetZ, double extra, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, double offsetX, double offsetY,\n+\t\t\t\t\t\t\t\t  double offsetZ, double extra, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, double x, double y, double z, int count, double offsetX,\n-\t                              double offsetY, double offsetZ, double extra, T data)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, double offsetX,\n+\t\t\t\t\t\t\t\t  double offsetY, double offsetZ, double extra, T data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic FallingBlock spawnFallingBlock(Location location, BlockData data) throws IllegalArgumentException\n+\tpublic @NotNull FallingBlock spawnFallingBlock(@NotNull Location location, @NotNull BlockData data) throws IllegalArgumentException\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1222,14 +1227,14 @@ public FallingBlock spawnFallingBlock(Location location, BlockData data) throws\n \t}\n \n \t@Override\n-\tpublic <T> T getGameRuleDefault(GameRule<T> rule)\n+\tpublic <T> T getGameRuleDefault(@NotNull GameRule<T> rule)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> boolean setGameRule(GameRule<T> rule, T newValue)\n+\tpublic <T> boolean setGameRule(@NotNull GameRule<T> rule, @NotNull T newValue)\n \t{\n \t\tgameRules.put(rule, newValue);\n \t\treturn true;\n@@ -1243,108 +1248,108 @@ public boolean isChunkGenerated(int x, int z)\n \t}\n \n \t@Override\n-\tpublic Collection<Entity> getNearbyEntities(Location location, double x, double y, double z,\n-\t        Predicate<Entity> filter)\n+\tpublic @NotNull Collection<Entity> getNearbyEntities(@NotNull Location location, double x, double y, double z,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t Predicate<Entity> filter)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Collection<Entity> getNearbyEntities(BoundingBox boundingBox)\n+\tpublic @NotNull Collection<Entity> getNearbyEntities(@NotNull BoundingBox boundingBox)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Collection<Entity> getNearbyEntities(BoundingBox boundingBox, Predicate<Entity> filter)\n+\tpublic @NotNull Collection<Entity> getNearbyEntities(@NotNull BoundingBox boundingBox, Predicate<Entity> filter)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic RayTraceResult rayTraceEntities(Location start, Vector direction, double maxDistance)\n+\tpublic RayTraceResult rayTraceEntities(@NotNull Location start, @NotNull Vector direction, double maxDistance)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic RayTraceResult rayTraceEntities(Location start, Vector direction, double maxDistance, double raySize)\n+\tpublic RayTraceResult rayTraceEntities(@NotNull Location start, @NotNull Vector direction, double maxDistance, double raySize)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic RayTraceResult rayTraceEntities(Location start, Vector direction, double maxDistance,\n-\t                                       Predicate<Entity> filter)\n+\tpublic RayTraceResult rayTraceEntities(@NotNull Location start, @NotNull Vector direction, double maxDistance,\n+\t\t\t\t\t\t\t\t\t\t   Predicate<Entity> filter)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic RayTraceResult rayTraceEntities(Location start, Vector direction, double maxDistance, double raySize,\n-\t                                       Predicate<Entity> filter)\n+\tpublic RayTraceResult rayTraceEntities(@NotNull Location start, @NotNull Vector direction, double maxDistance, double raySize,\n+\t\t\t\t\t\t\t\t\t\t   Predicate<Entity> filter)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic RayTraceResult rayTraceBlocks(Location start, Vector direction, double maxDistance)\n+\tpublic RayTraceResult rayTraceBlocks(@NotNull Location start, @NotNull Vector direction, double maxDistance)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic RayTraceResult rayTraceBlocks(Location start, Vector direction, double maxDistance,\n-\t                                     FluidCollisionMode fluidCollisionMode)\n+\tpublic RayTraceResult rayTraceBlocks(@NotNull Location start, @NotNull Vector direction, double maxDistance,\n+\t\t\t\t\t\t\t\t\t\t @NotNull FluidCollisionMode fluidCollisionMode)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic RayTraceResult rayTraceBlocks(Location start, Vector direction, double maxDistance,\n-\t                                     FluidCollisionMode fluidCollisionMode, boolean ignorePassableBlocks)\n+\tpublic RayTraceResult rayTraceBlocks(@NotNull Location start, @NotNull Vector direction, double maxDistance,\n+\t\t\t\t\t\t\t\t\t\t @NotNull FluidCollisionMode fluidCollisionMode, boolean ignorePassableBlocks)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic RayTraceResult rayTrace(Location start, Vector direction, double maxDistance,\n-\t                               FluidCollisionMode fluidCollisionMode, boolean ignorePassableBlocks, double raySize,\n-\t                               Predicate<Entity> filter)\n+\tpublic RayTraceResult rayTrace(@NotNull Location start, @NotNull Vector direction, double maxDistance,\n+\t\t\t\t\t\t\t\t   @NotNull FluidCollisionMode fluidCollisionMode, boolean ignorePassableBlocks, double raySize,\n+\t\t\t\t\t\t\t\t   Predicate<Entity> filter)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, Location location, int count, double offsetX, double offsetY,\n-\t                              double offsetZ, double extra, T data, boolean force)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, @NotNull Location location, int count, double offsetX, double offsetY,\n+\t\t\t\t\t\t\t\t  double offsetZ, double extra, T data, boolean force)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void spawnParticle(Particle particle, double x, double y, double z, int count, double offsetX,\n-\t                              double offsetY, double offsetZ, double extra, T data, boolean force)\n+\tpublic <T> void spawnParticle(@NotNull Particle particle, double x, double y, double z, int count, double offsetX,\n+\t\t\t\t\t\t\t\t  double offsetY, double offsetZ, double extra, T data, boolean force)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Location locateNearestStructure(Location origin, StructureType structureType, int radius,\n-\t                                       boolean findUnexplored)\n+\tpublic Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius,\n+\t\t\t\t\t\t\t\t\t\t   boolean findUnexplored)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1365,64 +1370,64 @@ public void setChunkForceLoaded(int x, int z, boolean forced)\n \t}\n \n \t@Override\n-\tpublic Collection<Chunk> getForceLoadedChunks()\n+\tpublic @NotNull Collection<Chunk> getForceLoadedChunks()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean addPluginChunkTicket(int x, int z, Plugin plugin)\n+\tpublic boolean addPluginChunkTicket(int x, int z, @NotNull Plugin plugin)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean removePluginChunkTicket(int x, int z, Plugin plugin)\n+\tpublic boolean removePluginChunkTicket(int x, int z, @NotNull Plugin plugin)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void removePluginChunkTickets(Plugin plugin)\n+\tpublic void removePluginChunkTickets(@NotNull Plugin plugin)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Collection<Plugin> getPluginChunkTickets(int x, int z)\n+\tpublic @NotNull Collection<Plugin> getPluginChunkTickets(int x, int z)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Map<Plugin, Collection<Chunk>> getPluginChunkTickets()\n+\tpublic @NotNull Map<Plugin, Collection<Chunk>> getPluginChunkTickets()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T extends AbstractArrow> T spawnArrow(Location location, Vector direction, float speed, float spread,\n-\t        Class<T> clazz)\n+\tpublic <T extends AbstractArrow> @NotNull T spawnArrow(@NotNull Location location, @NotNull Vector direction, float speed, float spread,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t   @NotNull Class<T> clazz)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Raid locateNearestRaid(Location location, int radius)\n+\tpublic Raid locateNearestRaid(@NotNull Location location, int radius)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic List<Raid> getRaids()\n+\tpublic @NotNull List<Raid> getRaids()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1435,55 +1440,55 @@ public boolean createExplosion(double x, double y, double z, float power, boolea\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n-\tpublic boolean createExplosion(Location loc, float power, boolean setFire, boolean breakBlocks)\n+\tpublic boolean createExplosion(@NotNull Location loc, float power, boolean setFire, boolean breakBlocks)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n-\tpublic boolean createExplosion(Location loc, float power, boolean setFire, boolean breakBlocks, Entity source)\n+\tpublic boolean createExplosion(@NotNull Location loc, float power, boolean setFire, boolean breakBlocks, Entity source)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic int getHighestBlockYAt(int x, int z, HeightMap heightMap)\n+\tpublic int getHighestBlockYAt(int x, int z, @NotNull HeightMap heightMap)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic int getHighestBlockYAt(Location location, HeightMap heightMap)\n+\tpublic int getHighestBlockYAt(@NotNull Location location, @NotNull HeightMap heightMap)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Block getHighestBlockAt(int x, int z, HeightMap heightMap)\n+\tpublic @NotNull Block getHighestBlockAt(int x, int z, @NotNull HeightMap heightMap)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Block getHighestBlockAt(Location location, HeightMap heightMap)\n+\tpublic @NotNull Block getHighestBlockAt(@NotNull Location location, @NotNull HeightMap heightMap)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Biome getBiome(int x, int y, int z)\n+\tpublic @NotNull Biome getBiome(int x, int y, int z)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setBiome(int x, int y, int z, Biome bio)\n+\tpublic void setBiome(int x, int y, int z, @NotNull Biome bio)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -1595,7 +1600,7 @@ public int getViewDistance()\n \t}\n \n \t@Override\n-\tpublic Spigot spigot()\n+\tpublic @NotNull Spigot spigot()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();"
  },
  {
    "sha": "d93ebd92197c87b75ca1b895cf2a1110deb6a9ec",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/attribute/AttributeInstanceMock.java",
    "status": "modified",
    "additions": 9,
    "deletions": 5,
    "changes": 14,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/attribute/AttributeInstanceMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/attribute/AttributeInstanceMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/attribute/AttributeInstanceMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -1,13 +1,18 @@\n package be.seeseemelk.mockbukkit.attribute;\n \n import java.util.Collection;\n+import java.util.Objects;\n+\n+import org.junit.Assert;\n \n import org.bukkit.attribute.Attribute;\n import org.bukkit.attribute.AttributeInstance;\n import org.bukkit.attribute.AttributeModifier;\n \n import be.seeseemelk.mockbukkit.UnimplementedOperationException;\n \n+import org.jetbrains.annotations.NotNull;\n+\n public class AttributeInstanceMock implements AttributeInstance\n {\n \tprivate final Attribute attribute;\n@@ -22,7 +27,7 @@ public AttributeInstanceMock(Attribute attribute, double value)\n \t}\n \n \t@Override\n-\tpublic Attribute getAttribute()\n+\tpublic @NotNull Attribute getAttribute()\n \t{\n \t\treturn attribute;\n \t}\n@@ -40,22 +45,21 @@ public void setBaseValue(double value)\n \t}\n \n \t@Override\n-\tpublic Collection<AttributeModifier> getModifiers()\n+\tpublic @NotNull Collection<AttributeModifier> getModifiers()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void addModifier(AttributeModifier modifier)\n+\tpublic void addModifier(@NotNull AttributeModifier modifier)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n-\n \t}\n \n \t@Override\n-\tpublic void removeModifier(AttributeModifier modifier)\n+\tpublic void removeModifier(@NotNull AttributeModifier modifier)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();"
  },
  {
    "sha": "a964867ca9bf191081ef24c202e1c6134b89c914",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/BlockMock.java",
    "status": "modified",
    "additions": 29,
    "deletions": 29,
    "changes": 58,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/BlockMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/BlockMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/BlockMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -85,25 +85,25 @@ public BlockMock(Material material, Location location)\n \t}\n \n \t@Override\n-\tpublic void setMetadata(String metadataKey, MetadataValue newMetadataValue)\n+\tpublic void setMetadata(@NotNull String metadataKey, @NotNull MetadataValue newMetadataValue)\n \t{\n \t\tmetadataTable.setMetadata(metadataKey, newMetadataValue);\n \t}\n \n \t@Override\n-\tpublic List<MetadataValue> getMetadata(String metadataKey)\n+\tpublic @NotNull List<MetadataValue> getMetadata(@NotNull String metadataKey)\n \t{\n \t\treturn metadataTable.getMetadata(metadataKey);\n \t}\n \n \t@Override\n-\tpublic boolean hasMetadata(String metadataKey)\n+\tpublic boolean hasMetadata(@NotNull String metadataKey)\n \t{\n \t\treturn metadataTable.hasMetadata(metadataKey);\n \t}\n \n \t@Override\n-\tpublic void removeMetadata(String metadataKey, Plugin owningPlugin)\n+\tpublic void removeMetadata(@NotNull String metadataKey, @NotNull Plugin owningPlugin)\n \t{\n \t\tmetadataTable.removeMetadata(metadataKey, owningPlugin);\n \t}\n@@ -116,7 +116,7 @@ public byte getData()\n \t}\n \n \t@Override\n-\tpublic Block getRelative(int modX, int modY, int modZ)\n+\tpublic @NotNull Block getRelative(int modX, int modY, int modZ)\n \t{\n \t\tint x = location.getBlockX() + modX;\n \t\tint y = location.getBlockY() + modY;\n@@ -125,13 +125,13 @@ public Block getRelative(int modX, int modY, int modZ)\n \t}\n \n \t@Override\n-\tpublic Block getRelative(BlockFace face)\n+\tpublic @NotNull Block getRelative(@NotNull BlockFace face)\n \t{\n \t\treturn getRelative(face, 1);\n \t}\n \n \t@Override\n-\tpublic Block getRelative(BlockFace face, int distance)\n+\tpublic @NotNull Block getRelative(BlockFace face, int distance)\n \t{\n \t\treturn getRelative(face.getModX() * distance, face.getModY() * distance, face.getModZ() * distance);\n \t}\n@@ -151,7 +151,7 @@ public void assertType(Material material) throws AssertionFailedError\n \t}\n \n \t@Override\n-\tpublic Material getType()\n+\tpublic @NotNull Material getType()\n \t{\n \t\treturn material;\n \t}\n@@ -178,7 +178,7 @@ public byte getLightFromBlocks()\n \t}\n \n \t@Override\n-\tpublic World getWorld()\n+\tpublic @NotNull World getWorld()\n \t{\n \t\treturn location.getWorld();\n \t}\n@@ -202,7 +202,7 @@ public int getZ()\n \t}\n \n \t@Override\n-\tpublic Location getLocation()\n+\tpublic @NotNull Location getLocation()\n \t{\n \t\treturn location;\n \t}\n@@ -215,49 +215,49 @@ public Location getLocation(Location loc)\n \t}\n \n \t@Override\n-\tpublic Chunk getChunk()\n+\tpublic @NotNull Chunk getChunk()\n \t{\n \t\treturn location.getWorld().getChunkAt(this);\n \t}\n \n \t@Override\n-\tpublic void setType(Material type)\n+\tpublic void setType(@NotNull Material type)\n \t{\n \t\tmaterial = type;\n \t\tstate = BlockStateMock.mockState(this);\n \t\tblockData = new BlockDataMock(type);\n \t}\n \n \t@Override\n-\tpublic void setType(Material type, boolean applyPhysics)\n+\tpublic void setType(@NotNull Material type, boolean applyPhysics)\n \t{\n \t\tsetType(material);\n \t}\n \n \t@Override\n-\tpublic BlockFace getFace(Block block)\n+\tpublic BlockFace getFace(@NotNull Block block)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic BlockState getState()\n+\tpublic @NotNull BlockState getState()\n \t{\n \t\t// This will always return a snapshot of the BlockState, not the actual state.\n \t\t// This is optional with Paper but for Spigot it simply works like that.\n \t\treturn state.getSnapshot();\n \t}\n \n \t@Override\n-\tpublic Biome getBiome()\n+\tpublic @NotNull Biome getBiome()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setBiome(Biome bio)\n+\tpublic void setBiome(@NotNull Biome bio)\n \t{\n \n \t\t// TODO Auto-generated method stub\n@@ -279,21 +279,21 @@ public boolean isBlockIndirectlyPowered()\n \t}\n \n \t@Override\n-\tpublic boolean isBlockFacePowered(BlockFace face)\n+\tpublic boolean isBlockFacePowered(@NotNull BlockFace face)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean isBlockFaceIndirectlyPowered(BlockFace face)\n+\tpublic boolean isBlockFaceIndirectlyPowered(@NotNull BlockFace face)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic int getBlockPower(BlockFace face)\n+\tpublic int getBlockPower(@NotNull BlockFace face)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -335,7 +335,7 @@ public double getHumidity()\n \t}\n \n \t@Override\n-\tpublic PistonMoveReaction getPistonMoveReaction()\n+\tpublic @NotNull PistonMoveReaction getPistonMoveReaction()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -359,21 +359,21 @@ public boolean breakNaturally(ItemStack tool)\n \t}\n \n \t@Override\n-\tpublic Collection<ItemStack> getDrops()\n+\tpublic @NotNull Collection<ItemStack> getDrops()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Collection<ItemStack> getDrops(ItemStack tool)\n+\tpublic @NotNull Collection<ItemStack> getDrops(ItemStack tool)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic BlockData getBlockData()\n+\tpublic @NotNull BlockData getBlockData()\n \t{\n \t\treturn blockData;\n \t}\n@@ -385,7 +385,7 @@ public void setBlockData(@NotNull BlockData data)\n \t}\n \n \t@Override\n-\tpublic void setBlockData(BlockData data, boolean applyPhysics)\n+\tpublic void setBlockData(@NotNull BlockData data, boolean applyPhysics)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -399,21 +399,21 @@ public boolean isPassable()\n \t}\n \n \t@Override\n-\tpublic RayTraceResult rayTrace(Location start, Vector direction, double maxDistance, FluidCollisionMode fluidCollisionMode)\n+\tpublic RayTraceResult rayTrace(@NotNull Location start, @NotNull Vector direction, double maxDistance, @NotNull FluidCollisionMode fluidCollisionMode)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic BoundingBox getBoundingBox()\n+\tpublic @NotNull BoundingBox getBoundingBox()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Collection<ItemStack> getDrops(ItemStack tool, Entity entity)\n+\tpublic @NotNull Collection<ItemStack> getDrops(@NotNull ItemStack tool, Entity entity)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -432,7 +432,7 @@ public void setState(@NotNull BlockStateMock state)\n \t}\n \n \t@Override\n-\tpublic boolean applyBoneMeal(BlockFace face)\n+\tpublic boolean applyBoneMeal(@NotNull BlockFace face)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();"
  },
  {
    "sha": "3fabbf4842ade2bb41c20a672e545655d772d24c",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/data/BlockDataMock.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/data/BlockDataMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/data/BlockDataMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/data/BlockDataMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -1,5 +1,7 @@\n package be.seeseemelk.mockbukkit.block.data;\n \n+import java.util.Objects;\n+\n import org.bukkit.Material;\n import org.bukkit.SoundGroup;\n import org.bukkit.block.data.BlockData;\n@@ -45,7 +47,7 @@ public BlockDataMock(Material type)\n \t}\n \n \t@Override\n-\tpublic SoundGroup getSoundGroup()\n+\tpublic @NotNull SoundGroup getSoundGroup()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();"
  },
  {
    "sha": "5d3e5b56af2dfa6f8f30a000c13454dbb255bacc",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/BarrelMock.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/BarrelMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/BarrelMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/BarrelMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -86,7 +86,7 @@ protected InventoryMock createInventory()\n \t}\n \n \t@Override\n-\tpublic BlockState getSnapshot()\n+\tpublic @NotNull BlockState getSnapshot()\n \t{\n \t\treturn new BarrelMock(this);\n \t}"
  },
  {
    "sha": "8ddb87afba8a4087fc250a6f9cfceae963c0b4b1",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/BlockStateMock.java",
    "status": "modified",
    "additions": 13,
    "deletions": 13,
    "changes": 26,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/BlockStateMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/BlockStateMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/BlockStateMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -44,31 +44,31 @@ protected BlockStateMock(@NotNull BlockStateMock state)\n \t}\n \n \t@Override\n-\tpublic void setMetadata(String metadataKey, MetadataValue newMetadataValue)\n+\tpublic void setMetadata(@NotNull String metadataKey, @NotNull MetadataValue newMetadataValue)\n \t{\n \t\tmetadataTable.setMetadata(metadataKey, newMetadataValue);\n \t}\n \n \t@Override\n-\tpublic List<MetadataValue> getMetadata(String metadataKey)\n+\tpublic @NotNull List<MetadataValue> getMetadata(@NotNull String metadataKey)\n \t{\n \t\treturn metadataTable.getMetadata(metadataKey);\n \t}\n \n \t@Override\n-\tpublic boolean hasMetadata(String metadataKey)\n+\tpublic boolean hasMetadata(@NotNull String metadataKey)\n \t{\n \t\treturn metadataTable.hasMetadata(metadataKey);\n \t}\n \n \t@Override\n-\tpublic void removeMetadata(String metadataKey, Plugin owningPlugin)\n+\tpublic void removeMetadata(@NotNull String metadataKey, @NotNull Plugin owningPlugin)\n \t{\n \t\tmetadataTable.removeMetadata(metadataKey, owningPlugin);\n \t}\n \n \t@Override\n-\tpublic Block getBlock()\n+\tpublic @NotNull Block getBlock()\n \t{\n \t\tif (block == null)\n \t\t{\n@@ -82,13 +82,13 @@ public Block getBlock()\n \n \t@Override\n \t@Deprecated\n-\tpublic MaterialData getData()\n+\tpublic @NotNull MaterialData getData()\n \t{\n \t\treturn new MaterialData(material);\n \t}\n \n \t@Override\n-\tpublic Material getType()\n+\tpublic @NotNull Material getType()\n \t{\n \t\treturn material;\n \t}\n@@ -100,7 +100,7 @@ public byte getLightLevel()\n \t}\n \n \t@Override\n-\tpublic World getWorld()\n+\tpublic @NotNull World getWorld()\n \t{\n \t\treturn getBlock().getWorld();\n \t}\n@@ -124,7 +124,7 @@ public int getZ()\n \t}\n \n \t@Override\n-\tpublic Location getLocation()\n+\tpublic @NotNull Location getLocation()\n \t{\n \t\treturn getBlock().getLocation();\n \t}\n@@ -136,7 +136,7 @@ public Location getLocation(Location loc)\n \t}\n \n \t@Override\n-\tpublic Chunk getChunk()\n+\tpublic @NotNull Chunk getChunk()\n \t{\n \t\treturn getBlock().getChunk();\n \t}\n@@ -149,7 +149,7 @@ public void setData(@NotNull MaterialData data)\n \t}\n \n \t@Override\n-\tpublic void setType(Material type)\n+\tpublic void setType(@NotNull Material type)\n \t{\n \t\tthis.material = type;\n \t}\n@@ -210,14 +210,14 @@ public boolean isPlaced()\n \t}\n \n \t@Override\n-\tpublic BlockData getBlockData()\n+\tpublic @NotNull BlockData getBlockData()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setBlockData(BlockData data)\n+\tpublic void setBlockData(@NotNull BlockData data)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();"
  },
  {
    "sha": "cba52cf22f0bf61826021197204cb19a5a5788d7",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/ChestMock.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/ChestMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/ChestMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/ChestMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -79,7 +79,7 @@ public void close()\n \t}\n \n \t@Override\n-\tpublic Inventory getBlockInventory()\n+\tpublic @NotNull Inventory getBlockInventory()\n \t{\n \t\treturn getInventory();\n \t}\n@@ -91,7 +91,7 @@ protected InventoryMock createInventory()\n \t}\n \n \t@Override\n-\tpublic BlockState getSnapshot()\n+\tpublic @NotNull BlockState getSnapshot()\n \t{\n \t\treturn new ChestMock(this);\n \t}"
  },
  {
    "sha": "9154fd5fa218e8e3e42a998c4ec7aa8288cf24c0",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/ContainerMock.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/ContainerMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/ContainerMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/ContainerMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -44,7 +44,7 @@ protected ContainerMock(@NotNull ContainerMock state)\n \tprotected abstract InventoryMock createInventory();\n \n \t@Override\n-\tpublic abstract BlockState getSnapshot();\n+\tpublic abstract @NotNull BlockState getSnapshot();\n \n \t@Override\n \tpublic boolean isLocked()\n@@ -86,13 +86,13 @@ public void setCustomName(String name)\n \t}\n \n \t@Override\n-\tpublic Inventory getInventory()\n+\tpublic @NotNull Inventory getInventory()\n \t{\n \t\treturn inventory;\n \t}\n \n \t@Override\n-\tpublic Inventory getSnapshotInventory()\n+\tpublic @NotNull Inventory getSnapshotInventory()\n \t{\n \t\treturn ((InventoryMock) inventory).getSnapshot();\n \t}"
  },
  {
    "sha": "0f46e68925cb646aa3a690d65a987ed4579c392d",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/DispenserMock.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/DispenserMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/DispenserMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/DispenserMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -71,7 +71,7 @@ protected InventoryMock createInventory()\n \t}\n \n \t@Override\n-\tpublic BlockState getSnapshot()\n+\tpublic @NotNull BlockState getSnapshot()\n \t{\n \t\treturn new DispenserMock(this);\n \t}"
  },
  {
    "sha": "e635da01c24f350de3e485ded1951e782d000a04",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/DispenserProjectileSourceMock.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/DispenserProjectileSourceMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/DispenserProjectileSourceMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/DispenserProjectileSourceMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -25,21 +25,21 @@\n \t}\n \n \t@Override\n-\tpublic <T extends Projectile> T launchProjectile(Class<? extends T> projectile)\n+\tpublic <T extends Projectile> @NotNull T launchProjectile(@NotNull Class<? extends T> projectile)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T extends Projectile> T launchProjectile(Class<? extends T> projectile, Vector velocity)\n+\tpublic <T extends Projectile> @NotNull T launchProjectile(@NotNull Class<? extends T> projectile, Vector velocity)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Block getBlock()\n+\tpublic @NotNull Block getBlock()\n \t{\n \t\treturn dispenser.getBlock();\n \t}"
  },
  {
    "sha": "79589dacdb2bb7e614e305e119c9c1971393b393",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/DropperMock.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/DropperMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/DropperMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/DropperMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -70,7 +70,7 @@ protected InventoryMock createInventory()\n \t}\n \n \t@Override\n-\tpublic BlockState getSnapshot()\n+\tpublic @NotNull BlockState getSnapshot()\n \t{\n \t\treturn new DropperMock(this);\n \t}"
  },
  {
    "sha": "f08f5a6343c4b64e7fbcb9fecf409a92a93e6ea4",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/EnderChestMock.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/EnderChestMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/EnderChestMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/EnderChestMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -32,7 +32,7 @@ protected EnderChestMock(@NotNull EnderChestMock state)\n \t}\n \n \t@Override\n-\tpublic BlockState getSnapshot()\n+\tpublic @NotNull BlockState getSnapshot()\n \t{\n \t\treturn new EnderChestMock(this);\n \t}"
  },
  {
    "sha": "0530786bfccbb5ce1adcf557ce2dfbc2502b018e",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/HopperMock.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/HopperMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/HopperMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/HopperMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -70,7 +70,7 @@ protected InventoryMock createInventory()\n \t}\n \n \t@Override\n-\tpublic BlockState getSnapshot()\n+\tpublic @NotNull BlockState getSnapshot()\n \t{\n \t\treturn new HopperMock(this);\n \t}"
  },
  {
    "sha": "3c09261566f2b2e313144e499f2b889704870aaa",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/LecternMock.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/LecternMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/LecternMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/LecternMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -39,7 +39,7 @@ protected InventoryMock createInventory()\n \t}\n \n \t@Override\n-\tpublic BlockState getSnapshot()\n+\tpublic @NotNull BlockState getSnapshot()\n \t{\n \t\treturn new LecternMock(this);\n \t}"
  },
  {
    "sha": "32a8aeeb842dbf15b115fc6f93d51b52a8da232b",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/ShulkerBoxMock.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/ShulkerBoxMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/ShulkerBoxMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/ShulkerBoxMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -135,7 +135,7 @@ protected InventoryMock createInventory()\n \t}\n \n \t@Override\n-\tpublic BlockState getSnapshot()\n+\tpublic @NotNull BlockState getSnapshot()\n \t{\n \t\treturn new ShulkerBoxMock(this);\n \t}"
  },
  {
    "sha": "8ad84719d1980ffd6c02fa34b5f9a73fc888fa35",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/SignMock.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/SignMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/SignMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/SignMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -56,7 +56,7 @@ protected SignMock(@NotNull SignMock state)\n \t}\n \n \t@Override\n-\tpublic String getLine(int index) throws IndexOutOfBoundsException\n+\tpublic @NotNull String getLine(int index) throws IndexOutOfBoundsException\n \t{\n \t\treturn lines[index];\n \t}\n@@ -97,7 +97,7 @@ public void setColor(DyeColor color)\n \t}\n \n \t@Override\n-\tpublic BlockState getSnapshot()\n+\tpublic @NotNull BlockState getSnapshot()\n \t{\n \t\treturn new SignMock(this);\n \t}"
  },
  {
    "sha": "45e04f0447ab392da194d806caf330555e6bfd2b",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/block/state/TileStateMock.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/TileStateMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/block/state/TileStateMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/block/state/TileStateMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -40,12 +40,12 @@ protected TileStateMock(@NotNull TileStateMock state)\n \t}\n \n \t@Override\n-\tpublic PersistentDataContainer getPersistentDataContainer()\n+\tpublic @NotNull PersistentDataContainer getPersistentDataContainer()\n \t{\n \t\treturn container;\n \t}\n \n \t@Override\n-\tpublic abstract BlockState getSnapshot();\n+\tpublic abstract @NotNull BlockState getSnapshot();\n \n }"
  },
  {
    "sha": "1d80ce953b6d4775c4c9a2644b0e57e294af5683",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/boss/BossBarMock.java",
    "status": "modified",
    "additions": 13,
    "deletions": 13,
    "changes": 26,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/boss/BossBarMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/boss/BossBarMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/boss/BossBarMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -3,6 +3,7 @@\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n \n import org.apache.commons.lang.Validate;\n import org.bukkit.boss.BarColor;\n@@ -18,8 +19,8 @@\n \tprivate String title = null;\n \tprivate BarColor color = null;\n \tprivate BarStyle style = null;\n-\tprivate HashSet<Player> players = new HashSet<>();\n-\tprivate HashSet<BarFlag> barFlags = new HashSet<>();\n+\tprivate final Set<Player> players = new HashSet<>();\n+\tprivate final Set<BarFlag> barFlags = new HashSet<>();\n \tprivate boolean visible = true;\n \tprivate double progress = 1.0;\n \n@@ -34,9 +35,8 @@ public BossBarMock(String title, BarColor color, BarStyle style, BarFlag... flag\n \t\t}\n \t}\n \n-\n \t@Override\n-\tpublic String getTitle()\n+\tpublic @NotNull String getTitle()\n \t{\n \t\treturn title;\n \t}\n@@ -48,43 +48,43 @@ public void setTitle(String title)\n \t}\n \n \t@Override\n-\tpublic BarColor getColor()\n+\tpublic @NotNull BarColor getColor()\n \t{\n \t\treturn color;\n \t}\n \n \t@Override\n-\tpublic void setColor(BarColor color)\n+\tpublic void setColor(@NotNull BarColor color)\n \t{\n \t\tthis.color = color;\n \t}\n \n \t@Override\n-\tpublic BarStyle getStyle()\n+\tpublic @NotNull BarStyle getStyle()\n \t{\n \t\treturn style;\n \t}\n \n \t@Override\n-\tpublic void setStyle(BarStyle style)\n+\tpublic void setStyle(@NotNull BarStyle style)\n \t{\n \t\tthis.style = style;\n \t}\n \n \t@Override\n-\tpublic void removeFlag(BarFlag flag)\n+\tpublic void removeFlag(@NotNull BarFlag flag)\n \t{\n \t\tbarFlags.remove(flag);\n \t}\n \n \t@Override\n-\tpublic void addFlag(BarFlag flag)\n+\tpublic void addFlag(@NotNull BarFlag flag)\n \t{\n \t\tbarFlags.add(flag);\n \t}\n \n \t@Override\n-\tpublic boolean hasFlag(BarFlag flag)\n+\tpublic boolean hasFlag(@NotNull BarFlag flag)\n \t{\n \t\treturn barFlags.contains(flag);\n \t}\n@@ -126,9 +126,9 @@ public void removeAll()\n \t}\n \n \t@Override\n-\tpublic List<Player> getPlayers()\n+\tpublic @NotNull List<Player> getPlayers()\n \t{\n-\t\treturn new ArrayList<Player>(players);\n+\t\treturn new ArrayList<>(players);\n \t}\n \n \t@Override"
  },
  {
    "sha": "1266459c62f5544c2cc07b1e99f4bd51c2c345b1",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/boss/KeyedBossBarMock.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/boss/KeyedBossBarMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/boss/KeyedBossBarMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/boss/KeyedBossBarMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -6,6 +6,8 @@\n import org.bukkit.boss.BarStyle;\n import org.bukkit.boss.KeyedBossBar;\n \n+import org.jetbrains.annotations.NotNull;\n+\n public class KeyedBossBarMock extends BossBarMock implements KeyedBossBar\n {\n \tprivate final NamespacedKey key;\n@@ -17,10 +19,8 @@ public KeyedBossBarMock(NamespacedKey key, String title, BarColor color, BarStyl\n \t}\n \n \t@Override\n-\tpublic NamespacedKey getKey()\n+\tpublic @NotNull NamespacedKey getKey()\n \t{\n \t\treturn key;\n \t}\n-\n-\n }"
  },
  {
    "sha": "605da25f03fda429f0a0cea4a8018e6f67e4f752",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/command/ConsoleCommandSenderMock.java",
    "status": "modified",
    "additions": 23,
    "deletions": 21,
    "changes": 44,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/command/ConsoleCommandSenderMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/command/ConsoleCommandSenderMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/command/ConsoleCommandSenderMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -15,12 +15,14 @@\n import java.util.Set;\n import java.util.UUID;\n \n+import org.jetbrains.annotations.NotNull;\n+\n public class ConsoleCommandSenderMock implements ConsoleCommandSender, MessageTarget\n {\n \tprivate final Queue<String> messages = new LinkedList<>();\n \n \t@Override\n-\tpublic void sendMessage(String message)\n+\tpublic void sendMessage(@NotNull String message)\n \t{\n \t\tsendMessage(null, message);\n \t}\n@@ -32,7 +34,7 @@ public void sendMessage(String[] messages)\n \t}\n \n \t@Override\n-\tpublic void sendMessage(UUID sender, String message)\n+\tpublic void sendMessage(UUID sender, @NotNull String message)\n \t{\n \t\tmessages.add(message);\n \t}\n@@ -53,63 +55,63 @@ public String nextMessage()\n \t}\n \n \t@Override\n-\tpublic boolean isPermissionSet(String name)\n+\tpublic boolean isPermissionSet(@NotNull String name)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean isPermissionSet(Permission perm)\n+\tpublic boolean isPermissionSet(@NotNull Permission perm)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean hasPermission(String name)\n+\tpublic boolean hasPermission(@NotNull String name)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean hasPermission(Permission perm)\n+\tpublic boolean hasPermission(@NotNull Permission perm)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic PermissionAttachment addAttachment(Plugin plugin, String name, boolean value)\n+\tpublic @NotNull PermissionAttachment addAttachment(@NotNull Plugin plugin, @NotNull String name, boolean value)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic PermissionAttachment addAttachment(Plugin plugin)\n+\tpublic @NotNull PermissionAttachment addAttachment(@NotNull Plugin plugin)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic PermissionAttachment addAttachment(Plugin plugin, String name, boolean value, int ticks)\n+\tpublic PermissionAttachment addAttachment(@NotNull Plugin plugin, @NotNull String name, boolean value, int ticks)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic PermissionAttachment addAttachment(Plugin plugin, int ticks)\n+\tpublic PermissionAttachment addAttachment(@NotNull Plugin plugin, int ticks)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void removeAttachment(PermissionAttachment attachment)\n+\tpublic void removeAttachment(@NotNull PermissionAttachment attachment)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -123,7 +125,7 @@ public void recalculatePermissions()\n \t}\n \n \t@Override\n-\tpublic Set<PermissionAttachmentInfo> getEffectivePermissions()\n+\tpublic @NotNull Set<PermissionAttachmentInfo> getEffectivePermissions()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -144,14 +146,14 @@ public void setOp(boolean value)\n \t}\n \n \t@Override\n-\tpublic Server getServer()\n+\tpublic @NotNull Server getServer()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic String getName()\n+\tpublic @NotNull String getName()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -165,47 +167,47 @@ public boolean isConversing()\n \t}\n \n \t@Override\n-\tpublic void acceptConversationInput(String input)\n+\tpublic void acceptConversationInput(@NotNull String input)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean beginConversation(Conversation conversation)\n+\tpublic boolean beginConversation(@NotNull Conversation conversation)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void abandonConversation(Conversation conversation)\n+\tpublic void abandonConversation(@NotNull Conversation conversation)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void abandonConversation(Conversation conversation, ConversationAbandonedEvent details)\n+\tpublic void abandonConversation(@NotNull Conversation conversation, @NotNull ConversationAbandonedEvent details)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void sendRawMessage(String message)\n+\tpublic void sendRawMessage(@NotNull String message)\n \t{\n \t\tsendRawMessage(null, message);\n \t}\n \n \t@Override\n-\tpublic void sendRawMessage(UUID sender, String message)\n+\tpublic void sendRawMessage(UUID sender, @NotNull String message)\n \t{\n \t\tmessages.add(message);\n \t}\n \n \t@Override\n-\tpublic Spigot spigot()\n+\tpublic @NotNull Spigot spigot()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();"
  },
  {
    "sha": "cc3b75aae92898e51d1b91ff9593e41d06756d88",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/enchantments/EnchantmentMock.java",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/enchantments/EnchantmentMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/enchantments/EnchantmentMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/enchantments/EnchantmentMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -8,17 +8,14 @@\n \n public class EnchantmentMock extends Enchantment\n {\n-\tprivate String name;\n+\tprivate final String name;\n \tprivate int maxLevel;\n \tprivate int startLevel;\n \tprivate EnchantmentTarget itemTarget;\n \tprivate boolean isTreasure;\n \tprivate boolean isCursed;\n \n-\tpublic EnchantmentMock(\n-\t    @NotNull NamespacedKey key,\n-\t    String name\n-\t)\n+\tpublic EnchantmentMock(@NotNull NamespacedKey key, String name)\n \t{\n \t\tsuper(key);\n \t\tthis.name = name;"
  },
  {
    "sha": "14bff5a4da6b7d4b2103cdbf6ae481efb2927915",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/entity/ArmorStandMock.java",
    "status": "modified",
    "additions": 34,
    "deletions": 31,
    "changes": 65,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/entity/ArmorStandMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/entity/ArmorStandMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/entity/ArmorStandMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -15,9 +15,11 @@\n import be.seeseemelk.mockbukkit.ServerMock;\n import be.seeseemelk.mockbukkit.UnimplementedOperationException;\n \n+import org.jetbrains.annotations.NotNull;\n+\n /**\n  * This is the mock of an {@link ArmorStand}.\n- * \n+ *\n  * @author TheBusyBiscuit\n  *\n  */\n@@ -38,22 +40,23 @@ public ArmorStandMock(ServerMock server, UUID uuid)\n \t}\n \n \t@Override\n-\tpublic EntityType getType()\n+\tpublic @NotNull EntityType getType()\n \t{\n \t\treturn EntityType.ARMOR_STAND;\n \t}\n \n \t@Override\n+\t@NotNull\n \tpublic EntityEquipment getEquipment()\n \t{\n \t\treturn equipment;\n \t}\n \n \t@Override\n \t@Deprecated\n-\tpublic ItemStack getBoots()\n+\tpublic @NotNull ItemStack getBoots()\n \t{\n-\t\treturn getEquipment().getBoots();\n+\t\treturn getEquipment().getItem(EquipmentSlot.FEET);\n \t}\n \n \t@Override\n@@ -65,9 +68,9 @@ public void setBoots(ItemStack item)\n \n \t@Override\n \t@Deprecated\n-\tpublic ItemStack getLeggings()\n+\tpublic @NotNull ItemStack getLeggings()\n \t{\n-\t\treturn getEquipment().getLeggings();\n+\t\treturn getEquipment().getItem(EquipmentSlot.LEGS);\n \t}\n \n \t@Override\n@@ -79,9 +82,9 @@ public void setLeggings(ItemStack item)\n \n \t@Override\n \t@Deprecated\n-\tpublic ItemStack getChestplate()\n+\tpublic @NotNull ItemStack getChestplate()\n \t{\n-\t\treturn getEquipment().getChestplate();\n+\t\treturn getEquipment().getItem(EquipmentSlot.CHEST);\n \t}\n \n \t@Override\n@@ -93,9 +96,9 @@ public void setChestplate(ItemStack item)\n \n \t@Override\n \t@Deprecated\n-\tpublic ItemStack getHelmet()\n+\tpublic @NotNull ItemStack getHelmet()\n \t{\n-\t\treturn getEquipment().getHelmet();\n+\t\treturn getEquipment().getItem(EquipmentSlot.HEAD);\n \t}\n \n \t@Override\n@@ -107,7 +110,7 @@ public void setHelmet(ItemStack item)\n \n \t@Override\n \t@Deprecated\n-\tpublic ItemStack getItemInHand()\n+\tpublic @NotNull ItemStack getItemInHand()\n \t{\n \t\treturn getEquipment().getItemInMainHand();\n \t}\n@@ -120,84 +123,84 @@ public void setItemInHand(ItemStack item)\n \t}\n \n \t@Override\n-\tpublic EulerAngle getBodyPose()\n+\tpublic @NotNull EulerAngle getBodyPose()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setBodyPose(EulerAngle pose)\n+\tpublic void setBodyPose(@NotNull EulerAngle pose)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic EulerAngle getLeftArmPose()\n+\tpublic @NotNull EulerAngle getLeftArmPose()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setLeftArmPose(EulerAngle pose)\n+\tpublic void setLeftArmPose(@NotNull EulerAngle pose)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic EulerAngle getRightArmPose()\n+\tpublic @NotNull EulerAngle getRightArmPose()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setRightArmPose(EulerAngle pose)\n+\tpublic void setRightArmPose(@NotNull EulerAngle pose)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic EulerAngle getLeftLegPose()\n+\tpublic @NotNull EulerAngle getLeftLegPose()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setLeftLegPose(EulerAngle pose)\n+\tpublic void setLeftLegPose(@NotNull EulerAngle pose)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic EulerAngle getRightLegPose()\n+\tpublic @NotNull EulerAngle getRightLegPose()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setRightLegPose(EulerAngle pose)\n+\tpublic void setRightLegPose(@NotNull EulerAngle pose)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic EulerAngle getHeadPose()\n+\tpublic @NotNull EulerAngle getHeadPose()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void setHeadPose(EulerAngle pose)\n+\tpublic void setHeadPose(@NotNull EulerAngle pose)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -264,21 +267,21 @@ public void setMarker(boolean marker)\n \t}\n \n \t@Override\n-\tpublic void addEquipmentLock(EquipmentSlot slot, LockType lockType)\n+\tpublic void addEquipmentLock(@NotNull EquipmentSlot slot, @NotNull LockType lockType)\n \t{\n \t\t// TODO Equipment Locks use byte operations internally, they might be hard to implement\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void removeEquipmentLock(EquipmentSlot slot, LockType lockType)\n+\tpublic void removeEquipmentLock(@NotNull EquipmentSlot slot, @NotNull LockType lockType)\n \t{\n \t\t// TODO Equipment Locks use byte operations internally, they might be hard to implement\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean hasEquipmentLock(EquipmentSlot slot, LockType lockType)\n+\tpublic boolean hasEquipmentLock(@NotNull EquipmentSlot slot, @NotNull LockType lockType)\n \t{\n \t\t// TODO Equipment Locks use byte operations internally, they might be hard to implement\n \t\tthrow new UnimplementedOperationException();\n@@ -292,7 +295,7 @@ public boolean isSleeping()\n \t}\n \n \t@Override\n-\tpublic void attack(Entity target)\n+\tpublic void attack(@NotNull Entity target)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -313,21 +316,21 @@ public void swingOffHand()\n \t}\n \n \t@Override\n-\tpublic Set<UUID> getCollidableExemptions()\n+\tpublic @NotNull Set<UUID> getCollidableExemptions()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> T getMemory(MemoryKey<T> memoryKey)\n+\tpublic <T> T getMemory(@NotNull MemoryKey<T> memoryKey)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic <T> void setMemory(MemoryKey<T> memoryKey, T memoryValue)\n+\tpublic <T> void setMemory(@NotNull MemoryKey<T> memoryKey, T memoryValue)\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -348,7 +351,7 @@ public void setAbsorptionAmount(double amount)\n \t}\n \n \t@Override\n-\tpublic Spigot spigot()\n+\tpublic @NotNull Spigot spigot()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();"
  },
  {
    "sha": "29f31faca827f544fe4de42d01d292913a26c039",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/entity/EntityEquipmentMock.java",
    "status": "modified",
    "additions": 26,
    "deletions": 13,
    "changes": 39,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/entity/EntityEquipmentMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/entity/EntityEquipmentMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/entity/EntityEquipmentMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -1,5 +1,6 @@\n package be.seeseemelk.mockbukkit.entity;\n \n+import org.bukkit.Material;\n import org.bukkit.entity.Entity;\n import org.bukkit.entity.LivingEntity;\n import org.bukkit.inventory.EntityEquipment;\n@@ -13,7 +14,7 @@\n /**\n  * This mocks the {@link EntityEquipment} of a {@link LivingEntityMock}. Note that not every {@link LivingEntity} has\n  * {@link EntityEquipment}, so only implement this where necessary.\n- * \n+ *\n  * @author TheBusyBiscuit\n  *\n  */\n@@ -71,30 +72,38 @@ public void setItem(@NotNull EquipmentSlot slot, @Nullable ItemStack item, boole\n \t}\n \n \t@Override\n-\tpublic ItemStack getItem(@NotNull EquipmentSlot slot)\n+\tpublic @NotNull ItemStack getItem(@NotNull EquipmentSlot slot)\n \t{\n+\t\tItemStack itemStack;\n \t\tswitch (slot)\n \t\t{\n \t\tcase CHEST:\n-\t\t\treturn getChestplate();\n+\t\t\titemStack = getChestplate();\n+\t\t\tbreak;\n \t\tcase FEET:\n-\t\t\treturn getBoots();\n+\t\t\titemStack = getBoots();\n+\t\t\tbreak;\n \t\tcase HAND:\n-\t\t\treturn getItemInMainHand();\n+\t\t\titemStack = getItemInMainHand();\n+\t\t\tbreak;\n \t\tcase HEAD:\n-\t\t\treturn getHelmet();\n+\t\t\titemStack = getHelmet();\n+\t\t\tbreak;\n \t\tcase LEGS:\n-\t\t\treturn getLeggings();\n+\t\t\titemStack = getLeggings();\n+\t\t\tbreak;\n \t\tcase OFF_HAND:\n-\t\t\treturn getItemInOffHand();\n+\t\t\titemStack = getItemInOffHand();\n+\t\t\tbreak;\n \t\tdefault:\n \t\t\t// This should never be reached unless Mojang adds new slots\n \t\t\tthrow new UnimplementedOperationException(\"EquipmentSlot '\" + slot + \"' has no implementation!\");\n \t\t}\n+\t\treturn itemStack == null ? new ItemStack(Material.AIR) : itemStack;\n \t}\n \n \t@Override\n-\tpublic ItemStack getItemInMainHand()\n+\tpublic @NotNull ItemStack getItemInMainHand()\n \t{\n \t\treturn itemInMainHand;\n \t}\n@@ -113,7 +122,7 @@ public void setItemInMainHand(ItemStack item, boolean silent)\n \t}\n \n \t@Override\n-\tpublic ItemStack getItemInOffHand()\n+\tpublic @NotNull ItemStack getItemInOffHand()\n \t{\n \t\treturn itemInOffHand;\n \t}\n@@ -133,7 +142,7 @@ public void setItemInOffHand(ItemStack item, boolean silent)\n \n \t@Override\n \t@Deprecated\n-\tpublic ItemStack getItemInHand()\n+\tpublic @NotNull ItemStack getItemInHand()\n \t{\n \t\treturn getItemInMainHand();\n \t}\n@@ -231,8 +240,12 @@ public void setBoots(ItemStack boots, boolean silent)\n \t@Override\n \tpublic void setArmorContents(ItemStack[] items)\n \t{\n-\t\t// TODO Auto-generated method stub\n-\t\tthrow new UnimplementedOperationException();\n+\t\tif (items.length == 4) {\n+\t\t\tsetHelmet(items[0]);\n+\t\t\tsetChestplate(items[1]);\n+\t\t\tsetLeggings(items[2]);\n+\t\t\tsetBoots(items[3]);\n+\t\t}\n \t}\n \n \t@Override"
  },
  {
    "sha": "c74ad7487c9ac674cf93ed2d5050bff07ab78053",
    "filename": "src/main/java/be/seeseemelk/mockbukkit/entity/EntityMock.java",
    "status": "modified",
    "additions": 54,
    "deletions": 50,
    "changes": 104,
    "blob_url": "https://github.com/seeseemelk/MockBukkit/blob/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/entity/EntityMock.java",
    "raw_url": "https://github.com/seeseemelk/MockBukkit/raw/4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52/src/main/java/be/seeseemelk/mockbukkit/entity/EntityMock.java",
    "contents_url": "https://api.github.com/repos/seeseemelk/MockBukkit/contents/src/main/java/be/seeseemelk/mockbukkit/entity/EntityMock.java?ref=4d92186a3aa9d49af2ffdb83a1ce9a4343f68a52",
    "patch": "@@ -32,6 +32,8 @@\n import org.bukkit.plugin.Plugin;\n import org.bukkit.util.BoundingBox;\n import org.bukkit.util.Vector;\n+\n+import org.apache.commons.lang.Validate;\n import org.jetbrains.annotations.NotNull;\n \n import be.seeseemelk.mockbukkit.ServerMock;\n@@ -47,16 +49,16 @@\n \tprivate Location location;\n \tprivate boolean teleported;\n \tprivate TeleportCause teleportCause;\n-\tprivate MetadataTable metadataTable = new MetadataTable();\n-\tprivate PersistentDataContainer persistentDataContainer = new PersistentDataContainerMock();\n+\tprivate final MetadataTable metadataTable = new MetadataTable();\n+\tprivate final PersistentDataContainer persistentDataContainer = new PersistentDataContainerMock();\n \tprivate boolean operator = false;\n \tprivate String name = \"entity\";\n \tprivate final Queue<String> messages = new LinkedTransferQueue<>();\n \tprivate final Set<PermissionAttachment> permissionAttachments = new HashSet<>();\n-\tprivate Vector velocity = new Vector(0, 0, 0);\n+\tprivate final Vector velocity = new Vector(0, 0, 0);\n \tprivate float fallDistance;\n \tprivate int fireTicks = -20;\n-\tprivate int maxFireTicks = 20;\n+\tprivate final int maxFireTicks = 20;\n \n \tpublic EntityMock(@NotNull ServerMock server, @NotNull UUID uuid)\n \t{\n@@ -78,7 +80,7 @@ public final int hashCode()\n \t@Override\n \tpublic final boolean equals(Object obj)\n \t{\n-\t\tif (obj instanceof EntityMock) \n+\t\tif (obj instanceof EntityMock)\n \t\t{\n \t\t\treturn uuid.equals(((EntityMock) obj).getUniqueId());\n \t\t}\n@@ -119,7 +121,6 @@ public void assertTeleported(Location expectedLocation, double maximumDistance)\n \tpublic void assertNotTeleported()\n \t{\n \t\tassertFalse(\"Player was teleported\", teleported);\n-\t\tteleported = false;\n \t}\n \n \t/**\n@@ -151,20 +152,23 @@ public TeleportCause getTeleportCause()\n \t}\n \n \t@Override\n-\tpublic UUID getUniqueId()\n+\tpublic @NotNull UUID getUniqueId()\n \t{\n \t\treturn uuid;\n \t}\n \n \t@Override\n-\tpublic Location getLocation()\n+\tpublic @NotNull Location getLocation()\n \t{\n \t\treturn location.clone();\n \t}\n \n \t@Override\n \tpublic Location getLocation(Location loc)\n \t{\n+\t\t// See doc. If given location is null, do nothing and returns null\n+\t\tif (loc == null)\n+\t\t\treturn null;\n \t\tloc.setWorld(location.getWorld());\n \t\tloc.setDirection(location.getDirection());\n \t\tloc.setX(location.getX());\n@@ -184,31 +188,31 @@ public void setLocation(Location location)\n \t}\n \n \t@Override\n-\tpublic World getWorld()\n+\tpublic @NotNull World getWorld()\n \t{\n \t\treturn location.getWorld();\n \t}\n \n \t@Override\n-\tpublic void setMetadata(String metadataKey, MetadataValue newMetadataValue)\n+\tpublic void setMetadata(@NotNull String metadataKey, @NotNull MetadataValue newMetadataValue)\n \t{\n \t\tmetadataTable.setMetadata(metadataKey, newMetadataValue);\n \t}\n \n \t@Override\n-\tpublic List<MetadataValue> getMetadata(String metadataKey)\n+\tpublic @NotNull List<MetadataValue> getMetadata(@NotNull String metadataKey)\n \t{\n \t\treturn metadataTable.getMetadata(metadataKey);\n \t}\n \n \t@Override\n-\tpublic boolean hasMetadata(String metadataKey)\n+\tpublic boolean hasMetadata(@NotNull String metadataKey)\n \t{\n \t\treturn metadataTable.hasMetadata(metadataKey);\n \t}\n \n \t@Override\n-\tpublic void removeMetadata(String metadataKey, Plugin owningPlugin)\n+\tpublic void removeMetadata(@NotNull String metadataKey, @NotNull Plugin owningPlugin)\n \t{\n \t\tmetadataTable.removeMetadata(metadataKey, owningPlugin);\n \t}\n@@ -220,13 +224,13 @@ public void removeMetadata(String metadataKey, Plugin owningPlugin)\n \t}\n \n \t@Override\n-\tpublic boolean teleport(Location location)\n+\tpublic boolean teleport(@NotNull Location location)\n \t{\n \t\treturn teleport(location, TeleportCause.PLUGIN);\n \t}\n \n \t@Override\n-\tpublic boolean teleport(Location location, TeleportCause cause)\n+\tpublic boolean teleport(@NotNull Location location, @NotNull TeleportCause cause)\n \t{\n \t\tthis.location = location;\n \t\tteleported = true;\n@@ -235,13 +239,13 @@ public boolean teleport(Location location, TeleportCause cause)\n \t}\n \n \t@Override\n-\tpublic boolean teleport(Entity destination)\n+\tpublic boolean teleport(@NotNull Entity destination)\n \t{\n \t\treturn teleport(destination, TeleportCause.PLUGIN);\n \t}\n \n \t@Override\n-\tpublic boolean teleport(Entity destination, TeleportCause cause)\n+\tpublic boolean teleport(Entity destination, @NotNull TeleportCause cause)\n \t{\n \t\treturn teleport(destination.getLocation(), cause);\n \t}\n@@ -259,7 +263,7 @@ public void setOp(boolean isOperator)\n \t}\n \n \t@Override\n-\tpublic String getName()\n+\tpublic @NotNull String getName()\n \t{\n \t\treturn name;\n \t}\n@@ -275,7 +279,7 @@ public void setName(String name)\n \t}\n \n \t@Override\n-\tpublic void sendMessage(String message)\n+\tpublic void sendMessage(@NotNull String message)\n \t{\n \t\tsendMessage(null, message);\n \t}\n@@ -287,7 +291,7 @@ public void sendMessage(String[] messages)\n \t}\n \n \t@Override\n-\tpublic void sendMessage(UUID sender, String message)\n+\tpublic void sendMessage(UUID sender, @NotNull String message)\n \t{\n \t\tmessages.add(message);\n \t}\n@@ -308,13 +312,13 @@ public String nextMessage()\n \t}\n \n \t@Override\n-\tpublic boolean isPermissionSet(String name)\n+\tpublic boolean isPermissionSet(@NotNull String name)\n \t{\n \t\tfor (PermissionAttachment attachment : permissionAttachments)\n \t\t{\n \t\t\tMap<String, Boolean> permissions = attachment.getPermissions();\n \n-\t\t\tif (permissions.containsKey(name) && permissions.get(name).booleanValue())\n+\t\t\tif (permissions.containsKey(name) && permissions.get(name))\n \t\t\t{\n \t\t\t\treturn true;\n \t\t\t}\n@@ -329,7 +333,7 @@ public boolean isPermissionSet(Permission perm)\n \t}\n \n \t@Override\n-\tpublic boolean hasPermission(String name)\n+\tpublic boolean hasPermission(@NotNull String name)\n \t{\n \t\tif (isPermissionSet(name))\n \t\t{\n@@ -341,48 +345,45 @@ public boolean hasPermission(String name)\n \t}\n \n \t@Override\n-\tpublic boolean hasPermission(Permission perm)\n+\tpublic boolean hasPermission(@NotNull Permission perm)\n \t{\n \t\treturn isPermissionSet(perm) || perm.getDefault().getValue(isOp());\n \t}\n \n \t@Override\n-\tpublic PermissionAttachment addAttachment(Plugin plugin, String name, boolean value)\n+\tpublic @NotNull PermissionAttachment addAttachment(@NotNull Plugin plugin, @NotNull String name, boolean value)\n \t{\n \t\tPermissionAttachment attachment = addAttachment(plugin);\n \t\tattachment.setPermission(name, value);\n \t\treturn attachment;\n \t}\n \n \t@Override\n-\tpublic PermissionAttachment addAttachment(Plugin plugin)\n+\tpublic @NotNull PermissionAttachment addAttachment(@NotNull Plugin plugin)\n \t{\n \t\tPermissionAttachment attachment = new PermissionAttachment(plugin, this);\n \t\tpermissionAttachments.add(attachment);\n \t\treturn attachment;\n \t}\n \n \t@Override\n-\tpublic PermissionAttachment addAttachment(Plugin plugin, String name, boolean value, int ticks)\n+\tpublic PermissionAttachment addAttachment(@NotNull Plugin plugin, @NotNull String name, boolean value, int ticks)\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic PermissionAttachment addAttachment(Plugin plugin, int ticks)\n+\tpublic PermissionAttachment addAttachment(@NotNull Plugin plugin, int ticks)\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic void removeAttachment(PermissionAttachment attachment)\n+\tpublic void removeAttachment(@NotNull PermissionAttachment attachment)\n \t{\n-\t\tif (attachment == null)\n-\t\t{\n-\t\t\tthrow new IllegalArgumentException(\"Attachment cannot be null\");\n-\t\t}\n+\t\tValidate.notNull(attachment);\n \n \t\tif (permissionAttachments.contains(attachment))\n \t\t{\n@@ -409,7 +410,7 @@ public void recalculatePermissions()\n \t}\n \n \t@Override\n-\tpublic Set<PermissionAttachmentInfo> getEffectivePermissions()\n+\tpublic @NotNull Set<PermissionAttachmentInfo> getEffectivePermissions()\n \t{\n \t\tHashSet<PermissionAttachmentInfo> permissionAttachmentInfos = new HashSet<>();\n \n@@ -441,11 +442,14 @@ public void setCustomName(String name)\n \t@Override\n \tpublic void setVelocity(@NotNull Vector velocity)\n \t{\n-\t\tthis.velocity = velocity;\n+\t\t// Avoid changing the velocity\n+\t\tthis.velocity.setX(velocity.getX());\n+\t\tthis.velocity.setY(velocity.getY());\n+\t\tthis.velocity.setZ(velocity.getZ());\n \t}\n \n \t@Override\n-\tpublic Vector getVelocity()\n+\tpublic @NotNull Vector getVelocity()\n \t{\n \t\treturn velocity;\n \t}\n@@ -472,7 +476,7 @@ public boolean isOnGround()\n \t}\n \n \t@Override\n-\tpublic List<Entity> getNearbyEntities(double x, double y, double z)\n+\tpublic @NotNull List<Entity> getNearbyEntities(double x, double y, double z)\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n@@ -525,7 +529,7 @@ public boolean isValid()\n \t}\n \n \t@Override\n-\tpublic ServerMock getServer()\n+\tpublic @NotNull ServerMock getServer()\n \t{\n \t\treturn server;\n \t}\n@@ -538,28 +542,28 @@ public Entity getPassenger()\n \t}\n \n \t@Override\n-\tpublic boolean setPassenger(Entity passenger)\n+\tpublic boolean setPassenger(@NotNull Entity passenger)\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic List<Entity> getPassengers()\n+\tpublic @NotNull List<Entity> getPassengers()\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean addPassenger(Entity passenger)\n+\tpublic boolean addPassenger(@NotNull Entity passenger)\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean removePassenger(Entity passenger)\n+\tpublic boolean removePassenger(@NotNull Entity passenger)\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n@@ -623,7 +627,7 @@ public void setTicksLived(int value)\n \t}\n \n \t@Override\n-\tpublic void playEffect(EntityEffect type)\n+\tpublic void playEffect(@NotNull EntityEffect type)\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n@@ -742,28 +746,28 @@ public void setPortalCooldown(int cooldown)\n \t}\n \n \t@Override\n-\tpublic Set<String> getScoreboardTags()\n+\tpublic @NotNull Set<String> getScoreboardTags()\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean addScoreboardTag(String tag)\n+\tpublic boolean addScoreboardTag(@NotNull String tag)\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic boolean removeScoreboardTag(String tag)\n+\tpublic boolean removeScoreboardTag(@NotNull String tag)\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic PistonMoveReaction getPistonMoveReaction()\n+\tpublic @NotNull PistonMoveReaction getPistonMoveReaction()\n \t{\n \t\t// TODO Auto-generated constructor stub\n \t\tthrow new UnimplementedOperationException();\n@@ -777,7 +781,7 @@ public void setRotation(float yaw, float pitch)\n \t}\n \n \t@Override\n-\tpublic BoundingBox getBoundingBox()\n+\tpublic @NotNull BoundingBox getBoundingBox()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n@@ -798,14 +802,14 @@ public void setPersistent(boolean persistent)\n \t}\n \n \t@Override\n-\tpublic BlockFace getFacing()\n+\tpublic @NotNull BlockFace getFacing()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();\n \t}\n \n \t@Override\n-\tpublic Pose getPose()\n+\tpublic @NotNull Pose getPose()\n \t{\n \t\t// TODO Auto-generated method stub\n \t\tthrow new UnimplementedOperationException();"
  }
]
