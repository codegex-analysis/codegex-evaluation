[
  {
    "sha": "1d88b76f20a753f79f8f76e7791dda6f2e66731d",
    "filename": "STUDENT_GUIDE.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/STUDENT_GUIDE.md",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/STUDENT_GUIDE.md",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/STUDENT_GUIDE.md?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -75,7 +75,7 @@ class HallChecker\n **Нет**\n \n ```java\n-package ru.sbt.mipt.oop.SmartHome;\n+package SmartHome;\n ```\n \n ### Не используйте статические методы в бизнес логике"
  },
  {
    "sha": "164e10963fc2103ecc7301552dd2614f415d6152",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 13,
    "deletions": 2,
    "changes": 15,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/pom.xml",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/pom.xml",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/pom.xml?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -25,11 +25,22 @@\n     </build>\n \n     <dependencies>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter</artifactId>\n+            <version>5.7.0</version>\n+            <scope>compile</scope>\n+        </dependency>\n         <dependency>\n             <groupId>junit</groupId>\n             <artifactId>junit</artifactId>\n-            <version>4.8.2</version>\n-            <scope>test</scope>\n+            <version>4.12</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-context</artifactId>\n+            <version>5.3.4</version>\n         </dependency>\n         <dependency>\n             <groupId>com.google.code.gson</groupId>"
  },
  {
    "sha": "cd26ae11d14cd1b259f382b6fda0f01c74c26747",
    "filename": "smart-home-1.js",
    "status": "modified",
    "additions": 81,
    "deletions": 81,
    "changes": 162,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/smart-home-1.js",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/smart-home-1.js",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/smart-home-1.js?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -1,84 +1,84 @@\n {\n   \"rooms\": [\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": false,\n-          \"id\": \"1\"\n-        },\n-        {\n-          \"isOn\": true,\n-          \"id\": \"2\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"1\",\n-          \"isOpen\": false\n-        }\n-      ],\n-      \"name\": \"kitchen\"\n-    },\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": true,\n-          \"id\": \"3\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"2\",\n-          \"isOpen\": false\n-        }\n-      ],\n-      \"name\": \"bathroom\"\n-    },\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": false,\n-          \"id\": \"4\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"5\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"6\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"3\",\n-          \"isOpen\": true\n-        }\n-      ],\n-      \"name\": \"bedroom\"\n-    },\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": false,\n-          \"id\": \"7\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"8\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"9\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"4\",\n-          \"isOpen\": false\n-        }\n-      ],\n-      \"name\": \"hall\"\n-    }\n-  ]\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"1\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_ON\",\n+        \"id\": \"2\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"1\",\n+        \"isOpen\": \"DOOR_CLOSED\"\n+      }\n+    ],\n+    \"name\": \"kitchen\"\n+  },\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_ON\",\n+        \"id\": \"3\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"2\",\n+        \"isOpen\": \"DOOR_CLOSED\"\n+      }\n+    ],\n+    \"name\": \"bathroom\"\n+  },\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"4\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"5\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"6\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"3\",\n+        \"isOpen\": \"DOOR_OPEN\"\n+      }\n+    ],\n+    \"name\": \"bedroom\"\n+  },\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"7\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"8\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"9\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"4\",\n+        \"isOpen\": \"DOOR_CLOSED\"\n+      }\n+    ],\n+    \"name\": \"hall\"\n+  }\n+]\n }\n\\ No newline at end of file"
  },
  {
    "sha": "a26f0467a62f0a5343d3cb19700e77aaadec39b0",
    "filename": "src/main/java/ru/sbt/mipt/oop/API/CCSensorEvent.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/API/CCSensorEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/API/CCSensorEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/API/CCSensorEvent.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,29 @@\n+package ru.sbt.mipt.oop.API;\n+\n+/**\n+ * Available event types in library v3.7.1:\n+ *    \"LightIsOn\", \"LightIsOff\", \"DoorIsOpen\", \"DoorIsClosed\", \"DoorIsLocked\", \"DoorIsUnlocked\"\n+ */\n+public class CCSensorEvent {\n+    private final String eventType;\n+    private final String objectId;\n+\n+    /**\n+     * Default constructor\n+     * @param eventType - defines type of event.\n+     * @param objectId - id of the object which fired the event (door/lightswitch)\n+     */\n+    public CCSensorEvent(String eventType, String objectId) {\n+        this.eventType = eventType;\n+        this.objectId = objectId;\n+    }\n+\n+    public String getEventType() {\n+        return eventType;\n+    }\n+\n+    public String getObjectId() {\n+        return objectId;\n+    }\n+\n+}"
  },
  {
    "sha": "b0051003ee214967a7f73037fc588bae3fc3218e",
    "filename": "src/main/java/ru/sbt/mipt/oop/API/EventHandler.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/API/EventHandler.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/API/EventHandler.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/API/EventHandler.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop.API;\n+\n+public interface EventHandler {\n+\n+    void handleEvent(CCSensorEvent event);\n+\n+}"
  },
  {
    "sha": "42e259ca9d79f89d0af03bb442be49ea39fedb66",
    "filename": "src/main/java/ru/sbt/mipt/oop/API/SensorEventsManager.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/API/SensorEventsManager.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/API/SensorEventsManager.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/API/SensorEventsManager.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,32 @@\n+package ru.sbt.mipt.oop.API;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+\n+public class SensorEventsManager {\n+    private final String[] eventTypes = new String[] { \"LightIsOn\", \"LightIsOff\", \"DoorIsOpen\", \"DoorIsClosed\", \"DoorIsLocked\", \"DoorIsUnlocked\" };\n+\n+    private Collection<EventHandler> handlers = new ArrayList<>();\n+\n+    public void registerEventHandler(EventHandler handler) {\n+        this.handlers.add(handler);\n+    }\n+\n+    public void start() {\n+        CCSensorEvent event = getNextSensorEvent();\n+        while (event != null) {\n+            for (EventHandler handler : handlers) {\n+                handler.handleEvent(event);\n+            }\n+            event = getNextSensorEvent();\n+        }\n+    }\n+\n+    private CCSensorEvent getNextSensorEvent() {\n+        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n+        if (Math.random() < 0.05) return null; // null means end of event stream\n+        String sensorEventType = eventTypes[(int) (6 * Math.random())];\n+        String objectId = \"\" + ((int) (10 * Math.random()));\n+        return new CCSensorEvent(sensorEventType, objectId);\n+    }\n+}"
  },
  {
    "sha": "ca0730a0d20c7b193a07e19e888be4d4d37c5aa3",
    "filename": "src/main/java/ru/sbt/mipt/oop/Action.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Action.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Action.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Action.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface Action {\n+    void execute(Object obj);\n+}"
  },
  {
    "sha": "30e892b747f4dc0d0fb531418b2526e9cf9cedcd",
    "filename": "src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Actionable.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface Actionable {\n+    void execute(Action action);\n+}"
  },
  {
    "sha": "fd544838d09dafe96acb86a36de1fec03f3c91f8",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/Alarm.java",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/Alarm.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/Alarm.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/Alarm.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,86 @@\n+package ru.sbt.mipt.oop.Alarm;\n+\n+import ru.sbt.mipt.oop.Action;\n+import ru.sbt.mipt.oop.Actionable;\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.SmartHome;\n+import ru.sbt.mipt.oop.States;\n+\n+public class Alarm implements Actionable {\n+    private AlarmStateInterface state;\n+    private SmartHome smartHome;\n+    private final int timeSleep;\n+    private final String id;\n+\n+    public Alarm(SmartHome smartHome) {\n+        this.id = \"id\";\n+        this.timeSleep = 5;\n+        this.state = new AlarmDeactivated();\n+        this.smartHome = smartHome;\n+    }\n+\n+    public Alarm(SmartHome smartHome, int timeSleep, String id) {\n+        this.timeSleep = timeSleep;\n+        this.id = id;\n+        this.state = new AlarmDeactivated();\n+        this.smartHome = smartHome;\n+    }\n+\n+    public void activate(String code) {\n+        state = state.activate(code);\n+    }\n+\n+    public void deactivate(String code) {\n+        state = state.deactivate(code);\n+        if (state instanceof AlarmActiveState) {\n+            startAlarm();\n+        }\n+    }\n+\n+    public void takeHomeEvent(Event event) {\n+        state.takeHomeEvent(event);\n+    }\n+\n+    private void startAlarm() {\n+        startSiren();\n+        while (true) {\n+            try {\n+                Thread.sleep(timeSleep * 1000);\n+            } catch (InterruptedException e) {\n+                System.out.println(e.toString());\n+            }\n+            smartHome.getRooms().forEach(room -> {\n+                room.getLights().forEach(light -> {\n+                    light.setState((Math.random() > 0.5) ? States.LIGHT_OFF : States.LIGHT_ON);\n+                    System.out.println(light.getString());\n+                });\n+            });\n+            sendMessage();\n+        }\n+    }\n+\n+    public AlarmStateInterface getState() {\n+        return state;\n+    }\n+\n+    public SmartHome getSmartHome() {\n+        return smartHome;\n+    }\n+\n+    private void sendMessage() {\n+        System.out.println(\"Sending message on number \" + smartHome.getPhoneNumber());\n+    }\n+\n+    private void startSiren() {\n+        System.out.println(\"!!!!!!!Siren started!!!!!!!\");\n+    }\n+\n+    public String getString() {\n+        return \"Alarm\" + (state.getString());\n+    }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.execute(this);\n+    }\n+}"
  },
  {
    "sha": "692bb5485ceb2d839031d522d8caff04243cd665",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/AlarmActivated.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmActivated.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmActivated.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmActivated.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,42 @@\n+package ru.sbt.mipt.oop.Alarm;\n+\n+import ru.sbt.mipt.oop.Events.AlarmEvent;\n+import ru.sbt.mipt.oop.Events.Event;\n+\n+public class AlarmActivated implements AlarmStateInterface {\n+    String code;\n+\n+    public AlarmActivated(String code) {\n+        this.code = code;\n+    }\n+\n+    @Override\n+    public AlarmStateInterface activate(String code) {\n+        System.out.println(\"Try activate activated alarm with code \" + this.code);\n+        return this;\n+    }\n+\n+    @Override\n+    public AlarmStateInterface deactivate(String code) {\n+        System.out.println(\"Deactivate activated alarm with code \" + code + \" right code - \" + this.code);\n+        if (this.code.equals(code)) {\n+            return new AlarmDeactivated();\n+        } else {\n+            return new AlarmActiveState();\n+        }\n+    }\n+\n+    @Override\n+    public AlarmStateInterface takeHomeEvent(Event event) {\n+        if (!(event instanceof AlarmEvent)) {\n+            return new AlarmActiveState();\n+        }\n+        return this;\n+    }\n+\n+    @Override\n+    public String getString() {\n+        return \" was activated.\";\n+    }\n+\n+}"
  },
  {
    "sha": "3ba077830c080d5828a0663c02cf9d7dba4fec5c",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/AlarmActiveState.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmActiveState.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmActiveState.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmActiveState.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,26 @@\n+package ru.sbt.mipt.oop.Alarm;\n+\n+import ru.sbt.mipt.oop.Events.Event;\n+\n+public class AlarmActiveState implements AlarmStateInterface {\n+\n+    @Override\n+    public AlarmStateInterface activate(String code) {\n+        return this;\n+    }\n+\n+    @Override\n+    public AlarmStateInterface deactivate(String code) {\n+        return this;\n+    }\n+\n+    @Override\n+    public AlarmStateInterface takeHomeEvent(Event event) {\n+        return this;\n+    }\n+\n+    @Override\n+    public String getString() {\n+        return \" in active state!!!\";\n+    }\n+}"
  },
  {
    "sha": "92b267c2f78d5af615580c640bd1bc2627aaccca",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/AlarmDeactivated.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmDeactivated.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmDeactivated.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmDeactivated.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,30 @@\n+package ru.sbt.mipt.oop.Alarm;\n+\n+import ru.sbt.mipt.oop.Events.Event;\n+\n+public class AlarmDeactivated implements AlarmStateInterface {\n+    public AlarmDeactivated() {\n+    }\n+\n+    @Override\n+    public AlarmStateInterface activate(String code) {\n+        System.out.println(\"Activate alarm with code \" + code);\n+        return new AlarmActivated(code);\n+    }\n+\n+    @Override\n+    public AlarmStateInterface deactivate(String code) {\n+        System.out.println(\"Try deactivate deactivated alarm\");\n+        return this;\n+    }\n+\n+    @Override\n+    public AlarmStateInterface takeHomeEvent(Event event) {\n+        return this;\n+    }\n+\n+    @Override\n+    public String getString() {\n+        return \" was deactivated.\";\n+    }\n+}"
  },
  {
    "sha": "0c813cae5ece66dd5567c2773f70a7bb5d99ed28",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/AlarmStateInterface.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmStateInterface.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmStateInterface.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmStateInterface.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.sbt.mipt.oop.Alarm;\n+\n+import ru.sbt.mipt.oop.Events.Event;\n+\n+public interface AlarmStateInterface {\n+    AlarmStateInterface activate(String code);\n+\n+    AlarmStateInterface deactivate(String code);\n+\n+    AlarmStateInterface takeHomeEvent(Event event);\n+\n+    String getString();\n+}"
  },
  {
    "sha": "4b2de9e4ad12c827eee96b0dc6347225f4d3026e",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/AlarmTest.java",
    "status": "added",
    "additions": 85,
    "deletions": 0,
    "changes": 85,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmTest.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmTest.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmTest.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,85 @@\n+package ru.sbt.mipt.oop.Alarm;\n+\n+import org.junit.jupiter.api.Test;\n+import ru.sbt.mipt.oop.Room;\n+import ru.sbt.mipt.oop.RoomObjects.Door;\n+import ru.sbt.mipt.oop.RoomObjects.Light;\n+import ru.sbt.mipt.oop.SmartHome;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class AlarmTest {\n+    Light light1 = new Light(\"1\", \"LIGHT_OFF\");\n+    Light light2 = new Light(\"2\", \"LIGHT_ON\");\n+    Door door1 = new Door(\"3\", \"DOOR_OPEN\");\n+    List<Door> doors = Arrays.asList(door1);\n+    List<Light> lights = Arrays.asList(light1, light2);\n+    Room room = new Room(lights, doors, \"hall\");\n+    List<Room> roomList = Arrays.asList(room);\n+    SmartHome smartHome = new SmartHome(roomList);\n+    Alarm alarm = new Alarm(smartHome);\n+\n+\n+    @Test\n+    void AlarmStandardCreationTypeOfAlarm() {\n+        Alarm al = new Alarm(smartHome);\n+        assertTrue(al.getState() instanceof AlarmDeactivated);\n+    }\n+\n+    @Test\n+    void AlarmStandardCreationSmartHome() {\n+        Alarm al = new Alarm(smartHome);\n+        assertEquals(al.getSmartHome(), smartHome);\n+    }\n+\n+    @Test\n+    void DeactivatedAlarmAfterActivateBecomeActivated() {\n+        alarm.activate(\"123\");\n+        assertTrue(alarm.getState() instanceof AlarmActivated);\n+    }\n+\n+    @Test\n+    void ActivatedAlarmAfterActivateDoesnotChange() {\n+        alarm.activate(\"123\");\n+        AlarmStateInterface ala = alarm.getState();\n+        alarm.activate(\"12345\");\n+        assertEquals(ala, alarm.getState());\n+    }\n+\n+    @Test\n+    void ActivatedAlarmAfterRightDeactivateBecomeDeactivatedAlarm() {\n+        Alarm alarm = new Alarm(smartHome);\n+        alarm.activate(\"123\");\n+        alarm.deactivate(\"123\");\n+        assertTrue(alarm.getState() instanceof AlarmDeactivated);\n+    }\n+\n+    @Test\n+    void ActivatedAlarmAfterNotRightDeactivateBecomeActiveStateAlarm() {\n+        Alarm alarm = new Alarm(smartHome);\n+        alarm.activate(\"123\");\n+        alarm.deactivate(\"1236\");\n+        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+    }\n+\n+    @Test\n+    void ActiveStateAlarmDoesnotChangesAfterDeactivateAndActivate() {\n+        Alarm alarm = new Alarm(smartHome);\n+        alarm.activate(\"123\");\n+        alarm.deactivate(\"1236\");\n+        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+        alarm.deactivate(\"123\");\n+        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+        alarm.deactivate(\"1236\");\n+        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+        alarm.activate(\"123\");\n+        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+        alarm.activate(\"2324\");\n+        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "fd0b623977b8f8d838102e89f0ea685e3e7222e2",
    "filename": "src/main/java/ru/sbt/mipt/oop/Application.java",
    "status": "modified",
    "additions": 9,
    "deletions": 68,
    "changes": 77,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Application.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Application.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Application.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -1,80 +1,21 @@\n package ru.sbt.mipt.oop;\n \n-import com.google.gson.Gson;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n+import ru.sbt.mipt.oop.API.SensorEventsManager;\n \n import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-\n-import static ru.sbt.mipt.oop.SensorEventType.*;\n \n public class Application {\n \n     public static void main(String... args) throws IOException {\n-        // считываем состояние дома из файла\n-        Gson gson = new Gson();\n-        String json = new String(Files.readAllBytes(Paths.get(\"smart-home-1.js\")));\n-        SmartHome smartHome = gson.fromJson(json, SmartHome.class);\n-        // начинаем цикл обработки событий\n-        SensorEvent event = getNextSensorEvent();\n-        while (event != null) {\n-            System.out.println(\"Got event: \" + event);\n-            if (event.getType() == LIGHT_ON || event.getType() == LIGHT_OFF) {\n-                // событие от источника света\n-                for (Room room : smartHome.getRooms()) {\n-                    for (Light light : room.getLights()) {\n-                        if (light.getId().equals(event.getObjectId())) {\n-                            if (event.getType() == LIGHT_ON) {\n-                                light.setOn(true);\n-                                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned on.\");\n-                            } else {\n-                                light.setOn(false);\n-                                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            if (event.getType() == DOOR_OPEN || event.getType() == DOOR_CLOSED) {\n-                // событие от двери\n-                for (Room room : smartHome.getRooms()) {\n-                    for (Door door : room.getDoors()) {\n-                        if (door.getId().equals(event.getObjectId())) {\n-                            if (event.getType() == DOOR_OPEN) {\n-                                door.setOpen(true);\n-                                System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was opened.\");\n-                            } else {\n-                                door.setOpen(false);\n-                                System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was closed.\");\n-                                // если мы получили событие о закрытие двери в холле - это значит, что была закрыта входная дверь.\n-                                // в этом случае мы хотим автоматически выключить свет во всем доме (это же умный дом!)\n-                                if (room.getName().equals(\"hall\")) {\n-                                    for (Room homeRoom : smartHome.getRooms()) {\n-                                        for (Light light : homeRoom.getLights()) {\n-                                            light.setOn(false);\n-                                            SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\n-                                            sendCommand(command);\n-                                        }\n-                                    }\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            event = getNextSensorEvent();\n-        }\n+        ApplicationContext context = new AnnotationConfigApplicationContext(HomeConfiguration.class);\n+        SensorEventsManager sensorEventsManager = context.getBean(SensorEventsManager.class);\n+        sensorEventsManager.start();\n+//        StartMyManager(smartHome);\n     }\n \n-    private static void sendCommand(SensorCommand command) {\n-        System.out.println(\"Pretent we're sending command \" + command);\n-    }\n \n-    private static SensorEvent getNextSensorEvent() {\n-        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n-        if (Math.random() < 0.05) return null; // null means end of event stream\n-        SensorEventType sensorEventType = SensorEventType.values()[(int) (4 * Math.random())];\n-        String objectId = \"\" + ((int) (10 * Math.random()));\n-        return new SensorEvent(sensorEventType, objectId);\n-    }\n+\n+\n }"
  },
  {
    "sha": "27a864ef71ea8ba0463865ddb4808ea245b271ba",
    "filename": "src/main/java/ru/sbt/mipt/oop/CommandType.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/CommandType.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/CommandType.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/CommandType.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -1,5 +1,11 @@\n package ru.sbt.mipt.oop;\n \n public enum CommandType {\n-    LIGHT_OFF\n+    LIGHT_OFF {\n+        public boolean getState() {\n+            return false;\n+        }\n+    };\n+\n+    abstract boolean getState();\n }"
  },
  {
    "sha": "beb0cabe38c4d340e54fa312fa368e29fccb7ef8",
    "filename": "src/main/java/ru/sbt/mipt/oop/Door.java",
    "status": "removed",
    "additions": 0,
    "deletions": 19,
    "changes": 19,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662/src/main/java/ru/sbt/mipt/oop/Door.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662/src/main/java/ru/sbt/mipt/oop/Door.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Door.java?ref=49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662",
    "patch": "@@ -1,19 +0,0 @@\n-package ru.sbt.mipt.oop;\n-\n-public class Door {\n-    private final String id;\n-    private boolean isOpen;\n-\n-    public Door(boolean isOpen, String id) {\n-        this.isOpen = isOpen;\n-        this.id = id;\n-    }\n-\n-    public String getId() {\n-        return id;\n-    }\n-\n-    public void setOpen(boolean open) {\n-        isOpen = open;\n-    }\n-}"
  },
  {
    "sha": "db59fc83c3395fc880fbc41f6c73ae7d2033c954",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventGenerator.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventGenerator.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventGenerator.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventGenerator.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.sbt.mipt.oop;\n+\n+import ru.sbt.mipt.oop.Events.*;\n+\n+class EventGenerator implements EventGeneratorInterface {\n+    public Event generateEvent() {\n+        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n+        if (Math.random() < 0.05) return null; // null means end of event stream\n+        String objectId = \"\" + ((int) (10 * Math.random()));\n+        Event[] events = {new DoorEvent(objectId, TypeEvent.DOOR_CLOSE), new DoorEvent(objectId, TypeEvent.DOOR_OPEN),\n+                new LightEvent(objectId, TypeEvent.LIGHT_OFF), new LightEvent(objectId, TypeEvent.LIGHT_ON),\n+                new AlarmEvent(\"alarm\", TypeEvent.ALARM_ACTIVATE, \"1234\"),\n+                new AlarmEvent(\"alarm\", TypeEvent.ALARM_DEACTIVATE, \"12345\"),\n+                new AlarmEvent(\"alarm\", TypeEvent.ALARM_ACTIVATE, \"123\"),\n+                new AlarmEvent(\"alarm\", TypeEvent.ALARM_DEACTIVATE, \"1235\"),};\n+        Event event = events[(int) (6 * Math.random())];\n+\n+        return event;\n+    }\n+}"
  },
  {
    "sha": "e925b1a92c3d45a01955b37984813dda16e160ad",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventGeneratorInterface.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventGeneratorInterface.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventGeneratorInterface.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventGeneratorInterface.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop;\n+\n+import ru.sbt.mipt.oop.Events.Event;\n+\n+public interface EventGeneratorInterface {\n+    Event generateEvent();\n+}"
  },
  {
    "sha": "a79599bfed7ddc79cb731279c8b65b7d6ccd6a28",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/AlarmEventHandler.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/AlarmEventHandler.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/AlarmEventHandler.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/AlarmEventHandler.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,33 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.API.CCSensorEvent;\n+import ru.sbt.mipt.oop.API.EventHandler;\n+import ru.sbt.mipt.oop.Alarm.Alarm;\n+import ru.sbt.mipt.oop.Events.AlarmEvent;\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.SmartHome;\n+import ru.sbt.mipt.oop.States;\n+\n+public class AlarmEventHandler extends BaseEventHandler implements EventHandler {\n+\n+    public AlarmEventHandler(SmartHome smartHome) {\n+        super(smartHome);\n+    }\n+\n+    @Override\n+    void handleEvent(Event event) {\n+        smartHome.execute(obj -> {\n+            if(obj instanceof Alarm){\n+                if (event.getState().equals(States.ALARM_ACTIVATE)) {\n+                    ((Alarm) obj).activate(((AlarmEvent) event).getCode());\n+                } else if (event.getState().equals(States.ALARM_DEACTIVATE)) {\n+                    ((Alarm) obj).deactivate(((AlarmEvent) event).getCode());\n+                }\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void handleEvent(CCSensorEvent event) {\n+    }\n+}"
  },
  {
    "sha": "f55968b2715deadd39fb9e0ceb523aa07db8bf10",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/BaseEventHandler.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/BaseEventHandler.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/BaseEventHandler.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/BaseEventHandler.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.SmartHome;\n+\n+public class BaseEventHandler {\n+    SmartHome smartHome;\n+\n+    public BaseEventHandler(SmartHome smartHome) {\n+        this.smartHome = smartHome;\n+    }\n+\n+    void handleEvent(Event event) {\n+    }\n+}"
  },
  {
    "sha": "f28c8ce092365200ce6fcf5cb2b208d216ad135b",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/DoorEventHandler.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/DoorEventHandler.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/DoorEventHandler.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/DoorEventHandler.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,35 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.API.CCSensorEvent;\n+import ru.sbt.mipt.oop.API.EventHandler;\n+import ru.sbt.mipt.oop.Events.DoorEvent;\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.Events.EventsAdapter;\n+import ru.sbt.mipt.oop.RoomObjects.Door;\n+import ru.sbt.mipt.oop.SmartHome;\n+\n+public class DoorEventHandler extends BaseEventHandler implements EventHandler {\n+\n+    public DoorEventHandler(SmartHome smartHome) {\n+        super(smartHome);\n+    }\n+\n+    @Override\n+    void handleEvent(Event event) {\n+        if (event instanceof DoorEvent) {\n+            smartHome.execute(object -> {\n+                if ((object instanceof Door) && (((Door) object).getId().equals(event.getObjectId()))) {\n+                    ((Door) object).setState(event.getState());\n+                    System.out.println(((Door) object).getString());\n+                }\n+            });\n+        }\n+    }\n+\n+    @Override\n+    public void handleEvent(CCSensorEvent sensorEvent) {\n+        EventsAdapter eventsAdapter = new EventsAdapter(sensorEvent);\n+        Event event = eventsAdapter.getAdaptedEvent();\n+        handleEvent(event);\n+    }\n+}"
  },
  {
    "sha": "eb04febec8de6745a7344e69a8c78038aa2c0d90",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMy.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMy.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMy.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMy.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,34 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.SmartHome;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class EventHandlerMy {\n+    private SmartHome home;\n+    List<BaseEventHandler> eventHandlers;\n+    private AlarmEventHandler alarmEventHandler;\n+    private DoorEventHandler doorEventHandler;\n+    private HallDoorEventHandler hallDoorEventHandler;\n+    private LightEventHandler lightEventHandler;\n+\n+    public EventHandlerMy(SmartHome home) {\n+        this.home = home;\n+        eventHandlers = new ArrayList<>();\n+        eventHandlers.add(new AlarmEventHandler(home));\n+        eventHandlers.add(new DoorEventHandler(home));\n+        eventHandlers.add(new HallDoorEventHandler(home));\n+        eventHandlers.add(new LightEventHandler(home));\n+    }\n+\n+    public void handleEvent(Event event) {\n+        System.out.println(\"Got event: \" + event);\n+        eventHandlers.forEach(object ->{\n+            object.handleEvent(event);\n+        });\n+    }\n+\n+\n+}"
  },
  {
    "sha": "58ae22437a115e136014e4f47753781b12fd08f4",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMyTest.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMyTest.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMyTest.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMyTest.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,43 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import org.junit.Assert;\n+import ru.sbt.mipt.oop.Events.DoorEvent;\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.Events.LightEvent;\n+import ru.sbt.mipt.oop.Events.TypeEvent;\n+import ru.sbt.mipt.oop.Room;\n+import ru.sbt.mipt.oop.RoomObjects.Door;\n+import ru.sbt.mipt.oop.RoomObjects.Light;\n+import ru.sbt.mipt.oop.SmartHome;\n+import ru.sbt.mipt.oop.States;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+class EventHandlerMyTest {\n+\n+    Light light1 = new Light(\"1\", \"LIGHT_OFF\");\n+    Light light2 = new Light(\"2\", \"LIGHT_ON\");\n+    Door door1 = new Door(\"3\", \"DOOR_OPEN\");\n+    List<Door> doors = Arrays.asList(door1);\n+    List<Light> lights = Arrays.asList(light1, light2);\n+    Room room = new Room(lights, doors, \"hall\");\n+    Event event2 = new DoorEvent(\"3\", TypeEvent.DOOR_CLOSE);\n+    Event event1 = new LightEvent(\"1\", TypeEvent.LIGHT_ON);\n+    List<Room> roomList = Arrays.asList(room);\n+    SmartHome smartHome = new SmartHome(roomList);\n+    EventHandlerMy eventHandlerMy = new EventHandlerMy(smartHome);\n+\n+\n+    @org.junit.jupiter.api.Test\n+    void handleEvent() {\n+        smartHome.setHomeToAll();\n+//        smartHome.addRoom(room);\n+        eventHandlerMy.handleEvent(event1);\n+        Assert.assertEquals(light1.getState(), States.LIGHT_ON);\n+        eventHandlerMy.handleEvent(event2);\n+        Assert.assertEquals(door1.getState(), States.DOOR_CLOSED);\n+        Assert.assertEquals(light1.getState(), States.LIGHT_OFF);\n+        Assert.assertEquals(light2.getState(), States.LIGHT_OFF);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "bcea1bd418c86a280c137d453b9813c2c4a7501e",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/HallDoorEventHandler.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/HallDoorEventHandler.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/HallDoorEventHandler.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/HallDoorEventHandler.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,45 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.API.CCSensorEvent;\n+import ru.sbt.mipt.oop.API.EventHandler;\n+import ru.sbt.mipt.oop.Events.DoorEvent;\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.Events.EventsAdapter;\n+import ru.sbt.mipt.oop.Room;\n+import ru.sbt.mipt.oop.RoomObjects.Door;\n+import ru.sbt.mipt.oop.RoomObjects.Light;\n+import ru.sbt.mipt.oop.SmartHome;\n+import ru.sbt.mipt.oop.States;\n+\n+public class HallDoorEventHandler extends BaseEventHandler implements EventHandler {\n+\n+    public HallDoorEventHandler(SmartHome smartHome) {\n+        super(smartHome);\n+    }\n+\n+    @Override\n+    void handleEvent(Event event){\n+        if ((event instanceof DoorEvent)&&(event.getType().equals(\"DOOR_CLOSE\"))){\n+            smartHome.execute(objectUp ->{\n+                if ((objectUp instanceof Room)){\n+                    ((Room) objectUp).execute(object ->{\n+                        if ((object instanceof Door)&&(((Door) object).getId().equals(event.getObjectId()))&&(((Room) objectUp).getName().equals(\"hall\"))){\n+                            smartHome.execute(obj -> {\n+                                if(obj instanceof Light){\n+                                    ((Light) obj).setState(States.LIGHT_OFF);\n+                                }\n+                            });\n+                        }\n+                    });\n+                }\n+            });\n+        }\n+    }\n+\n+    @Override\n+    public void handleEvent(CCSensorEvent sensorEvent) {\n+        EventsAdapter eventsAdapter = new EventsAdapter(sensorEvent);\n+        Event event = eventsAdapter.getAdaptedEvent();\n+        handleEvent(event);\n+    }\n+}"
  },
  {
    "sha": "ee1cb021f8830094fb8b01e6aa3a3b11a3290ec7",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/LightEventHandler.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/LightEventHandler.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/LightEventHandler.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/LightEventHandler.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,34 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.API.CCSensorEvent;\n+import ru.sbt.mipt.oop.API.EventHandler;\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.Events.EventsAdapter;\n+import ru.sbt.mipt.oop.Events.LightEvent;\n+import ru.sbt.mipt.oop.RoomObjects.Light;\n+import ru.sbt.mipt.oop.SmartHome;\n+\n+public class LightEventHandler extends BaseEventHandler implements EventHandler {\n+    public LightEventHandler(SmartHome smartHome) {\n+        super(smartHome);\n+    }\n+\n+    @Override\n+    void handleEvent(Event event) {\n+        if (event instanceof LightEvent) {\n+            smartHome.execute(object -> {\n+                if ((object instanceof Light) && (((Light) object).getId().equals(event.getObjectId()))) {\n+                    ((Light) object).setState(event.getState());\n+                    System.out.println(((Light) object).getString());\n+                }\n+            });\n+        }\n+    }\n+\n+    @Override\n+    public void handleEvent(CCSensorEvent sensorEvent) {\n+        EventsAdapter eventsAdapter = new EventsAdapter(sensorEvent);\n+        Event event = eventsAdapter.getAdaptedEvent();\n+        handleEvent(event);\n+    }\n+}"
  },
  {
    "sha": "9e13a479ee952d5251c0cab0ee1c39ccdd7e5585",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/RoomObjectEventHandler.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/RoomObjectEventHandler.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/EventHandlers/RoomObjectEventHandler.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/RoomObjectEventHandler.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,31 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+//public class RoomObjectEventHandler extends BaseEventHandler {\n+//    private Event event;\n+//\n+//    public RoomObjectEventHandler(Event event) {\n+//        this.event = event;\n+//    }\n+//\n+//    @Override\n+//    void handleEvent(Object ro) {\n+//        SmartHome home = new SmartHome();\n+//        Event event = new Event();\n+//\n+//        if ((ro instanceof Light) || (ro instanceof Door)) {\n+//            if (ro != null) {\n+//                System.out.println(((RoomObject) ro).getString());//print info about event\n+//                ((RoomObject) ro).setState(event.getState());//set state of event\n+//            } else {\n+//                System.out.println(\"Object not found or act is not right\");\n+//            }\n+//        }\n+//\n+//        home.execute(object -> {\n+//            if((object instanceof Door)&&(((Door)object).getId().equals(event.getObjectId()))){\n+//                System.out.println(((Door)object).getString());\n+//            }\n+//        });\n+//    }\n+//\n+//}"
  },
  {
    "sha": "bcc43a9c183fd23e847c25abd8d83c028715f2d1",
    "filename": "src/main/java/ru/sbt/mipt/oop/Events/AlarmEvent.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Events/AlarmEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Events/AlarmEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Events/AlarmEvent.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,36 @@\n+package ru.sbt.mipt.oop.Events;\n+\n+import ru.sbt.mipt.oop.GetStateToChange;\n+import ru.sbt.mipt.oop.States;\n+\n+public class AlarmEvent extends Event implements GetStateToChange {\n+//    private TypeEvent type;\n+    private String code;\n+\n+    public AlarmEvent(String objectId, TypeEvent type, String code) {\n+        super(objectId,type);\n+//        this.type = type;\n+        this.code = code;\n+    }\n+\n+    public String getCode() {\n+        return code;\n+    }\n+\n+    @Override\n+    public String getType() {\n+        return type.toString();\n+    }\n+\n+//    @Override\n+//    public BaseEventHandler getHandler() {\n+//        return new AlarmEventHandler(this);\n+//    }\n+\n+\n+    @Override\n+    public States getState() {\n+        return type.getState();\n+    }\n+\n+}"
  },
  {
    "sha": "da33faee1d5e564fda421be3de058fd7e94f1b52",
    "filename": "src/main/java/ru/sbt/mipt/oop/Events/AlarmTypeEvent.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Events/AlarmTypeEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Events/AlarmTypeEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Events/AlarmTypeEvent.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,18 @@\n+package ru.sbt.mipt.oop.Events;\n+\n+import ru.sbt.mipt.oop.States;\n+\n+public enum AlarmTypeEvent {\n+    ALARM_ACTIVATE {\n+        public States getState() {\n+            return States.ALARM_ACTIVATE;\n+        }\n+    },\n+    ALARM_DEACTIVATE {\n+        public States getState() {\n+            return States.ALARM_DEACTIVATE;\n+        }\n+    };\n+\n+    abstract States getState();\n+}"
  },
  {
    "sha": "600fe5b7f560acc6f7e801405f5871e33fff098e",
    "filename": "src/main/java/ru/sbt/mipt/oop/Events/DoorEvent.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Events/DoorEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/900b0291ea683ecf005877f8f7c6f3c06cbf98c5/src/main/java/ru/sbt/mipt/oop/Events/DoorEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Events/DoorEvent.java?ref=900b0291ea683ecf005877f8f7c6f3c06cbf98c5",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.sbt.mipt.oop.Events;\n+\n+import ru.sbt.mipt.oop.GetStateToChange;\n+import ru.sbt.mipt.oop.States;\n+\n+public class DoorEvent extends Event implements GetStateToChange {\n+//    private TypeEvent type;\n+\n+    public DoorEvent(String id, TypeEvent type) {\n+        super(id,type);\n+//        this.type = type;\n+    }\n+\n+    @Override\n+    public States getState() {\n+        return this.type.getState();\n+    }\n+\n+    @Override\n+    public String getType() {\n+        return super.type.toString();\n+    }\n+\n+}"
  }
]
