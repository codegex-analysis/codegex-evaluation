[
  {
    "sha": "1d88b76f20a753f79f8f76e7791dda6f2e66731d",
    "filename": "STUDENT_GUIDE.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/STUDENT_GUIDE.md",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/STUDENT_GUIDE.md",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/STUDENT_GUIDE.md?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -75,7 +75,7 @@ class HallChecker\n **Нет**\n \n ```java\n-package ru.sbt.mipt.oop.SmartHome;\n+package SmartHome;\n ```\n \n ### Не используйте статические методы в бизнес логике"
  },
  {
    "sha": "932c90018fd39974d7242f97f0ed022bb96256c8",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/pom.xml",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/pom.xml",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/pom.xml?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -25,11 +25,17 @@\n     </build>\n \n     <dependencies>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter</artifactId>\n+            <version>5.7.0</version>\n+            <scope>compile</scope>\n+        </dependency>\n         <dependency>\n             <groupId>junit</groupId>\n             <artifactId>junit</artifactId>\n-            <version>4.8.2</version>\n-            <scope>test</scope>\n+            <version>4.12</version>\n+            <scope>compile</scope>\n         </dependency>\n         <dependency>\n             <groupId>com.google.code.gson</groupId>"
  },
  {
    "sha": "cd26ae11d14cd1b259f382b6fda0f01c74c26747",
    "filename": "smart-home-1.js",
    "status": "modified",
    "additions": 81,
    "deletions": 81,
    "changes": 162,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/smart-home-1.js",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/smart-home-1.js",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/smart-home-1.js?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -1,84 +1,84 @@\n {\n   \"rooms\": [\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": false,\n-          \"id\": \"1\"\n-        },\n-        {\n-          \"isOn\": true,\n-          \"id\": \"2\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"1\",\n-          \"isOpen\": false\n-        }\n-      ],\n-      \"name\": \"kitchen\"\n-    },\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": true,\n-          \"id\": \"3\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"2\",\n-          \"isOpen\": false\n-        }\n-      ],\n-      \"name\": \"bathroom\"\n-    },\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": false,\n-          \"id\": \"4\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"5\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"6\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"3\",\n-          \"isOpen\": true\n-        }\n-      ],\n-      \"name\": \"bedroom\"\n-    },\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": false,\n-          \"id\": \"7\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"8\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"9\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"4\",\n-          \"isOpen\": false\n-        }\n-      ],\n-      \"name\": \"hall\"\n-    }\n-  ]\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"1\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_ON\",\n+        \"id\": \"2\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"1\",\n+        \"isOpen\": \"DOOR_CLOSED\"\n+      }\n+    ],\n+    \"name\": \"kitchen\"\n+  },\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_ON\",\n+        \"id\": \"3\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"2\",\n+        \"isOpen\": \"DOOR_CLOSED\"\n+      }\n+    ],\n+    \"name\": \"bathroom\"\n+  },\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"4\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"5\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"6\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"3\",\n+        \"isOpen\": \"DOOR_OPEN\"\n+      }\n+    ],\n+    \"name\": \"bedroom\"\n+  },\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"7\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"8\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"9\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"4\",\n+        \"isOpen\": \"DOOR_CLOSED\"\n+      }\n+    ],\n+    \"name\": \"hall\"\n+  }\n+]\n }\n\\ No newline at end of file"
  },
  {
    "sha": "d38d5ef4a7dfd16f957a5046cf0191219488a581",
    "filename": "src/main/java/ru/sbt/mipt/oop/Action.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Action.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Action.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Action.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface Action {\n+\n+    void execute(Object obj);\n+\n+}"
  },
  {
    "sha": "30e892b747f4dc0d0fb531418b2526e9cf9cedcd",
    "filename": "src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Actionable.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface Actionable {\n+    void execute(Action action);\n+}"
  },
  {
    "sha": "3087dba35861735373145e6549a93da6ae0b245c",
    "filename": "src/main/java/ru/sbt/mipt/oop/Application.java",
    "status": "modified",
    "additions": 8,
    "deletions": 67,
    "changes": 75,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Application.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Application.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Application.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -1,80 +1,21 @@\n package ru.sbt.mipt.oop;\n \n-import com.google.gson.Gson;\n-\n import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-\n-import static ru.sbt.mipt.oop.SensorEventType.*;\n \n public class Application {\n \n     public static void main(String... args) throws IOException {\n+        String path = \"smart-home-1.js\";\n         // считываем состояние дома из файла\n-        Gson gson = new Gson();\n-        String json = new String(Files.readAllBytes(Paths.get(\"smart-home-1.js\")));\n-        SmartHome smartHome = gson.fromJson(json, SmartHome.class);\n+        JsonSmartHomeStateProvider json = new JsonSmartHomeStateProvider(path);\n+        SmartHome smartHome = json.provideSmartHome();\n+        //создам обработчик событий и генератор событий\n+        EventHandler eventHandler = new EventHandler(smartHome);\n+        EventGenerator eventGenerator = new EventGenerator();\n         // начинаем цикл обработки событий\n-        SensorEvent event = getNextSensorEvent();\n-        while (event != null) {\n-            System.out.println(\"Got event: \" + event);\n-            if (event.getType() == LIGHT_ON || event.getType() == LIGHT_OFF) {\n-                // событие от источника света\n-                for (Room room : smartHome.getRooms()) {\n-                    for (Light light : room.getLights()) {\n-                        if (light.getId().equals(event.getObjectId())) {\n-                            if (event.getType() == LIGHT_ON) {\n-                                light.setOn(true);\n-                                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned on.\");\n-                            } else {\n-                                light.setOn(false);\n-                                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            if (event.getType() == DOOR_OPEN || event.getType() == DOOR_CLOSED) {\n-                // событие от двери\n-                for (Room room : smartHome.getRooms()) {\n-                    for (Door door : room.getDoors()) {\n-                        if (door.getId().equals(event.getObjectId())) {\n-                            if (event.getType() == DOOR_OPEN) {\n-                                door.setOpen(true);\n-                                System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was opened.\");\n-                            } else {\n-                                door.setOpen(false);\n-                                System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was closed.\");\n-                                // если мы получили событие о закрытие двери в холле - это значит, что была закрыта входная дверь.\n-                                // в этом случае мы хотим автоматически выключить свет во всем доме (это же умный дом!)\n-                                if (room.getName().equals(\"hall\")) {\n-                                    for (Room homeRoom : smartHome.getRooms()) {\n-                                        for (Light light : homeRoom.getLights()) {\n-                                            light.setOn(false);\n-                                            SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\n-                                            sendCommand(command);\n-                                        }\n-                                    }\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            event = getNextSensorEvent();\n-        }\n+        SmartHomeManager smartHomeManager = new SmartHomeManager(smartHome, eventHandler, eventGenerator);\n+        smartHomeManager.startTrackingEvents();\n     }\n \n-    private static void sendCommand(SensorCommand command) {\n-        System.out.println(\"Pretent we're sending command \" + command);\n-    }\n \n-    private static SensorEvent getNextSensorEvent() {\n-        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n-        if (Math.random() < 0.05) return null; // null means end of event stream\n-        SensorEventType sensorEventType = SensorEventType.values()[(int) (4 * Math.random())];\n-        String objectId = \"\" + ((int) (10 * Math.random()));\n-        return new SensorEvent(sensorEventType, objectId);\n-    }\n }"
  },
  {
    "sha": "a1fb0fc5a579a65cdce4aafa0b5c2e219a8d7648",
    "filename": "src/main/java/ru/sbt/mipt/oop/CommandType.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/CommandType.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/CommandType.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/CommandType.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -1,5 +1,12 @@\n package ru.sbt.mipt.oop;\n \n+\n public enum CommandType {\n-    LIGHT_OFF\n+    LIGHT_OFF{\n+        public boolean getState(){\n+            return false;\n+        }\n+    };\n+    abstract boolean getState();\n }\n+"
  },
  {
    "sha": "17640034ba60ae698469b0d41c559c867f93578b",
    "filename": "src/main/java/ru/sbt/mipt/oop/Door.java",
    "status": "modified",
    "additions": 26,
    "deletions": 6,
    "changes": 32,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Door.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Door.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Door.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -1,19 +1,39 @@\n package ru.sbt.mipt.oop;\n \n-public class Door {\n-    private final String id;\n-    private boolean isOpen;\n+import java.util.function.Function;\n \n-    public Door(boolean isOpen, String id) {\n+import javax.swing.*;\n+\n+public class Door extends RoomObject implements RoomObjectInterface, Actionable {\n+    private States isOpen;\n+\n+    public Door(String id, States isOpen) {\n+        super(id);\n         this.isOpen = isOpen;\n-        this.id = id;\n     }\n \n+    public Door(String id, String isOpen) {\n+        super(id);\n+        this.isOpen = States.valueOf(isOpen);\n+    }\n+\n+    @Override\n     public String getId() {\n         return id;\n     }\n \n-    public void setOpen(boolean open) {\n+    @Override\n+    public void setState(States open) {\n         isOpen = open;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.execute(this);\n+    }\n+\n+    public States getState() {\n+        return isOpen;\n+    }\n+\n }"
  },
  {
    "sha": "c81e059925f013a186c24e4de8001c449ec1e4a7",
    "filename": "src/main/java/ru/sbt/mipt/oop/DoorEvent.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/DoorEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/DoorEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/DoorEvent.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,45 @@\n+package ru.sbt.mipt.oop;\n+\n+public class DoorEvent extends Event implements GetStateToChange, GetAction, GetActionToPrint {\n+    private DoorTypeEvent type;\n+\n+    public DoorEvent(String id, DoorTypeEvent type) {\n+        super(id);\n+        this.type = type;\n+    }\n+\n+    @Override\n+    public States getState() {\n+        return type.getState();\n+    }\n+\n+    @Override\n+    public String getType() {\n+        return type.toString();\n+    }\n+\n+    @Override\n+    public Action getAction() {\n+        return object -> {\n+            if ((object instanceof Door) && (((Door) object).getId().equals(this.getObjectId()))) {\n+                ((Door) object).setState(this.getState());\n+            }\n+        };\n+    }\n+\n+    @Override\n+    public Action getActionToPrint() {\n+        return objectUp -> {\n+            if (objectUp instanceof Room) {\n+                ((Room) objectUp).execute(object -> {\n+                    if ((object instanceof Door) && (((Door) object).getId().equals(this.getObjectId()))) {\n+                        String s = String.format(\"Door %s in room %s %s\", ((Door) object).getId(), ((Room) objectUp).getName(), ((Door) object).getState().getString());\n+                        System.out.println(s);\n+                    }\n+                });\n+            }\n+        };\n+    }\n+\n+\n+}"
  },
  {
    "sha": "871170ab9b8a3706385257c02f731b5add2c0758",
    "filename": "src/main/java/ru/sbt/mipt/oop/DoorTypeEvent.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/DoorTypeEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/DoorTypeEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/DoorTypeEvent.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.sbt.mipt.oop;\n+\n+public enum DoorTypeEvent {\n+    DOOR_OPEN {\n+        public States getState(){\n+            return States.DOOR_OPEN;\n+        }\n+    }, DOOR_CLOSE{\n+        public States getState(){\n+            return States.DOOR_CLOSED;\n+        }\n+    };\n+    abstract States getState();\n+}"
  },
  {
    "sha": "19d6e54f7165df1a8548e5f2d2cace3720b1dc5a",
    "filename": "src/main/java/ru/sbt/mipt/oop/Event.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Event.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Event.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Event.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.sbt.mipt.oop;\n+\n+public class Event implements GetStateToChange, GetAction, GetActionToPrint {\n+    private final String objectId;\n+\n+    Event(String objectId) {\n+        this.objectId = objectId;\n+    }\n+\n+    String getObjectId() {\n+        return objectId;\n+    }\n+\n+    public String getType() {\n+        return \"\";\n+    }\n+\n+    @Override\n+    public States getState() {\n+        return States.DOOR_CLOSED;\n+    }\n+\n+    @Override\n+    public Action getAction() {\n+        return null;\n+    }\n+\n+    public String toString() {\n+        return \"SensorEvent{\" +\n+                \"type=\" + this.getType() +\n+                \", objectId='\" + this.getObjectId() + '\\'' +\n+                '}';\n+    }\n+\n+    @Override\n+    public Action getActionToPrint() {\n+        return null;\n+    }\n+}"
  },
  {
    "sha": "9af8c7b2867105166e6f03bab24d7886134c95b6",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventGenerator.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/EventGenerator.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/EventGenerator.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventGenerator.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.sbt.mipt.oop;\n+\n+class EventGenerator implements EventGeneratorInterface {\n+    public Event generateEvent(){\n+        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n+        if (Math.random() < 0.05) return null; // null means end of event stream\n+        String objectId = \"\" + ((int) (10 * Math.random()));\n+        Event[] events = {new DoorEvent(objectId,DoorTypeEvent.DOOR_CLOSE),new DoorEvent(objectId,DoorTypeEvent.DOOR_OPEN),\n+                new LightEvent(objectId,LightTypeEvent.LIGHT_OFF),new LightEvent(objectId,LightTypeEvent.LIGHT_ON)};\n+        Event event = events[(int) (4 * Math.random())];\n+\n+        return event;\n+    }\n+}"
  },
  {
    "sha": "de571be638bb22ea78e9c665b419390300bf753f",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventGeneratorInterface.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/EventGeneratorInterface.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/EventGeneratorInterface.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventGeneratorInterface.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface EventGeneratorInterface {\n+    Event generateEvent();\n+}"
  },
  {
    "sha": "73a58cf263cb2e786a2f4a776edc3c8122df6a15",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandler.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/EventHandler.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/EventHandler.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandler.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,40 @@\n+package ru.sbt.mipt.oop;\n+\n+class EventHandler {\n+    private SmartHome smartHome;\n+\n+    EventHandler(SmartHome home) {\n+        this.smartHome = home;\n+    }\n+\n+    void handleEvent(Event event) {\n+        System.out.println(\"Got event: \" + event);\n+        smartHome.execute(event.getAction());\n+        smartHome.execute(event.getActionToPrint());\n+        checkHallDoorEvent(event);\n+    }\n+\n+    private void checkHallDoorEvent(Event event) {\n+        if (event instanceof DoorEvent) {\n+            smartHome.execute(obj -> {\n+                if ((event instanceof DoorEvent) && (event.getType().equals(\"DOOR_CLOSE\"))) {\n+                    smartHome.execute(objectUp -> {\n+                        if ((objectUp instanceof Room)) {\n+                            ((Room) objectUp).execute(object -> {\n+                                if ((object instanceof Door) && (((Door) object).getId().equals(event.getObjectId())) && (((Room) objectUp).getName().equals(\"hall\"))) {\n+                                    smartHome.execute(o -> {\n+                                        if (o instanceof Light) {\n+                                            ((Light) o).setState(States.LIGHT_OFF);\n+                                        }\n+                                    });\n+                                }\n+                            });\n+                        }\n+                    });\n+                }\n+            });\n+        }\n+    }\n+\n+\n+}"
  },
  {
    "sha": "80c31e2d7d2ae66acf878d5a08857b088aa23949",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlerTest.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/EventHandlerTest.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/EventHandlerTest.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlerTest.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,33 @@\n+package ru.sbt.mipt.oop;\n+\n+import org.junit.Assert;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+class EventHandlerTest {\n+\n+    Light light1 = new Light(\"1\", \"LIGHT_OFF\");\n+    Light light2 = new Light(\"2\", \"LIGHT_ON\");\n+    Door door1 = new Door(\"3\", \"DOOR_OPEN\");\n+    List<Door> doors = Arrays.asList(door1);\n+    List<Light> lights = Arrays.asList(light1, light2);\n+    Room room = new Room(lights, doors, \"hall\");\n+    Event event2 = new DoorEvent(\"3\", DoorTypeEvent.DOOR_CLOSE);\n+    Event event1 = new LightEvent(\"1\", LightTypeEvent.LIGHT_ON);\n+    List<Room> roomList = Arrays.asList(room);\n+    SmartHome smartHome = new SmartHome(roomList);\n+    EventHandler eventHandler = new EventHandler(smartHome);\n+\n+\n+    @org.junit.jupiter.api.Test\n+    void handleEvent() {\n+//        smartHome.setHomeToAll();\n+        eventHandler.handleEvent(event1);\n+        Assert.assertEquals(light1.getState(), States.LIGHT_ON);\n+        eventHandler.handleEvent(event2);\n+        Assert.assertEquals(door1.getState(), States.DOOR_CLOSED);\n+        Assert.assertEquals(light1.getState(), States.LIGHT_OFF);\n+        Assert.assertEquals(light2.getState(), States.LIGHT_OFF);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f93db939a6331bdd30fa4122708d7264d56daad4",
    "filename": "src/main/java/ru/sbt/mipt/oop/GetAction.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/GetAction.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/GetAction.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/GetAction.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface GetAction {\n+    Action getAction();\n+}"
  },
  {
    "sha": "a42362b9e5a0878c92a748a1135a7a59dceba7a2",
    "filename": "src/main/java/ru/sbt/mipt/oop/GetActionToPrint.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/GetActionToPrint.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/GetActionToPrint.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/GetActionToPrint.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface GetActionToPrint {\n+    Action getActionToPrint();\n+}"
  },
  {
    "sha": "93a90f0c227887ddf11af71f087d3e06723d25c0",
    "filename": "src/main/java/ru/sbt/mipt/oop/GetStateToChange.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/GetStateToChange.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/GetStateToChange.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/GetStateToChange.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface GetStateToChange  {\n+     States getState();\n+}"
  },
  {
    "sha": "ff4a91fbca071905deef0f50174b045a00a87105",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeBuilder.java",
    "status": "modified",
    "additions": 21,
    "deletions": 21,
    "changes": 42,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/HomeBuilder.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/HomeBuilder.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/HomeBuilder.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -13,26 +13,26 @@\n public class HomeBuilder {\n \n     public static void main(String[] args) throws IOException {\n-        Room kitchen = new Room(Arrays.asList(new Light(\"1\", false), new Light(\"2\", true)),\n-                Arrays.asList(new Door(false, \"1\")),\n-                \"kitchen\");\n-        Room bathroom = new Room(Arrays.asList(new Light(\"3\", true)),\n-                Arrays.asList(new Door(false, \"2\")),\n-                \"bathroom\");\n-        Room bedroom = new Room(Arrays.asList(new Light(\"4\", false), new Light(\"5\", false), new Light(\"6\", false)),\n-                Arrays.asList(new Door(true, \"3\")),\n-                \"bedroom\");\n-        Room hall = new Room(Arrays.asList(new Light(\"7\", false), new Light(\"8\", false), new Light(\"9\", false)),\n-                Arrays.asList(new Door(false, \"4\")),\n-                \"hall\");\n-        SmartHome smartHome = new SmartHome(Arrays.asList(kitchen, bathroom, bedroom, hall));\n-        Gson gson = new GsonBuilder().setPrettyPrinting().create();\n-        String jsonString = gson.toJson(smartHome);\n-        System.out.println(jsonString);\n-        Path path = Paths.get(\"output.js\");\n-        try (BufferedWriter writer = Files.newBufferedWriter(path)) {\n-            writer.write(jsonString);\n-        }\n-    }\n+//        Room kitchen = new Room(Arrays.asList(new Light(\"1\", false), new Light(\"2\", true)),\n+//                Arrays.asList(new Door(false, \"1\")),\n+//                \"kitchen\");\n+//        Room bathroom = new Room(Arrays.asList(new Light(\"3\", true)),\n+//                Arrays.asList(new Door(false, \"2\")),\n+//                \"bathroom\");\n+//        Room bedroom = new Room(Arrays.asList(new Light(\"4\", false), new Light(\"5\", false), new Light(\"6\", false)),\n+//                Arrays.asList(new Door(true, \"3\")),\n+//                \"bedroom\");\n+//        Room hall = new Room(Arrays.asList(new Light(\"7\", false), new Light(\"8\", false), new Light(\"9\", false)),\n+//                Arrays.asList(new Door(false, \"4\")),\n+//                \"hall\");\n+//        SmartHome smartHome = new SmartHome(Arrays.asList(kitchen, bathroom, bedroom, hall));\n+//        Gson gson = new GsonBuilder().setPrettyPrinting().create();\n+//        String jsonString = gson.toJson(smartHome);\n+//        System.out.println(jsonString);\n+//        Path path = Paths.get(\"output.js\");\n+//        try (BufferedWriter writer = Files.newBufferedWriter(path)) {\n+//            writer.write(jsonString);\n+//        }\n+   }\n \n }"
  },
  {
    "sha": "ce93aafcbcae42718dafb06f65fdf2482e6d22d4",
    "filename": "src/main/java/ru/sbt/mipt/oop/JsonSmartHomeStateProvider.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/JsonSmartHomeStateProvider.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/JsonSmartHomeStateProvider.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/JsonSmartHomeStateProvider.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.sbt.mipt.oop;\n+\n+import com.google.gson.Gson;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Array;\n+import java.lang.reflect.Field;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class JsonSmartHomeStateProvider implements SmartHomeProvider {\n+    String path;\n+\n+    public JsonSmartHomeStateProvider(String path) {\n+        this.path = path;\n+    }\n+\n+\n+    @Override\n+    public SmartHome provideSmartHome() {\n+        Gson gson = new Gson();\n+        String json;\n+        try {\n+            json = new String(Files.readAllBytes(Paths.get(\"smart-home-1.js\")));\n+        } catch (IOException e) {\n+            System.out.println(\"State file not founded, returned new SmartHome\");\n+            return new SmartHome();\n+        }\n+        SmartHome smartHome = gson.fromJson(json, SmartHome.class);\n+        List<String> names = Arrays.asList(\"home\", \"name\");\n+        return smartHome;\n+    }\n+\n+\n+}"
  },
  {
    "sha": "a8f53695a86b29eb1e87b4229440f43bcfadee2c",
    "filename": "src/main/java/ru/sbt/mipt/oop/Light.java",
    "status": "modified",
    "additions": 25,
    "deletions": 9,
    "changes": 34,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Light.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Light.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Light.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -1,23 +1,39 @@\n package ru.sbt.mipt.oop;\n \n-public class Light {\n-    private boolean isOn;\n-    private final String id;\n+import javax.swing.*;\n+import java.util.function.Function;\n \n-    public Light(String id, boolean isOn) {\n-        this.id = id;\n-        this.isOn = isOn;\n+public class Light extends RoomObject implements RoomObjectInterface, Actionable {\n+    private States isOn;\n+\n+    public Light(String id, String isOn) {\n+        super(id);\n+        this.isOn = States.valueOf(isOn);\n     }\n \n-    public boolean isOn() {\n-        return isOn;\n+    public Light(String id, States isOn) {\n+        super(id);\n+        this.isOn = isOn;\n     }\n \n+    @Override\n     public String getId() {\n         return id;\n     }\n \n-    public void setOn(boolean on) {\n+\n+    @Override\n+    public void setState(States on) {\n         isOn = on;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.execute(this);\n+    }\n+\n+    public States getState() {\n+        return isOn;\n+    }\n+\n }"
  },
  {
    "sha": "25e2cabc40b5a8beecd03a29328ad1d845aa5619",
    "filename": "src/main/java/ru/sbt/mipt/oop/LightEvent.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/LightEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/LightEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/LightEvent.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,45 @@\n+package ru.sbt.mipt.oop;\n+\n+public class LightEvent extends Event implements GetStateToChange {\n+    private LightTypeEvent type;\n+\n+    public LightEvent(String id, LightTypeEvent type) {\n+        super(id);\n+        this.type = type;\n+    }\n+\n+\n+    @Override\n+    public States getState() {\n+        return type.getState();\n+    }\n+\n+    @Override\n+    public String getType() {\n+        return type.toString();\n+    }\n+\n+    @Override\n+    public Action getAction() {\n+        return object -> {\n+            if ((object instanceof Light) && (((Light) object).getId().equals(this.getObjectId()))) {\n+                ((Light) object).setState(this.getState());\n+            }\n+        };\n+    }\n+\n+    @Override\n+    public Action getActionToPrint() {\n+        return objectUp -> {\n+            if (objectUp instanceof Room) {\n+                ((Room) objectUp).execute(object -> {\n+                    if ((object instanceof Light) && (((Light) object).getId().equals(this.getObjectId()))) {\n+                        String s = String.format(\"Light %s in room %s %s\", ((Light) object).getId(), ((Room) objectUp).getName(), ((Light) object).getState().getString());\n+                        System.out.println(s);\n+                    }\n+                });\n+            }\n+        };\n+    }\n+\n+}"
  },
  {
    "sha": "d00fe7b3ae607d02c225afe4a49a9aa361ad1fa4",
    "filename": "src/main/java/ru/sbt/mipt/oop/LightTypeEvent.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/LightTypeEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/LightTypeEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/LightTypeEvent.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.sbt.mipt.oop;\n+\n+public enum LightTypeEvent {\n+    LIGHT_ON{\n+        public States getState(){\n+            return States.LIGHT_ON;\n+        }\n+    }, LIGHT_OFF{\n+        public States getState(){\n+            return States.LIGHT_OFF;\n+        }\n+    };\n+    abstract States getState();\n+}"
  },
  {
    "sha": "4afe85705c2f5cbf4f331bdb738c278b77f0497e",
    "filename": "src/main/java/ru/sbt/mipt/oop/Room.java",
    "status": "modified",
    "additions": 19,
    "deletions": 1,
    "changes": 20,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Room.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/Room.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Room.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -2,10 +2,15 @@\n \n import java.util.Collection;\n \n-public class Room {\n+public class Room implements Actionable {\n     private Collection<Light> lights;\n     private Collection<Door> doors;\n     private String name;\n+    private SmartHome home;\n+\n+    public void setHome(SmartHome home) {\n+        this.home = home;\n+    }\n \n     public Room(Collection<Light> lights, Collection<Door> doors, String name) {\n         this.lights = lights;\n@@ -24,4 +29,17 @@ public Room(Collection<Light> lights, Collection<Door> doors, String name) {\n     public String getName() {\n         return name;\n     }\n+\n+\n+    @Override\n+    public void execute(Action action) {\n+        lights.forEach(light -> {\n+            light.execute(action);\n+        });\n+        doors.forEach(door -> {\n+            door.execute(action);\n+        });\n+        action.execute(this);\n+    }\n+\n }"
  },
  {
    "sha": "d219531a51c4e0dccec87f05f82350afa5fe5d3a",
    "filename": "src/main/java/ru/sbt/mipt/oop/RoomObject.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/RoomObject.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/RoomObject.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/RoomObject.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.sbt.mipt.oop;\n+\n+import javax.swing.*;\n+import java.util.function.Function;\n+\n+public class RoomObject implements RoomObjectInterface, Actionable {\n+    final String id;\n+\n+    public RoomObject(String id) {\n+        this.id = id;\n+    }\n+\n+    public void setState(States mean) {\n+    }\n+\n+    public String getId() {\n+        return \"\";\n+    }\n+\n+\n+    @Override\n+    public void execute(Action action) {\n+    }\n+}"
  },
  {
    "sha": "4ed07b551bea4fc4eb8dab2d7956432cf3c8b24f",
    "filename": "src/main/java/ru/sbt/mipt/oop/RoomObjectInterface.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/RoomObjectInterface.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/RoomObjectInterface.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/RoomObjectInterface.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,6 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface RoomObjectInterface {\n+\n+    void setState(States on);\n+}"
  },
  {
    "sha": "c6605548fc7bb3b9be6077091c356180f6fe3502",
    "filename": "src/main/java/ru/sbt/mipt/oop/RoomObjectIteratorInterface.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/RoomObjectIteratorInterface.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/RoomObjectIteratorInterface.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/RoomObjectIteratorInterface.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -0,0 +1,9 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface RoomObjectIteratorInterface {\n+    boolean hasNext();\n+\n+    RoomObject getNext();\n+\n+    void reset();\n+}"
  },
  {
    "sha": "f77e1b9e426a87fd81d9d2e076908f9da07f7103",
    "filename": "src/main/java/ru/sbt/mipt/oop/SensorEvent.java",
    "status": "removed",
    "additions": 0,
    "deletions": 27,
    "changes": 27,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662/src/main/java/ru/sbt/mipt/oop/SensorEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662/src/main/java/ru/sbt/mipt/oop/SensorEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/SensorEvent.java?ref=49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662",
    "patch": "@@ -1,27 +0,0 @@\n-package ru.sbt.mipt.oop;\n-\n-public class SensorEvent {\n-    private final SensorEventType type;\n-    private final String objectId;\n-\n-    public SensorEvent(SensorEventType type, String objectId) {\n-        this.type = type;\n-        this.objectId = objectId;\n-    }\n-\n-    public SensorEventType getType() {\n-        return type;\n-    }\n-\n-    public String getObjectId() {\n-        return objectId;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"SensorEvent{\" +\n-                \"type=\" + type +\n-                \", objectId='\" + objectId + '\\'' +\n-                '}';\n-    }\n-}"
  },
  {
    "sha": "8b9351f18ece7a1abe0f72d04805315ba3299587",
    "filename": "src/main/java/ru/sbt/mipt/oop/SensorEventType.java",
    "status": "removed",
    "additions": 0,
    "deletions": 5,
    "changes": 5,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662/src/main/java/ru/sbt/mipt/oop/SensorEventType.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662/src/main/java/ru/sbt/mipt/oop/SensorEventType.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/SensorEventType.java?ref=49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662",
    "patch": "@@ -1,5 +0,0 @@\n-package ru.sbt.mipt.oop;\n-\n-public enum SensorEventType {\n-    LIGHT_ON, LIGHT_OFF, DOOR_OPEN, DOOR_CLOSED\n-}"
  },
  {
    "sha": "8b265a304b3364730f8ce4760b71f61bd5b04099",
    "filename": "src/main/java/ru/sbt/mipt/oop/SmartHome.java",
    "status": "modified",
    "additions": 18,
    "deletions": 2,
    "changes": 20,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/SmartHome.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/67df693fd14f8307457a2f55aeb8617b0f5ffedc/src/main/java/ru/sbt/mipt/oop/SmartHome.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/SmartHome.java?ref=67df693fd14f8307457a2f55aeb8617b0f5ffedc",
    "patch": "@@ -1,24 +1,40 @@\n package ru.sbt.mipt.oop;\n \n+import javax.swing.*;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.List;\n+import java.util.function.Function;\n \n-public class SmartHome {\n-    Collection<Room> rooms;\n+public class SmartHome implements Actionable {\n+    private Collection<Room> rooms;\n \n     public SmartHome() {\n         rooms = new ArrayList<>();\n     }\n \n     public SmartHome(Collection<Room> rooms) {\n         this.rooms = rooms;\n+        for (Room r : rooms) {\n+            r.setHome(this);\n+        }\n     }\n \n     public void addRoom(Room room) {\n         rooms.add(room);\n+        room.setHome(this);\n     }\n \n     public Collection<Room> getRooms() {\n         return rooms;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        rooms.forEach(room -> {\n+            room.execute(action);\n+        });\n+        action.execute(this);\n+    }\n+\n }"
  }
]
