[
  {
    "sha": "1d88b76f20a753f79f8f76e7791dda6f2e66731d",
    "filename": "STUDENT_GUIDE.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/STUDENT_GUIDE.md",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/STUDENT_GUIDE.md",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/STUDENT_GUIDE.md?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -75,7 +75,7 @@ class HallChecker\n **Нет**\n \n ```java\n-package ru.sbt.mipt.oop.SmartHome;\n+package SmartHome;\n ```\n \n ### Не используйте статические методы в бизнес логике"
  },
  {
    "sha": "0a0ad9b6623c233387c58d646ba3d097018f71d8",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 25,
    "deletions": 2,
    "changes": 27,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/pom.xml",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/pom.xml",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/pom.xml?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -25,16 +25,39 @@\n     </build>\n \n     <dependencies>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter</artifactId>\n+            <version>5.7.0</version>\n+            <scope>compile</scope>\n+        </dependency>\n         <dependency>\n             <groupId>junit</groupId>\n             <artifactId>junit</artifactId>\n-            <version>4.8.2</version>\n-            <scope>test</scope>\n+            <version>4.12</version>\n+            <scope>compile</scope>\n         </dependency>\n         <dependency>\n             <groupId>com.google.code.gson</groupId>\n             <artifactId>gson</artifactId>\n             <version>2.6.2</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter</artifactId>\n+            <version>5.4.2</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-core</artifactId>\n+            <version>5.3.4</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-context</artifactId>\n+            <version>5.2.9.RELEASE</version>\n+        </dependency>\n     </dependencies>\n+\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "cd26ae11d14cd1b259f382b6fda0f01c74c26747",
    "filename": "smart-home-1.js",
    "status": "modified",
    "additions": 81,
    "deletions": 81,
    "changes": 162,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/smart-home-1.js",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/smart-home-1.js",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/smart-home-1.js?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -1,84 +1,84 @@\n {\n   \"rooms\": [\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": false,\n-          \"id\": \"1\"\n-        },\n-        {\n-          \"isOn\": true,\n-          \"id\": \"2\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"1\",\n-          \"isOpen\": false\n-        }\n-      ],\n-      \"name\": \"kitchen\"\n-    },\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": true,\n-          \"id\": \"3\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"2\",\n-          \"isOpen\": false\n-        }\n-      ],\n-      \"name\": \"bathroom\"\n-    },\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": false,\n-          \"id\": \"4\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"5\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"6\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"3\",\n-          \"isOpen\": true\n-        }\n-      ],\n-      \"name\": \"bedroom\"\n-    },\n-    {\n-      \"lights\": [\n-        {\n-          \"isOn\": false,\n-          \"id\": \"7\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"8\"\n-        },\n-        {\n-          \"isOn\": false,\n-          \"id\": \"9\"\n-        }\n-      ],\n-      \"doors\": [\n-        {\n-          \"id\": \"4\",\n-          \"isOpen\": false\n-        }\n-      ],\n-      \"name\": \"hall\"\n-    }\n-  ]\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"1\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_ON\",\n+        \"id\": \"2\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"1\",\n+        \"isOpen\": \"DOOR_CLOSED\"\n+      }\n+    ],\n+    \"name\": \"kitchen\"\n+  },\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_ON\",\n+        \"id\": \"3\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"2\",\n+        \"isOpen\": \"DOOR_CLOSED\"\n+      }\n+    ],\n+    \"name\": \"bathroom\"\n+  },\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"4\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"5\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"6\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"3\",\n+        \"isOpen\": \"DOOR_OPEN\"\n+      }\n+    ],\n+    \"name\": \"bedroom\"\n+  },\n+  {\n+    \"lights\": [\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"7\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"8\"\n+      },\n+      {\n+        \"isOn\": \"LIGHT_OFF\",\n+        \"id\": \"9\"\n+      }\n+    ],\n+    \"doors\": [\n+      {\n+        \"id\": \"4\",\n+        \"isOpen\": \"DOOR_CLOSED\"\n+      }\n+    ],\n+    \"name\": \"hall\"\n+  }\n+]\n }\n\\ No newline at end of file"
  },
  {
    "sha": "2af4feef0221f3dfda9d6f0f3094047d69cbb00f",
    "filename": "src/main/java/com/coolcompany/smarthome/events/CCSensorEvent.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/com/coolcompany/smarthome/events/CCSensorEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/com/coolcompany/smarthome/events/CCSensorEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/com/coolcompany/smarthome/events/CCSensorEvent.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,29 @@\n+package com.coolcompany.smarthome.events;\n+\n+/**\n+ * Available event types in library v3.7.1:\n+ *    \"LightIsOn\", \"LightIsOff\", \"DoorIsOpen\", \"DoorIsClosed\", \"DoorIsLocked\", \"DoorIsUnlocked\"\n+ */\n+public class CCSensorEvent {\n+    private final String eventType;\n+    private final String objectId;\n+\n+    /**\n+     * Default constructor\n+     * @param eventType - defines type of event.\n+     * @param objectId - id of the object which fired the event (door/lightswitch)\n+     */\n+    public CCSensorEvent(String eventType, String objectId) {\n+        this.eventType = eventType;\n+        this.objectId = objectId;\n+    }\n+\n+    public String getEventType() {\n+        return eventType;\n+    }\n+\n+    public String getObjectId() {\n+        return objectId;\n+    }\n+\n+}"
  },
  {
    "sha": "390fc12595a73a571afaab74a599391caf97a158",
    "filename": "src/main/java/com/coolcompany/smarthome/events/EventHandler.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/com/coolcompany/smarthome/events/EventHandler.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/com/coolcompany/smarthome/events/EventHandler.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/com/coolcompany/smarthome/events/EventHandler.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,7 @@\n+package com.coolcompany.smarthome.events;\n+\n+public interface EventHandler {\n+\n+    void handleEvent(CCSensorEvent event);\n+\n+}"
  },
  {
    "sha": "13a4231a38b8fd47bc970a6bdcfeba7c3ba41492",
    "filename": "src/main/java/com/coolcompany/smarthome/events/SensorEventsManager.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/com/coolcompany/smarthome/events/SensorEventsManager.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/com/coolcompany/smarthome/events/SensorEventsManager.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/com/coolcompany/smarthome/events/SensorEventsManager.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,34 @@\n+package com.coolcompany.smarthome.events;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+\n+public class SensorEventsManager {\n+    private final String[] eventTypes = new String[] { \"LightIsOn\", \"LightIsOff\", \"DoorIsOpen\", \"DoorIsClosed\", \"DoorIsLocked\", \"DoorIsUnlocked\" };\n+\n+    private Collection<EventHandler> handlers = new ArrayList<>();\n+\n+    public void registerEventHandler(EventHandler handler) {\n+        this.handlers.add(handler);\n+    }\n+\n+    public void start() {\n+        CCSensorEvent event = getNextSensorEvent();\n+        while (event != null) {\n+            for (EventHandler handler : handlers) {\n+                handler.handleEvent(event);\n+            }\n+            event = getNextSensorEvent();\n+        }\n+    }\n+\n+    private CCSensorEvent getNextSensorEvent() {\n+        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n+        if (Math.random() < 0.05) return null; // null means end of event stream\n+        String sensorEventType = eventTypes[(int) (6 * Math.random())];\n+        String objectId = \"\" + ((int) (10 * Math.random()));\n+        return new CCSensorEvent(sensorEventType, objectId);\n+    }\n+\n+\n+}"
  },
  {
    "sha": "85bbf46337e8dee5ee5aaf5924b16b7f968fa76f",
    "filename": "src/main/java/com/coolcompany/smarthome/sample/Sample.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/com/coolcompany/smarthome/sample/Sample.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/com/coolcompany/smarthome/sample/Sample.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/com/coolcompany/smarthome/sample/Sample.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,14 @@\n+package com.coolcompany.smarthome.sample;\n+\n+import com.coolcompany.smarthome.events.SensorEventsManager;\n+\n+public class Sample {\n+\n+    public static void main(String[] args) {\n+        SensorEventsManager sensorEventsManager = new SensorEventsManager();\n+        sensorEventsManager.registerEventHandler(event -> {\n+            System.out.println(\"Event type [\" + event.getEventType() + \"] from object with id=\" + event.getObjectId() + \"]\");\n+        });\n+        sensorEventsManager.start();\n+    }\n+}"
  },
  {
    "sha": "d38d5ef4a7dfd16f957a5046cf0191219488a581",
    "filename": "src/main/java/ru/sbt/mipt/oop/Action.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Action.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Action.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Action.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface Action {\n+\n+    void execute(Object obj);\n+\n+}"
  },
  {
    "sha": "30e892b747f4dc0d0fb531418b2526e9cf9cedcd",
    "filename": "src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Actionable.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface Actionable {\n+    void execute(Action action);\n+}"
  },
  {
    "sha": "95e6cd3c191432e699072b2318baac9f16a5950f",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/Alarm.java",
    "status": "added",
    "additions": 151,
    "deletions": 0,
    "changes": 151,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Alarm/Alarm.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Alarm/Alarm.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/Alarm.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,151 @@\n+package ru.sbt.mipt.oop.Alarm;\n+\n+import ru.sbt.mipt.oop.Action;\n+import ru.sbt.mipt.oop.SmartHome;\n+\n+public class Alarm {\n+    private AlarmState state;\n+    private final int timeSleep;\n+    private final String id;\n+    private final String code;\n+\n+\n+    public Alarm (String code) {\n+        this.id = \"id\";\n+        this.timeSleep = 5;\n+        this.state = new AlarmDeactivated(this);\n+        this.code = code;\n+    }\n+\n+    public Alarm( int timeSleep, String id, String code) {\n+        this.timeSleep = timeSleep;\n+        this.id = id;\n+        this.state = new AlarmDeactivated(this);\n+        this.code = code;\n+    }\n+\n+    public boolean isActivated(){\n+        return this.getState() instanceof AlarmActivated ;\n+    }\n+    public void trigger(){\n+        this.setState(new AlarmActiveState(this));\n+    }\n+    public boolean isDeactivated(){\n+        return  this.getState() instanceof AlarmDeactivated;\n+    }\n+    public boolean isInDanger(){\n+        return this.getState() instanceof AlarmActiveState;\n+    }\n+    public void activate() {\n+        state.activate();\n+    }\n+\n+    public void deactivate(String code) {\n+        state.deactivate(code);\n+    }\n+\n+    void setState(AlarmState state) {\n+        this.state = state;\n+    }\n+\n+    public void danger() {\n+        state.danger();\n+    }\n+\n+    public boolean checkCode(String code) {\n+        return code.equals(this.code);\n+    }\n+\n+    public void execute(Action action) {\n+        action.execute(this);\n+    }\n+\n+    public AlarmState getState() {\n+        return state;\n+    }\n+\n+\n+    private class AlarmDeactivated implements AlarmState {\n+        Alarm alarm;\n+\n+        public AlarmDeactivated(Alarm alarm) {\n+            this.alarm = alarm;\n+        }\n+\n+        @Override\n+        public void activate() {\n+            System.out.println(\"Activate alarm\");\n+            alarm.setState(new AlarmActivated(alarm));\n+        }\n+\n+        @Override\n+        public void deactivate(String code) {\n+            System.out.println(\"Try deactivate deactivated alarm\");\n+        }\n+\n+        @Override\n+        public void danger() {\n+            alarm.setState(new AlarmActiveState(alarm));\n+        }\n+\n+    }\n+\n+    private class AlarmActiveState implements AlarmState {\n+        Alarm alarm;\n+\n+        public AlarmActiveState(Alarm alarm) {\n+            this.alarm = alarm;\n+        }\n+\n+        @Override\n+        public void activate() {\n+            System.out.println(\"Try activate Alarm in Active State\");\n+        }\n+\n+        @Override\n+        public void deactivate(String code) {\n+            if (alarm.checkCode(code)) {\n+                System.out.println(\"Deactivate ActiveState with right code\");\n+                alarm.setState(new AlarmDeactivated(alarm));\n+            } else {\n+                System.out.println(\"Wrong code\");\n+            }\n+        }\n+\n+        @Override\n+        public void danger() {\n+        }\n+\n+    }\n+\n+    private class AlarmActivated implements AlarmState {\n+        private final Alarm alarm;\n+\n+        public AlarmActivated(Alarm alarm) {\n+            this.alarm = alarm;\n+        }\n+\n+        @Override\n+        public void activate() {\n+            System.out.println(\"Try activate activated alarm\");\n+        }\n+\n+        @Override\n+        public void deactivate(String code) {\n+            System.out.println(\"Deactivate activated alarm with code \" + code);\n+            if (alarm.checkCode(code)) {\n+                alarm.setState(new AlarmDeactivated(alarm));\n+            } else {\n+                alarm.setState(new AlarmActiveState(alarm));\n+                alarm.danger();\n+            }\n+        }\n+\n+        @Override\n+        public void danger() {\n+            alarm.setState(new AlarmActiveState(alarm));\n+        }\n+\n+    }\n+\n+}"
  },
  {
    "sha": "c57c34f03bbbd56da2281d8bdc6bb4f427a17870",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/AlarmState.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmState.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmState.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmState.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,10 @@\n+package ru.sbt.mipt.oop.Alarm;\n+\n+public interface AlarmState {\n+    void activate();\n+\n+    void deactivate(String code);\n+\n+    void danger();\n+\n+}"
  },
  {
    "sha": "78fd8b05e8069631067b3455a512cb5f299ed948",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/AlarmTest.java",
    "status": "added",
    "additions": 100,
    "deletions": 0,
    "changes": 100,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmTest.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmTest.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/AlarmTest.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,100 @@\n+//package ru.sbt.mipt.oop.Alarm;\n+//\n+//import org.junit.jupiter.api.Test;\n+//import ru.sbt.mipt.oop.Room;\n+//import ru.sbt.mipt.oop.RoomObjects.Door;\n+//import ru.sbt.mipt.oop.RoomObjects.Light;\n+//import ru.sbt.mipt.oop.SmartHome;\n+//\n+//import java.util.Arrays;\n+//import java.util.List;\n+//\n+//import static org.junit.jupiter.api.Assertions.assertEquals;\n+//import static org.junit.jupiter.api.Assertions.assertTrue;\n+//\n+//class AlarmTest {\n+//    Light light1 = new Light(\"1\", \"LIGHT_OFF\");\n+//    Light light2 = new Light(\"2\", \"LIGHT_ON\");\n+//    Door door1 = new Door(\"3\", \"DOOR_OPEN\");\n+//    List<Door> doors = Arrays.asList(door1);\n+//    List<Light> lights = Arrays.asList(light1, light2);\n+//    Room room = new Room(lights, doors, \"hall\");\n+//    List<Room> roomList = Arrays.asList(room);\n+//    SmartHome smartHome = new SmartHome(roomList);\n+//\n+//\n+//    @Test\n+//    void AlarmStandardCreationTypeOfAlarm() {\n+//        Alarm al = new Alarm(smartHome);\n+//        assertTrue(al.getState() instanceof AlarmDeactivated);\n+//    }\n+//\n+//\n+//    @Test\n+//    void DeactivatedAlarmAfterActivateBecomeActivated() {\n+//        Alarm alarm = new Alarm(smartHome, \"123\");\n+//        alarm.activate();\n+//        assertTrue(alarm.getState() instanceof AlarmActivated);\n+//    }\n+//\n+//    @Test\n+//    void ActivatedAlarmAfterActivateDoesnotChange() {\n+//        Alarm alarm = new Alarm(smartHome, \"123\");\n+//        alarm.activate();\n+//        AlarmState ala = alarm.getState();\n+//        alarm.activate();\n+//        assertEquals(ala, alarm.getState());\n+//    }\n+//\n+//    @Test\n+//    void ActivatedAlarmAfterRightDeactivateBecomeDeactivatedAlarm() {\n+//        Alarm alarm = new Alarm(smartHome, \"123\");\n+//        alarm.activate();\n+//        alarm.deactivate(\"123\");\n+//        assertTrue(alarm.getState() instanceof AlarmDeactivated);\n+//    }\n+//\n+//    @Test\n+//    void ActivatedAlarmAfterNotRightDeactivateBecomeActiveStateAlarm() {\n+//        Alarm alarm = new Alarm(smartHome, \"123\");\n+//        alarm.activate();\n+//        alarm.deactivate(\"1236\");\n+//        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+//    }\n+//\n+//    @Test\n+//    void ActiveStateAlarmDoesnotChangesAfterDeactivateAndActivate() {\n+//        Alarm alarm = new Alarm(smartHome, \"123\");\n+//        alarm.activate();\n+//        alarm.deactivate(\"1236\");\n+//        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+//        alarm.deactivate(\"123\");\n+//        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+//        alarm.deactivate(\"1236\");\n+//        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+//        alarm.activate();\n+//        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+//        alarm.activate();\n+//        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+//    }\n+//\n+//    @Test\n+//    void TryDeactivateAlarmActiveStateWithRightCode() {\n+//        Alarm alarm = new Alarm(smartHome, \"123\");\n+//        alarm.danger();\n+//        alarm.deactivate(\"123\");\n+//        assertTrue(alarm.getState() instanceof AlarmDeactivated);\n+//    }\n+//\n+//    @Test\n+//    void TryDeactivateAlarmActiveStateWithWrongCode() {\n+//        Alarm alarm = new Alarm(smartHome, \"123\");\n+//        alarm.danger();\n+//        alarm.deactivate(\"213\");\n+//        assertTrue(alarm.getState() instanceof AlarmActiveState);\n+//        alarm.deactivate(\"123\");\n+//        assertTrue(alarm.getState() instanceof AlarmDeactivated);\n+//    }\n+//\n+//\n+//}\n\\ No newline at end of file"
  },
  {
    "sha": "7c223433f965f7eda5130cdec2ea28aa015f1015",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/SMSSender.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Alarm/SMSSender.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Alarm/SMSSender.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/SMSSender.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.sbt.mipt.oop.Alarm;\n+\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class SMSSender  implements Sender{\n+    @Override\n+    public void send(String str){\n+        System.out.println(\"Send message: \"+ str);\n+    }\n+}"
  },
  {
    "sha": "326177e8b3b06318851d1074ae9cf5c739b32cc6",
    "filename": "src/main/java/ru/sbt/mipt/oop/Alarm/Sender.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Alarm/Sender.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Alarm/Sender.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Alarm/Sender.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop.Alarm;\n+\n+public interface Sender {\n+    void send(String message);\n+}"
  },
  {
    "sha": "8833e48b5f1ab3c32d5005634764277f5aac257d",
    "filename": "src/main/java/ru/sbt/mipt/oop/Application.java",
    "status": "modified",
    "additions": 15,
    "deletions": 69,
    "changes": 84,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Application.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Application.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Application.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -1,80 +1,26 @@\n package ru.sbt.mipt.oop;\n \n-import com.google.gson.Gson;\n+import com.coolcompany.smarthome.events.SensorEventsManager;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n+import org.springframework.context.support.AbstractApplicationContext;\n+import ru.sbt.mipt.oop.Alarm.SMSSender;\n+import ru.sbt.mipt.oop.Alarm.Sender;\n+import ru.sbt.mipt.oop.EventHandlers.*;\n+import ru.sbt.mipt.oop.adapters.CoolCompanyAdapter;\n \n import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-\n-import static ru.sbt.mipt.oop.SensorEventType.*;\n+import java.util.*;\n \n public class Application {\n \n     public static void main(String... args) throws IOException {\n-        // считываем состояние дома из файла\n-        Gson gson = new Gson();\n-        String json = new String(Files.readAllBytes(Paths.get(\"smart-home-1.js\")));\n-        SmartHome smartHome = gson.fromJson(json, SmartHome.class);\n-        // начинаем цикл обработки событий\n-        SensorEvent event = getNextSensorEvent();\n-        while (event != null) {\n-            System.out.println(\"Got event: \" + event);\n-            if (event.getType() == LIGHT_ON || event.getType() == LIGHT_OFF) {\n-                // событие от источника света\n-                for (Room room : smartHome.getRooms()) {\n-                    for (Light light : room.getLights()) {\n-                        if (light.getId().equals(event.getObjectId())) {\n-                            if (event.getType() == LIGHT_ON) {\n-                                light.setOn(true);\n-                                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned on.\");\n-                            } else {\n-                                light.setOn(false);\n-                                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            if (event.getType() == DOOR_OPEN || event.getType() == DOOR_CLOSED) {\n-                // событие от двери\n-                for (Room room : smartHome.getRooms()) {\n-                    for (Door door : room.getDoors()) {\n-                        if (door.getId().equals(event.getObjectId())) {\n-                            if (event.getType() == DOOR_OPEN) {\n-                                door.setOpen(true);\n-                                System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was opened.\");\n-                            } else {\n-                                door.setOpen(false);\n-                                System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was closed.\");\n-                                // если мы получили событие о закрытие двери в холле - это значит, что была закрыта входная дверь.\n-                                // в этом случае мы хотим автоматически выключить свет во всем доме (это же умный дом!)\n-                                if (room.getName().equals(\"hall\")) {\n-                                    for (Room homeRoom : smartHome.getRooms()) {\n-                                        for (Light light : homeRoom.getLights()) {\n-                                            light.setOn(false);\n-                                            SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\n-                                            sendCommand(command);\n-                                        }\n-                                    }\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            event = getNextSensorEvent();\n-        }\n-    }\n-\n-    private static void sendCommand(SensorCommand command) {\n-        System.out.println(\"Pretent we're sending command \" + command);\n+        AbstractApplicationContext context = new AnnotationConfigApplicationContext(SpringConfig.class);\n+        SensorEventsManager sensorEventsManager = context.getBean(SensorEventsManager.class);\n+        sensorEventsManager.start();\n     }\n \n-    private static SensorEvent getNextSensorEvent() {\n-        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n-        if (Math.random() < 0.05) return null; // null means end of event stream\n-        SensorEventType sensorEventType = SensorEventType.values()[(int) (4 * Math.random())];\n-        String objectId = \"\" + ((int) (10 * Math.random()));\n-        return new SensorEvent(sensorEventType, objectId);\n-    }\n }\n+\n+\n+"
  },
  {
    "sha": "27a864ef71ea8ba0463865ddb4808ea245b271ba",
    "filename": "src/main/java/ru/sbt/mipt/oop/CommandType.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/CommandType.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/CommandType.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/CommandType.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -1,5 +1,11 @@\n package ru.sbt.mipt.oop;\n \n public enum CommandType {\n-    LIGHT_OFF\n+    LIGHT_OFF {\n+        public boolean getState() {\n+            return false;\n+        }\n+    };\n+\n+    abstract boolean getState();\n }"
  },
  {
    "sha": "beb0cabe38c4d340e54fa312fa368e29fccb7ef8",
    "filename": "src/main/java/ru/sbt/mipt/oop/Door.java",
    "status": "removed",
    "additions": 0,
    "deletions": 19,
    "changes": 19,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662/src/main/java/ru/sbt/mipt/oop/Door.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662/src/main/java/ru/sbt/mipt/oop/Door.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Door.java?ref=49c4ee3cec4c9bb7d3a7ffeaa5d52a88885f8662",
    "patch": "@@ -1,19 +0,0 @@\n-package ru.sbt.mipt.oop;\n-\n-public class Door {\n-    private final String id;\n-    private boolean isOpen;\n-\n-    public Door(boolean isOpen, String id) {\n-        this.isOpen = isOpen;\n-        this.id = id;\n-    }\n-\n-    public String getId() {\n-        return id;\n-    }\n-\n-    public void setOpen(boolean open) {\n-        isOpen = open;\n-    }\n-}"
  },
  {
    "sha": "e9d5319d6220ca50bfd2ccc15378b23422c50e5d",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventGenerator.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventGenerator.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventGenerator.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventGenerator.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.sbt.mipt.oop;\n+\n+import ru.sbt.mipt.oop.Events.*;\n+\n+class EventGenerator implements EventGenerators {\n+    public Event generateEvent() {\n+        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n+        if (Math.random() < 0.05) return null; // null means end of event stream\n+        String objectId = \"\" + ((int) (10 * Math.random()));\n+        Event[] events = {new DoorEvent(objectId, States.DOOR_CLOSED), new DoorEvent(objectId, States.DOOR_OPEN),\n+                new LightEvent(objectId, States.LIGHT_OFF), new LightEvent(objectId, States.LIGHT_ON),\n+                new AlarmEvent(\"alarm\", States.ALARM_ACTIVATE, \"1234\"),\n+                new AlarmEvent(\"alarm\", States.ALARM_DEACTIVATE, \"12345\"),\n+                new AlarmEvent(\"alarm\", States.ALARM_ACTIVATE, \"123\"),\n+                new AlarmEvent(\"alarm\", States.ALARM_DEACTIVATE, \"1235\"),};\n+        Event event = events[(int) (6 * Math.random())];\n+\n+        return event;\n+    }\n+}"
  },
  {
    "sha": "9c79276139a1e8619c55a61bbcab7f32f09da29b",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventGenerators.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventGenerators.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventGenerators.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventGenerators.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop;\n+\n+import ru.sbt.mipt.oop.Events.Event;\n+\n+public interface EventGenerators {\n+    Event generateEvent();\n+}"
  },
  {
    "sha": "185b17c23f81b5ef19ae3650b0e6ccf3a1058151",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/AlarmEventHandlerMy.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/AlarmEventHandlerMy.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/AlarmEventHandlerMy.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/AlarmEventHandlerMy.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,32 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.Alarm.Alarm;\n+import ru.sbt.mipt.oop.Events.AlarmEvent;\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.SmartHome;\n+import ru.sbt.mipt.oop.States;\n+\n+public class AlarmEventHandlerMy implements EventHandlerMy {\n+    private SmartHome smartHome;\n+\n+    public AlarmEventHandlerMy(SmartHome smartHome) {\n+        this.smartHome = smartHome;\n+    }\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        smartHome.execute(obj -> {\n+            if (obj instanceof Alarm) {\n+                if (event instanceof AlarmEvent) {\n+                    if (event.getState().equals(States.ALARM_ACTIVATE)) {\n+                        ((Alarm) obj).activate();\n+                    } else if (event.getState().equals(States.ALARM_DEACTIVATE)) {\n+                        ((Alarm) obj).deactivate(((AlarmEvent) event).getCode());\n+                    }\n+                }\n+            }\n+\n+        });\n+    }\n+\n+}"
  },
  {
    "sha": "a3560d96b8dc10f5249a08404403829ee475967c",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/DoorEventHandlerMy.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/DoorEventHandlerMy.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/DoorEventHandlerMy.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/DoorEventHandlerMy.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,32 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.Events.DoorEvent;\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.Room;\n+import ru.sbt.mipt.oop.RoomObjects.Door;\n+import ru.sbt.mipt.oop.SmartHome;\n+\n+public class DoorEventHandlerMy implements EventHandlerMy {\n+    SmartHome smartHome;\n+\n+    public DoorEventHandlerMy(SmartHome smartHome) {\n+        this.smartHome = smartHome;\n+    }\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (event instanceof DoorEvent) {\n+            smartHome.execute(objectUp -> {\n+                if (objectUp instanceof Room) {\n+                    ((Room) objectUp).execute(object -> {\n+                        if ((object instanceof Door) && (((Door) object).getId().equals(event.getObjectId()))) {\n+                            ((Door) object).setState(event.getState());\n+                            String s = String.format(\"Door %s in room %s %s\", ((Door) object).getId(), ((Room) objectUp).getName(), ((Door) object).getState().getString());\n+                            System.out.println(s);\n+                        }\n+                    });\n+                }\n+            });\n+        }\n+    }\n+}"
  },
  {
    "sha": "fe559a172e80becd102bdf30c4ad5fb4307213d6",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMy.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMy.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMy.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventHandlerMy.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.Events.Event;\n+\n+public interface EventHandlerMy {\n+    void handleEvent(Event event);\n+}"
  },
  {
    "sha": "79c0f617931960b3b7936d3370240de270f00fd5",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/EventProcessor.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventProcessor.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventProcessor.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventProcessor.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,25 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+\n+import ru.sbt.mipt.oop.Events.Event;\n+\n+import java.util.List;\n+\n+public class EventProcessor {\n+\n+    List<EventHandlerMy> eventHandlerMIES;\n+\n+\n+    public EventProcessor(List eventHandlers) {\n+        this.eventHandlerMIES = eventHandlers;\n+    }\n+\n+    public void handleEvent(Event event) {\n+        System.out.println(\"Got event: \" + event);\n+         eventHandlerMIES.forEach(object -> {\n+                object.handleEvent(event);\n+            });\n+\n+    }\n+\n+}"
  },
  {
    "sha": "361f9c15b73b29d10f10d4a14f77e87a26281d93",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/EventProcessorTest.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventProcessorTest.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventProcessorTest.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/EventProcessorTest.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,45 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import org.junit.Assert;\n+import ru.sbt.mipt.oop.Alarm.SMSSender;\n+import ru.sbt.mipt.oop.Alarm.Sender;\n+import ru.sbt.mipt.oop.Events.*;\n+import ru.sbt.mipt.oop.Room;\n+import ru.sbt.mipt.oop.RoomObjects.Door;\n+import ru.sbt.mipt.oop.RoomObjects.Light;\n+import ru.sbt.mipt.oop.SmartHome;\n+import ru.sbt.mipt.oop.States;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+class EventProcessorTest {\n+\n+    Light light1 = new Light(\"1\", \"LIGHT_OFF\");\n+    Sender sender = new SMSSender();\n+    Light light2 = new Light(\"2\", \"LIGHT_ON\");\n+    Door door1 = new Door(\"3\", \"DOOR_OPEN\");\n+    List<Door> doors = Arrays.asList(door1);\n+    List<Light> lights = Arrays.asList(light1, light2);\n+    Room room = new Room(lights, doors, \"hall\");\n+    Event event2 = new DoorEvent(\"3\", States.DOOR_CLOSED);\n+    Event event1 = new LightEvent(\"1\", States.LIGHT_ON);\n+    List<Room> roomList = Arrays.asList(room);\n+    SmartHome smartHome = new SmartHome(roomList);\n+    EventProcessor eventProcessor = new EventProcessor(new ArrayList<EventHandlerMy>(Arrays.asList(new SecurityProcessorDecorator(new LightEventHandlerMy(smartHome), sender, smartHome ),\n+            new SecurityProcessorDecorator(new DoorEventHandlerMy(smartHome), sender, smartHome ),\n+            new SecurityProcessorDecorator(new HallDoorEventHandlerMy(smartHome), sender, smartHome ),\n+            new AlarmEventHandlerMy(smartHome))));\n+\n+\n+    @org.junit.jupiter.api.Test\n+    void handleEvent() {\n+        eventProcessor.handleEvent(event1);\n+        Assert.assertEquals(light1.getState(), States.LIGHT_ON);\n+        eventProcessor.handleEvent(event2);\n+        Assert.assertEquals(door1.getState(), States.DOOR_CLOSED);\n+        Assert.assertEquals(light1.getState(), States.LIGHT_OFF);\n+        Assert.assertEquals(light2.getState(), States.LIGHT_OFF);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c30159746f6a7f852617f369fc48b5c45c85ad8b",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/HallDoorEventHandlerMy.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/HallDoorEventHandlerMy.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/HallDoorEventHandlerMy.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/HallDoorEventHandlerMy.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,36 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.Events.DoorEvent;\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.Room;\n+import ru.sbt.mipt.oop.RoomObjects.Door;\n+import ru.sbt.mipt.oop.RoomObjects.Light;\n+import ru.sbt.mipt.oop.SmartHome;\n+import ru.sbt.mipt.oop.States;\n+\n+public class HallDoorEventHandlerMy implements EventHandlerMy {\n+    SmartHome smartHome;\n+\n+    public HallDoorEventHandlerMy(SmartHome smartHome) {\n+        this.smartHome = smartHome;\n+    }\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if ((event instanceof DoorEvent) && (event.getType().equals(\"DOOR_CLOSE\"))) {\n+            smartHome.execute(objectUp -> {\n+                if ((objectUp instanceof Room)) {\n+                    ((Room) objectUp).execute(object -> {\n+                        if ((object instanceof Door) && (((Door) object).getId().equals(event.getObjectId())) && (((Room) objectUp).getName().equals(\"hall\"))) {\n+                            smartHome.execute(obj -> {\n+                                if (obj instanceof Light) {\n+                                    ((Light) obj).setState(States.LIGHT_OFF);\n+                                }\n+                            });\n+                        }\n+                    });\n+                }\n+            });\n+        }\n+    }\n+}"
  },
  {
    "sha": "0d433ff0df753fbad4d00672ae9ca2618caa26dd",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/LightEventHandlerMy.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/LightEventHandlerMy.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/LightEventHandlerMy.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/LightEventHandlerMy.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,32 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.Events.LightEvent;\n+import ru.sbt.mipt.oop.Room;\n+import ru.sbt.mipt.oop.RoomObjects.Light;\n+import ru.sbt.mipt.oop.SmartHome;\n+\n+public class LightEventHandlerMy implements EventHandlerMy {\n+    SmartHome smartHome;\n+\n+    public LightEventHandlerMy(SmartHome smartHome) {\n+        this.smartHome = smartHome;\n+    }\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        if (event instanceof LightEvent) {\n+            smartHome.execute(objectUp -> {\n+                if (objectUp instanceof Room) {\n+                    ((Room) objectUp).execute(object -> {\n+                        if ((object instanceof Light) && (((Light) object).getId().equals(event.getObjectId()))) {\n+                            ((Light) object).setState(event.getState());\n+                            String s = String.format(\"Light %s in room %s %s\", ((Light) object).getId(), ((Room) objectUp).getName(), ((Light) object).getState().getString());\n+                            System.out.println(s);\n+                        }\n+                    });\n+                }\n+            });\n+        }\n+    }\n+}"
  },
  {
    "sha": "e590417e96234f8014c5ba2c1fcbf61ef7ec75b6",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandlers/SecurityProcessorDecorator.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/SecurityProcessorDecorator.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/EventHandlers/SecurityProcessorDecorator.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/EventHandlers/SecurityProcessorDecorator.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,35 @@\n+package ru.sbt.mipt.oop.EventHandlers;\n+\n+import ru.sbt.mipt.oop.Alarm.*;\n+import ru.sbt.mipt.oop.Events.AlarmEvent;\n+import ru.sbt.mipt.oop.Events.Event;\n+import ru.sbt.mipt.oop.SmartHome;\n+\n+public class SecurityProcessorDecorator implements EventHandlerMy {\n+    private final EventHandlerMy wrappeeProcessor;\n+    private final Sender messageSender;\n+    private final SmartHome smartHome;\n+\n+    public SecurityProcessorDecorator(EventHandlerMy wrappeeProcessor, Sender messageSender,\n+                                      SmartHome smartHome) {\n+        this.wrappeeProcessor = wrappeeProcessor;\n+        this.messageSender = messageSender;\n+        this.smartHome = smartHome;\n+    }\n+\n+    @Override\n+    public void handleEvent(Event event) {\n+        Alarm alarm = smartHome.getAlarm();\n+        if (alarm.isDeactivated()||(alarm.isInDanger() && event instanceof AlarmEvent)) {\n+            wrappeeProcessor.handleEvent(event);\n+        }\n+\n+        if (alarm.isActivated() || alarm.isInDanger()){\n+            messageSender.send(\"Try change state of home; \" + event);\n+        }\n+\n+        if (alarm.isActivated()){\n+            alarm.trigger();\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b9e04b9b689bae9d1af972084e7dfb4f1b373471",
    "filename": "src/main/java/ru/sbt/mipt/oop/Events/AlarmEvent.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Events/AlarmEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Events/AlarmEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Events/AlarmEvent.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,43 @@\n+package ru.sbt.mipt.oop.Events;\n+\n+import ru.sbt.mipt.oop.States;\n+\n+public class AlarmEvent implements Event {\n+    private States type;\n+    private String code;\n+    private String objectId;\n+\n+    public AlarmEvent(String objectId, States type, String code) {\n+        this.objectId = objectId;\n+        this.type = type;\n+        this.code = code;\n+    }\n+\n+    public String getCode() {\n+        return code;\n+    }\n+\n+    @Override\n+    public String getObjectId() {\n+        return objectId;\n+    }\n+\n+    @Override\n+    public String getType() {\n+        return type.toString();\n+    }\n+\n+    @Override\n+    public States getState() {\n+        return type;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"SensorEvent{\" +\n+                \"type=\" + this.getType() +\n+                \", objectId='\" + this.getObjectId() + '\\'' +\n+                '}';\n+    }\n+\n+}"
  },
  {
    "sha": "38db98f50ca319fd38cd7c83a22c02ba3262f969",
    "filename": "src/main/java/ru/sbt/mipt/oop/Events/DoorEvent.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Events/DoorEvent.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Events/DoorEvent.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Events/DoorEvent.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,37 @@\n+package ru.sbt.mipt.oop.Events;\n+\n+import ru.sbt.mipt.oop.States;\n+\n+public class DoorEvent implements Event {\n+    private States type;\n+    private String objectId;\n+\n+    public DoorEvent(String objectId, States type) {\n+        this.objectId = objectId;\n+        this.type = type;\n+    }\n+\n+    @Override\n+    public States getState() {\n+        return type;\n+    }\n+\n+    @Override\n+    public String getObjectId() {\n+        return objectId;\n+    }\n+\n+    @Override\n+    public String getType() {\n+        return type.toString();\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"SensorEvent{\" +\n+                \"type=\" + this.getType() +\n+                \", objectId='\" + this.getObjectId() + '\\'' +\n+                '}';\n+    }\n+\n+}"
  },
  {
    "sha": "a57f3b4021de9a41f480ab946cc622ce8ccc0b87",
    "filename": "src/main/java/ru/sbt/mipt/oop/Events/Event.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/timurjava/smart-home-2020/blob/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Events/Event.java",
    "raw_url": "https://github.com/timurjava/smart-home-2020/raw/f023ae61f8340c0cd4397a66c726e791f461e6d7/src/main/java/ru/sbt/mipt/oop/Events/Event.java",
    "contents_url": "https://api.github.com/repos/timurjava/smart-home-2020/contents/src/main/java/ru/sbt/mipt/oop/Events/Event.java?ref=f023ae61f8340c0cd4397a66c726e791f461e6d7",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.sbt.mipt.oop.Events;\n+\n+import ru.sbt.mipt.oop.States;\n+\n+public interface Event {\n+\n+\n+    String getObjectId();\n+\n+    String getType();\n+\n+    States getState();\n+\n+}"
  }
]
