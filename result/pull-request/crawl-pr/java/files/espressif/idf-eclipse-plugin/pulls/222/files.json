[
  {
    "sha": "6ff41a0b83a7eecf367fb53306d10ad59134b3ce",
    "filename": "bundles/com.espressif.idf.debug.gdbjtag.openocd/build.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/espressif/idf-eclipse-plugin/blob/d723544afd5d982c602912e942e0b862c7122f50/bundles/com.espressif.idf.debug.gdbjtag.openocd/build.properties",
    "raw_url": "https://github.com/espressif/idf-eclipse-plugin/raw/d723544afd5d982c602912e942e0b862c7122f50/bundles/com.espressif.idf.debug.gdbjtag.openocd/build.properties",
    "contents_url": "https://api.github.com/repos/espressif/idf-eclipse-plugin/contents/bundles/com.espressif.idf.debug.gdbjtag.openocd/build.properties?ref=d723544afd5d982c602912e942e0b862c7122f50",
    "patch": "@@ -31,4 +31,5 @@ bin.includes = META-INF/,\\\n                about.html,\\\n                about.ini,\\\n                about.mappings,\\\n-               about.properties\n+               about.properties,\\\n+               lib/"
  },
  {
    "sha": "fde668167a777a8d3f9b635d975049c3db01506d",
    "filename": "bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/Activator.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/espressif/idf-eclipse-plugin/blob/d723544afd5d982c602912e942e0b862c7122f50/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/Activator.java",
    "raw_url": "https://github.com/espressif/idf-eclipse-plugin/raw/d723544afd5d982c602912e942e0b862c7122f50/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/Activator.java",
    "contents_url": "https://api.github.com/repos/espressif/idf-eclipse-plugin/contents/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/Activator.java?ref=d723544afd5d982c602912e942e0b862c7122f50",
    "patch": "@@ -15,6 +15,7 @@\n package com.espressif.idf.debug.gdbjtag.openocd;\n \n import org.osgi.framework.BundleContext;\n+import org.osgi.framework.ServiceReference;\n \n import com.espressif.idf.debug.gdbjtag.openocd.preferences.DefaultPreferences;\n import com.espressif.idf.debug.gdbjtag.openocd.preferences.PersistentPreferences;\n@@ -56,10 +57,12 @@ public Activator() {\n \n \t// ------------------------------------------------------------------------\n \n+\t@Override\n \tpublic void start(BundleContext context) throws Exception {\n \t\tsuper.start(context);\n \t}\n \n+\t@Override\n \tpublic void stop(BundleContext context) throws Exception {\n \t\tsuper.stop(context);\n \t}\n@@ -80,5 +83,12 @@ public PersistentPreferences getPersistentPreferences() {\n \t\treturn fPersistentPreferences;\n \t}\n \n+\tpublic static <T> T getService(Class<T> service)\n+\t{\n+\t\tBundleContext context = fgInstance.getBundle().getBundleContext();\n+\t\tServiceReference<T> ref = context.getServiceReference(service);\n+\t\treturn ref != null ? context.getService(ref) : null;\n+\t}\n+\n \t// ------------------------------------------------------------------------\n }"
  },
  {
    "sha": "acd71d3d41391bd76e86d40b442429da57210efc",
    "filename": "bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/ui/TabDebugger.java",
    "status": "modified",
    "additions": 119,
    "deletions": 3,
    "changes": 122,
    "blob_url": "https://github.com/espressif/idf-eclipse-plugin/blob/d723544afd5d982c602912e942e0b862c7122f50/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/ui/TabDebugger.java",
    "raw_url": "https://github.com/espressif/idf-eclipse-plugin/raw/d723544afd5d982c602912e942e0b862c7122f50/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/ui/TabDebugger.java",
    "contents_url": "https://api.github.com/repos/espressif/idf-eclipse-plugin/contents/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/ui/TabDebugger.java?ref=d723544afd5d982c602912e942e0b862c7122f50",
    "patch": "@@ -25,6 +25,7 @@\n package com.espressif.idf.debug.gdbjtag.openocd.ui;\n \n import java.io.File;\n+import java.util.Map;\n \n import org.eclipse.cdt.debug.gdbjtag.core.IGDBJtagConstants;\n import org.eclipse.cdt.debug.gdbjtag.ui.GDBJtagImages;\n@@ -36,6 +37,7 @@\n import org.eclipse.debug.ui.AbstractLaunchConfigurationTab;\n import org.eclipse.debug.ui.StringVariableSelectionDialog;\n import org.eclipse.jface.window.Window;\n+import org.eclipse.launchbar.core.ILaunchBarManager;\n import org.eclipse.swt.SWT;\n import org.eclipse.swt.events.ModifyEvent;\n import org.eclipse.swt.events.ModifyListener;\n@@ -47,14 +49,18 @@\n import org.eclipse.swt.layout.GridData;\n import org.eclipse.swt.layout.GridLayout;\n import org.eclipse.swt.widgets.Button;\n+import org.eclipse.swt.widgets.Combo;\n import org.eclipse.swt.widgets.Composite;\n import org.eclipse.swt.widgets.FileDialog;\n import org.eclipse.swt.widgets.Group;\n import org.eclipse.swt.widgets.Label;\n import org.eclipse.swt.widgets.Link;\n import org.eclipse.swt.widgets.Text;\n import org.eclipse.ui.dialogs.PreferencesUtil;\n+import org.json.simple.JSONArray;\n \n+import com.espressif.idf.core.IDFEnvironmentVariables;\n+import com.espressif.idf.core.logging.Logger;\n import com.espressif.idf.core.util.IDFUtil;\n import com.espressif.idf.core.util.StringUtil;\n import com.espressif.idf.debug.gdbjtag.openocd.Activator;\n@@ -65,6 +71,7 @@\n import com.espressif.idf.debug.gdbjtag.openocd.ui.preferences.GlobalMcuPage;\n import com.espressif.idf.debug.gdbjtag.openocd.ui.preferences.WorkspaceMcuPage;\n import com.espressif.idf.debug.gdbjtag.openocd.ui.properties.ProjectMcuPage;\n+import com.espressif.idf.debug.gdbjtag.openocd.utils.EspConfigParser;\n \n import ilg.gnumcueclipse.core.EclipseUtils;\n \n@@ -77,7 +84,7 @@\n \n \tprivate static final String TAB_NAME = \"Debugger\";\n \tprivate static final String TAB_ID = Activator.PLUGIN_ID + \".ui.debuggertab\";\n-\n+\tprivate static final String EMPTY_CONFIG_OPTIONS = \"-s ${openocd_path}/share/openocd/scripts\";\n \t// ------------------------------------------------------------------------\n \n \tprivate ILaunchConfiguration fConfiguration;\n@@ -97,6 +104,11 @@\n \tprivate Button fDoGdbServerAllocateConsole;\n \tprivate Button fDoGdbServerAllocateTelnetConsole;\n \n+\tprivate Combo fFlashVoltage;\n+\tprivate Combo fTarget;\n+\tprivate Combo fTargetName;\n+\tprivate Map<String, JSONArray> boardConfigsMap;\n+\n \tprivate Button fDoStartGdbClient;\n \tprivate Text fGdbClientExecutable;\n \tprivate Button fGdbClientBrowseButton;\n@@ -146,13 +158,12 @@ public void createControl(Composite parent) {\n \t\tsetControl(comp);\n \t\tGridLayout layout = new GridLayout();\n \t\tcomp.setLayout(layout);\n-\n+\t\t\n \t\tcreateGdbServerGroup(comp);\n \n \t\tcreateGdbClientControls(comp);\n \n \t\tcreateRemoteControl(comp);\n-\n \t\tfUpdateThreadlistOnSuspend = new Button(comp, SWT.CHECK);\n \t\tfUpdateThreadlistOnSuspend.setText(Messages.getString(\"DebuggerTab.update_thread_list_on_suspend_Text\"));\n \t\tfUpdateThreadlistOnSuspend\n@@ -325,6 +336,95 @@ private void createGdbServerGroup(Composite parent) {\n \t\t\tfGdbServerTclPort.setLayoutData(gd);\n \t\t}\n \n+\t\tString selectedTarget = getLaunchTarget();\n+\t\tEspConfigParser parser = new EspConfigParser();\n+\t\tString openOCDPath = new IDFEnvironmentVariables().getEnvValue(IDFEnvironmentVariables.OPENOCD_SCRIPTS);\n+\t\tif (!openOCDPath.isEmpty() && parser.hasBoardConfigJson()) // $NON-NLS-1$\n+\t\t{\n+\t\t\t{\n+\t\t\t\tLabel label = new Label(comp, SWT.NONE);\n+\t\t\t\tlabel.setText(Messages.getString(\"DebuggerTab.flashVoltageLabel\"));\n+\t\t\t\tlabel.setToolTipText(Messages.getString(\"DebuggerTab.flashVoltageToolTip\"));\n+\t\t\t\tGridData gd = new GridData();\n+\t\t\t\tgd.widthHint = 60;\n+\t\t\t\tgd.horizontalSpan = ((GridLayout) comp.getLayout()).numColumns - 1;\n+\t\t\t\tfFlashVoltage = new Combo(comp, SWT.SINGLE | SWT.BORDER);\n+\t\t\t\tfFlashVoltage.setItems(parser.getEspFlashVoltages().toArray(new String[0]));\n+\t\t\t\tfFlashVoltage.setText(\"default\"); // $NON-NLS-1$\n+\n+\t\t\t\tfFlashVoltage.addSelectionListener(new SelectionAdapter()\n+\t\t\t\t{\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void widgetSelected(SelectionEvent e)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tfTargetName.notifyListeners(SWT.Selection, null);\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\tfFlashVoltage.setLayoutData(gd);\n+\t\t\t}\n+\t\t\t{\n+\t\t\t\tLabel label = new Label(comp, SWT.NONE);\n+\t\t\t\tlabel.setText(Messages.getString(\"DebuggerTab.configTargetLabel\"));\n+\t\t\t\tlabel.setToolTipText(Messages.getString(\"DebuggerTab.configTargetToolTip\"));\n+\t\t\t\tGridData gd = new GridData();\n+\t\t\t\tgd.widthHint = 60;\n+\t\t\t\tgd.horizontalSpan = ((GridLayout) comp.getLayout()).numColumns - 1;\n+\t\t\t\tfTarget = new Combo(comp, SWT.SINGLE | SWT.BORDER);\n+\t\t\t\tfTarget.setItems(parser.getTargets().toArray(new String[0]));\n+\t\t\t\tfTarget.setText(selectedTarget);\n+\t\t\t\tfTarget.addSelectionListener(new SelectionAdapter()\n+\t\t\t\t{\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void widgetSelected(SelectionEvent e)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tString selectedItem = fTarget.getItem(fTarget.getSelectionIndex());\n+\t\t\t\t\t\tboardConfigsMap = parser.getBoardsConfigs(selectedItem);\n+\t\t\t\t\t\tfTargetName.setItems(parser.getBoardsConfigs(selectedItem).keySet().toArray(new String[0]));\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\tfTarget.setLayoutData(gd);\n+\t\t\t}\n+\t\t\t{\n+\t\t\t\tLabel label = new Label(comp, SWT.NONE);\n+\t\t\t\tlabel.setText(Messages.getString(\"DebuggerTab.configBoardLabel\"));\n+\t\t\t\tlabel.setToolTipText(Messages.getString(\"DebuggerTab.configBoardTooTip\"));\n+\n+\t\t\t\tGridData gd = new GridData();\n+\t\t\t\tgd.widthHint = 130;\n+\t\t\t\tgd.horizontalSpan = ((GridLayout) comp.getLayout()).numColumns - 1;\n+\t\t\t\tfTargetName = new Combo(comp, SWT.SINGLE | SWT.BORDER);\n+\t\t\t\tfTargetName.setItems(parser.getBoardsConfigs(selectedTarget).keySet().toArray(new String[0]));\n+\t\t\t\tboardConfigsMap = parser.getBoardsConfigs(selectedTarget);\n+\t\t\t\t\n+\t\t\t\tfTargetName.addSelectionListener(new SelectionAdapter()\n+\t\t\t\t{\n+\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void widgetSelected(SelectionEvent e)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tString selectedVoltage = fFlashVoltage.getText();\n+\t\t\t\t\t\tString selectedItem = fTargetName.getText();\n+\t\t\t\t\t\tString configOptiopns = EMPTY_CONFIG_OPTIONS;\n+\t\t\t\t\t\tif (!selectedVoltage.equals(\"default\")) // $NON-NLS-1$\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tconfigOptiopns = configOptiopns + \" -c 'set ESP32_FLASH_VOLTAGE \" + selectedVoltage + \"'\"; //$NON-NLS-1$\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (!selectedItem.isEmpty())\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tfor (String config : (String[]) boardConfigsMap.get(selectedItem).toArray(new String[0]))\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tconfigOptiopns = configOptiopns + \" -f \" + config; //$NON-NLS-1$\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tfGdbServerOtherOptions.setText(configOptiopns);\n+\t\t\t\t\t\t}\n+\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\tfTargetName.setLayoutData(gd);\n+\t\t\t}\n+\n+\t\t}\n+\n \t\t{\n \t\t\tLabel label = new Label(comp, SWT.NONE);\n \t\t\tlabel.setText(Messages.getString(\"DebuggerTab.gdbServerOther_Label\")); //$NON-NLS-1$\n@@ -472,6 +572,21 @@ public void modifyText(ModifyEvent e) {\n \t\tfDoGdbServerAllocateTelnetConsole.addSelectionListener(scheduleUpdateJobSelectionAdapter);\n \t}\n \n+\tprivate String getLaunchTarget()\n+\t{\n+\t\tILaunchBarManager launchBarManager = Activator.getService(ILaunchBarManager.class);\n+\t\tString selectedTarget = \"\"; //$NON-NLS-1$\n+\t\ttry\n+\t\t{\n+\t\t\tselectedTarget = launchBarManager.getActiveLaunchTarget().getId();\n+\t\t}\n+\t\tcatch (CoreException e)\n+\t\t{\n+\t\t\tLogger.log(e);\n+\t\t}\n+\t\treturn selectedTarget;\n+\t}\n+\n \tprivate void createGdbClientControls(Composite parent) {\n \n \t\tGroup group = new Group(parent, SWT.NONE);\n@@ -746,6 +861,7 @@ public void initializeFrom(ILaunchConfiguration configuration) {\n \t\t\t// OpenOCD GDB server\n \t\t\t{\n \t\t\t\t// Start server locally\n+\n \t\t\t\tbooleanDefault = fPersistentPreferences.getGdbServerDoStart();\n \t\t\t\tfDoStartGdbServer.setSelection(\n \t\t\t\t\t\tconfiguration.getAttribute(ConfigurationAttributes.DO_START_GDB_SERVER, booleanDefault));"
  },
  {
    "sha": "bb6cb591c22a817163e6835eb6ad134bd0210339",
    "filename": "bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/ui/messages.properties",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/espressif/idf-eclipse-plugin/blob/d723544afd5d982c602912e942e0b862c7122f50/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/ui/messages.properties",
    "raw_url": "https://github.com/espressif/idf-eclipse-plugin/raw/d723544afd5d982c602912e942e0b862c7122f50/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/ui/messages.properties",
    "contents_url": "https://api.github.com/repos/espressif/idf-eclipse-plugin/contents/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/ui/messages.properties?ref=d723544afd5d982c602912e942e0b862c7122f50",
    "patch": "@@ -371,3 +371,9 @@ projects in all workspaces. \\n\\\n McuPage_executable_label=Executable:\n McuPage_executable_folder=Folder:\n \n+DebuggerTab.configTargetLabel=Target:\n+DebuggerTab.configTargetToolTip=Select a launch target\n+DebuggerTab.configBoardLabel=Board:\n+DebuggerTab.configBoardTooTip=Select a board based on ESP target\n+DebuggerTab.flashVoltageLabel=Flash voltage:\n+DebuggerTab.flashVoltageToolTip=Set SPI flash voltage in OpenOCD configuration\n\\ No newline at end of file"
  },
  {
    "sha": "00a391acd3947909ae660017f437c7ba486a0608",
    "filename": "bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/utils/EspConfigParser.java",
    "status": "added",
    "additions": 137,
    "deletions": 0,
    "changes": 137,
    "blob_url": "https://github.com/espressif/idf-eclipse-plugin/blob/d723544afd5d982c602912e942e0b862c7122f50/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/utils/EspConfigParser.java",
    "raw_url": "https://github.com/espressif/idf-eclipse-plugin/raw/d723544afd5d982c602912e942e0b862c7122f50/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/utils/EspConfigParser.java",
    "contents_url": "https://api.github.com/repos/espressif/idf-eclipse-plugin/contents/bundles/com.espressif.idf.debug.gdbjtag.openocd/src/com/espressif/idf/debug/gdbjtag/openocd/utils/EspConfigParser.java?ref=d723544afd5d982c602912e942e0b862c7122f50",
    "patch": "@@ -0,0 +1,137 @@\n+/*******************************************************************************\n+ * Copyright 2018-2019 Espressif Systems (Shanghai) PTE LTD. All rights reserved.\n+ * Use is subject to license terms.\n+ *******************************************************************************/\n+package com.espressif.idf.debug.gdbjtag.openocd.utils;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.json.simple.JSONArray;\n+import org.json.simple.JSONObject;\n+import org.json.simple.parser.JSONParser;\n+import org.json.simple.parser.ParseException;\n+\n+import com.espressif.idf.core.IDFEnvironmentVariables;\n+import com.espressif.idf.core.logging.Logger;\n+\n+public class EspConfigParser\n+{\n+\tprivate final String espConfigPath;\n+\n+\tpublic EspConfigParser()\n+\t{\n+\t\tespConfigPath = new IDFEnvironmentVariables().getEnvValue(IDFEnvironmentVariables.OPENOCD_SCRIPTS)\n+\t\t\t\t+ \"/tcl_esp-config.json\";\n+\t}\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic List<String> getTargets()\n+\t{\n+\n+\t\tList<String> targets = new ArrayList<String>();\n+\t\tJSONParser jsonParser = new JSONParser();\n+\t\ttry (FileReader reader = new FileReader(espConfigPath))\n+\t\t{\n+\t\t\tJSONObject json = (JSONObject) jsonParser.parse(reader);\n+\t\t\tJSONArray targetsArray = (JSONArray) json.get(\"targets\"); // $NON-NLS-1$\n+\t\t\ttargetsArray.forEach(target -> targets.add((String) ((JSONObject) target).get(\"id\"))); // $NON-NLS-1$\n+\t\t\treader.close();\n+\t\t}\n+\t\tcatch (FileNotFoundException e)\n+\t\t{\n+\t\t\tLogger.log(e);\n+\t\t}\n+\t\tcatch (IOException e)\n+\t\t{\n+\t\t\tLogger.log(e);\n+\t\t}\n+\t\tcatch (ParseException e)\n+\t\t{\n+\t\t\tLogger.log(e);\n+\t\t}\n+\n+\t\treturn targets;\n+\t}\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic List<String> getEspFlashVoltages()\n+\t{\n+\t\tList<String> voltages = new ArrayList<String>();\n+\t\tJSONObject voltageOption;\n+\t\tJSONParser jsonParser = new JSONParser();\n+\t\ttry (FileReader reader = new FileReader(espConfigPath))\n+\t\t{\n+\t\t\tJSONObject json = (JSONObject) jsonParser.parse(reader);\n+\t\t\tJSONArray optionsArray = (JSONArray) json.get(\"options\"); // $NON-NLS-1$\n+\t\t\tvoltageOption = (JSONObject) optionsArray.stream()\n+\t\t\t\t\t.filter(option -> ((JSONObject) option).get(\"name\").equals(\"ESP_FLASH_VOLTAGE\")).findFirst() //$NON-NLS-1$\n+\t\t\t\t\t.orElse(null);\n+\t\t\t((JSONArray) voltageOption.get(\"values\")).forEach(value -> voltages.add(value.toString())); //$NON-NLS-1$\n+\t\t\treader.close();\n+\t\t}\n+\t\tcatch (FileNotFoundException e)\n+\t\t{\n+\t\t\tLogger.log(e);\n+\t\t}\n+\t\tcatch (IOException e)\n+\t\t{\n+\t\t\tLogger.log(e);\n+\t\t}\n+\t\tcatch (ParseException e)\n+\t\t{\n+\t\t\tLogger.log(e);\n+\t\t}\n+\n+\t\treturn voltages;\n+\n+\t}\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic Map<String, JSONArray> getBoardsConfigs(String target)\n+\t{\n+\t\tMap<String, JSONArray> boardsConfigs = new HashMap<>();\n+\t\tList<JSONObject> objects = new ArrayList<>();\n+\t\tJSONParser jsonParser = new JSONParser();\n+\t\ttry (FileReader reader = new FileReader(espConfigPath))\n+\t\t{\n+\t\t\tJSONObject json = (JSONObject) jsonParser.parse(reader);\n+\t\t\tJSONArray boardsArray = (JSONArray) json.get(\"boards\"); // $NON-NLS-1$\n+\t\t\tboardsArray.forEach(board -> objects.add((JSONObject) board));\n+\t\t\tfor (JSONObject object : objects)\n+\t\t\t{\n+\t\t\t\tif (object.get(\"target\").equals(target)) // $NON-NLS-1$\n+\t\t\t\t{\n+\t\t\t\t\tboardsConfigs.put((String) object.get(\"name\"), // $NON-NLS-1$\n+\t\t\t\t\t\t\t((JSONArray) object.get(\"config_files\"))); // $NON-NLS-1$\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treader.close();\n+\t\t}\n+\t\tcatch (FileNotFoundException e)\n+\t\t{\n+\t\t\tLogger.log(e);\n+\t\t}\n+\t\tcatch (IOException e)\n+\t\t{\n+\t\t\tLogger.log(e);\n+\t\t}\n+\t\tcatch (ParseException e)\n+\t\t{\n+\t\t\tLogger.log(e);\n+\t\t}\n+\n+\t\treturn boardsConfigs;\n+\t}\n+\n+\tpublic boolean hasBoardConfigJson()\n+\t{\n+\t\treturn new File(espConfigPath).exists();\n+\t}\n+}"
  }
]
