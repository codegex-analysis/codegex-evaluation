[
  {
    "sha": "44257bd87cb420ed43bedf868d7b0b0df03680db",
    "filename": "src/main/java/themoviedb/api/RestfulMoviesApi.java",
    "status": "modified",
    "additions": 8,
    "deletions": 4,
    "changes": 12,
    "blob_url": "https://github.com/fabiandzp/ApiFwkChallenge/blob/ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9/src/main/java/themoviedb/api/RestfulMoviesApi.java",
    "raw_url": "https://github.com/fabiandzp/ApiFwkChallenge/raw/ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9/src/main/java/themoviedb/api/RestfulMoviesApi.java",
    "contents_url": "https://api.github.com/repos/fabiandzp/ApiFwkChallenge/contents/src/main/java/themoviedb/api/RestfulMoviesApi.java?ref=ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9",
    "patch": "@@ -41,7 +41,8 @@ public Response getToken(String api_key) {\n \n     // Validate Token\n     public Response validateToken(ValidateToken validateToken, String api_key){\n-        return messageSender.postRequestToEndpoint(validateToken, \"/authentication/token/validate_with_login?api_key=\" + api_key);\n+        return messageSender.postRequestToEndpoint(validateToken,\n+                \"/authentication/token/validate_with_login?api_key=\" + api_key);\n     }\n \n \n@@ -65,7 +66,8 @@ public Response validateToken(ValidateToken validateToken, String api_key){\n \n     // Session ID\n     public Response sessionId(RequestToken requestToken, String api_key){\n-        return messageSender.postRequestToEndpoint(requestToken, \"/authentication/session/new?api_key=\" + api_key);\n+        return messageSender.postRequestToEndpoint(requestToken,\n+                \"/authentication/session/new?api_key=\" + api_key);\n     }\n \n     public Response tokenValidationSessionId(String api_key) {\n@@ -103,11 +105,13 @@ public Response getLatestMovieId(String api_key) {\n     }\n \n     public Response addMovieToList(MovieDetails movieDetails, String api_key, String sessionId, int listId) {\n-        return messageSender.postRequestToEndpoint(movieDetails, api_key, sessionId, \"/list/\"+listId+\"/add_item\");\n+        return messageSender.postRequestToEndpoint(movieDetails, api_key, sessionId,\n+                \"/list/\"+listId+\"/add_item\");\n     }\n \n     public Response addMovieToList(LatestMovieId latestMovieId, String api_key, String sessionId, int listId) {\n-        return messageSender.postRequestToEndpoint(latestMovieId, api_key, sessionId, \"/list/\"+listId+\"/add_item\");\n+        return messageSender.postRequestToEndpoint(latestMovieId, api_key, sessionId,\n+                \"/list/\"+listId+\"/add_item\");\n     }\n \n "
  },
  {
    "sha": "2f21bd6c92cc606f8051c44ede5c729c236872ff",
    "filename": "src/main/java/themoviedb/http/HttpMessageSender.java",
    "status": "modified",
    "additions": 40,
    "deletions": 34,
    "changes": 74,
    "blob_url": "https://github.com/fabiandzp/ApiFwkChallenge/blob/ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9/src/main/java/themoviedb/http/HttpMessageSender.java",
    "raw_url": "https://github.com/fabiandzp/ApiFwkChallenge/raw/ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9/src/main/java/themoviedb/http/HttpMessageSender.java",
    "contents_url": "https://api.github.com/repos/fabiandzp/ApiFwkChallenge/contents/src/main/java/themoviedb/http/HttpMessageSender.java?ref=ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9",
    "patch": "@@ -29,12 +29,12 @@ public Response getRequestToEndpoint(String endpoint) {\n         return response;\n     }\n \n-    public Response getRequestToEndpoint(String api_key, String endpoint) {\n+    public Response getRequestToEndpoint(String apiKey, String endpoint) {\n         String requestUrl = url + endpoint;\n         Response response =\n                 given().log().uri().\n                     contentType(ContentType.JSON).with().\n-                    queryParam(\"api_key\", api_key).\n+                    queryParam(\"api_key\", apiKey).\n                 when().\n                     get(requestUrl).\n                         andReturn();\n@@ -43,92 +43,98 @@ public Response getRequestToEndpoint(String api_key, String endpoint) {\n \n     public Response postRequestToEndpoint(ValidateToken validateToken, String endpoint){\n         String requestUrl = url + endpoint;\n-        return given().\n+        return given().log().uri().\n                     contentType(ContentType.JSON).\n-                    body(validateToken).log().all().\n+                    body(validateToken).\n+                //log().body().\n                 when().\n                     post(requestUrl).\n                     andReturn();\n     }\n \n     public Response postRequestToEndpoint(RequestToken requestToken, String endpoint){\n         String requestUrl = url + endpoint;\n-        return given().\n+        return given().log().uri().\n                     contentType(ContentType.JSON).\n-                    body(requestToken).log().all().\n+                    body(requestToken).\n+                //log().body().\n                 when().\n                     post(requestUrl).\n                 andReturn();\n     }\n \n-    public Response postRequestToEndpoint(MDBList list, String api_key, String session_id, String endpoint){\n+    public Response postRequestToEndpoint(MDBList list, String apiKey, String sessionId, String endpoint){\n         String requestUrl = url + endpoint;\n-        return given().\n+        return given().log().uri().\n                     contentType(ContentType.JSON).with().\n-                    queryParam(\"api_key\", api_key).\n-                    queryParam(\"session_id\", session_id).\n-                    body(list).log().all().\n+                    queryParam(\"api_key\", apiKey).\n+                    queryParam(\"session_id\", sessionId).\n+                    body(list).\n+                //log().body().\n                 when().\n                     post(requestUrl).\n                 andReturn();\n     }\n \n-    public Response postRequestToEndpoint(MovieDetails movieDetails, String api_key, String session_id, String endpoint){\n+    public Response postRequestToEndpoint(MovieDetails movieDetails, String apiKey, String sessionId, String endpoint){\n         String requestUrl = url + endpoint;\n-        return given().\n+        return given().log().uri().\n                 contentType(ContentType.JSON).with().\n-                queryParam(\"api_key\", api_key).\n-                queryParam(\"session_id\", session_id).\n-                body(movieDetails).log().all().\n+                queryParam(\"api_key\", apiKey).\n+                queryParam(\"session_id\", sessionId).\n+                body(movieDetails).\n+                //log().body().\n                 when().\n                 post(requestUrl).\n                 andReturn();\n     }\n \n-    public Response postRequestToEndpoint(LatestMovieId latestMovieId, String api_key, String session_id, String endpoint){\n+    public Response postRequestToEndpoint(LatestMovieId latestMovieId, String apiKey, String sessionId, String endpoint){\n         String requestUrl = url + endpoint;\n-        return given().\n+        return given().log().uri().\n                 contentType(ContentType.JSON).with().\n-                queryParam(\"api_key\", api_key).\n-                queryParam(\"session_id\", session_id).\n-                body(latestMovieId).log().all().\n+                queryParam(\"api_key\", apiKey).\n+                queryParam(\"session_id\", sessionId).\n+                body(latestMovieId).\n+                //log().body().\n                 when().\n                 post(requestUrl).\n                 andReturn();\n     }\n \n-    public Response postRequestToEndpoint(RateMovie rateMovie, String api_key, String gSessionId, String endpoint){\n+    public Response postRequestToEndpoint(RateMovie rateMovie, String apiKey, String gSessionId, String endpoint){\n         String requestUrl = url + endpoint;\n-        return given().\n+        return given().log().uri().\n                 contentType(ContentType.JSON).with().\n-                queryParam(\"api_key\", api_key).\n+                queryParam(\"api_key\", apiKey).\n                 queryParam(\"session_id\", gSessionId).\n-                body(rateMovie).log().all().\n+                body(rateMovie).\n+                //log().body().\n                 when().\n                 post(requestUrl).\n                 andReturn();\n     }\n \n-    public Response postRequestToEndpoint(String api_key, String sessionId, String endpoint){\n+    public Response postRequestToEndpoint(String apiKey, String sessionId, String endpoint){\n         String requestUrl = url + endpoint;\n-        return given().\n+        return given().log().uri().\n                 contentType(ContentType.JSON).with().\n-                queryParam(\"api_key\", api_key).\n+                queryParam(\"api_key\", apiKey).\n                 queryParam(\"session_id\", sessionId).\n                 queryParam(\"confirm\", true).\n-                log().all().\n+                //log().body().\n                 when().\n                 post(requestUrl).\n                 andReturn();\n     }\n \n-    public Response deleteRequestToEndpoint(String api_key, String session_id, String endpoint) {\n+    public Response deleteRequestToEndpoint(String apiKey, String sessionId, String endpoint) {\n         String requestUrl = url + endpoint;\n-        return given().\n+        return given().log().uri().\n                 contentType(ContentType.JSON).with().\n-                queryParam(\"api_key\", api_key).\n-                queryParam(\"session_id\", session_id).\n-                log().all().\n+                queryParam(\"api_key\", apiKey).\n+                queryParam(\"session_id\", sessionId).\n+                //log().body().\n                 when().\n                 delete(requestUrl).\n                 andReturn();"
  },
  {
    "sha": "bd1dd6fb3ad37151cf334561d5fab150e6153a9c",
    "filename": "src/test/java/themoviedb/steps/StepsLists.java",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/fabiandzp/ApiFwkChallenge/blob/ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9/src/test/java/themoviedb/steps/StepsLists.java",
    "raw_url": "https://github.com/fabiandzp/ApiFwkChallenge/raw/ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9/src/test/java/themoviedb/steps/StepsLists.java",
    "contents_url": "https://api.github.com/repos/fabiandzp/ApiFwkChallenge/contents/src/test/java/themoviedb/steps/StepsLists.java?ref=ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9",
    "patch": "@@ -54,19 +54,18 @@ public static void createTestEnvironment() {\n         responseTokenValidation.then().log().body();\n \n         //Realizar validacion de token\n-\n         RequestToken reqToken = new RequestToken(auth.getRequestToken());\n         Response responseSessionId = api.sessionId(reqToken, auth.getApiKey());\n         responseSessionId.then().log().body();\n         String sessionId = responseSessionId.then().extract().path(\"session_id\");\n-        //log.debug(\"testtttt\" + sessionId);\n+\n         boolean success = responseSessionId.then().extract().path(\"success\");\n         auth.setSessionId(sessionId);\n         auth.setSessionValidation(success);\n     }\n \n     @Given(\"I am already login into the API\")\n-    public void LoginIntoTheAPI(){\n+    public void loginIntoTheAPI(){\n         createTestEnvironment();\n         log.debug(\"Login and SessionId Successful: \" + auth.getSessionId());\n     }\n@@ -126,7 +125,7 @@ public void aUserSendsARequestToAddMovieEndpoint() {\n     @Then(\"The movie listed in the List Details endpoint\")\n     public void theMovieIsAddedToTheList() {\n         Response response = api.getListDetails(list.getListId(), auth.getApiKey());\n-        Assert.assertEquals(\"The status code is different than 201\", 200, response.statusCode());\n+        Assert.assertEquals(\"The status code is different than 200\", 200, response.statusCode());\n         response.then().log().body();\n \n         String listDescription = response.then().extract().path(\"description\");\n@@ -138,7 +137,8 @@ public void theMovieIsAddedToTheList() {\n         list.setDescription(listDescription);\n         list.setCreatedBy(createdBy);\n \n-        Assert.assertEquals(\"The actual movie does not match\", movieDetails.getLatestMovieId(), movieDetails.getmovieId());\n+        Assert.assertEquals(\"The actual movie does not match\", movieDetails.getLatestMovieId(),\n+                movieDetails.getmovieId());\n     }\n \n \n@@ -170,7 +170,8 @@ public void theListIsDeleted() {\n         response.then().log().body();\n \n         String status_message = response.then().extract().path(\"status_message\");\n-        Assert.assertEquals(\"Status Message is wrong\", \"The resource you requested could not be found.\", status_message);\n+        Assert.assertEquals(\"Status Message is wrong\", \"The resource you requested could not be found.\",\n+                status_message);\n     }\n }\n "
  },
  {
    "sha": "8e249d25341b37c00ccd519a851e71d3f0864d0e",
    "filename": "src/test/java/themoviedb/steps/StepsMovies.java",
    "status": "modified",
    "additions": 12,
    "deletions": 8,
    "changes": 20,
    "blob_url": "https://github.com/fabiandzp/ApiFwkChallenge/blob/ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9/src/test/java/themoviedb/steps/StepsMovies.java",
    "raw_url": "https://github.com/fabiandzp/ApiFwkChallenge/raw/ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9/src/test/java/themoviedb/steps/StepsMovies.java",
    "contents_url": "https://api.github.com/repos/fabiandzp/ApiFwkChallenge/contents/src/test/java/themoviedb/steps/StepsMovies.java?ref=ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9",
    "patch": "@@ -56,19 +56,18 @@ public static void createTestEnvironment() {\n         responseTokenValidation.then().log().body();\n \n         //Realizar validacion de token\n-\n         RequestToken reqToken = new RequestToken(auth.getRequestToken());\n         Response responseSessionId = api.sessionId(reqToken, auth.getApiKey());\n         responseSessionId.then().log().body();\n         String sessionId = responseSessionId.then().extract().path(\"session_id\");\n-        //log.debug(\"testtttt\" + sessionId);\n+\n         boolean success = responseSessionId.then().extract().path(\"success\");\n         auth.setSessionId(sessionId);\n         auth.setSessionValidation(success);\n     }\n \n     @Given(\"I am already logged into the API\")\n-    public void LoginIntoTheAPI(){\n+    public void loginIntoTheAPI(){\n         createTestEnvironment();\n         log.debug(\"Login and SessionId Successful: \" + auth.getSessionId());\n     }\n@@ -77,7 +76,8 @@ public void LoginIntoTheAPI(){\n     @When(\"A user sends a request to get the last Movie Id\")\n     public void aUserSendsARequestToGetTheLastMovieId() {\n         Response responseLatestMovie = api.getLatestMovieId(auth.getApiKey());\n-        Assert.assertEquals(\"The status code is different than 200\", 200, responseLatestMovie.statusCode());\n+        Assert.assertEquals(\"The status code is different than 200\", 200,\n+                responseLatestMovie.statusCode());\n         responseLatestMovie.then().log().body();\n \n         int movieId = responseLatestMovie.then().extract().path(\"id\");\n@@ -87,22 +87,26 @@ public void aUserSendsARequestToGetTheLastMovieId() {\n     @Then(\"A new sends a request to get the Movie Details\")\n     public void aNewSendsARequestToGetTheMovieDetails() {\n         Response responseMovieDetails = api.getMovieDetails(auth.getApiKey(), latestMovie.getLatestMovieId());\n-        Assert.assertEquals(\"The status code is different than 200\", 200, responseMovieDetails.statusCode());\n+        Assert.assertEquals(\"The status code is different than 200\", 200,\n+                responseMovieDetails.statusCode());\n \n         responseMovieDetails.then().log().body();\n     }\n \n     @Then(\"The user sends request to Rate the Movie\")\n     public void theUserSendsRequestToRateTheMovie() {\n         Response responseMovieDetails = api.getMovieDetails(auth.getApiKey(), latestMovie.getLatestMovieId());\n-        Assert.assertEquals(\"The status code is different than 200\", 200, responseMovieDetails.statusCode());\n+        Assert.assertEquals(\"The status code is different than 200\", 200,\n+                responseMovieDetails.statusCode());\n \n         responseMovieDetails.then().log().body();\n \n         RateMovie rateMovie = new RateMovie(9);\n-        Response responseRateMovie = api.rateMovie(rateMovie, auth.getApiKey(), auth.getSessionId(), latestMovie.getLatestMovieId());\n+        Response responseRateMovie = api.rateMovie(rateMovie, auth.getApiKey(), auth.getSessionId(),\n+                latestMovie.getLatestMovieId());\n         responseRateMovie.then().log().body();\n-        Assert.assertEquals(\"The status code is different than 201\", 201, responseRateMovie.statusCode());\n+        Assert.assertEquals(\"The status code is different than 201\", 201,\n+                responseRateMovie.statusCode());\n \n     }\n "
  },
  {
    "sha": "02934b86077738c35e62893b371f35483d90eb01",
    "filename": "src/test/java/themoviedb/steps/StepsTv.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/fabiandzp/ApiFwkChallenge/blob/ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9/src/test/java/themoviedb/steps/StepsTv.java",
    "raw_url": "https://github.com/fabiandzp/ApiFwkChallenge/raw/ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9/src/test/java/themoviedb/steps/StepsTv.java",
    "contents_url": "https://api.github.com/repos/fabiandzp/ApiFwkChallenge/contents/src/test/java/themoviedb/steps/StepsTv.java?ref=ec3d7fd69fd1602b1bd17fbb4588633f23c42ad9",
    "patch": "@@ -49,7 +49,6 @@ public static void createTestEnvironment() {\n         responseTokenValidation.then().log().body();\n \n         //Realizar validacion de token\n-\n         RequestToken reqToken = new RequestToken(auth.getRequestToken());\n         Response responseSessionId = api.sessionId(reqToken, auth.getApiKey());\n         responseSessionId.then().log().body();\n@@ -61,7 +60,7 @@ public static void createTestEnvironment() {\n     }\n \n     @Given(\"I am already logged at the API\")\n-    public void LoginIntoTheAPI(){\n+    public void loginIntoTheAPI(){\n         createTestEnvironment();\n         log.debug(\"Login and SessionId Successful: \" + auth.getSessionId());\n     }\n@@ -70,7 +69,7 @@ public void LoginIntoTheAPI(){\n     @When(\"A user sends a request to get the last Tv show Id\")\n     public void aUserSendsARequestToGetTheLastTvShowId() {\n         Response response = api.getLatestTv(auth.getApiKey());\n-        Assert.assertEquals(\"The status code is different than 200\", 200, response.statusCode());\n+        Assert.assertEquals(\"The status code is different than 200\", 201, response.statusCode());\n         int tvId = response.then().extract().path(\"id\");\n         tv.setTvId(tvId);\n "
  }
]
