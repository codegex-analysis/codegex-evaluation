[
  {
    "sha": "55eb45ac095d6a212fb15ecab6194a0e2702a3cd",
    "filename": "app/build.gradle",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/CMPUT301W21T05/KrowdTrialz/blob/6fb3ca5d882f47401bf2079e4a18807f57e4f798/app/build.gradle",
    "raw_url": "https://github.com/CMPUT301W21T05/KrowdTrialz/raw/6fb3ca5d882f47401bf2079e4a18807f57e4f798/app/build.gradle",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T05/KrowdTrialz/contents/app/build.gradle?ref=6fb3ca5d882f47401bf2079e4a18807f57e4f798",
    "patch": "@@ -62,7 +62,6 @@ dependencies {\n     androidTestImplementation 'androidx.test:rules:1.2.0'\r\n     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n     androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.3.1'\r\n-    testImplementation 'org.mockito:mockito-core:1.10.19'\r\n     coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.9'\r\n }\r\n \r"
  },
  {
    "sha": "9299fa9aaed1d06b474dd91ae6c3a10f64b12918",
    "filename": "app/src/androidTest/java/com/T05/krowdtrialz/DatabaseTest.java",
    "status": "renamed",
    "additions": 75,
    "deletions": 13,
    "changes": 88,
    "blob_url": "https://github.com/CMPUT301W21T05/KrowdTrialz/blob/6fb3ca5d882f47401bf2079e4a18807f57e4f798/app/src/androidTest/java/com/T05/krowdtrialz/DatabaseTest.java",
    "raw_url": "https://github.com/CMPUT301W21T05/KrowdTrialz/raw/6fb3ca5d882f47401bf2079e4a18807f57e4f798/app/src/androidTest/java/com/T05/krowdtrialz/DatabaseTest.java",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T05/KrowdTrialz/contents/app/src/androidTest/java/com/T05/krowdtrialz/DatabaseTest.java?ref=6fb3ca5d882f47401bf2079e4a18807f57e4f798",
    "patch": "@@ -3,6 +3,9 @@\n import android.content.SharedPreferences;\n import android.util.Log;\n \n+import androidx.annotation.Nullable;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n import com.T05.krowdtrialz.model.experiment.BinomialExperiment;\n import com.T05.krowdtrialz.model.experiment.CountExperiment;\n import com.T05.krowdtrialz.model.experiment.Experiment;\n@@ -11,18 +14,19 @@\n import com.T05.krowdtrialz.model.user.User;\n import com.T05.krowdtrialz.util.Database;\n \n-import org.mockito.Mockito;\n-import org.mockito.Mockito.*;\n-\n import org.junit.Before;\n-import org.junit.jupiter.api.Test;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n \n import java.util.ArrayList;\n+import java.util.Map;\n+import java.util.Set;\n \n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n \n+@RunWith(AndroidJUnit4.class)\n public class DatabaseTest {\n-\n     private Database db;\n \n     private String measureExperimentID = \"123MES\";\n@@ -31,6 +35,65 @@\n     private String integerExperimentID = \"123INT\";\n     private String uid = \"JB123\";\n \n+    private class MockSharedPreferences implements SharedPreferences {\n+        @Override\n+        public Map<String, ?> getAll() {\n+            return null;\n+        }\n+\n+        @Nullable\n+        @Override\n+        public String getString(String key, @Nullable String defValue) {\n+            return null;\n+        }\n+\n+        @Nullable\n+        @Override\n+        public Set<String> getStringSet(String key, @Nullable Set<String> defValues) {\n+            return null;\n+        }\n+\n+        @Override\n+        public int getInt(String key, int defValue) {\n+            return 0;\n+        }\n+\n+        @Override\n+        public long getLong(String key, long defValue) {\n+            return 0;\n+        }\n+\n+        @Override\n+        public float getFloat(String key, float defValue) {\n+            return 0;\n+        }\n+\n+        @Override\n+        public boolean getBoolean(String key, boolean defValue) {\n+            return false;\n+        }\n+\n+        @Override\n+        public boolean contains(String key) {\n+            return false;\n+        }\n+\n+        @Override\n+        public Editor edit() {\n+            return null;\n+        }\n+\n+        @Override\n+        public void registerOnSharedPreferenceChangeListener(OnSharedPreferenceChangeListener listener) {\n+\n+        }\n+\n+        @Override\n+        public void unregisterOnSharedPreferenceChangeListener(OnSharedPreferenceChangeListener listener) {\n+\n+        }\n+    }\n+\n     public User mockUser () {\n         User user = new User(\"Joe Bob\",\"jbeast\",\"jb@gmail.com\", \"856c7d10-364d-40ea-ad2d-3aedd6993c5b\");\n         return user;\n@@ -54,8 +117,8 @@ public IntegerExperiment mockIntegerExperiment (){\n     }\n \n     @Before\n-    void setup() {\n-        final SharedPreferences sharedPreferences = Mockito.mock(SharedPreferences.class);\n+    public void setup() {\n+        final SharedPreferences sharedPreferences = new MockSharedPreferences();\n         Database.initializeInstance(sharedPreferences, new Database.InitializeDatabaseCallback() {\n             @Override\n             public void onSuccess() {\n@@ -69,7 +132,7 @@ public void onFailure() {\n     }\n \n     @Test\n-    void smokeTestGetExperimentsByOwner(){\n+    public void testSmokeTestGetExperimentsByOwner(){\n \n         db.addExperiment(mockBinomialExperiment());\n \n@@ -87,14 +150,14 @@ public void onFailure() {\n     }\n \n     @Test\n-    void setupAddNewExperiment(){\n+    public void testSetupAddNewExperiment(){\n         IntegerExperiment experiment = mockIntegerExperiment();\n         experiment.setRegion(\"China\");\n-//        db.addExperiment(experiment);\n+        //        db.addExperiment(experiment);\n     }\n \n     @Test\n-    void smokeTestGetExperimentsByTags () {\n+    public void testSmokeTestGetExperimentsByTags () {\n         ArrayList<String> tags = new ArrayList<>();\n         tags.add(\"bob\");\n         db.getExperimentsByTags(tags, new Database.QueryExperimentsCallback() {\n@@ -112,5 +175,4 @@ public void onFailure() {\n             }\n         });\n     }\n-\n }",
    "previous_filename": "app/src/test/java/com/T05/krowdtrialz/DatabaseTest.java"
  }
]
