[
  {
    "sha": "74c41b852679722508cf5cf04221ebf4021d9f28",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/.gitignore",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/.gitignore",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/.gitignore?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -3,6 +3,8 @@ target/\n !.mvn/wrapper/maven-wrapper.jar\n !**/src/main/**/target/\n !**/src/test/**/target/\n+secured.properties\n+\n \n ### STS ###\n .apt_generated"
  },
  {
    "sha": "739c072ddedffb18ee4ba7b15c866b9fd4935c4b",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 80,
    "deletions": 0,
    "changes": 80,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/pom.xml",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/pom.xml",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/pom.xml?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -19,6 +19,28 @@\n \t</properties>\n \n \t<dependencies>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-web-services</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>javax.xml.bind</groupId>\n+\t\t\t<artifactId>jaxb-api</artifactId>\n+\t\t\t<version>2.3.1</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.glassfish.jaxb</groupId>\n+\t\t\t<artifactId>jaxb-runtime</artifactId>\n+\t\t\t<version>2.3.1</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>wsdl4j</groupId>\n+\t\t\t<artifactId>wsdl4j</artifactId>\n+\t\t\t<version>1.6.2</version>\n+\t\t</dependency>\n+\n+\n \t\t<dependency>\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n@@ -27,6 +49,10 @@\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-starter-web</artifactId>\n \t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n+\t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.flywaydb</groupId>\n \t\t\t<artifactId>flyway-core</artifactId>\n@@ -47,6 +73,37 @@\n \t\t\t<artifactId>spring-boot-starter-test</artifactId>\n \t\t\t<scope>test</scope>\n \t\t</dependency>\n+        <dependency>\n+            <groupId>javax.validation</groupId>\n+            <artifactId>validation-api</artifactId>\n+            <version>1.1.0.Final</version>\n+        </dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>io.jsonwebtoken</groupId>\n+\t\t\t<artifactId>jjwt</artifactId>\n+\t\t\t<version>0.9.1</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n+\t\t\t<artifactId>jackson-core</artifactId>\n+\t\t\t<version>2.12.1</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.hibernate</groupId>\n+\t\t\t<artifactId>hibernate-core</artifactId>\n+\t\t\t<version>4.1.4.Final</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.hibernate</groupId>\n+\t\t\t<artifactId>hibernate-entitymanager</artifactId>\n+\t\t\t<version>5.2.3.Final</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.hibernate</groupId>\n+\t\t\t<artifactId>hibernate-core</artifactId>\n+\t\t\t<version>5.4.4.Final</version>\n+\t\t</dependency>\n+\n \t</dependencies>\n \n \t<build>\n@@ -63,6 +120,29 @@\n \t\t\t\t\t</excludes>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n+\t\t\t\t<artifactId>jaxb2-maven-plugin</artifactId>\n+\t\t\t\t<version>2.5.0</version>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<id>xjc</id>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>xjc</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<sources>\n+<!--\t\t\t\t\t\t<source>${project.basedir}/src/main/resources/groups.xsd</source>-->\n+\t\t\t\t\t\t<source>${project.basedir}/src/main/resources/products.xsd</source>\n+\t\t\t\t\t</sources>\n+\t\t\t\t\t<!--\t\t\t\t\t<packageName>soap</packageName>-->\n+\t\t\t\t\t<!--\t\t\t\t\t<outputDirectory>${project.basedir}/src/main/java/com/flamexander/spring/ws/soap</outputDirectory>-->\n+\t\t\t\t\t<!--\t\t\t\t\t<clearOutputDir>false</clearOutputDir>-->\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n \t\t</plugins>\n \t</build>\n "
  },
  {
    "sha": "a2655c43659404ead47888abc553f17a183abaa6",
    "filename": "src/main/java/com/oshovskii/market/MarketApplication.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/MarketApplication.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/MarketApplication.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/MarketApplication.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -2,8 +2,10 @@\n \n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.context.annotation.PropertySource;\n \n @SpringBootApplication\n+@PropertySource(\"classpath:secured.properties\")\n public class MarketApplication {\n \n \tpublic static void main(String[] args) {"
  },
  {
    "sha": "9a724dc3eacae63c9607632f3ed13b7aa6efdae8",
    "filename": "src/main/java/com/oshovskii/market/beans/Cart.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/beans/Cart.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/beans/Cart.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/beans/Cart.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,57 @@\n+package com.oshovskii.market.beans;\n+\n+import lombok.Data;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.context.annotation.ScopedProxyMode;\n+import org.springframework.stereotype.Component;\n+import com.oshovskii.market.services.ProductService;\n+import com.oshovskii.market.model.OrderItem;\n+import com.oshovskii.market.exceptions_handling.ResourceNotFoundException;\n+import com.oshovskii.market.model.Product;\n+import org.springframework.web.context.WebApplicationContext;\n+\n+import javax.annotation.PostConstruct;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Component\n+@RequiredArgsConstructor\n+@Scope(value = WebApplicationContext.SCOPE_SESSION, proxyMode = ScopedProxyMode.TARGET_CLASS)\n+@Data\n+public class Cart {\n+    private final ProductService productService;\n+    private List<OrderItem> items;\n+    private int totalPrice;\n+\n+    @PostConstruct\n+    public void init() {\n+        this.items = new ArrayList<>();\n+    }\n+\n+    public void addToCart(Long id) {\n+        for (OrderItem o : items) {\n+            if (o.getProduct().getId().equals(id)) {\n+                o.incrementQuantity();\n+                recalculate();\n+                return;\n+            }\n+        }\n+        Product p = productService.findProductById(id).orElseThrow(() -> new ResourceNotFoundException(\"Unable to find product with id: \" + id + \" (add to cart)\"));\n+        OrderItem orderItem = new OrderItem(p);\n+        items.add(orderItem);\n+        recalculate();\n+    }\n+\n+    public void clear() {\n+        items.clear();\n+        recalculate();\n+    }\n+\n+    public void recalculate() {\n+        totalPrice = 0;\n+        for (OrderItem o : items) {\n+            totalPrice += o.getPrice();\n+        }\n+    }\n+}"
  },
  {
    "sha": "865bfa97611212a779ccdb20b73925f4ea0fc6fd",
    "filename": "src/main/java/com/oshovskii/market/beans/JwtTokenUtil.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/beans/JwtTokenUtil.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/beans/JwtTokenUtil.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/beans/JwtTokenUtil.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,60 @@\n+package com.oshovskii.market.beans;\n+\n+import io.jsonwebtoken.Claims;\n+import io.jsonwebtoken.Jwts;\n+import io.jsonwebtoken.SignatureAlgorithm;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+@Component\n+public class JwtTokenUtil {\n+    @Value(\"${jwt.secret}\")\n+    private String secret;\n+\n+    public String generateToken(UserDetails userDetails) {\n+        Map<String, Object> claims = new HashMap<>();\n+        List<String> rolesList = userDetails.getAuthorities().stream()\n+                .map(GrantedAuthority::getAuthority)\n+                .collect(Collectors.toList());\n+        claims.put(\"roles\", rolesList);\n+\n+        Date issuedDate = new Date();\n+        Date expiredDate = new Date(issuedDate.getTime() + 20 * 60 * 1000); // todo\n+        return Jwts.builder()\n+                .setClaims(claims)\n+                .setSubject(userDetails.getUsername())\n+                .setIssuedAt(issuedDate)\n+                .setExpiration(expiredDate)\n+                .signWith(SignatureAlgorithm.HS256, secret)\n+                .compact();\n+    }\n+\n+    public String getUsernameFromToken(String token) {\n+        return getClaimFromToken(token, Claims::getSubject);\n+    }\n+\n+    public List<String> getRoles(String token) {\n+        return getClaimFromToken(token, (Function<Claims, List<String>>) claims -> claims.get(\"roles\", List.class));\n+    }\n+\n+    private <T> T getClaimFromToken(String token, Function<Claims, T> claimsResolver) {\n+        Claims claims = getAllClaimsFromToken(token);\n+        return claimsResolver.apply(claims);\n+    }\n+\n+    private Claims getAllClaimsFromToken(String token) {\n+        return Jwts.parser()\n+                .setSigningKey(secret)\n+                .parseClaimsJws(token)\n+                .getBody();\n+    }\n+}"
  },
  {
    "sha": "36b362eb315249237cd6ae090b23780fb055b14b",
    "filename": "src/main/java/com/oshovskii/market/beans/TimeExecutionProfiler.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/beans/TimeExecutionProfiler.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/beans/TimeExecutionProfiler.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/beans/TimeExecutionProfiler.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,79 @@\n+package com.oshovskii.market.beans;\n+\n+import org.aspectj.lang.ProceedingJoinPoint;\n+import org.aspectj.lang.annotation.After;\n+import org.aspectj.lang.annotation.Around;\n+import org.aspectj.lang.annotation.Aspect;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+import java.util.*;\n+\n+@Aspect\n+@Component\n+public class TimeExecutionProfiler {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(TimeExecutionProfiler.class);\n+        /*\n+        *\n+        * Заменить устеревшие методы\n+        *\n+         */\n+    private static Hashtable<String, Long> hashTableForTimeMethod  = new Hashtable<String, Long>();\n+    private static Hashtable<String, Integer> hashTableCount = new Hashtable<String, Integer>();\n+\n+        @Around(\"execution(public * com.oshovskii.market.*..*.*(..))\")\n+        public Object profile(ProceedingJoinPoint proceedingJoinPoint) throws Throwable\n+        {\n+            long start = System.nanoTime();\n+            Object output = proceedingJoinPoint.proceed();\n+            long elapsedTime = System.nanoTime() - start;\n+            String methodName = proceedingJoinPoint.getSignature().toString();\n+            if (hashTableForTimeMethod.get(methodName) == null)\n+            {\n+                hashTableForTimeMethod.put(methodName, elapsedTime);\n+                hashTableCount.put(methodName, 1);\n+            }\n+            else\n+            {\n+                hashTableCount.put(methodName, hashTableCount.get(methodName) + 1);\n+                hashTableForTimeMethod.put(methodName, hashTableForTimeMethod.get(methodName) + elapsedTime);\n+            }\n+            return output;\n+        }\n+\n+        @After(\"execution(public * com.oshovskii.market.*..*.*(..))\")\n+        public void profileTimeResult() {\n+            logger.info(\"Start profiling\");\n+            List<Object> keys = Arrays.asList(hashTableForTimeMethod.keySet().toArray());\n+            logger.info(\"Totals Used:\");\n+            for (Object name : keys)\n+            {\n+                logger.info(name + \" : \" + (hashTableForTimeMethod.get(name) / 1000000));\n+            }\n+            Collections.sort(keys, new Comparator<Object>()\n+            {\n+                @Override\n+                public int compare(Object arg0, Object arg1)\n+                {\n+                    return hashTableForTimeMethod.get(arg1).compareTo(hashTableForTimeMethod.get(arg0));\n+                }\n+            });\n+            if (!hashTableForTimeMethod.isEmpty() && !keys.isEmpty()) {\n+                logger.info(\"The longest time method is \" + keys.get(0) + \" \" + hashTableForTimeMethod.get(keys.get(0)) / 1000000);\n+            }\n+            if (!hashTableCount.isEmpty()) {\n+                for (String stringName : hashTableCount.keySet()) {\n+                    Integer count = hashTableCount.get(stringName);\n+                    logger.info(\"--- \" + \"Method \" + stringName + \" complete : \" + count);\n+//                    hashTableCount.forEach((s, count) -> logger.info(\"--- \" + \"Method \" + s + \" complete : \" + count));\n+                }\n+            }\n+            for (Object name : keys)\n+            {\n+                logger.info(\"--\" + name + \" : \" + (hashTableForTimeMethod.get(name) / 1000000));\n+            }\n+            logger.info(\"JVM memory in use = \" + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()));\n+            logger.info(\"End profiling\");\n+        }\n+}"
  },
  {
    "sha": "6ca581ac20633e2e44c46641f765c1cd43df103d",
    "filename": "src/main/java/com/oshovskii/market/configs/AppConfig.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/configs/AppConfig.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/configs/AppConfig.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/configs/AppConfig.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,11 @@\n+package com.oshovskii.market.configs;\n+\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.EnableAspectJAutoProxy;\n+\n+@Configuration\n+@EnableAspectJAutoProxy\n+@ComponentScan(\"com.oshovskii.market\")\n+public class AppConfig {\n+}"
  },
  {
    "sha": "46248d18809eb0b8fc4d22599dbc692d2a0bd312",
    "filename": "src/main/java/com/oshovskii/market/configs/JwtRequestFilter.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/configs/JwtRequestFilter.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/configs/JwtRequestFilter.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/configs/JwtRequestFilter.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,57 @@\n+package com.oshovskii.market.configs;\n+\n+import com.oshovskii.market.beans.JwtTokenUtil;\n+import io.jsonwebtoken.ExpiredJwtException;\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.authority.SimpleGrantedAuthority;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.filter.OncePerRequestFilter;\n+\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+import java.util.stream.Collectors;\n+\n+@Component\n+@RequiredArgsConstructor\n+@Slf4j\n+public class JwtRequestFilter extends OncePerRequestFilter {\n+//    private final UserDetailsService userDetailsService;\n+    private final JwtTokenUtil jwtTokenUtil;\n+\n+    @Override\n+    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {\n+        String authHeader = request.getHeader(\"Authorization\");\n+\n+        String username = null;\n+        String jwt = null;\n+        if (authHeader != null && authHeader.startsWith(\"Bearer \")) {\n+            jwt = authHeader.substring(7);\n+            try {\n+                username = jwtTokenUtil.getUsernameFromToken(jwt);\n+            } catch (ExpiredJwtException e) {\n+                log.debug(\"The token is expired\");\n+//                String error = JsonUtils.convertObjectToJson(new BookServiceError(HttpStatus.UNAUTHORIZED.value(), \"Jwt is expired\"));\n+//                response.sendError(HttpServletResponse.SC_UNAUTHORIZED, error);\n+//                return;\n+            }\n+        }\n+\n+        if (username != null && SecurityContextHolder.getContext().getAuthentication() == null) {\n+//            UserDetails userDetails = userDetailsService.loadUserByUsername(username);\n+//            UsernamePasswordAuthenticationToken token = new UsernamePasswordAuthenticationToken(userDetails, null, userDetails.getAuthorities());\n+//            token.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n+//            SecurityContextHolder.getContext().setAuthentication(token);\n+\n+            UsernamePasswordAuthenticationToken token = new UsernamePasswordAuthenticationToken(username, null, jwtTokenUtil.getRoles(jwt).stream().map(SimpleGrantedAuthority::new).collect(Collectors.toList()));\n+            SecurityContextHolder.getContext().setAuthentication(token);\n+        }\n+\n+        filterChain.doFilter(request, response);\n+    }\n+}"
  },
  {
    "sha": "a2733678d96954e2f00a7e3f78fa461bda8fc67c",
    "filename": "src/main/java/com/oshovskii/market/configs/SecurityConfig.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/configs/SecurityConfig.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/configs/SecurityConfig.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/configs/SecurityConfig.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,46 @@\n+package com.oshovskii.market.configs;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.security.authentication.AuthenticationManager;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.config.http.SessionCreationPolicy;\n+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n+\n+@EnableWebSecurity\n+@RequiredArgsConstructor\n+@Slf4j\n+public class SecurityConfig extends WebSecurityConfigurerAdapter {\n+    private final JwtRequestFilter jwtRequestFilter;\n+\n+    @Override\n+    protected void configure(HttpSecurity http) throws Exception {\n+        http\n+                .csrf().disable()\n+                .authorizeRequests()\n+                .antMatchers(\"/api/v1/cart/**\").authenticated()\n+                .antMatchers(\"/api/v1/orders/**\").authenticated()\n+                .antMatchers(\"/h2-console/**\").permitAll()\n+                .anyRequest().permitAll()\n+                .and()\n+                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)\n+                .and()\n+                .headers().frameOptions().disable();\n+        http.addFilterBefore(jwtRequestFilter, UsernamePasswordAuthenticationFilter.class);\n+    }\n+\n+    @Bean\n+    public BCryptPasswordEncoder passwordEncoder() {\n+        return new BCryptPasswordEncoder();\n+    }\n+\n+    @Override\n+    @Bean\n+    public AuthenticationManager authenticationManagerBean() throws Exception {\n+        return super.authenticationManagerBean();\n+    }\n+}"
  },
  {
    "sha": "0f6811ab99fdbae47be0209430bb5f8f72cb9fe4",
    "filename": "src/main/java/com/oshovskii/market/configs/WebServiceConfig.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/configs/WebServiceConfig.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/configs/WebServiceConfig.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/configs/WebServiceConfig.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,42 @@\n+package com.oshovskii.market.configs;\n+\n+import org.springframework.boot.web.servlet.ServletRegistrationBean;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.ws.config.annotation.EnableWs;\n+import org.springframework.ws.config.annotation.WsConfigurerAdapter;\n+import org.springframework.ws.transport.http.MessageDispatcherServlet;\n+import org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition;\n+import org.springframework.xml.xsd.SimpleXsdSchema;\n+import org.springframework.xml.xsd.XsdSchema;\n+\n+@EnableWs\n+@Configuration\n+public class WebServiceConfig extends WsConfigurerAdapter {\n+\n+    @Bean\n+    public ServletRegistrationBean messageDispatcherServlet(ApplicationContext applicationContext) {\n+        MessageDispatcherServlet servlet = new MessageDispatcherServlet();\n+        servlet.setApplicationContext(applicationContext);\n+        servlet.setTransformWsdlLocations(true);\n+        return new ServletRegistrationBean(servlet, \"/ws/*\");\n+    }\n+\n+    // http://localhost:8189/market/products.wsdl\n+    @Bean(name = \"products\")\n+    public DefaultWsdl11Definition studentsWsdl11Definition(XsdSchema productsSchema) {\n+        DefaultWsdl11Definition wsdl11Definition = new DefaultWsdl11Definition();\n+        wsdl11Definition.setPortTypeName(\"ProductsPort\");\n+        wsdl11Definition.setLocationUri(\"/ws\");\n+        wsdl11Definition.setTargetNamespace(\"http://www.oshovskii.com/ws/products\");\n+        wsdl11Definition.setSchema(productsSchema);\n+        return wsdl11Definition;\n+    }\n+\n+    @Bean\n+    public XsdSchema productsSchema() {\n+        return new SimpleXsdSchema(new ClassPathResource(\"products.xsd\"));\n+    }\n+}"
  },
  {
    "sha": "5c8b385bdbf73b1e53223c944cb0eea0cafa41e8",
    "filename": "src/main/java/com/oshovskii/market/controllers/AuthController.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/controllers/AuthController.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/controllers/AuthController.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/controllers/AuthController.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,45 @@\n+package com.oshovskii.market.controllers;\n+\n+import com.oshovskii.market.exceptions_handling.ResourceNotFoundException;\n+import com.oshovskii.market.model.User;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.authentication.AuthenticationManager;\n+import org.springframework.security.authentication.BadCredentialsException;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.web.bind.annotation.*;\n+import com.oshovskii.market.beans.JwtTokenUtil;\n+import com.oshovskii.market.dto.JwtRequest;\n+import com.oshovskii.market.dto.JwtResponse;\n+import com.oshovskii.market.exceptions_handling.MarketError;\n+import com.oshovskii.market.services.UserService;\n+\n+import java.security.Principal;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class AuthController {\n+    private final UserService userService;\n+    private final JwtTokenUtil jwtTokenUtil;\n+    private final AuthenticationManager authenticationManager;\n+\n+    @PostMapping(\"/auth\")\n+    public ResponseEntity<?> createAuthToken(@RequestBody JwtRequest authRequest) {\n+        try {\n+            authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(authRequest.getUsername(), authRequest.getPassword()));\n+        } catch (BadCredentialsException ex) {\n+            return new ResponseEntity<>(new MarketError(HttpStatus.UNAUTHORIZED.value(), \"Incorrect username or password\"), HttpStatus.UNAUTHORIZED);\n+        }\n+        UserDetails userDetails = userService.loadUserByUsername(authRequest.getUsername());\n+        String token = jwtTokenUtil.generateToken(userDetails);\n+        return ResponseEntity.ok(new JwtResponse(token));\n+    }\n+\n+    //    @GetMapping(\"/registration\")\n+//    public void registrationUser(@RequestBody JwtRequest registrationRequest) {\n+//        userService.register(registrationRequest);\n+//    }\n+}"
  },
  {
    "sha": "983da45e1c00c25cfae4e9d3c7e4790a12bb1e5e",
    "filename": "src/main/java/com/oshovskii/market/controllers/CartController.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/controllers/CartController.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/controllers/CartController.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/controllers/CartController.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,42 @@\n+package com.oshovskii.market.controllers;\n+\n+import com.oshovskii.market.beans.Cart;\n+import com.oshovskii.market.dto.CartDto;\n+import com.oshovskii.market.exceptions_handling.ResourceNotFoundException;\n+import com.oshovskii.market.model.User;\n+import com.oshovskii.market.services.UserService;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.security.Principal;\n+\n+@RestController\n+@RequestMapping(\"/api/v1/cart\")\n+@RequiredArgsConstructor\n+public class CartController {\n+    private final Cart cart;\n+    private final UserService userService;\n+\n+    @GetMapping\n+    public CartDto getCart() {\n+        return new CartDto(cart);\n+    }\n+\n+    @GetMapping(\"/add/{id}\")\n+    public void addToCart(@PathVariable Long id, Principal principal) {\n+        User user = userService.findByUsername(principal.getName()).orElseThrow(() -> new ResourceNotFoundException(\"user not found\"));\n+        if (!user.getRoles().isEmpty()){\n+\n+        }\n+        cart.addToCart(id);\n+    }\n+\n+    @GetMapping(\"/clear\")\n+    public void clearCart() {\n+        cart.clear();\n+    }\n+}\n+"
  },
  {
    "sha": "37afeb20f908ca0f01fa29d0d9d160317f881db3",
    "filename": "src/main/java/com/oshovskii/market/controllers/OrderController.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/controllers/OrderController.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/controllers/OrderController.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/controllers/OrderController.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,45 @@\n+package com.oshovskii.market.controllers;\n+\n+import com.oshovskii.market.beans.Cart;\n+import com.oshovskii.market.dto.OrderDto;\n+import com.oshovskii.market.exceptions_handling.ResourceNotFoundException;\n+import com.oshovskii.market.model.Order;\n+import com.oshovskii.market.model.User;\n+import com.oshovskii.market.services.OrderService;\n+import com.oshovskii.market.services.UserService;\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.security.Principal;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@RestController\n+@RequestMapping(\"/api/v1/orders\")\n+@RequiredArgsConstructor\n+@Slf4j\n+public class OrderController {\n+    private final OrderService orderService;\n+    private final UserService userService;\n+\n+    @PostMapping\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public OrderDto createOrderFromCart(Principal principal, @RequestParam String address) {\n+        User user = userService.findByUsername(principal.getName()).orElseThrow(() -> new ResourceNotFoundException(\"User not found\"));\n+        Order order = orderService.createFromUserCart(user, address);\n+        return new OrderDto(order);\n+    }\n+\n+    @GetMapping(\"/{id}\")\n+    public OrderDto getOrderById(@PathVariable Long id) {\n+        Order order = orderService.findById(id).orElseThrow(() -> new ResourceNotFoundException(\"Order not found\"));\n+        return new OrderDto(order);\n+    }\n+\n+    @GetMapping\n+    public List<OrderDto> getCurrentUserOrders(Principal principal) {\n+        return orderService.findAllOrdersByOwnerName(principal.getName()).stream().map(OrderDto::new).collect(Collectors.toList());\n+    }\n+}"
  },
  {
    "sha": "6f0ea622c50ce3c68000918a8e95c60d765cc4c2",
    "filename": "src/main/java/com/oshovskii/market/controllers/ProductController.java",
    "status": "modified",
    "additions": 27,
    "deletions": 17,
    "changes": 44,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/controllers/ProductController.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/controllers/ProductController.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/controllers/ProductController.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -1,47 +1,57 @@\n package com.oshovskii.market.controllers;\n \n+\n+import com.oshovskii.market.dto.ProductDto;\n+import com.oshovskii.market.exceptions_handling.ResourceNotFoundException;\n import com.oshovskii.market.model.Product;\n+import com.oshovskii.market.repositories.specifications.ProductSpecifications;\n import com.oshovskii.market.services.ProductService;\n import lombok.RequiredArgsConstructor;\n+import org.springframework.data.domain.Page;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.util.MultiValueMap;\n import org.springframework.web.bind.annotation.*;\n \n import java.util.List;\n \n @RestController\n-@RequestMapping(\"/products\")\n+@RequestMapping(\"/api/v1/products\")\n @RequiredArgsConstructor\n public class ProductController {\n     private final ProductService productService;\n \n     @GetMapping\n-    public List<Product> findAllProducts(\n-            @RequestParam(name = \"min_price\", defaultValue = \"0\") Integer minPrice,\n-            @RequestParam(name = \"max_price\", required = false) Integer maxPrice\n+    public Page<ProductDto> findAllProducts(\n+            @RequestParam MultiValueMap<String, String> params,\n+            @RequestParam(name = \"p\", defaultValue = \"1\") Integer page\n     ) {\n-        if (maxPrice == null) {\n-            maxPrice = Integer.MAX_VALUE;\n+        if (page < 1) {\n+            page = 1;\n         }\n-        return productService.findAllByPrice(minPrice, maxPrice);\n+        return productService.findAll(ProductSpecifications.build(params), page, 5);\n     }\n \n-//    @GetMapping(\"/{id}\")\n-//    public Product findProductById(@PathVariable Long id) {\n-//        return productService.findProductById(id).get();\n-//    }\n+    // http://localhost:8189/market/api/v1/products\n+    @GetMapping(\"/{id}\")\n+    public ProductDto findProductById(@PathVariable Long id) {\n+        return productService.findProductDtoById(id).orElseThrow(() -> new ResourceNotFoundException(\"Product with id: \" + id + \" doens't exist\"));\n+    }\n \n     @PostMapping\n+    @ResponseStatus(HttpStatus.CREATED)\n     public Product saveNewProduct(@RequestBody Product product) {\n         product.setId(null);\n         return productService.saveOrUpdate(product);\n     }\n \n-//    @DeleteMapping(\"/delete/{id}\")\n-//    public void deleteById(@PathVariable Long id) {\n-//        productService.deleteById(id);\n-//    }\n+    @PutMapping\n+    public Product updateProduct(@RequestBody Product product) {\n+        return productService.saveOrUpdate(product);\n+    }\n \n-    @GetMapping(\"/delete/{id}\")\n-    public void deleteById(@PathVariable Long id) {\n+    @DeleteMapping(\"/{id}\")\n+    public void updateProduct(@PathVariable Long id) {\n         productService.deleteById(id);\n     }\n+\n }"
  },
  {
    "sha": "a45f77e5be00c4014d1e3c6e1a634f764b9e8587",
    "filename": "src/main/java/com/oshovskii/market/dto/AuthenticationRequestDto.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/AuthenticationRequestDto.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/AuthenticationRequestDto.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/dto/AuthenticationRequestDto.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,11 @@\n+//package com.oshovskii.market.dto;\n+//\n+//import lombok.Data;\n+///*\n+//нужен ли мне этот класс....\n+// */\n+//@Data\n+//public class AuthenticationRequestDto {\n+//    private String username;\n+//    private String password;\n+//}"
  },
  {
    "sha": "e530e1a0bd240eca2e82a808b7d314a59404797f",
    "filename": "src/main/java/com/oshovskii/market/dto/CartDto.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/CartDto.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/CartDto.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/dto/CartDto.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,22 @@\n+package com.oshovskii.market.dto;\n+\n+import com.oshovskii.market.beans.Cart;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@NoArgsConstructor\n+@Data\n+public class CartDto {\n+    private List<OrderItemDto> items;\n+    private int totalPrice;\n+\n+    public CartDto(Cart cart) {\n+        this.totalPrice = cart.getTotalPrice();\n+        this.items = cart.getItems().stream().map(OrderItemDto::new).collect(Collectors.toList());\n+    }\n+}\n+"
  },
  {
    "sha": "a93aa5c492a6d303a33dbc66b1b803e674994679",
    "filename": "src/main/java/com/oshovskii/market/dto/JwtRequest.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/JwtRequest.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/JwtRequest.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/dto/JwtRequest.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,9 @@\n+package com.oshovskii.market.dto;\n+\n+import lombok.Data;\n+\n+@Data\n+public class JwtRequest {\n+    private String username;\n+    private String password;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "28e67121f41430bc3984c7a32c50931bd8649236",
    "filename": "src/main/java/com/oshovskii/market/dto/JwtResponse.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/JwtResponse.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/JwtResponse.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/dto/JwtResponse.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,10 @@\n+package com.oshovskii.market.dto;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+\n+@Data\n+@AllArgsConstructor\n+public class JwtResponse {\n+    private String token;\n+}"
  },
  {
    "sha": "34b01dd19897bf5e6392b0928399d6d2c450e205",
    "filename": "src/main/java/com/oshovskii/market/dto/OrderDto.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/OrderDto.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/OrderDto.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/dto/OrderDto.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,23 @@\n+package com.oshovskii.market.dto;\n+\n+import com.oshovskii.market.model.Order;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@NoArgsConstructor\n+@Data\n+public class OrderDto {\n+    private Long id;\n+    private String username;\n+    private String address;\n+    private int totalPrice;\n+    private String creationDateTime;\n+\n+    public OrderDto(Order order) {\n+        this.id = order.getId();\n+        this.username = order.getOwner().getUsername();\n+        this.address = order.getAddress();\n+        this.totalPrice = order.getPrice();\n+        this.creationDateTime = order.getCreatedAt().toString();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ff196f4411e048535e202f9a0112ff3f69a11288",
    "filename": "src/main/java/com/oshovskii/market/dto/OrderItemDto.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/OrderItemDto.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/OrderItemDto.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/dto/OrderItemDto.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,23 @@\n+package com.oshovskii.market.dto;\n+\n+import com.oshovskii.market.model.OrderItem;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+\n+@NoArgsConstructor\n+@Data\n+public class OrderItemDto {\n+    private String productTitle;\n+    private int quantity;\n+    private int pricePerProduct;\n+    private int price;\n+\n+    public OrderItemDto(OrderItem orderItem) {\n+        this.productTitle = orderItem.getProduct().getTitle();\n+        this.quantity = orderItem.getQuantity();\n+        this.pricePerProduct = orderItem.getPricePerProduct();\n+        this.price = orderItem.getPrice();\n+    }\n+}\n+"
  },
  {
    "sha": "2e6d1f6d31bd9e86731ef82f0a92bba682a67d62",
    "filename": "src/main/java/com/oshovskii/market/dto/ProductDto.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/ProductDto.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/dto/ProductDto.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/dto/ProductDto.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,20 @@\n+package com.oshovskii.market.dto;\n+\n+import com.oshovskii.market.model.Product;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@NoArgsConstructor\n+public class ProductDto {\n+\n+    private Long id;\n+    private String title;\n+    private int price;\n+\n+    public ProductDto(Product p) {\n+        this.id = p.getId();\n+        this.title = p.getTitle();\n+        this.price = p.getPrice();\n+    }\n+}"
  },
  {
    "sha": "a178a5b16e35e0b8d90d7898fac6b7147f67b08a",
    "filename": "src/main/java/com/oshovskii/market/endpoints/ProductEndpoint.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/endpoints/ProductEndpoint.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/endpoints/ProductEndpoint.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/endpoints/ProductEndpoint.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,25 @@\n+package com.oshovskii.market.endpoints;\n+\n+import com.oshovskii.market.services.ProductService;\n+import com.oshovskii.market.soap.products.GetAllProductsRequest;\n+import com.oshovskii.market.soap.products.GetAllProductsResponse;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.ws.server.endpoint.annotation.Endpoint;\n+import org.springframework.ws.server.endpoint.annotation.PayloadRoot;\n+import org.springframework.ws.server.endpoint.annotation.RequestPayload;\n+import org.springframework.ws.server.endpoint.annotation.ResponsePayload;\n+\n+@Endpoint\n+@RequiredArgsConstructor\n+public class ProductEndpoint {\n+    private static final String NAMESPACE_URI = \"http://www.oshovskii.com/ws/products\";\n+    private final ProductService productService;\n+\n+    @PayloadRoot(namespace = NAMESPACE_URI, localPart = \"getAllProductsRequest\")\n+    @ResponsePayload\n+    public GetAllProductsResponse getAllProducts(@RequestPayload GetAllProductsRequest request) {\n+        GetAllProductsResponse response = new GetAllProductsResponse();\n+        productService.getAllProducts().forEach(response.getProducts()::add);\n+        return response;\n+    }\n+}"
  },
  {
    "sha": "af136208588cb8c95df89bbc6cf08df32181e937",
    "filename": "src/main/java/com/oshovskii/market/exceptions_handling/ExceptionControllerAdvice.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/exceptions_handling/ExceptionControllerAdvice.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/exceptions_handling/ExceptionControllerAdvice.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/exceptions_handling/ExceptionControllerAdvice.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,19 @@\n+package com.oshovskii.market.exceptions_handling;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.ControllerAdvice;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+\n+@ControllerAdvice\n+@Slf4j\n+public class ExceptionControllerAdvice {\n+    @ExceptionHandler\n+    public ResponseEntity<?> handleResourceNotFoundException(ResourceNotFoundException e) {\n+        log.error(e.getMessage());\n+        MarketError err = new MarketError(HttpStatus.NOT_FOUND.value(), e.getMessage());\n+        return new ResponseEntity<>(err, HttpStatus.NOT_FOUND);\n+    }\n+}\n+"
  },
  {
    "sha": "b40d31aedaebe0a4ef21cac44f1863397eab4baa",
    "filename": "src/main/java/com/oshovskii/market/exceptions_handling/MarketError.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/exceptions_handling/MarketError.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/exceptions_handling/MarketError.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/exceptions_handling/MarketError.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,18 @@\n+package com.oshovskii.market.exceptions_handling;\n+\n+import lombok.Data;\n+\n+import java.util.Date;\n+\n+@Data\n+public class MarketError {\n+    private int status;\n+    private String message;\n+    private Date timestamp;\n+\n+    public MarketError(int status, String message) {\n+        this.status = status;\n+        this.message = message;\n+        this.timestamp = new Date();\n+    }\n+}"
  },
  {
    "sha": "23326aa27543846a6e725c278f011f9131732bb5",
    "filename": "src/main/java/com/oshovskii/market/exceptions_handling/ResourceNotFoundException.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/exceptions_handling/ResourceNotFoundException.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/exceptions_handling/ResourceNotFoundException.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/exceptions_handling/ResourceNotFoundException.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,8 @@\n+package com.oshovskii.market.exceptions_handling;\n+\n+public class ResourceNotFoundException extends RuntimeException {\n+    public ResourceNotFoundException(String message) {\n+        super(message);\n+    }\n+}\n+"
  },
  {
    "sha": "7c34cf157b7536a16fb06396bb177f4047b666d6",
    "filename": "src/main/java/com/oshovskii/market/model/Order.java",
    "status": "added",
    "additions": 58,
    "deletions": 0,
    "changes": 58,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/model/Order.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/model/Order.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/model/Order.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,58 @@\n+package com.oshovskii.market.model;\n+\n+import com.oshovskii.market.beans.Cart;\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.hibernate.annotations.Cascade;\n+import org.hibernate.annotations.CreationTimestamp;\n+import org.hibernate.annotations.UpdateTimestamp;\n+\n+import javax.persistence.*;\n+import java.time.LocalDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@NoArgsConstructor\n+@Data\n+@Entity\n+@Table(name = \"orders\")\n+public class Order {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @OneToMany(mappedBy = \"order\")\n+    @Cascade(org.hibernate.annotations.CascadeType.ALL)\n+    private List<OrderItem> items;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"owner_id\")\n+    private User owner;\n+\n+    @Column(name = \"address\")\n+    private String address;\n+\n+    @Column(name = \"price\")\n+    private int price;\n+\n+    @CreationTimestamp\n+    @Column(name = \"created_at\")\n+    private LocalDateTime createdAt;\n+\n+    @UpdateTimestamp\n+    @Column(name = \"updated_at\")\n+    private LocalDateTime updatedAt;\n+\n+    public Order(Cart cart, User user, String address) {\n+        this.items = new ArrayList<>();\n+        this.owner = user;\n+        this.address = address;\n+        this.price = cart.getTotalPrice();\n+        cart.getItems().stream().forEach((oi) -> {\n+            oi.setOrder(this);\n+            items.add(oi);\n+        });\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "8d7846a6097730fb285a3432beae64222cdc159d",
    "filename": "src/main/java/com/oshovskii/market/model/OrderItem.java",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/model/OrderItem.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/model/OrderItem.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/model/OrderItem.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,65 @@\n+package com.oshovskii.market.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.hibernate.annotations.CreationTimestamp;\n+import org.hibernate.annotations.UpdateTimestamp;\n+\n+import javax.persistence.*;\n+import java.time.LocalDateTime;\n+import java.util.List;\n+\n+@NoArgsConstructor\n+@Data\n+@Entity\n+@Table(name = \"order_items\")\n+public class OrderItem {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"order_id\")\n+    private Order order;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"product_id\")\n+    private Product product;\n+\n+\n+\n+    @Column(name = \"quantity\")\n+    private int quantity;\n+\n+    @Column(name = \"price_per_product\")\n+    private int pricePerProduct;\n+\n+    @Column(name = \"price\")\n+    private int price;\n+\n+    @CreationTimestamp\n+    @Column(name = \"created_at\")\n+    private LocalDateTime createdAt;\n+\n+    @UpdateTimestamp\n+    @Column(name = \"updated_at\")\n+    private LocalDateTime updatedAt;\n+\n+    public OrderItem(Product product) {\n+        this.product = product;\n+        this.quantity = 1;\n+        this.pricePerProduct = product.getPrice();\n+        this.price = this.pricePerProduct;\n+    }\n+\n+    public void incrementQuantity() {\n+        quantity++;\n+        price = quantity * pricePerProduct;\n+    }\n+\n+    public void decrementQuantity() {\n+        quantity--;\n+        price = quantity * pricePerProduct;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "120925d9699c6267f22edc42fff1754506211be7",
    "filename": "src/main/java/com/oshovskii/market/model/Product.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/model/Product.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/model/Product.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/model/Product.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -2,8 +2,11 @@\n \n import lombok.Data;\n import lombok.NoArgsConstructor;\n+import org.hibernate.annotations.CreationTimestamp;\n+import org.hibernate.annotations.UpdateTimestamp;\n \n import javax.persistence.*;\n+import java.time.LocalDateTime;\n \n @Entity\n @Table(name = \"products\")\n@@ -20,4 +23,12 @@\n \n     @Column(name = \"price\")\n     private int price;\n+\n+    @Column(name = \"created_at\")\n+    @CreationTimestamp\n+    private LocalDateTime createdAt;\n+\n+    @Column(name = \"updated_at\")\n+    @UpdateTimestamp\n+    private LocalDateTime updatedAt;\n }"
  },
  {
    "sha": "a9533ad6b15204381820a4edbc3f22ece7d956c1",
    "filename": "src/main/java/com/oshovskii/market/model/Role.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/model/Role.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/model/Role.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/model/Role.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,29 @@\n+package com.oshovskii.market.model;\n+\n+import lombok.Data;\n+import org.hibernate.annotations.CreationTimestamp;\n+import org.hibernate.annotations.UpdateTimestamp;\n+\n+import javax.persistence.*;\n+import java.time.LocalDateTime;\n+\n+@Entity\n+@Data\n+@Table(name = \"roles\")\n+public class Role {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @Column(name = \"name\")\n+    private String name;\n+\n+    @CreationTimestamp\n+    @Column(name = \"created_at\")\n+    private LocalDateTime createdAt;\n+\n+    @UpdateTimestamp\n+    @Column(name = \"updated_at\")\n+    private LocalDateTime updatedAt;\n+}"
  },
  {
    "sha": "68d1a21da32c92dfd65d0987677b90dbad4c8b0d",
    "filename": "src/main/java/com/oshovskii/market/model/User.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/blob/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/model/User.java",
    "raw_url": "https://github.com/Qwerty-arch/spring-angularJS-lesson-8/raw/fe75159b8d88a2fbb703ef421c4b5c93dc48aa29/src/main/java/com/oshovskii/market/model/User.java",
    "contents_url": "https://api.github.com/repos/Qwerty-arch/spring-angularJS-lesson-8/contents/src/main/java/com/oshovskii/market/model/User.java?ref=fe75159b8d88a2fbb703ef421c4b5c93dc48aa29",
    "patch": "@@ -0,0 +1,51 @@\n+package com.oshovskii.market.model;\n+\n+import lombok.Data;\n+import org.hibernate.annotations.CreationTimestamp;\n+import org.hibernate.annotations.UpdateTimestamp;\n+\n+import javax.persistence.*;\n+import java.time.LocalDateTime;\n+import java.util.Collection;\n+import java.util.List;\n+\n+@Entity\n+@Data\n+@Table(name = \"users\")\n+public class User {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @Column(name = \"username\")\n+    private String username;\n+\n+    @Column(name = \"password\")\n+    private String password;\n+\n+    @Column(name = \"email\")\n+    private String email;\n+\n+    @ManyToMany\n+    @JoinTable(name = \"users_roles\",\n+            joinColumns = @JoinColumn(name = \"user_id\"),\n+            inverseJoinColumns = @JoinColumn(name = \"role_id\"))\n+    private Collection<Role> roles;\n+\n+    @ManyToMany\n+    @JoinTable(\n+            name = \"orders\",\n+            joinColumns = @JoinColumn(name = \"user_id\"),\n+            inverseJoinColumns = @JoinColumn(name = \"orderItem_id\")\n+    )\n+    private List<OrderItem> orderItems;\n+\n+    @CreationTimestamp\n+    @Column(name = \"created_at\")\n+    private LocalDateTime createdAt;\n+\n+    @UpdateTimestamp\n+    @Column(name = \"updated_at\")\n+    private LocalDateTime updatedAt;\n+}\n\\ No newline at end of file"
  }
]
