[
  {
    "sha": "94a25f7f4cb416c083d265558da75d457237d671",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/.idea/vcs.xml",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/.idea/vcs.xml?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "8ba02e75ae701ac42f7c3245858f55eaedf1971e",
    "filename": "src/main/java/HomeWork6/Animal.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/HomeWork6/Animal.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/HomeWork6/Animal.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/HomeWork6/Animal.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,39 @@\n+package HomeWork6;\n+\n+public class Animal {\n+    protected String name;\n+    private String color;\n+    protected int age;\n+\n+    public Animal(String name, String color, int age) {\n+        this.name = name;\n+        this.color = color;\n+        this.age = age;\n+    }\n+\n+    public Animal(String name){\n+        this(name, \"серый\", 0);\n+    }\n+\n+\n+    @Override\n+    public String toString() {\n+        return \"Animal{\" +\n+                \"name='\" + name + '\\'' +\n+                \", color='\" + color + '\\'' +\n+                \", age=\" + age +\n+                '}';\n+    }\n+\n+    public void run (int distance){\n+        System.out.println(\"Животное бежит \" + distance + \" м\");\n+    }\n+\n+    public void swim(int distance){\n+        System.out.println(\"Животное не умеет плавать\");\n+    }\n+\n+    public void printInfo(){\n+        System.out.println(this.toString());\n+    }\n+}"
  },
  {
    "sha": "17e5b057b787fec5f14b54ebcee91dcddd838d58",
    "filename": "src/main/java/HomeWork6/Cat.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/HomeWork6/Cat.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/HomeWork6/Cat.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/HomeWork6/Cat.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,23 @@\n+package HomeWork6;\n+\n+public class Cat extends Animal {\n+    public Cat(String name, String color, int age) {\n+        super(name, color, age);\n+    }\n+    public Cat(String name) {\n+        super(name);\n+    }\n+\n+\n+    public void run(int distance) {\n+        if (distance < 200) {\n+            System.out.println(\"Кот \" + name + \" бежит \" + distance + \" метров\");\n+        } else if ( distance > 200) {\n+            System.out.println(\"Кот \" + name + \" пробежал 200 метров, он устал и больше бежать не может\");\n+        }\n+    }\n+\n+    public void swim(int distance) {\n+        System.out.println(\"Кот не умеет плавать!\");\n+    }\n+}"
  },
  {
    "sha": "74dc54de2b5bc38c321317defb7d2ea36a335a93",
    "filename": "src/main/java/HomeWork6/Dog.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/HomeWork6/Dog.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/HomeWork6/Dog.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/HomeWork6/Dog.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,26 @@\n+package HomeWork6;\n+\n+public class Dog extends Animal{\n+    public Dog(String name, String color, int age) {\n+        super(name, color, age);\n+    }\n+    public Dog(String name) {\n+        super(name);\n+    }\n+\n+    public void run(int distance) {\n+        if (distance <= 500) {\n+            System.out.println(\"Пёс \" + name + \" бежит \" + distance + \" метров\");\n+        } else if ( distance > 200) {\n+            System.out.println(\"Пёс \" + name + \" пробежал 500 метров, он устал и больше бежать не может\");\n+        }\n+    }\n+\n+    public void swim(int distance) {\n+        if (distance <= 10) {\n+            System.out.println(\"Пёс \" + name + \" проплыл \" + distance + \" метров\");\n+        } else if ( distance > 10) {\n+            System.out.println(\"Пёс \" + name + \" проплыл 10 метров и устал\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "25c09dca6d7e756d4cf706582fd9f44fda91db64",
    "filename": "src/main/java/HomeWork6/HomeWork6.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/HomeWork6/HomeWork6.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/HomeWork6/HomeWork6.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/HomeWork6/HomeWork6.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,31 @@\n+package HomeWork6;\n+\n+public class HomeWork6 {\n+\n+    public static void main(String[] args) {\n+        Animal cat1 = new Cat(\"Федор\", \"белый\", 15);\n+        Animal cat2 = new Cat(\"Барсик\", \"Рыжий\", 5);\n+        Animal cat3 = new Cat(\"Фридрих\");\n+\n+        Animal dog1 = new Dog(\"Шкипер\", \"Черный\", 7);\n+        Animal dog2 = new Dog(\"Рекс\", \"Пятнистый\", 8);\n+\n+        cat1.run(150);\n+        cat2.run(300);\n+        cat3.run(100);\n+        dog1.run(600);\n+        dog2.run(300);\n+\n+        System.out.println(\"===============\");\n+\n+        int sum = 0;\n+\n+        Animal[] animals = {cat1, cat2, cat3, dog1, dog2};\n+        for (int i = 0; i < animals.length; i++) {\n+            animals[i].printInfo();\n+            sum = ++i;\n+        }\n+        System.out.println(\"===============\");\n+        System.out.println(\"У нас \" + sum + \" животных\");\n+    }\n+}"
  },
  {
    "sha": "9f506e9da69de7af7b79e58cd7467a532b12e657",
    "filename": "src/main/java/Lesson1/HomeWork1.java",
    "status": "removed",
    "additions": 0,
    "deletions": 143,
    "changes": 143,
    "blob_url": "https://github.com/ninjafm/java4android/blob/9beb8d347d81f4dea052ee0d0239a027dcd3db08/src/main/java/Lesson1/HomeWork1.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/9beb8d347d81f4dea052ee0d0239a027dcd3db08/src/main/java/Lesson1/HomeWork1.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson1/HomeWork1.java?ref=9beb8d347d81f4dea052ee0d0239a027dcd3db08",
    "patch": "@@ -1,143 +0,0 @@\n-package Lesson1;\n-\n-import java.sql.SQLOutput;\n-\n-public class HomeWork1 {\n-    public static void main(String[] args) {\n-        //2. Создать переменные всех пройденных типов данных, и инициализировать их значения;\n-        task2();\n-\n-        //3. Написать метод вычисляющий выражение a * (b + (c / d)) и возвращающий результат,\n-        // где a, b, c, d – входные параметры этого метода. Помните про типы данных и их приведение\n-        task3();\n-\n-        //4. Написать метод, принимающий на вход два числа, и проверяющий что их сумма лежит\n-        // в пределах от 10 до 20(включительно), если да – вернуть true, в противном случае – false;\n-        task4();\n-\n-        //5. Написать метод, которому в качестве параметра передается целое число,\n-        // метод должен напечатать в консоль положительное ли число передали, или отрицательное;\n-        // Замечание: ноль считаем положительным числом.\n-        task5(10);\n-        task5(-5);\n-\n-        //6. Написать метод, которому в качестве параметра передается целое число,\n-        // метод должен вернуть true, если число отрицательное;\n-        task6(-10);\n-        task6(50);\n-\n-        //7. Написать метод, которому в качестве параметра передается строка,\n-        // обозначающая имя, метод должен вывести в консоль сообщение «Привет, указанное_имя!»;\n-        task7(\"Кирилл\");\n-\n-        //8. * Написать метод, который определяет является ли год високосным,\n-        // и выводит сообщение в консоль. Каждый 4-й год является високосным,\n-        // кроме каждого 100-го, при этом каждый 400-й – високосный.\n-        task8(2000);\n-        task8(2004);\n-        task8(2100);\n-        task8(2021);\n-    }\n-\n-        public static void task2() {\n-        byte varA = 5;\n-        short varB = 10150;\n-        int varC = 700100;\n-        long varD = 1000000000;\n-        char varE = 'c';\n-        boolean varF = true;\n-        String varG = \"Помидор\";\n-        double varH = 10.7;\n-        float varI = 1.7f;\n-            System.out.println(\"Задание 2\");\n-            System.out.println(varA);\n-            System.out.println(varB);\n-            System.out.println(varC);\n-            System.out.println(varD);\n-            System.out.println(varE);\n-            System.out.println(varF);\n-            System.out.println(varG);\n-            System.out.println(varH);\n-            System.out.println(varI);\n-            System.out.println();\n-\n-        }\n-\n-        public static void task3() {\n-            System.out.println(\"Задание 3\");\n-            System.out.println(answer3(3,2,1,5));\n-            System.out.println(answer3(10,-7,5,2));\n-            System.out.println(answer3(5,3,10,-2));\n-            System.out.println();\n-        }\n-\n-        public static double answer3 (int a, int b, double c, int d)\n-        {\n-            double f = (a * (b + (c / d)));\n-            return f;\n-        }\n-\n-        public static void task4(){\n-\n-            System.out.println(\"Задание 4\");\n-            System.out.println(sumVarAVarB(5,10));\n-            System.out.println(sumVarAVarB(10,-7));\n-            System.out.println(sumVarAVarB(15,7));\n-            System.out.println(sumVarAVarB(3,17));\n-            System.out.println();\n-        }\n-        public static boolean sumVarAVarB (int varA, int varB){\n-                if ((varA + varB) >= 10 && (varA + varB) <= 20) {\n-                    return true;\n-                } else {\n-                    return false;\n-\n-\n-                }\n-            }\n-\n-\n-        public static void task5(int varA) {\n-            System.out.println(\"Задание 5\");\n-            if (varA >= 0) {\n-                System.out.println(\"Вы ввели положительное число\");\n-            } else {\n-                System.out.println(\"Вы ввели отрицательное число\");\n-\n-            }\n-        }\n-\n-        public static boolean task6(int varA){\n-\n-\n-            System.out.println(\"Задание 6\");\n-            if (varA < 0) {\n-                System.out.println(true);\n-                return true;\n-            } else {\n-                System.out.println(false);\n-                return false;\n-            }\n-\n-        }\n-\n-        public static void task7(String name) {\n-            System.out.println();\n-            System.out.println(\"Задание 7\");\n-            System.out.println(\"Привет, \" + name);\n-            System.out.println();\n-            System.out.println(\"Задание 8\");\n-        }\n-\n-        public static void task8(int year){\n-            if ((year % 400) == 0) {\n-                System.out.println(year + \" год является високосным\");\n-            } else if ((year % 100) == 0) {\n-                System.out.println(year + \" год является не високосным\");\n-            } else if ((year % 4) == 0) {\n-                System.out.println(year + \" год является високосным\");\n-            } else {\n-                System.out.println(year + \" год не високосный\");\n-            }\n-        }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "171d64f1e794f3518ed5523704c8584a8cb3aaa8",
    "filename": "src/main/java/Lesson1/Homework1.java",
    "status": "added",
    "additions": 143,
    "deletions": 0,
    "changes": 143,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson1/Homework1.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson1/Homework1.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson1/Homework1.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,143 @@\n+package Lesson1;\n+\n+import java.sql.SQLOutput;\n+\n+public class Homework1 {\n+    public static void main(String[] args) {\n+        //2. Создать переменные всех пройденных типов данных, и инициализировать их значения;\n+        task2();\n+\n+        //3. Написать метод вычисляющий выражение a * (b + (c / d)) и возвращающий результат,\n+        // где a, b, c, d – входные параметры этого метода. Помните про типы данных и их приведение\n+        task3();\n+\n+        //4. Написать метод, принимающий на вход два числа, и проверяющий что их сумма лежит\n+        // в пределах от 10 до 20(включительно), если да – вернуть true, в противном случае – false;\n+        task4();\n+\n+        //5. Написать метод, которому в качестве параметра передается целое число,\n+        // метод должен напечатать в консоль положительное ли число передали, или отрицательное;\n+        // Замечание: ноль считаем положительным числом.\n+        task5(10);\n+        task5(-5);\n+\n+        //6. Написать метод, которому в качестве параметра передается целое число,\n+        // метод должен вернуть true, если число отрицательное;\n+        task6(-10);\n+        task6(50);\n+\n+        //7. Написать метод, которому в качестве параметра передается строка,\n+        // обозначающая имя, метод должен вывести в консоль сообщение «Привет, указанное_имя!»;\n+        task7(\"Кирилл\");\n+\n+        //8. * Написать метод, который определяет является ли год високосным,\n+        // и выводит сообщение в консоль. Каждый 4-й год является високосным,\n+        // кроме каждого 100-го, при этом каждый 400-й – високосный.\n+        task8(2000);\n+        task8(2004);\n+        task8(2100);\n+        task8(2021);\n+    }\n+\n+    public static void task2() {\n+        byte varA = 5;\n+        short varB = 10150;\n+        int varC = 700100;\n+        long varD = 1000000000;\n+        char varE = 'c';\n+        boolean varF = true;\n+        String varG = \"Помидор\";\n+        double varH = 10.7;\n+        float varI = 1.7f;\n+        System.out.println(\"Задание 2\");\n+        System.out.println(varA);\n+        System.out.println(varB);\n+        System.out.println(varC);\n+        System.out.println(varD);\n+        System.out.println(varE);\n+        System.out.println(varF);\n+        System.out.println(varG);\n+        System.out.println(varH);\n+        System.out.println(varI);\n+        System.out.println();\n+\n+    }\n+\n+    public static void task3() {\n+        System.out.println(\"Задание 3\");\n+        System.out.println(answer3(3,2,1,5));\n+        System.out.println(answer3(10,-7,5,2));\n+        System.out.println(answer3(5,3,10,-2));\n+        System.out.println();\n+    }\n+\n+    public static double answer3 (int a, int b, double c, int d)\n+    {\n+        double f = (a * (b + (c / d)));\n+        return f;\n+    }\n+\n+    public static void task4(){\n+\n+        System.out.println(\"Задание 4\");\n+        System.out.println(sumVarAVarB(5,10));\n+        System.out.println(sumVarAVarB(10,-7));\n+        System.out.println(sumVarAVarB(15,7));\n+        System.out.println(sumVarAVarB(3,17));\n+        System.out.println();\n+    }\n+    public static boolean sumVarAVarB (int varA, int varB){\n+        if ((varA + varB) >= 10 && (varA + varB) <= 20) {\n+            return true;\n+        } else {\n+            return false;\n+\n+\n+        }\n+    }\n+\n+\n+    public static void task5(int varA) {\n+        System.out.println(\"Задание 5\");\n+        if (varA >= 0) {\n+            System.out.println(\"Вы ввели положительное число\");\n+        } else {\n+            System.out.println(\"Вы ввели отрицательное число\");\n+\n+        }\n+    }\n+\n+    public static boolean task6(int varA){\n+\n+\n+        System.out.println(\"Задание 6\");\n+        if (varA < 0) {\n+            System.out.println(true);\n+            return true;\n+        } else {\n+            System.out.println(false);\n+            return false;\n+        }\n+\n+    }\n+\n+    public static void task7(String name) {\n+        System.out.println();\n+        System.out.println(\"Задание 7\");\n+        System.out.println(\"Привет, \" + name);\n+        System.out.println();\n+        System.out.println(\"Задание 8\");\n+    }\n+\n+    public static void task8(int year){\n+        if ((year % 400) == 0) {\n+            System.out.println(year + \" год является високосным\");\n+        } else if ((year % 100) == 0) {\n+            System.out.println(year + \" год является не високосным\");\n+        } else if ((year % 4) == 0) {\n+            System.out.println(year + \" год является високосным\");\n+        } else {\n+            System.out.println(year + \" год не високосный\");\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "239b81c1635b68e1eebc1564b2fe1d7f6bfab4cd",
    "filename": "src/main/java/Lesson2/Homework2.java",
    "status": "added",
    "additions": 258,
    "deletions": 0,
    "changes": 258,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson2/Homework2.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson2/Homework2.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson2/Homework2.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,258 @@\n+package Lesson2;\n+\n+import java.util.Arrays;\n+\n+public class Homework2 {\n+    public static void main(String[] args) {\n+        //Задание 1. Задать целочисленный массив, состоящий из элементов 0 и 1.\n+        // Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].\n+        // С помощью цикла и условия заменить 0 на 1, 1 на 0.\n+        task1();\n+\n+        //Задание 2. Задать пустой целочисленный массив размером 8.\n+        // С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21.\n+        task2();\n+\n+        //Задание 3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ],\n+        // пройти по нему циклом и числа меньшие 6 умножить на 2.\n+        task3();\n+\n+        //Задание 4. Создать квадратный двумерный целочисленный массив\n+        // (количество строк и столбцов одинаковое) и с помощью цикла (-ов)\n+        // заполнить его диагональные элементы единицами.\n+        task4();\n+\n+        //**Задание 5. Задать одномерный массив и найти в нем минимальный\n+        // и максимальный элементы (без помощи интернета);\n+        task5();\n+\n+        //**Задание 6. Написать метод, в который передается не пустой одномерный целочисленный\n+        // массив, метод должен вернуть true, если в массиве есть место, в котором\n+        // сумма левой и правой части массива равны. Примеры:\n+        // checkBalance([2, 2, 2, 1, 2, 2, || 10, 1]) → true,\n+        // checkBalance([1, 1, 1, || 2, 1]) → true, граница показана\n+        // символами ||, эти символы в массив не входят.\n+        //System.out.println(task6(new int[]{10, 2, 2, 2, 2, 2}));\n+        //System.out.println(task6(new int[]{2, 2, 4, 2, 6, 16}));\n+        System.out.println(task6test(new int[]{2, 2, 4, 2, 6, 16}));\n+        System.out.println(task6test(new int[]{1, 3, 5, 2, 6, 16}));\n+        System.out.println(task6test(new int[]{1, 1, 1, 3}));\n+        System.out.println(task6test(new int[]{16, 1, 12, 3}));\n+        System.out.println(task6test(new int[]{0, 0, 0, 0}));\n+\n+        //Задание 7.  **** Написать метод, которому на вход подается\n+        // одномерный массив и число n (может быть положительным,\n+        // или отрицательным), при этом метод должен сместить все\n+        // элементымассива на n позиций. Для усложнения задачи\n+        // нельзя пользоваться вспомогательными массивами.\n+        task7(new int[]{1, 2, 3, 4, 5},1);\n+        task7(new int[]{1, 2, 3, 4, 5},3);\n+        task7(new int[]{1, 2, 3, 4, 5},-1);\n+        task7(new int[]{1, 2, 3, 4, 5},-3);\n+\n+        //Задание 8.\n+        // Задать размерность матрицы от 5 до 7\n+        // Создать матрицу с указанной размерностью\n+        // Заполнить матрицу по спирали (числа увеличиваются на 1) (число начинается с 1)\n+        task8();\n+\n+    }\n+\n+        public static void task1() {\n+            int[] arr = {1, 0, 1, 0, 1, 1, 0, 0, 1, 0};\n+            System.out.println(\"Задание 1.\");\n+            System.out.println(\"Изначальный массив \" + Arrays.toString(arr));\n+            for(int i = 0; i < arr.length; i++){\n+                if (arr[i] == 0) {\n+                    arr[i] = 1;\n+                } else {\n+                    arr[i] = 0;\n+                }\n+            }\n+            System.out.println(\"Измененный массив  \" + Arrays.toString(arr));\n+            System.out.println();\n+        }\n+\n+        public static void task2 () {\n+            System.out.println(\"Задание 2.\");\n+        int[] arr = new int[8];\n+        for (int i = 0, j = 0; i < arr.length; i++) {\n+            arr[i] = 0 + j;\n+            j = j + 3;\n+        }\n+            System.out.println(\"Массив: \" + Arrays.toString(arr));\n+            System.out.println();\n+        }\n+\n+        public static void task3 () {\n+            System.out.println(\"Задание 3.\");\n+        int[] arr = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};\n+            System.out.println(\"Изначальный массив: \" + Arrays.toString(arr));\n+        for (int i = 0; i < arr.length; i++){\n+            if (arr[i] < 6) {\n+                arr[i] = arr[i] * 2;\n+            }\n+        }\n+            System.out.println(\"Конечный массив: \" + Arrays.toString(arr));\n+            System.out.println();\n+        }\n+\n+        public static void task4() {\n+            System.out.println(\"Задание 4.\");\n+            int [] [] array = new int [4] [4];\n+            for (int i = 0; i < array.length; i++) {\n+                for (int j = 0, j2 = array.length; j < array.length; j++, j2--) {\n+                    if (i == j || i == (j2 - 1)) {\n+                        array[i][j] = 1;\n+                    } else {\n+                        array[i][j] = 0;\n+                    }\n+                }\n+            }\n+            for (int i = 0; i < array.length; i++) {\n+                for (int j = 0; j < array[i].length; j++) {\n+                    System.out.printf(\"%3d\",array[i][j]);\n+                }\n+                System.out.println();\n+            }\n+            System.out.println();\n+        }\n+\n+        public static void task5() {\n+            System.out.println(\"Задание 5\");\n+            int [] arr = {3, 50, 3, 6, 20, 30, 11};\n+            int min = arr[0];\n+            int max = arr[0];\n+            for (int i = 0; i < arr.length; i++) {\n+                if (arr[i] < min) {\n+                    min = arr[i];\n+                }\n+            }\n+            for (int i = 0; i < arr.length; i++) {\n+                if (arr[i] > max) {\n+                    max = arr[i];\n+                }\n+            }\n+            System.out.println(\"Массив: \" + Arrays.toString(arr));\n+            System.out.println(\"Минимальное значение в массиве: \" + min);\n+            System.out.println(\"Максимальное значение в массиве: \" + max);\n+        }\n+\n+    public static boolean task6(int[] arr) {\n+        System.out.println();\n+        System.out.println(\"Задание 6\");\n+        int sumRight = 0;\n+        int sumLeft = arr[0];\n+        for (int i = 0; i < arr.length - 1; i++) {\n+            sumRight += arr[i + 1];\n+        }\n+        if (sumLeft == sumRight) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+\n+    }\n+\n+    public static boolean task6test (int[] arr) {\n+        System.out.println();\n+        System.out.println(\"Задание 6 тест\");\n+        int sum = 0;\n+        int sumLeft = 0;\n+        int sumRight = 0;\n+        int sumLeftResault = 0;\n+        int sumRightResault = 0;\n+        for (int i = 0; i < arr.length; i++) {\n+            sum += arr[i];\n+        }\n+\n+        for (int i = 0; i < arr.length; i++) {\n+            sumLeft += arr[i];\n+            sumRight = sum - sumLeft;\n+            if (sumRight == sumLeft) {\n+                sumLeftResault = sumLeft;\n+                sumRightResault = sumRight;\n+            }\n+        }\n+         if ((sumRightResault == sumLeftResault && sumLeftResault != 0) || (sum == 0)) {\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    public static void task7(int[] arr, int n) {\n+        System.out.println();\n+        System.out.println(\"Задание 7.\");\n+        System.out.println(\"Текущий массив: \" + Arrays.toString(arr));\n+        System.out.println(\"Значение n: \" + n);\n+        if (n > 0) {\n+            for (int i = 0; i < n; i++) {\n+                int lastElement = arr[arr.length - 1];\n+                System.arraycopy(arr, 0, arr, 1, arr.length - 1);\n+                arr[0] = lastElement;\n+            }\n+            System.out.println(\"Измененный массив: \" + Arrays.toString(arr));\n+        }\n+\n+        if (n < 0) {\n+            for (int i = 0; i > n; i--) {\n+                int firstElement = arr[0];\n+                System.arraycopy(arr, 1, arr, 0, arr.length - 1);\n+                arr[arr.length - 1] = firstElement;\n+            }\n+            System.out.println(\"Измененный массив: \" + Arrays.toString(arr));\n+        }\n+    }\n+\n+    public static void task8 () {\n+        System.out.println();\n+        System.out.println(\"Задание 8\");\n+        int n = 0;\n+        int[][] arr = new int[5][5];\n+        System.out.println(\"Длина массива: \" + arr.length);\n+        for (int i = 0; i < arr.length; i++) {\n+                int j = 0;\n+                arr[j][i] = ++n;\n+        }\n+        for (int i = 1; i < arr.length - 1; i++) {\n+            int j = arr.length - 1;\n+            arr[i][j] = ++n;\n+        }\n+        for (int i = arr.length - 1; i >= 0; i--) {\n+            int j = arr.length - 1;\n+            arr[j][i] = ++n;\n+        }\n+        for (int i = arr.length - 2; i > 0; i--) {\n+            int j = 0;\n+            arr[i][j] = ++n;\n+        }\n+        for (int i = 1; i < arr.length - 1; i++) {\n+            int j = 1;\n+            arr[j][i] = ++n;\n+        }\n+        for (int i = 2; i < arr.length - 1; i++) {\n+            int j = arr.length - 2;\n+            arr[i][j] = ++n;\n+        }\n+        for (int i = arr.length - 3; i >= 1; i--) {\n+            int j = arr.length - 2;\n+            arr[j][i] = ++n;\n+        }\n+        for (int i = arr.length - 3; i > 1; i--) {\n+            int j = 1;\n+            arr[i][j] = ++n;\n+        }\n+        for (int i = 2; i < arr.length - 2; i++) {\n+            int j = 2;\n+            arr[j][i] = ++n;\n+        }\n+\n+        for (int i = 0; i < arr.length; i++) {\n+            for (int j = 0; j < arr[i].length; j++) {\n+                System.out.printf(\"%3d\",arr[i][j]);\n+            }\n+            System.out.println();\n+        }\n+    }\n+}"
  },
  {
    "sha": "cb5ac9c54251dc24f28ac592ca3731b64f4a6d40",
    "filename": "src/main/java/Lesson3/HW3_task1.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson3/HW3_task1.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson3/HW3_task1.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson3/HW3_task1.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,42 @@\n+package Lesson3;\n+\n+import java.util.Scanner;\n+\n+public class HW3_task1 {\n+    public static void main (String[] args) {\n+        guessingGame();\n+    }\n+\n+    public static void guessingGame() {\n+        Scanner keyboard = new Scanner(System.in);\n+        while (true) {\n+            System.out.println(\"Сыграем в угадайку? да/ нет\");\n+            String again = keyboard.nextLine();\n+            if (again.toLowerCase().equals(\"да\")) {\n+                int number = (int) (Math.random() * 10 + 1);\n+                //System.out.println(\"Загаданное число: \" + number);\n+                System.out.println(\"Угадайте число от 1 до 10:\");\n+                int n = 2;\n+                while (n >= 0) {\n+                    int playerNumber = keyboard.nextInt();\n+\n+                    if (number == playerNumber) {\n+                        System.out.println(\"Поздравляем, вы угадали число!\");\n+                        break;\n+                    } else if (playerNumber < number) {\n+                        System.out.println(\"Вы ввели меньшее число! Осталось попыток: \" + n);\n+                        n--;\n+                    } else if (playerNumber > number) {\n+                        System.out.println(\"Вы ввели большее число! Осталось попыток: \" + n);\n+                        n--;\n+                    }\n+                }\n+                System.out.println(\"Игра окончена!\");\n+            } else if (again.toLowerCase().equals(\"нет\")) {\n+                System.out.println(\"Игра окончена!\");\n+                break;\n+            }\n+        }\n+        keyboard.close();\n+    }\n+}"
  },
  {
    "sha": "1476bf003c814b25d83657830216270feb8aae9b",
    "filename": "src/main/java/Lesson3/HW3_task2.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson3/HW3_task2.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson3/HW3_task2.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson3/HW3_task2.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,49 @@\n+package Lesson3;\n+\n+import java.util.Scanner;\n+\n+public class HW3_task2 {\n+    public static void main(String[] args) {\n+        wordGuess();\n+    }\n+\n+    public static void wordGuess() {\n+        System.out.println(\"Игра УГАДАЙ СЛОВО\");\n+        Scanner keyword = new Scanner(System.in);\n+        String[] words = {\"apple\", \"orange\", \"lemon\", \"banana\", \"apricot\", \"avocado\", \"broccoli\", \"carrot\", \"cherry\", \"garlic\", \"grape\", \"melon\", \"leak\", \"kiwi\", \"mango\", \"mushroom\", \"nut\", \"olive\", \"pea\", \"peanut\", \"pear\", \"pepper\", \"pineapple\", \"pumpkin\", \"potato\"};\n+        //String[] words2 = {\"ap*****\", \"or*****\", \"le*****\", \"ba*****\", \"ap*****\", \"av*****\", \"br*****\", \"ca*****\", \"ch*****\", \"ga*****\", \"gr*****\", \"me*****\", \"le*****\", \"ki*****\", \"ma*****\", \"mu*****\", \"nu*****\", \"ol*****\", \"pe*****\", \"pe*****\", \"pe*****\", \"pe*****\", \"pi*****\", \"pu*****\", \"po*****\"};\n+        while (true) {\n+            int n = 3;\n+            int number = (int) (Math.random() * words.length);\n+            String str = words[number];\n+            char a = str.charAt(0);\n+            System.out.println(\"Сыграем? да/нет\");\n+            String again = keyword.next();\n+            if (again.toLowerCase().equals(\"да\")) {\n+\n+            while (n >= 0) {\n+                System.out.println(\"Угадайте загаданное слово!\");\n+                String playerWord = keyword.next();\n+\n+                if (playerWord.toLowerCase().equals(words[number])) {\n+                    System.out.println(\"Вы угадали! Игра окончена.\");\n+                    break;\n+                } else {\n+                    System.out.println(\"Вы не угадали! Подсказка: \" + a + str.charAt(1) + \"#############\");\n+                    System.out.println(\"Осталось попыток: \" + n);\n+                    n--;\n+                }\n+\n+\n+            }\n+            } else if (again.toLowerCase().equals(\"нет\")) {\n+                System.out.println(\"Игра окончена!\");\n+                break;\n+            }\n+        }\n+\n+        keyword.close();\n+    }\n+}\n+\n+"
  },
  {
    "sha": "a9eb330cfa663fe3684744ddd1a8d5133006056f",
    "filename": "src/main/java/Lesson4/TicTacToe.java",
    "status": "added",
    "additions": 230,
    "deletions": 0,
    "changes": 230,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson4/TicTacToe.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson4/TicTacToe.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson4/TicTacToe.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,230 @@\n+package Lesson4;\n+\n+import java.util.Random;\n+import java.util.Scanner;\n+\n+public class TicTacToe {\n+\n+    static final int SIZE = 5;\n+\n+    static final char DOT_EMPTY = '•';\n+    static final char DOT_HUMAN = 'X';\n+    static final char DOT_AI = 'O';\n+\n+    static final char HEADER_FIRST_SYMBOL = '♥';\n+    static final String EMPTY = \" \";\n+\n+    static final char[][] MAP = new char[SIZE][SIZE];\n+    static final Scanner in = new Scanner(System.in);\n+    static final Random random = new Random();\n+    static int turnsCount;\n+\n+\n+    public static void main(String[] args) {\n+        turnGame();\n+    }\n+\n+    public static void turnGame() {\n+\n+        //инициализация поля\n+        initMap();\n+\n+        //печать поля в консоль\n+        printMap();\n+\n+        //игра\n+        playGame();\n+\n+    }\n+\n+    private static void initMap() {\n+        for (int i = 0; i < SIZE; i++) {\n+            for (int j = 0; j < SIZE; j++) {\n+                MAP[i][j] = DOT_EMPTY;\n+            }\n+        }\n+    }\n+\n+    private static void printMap() {\n+        //печать заголовка\n+        printHeaderMap();\n+\n+        //печать поля\n+        printBodyMap();\n+    }\n+\n+    private static void printHeaderMap() {\n+        System.out.print(HEADER_FIRST_SYMBOL + EMPTY);\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            printMapNumber(i);\n+        }\n+        System.out.println();\n+\n+    }\n+\n+    private static void printMapNumber(int i) {\n+        System.out.print(i + 1 + EMPTY);\n+    }\n+\n+    private static void printBodyMap() {\n+        for (int i = 0; i < SIZE; i++) {\n+            printMapNumber(i);\n+            for (int j = 0; j < SIZE; j++) {\n+                System.out.print(MAP[i][j] + EMPTY);\n+            }\n+            System.out.println();\n+        }\n+    }\n+\n+\n+    private static void playGame() {\n+\n+        turnsCount = 0;\n+        while (true) {\n+            humanTurn();\n+            printMap();\n+            checkEnd(DOT_HUMAN);\n+\n+\n+            turnAI();\n+            printMap();\n+            checkEnd(DOT_AI);\n+        }\n+    }\n+\n+    private static void humanTurn() {\n+        int rowNumber;\n+        int columnNumber;\n+        boolean isInputValid = true;\n+\n+\n+        System.out.println(\"\\nХод человека! Введите номера строки и столбца\");\n+        do {\n+            rowNumber = -1;\n+            columnNumber = -1;\n+            isInputValid = true;\n+\n+            System.out.print(\"Строка: \");\n+            if (in.hasNextInt()) {\n+                rowNumber = in.nextInt() - 1;\n+            } else {\n+                processingIncorrectInput();\n+                isInputValid = false;\n+                continue;\n+            }\n+\n+            System.out.print(\"Столбик: \");\n+            if (in.hasNextInt()) {\n+                columnNumber = in.nextInt() - 1;\n+            } else {\n+                processingIncorrectInput();\n+                isInputValid = false;\n+            }\n+\n+        } while (!(isInputValid && isHumanTurnValid(rowNumber, columnNumber)));\n+\n+        MAP[rowNumber][columnNumber] = DOT_HUMAN;\n+        turnsCount++;\n+    }\n+\n+    private static void processingIncorrectInput() {\n+        System.out.println(\"Ошибка ввода! Введите число в диапазоне размера игрового поля\");\n+        in.nextLine();\n+    }\n+\n+    private static boolean isHumanTurnValid(int rowNumber, int columnNumber) {\n+        if (!isNumbersValid(rowNumber, columnNumber)) {\n+            System.out.println(\"\\nПроверьте значения строки и столбца\");\n+            return false;\n+        } else if (!isCellOccupancy(rowNumber, columnNumber)) {\n+            System.out.println(\"\\nВы выбрали занятую ячейку\");\n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n+    private static boolean isNumbersValid(int rowNumber, int columnNumber) {\n+        return !(rowNumber >= SIZE || rowNumber < 0 || columnNumber >= SIZE || columnNumber < 0);\n+    }\n+\n+    private static boolean isCellOccupancy(int rowNumber, int columnNumber) {\n+        return MAP[rowNumber][columnNumber] == DOT_EMPTY;\n+    }\n+\n+\n+    private static void checkEnd(char symbol) {\n+\n+        if (checkWin(symbol)) {\n+            if (symbol == DOT_HUMAN) {\n+                System.out.println(\"Ура! Вы победили!\");\n+            } else {\n+                System.out.println(\"Восстание близко... ИИ победил...\");\n+            }\n+            System.exit(0);\n+        } else if (isMapFull()) {\n+            System.out.println(\"Ничья!\");\n+            System.exit(0);\n+        }\n+    }\n+\n+    private static boolean isMapFull() {\n+        return turnsCount == SIZE * SIZE;\n+    }\n+\n+    private static boolean checkWin(char symbol) {\n+        for(int i = 0; i < SIZE; i++) {\n+            for(int j = 0; j < SIZE - 2; j++) {\n+                if (MAP[i][j] == symbol && MAP[i][j + 1] == symbol && MAP[i][j + 2] == symbol) {\n+                    return true;\n+                }\n+            }\n+        }\n+        for(int i = 0; i < SIZE - 2; i++) {\n+            for(int j = 0; j < SIZE; j++) {\n+                if (MAP[i][j] == symbol && MAP[i + 1][j] == symbol && MAP[i + 2][j] == symbol) {\n+                    return true;\n+                }\n+            }\n+        }\n+        for(int i = 0; i < SIZE - 2; i++) {\n+            for(int j = 0; j < SIZE - 2; j++) {\n+                if (MAP[i][j] == symbol && MAP[i + 1][j + 1] == symbol && MAP[i + 2][j + 2] == symbol) {\n+                    return true;\n+                }\n+            }\n+        }\n+\n+        for (int i = 0; i < SIZE - 2; i++) {\n+            for (int j = SIZE - 1; j > 0; j -- ) {\n+                if (MAP[i][j] == symbol && MAP[i + 1][j - 1] == symbol && MAP[i + 2][j - 2] == symbol) {\n+                return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+\n+\n+    private static void turnAI() {\n+        int rowNumber;\n+        int columnNumber;\n+\n+        System.out.println(\"\\nХод компьютера!\");\n+\n+\n+\n+        //Если победы игрока нет, то ходим рандомно\n+\n+        do {\n+            rowNumber = random.nextInt(SIZE);\n+            columnNumber = random.nextInt(SIZE);\n+        } while (!isCellOccupancy(rowNumber, columnNumber));\n+\n+        MAP[rowNumber][columnNumber] = DOT_AI;\n+        turnsCount++;\n+    }\n+\n+}"
  },
  {
    "sha": "1f833addab17ec88b53058cb2d193c0853b576e0",
    "filename": "src/main/java/Lesson5/Employee.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson5/Employee.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson5/Employee.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson5/Employee.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,59 @@\n+package Lesson5;\n+\n+public class Employee {\n+    public String name;\n+    public String post;\n+    public String email;\n+    private String phone;\n+    private int salary;\n+    private int age;\n+\n+    public Employee(String name, String post, String email, String phone, int salary, int age) {\n+        this.name = name;\n+        this.post = post;\n+        this.email = email;\n+        this.phone = phone;\n+        this.salary = salary;\n+        this.age = age;\n+    }\n+\n+\n+    public Employee (String name, int age) {\n+        this.name = name;\n+        this.age = age;\n+    }\n+\n+    public Employee (String name) {\n+        this.name = name;\n+    }\n+\n+    public String getPhone() {\n+        return phone;\n+    }\n+\n+    public void setPhone(String phone) {\n+        this.phone = phone;\n+    }\n+\n+    public int getSalary() {\n+        return salary;\n+    }\n+\n+    public void setSalary(int salary) {\n+        this.salary = salary;\n+    }\n+\n+    public int getAge() {\n+        return age;\n+    }\n+\n+    public void setAge(int age) {\n+        this.age = age;\n+    }\n+\n+    void printInfo() {\n+        System.out.println(this);\n+    }\n+\n+    public String toString() {return \"ФИО: \" + name + \" Должность: \" + post + \" Почта: \" + email + \" Телефон: \" + phone + \" Зарплата: \" + salary + \" Возраст: \" + age; }\n+}"
  },
  {
    "sha": "abbbbc757ac24b69745df49ccf6042d710f637af",
    "filename": "src/main/java/Lesson5/HomeWork5.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson5/HomeWork5.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson5/HomeWork5.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson5/HomeWork5.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,37 @@\n+package Lesson5;\n+\n+import java.util.Random;\n+\n+public class HomeWork5 {\n+    public static void main (String[] args) {\n+        Employee Employee1 = new Employee(\"Виктор Петрович Сидоров\", \"бухгалтер\", \"petrov@yandex.ru\", \"+79999999999\", 30000, 30);\n+        Employee Employee2 = new Employee(\"Иван Иванович Иванов\");\n+        Employee Employee3 = new Employee(\"Иван Петрович Иванов\");\n+        Employee Employee4 = new Employee(\"Игорь Васильевич Ананасов\", \"инженер\", \"ananasov@yandex.ru\", \"+79276664455\", 50000, 45);\n+        Employee Employee5 = new Employee(\"Петр Андреевич Игнатенко\", 56);\n+\n+        /*Employee1.printInfo();\n+        Employee2.printInfo();\n+        Employee3.printInfo();\n+        Employee4.printInfo();\n+        Employee5.printInfo();*/\n+\n+\n+\n+\n+        System.out.println(\"====================== Сотрудники с возрастом больше 40 лет ====================\");\n+\n+        Employee[] Employees = {Employee1, Employee2, Employee3, Employee4, Employee5};\n+\n+        for (int i = 0; i < Employees.length; i++) {\n+            Employees[i].setAge((int)(Math.random()*110));\n+        }\n+\n+\n+        for (int i = 0; i < Employees.length; i++) {\n+            if (Employees[i].getAge() >= 40) {\n+                Employees[i].printInfo();\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "9f3ff1f72ddd7aed4c1244d2d3ea9f632f59ba29",
    "filename": "src/main/java/Lesson7/Cat.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson7/Cat.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson7/Cat.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson7/Cat.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,24 @@\n+package Lesson7;\n+\n+import java.util.Random;\n+\n+public class Cat {\n+    private String name;\n+    private Boolean fullness;\n+    private Random random = new Random();\n+\n+    public Cat(String name, Boolean fullness) {\n+        this.name = name;\n+        this.fullness = fullness;\n+\n+    }\n+\n+    public void eat(Plate plate) {\n+        fullness = plate.decreaseFood(random.nextInt(10) + 10);\n+\n+    }\n+\n+    public void printInfo() {\n+        System.out.println(\"Котик \" + name + \" покушал: \" + fullness );\n+    }\n+}"
  },
  {
    "sha": "08184ac9ff938311afcc5a4e02a92a55f3b0793e",
    "filename": "src/main/java/Lesson7/HomeWork7.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson7/HomeWork7.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson7/HomeWork7.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson7/HomeWork7.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,23 @@\n+package Lesson7;\n+\n+public class HomeWork7 {\n+    public static void main(String[] args) {\n+        Cat cat1 = new Cat(\"Пушок\", false);\n+        Cat cat2 = new Cat(\"Марти\", false);\n+        Cat cat3 = new Cat(\"Фед\", false);\n+        Plate plate = new Plate(10);\n+\n+        plate.printInfo();\n+        cat1.eat(plate);\n+        plate.addFood(150);\n+        cat2.eat(plate);\n+        cat3.eat(plate);\n+\n+        plate.printInfo();\n+\n+        Cat[] cats = {cat1, cat2, cat3};\n+        for (int i = 0; i < cats.length; i++) {\n+            cats[i].printInfo();\n+        }\n+    }\n+}"
  },
  {
    "sha": "0b839a93251279efec171eb10fb8f8419f9aebbc",
    "filename": "src/main/java/Lesson7/Plate.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson7/Plate.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson7/Plate.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson7/Plate.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,34 @@\n+package Lesson7;\n+\n+import Lesson5.cat;\n+\n+public class Plate {\n+    private int food;\n+\n+    public Plate(int countFoods){\n+        food = countFoods;\n+    }\n+\n+\n+    //проверка а достаточно ли еды в миске\n+    public boolean decreaseFood(int countFoods) {\n+        if (food >= countFoods) {\n+            food -= countFoods;\n+            return true;\n+        } else if ( food < countFoods) {\n+            System.out.println(\"Еды в миске недостаточно, котик не покушал\");\n+        }\n+            return false;\n+    }\n+    //метод который добавляет еду в миску\n+    public void addFood(int foodQuantity) {\n+        food += foodQuantity;\n+        System.out.println(\"В миску добавлена еда в размере \" + foodQuantity + \" единиц\");\n+    }\n+\n+    public void printInfo() {\n+        System.out.println(\"    Еды в миске: \" + food);\n+    }\n+\n+\n+}"
  },
  {
    "sha": "8e77bc372ff5448032aaad62bf7366b030140b4f",
    "filename": "src/main/java/Lesson8/HomeWork8/Barrier.java",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Barrier.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Barrier.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson8/HomeWork8/Barrier.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,4 @@\n+package Lesson8.HomeWork8;\n+\n+public interface Barrier {\n+}"
  },
  {
    "sha": "12dc417a0a6da004557e0c1ea13818c163a94a57",
    "filename": "src/main/java/Lesson8/HomeWork8/Cat.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Cat.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Cat.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson8/HomeWork8/Cat.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,22 @@\n+package Lesson8.HomeWork8;\n+\n+import java.util.Random;\n+\n+public class Cat implements Player{\n+    private String name;\n+    private Random random = new Random();\n+\n+    public Cat(String name) {\n+        this.name = name;\n+    }\n+\n+    public void run(Track track) {\n+        System.out.println(\"Котик \" + name + \" бежит по дорожке\");\n+        track.randomRun(random.nextBoolean());\n+    }\n+\n+    public void jump(Wall wall) {\n+        System.out.println(\"Котик \" + name + \" прыгает через стену\");\n+        wall.randomJump(random.nextBoolean());\n+    }\n+}"
  },
  {
    "sha": "523d61fc2a889bf1fd60f18b5773a1461e0da3c8",
    "filename": "src/main/java/Lesson8/HomeWork8/Finish.java",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Finish.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Finish.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson8/HomeWork8/Finish.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,4 @@\n+package Lesson8.HomeWork8;\n+\n+public class Finish implements Barrier{\n+}"
  },
  {
    "sha": "8ee361b4f72c3cb37726d4cd70ba1ad41eb0b017",
    "filename": "src/main/java/Lesson8/HomeWork8/Human.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Human.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Human.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson8/HomeWork8/Human.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,22 @@\n+package Lesson8.HomeWork8;\n+\n+import java.util.Random;\n+\n+public class Human implements Player{\n+    private String name;\n+    private Random random = new Random();\n+\n+    public Human(String name) {\n+        this.name = name;\n+    }\n+\n+    public void run(Track track) {\n+        System.out.println(\"Человек \" + name + \" бежит по дорожке\");\n+        track.randomRun(random.nextBoolean());\n+    }\n+\n+    public void jump(Wall wall) {\n+        System.out.println(\"Человек \" + name + \" прыгает через стену\");\n+        wall.randomJump(random.nextBoolean());\n+    }\n+}"
  },
  {
    "sha": "59c7998e35ba295c0c4f2d7a2263502b39806ae7",
    "filename": "src/main/java/Lesson8/HomeWork8/MainClass.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/MainClass.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/MainClass.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson8/HomeWork8/MainClass.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,40 @@\n+package Lesson8.HomeWork8;\n+\n+import java.util.Arrays;\n+\n+public class MainClass {\n+    public static void main(String[] args) {\n+\n+        Cat cat = new Cat(\"Мурзик\");\n+        Human human = new Human(\"Федор\");\n+        Robot robot = new Robot(\"R2D2\");\n+\n+        Track track = new Track(1000);\n+        Wall wall = new Wall(1);\n+        Finish finish = new Finish();\n+\n+        Player[] player = {cat, human, robot};\n+        Barrier[] barrier = {track, wall, wall, track, track, finish};\n+\n+        for (int i = 0; i < player.length; i++) {\n+            for (int j = 0; j < barrier.length; j++) {\n+                if (barrier[j] == track) {\n+                    player[i].run(track);\n+                    if (track.isRunOn() == false) {\n+                        System.out.println(\"Сошёл с дистанции\");\n+                        break;\n+                    }\n+                } else if (barrier[j] == wall){\n+                    player[i].jump(wall);\n+                    if (wall.isJumpWall() == false) {\n+                        System.out.println(\"Сошёл с дистанции\");\n+                        break;\n+                    }\n+                } else  {\n+                    System.out.println(\"Участник ПОБЕДИЛ!!! \");\n+                }\n+            }\n+            System.out.println();\n+        }\n+    }\n+}"
  },
  {
    "sha": "4f714a03dcb8f57cc0e1dc82a9a602b2a3e9e9e4",
    "filename": "src/main/java/Lesson8/HomeWork8/Player.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Player.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Player.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson8/HomeWork8/Player.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,6 @@\n+package Lesson8.HomeWork8;\n+\n+public interface Player {\n+    void run(Track track);\n+    void jump(Wall wall);\n+}"
  },
  {
    "sha": "cf4da9c74374a70ec841f77fe460d341e5b328ed",
    "filename": "src/main/java/Lesson8/HomeWork8/Robot.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Robot.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Robot.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson8/HomeWork8/Robot.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,22 @@\n+package Lesson8.HomeWork8;\n+\n+import java.util.Random;\n+\n+public class Robot implements Player{\n+    private String name;\n+    private Random random = new Random();\n+\n+    public Robot(String name) {\n+        this.name = name;\n+    }\n+\n+    public void run(Track track) {\n+        System.out.println(\"Робот \" + name + \" бежит по дорожке\");\n+        track.randomRun(random.nextBoolean());\n+    }\n+\n+    public void jump(Wall wall) {\n+        System.out.println(\"Робот \" + name + \" прыгает через стену\");\n+        wall.randomJump(random.nextBoolean());\n+    }\n+}"
  },
  {
    "sha": "db910abf972a4153650a57bb13ff23798f812f06",
    "filename": "src/main/java/Lesson8/HomeWork8/Track.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Track.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Track.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson8/HomeWork8/Track.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,26 @@\n+package Lesson8.HomeWork8;\n+\n+public class Track implements Barrier{\n+    private int distance;\n+    private boolean runOn;\n+\n+    public Track(int distance) {\n+        this.distance = distance;\n+    }\n+\n+    public boolean isRunOn() {\n+        return runOn;\n+    }\n+\n+    public void randomRun(boolean random) {\n+        if (random == true) {\n+            System.out.println(\"и пробегает её\");\n+            runOn = true;\n+        } else {\n+            System.out.println(\"не смоге её преодолеть\");\n+            runOn = false;\n+        }\n+\n+    }\n+\n+}"
  },
  {
    "sha": "11e0356603681fc2686805244f66cc36b74448bc",
    "filename": "src/main/java/Lesson8/HomeWork8/Wall.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/ninjafm/java4android/blob/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Wall.java",
    "raw_url": "https://github.com/ninjafm/java4android/raw/560560a35889ba0e22dd51f4a7a540211c7fb78c/src/main/java/Lesson8/HomeWork8/Wall.java",
    "contents_url": "https://api.github.com/repos/ninjafm/java4android/contents/src/main/java/Lesson8/HomeWork8/Wall.java?ref=560560a35889ba0e22dd51f4a7a540211c7fb78c",
    "patch": "@@ -0,0 +1,26 @@\n+package Lesson8.HomeWork8;\n+\n+public class Wall implements Barrier{\n+    private int height;\n+    private boolean jumpWall;\n+\n+    public Wall(int height) {\n+        this.height = height;\n+    }\n+\n+    public boolean isJumpWall() {\n+        return jumpWall;\n+    }\n+\n+    public void randomJump(boolean random) {\n+        if (random == true) {\n+            System.out.println(\"и перепрыгивает её\");\n+            jumpWall = true;\n+        } else {\n+            System.out.println(\"и не перепрыгивает её\");\n+            jumpWall = false;\n+        }\n+\n+\n+    }\n+}"
  }
]
