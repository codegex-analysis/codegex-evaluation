[
  {
    "sha": "64079032c7d4b10b268afab8d3efa9dc786bda26",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractMavenProjectWizard.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractMavenProjectWizard.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractMavenProjectWizard.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractMavenProjectWizard.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -34,7 +34,7 @@\n \n   protected ProjectImportConfiguration importConfiguration = new ProjectImportConfiguration();\n \n-  protected List<IWorkingSet> workingSets = new ArrayList<IWorkingSet>();\n+  protected List<IWorkingSet> workingSets = new ArrayList<>();\n \n   private IMavenDiscovery discovery;\n "
  },
  {
    "sha": "eda0da8db6d093da6ca4b45b484aae438e18f69e",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractMavenWizardPage.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractMavenWizardPage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractMavenWizardPage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractMavenWizardPage.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -76,7 +76,7 @@ protected AbstractMavenWizardPage(String pageName, ProjectImportConfiguration im\n     super(pageName);\n     this.importConfiguration = importConfiguration;\n \n-    fieldsWithHistory = new HashMap<String, List<Combo>>();\n+    fieldsWithHistory = new HashMap<>();\n \n     initDialogSettings();\n   }\n@@ -167,7 +167,7 @@ private void saveInputHistory() {\n     for(Map.Entry<String, List<Combo>> e : fieldsWithHistory.entrySet()) {\n       String id = e.getKey();\n \n-      Set<String> history = new LinkedHashSet<String>(MAX_HISTORY);\n+      Set<String> history = new LinkedHashSet<>(MAX_HISTORY);\n \n       for(Combo combo : e.getValue()) {\n         String lastValue = combo.getText();\n@@ -191,7 +191,7 @@ protected void addFieldWithHistory(String id, Combo combo) {\n     if(combo != null) {\n       List<Combo> combos = fieldsWithHistory.get(id);\n       if(combos == null) {\n-        combos = new ArrayList<Combo>();\n+        combos = new ArrayList<>();\n         fieldsWithHistory.put(id, combos);\n       }\n       combos.add(combo);"
  },
  {
    "sha": "90509cf78c0ad3249a90991f05c61c30d6db96a9",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/CustomArchetypeDialog.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/CustomArchetypeDialog.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/CustomArchetypeDialog.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/CustomArchetypeDialog.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -204,7 +204,7 @@ public String getRepositoryUrl() {\n   }\n \n   private void saveValue(String key, String value) {\n-    List<String> dirs = new ArrayList<String>();\n+    List<String> dirs = new ArrayList<>();\n     dirs.addAll(Arrays.asList(getSavedValues(key)));\n \n     dirs.remove(value);"
  },
  {
    "sha": "deb71e60381833b46beac5a88c40e90bed866f5e",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/LifecycleMappingPage.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/LifecycleMappingPage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/LifecycleMappingPage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/LifecycleMappingPage.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -120,11 +120,11 @@\n \n   private Text license;\n \n-  private Set<ILifecycleMappingLabelProvider> ignore = new HashSet<ILifecycleMappingLabelProvider>();\n+  private Set<ILifecycleMappingLabelProvider> ignore = new HashSet<>();\n \n-  private Set<ILifecycleMappingLabelProvider> ignoreAtDefinition = new HashSet<ILifecycleMappingLabelProvider>();\n+  private Set<ILifecycleMappingLabelProvider> ignoreAtDefinition = new HashSet<>();\n \n-  private Set<ILifecycleMappingLabelProvider> ignoreWorkspace = new HashSet<ILifecycleMappingLabelProvider>();\n+  private Set<ILifecycleMappingLabelProvider> ignoreWorkspace = new HashSet<>();\n \n   private Label errorCountLabel;\n \n@@ -242,7 +242,7 @@ protected CellEditor getCellEditor(Object element) {\n         if(element instanceof ILifecycleMappingLabelProvider) {\n           ILifecycleMappingLabelProvider prov = (ILifecycleMappingLabelProvider) element;\n           List<IMavenDiscoveryProposal> all = mappingConfiguration.getProposals(prov.getKey());\n-          List<String> values = new ArrayList<String>();\n+          List<String> values = new ArrayList<>();\n           for(IMavenDiscoveryProposal prop : all) {\n             values.add(NLS.bind(Messages.LifecycleMappingPage_installDescription, prop.toString()));\n           }\n@@ -287,8 +287,8 @@ public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {\n \n       public Object[] getElements(Object inputElement) {\n         if(inputElement instanceof LifecycleMappingDiscoveryRequest) {\n-          Map<ILifecycleMappingRequirement, List<ILifecycleMappingLabelProvider>> packagings = new HashMap<ILifecycleMappingRequirement, List<ILifecycleMappingLabelProvider>>();\n-          Map<ILifecycleMappingRequirement, List<ILifecycleMappingLabelProvider>> mojos = new HashMap<ILifecycleMappingRequirement, List<ILifecycleMappingLabelProvider>>();\n+          Map<ILifecycleMappingRequirement, List<ILifecycleMappingLabelProvider>> packagings = new HashMap<>();\n+          Map<ILifecycleMappingRequirement, List<ILifecycleMappingLabelProvider>> mojos = new HashMap<>();\n           Map<IMavenProjectFacade, List<ILifecycleMappingRequirement>> projects = ((LifecycleMappingDiscoveryRequest) inputElement)\n               .getProjects();\n           for(final Entry<IMavenProjectFacade, List<ILifecycleMappingRequirement>> entry : projects.entrySet()) {\n@@ -299,7 +299,7 @@ public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {\n               if(requirement != null) {\n                 List<ILifecycleMappingLabelProvider> val = mojos.get(requirement);\n                 if(val == null) {\n-                  val = new ArrayList<ILifecycleMappingLabelProvider>();\n+                  val = new ArrayList<>();\n                   mojos.put(requirement, val);\n                 }\n                 val.add(new ILifecycleMappingLabelProvider() {\n@@ -347,7 +347,7 @@ public ILifecycleMappingRequirement getKey() {\n               }\n             }\n           }\n-          List<ILifecycleMappingLabelProvider> toRet = new ArrayList<ILifecycleMappingLabelProvider>();\n+          List<ILifecycleMappingLabelProvider> toRet = new ArrayList<>();\n           for(Map.Entry<ILifecycleMappingRequirement, List<ILifecycleMappingLabelProvider>> ent : packagings\n               .entrySet()) {\n             toRet.add(new AggregateMappingLabelProvider(ent.getKey(), ent.getValue()));"
  },
  {
    "sha": "97cfed5c774008f8ac1e1209a16b20bcb1fce7d4",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenDependenciesWizardPage.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenDependenciesWizardPage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenDependenciesWizardPage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenDependenciesWizardPage.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -60,7 +60,7 @@\n   /**\n    * Listeners notified about all changes\n    */\n-  private List<ISelectionChangedListener> listeners = new ArrayList<ISelectionChangedListener>();\n+  private List<ISelectionChangedListener> listeners = new ArrayList<>();\n \n   boolean showScope = false;\n \n@@ -195,7 +195,7 @@ public void addListener(ISelectionChangedListener listener) {\n    * @return dependencies currently chosen by the user. Neither the array nor any of its elements is <code>null</code>.\n    */\n   public Dependency[] getDependencies() {\n-    List<Dependency> dependencies = new ArrayList<Dependency>();\n+    List<Dependency> dependencies = new ArrayList<>();\n     for(int i = 0; i < dependencyViewer.getTable().getItemCount(); i++ ) {\n       Object element = dependencyViewer.getElementAt(i);\n       if(element instanceof Dependency) {"
  },
  {
    "sha": "9ac133c18f41c63b0faafb13273cfbaa08ca8607",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenDiscoveryProposalWizard.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenDiscoveryProposalWizard.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenDiscoveryProposalWizard.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenDiscoveryProposalWizard.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -121,7 +121,7 @@ public boolean performFinish() {\n         || !lifecycleMappingPage.getIgnoreWorkspace().isEmpty();\n     IMavenDiscoveryUI discovery = getPageFactory();\n     if(discovery != null && !proposals.isEmpty()) {\n-      Set<String> projectsToConfigure = new HashSet<String>();\n+      Set<String> projectsToConfigure = new HashSet<>();\n       for(IProject project : projects) {\n         projectsToConfigure.add(project.getName());\n       }\n@@ -132,7 +132,7 @@ public boolean performFinish() {\n       final IRunnableWithProgress ignoreJob = new IRunnableWithProgress() {\n \n         public void run(IProgressMonitor monitor) {\n-          List<IProject> changed = new LinkedList<IProject>();\n+          List<IProject> changed = new LinkedList<>();\n           for(ILifecycleMappingLabelProvider prov : lifecycleMappingPage.getIgnore()) {\n             ILifecycleMappingRequirement req = prov.getKey();\n             if(req instanceof MojoExecutionMappingRequirement) {\n@@ -161,7 +161,7 @@ public void run(IProgressMonitor monitor) {\n         }\n \n         private Collection<IProject> getProject(Collection<MavenProject> projects) {\n-          List<IProject> workspaceProjects = new LinkedList<IProject>();\n+          List<IProject> workspaceProjects = new LinkedList<>();\n           for(MavenProject project : projects) {\n             IMavenProjectFacade facade = MavenPlugin.getMavenProjectRegistry().getMavenProject(project.getGroupId(),\n                 project.getArtifactId(), project.getVersion());"
  },
  {
    "sha": "6df971549782c8afc476258e9f18be089aeb3a8d",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenImportWizard.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenImportWizard.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenImportWizard.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenImportWizard.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -113,7 +113,7 @@ public boolean performFinish() {\n     }\n \n     Collection<MavenProjectInfo> projects = getProjects();\n-    List<IWorkingSet> workingSets = new ArrayList<IWorkingSet>(); // ignore any preselected working set\n+    List<IWorkingSet> workingSets = new ArrayList<>(); // ignore any preselected working set\n     if(page.shouldCreateWorkingSet() && !projects.isEmpty()) {\n       IWorkingSet workingSet = WorkingSets.getOrCreateWorkingSet(page.getWorkingSetName());\n       if(!workingSets.contains(workingSet)) {"
  },
  {
    "sha": "7870548065b4cab2cd61d4d2b9bf5d442e0f8781",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenImportWizardPage.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenImportWizardPage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenImportWizardPage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenImportWizardPage.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -404,7 +404,7 @@ public void scanProjects() {\n \n       //mkleint: XXX this sort of error handling is rather unfortunate\n \n-      List<Throwable> errors = new ArrayList<Throwable>(projectScanner.getErrors());\n+      List<Throwable> errors = new ArrayList<>(projectScanner.getErrors());\n       if(!errors.isEmpty()) {\n         StringBuilder sb = new StringBuilder(NLS.bind(Messages.wizardImportPageScanningErrors, errors.size()));\n         int n = 1;\n@@ -457,7 +457,7 @@ private void updateWorkingSet(List<MavenProjectInfo> projects) {\n     // check if imported project(s) are nested inside existing workspace project\n     String rootDirectory = rootDirectoryCombo != null ? rootDirectoryCombo.getText().trim() : null;\n     if(rootDirectory != null && rootDirectory.length() > 0) {\n-      Set<IWorkingSet> workingSets = new HashSet<IWorkingSet>();\n+      Set<IWorkingSet> workingSets = new HashSet<>();\n       for(IContainer container : workspaceRoot.findContainersForLocationURI(new File(rootDirectory).toURI())) {\n         workingSets.addAll(WorkingSets.getAssignedWorkingSets(container.getProject()));\n       }\n@@ -477,7 +477,7 @@ private void updateWorkingSet(List<MavenProjectInfo> projects) {\n   }\n \n   private void updateWorkingSet(String name, boolean enabled) {\n-    Set<String> workingSetNames = new LinkedHashSet<String>();\n+    Set<String> workingSetNames = new LinkedHashSet<>();\n     if(name == null) {\n       name = \"\"; //$NON-NLS-1$\n     } else {\n@@ -619,7 +619,7 @@ public void run(IProgressMonitor monitor) {\n    * @return collection of <code>MavenProjectInfo</code>\n    */\n   public Collection<MavenProjectInfo> getProjects() {\n-    Collection<MavenProjectInfo> checkedProjects = new ArrayList<MavenProjectInfo>();\n+    Collection<MavenProjectInfo> checkedProjects = new ArrayList<>();\n     for(Object o : projectTreeViewer.getCheckedElements()) {\n       checkedProjects.add((MavenProjectInfo) o);\n     }"
  },
  {
    "sha": "3749fa7d6b9b8f9f342d68ca041b95b0fcbcaf96",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenPomSelectionComponent.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenPomSelectionComponent.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenPomSelectionComponent.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenPomSelectionComponent.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -135,9 +135,9 @@ public void dispose() {\n \n   private static final long LONG_DELAY = 500L;\n \n-  final HashSet<String> artifactKeys = new HashSet<String>();\n+  final HashSet<String> artifactKeys = new HashSet<>();\n \n-  final HashSet<String> managedKeys = new HashSet<String>();\n+  final HashSet<String> managedKeys = new HashSet<>();\n \n   private IProject project;\n \n@@ -345,7 +345,7 @@ public IndexedArtifactFile getIndexedArtifactFile() {\n   }\n \n   List<IndexedArtifactFile> getSelectedIndexedArtifactFiles(IStructuredSelection selection) {\n-    ArrayList<IndexedArtifactFile> result = new ArrayList<IndexedArtifactFile>();\n+    ArrayList<IndexedArtifactFile> result = new ArrayList<>();\n     for(Object element : selection.toList()) {\n       if(element instanceof IndexedArtifact) {\n         //the idea here is that if we have a managed version for something, then the IndexedArtifact shall\n@@ -460,8 +460,8 @@ protected IStatus run(IProgressMonitor monitor) {\n               new UserInputSearchExpression(activeQuery), field, classifier);\n \n           //335139 have the managed entries always come up as first results\n-          LinkedHashMap<String, IndexedArtifact> managed = new LinkedHashMap<String, IndexedArtifact>();\n-          LinkedHashMap<String, IndexedArtifact> nonManaged = new LinkedHashMap<String, IndexedArtifact>();\n+          LinkedHashMap<String, IndexedArtifact> managed = new LinkedHashMap<>();\n+          LinkedHashMap<String, IndexedArtifact> nonManaged = new LinkedHashMap<>();\n           for(Map.Entry<String, IndexedArtifact> art : res.entrySet()) {\n             String key = art.getValue().getGroupId() + \":\" + art.getValue().getArtifactId(); //$NON-NLS-1$\n             if(managedKeys.contains(key)) {"
  },
  {
    "sha": "3b7f5a87e61fd228656a14fd1e7f48c78a95f450",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectSelectionDialog.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectSelectionDialog.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectSelectionDialog.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectSelectionDialog.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -76,7 +76,7 @@ public MavenProjectSelectionDialog(Shell parent) {\n   /** Produces the result of the selection. */\n   protected void computeResult() {\n     if(useCheckboxTree) {\n-      List<Object> result = new ArrayList<Object>();\n+      List<Object> result = new ArrayList<>();\n       collectCheckedItems(getViewer().getTree().getItems(), result);\n       setResult(result);\n     } else {\n@@ -130,7 +130,7 @@ protected TreeViewer getViewer() {\n       if(parent instanceof IWorkspace) {\n         IProject[] projects = ((IWorkspace) parent).getRoot().getProjects();\n \n-        List<IProject> children = new ArrayList<IProject>();\n+        List<IProject> children = new ArrayList<>();\n         for(IProject project : projects) {\n           try {\n             if(project.isOpen() && project.hasNature(IMavenConstants.NATURE_ID)) {\n@@ -145,7 +145,7 @@ protected TreeViewer getViewer() {\n         IContainer container = (IContainer) parent;\n         if(container.isAccessible()) {\n           try {\n-            List<IResource> children = new ArrayList<IResource>();\n+            List<IResource> children = new ArrayList<>();\n             IResource[] members = container.members();\n             for(int i = 0; i < members.length; i++ ) {\n               if(members[i] instanceof IContainer"
  },
  {
    "sha": "5778c51d76710958cff34057293fe1cc03c2787f",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArchetypePage.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArchetypePage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArchetypePage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArchetypePage.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -628,7 +628,7 @@ public void done(IJobChangeEvent event) {\n         }\n \n         Display.getDefault().asyncExec(() -> setErrorMessage(error));\n-        TreeSet<Archetype> archs = new TreeSet<Archetype>(ARCHETYPE_COMPARATOR);\n+        TreeSet<Archetype> archs = new TreeSet<>(ARCHETYPE_COMPARATOR);\n         if(catalogArchetypes != null) {\n           archs.addAll(catalogArchetypes);\n         }\n@@ -737,7 +737,7 @@ void updateViewer(String groupId, String artifactId, String version) {\n \n       List<ArtifactVersion> versions = archetypeVersions.get(key);\n       if(versions == null) {\n-        versions = new ArrayList<ArtifactVersion>();\n+        versions = new ArrayList<>();\n         archetypeVersions.put(key, versions);\n       }\n       ArtifactVersion v = versionFactory.get(version);"
  },
  {
    "sha": "abb29cb0718a8ed91a2766a597970c9b893db558",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArchetypeParametersPage.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArchetypeParametersPage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArchetypeParametersPage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArchetypeParametersPage.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -123,8 +123,8 @@ public MavenProjectWizardArchetypeParametersPage(ProjectImportConfiguration proj\n     setDescription(Messages.wizardProjectPageMaven2ArchetypeParametersDescription);\n     setPageComplete(false);\n \n-    requiredProperties = new HashSet<String>();\n-    optionalProperties = new HashSet<String>();\n+    requiredProperties = new HashSet<>();\n+    optionalProperties = new HashSet<>();\n   }\n \n   /** Creates page controls. */\n@@ -593,7 +593,7 @@ public void updatePropertyEditors() {\n       }\n \n       // populate the property name selection\n-      List<String> propertyKeys = new ArrayList<String>(n);\n+      List<String> propertyKeys = new ArrayList<>(n);\n       propertyKeys.addAll(requiredProperties);\n       propertyKeys.addAll(optionalProperties);\n       comboEditor.setItems(propertyKeys.toArray(new String[n]));"
  },
  {
    "sha": "96f8c8b907612e53e23101c2964150b345e3a6da",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArtifactPage.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArtifactPage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArtifactPage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/MavenProjectWizardArtifactPage.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -73,7 +73,7 @@\n   private static final ProjectFolder[] POM_DIRS = {SITE};\n \n   /** special directory sets, default is JAR_DIRS */\n-  private static final Map<String, ProjectFolder[]> directorySets = new HashMap<String, ProjectFolder[]>();\n+  private static final Map<String, ProjectFolder[]> directorySets = new HashMap<>();\n   static {\n     directorySets.put(MavenArtifactComponent.WAR, WAR_DIRS);\n     directorySets.put(MavenArtifactComponent.POM, POM_DIRS);"
  },
  {
    "sha": "ee93971026833a68bd93b400012f16f32d56f437",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/WidthGroup.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/WidthGroup.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/WidthGroup.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/WidthGroup.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -28,7 +28,7 @@\n  */\n public class WidthGroup extends ControlAdapter {\n \n-  private final HashSet<Control> controls = new HashSet<Control>();\n+  private final HashSet<Control> controls = new HashSet<>();\n \n   public void controlResized(ControlEvent e) {\n     int maxWidth = 0;"
  },
  {
    "sha": "eace0c9a7bff6249180f992f33f9cd88bb0901c6",
    "filename": "org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/ArtifactRef.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/ArtifactRef.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/ArtifactRef.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/ArtifactRef.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -60,15 +60,15 @@ public String getScope() {\n   }\n \n   public static Set<ArtifactKey> toArtifactKey(Set<ArtifactRef> refs) {\n-    LinkedHashSet<ArtifactKey> keys = new LinkedHashSet<ArtifactKey>(refs.size());\n+    LinkedHashSet<ArtifactKey> keys = new LinkedHashSet<>(refs.size());\n     for(ArtifactRef ref : refs) {\n       keys.add(ref.getArtifactKey());\n     }\n     return keys;\n   }\n \n   public static Set<ArtifactRef> fromArtifact(Set<Artifact> artifacts) {\n-    LinkedHashSet<ArtifactRef> refs = new LinkedHashSet<ArtifactRef>(artifacts.size());\n+    LinkedHashSet<ArtifactRef> refs = new LinkedHashSet<>(artifacts.size());\n     for(Artifact artifact : artifacts) {\n       refs.add(new ArtifactRef(artifact));\n     }"
  },
  {
    "sha": "70dbc124be4bfc4bc47b2eb0f445f235f03c42dd",
    "filename": "org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/MavenModelManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/MavenModelManager.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/MavenModelManager.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/MavenModelManager.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -246,7 +246,7 @@ DependencyNode readDependencyTree(RepositorySystemSession repositorySession, Mav\n         throw new CoreException(new Status(IStatus.ERROR, IMavenConstants.PLUGIN_ID, -1, msg, ex));\n       }\n \n-      Collection<String> scopes = new HashSet<String>();\n+      Collection<String> scopes = new HashSet<>();\n       Collections.addAll(scopes, Artifact.SCOPE_SYSTEM, Artifact.SCOPE_COMPILE, Artifact.SCOPE_PROVIDED,\n           Artifact.SCOPE_RUNTIME, Artifact.SCOPE_TEST);\n       if(Artifact.SCOPE_COMPILE.equals(scope)) {"
  },
  {
    "sha": "0ab2189317d8dd32af5a6f1a366a3e23717a90eb",
    "filename": "org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/MavenRuntimeManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/MavenRuntimeManager.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/MavenRuntimeManager.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core/src/org/eclipse/m2e/core/embedder/MavenRuntimeManager.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -74,7 +74,7 @@ public MavenRuntime getRuntime(String location) {\n   }\n \n   public List<MavenRuntime> getMavenRuntimes() {\n-    List<MavenRuntime> result = new ArrayList<MavenRuntime>();\n+    List<MavenRuntime> result = new ArrayList<>();\n     for(AbstractMavenRuntime runtime : impl.getMavenRuntimes()) {\n       result.add(runtime);\n     }\n@@ -90,7 +90,7 @@ public void setDefaultRuntime(MavenRuntime runtime) {\n   }\n \n   public void setRuntimes(List<MavenRuntime> runtimes) {\n-    List<AbstractMavenRuntime> internal = new ArrayList<AbstractMavenRuntime>();\n+    List<AbstractMavenRuntime> internal = new ArrayList<>();\n     for(MavenRuntime runtime : runtimes) {\n       internal.add((AbstractMavenRuntime) runtime);\n     }"
  },
  {
    "sha": "1c01def9beeb5ad893bf49bbfa78c06f890ae8e5",
    "filename": "org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/Bundles.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/Bundles.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/Bundles.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/Bundles.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -53,7 +53,7 @@ private static Bundle findDependencyBundle(Bundle bundle, String dependencyName,\n     if(bundleWiring == null) {\n       return null;\n     }\n-    ArrayList<BundleWire> dependencies = new ArrayList<BundleWire>();\n+    ArrayList<BundleWire> dependencies = new ArrayList<>();\n     dependencies.addAll(bundleWiring.getRequiredWires(BundleNamespace.BUNDLE_NAMESPACE));\n     dependencies.addAll(bundleWiring.getRequiredWires(PackageNamespace.PACKAGE_NAMESPACE));\n     for(BundleWire wire : dependencies) {\n@@ -85,7 +85,7 @@ public static ClassLoader getBundleClassloader(Bundle bundle) {\n \n   public static List<String> getClasspathEntries(Bundle bundle) {\n     log.debug(\"getClasspathEntries(Bundle={})\", bundle.toString());\n-    Set<String> cp = new LinkedHashSet<String>();\n+    Set<String> cp = new LinkedHashSet<>();\n     if(DevClassPathHelper.inDevelopmentMode()) {\n       cp.addAll(Arrays.asList(DevClassPathHelper.getDevClassPath(bundle.getSymbolicName())));\n     }\n@@ -154,7 +154,7 @@ private static Bundle findDependencyBundleByPackage(Bundle bundle, String packag\n     if(bundleWiring == null) {\n       return null;\n     }\n-    ArrayList<BundleWire> dependencies = new ArrayList<BundleWire>();\n+    ArrayList<BundleWire> dependencies = new ArrayList<>();\n     dependencies.addAll(bundleWiring.getRequiredWires(BundleNamespace.BUNDLE_NAMESPACE));\n     dependencies.addAll(bundleWiring.getRequiredWires(PackageNamespace.PACKAGE_NAMESPACE));\n     for(BundleWire wire : dependencies) {"
  },
  {
    "sha": "bf96d6ad96ecb439da03892d278292aaca8a8ecd",
    "filename": "org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/ExtensionReader.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/ExtensionReader.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/ExtensionReader.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/ExtensionReader.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -63,7 +63,7 @@\n   private static final String ELEMENT_LISTENER = \"listener\"; //$NON-NLS-1$\n \n   public static List<ArchetypeCatalogFactory> readArchetypeExtensions() {\n-    List<ArchetypeCatalogFactory> archetypeCatalogs = new ArrayList<ArchetypeCatalogFactory>();\n+    List<ArchetypeCatalogFactory> archetypeCatalogs = new ArrayList<>();\n \n     IExtensionRegistry registry = Platform.getExtensionRegistry();\n     IExtensionPoint archetypesExtensionPoint = registry.getExtensionPoint(EXTENSION_ARCHETYPES);\n@@ -111,7 +111,7 @@ private static ArchetypeCatalogFactory readArchetypeCatalogs(IConfigurationEleme\n   }\n \n   public static List<IMavenProjectChangedListener> readProjectChangedEventListenerExtentions() {\n-    ArrayList<IMavenProjectChangedListener> listeners = new ArrayList<IMavenProjectChangedListener>();\n+    ArrayList<IMavenProjectChangedListener> listeners = new ArrayList<>();\n \n     IExtensionRegistry registry = Platform.getExtensionRegistry();\n     IExtensionPoint mappingsExtensionPoint = registry.getExtensionPoint(EXTENSION_PROJECT_CHANGED_EVENT_LISTENERS);\n@@ -135,7 +135,7 @@ private static ArchetypeCatalogFactory readArchetypeCatalogs(IConfigurationEleme\n   }\n \n   public static List<IIncrementalBuildFramework> readIncrementalBuildFrameworks() {\n-    ArrayList<IIncrementalBuildFramework> frameworks = new ArrayList<IIncrementalBuildFramework>();\n+    ArrayList<IIncrementalBuildFramework> frameworks = new ArrayList<>();\n \n     IExtensionRegistry registry = Platform.getExtensionRegistry();\n     IExtensionPoint mappingsExtensionPoint = registry.getExtensionPoint(EXTENSION_INCREMENTAL_BUILD_FRAMEWORKS);"
  },
  {
    "sha": "5b9a2a1ea5aa95fff930c680aa33b8dfb0895127",
    "filename": "org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/M2EUtils.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/M2EUtils.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/665bf4ae9846d2b2e21a7dbeb42b25e21538b246/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/M2EUtils.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/M2EUtils.java?ref=665bf4ae9846d2b2e21a7dbeb42b25e21538b246",
    "patch": "@@ -117,7 +117,7 @@ public static IFile getPomFile(MavenProject project) {\n     //XXX copied from XmlUtils.extractProject()\n     File file = new File(project.getFile().toURI());\n     IPath path = Path.fromOSString(file.getAbsolutePath());\n-    Stack<IFile> stack = new Stack<IFile>();\n+    Stack<IFile> stack = new Stack<>();\n     //here we need to find the most inner project to the path.\n     //we do so by shortening the path and remembering all the resources identified.\n     // at the end we pick the last one from the stack. is there a catch to it?\n@@ -136,7 +136,7 @@ public static IFile getPomFile(MavenProject project) {\n   }\n \n   public static Collection<MavenProject> getDefiningProjects(MojoExecutionKey key, Collection<MavenProject> projects) {\n-    Set<MavenProject> sourceProjects = new HashSet<MavenProject>();\n+    Set<MavenProject> sourceProjects = new HashSet<>();\n     for(MavenProject project : projects) {\n       if(definesPlugin(project, key)) {\n         sourceProjects.add(project);"
  }
]
