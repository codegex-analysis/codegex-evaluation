[
  {
    "sha": "3f59a09b613f1f27d6a4a6a92a2a29cad9abad74",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/LocalArchetypeCatalogDialog.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/LocalArchetypeCatalogDialog.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/LocalArchetypeCatalogDialog.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/LocalArchetypeCatalogDialog.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -178,7 +178,7 @@ public ArchetypeCatalogFactory getArchetypeCatalogFactory() {\n   }\n \n   private void saveValue(String key, String value) {\n-    List<String> dirs = new ArrayList<String>();\n+    List<String> dirs = new ArrayList<>();\n     dirs.addAll(Arrays.asList(getSavedValues(key)));\n \n     dirs.remove(value);"
  },
  {
    "sha": "1733b7fc05a41deb398dc9b5a9db07240b0ebf5f",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/MavenPreferencePage.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/MavenPreferencePage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/MavenPreferencePage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/MavenPreferencePage.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -141,7 +141,7 @@ private void updateProjects() {\n             Messages.MavenPreferencePage_updateProjectRequired_title,\n             Messages.MavenPreferencePage_changingPreferencesRequiresProjectUpdate);\n         if(proceed) {\n-          ArrayList<IProject> allProjects = new ArrayList<IProject>(facades.length);\n+          ArrayList<IProject> allProjects = new ArrayList<>(facades.length);\n           for(IMavenProjectFacade facade : facades) {\n             allProjects.add(facade.getProject());\n           }"
  },
  {
    "sha": "8dfb8c17d1c7fd1ce991777345bc6d6d05caea21",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/MavenSettingsPreferencePage.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/MavenSettingsPreferencePage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/MavenSettingsPreferencePage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/MavenSettingsPreferencePage.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -154,7 +154,7 @@ protected IStatus run(IProgressMonitor monitor) {\n           }\n           if(updateProjects[0]) {\n             IMavenProjectFacade[] projects = MavenPlugin.getMavenProjectRegistry().getProjects();\n-            ArrayList<IProject> allProjects = new ArrayList<IProject>();\n+            ArrayList<IProject> allProjects = new ArrayList<>();\n             if(projects != null && projects.length > 0) {\n               MavenPlugin.getMaven().reloadSettings();\n "
  },
  {
    "sha": "942aa330a2d6487af9f2638c84384149eaf045df",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/RemoteArchetypeCatalogDialog.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/RemoteArchetypeCatalogDialog.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/RemoteArchetypeCatalogDialog.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/RemoteArchetypeCatalogDialog.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -247,7 +247,7 @@ public ArchetypeCatalogFactory getArchetypeCatalogFactory() {\n   }\n \n   private void saveValue(String key, String value) {\n-    List<String> dirs = new ArrayList<String>();\n+    List<String> dirs = new ArrayList<>();\n     dirs.addAll(Arrays.asList(getSavedValues(key)));\n \n     dirs.remove(value);"
  },
  {
    "sha": "5d1e5c47314f227c635ebdbfc97e3ec01967ad27",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/WarningsPreferencePage.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/WarningsPreferencePage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/WarningsPreferencePage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/WarningsPreferencePage.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -58,7 +58,7 @@\n       P_DUP_OF_PARENT_VERSION_PB, P_NOT_COVERED_MOJO_EXECUTION_PB, P_OUT_OF_DATE_PROJECT_CONFIG_PB,\n       P_OVERRIDING_MANAGED_VERSION_PB);\n \n-  private Map<String, String> originalValues = new HashMap<String, String>();\n+  private Map<String, String> originalValues = new HashMap<>();\n \n   public WarningsPreferencePage() {\n     super(GRID);\n@@ -124,7 +124,7 @@ private void updateProjects() {\n             Messages.MavenPreferencePage_updateProjectRequired_title,\n             Messages.MavenWarningsPreferencePage_changingProblemSeveritiesRequiresProjectUpdate);\n         if(proceed) {\n-          ArrayList<IProject> allProjects = new ArrayList<IProject>(facades.length);\n+          ArrayList<IProject> allProjects = new ArrayList<>(facades.length);\n           for(IMavenProjectFacade facade : facades) {\n             allProjects.add(facade.getProject());\n           }"
  },
  {
    "sha": "1731171e7d1a58758433af3aedb5f554bd58dba9",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/launch/MavenInstallationWizardPage.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/launch/MavenInstallationWizardPage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/launch/MavenInstallationWizardPage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/launch/MavenInstallationWizardPage.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -143,7 +143,7 @@ public MavenInstallationWizardPage(AbstractMavenRuntime original, Set<String> us\n     setDescription(Messages.ExternalInstallPage_description);\n \n     this.extensions = original != null && original.getExtensions() != null ? original.getExtensions()\n-        : new ArrayList<ClasspathEntry>();\n+        : new ArrayList<>();\n   }\n \n   public void createControl(Composite parent) {\n@@ -284,7 +284,7 @@ private Object getSelectedElement() {\n   }\n \n   protected void addProjectExtensionAction() {\n-    List<IProject> projects = new ArrayList<IProject>();\n+    List<IProject> projects = new ArrayList<>();\n     for(IMavenProjectFacade facade : MavenPlugin.getMavenProjectRegistry().getProjects()) {\n       IProject project = facade.getProject();\n       if(!contains(extensions, project)) {"
  },
  {
    "sha": "013454ca28672345299a1ff7bc6f28fad8fbea86",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/launch/MavenInstallationsPreferencePage.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/launch/MavenInstallationsPreferencePage.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/launch/MavenInstallationsPreferencePage.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/launch/MavenInstallationsPreferencePage.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -264,7 +264,7 @@ public void dispose() {\n   }\n \n   protected Set<String> getForbiddenNames(AbstractMavenRuntime runtime) {\n-    Set<String> names = new HashSet<String>();\n+    Set<String> names = new HashSet<>();\n     for(AbstractMavenRuntime other : runtimes) {\n       if(other != runtime) {\n         names.add(other.getName());"
  },
  {
    "sha": "0c8f077d2bbe1c36a4231d5411f81488f16ffccb",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/search/util/IndexSearchEngine.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/search/util/IndexSearchEngine.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/search/util/IndexSearchEngine.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/search/util/IndexSearchEngine.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -58,7 +58,7 @@ protected boolean isBlank(String str) {\n     // Someone, give me here access to settings.xml, to be able to pick up \"real\" predefined groupIds added by user\n     // Currently, I am just simulating the \"factory defaults\" of maven, but user changes to settings.xml\n     // will not be picked up this way!\n-    ArrayList<SearchExpression> groupIdSearchExpressions = new ArrayList<SearchExpression>();\n+    ArrayList<SearchExpression> groupIdSearchExpressions = new ArrayList<>();\n     if(isBlank(groupId)) {\n       // values from effective settings\n       // we are wiring in the defaults only, but user changes are lost!\n@@ -71,7 +71,7 @@ protected boolean isBlank(String str) {\n     }\n \n     try {\n-      TreeSet<String> ids = new TreeSet<String>();\n+      TreeSet<String> ids = new TreeSet<>();\n       for(IndexedArtifact artifact : index.find(groupIdSearchExpressions, null, null,\n           packaging.toSearchExpression() == null ? null : Collections.singleton(packaging.toSearchExpression()))) {\n         ids.add(artifact.getArtifactId());\n@@ -91,7 +91,7 @@ protected boolean isBlank(String str) {\n         return Collections.emptySet();\n       }\n \n-      TreeSet<String> ids = new TreeSet<String>();\n+      TreeSet<String> ids = new TreeSet<>();\n       Set<IndexedArtifactFile> files = values.iterator().next().getFiles();\n       for(IndexedArtifactFile artifactFile : files) {\n         if(artifactFile.classifier != null) {\n@@ -106,7 +106,7 @@ protected boolean isBlank(String str) {\n \n   public Collection<String> findGroupIds(String searchExpression, Packaging packaging, ArtifactInfo containingArtifact) {\n     try {\n-      TreeSet<String> ids = new TreeSet<String>();\n+      TreeSet<String> ids = new TreeSet<>();\n \n       SearchExpression groupSearchExpression = isBlank(searchExpression) ? null : new MatchTypedStringSearchExpression(\n           searchExpression, MatchType.PARTIAL);\n@@ -129,7 +129,7 @@ protected boolean isBlank(String str) {\n         return Collections.emptySet();\n       }\n \n-      TreeSet<String> ids = new TreeSet<String>();\n+      TreeSet<String> ids = new TreeSet<>();\n       Set<IndexedArtifactFile> files = values.iterator().next().getFiles();\n       for(IndexedArtifactFile artifactFile : files) {\n         if(artifactFile.type != null) {\n@@ -150,20 +150,20 @@ protected boolean isBlank(String str) {\n         return Collections.emptySet();\n       }\n \n-      TreeSet<String> ids = new TreeSet<String>();\n+      TreeSet<String> ids = new TreeSet<>();\n       Set<IndexedArtifactFile> files = values.iterator().next().getFiles();\n       for(IndexedArtifactFile artifactFile : files) {\n         ids.add(artifactFile.version);\n       }\n       Collection<String> result = subSet(ids, searchExpression);\n \n       // sort results according to o.a.m.artifact.versioning.ComparableVersion\n-      SortedSet<ComparableVersion> versions = new TreeSet<ComparableVersion>();\n+      SortedSet<ComparableVersion> versions = new TreeSet<>();\n       for(String version : result) {\n         versions.add(new ComparableVersion(version));\n       }\n       result = null; // not used any more\n-      List<String> sorted = new ArrayList<String>(versions.size());\n+      List<String> sorted = new ArrayList<>(versions.size());\n       for(ComparableVersion version : versions) {\n         sorted.add(version.toString());\n       }"
  },
  {
    "sha": "42cec141800ff12a0da0ed6e90cf742f12ad1253",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/ParentGatherer.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/ParentGatherer.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/ParentGatherer.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/ParentGatherer.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -49,7 +49,7 @@ public ParentGatherer(IMavenProjectFacade facade) {\n    * @throws CoreException\n    */\n   public List<ParentHierarchyEntry> getParentHierarchy(final IProgressMonitor monitor) throws CoreException {\n-    final List<ParentHierarchyEntry> hierarchy = new ArrayList<ParentHierarchyEntry>();\n+    final List<ParentHierarchyEntry> hierarchy = new ArrayList<>();\n     IMavenProjectRegistry projectManager = MavenPlugin.getMavenProjectRegistry();\n \n     final IMaven maven = MavenPlugin.getMaven();"
  },
  {
    "sha": "219bb91fb1dec14fbeeeb34af91f53c5f2262399",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/ProposalUtil.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/ProposalUtil.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/ProposalUtil.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/ProposalUtil.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -92,7 +92,7 @@ public static void addCompletionProposal(final Control control, final Searcher s\n \n     IContentProposalProvider proposalProvider = (contents, position) -> {\n       final String start = contents.length() > position ? contents.substring(0, position) : contents;\n-      ArrayList<IContentProposal> proposals = new ArrayList<IContentProposal>();\n+      ArrayList<IContentProposal> proposals = new ArrayList<>();\n       try {\n         for(final String text : searcher.search()) {\n           if(text.startsWith(start)) {\n@@ -138,13 +138,13 @@ public static void addVersionProposal(final IProject project, final MavenProject\n       final Text artifactIdText, final Text versionText, final Packaging packaging) {\n     addCompletionProposal(versionText, new Searcher() {\n       public Collection<String> search() throws CoreException {\n-        Collection<String> toRet = new ArrayList<String>();\n+        Collection<String> toRet = new ArrayList<>();\n         toRet.addAll(getSearchEngine(project).findVersions(escapeQuerySpecialCharacters(groupIdText.getText()), //\n             escapeQuerySpecialCharacters(artifactIdText.getText()), \"\", packaging));\n         if(mp != null) {\n           //add version props now..\n           Properties props = mp.getProperties();\n-          ArrayList<String> list = new ArrayList<String>();\n+          ArrayList<String> list = new ArrayList<>();\n           if(props != null) {\n             for(Object prop : props.keySet()) {\n               String propString = prop.toString();"
  },
  {
    "sha": "313b5fce0ed1622b5b306fecc3e3b824cefcf7f8",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/XmlUtils.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/XmlUtils.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/XmlUtils.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/util/XmlUtils.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -104,7 +104,7 @@ public static IProject extractProject(ITextViewer sourceViewer) {\n     IFileStore folder = buf.getFileStore();\n     File file = new File(folder.toURI());\n     IPath path = Path.fromOSString(file.getAbsolutePath());\n-    Stack<IFile> stack = new Stack<IFile>();\n+    Stack<IFile> stack = new Stack<>();\n     //here we need to find the most inner project to the path.\n     //we do so by shortening the path and remembering all the resources identified.\n     // at the end we pick the last one from the stack. is there a catch to it?"
  },
  {
    "sha": "8c8ae299357a123722e27dad6b07ca09f674a97d",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/MavenRepositoryView.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/MavenRepositoryView.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/MavenRepositoryView.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/MavenRepositoryView.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -212,7 +212,7 @@ private void fillLocalPullDown(IMenuManager manager) {\n   }\n \n   protected List<AbstractIndexedRepositoryNode> getSelectedRepositoryNodes(List<?> elements) {\n-    ArrayList<AbstractIndexedRepositoryNode> list = new ArrayList<AbstractIndexedRepositoryNode>();\n+    ArrayList<AbstractIndexedRepositoryNode> list = new ArrayList<>();\n     if(elements != null) {\n       for(int i = 0; i < elements.size(); i++ ) {\n         Object elem = elements.get(i);\n@@ -228,7 +228,7 @@ private void fillLocalPullDown(IMenuManager manager) {\n     if(elements == null || elements.size() == 0) {\n       return null;\n     }\n-    ArrayList<IArtifactNode> list = new ArrayList<IArtifactNode>();\n+    ArrayList<IArtifactNode> list = new ArrayList<>();\n     for(int i = 0; i < elements.size(); i++ ) {\n       Object elem = elements.get(i);\n       if(elem instanceof IArtifactNode) {"
  },
  {
    "sha": "22dee768cd3ce57f37666b337cebd1c3379c908d",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/BuildDebugView.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/BuildDebugView.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/BuildDebugView.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/BuildDebugView.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -77,7 +77,7 @@\n   /*package*/final Object projectsLock = new Object() {\n   };\n \n-  /*package*/final Map<String, ProjectNode> projects = new ConcurrentHashMap<String, ProjectNode>();\n+  /*package*/final Map<String, ProjectNode> projects = new ConcurrentHashMap<>();\n \n   /*package*/final Job refreshJob = new Job(\"\") {\n     protected IStatus run(IProgressMonitor monitor) {\n@@ -173,7 +173,7 @@ public Object getParent(Object element) {\n         if(inputElement == projects) {\n           List<ProjectNode> sorted;\n           synchronized(projectsLock) {\n-            sorted = new ArrayList<ProjectNode>(projects.values());\n+            sorted = new ArrayList<>(projects.values());\n           }\n           Collections.sort(sorted, NODE_COMPARATOR);\n           return sorted.toArray();\n@@ -183,20 +183,20 @@ public Object getParent(Object element) {\n \n       public Object[] getChildren(Object parentElement) {\n         if(parentElement instanceof ProjectNode) {\n-          ArrayList<Object> result = new ArrayList<Object>();\n+          ArrayList<Object> result = new ArrayList<>();\n \n           final ProjectNode projectNode = (ProjectNode) parentElement;\n \n-          final List<ResourceNode> resources = new ArrayList<ResourceNode>(projectNode.getResources());\n+          final List<ResourceNode> resources = new ArrayList<>(projectNode.getResources());\n           if(!resources.isEmpty()) {\n             Collections.sort(resources, NODE_COMPARATOR);\n-            result.add(new CollectionNode<ResourceNode>(Messages.BuildDebugView_nodeDelta, resources));\n+            result.add(new CollectionNode<>(Messages.BuildDebugView_nodeDelta, resources));\n           }\n \n-          final List<MojoExecutionNode> executions = new ArrayList<MojoExecutionNode>(projectNode.getMojoExecutions());\n+          final List<MojoExecutionNode> executions = new ArrayList<>(projectNode.getMojoExecutions());\n           if(!executions.isEmpty()) {\n             Collections.sort(executions, NODE_COMPARATOR);\n-            result.add(new CollectionNode<MojoExecutionNode>(Messages.BuildDebugView_nodeExecutions, executions));\n+            result.add(new CollectionNode<>(Messages.BuildDebugView_nodeExecutions, executions));\n           }\n \n           return result.toArray();"
  },
  {
    "sha": "b48b22107625fef83611cbece4f0e224f185ac1d",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/ContainerNode.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/ContainerNode.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/ContainerNode.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/ContainerNode.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -24,7 +24,7 @@\n abstract class ContainerNode implements Node {\n   private final String name;\n \n-  private final Map<IPath, ResourceNode> resources = new HashMap<IPath, ResourceNode>();\n+  private final Map<IPath, ResourceNode> resources = new HashMap<>();\n \n   protected ContainerNode(String name) {\n     this.name = name;\n@@ -44,7 +44,7 @@ public synchronized ResourceNode addResource(IPath path) {\n   }\n \n   public synchronized Collection<ResourceNode> getResources() {\n-    return new ArrayList<ResourceNode>(resources.values());\n+    return new ArrayList<>(resources.values());\n   }\n \n }"
  },
  {
    "sha": "6b625c14ed261839b8932b9fe35971b35fe0c3ef",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/ProjectNode.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/ProjectNode.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/ProjectNode.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/build/ProjectNode.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -24,7 +24,7 @@\n \n class ProjectNode extends ContainerNode {\n \n-  private final Map<MojoExecutionKey, MojoExecutionNode> executions = new HashMap<MojoExecutionKey, MojoExecutionNode>();\n+  private final Map<MojoExecutionKey, MojoExecutionNode> executions = new HashMap<>();\n \n   private final AtomicInteger buildCount = new AtomicInteger();\n \n@@ -50,6 +50,6 @@ public synchronized MojoExecutionNode getMojoExecutionNode(MojoExecutionKey mojo\n   }\n \n   public synchronized Collection<MojoExecutionNode> getMojoExecutions() {\n-    return new ArrayList<MojoExecutionNode>(executions.values());\n+    return new ArrayList<>(executions.values());\n   }\n }"
  },
  {
    "sha": "b467d876a0beb8af99d517a4b81684d9afa37087",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/AbstractRepositoriesNode.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/AbstractRepositoriesNode.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/AbstractRepositoriesNode.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/AbstractRepositoriesNode.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -39,8 +39,8 @@\n \n   public Object[] getChildren() {\n \n-    ArrayList<Object> mirrorNodes = new ArrayList<Object>();\n-    ArrayList<Object> globalRepoNodes = new ArrayList<Object>();\n+    ArrayList<Object> mirrorNodes = new ArrayList<>();\n+    ArrayList<Object> globalRepoNodes = new ArrayList<>();\n \n     for(IRepository repo : getRepositories()) {\n       NexusIndex index = indexManager.getIndex(repo);\n@@ -52,7 +52,7 @@\n       }\n     }\n \n-    ArrayList<Object> nodes = new ArrayList<Object>();\n+    ArrayList<Object> nodes = new ArrayList<>();\n     nodes.addAll(mirrorNodes);\n     nodes.addAll(globalRepoNodes);\n "
  },
  {
    "sha": "3c600e23efa32c6ee9cc658c1e64eef80eaf65b9",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/IndexedArtifactGroupNode.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/IndexedArtifactGroupNode.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/IndexedArtifactGroupNode.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/IndexedArtifactGroupNode.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -49,7 +49,7 @@ public IndexedArtifactGroupNode(IndexedArtifactGroup group) {\n \n     IndexedArtifactGroup resolvedGroup = indexManager.resolveGroup(indexedArtifactGroup);\n     //IndexedArtifactGroup resolvedGroup = indexedArtifactGroup;\n-    ArrayList<Object> results = new ArrayList<Object>();\n+    ArrayList<Object> results = new ArrayList<>();\n     Collection<IndexedArtifactGroup> groups = resolvedGroup.getNodes().values();\n     for(IndexedArtifactGroup group : groups) {\n       IndexedArtifactGroupNode node = new IndexedArtifactGroupNode(group);"
  },
  {
    "sha": "48d11059c013f5975f4af059e0b2d15f6d45c2ec",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/IndexedArtifactNode.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/IndexedArtifactNode.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/IndexedArtifactNode.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/IndexedArtifactNode.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -45,7 +45,7 @@ public IndexedArtifactNode(IndexedArtifact artifact) {\n     if(files == null) {\n       return new Object[0];\n     }\n-    ArrayList<Object> fileList = new ArrayList<Object>();\n+    ArrayList<Object> fileList = new ArrayList<>();\n     for(IndexedArtifactFile iaf : files) {\n       fileList.add(new IndexedArtifactFileNode(iaf));\n     }"
  },
  {
    "sha": "1bc6c068997235763adc5dd6099fbae6094f5b12",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/ProjectRepositoriesNode.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/ProjectRepositoriesNode.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/ProjectRepositoriesNode.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/views/nodes/ProjectRepositoriesNode.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -36,7 +36,7 @@\n   private IRepositoryRegistry repositoryRegistry = MavenPlugin.getRepositoryRegistry();\n \n   public Object[] getChildren() {\n-    ArrayList<Object> nodes = new ArrayList<Object>();\n+    ArrayList<Object> nodes = new ArrayList<>();\n     for(IRepository repo : repositoryRegistry.getRepositories(IRepositoryRegistry.SCOPE_PROJECT)) {\n       NexusIndex index = indexManager.getIndex(repo);\n       RepositoryNode node = new RepositoryNode(index);"
  },
  {
    "sha": "82f919f0a1e18c2f1ef64812b022d30eee6835b9",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractCreateMavenProjectsOperation.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractCreateMavenProjectsOperation.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/89d5169b39a30cef6fdb7c1bfc6481997f45e429/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractCreateMavenProjectsOperation.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/wizards/AbstractCreateMavenProjectsOperation.java?ref=89d5169b39a30cef6fdb7c1bfc6481997f45e429",
    "patch": "@@ -58,7 +58,7 @@ public AbstractCreateMavenProjectsOperation(List<IWorkingSet> workingSets) {\n   protected abstract List<IProject> doCreateMavenProjects(IProgressMonitor monitor) throws CoreException;\n \n   protected static ArrayList<IProject> toProjects(List<IMavenProjectImportResult> results) {\n-    ArrayList<IProject> projects = new ArrayList<IProject>();\n+    ArrayList<IProject> projects = new ArrayList<>();\n     for(IMavenProjectImportResult result : results) {\n       if(result.getProject() != null) {\n         projects.add(result.getProject());"
  }
]
