[
  {
    "sha": "a9ce58c7b7cbd0a27c35d8faf2a425964516c267",
    "filename": "m2e-maven-runtime/org.eclipse.m2e.maven.indexer/src/main/java/org/apache/maven/index/DefaultIndexerEngine.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/m2e-maven-runtime/org.eclipse.m2e.maven.indexer/src/main/java/org/apache/maven/index/DefaultIndexerEngine.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/m2e-maven-runtime/org.eclipse.m2e.maven.indexer/src/main/java/org/apache/maven/index/DefaultIndexerEngine.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/m2e-maven-runtime/org.eclipse.m2e.maven.indexer/src/main/java/org/apache/maven/index/DefaultIndexerEngine.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -115,7 +115,7 @@ private boolean equals( Document d1, Document d2 )\n \n     private Map<String, String> toMap( Document d )\n     {\n-        final HashMap<String, String> result = new HashMap<String, String>();\n+        final HashMap<String, String> result = new HashMap<>();\n \n         for ( IndexableField f : d.getFields() )\n         {"
  },
  {
    "sha": "743381f82936df03b37add5e4ee965fb2138cbdc",
    "filename": "org.eclipse.m2e.binaryproject.ui/src/org/eclipse/m2e/binaryproject/ui/internal/BinaryProjectImportWizard.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.binaryproject.ui/src/org/eclipse/m2e/binaryproject/ui/internal/BinaryProjectImportWizard.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.binaryproject.ui/src/org/eclipse/m2e/binaryproject/ui/internal/BinaryProjectImportWizard.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.binaryproject.ui/src/org/eclipse/m2e/binaryproject/ui/internal/BinaryProjectImportWizard.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -45,7 +45,7 @@ public BinaryProjectImportWizard() {}\n \n   @Override\n   public void init(IWorkbench workbench, IStructuredSelection selection) {\n-    final List<Dependency> dependencies = new ArrayList<Dependency>();\n+    final List<Dependency> dependencies = new ArrayList<>();\n     for (Iterator<?> it = selection.iterator(); it.hasNext();) {\n       Object element = it.next();\n       ArtifactKey artifactKey = SelectionUtil.getType(element, ArtifactKey.class);\n@@ -72,7 +72,7 @@ protected void createAdvancedSettings(Composite composite, GridData gridData) {\n \n   @Override\n   public boolean performFinish() {\n-    final ArrayList<ArtifactKey> artifacts = new ArrayList<ArtifactKey>();\n+    final ArrayList<ArtifactKey> artifacts = new ArrayList<>();\n \n     for (Dependency dependency : artifactsPage.getDependencies()) {\n       artifacts.add(new ArtifactKey(dependency.getGroupId(), dependency.getArtifactId(), dependency.getVersion(),"
  },
  {
    "sha": "08cb22c35e6965d97f01f6d86d55adb9741f4301",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/MavenVersionDecorator.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/MavenVersionDecorator.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/MavenVersionDecorator.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/MavenVersionDecorator.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -38,7 +38,7 @@\n  */\n public class MavenVersionDecorator implements ILabelDecorator {\n \n-  private Map<ILabelProviderListener, IMavenProjectChangedListener> listeners = new HashMap<ILabelProviderListener, IMavenProjectChangedListener>();\n+  private Map<ILabelProviderListener, IMavenProjectChangedListener> listeners = new HashMap<>();\n \n   public Image decorateImage(Image image, Object element) {\n     return null;\n@@ -76,7 +76,7 @@ public boolean isLabelProperty(Object element, String property) {\n \n   public void addListener(final ILabelProviderListener listener) {\n     IMavenProjectChangedListener projectChangeListener = (events, monitor) -> {\n-      ArrayList<IResource> pomList = new ArrayList<IResource>();\n+      ArrayList<IResource> pomList = new ArrayList<>();\n       for(int i = 0; i < events.length; i++ ) {\n         // pomList.add(events[i].getSource());\n         if(events[i] != null && events[i].getMavenProject() != null) {"
  },
  {
    "sha": "36d612153ca217a1d3f619daaa81d6611963e054",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/UpdateMavenProjectJob.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/UpdateMavenProjectJob.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/UpdateMavenProjectJob.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/UpdateMavenProjectJob.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -79,8 +79,8 @@ public IStatus runInWorkspace(IProgressMonitor monitor) {\n     Map<String, IStatus> updateStatus = configurationManager.updateProjectConfiguration(request, updateConfiguration,\n         cleanProjects, refreshFromLocal, monitor);\n \n-    Map<String, Throwable> errorMap = new LinkedHashMap<String, Throwable>();\n-    ArrayList<IStatus> errors = new ArrayList<IStatus>();\n+    Map<String, Throwable> errorMap = new LinkedHashMap<>();\n+    ArrayList<IStatus> errors = new ArrayList<>();\n \n     for(Map.Entry<String, IStatus> entry : updateStatus.entrySet()) {\n       if(!entry.getValue().isOK()) {"
  },
  {
    "sha": "7df9af91f3700210143642632adc6980c9135a63",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/WorkingSets.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/WorkingSets.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/WorkingSets.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/WorkingSets.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -42,7 +42,7 @@\n    * @since 1.5\n    */\n   public static String[] getWorkingSets() {\n-    List<String> workingSets = new ArrayList<String>();\n+    List<String> workingSets = new ArrayList<>();\n     IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();\n     for(IWorkingSet workingSet : workingSetManager.getWorkingSets()) {\n       if(workingSet.isVisible()) {\n@@ -120,7 +120,7 @@ public static void addToWorkingSets(Collection<IProject> projects, List<IWorking\n    * @since 1.5\n    */\n   public static Set<IProject> getProjects() {\n-    Set<IProject> projects = new HashSet<IProject>();\n+    Set<IProject> projects = new HashSet<>();\n     IWorkingSetManager manager = PlatformUI.getWorkbench().getWorkingSetManager();\n     for(IWorkingSet workingSet : manager.getAllWorkingSets()) {\n       try {\n@@ -162,7 +162,7 @@ public static IWorkingSet getAssignedWorkingSet(IResource element) {\n    * @since 1.5\n    */\n   public static List<IWorkingSet> getAssignedWorkingSets(IResource element) {\n-    List<IWorkingSet> list = new ArrayList<IWorkingSet>();\n+    List<IWorkingSet> list = new ArrayList<>();\n     IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();\n     for(IWorkingSet workingSet : workingSetManager.getWorkingSets()) {\n       for(IAdaptable adaptable : workingSet.getElements()) {"
  },
  {
    "sha": "54defa71cb79c0c48cd15cfa33c06d4ef1062544",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/actions/ChangeNatureAction.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/actions/ChangeNatureAction.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/actions/ChangeNatureAction.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/actions/ChangeNatureAction.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -90,7 +90,7 @@ public void setActivePart(IAction action, IWorkbenchPart targetPart) {\n   public void run(IAction action) {\n     if(selection instanceof IStructuredSelection) {\n       IStructuredSelection structuredSelection = (IStructuredSelection) selection;\n-      Set<IProject> projects = new LinkedHashSet<IProject>();\n+      Set<IProject> projects = new LinkedHashSet<>();\n       for(Iterator<?> it = structuredSelection.iterator(); it.hasNext();) {\n         Object element = it.next();\n         IProject project = null;"
  },
  {
    "sha": "2c3f959dc3731e8cb6b71feb2c357ff7877d1da5",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/actions/SelectionUtil.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/actions/SelectionUtil.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/actions/SelectionUtil.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/actions/SelectionUtil.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -317,7 +317,7 @@ private static MavenProject readMavenProject(final File pomFile, IProgressMonito\n     }\n \n     if(result.hasExceptions()) {\n-      List<IStatus> statuses = new ArrayList<IStatus>();\n+      List<IStatus> statuses = new ArrayList<>();\n       List<Throwable> exceptions = result.getExceptions();\n       for(Throwable e : exceptions) {\n         statuses.add(new Status(IStatus.ERROR, IMavenConstants.PLUGIN_ID, -1, e.getMessage(), e));\n@@ -392,7 +392,7 @@ public static IFile getPomFileFromPomEditorOrViewSelection(ISelection selection)\n    * @since 1.4.0\n    */\n   public static IProject[] getProjects(ISelection selection, boolean includeAll) {\n-    ArrayList<IProject> projectList = new ArrayList<IProject>();\n+    ArrayList<IProject> projectList = new ArrayList<>();\n     if(selection instanceof IStructuredSelection) {\n       for(Iterator<?> it = ((IStructuredSelection) selection).iterator(); it.hasNext();) {\n         Object o = it.next();"
  },
  {
    "sha": "c7b2d994cbdbacc9ca10074b640b81a0ad6727dd",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/NestedProjectsComposite.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/NestedProjectsComposite.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/NestedProjectsComposite.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/NestedProjectsComposite.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -122,7 +122,7 @@ public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {\n         if(parentElement instanceof IProject) {\n           String elePath = getElePath(parentElement);\n           String prevPath = null;\n-          List<IProject> children = new ArrayList<IProject>();\n+          List<IProject> children = new ArrayList<>();\n           for(String path : projectPaths.keySet()) {\n             if(path.length() != elePath.length() && path.startsWith(elePath)) {\n               if(prevPath == null || !path.startsWith(prevPath)) {\n@@ -368,7 +368,7 @@ IProject getProject(String path) {\n   }\n \n   private Collection<IProject> getMavenCodebases() {\n-    projectPaths = new TreeMap<String, IProject>();\n+    projectPaths = new TreeMap<>();\n \n     for(IProject project : ResourcesPlugin.getWorkspace().getRoot().getProjects()) {\n       try {\n@@ -388,7 +388,7 @@ IProject getProject(String path) {\n     if(projectPaths.isEmpty()) {\n       return Collections.<IProject> emptyList();\n     }\n-    List<IProject> projects = new ArrayList<IProject>();\n+    List<IProject> projects = new ArrayList<>();\n     String previous = projectPaths.keySet().iterator().next();\n     addProject(projects, previous);\n     for(String path : projectPaths.keySet()) {"
  },
  {
    "sha": "8b5c23961f7e1c19b715495a00e72240ebce15a6",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/PomHierarchyComposite.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/PomHierarchyComposite.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/PomHierarchyComposite.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/PomHierarchyComposite.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -93,7 +93,7 @@ public void computeHeirarchy(final IMavenProjectFacade project, IRunnableContext\n   }\n \n   void computeHeirarchy(IMavenProjectFacade projectFacade, IProgressMonitor monitor) throws CoreException {\n-    LinkedList<ParentHierarchyEntry> hierarchy = new LinkedList<ParentHierarchyEntry>();\n+    LinkedList<ParentHierarchyEntry> hierarchy = new LinkedList<>();\n     hierarchy.addAll(new ParentGatherer(projectFacade).getParentHierarchy(monitor));\n     setHierarchy(hierarchy);\n   }"
  },
  {
    "sha": "26c64c73d1b974f6b4037363c090f1150d852520",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/WorkingSetGroup.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/WorkingSetGroup.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/WorkingSetGroup.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/components/WorkingSetGroup.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -217,7 +217,7 @@ protected void updateConfiguration() {\n   }\n \n   Set<IWorkingSet> getWorkingSets() {\n-    Set<IWorkingSet> workingSets = new HashSet<IWorkingSet>();\n+    Set<IWorkingSet> workingSets = new HashSet<>();\n \n     IWorkingSetManager workingSetManager = PlatformUI.getWorkbench().getWorkingSetManager();\n     for(IWorkingSet workingSet : workingSetManager.getWorkingSets()) {"
  },
  {
    "sha": "995b296e474c8f1ab559c098b568998b6a6ad7fd",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/console/MavenConsoleImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/console/MavenConsoleImpl.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/console/MavenConsoleImpl.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/console/MavenConsoleImpl.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -68,7 +68,7 @@\n \n   private static final String TITLE = Messages.MavenConsoleImpl_title;\n \n-  private List<IMavenConsoleListener> listeners = new CopyOnWriteArrayList<IMavenConsoleListener>();\n+  private List<IMavenConsoleListener> listeners = new CopyOnWriteArrayList<>();\n \n   public MavenConsoleImpl(ImageDescriptor imageDescriptor) {\n     super(TITLE, imageDescriptor);"
  },
  {
    "sha": "3a6bd88ddd882c22a0426419e2f30f36209cee38",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/AssignWorkingSetDialog.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/AssignWorkingSetDialog.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/AssignWorkingSetDialog.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/AssignWorkingSetDialog.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -47,7 +47,7 @@\n \n   NestedProjectsComposite selectedProjects;\n \n-  Set<IProject> allWorkingSetProjects = new HashSet<IProject>(WorkingSets.getProjects());\n+  Set<IProject> allWorkingSetProjects = new HashSet<>(WorkingSets.getProjects());\n \n   Combo workingSetCombo;\n "
  },
  {
    "sha": "d01cdd6016412b40fdb34b596bfb29abc8da89c7",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/InputHistory.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/InputHistory.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/InputHistory.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/InputHistory.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -36,7 +36,7 @@ public InputHistory(String sectionName) {\n   }\n \n   public InputHistory(String sectionName, String[] privileged) {\n-    comboMap = new HashMap<String, List<ControlWrapper>>();\n+    comboMap = new HashMap<>();\n \n     M2EUIPluginActivator plugin = M2EUIPluginActivator.getDefault();\n     if(plugin != null) {\n@@ -59,7 +59,7 @@ public void load() {\n \n     for(Map.Entry<String, List<ControlWrapper>> e : comboMap.entrySet()) {\n       String id = e.getKey();\n-      Set<String> items = new LinkedHashSet<String>();\n+      Set<String> items = new LinkedHashSet<>();\n       String[] itemsArr = dialogSettings.getArray(id);\n       items.addAll(privileged);\n       if(itemsArr != null) {\n@@ -82,7 +82,7 @@ public void save() {\n     for(Map.Entry<String, List<ControlWrapper>> e : comboMap.entrySet()) {\n       String id = e.getKey();\n \n-      Set<String> history = new LinkedHashSet<String>(MAX_HISTORY);\n+      Set<String> history = new LinkedHashSet<>(MAX_HISTORY);\n \n       for(ControlWrapper wrapper : e.getValue()) {\n         wrapper.collect();\n@@ -121,7 +121,7 @@ public void add(String id, final Control combo) {\n       }\n       List<ControlWrapper> combos = comboMap.get(id);\n       if(combos == null) {\n-        combos = new ArrayList<ControlWrapper>();\n+        combos = new ArrayList<>();\n         comboMap.put(id, combos);\n       }\n       if(combo instanceof Combo) {"
  },
  {
    "sha": "245596b1c68d17b22ee550337a1898d7ccf200cb",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/MavenRepositorySearchDialog.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/MavenRepositorySearchDialog.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/MavenRepositorySearchDialog.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/dialogs/MavenRepositorySearchDialog.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -87,8 +87,8 @@ public static MavenRepositorySearchDialog createOpenPomDialog(Shell parent, Stri\n    */\n   public static MavenRepositorySearchDialog createSearchDependencyDialog(Shell parent, String title, MavenProject mp,\n       IProject p, boolean inManagedSection) {\n-    Set<ArtifactKey> artifacts = new HashSet<ArtifactKey>();\n-    Map<ArtifactKey, String> managed = new HashMap<ArtifactKey, String>();\n+    Set<ArtifactKey> artifacts = new HashSet<>();\n+    Map<ArtifactKey, String> managed = new HashMap<>();\n     if(mp != null) {\n       DependencyManagement dm = mp.getDependencyManagement();\n       if(dm != null && dm.getDependencies() != null) {\n@@ -120,8 +120,8 @@ public static MavenRepositorySearchDialog createSearchDependencyDialog(Shell par\n    */\n   public static MavenRepositorySearchDialog createSearchParentDialog(Shell parent, String title, MavenProject mp,\n       IProject p) {\n-    Set<ArtifactKey> artifacts = new HashSet<ArtifactKey>();\n-    Map<ArtifactKey, String> managed = new HashMap<ArtifactKey, String>();\n+    Set<ArtifactKey> artifacts = new HashSet<>();\n+    Map<ArtifactKey, String> managed = new HashMap<>();\n     if(mp != null && mp.getModel().getParent() != null) {\n       Parent par = mp.getModel().getParent();\n       artifacts.add(new ArtifactKey(par.getGroupId(), par.getArtifactId(), par.getVersion(), null));\n@@ -139,8 +139,8 @@ public static MavenRepositorySearchDialog createSearchParentDialog(Shell parent,\n    */\n   public static MavenRepositorySearchDialog createSearchPluginDialog(Shell parent, String title, MavenProject mp,\n       IProject p, boolean inManagedSection) {\n-    Set<ArtifactKey> artifacts = new HashSet<ArtifactKey>();\n-    Map<ArtifactKey, String> managed = new HashMap<ArtifactKey, String>();\n+    Set<ArtifactKey> artifacts = new HashSet<>();\n+    Map<ArtifactKey, String> managed = new HashMap<>();\n     if(mp != null && mp.getBuild() != null) {\n       PluginManagement pm = mp.getBuild().getPluginManagement();\n       if(pm != null && pm.getPlugins() != null) {"
  },
  {
    "sha": "bb1ee84669f797599f8b09c1999a471ce4682ec5",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/ChangeCreator.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/ChangeCreator.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/ChangeCreator.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/ChangeCreator.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -103,7 +103,7 @@ private void addEdit(TextChange change, int startLine, TextEdit edit) {\n      */\n     public LineComparator(IDocument document) {\n       this.document = document;\n-      this.hashes = new ArrayList<Integer>(Arrays.asList(new Integer[document.getNumberOfLines()]));\n+      this.hashes = new ArrayList<>(Arrays.asList(new Integer[document.getNumberOfLines()]));\n     }\n \n     /*"
  },
  {
    "sha": "a73583a912bfb64ef7587d15198ec924f970f5e5",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/LifecycleMappingOperation.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/LifecycleMappingOperation.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/LifecycleMappingOperation.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/LifecycleMappingOperation.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -157,7 +157,7 @@ public void process(Document document) {\n     }\n     //now enter/update the goal(s)..\n     Element goalsEl = getChild(execution, \"pluginExecutionFilter\", GOALS); //$NON-NLS-1$\n-    List<String> toAddGoals = new ArrayList<String>(Arrays.asList(goals));\n+    List<String> toAddGoals = new ArrayList<>(Arrays.asList(goals));\n     for(Element existingGoal : findChilds(goalsEl, GOAL)) {\n       String glValue = getTextValue(existingGoal);\n       if(glValue != null && toAddGoals.contains(glValue)) {"
  },
  {
    "sha": "306fa5ea4107ba3f362ee674671d2125b03c752b",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/PomEdits.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/PomEdits.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/PomEdits.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/editing/PomEdits.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -166,7 +166,7 @@ public static Element findChild(Element parent, String name) {\n   }\n \n   public static List<Element> findChilds(Element parent, String name) {\n-    List<Element> toRet = new ArrayList<Element>();\n+    List<Element> toRet = new ArrayList<>();\n     if(parent != null) {\n       NodeList rootList = parent.getChildNodes();\n       for(int i = 0; i < rootList.getLength(); i++ ) {\n@@ -259,7 +259,7 @@ public static Element createElement(Element parent, String name) {\n    */\n   public static void setText(Element element, String value) {\n     NodeList list = element.getChildNodes();\n-    List<Node> toRemove = new ArrayList<Node>();\n+    List<Node> toRemove = new ArrayList<>();\n     for(int i = 0; i < list.getLength(); i++ ) {\n       Node child = list.item(i);\n       if(child instanceof Text) {"
  },
  {
    "sha": "ebb9eea60bd39ea350fc269ce354d494a395d508",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/lifecyclemapping/AggregateMappingLabelProvider.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/lifecyclemapping/AggregateMappingLabelProvider.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/lifecyclemapping/AggregateMappingLabelProvider.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/lifecyclemapping/AggregateMappingLabelProvider.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -84,7 +84,7 @@ public ILifecycleMappingRequirement getKey() {\n   }\n \n   public Collection<MavenProject> getProjects() {\n-    Set<MavenProject> projects = new HashSet<MavenProject>();\n+    Set<MavenProject> projects = new HashSet<>();\n     for(ILifecycleMappingLabelProvider provider : content) {\n       projects.addAll(provider.getProjects());\n     }"
  },
  {
    "sha": "13c4a6fa9b1bb72873fc0cc9fd1a6e4eee276f24",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/markers/MarkerLocationService.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/markers/MarkerLocationService.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/markers/MarkerLocationService.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/markers/MarkerLocationService.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -145,7 +145,7 @@ public void findLocationForMarker_(final IMarker marker) {\n         XmlUtils.performOnRootElement((IFile) marker.getResource(), new NodeOperation<Element>() {\n           public void process(Element root, IStructuredDocument structuredDocument) {\n             Element build = findChild(root, PomEdits.BUILD);\n-            List<Element> candidates = new ArrayList<Element>();\n+            List<Element> candidates = new ArrayList<>();\n             Element plugin = findPlugin(build, groupId, artifactId);\n             if(plugin != null) {\n               candidates.add(plugin);\n@@ -314,7 +314,7 @@ private static void checkManagedDependencies(IMavenMarkerManager mavenMarkerMana\n     if(ProblemSeverity.ignore.equals(overridingManagedVersionSeverity)) {\n       return;\n     }\n-    List<Element> candidates = new ArrayList<Element>();\n+    List<Element> candidates = new ArrayList<>();\n \n     Element dependencies = findChild(root, PomEdits.DEPENDENCIES);\n     if(dependencies != null) {\n@@ -332,7 +332,7 @@ private static void checkManagedDependencies(IMavenMarkerManager mavenMarkerMana\n         + mavenproject.getVersion();\n     List<String> activeprofiles = mavenproject.getInjectedProfileIds().get(currentProjectKey);\n     //remember what profile we found the dependency in.\n-    Map<Element, String> candidateProfile = new HashMap<Element, String>();\n+    Map<Element, String> candidateProfile = new HashMap<>();\n     Element profiles = findChild(root, PomEdits.PROFILES);\n     if(profiles != null) {\n       for(Element profile : findChilds(profiles, PomEdits.PROFILE)) {\n@@ -352,7 +352,7 @@ private static void checkManagedDependencies(IMavenMarkerManager mavenMarkerMana\n       }\n     }\n     //collect the managed dep ids\n-    Map<String, Dependency> managed = new HashMap<String, Dependency>();\n+    Map<String, Dependency> managed = new HashMap<>();\n     DependencyManagement dm = mavenproject.getDependencyManagement();\n     if(dm != null) {\n       List<Dependency> deps = dm.getDependencies();\n@@ -442,7 +442,7 @@ private static void checkManagedPlugins(IMavenMarkerManager mavenMarkerManager,\n     if(ProblemSeverity.ignore.equals(overridingManagedVersionSeverity)) {\n       return;\n     }\n-    List<Element> candidates = new ArrayList<Element>();\n+    List<Element> candidates = new ArrayList<>();\n     Element build = findChild(root, PomEdits.BUILD);\n     if(build == null) {\n       return;\n@@ -463,7 +463,7 @@ private static void checkManagedPlugins(IMavenMarkerManager mavenMarkerManager,\n         + mavenproject.getVersion();\n     List<String> activeprofiles = mavenproject.getInjectedProfileIds().get(currentProjectKey);\n     //remember what profile we found the dependency in.\n-    Map<Element, String> candidateProfile = new HashMap<Element, String>();\n+    Map<Element, String> candidateProfile = new HashMap<>();\n     Element profiles = findChild(root, PomEdits.PROFILES);\n     if(profiles != null) {\n       for(Element profile : findChilds(profiles, PomEdits.PROFILE)) {\n@@ -487,7 +487,7 @@ private static void checkManagedPlugins(IMavenMarkerManager mavenMarkerManager,\n       }\n     }\n     //collect the managed plugin ids\n-    Map<String, Plugin> managed = new HashMap<String, Plugin>();\n+    Map<String, Plugin> managed = new HashMap<>();\n     PluginManagement pm = mavenproject.getPluginManagement();\n     if(pm != null) {\n       List<Plugin> plgs = pm.getPlugins();"
  },
  {
    "sha": "a0d5c0d2a71f7d60cb8c42fd43cbc8adad8f7ee9",
    "filename": "org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/LifecycleMappingsViewer.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/eclipse-m2e/m2e-core/blob/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/LifecycleMappingsViewer.java",
    "raw_url": "https://github.com/eclipse-m2e/m2e-core/raw/21fcb3e5d9c8d19488da5ef99994917dd5a4e098/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/LifecycleMappingsViewer.java",
    "contents_url": "https://api.github.com/repos/eclipse-m2e/m2e-core/contents/org.eclipse.m2e.core.ui/src/org/eclipse/m2e/core/ui/internal/preferences/LifecycleMappingsViewer.java?ref=21fcb3e5d9c8d19488da5ef99994917dd5a4e098",
    "patch": "@@ -228,7 +228,7 @@ public Object getParent(Object element) {\n         if(showIgnoredExecutions) {\n           executions = mappings.keySet();\n         } else {\n-          executions = new LinkedHashSet<MojoExecutionKey>();\n+          executions = new LinkedHashSet<>();\n           for(Map.Entry<MojoExecutionKey, List<IPluginExecutionMetadata>> entry : mappings.entrySet()) {\n             if(!isIgnoreMapping(entry.getKey(), entry.getValue())) {\n               executions.add(entry.getKey());\n@@ -247,7 +247,7 @@ public Object getParent(Object element) {\n           return executions.toArray();\n         }\n         // filter out ignored executions\n-        executions = new ArrayList<MojoExecutionKey>(executions); // clone\n+        executions = new ArrayList<>(executions); // clone\n         Iterator<MojoExecutionKey> iter = executions.iterator();\n         while(iter.hasNext()) {\n           MojoExecutionKey execution = iter.next();\n@@ -418,7 +418,7 @@ String toString(MojoExecutionKey execution, List<IPluginExecutionMetadata> mappi\n   }\n \n   String getSourcelabel(MojoExecutionKey execution, List<IPluginExecutionMetadata> mappings, boolean detailed) {\n-    LinkedHashSet<String> sources = new LinkedHashSet<String>();\n+    LinkedHashSet<String> sources = new LinkedHashSet<>();\n     if(mappings != null && !mappings.isEmpty()) {\n       for(IPluginExecutionMetadata mapping : mappings) {\n         LifecycleMappingMetadataSource metadata = ((PluginExecutionMetadata) mapping).getSource();\n@@ -541,12 +541,12 @@ public void setTarget(final IProject project) {\n         log.error(ex.getMessage(), ex);\n       }\n     }\n-    phases = new LinkedHashMap<String, List<MojoExecutionKey>>();\n+    phases = new LinkedHashMap<>();\n     if(mappings != null) {\n       for(MojoExecutionKey execution : mappings.keySet()) {\n         List<MojoExecutionKey> executions = phases.get(execution.getLifecyclePhase());\n         if(executions == null) {\n-          executions = new ArrayList<MojoExecutionKey>();\n+          executions = new ArrayList<>();\n           phases.put(execution.getLifecyclePhase(), executions);\n         }\n         executions.add(execution);"
  }
]
