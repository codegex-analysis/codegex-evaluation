[
  {
    "sha": "a9ce0100552dbb056d95982b5a1226cdfd71c76b",
    "filename": "FlightControl/src/main/java/org/spazzinq/flightcontrol/EventListener.java",
    "status": "modified",
    "additions": 27,
    "deletions": 5,
    "changes": 32,
    "blob_url": "https://github.com/Spazzinq/FlightControl/blob/83cc0a55495f3562e3173fac1e69b7031d6758e9/FlightControl/src/main/java/org/spazzinq/flightcontrol/EventListener.java",
    "raw_url": "https://github.com/Spazzinq/FlightControl/raw/83cc0a55495f3562e3173fac1e69b7031d6758e9/FlightControl/src/main/java/org/spazzinq/flightcontrol/EventListener.java",
    "contents_url": "https://api.github.com/repos/Spazzinq/FlightControl/contents/FlightControl/src/main/java/org/spazzinq/flightcontrol/EventListener.java?ref=83cc0a55495f3562e3173fac1e69b7031d6758e9",
    "patch": "@@ -96,19 +96,40 @@ private void onMove(PlayerMoveEvent e) {\n      * Checks a player's flight status when they teleport, and disables the trail if necessary.\n      */\n     @EventHandler private void onTP(PlayerTeleportEvent e) {\n-        // Prevent calling on login because another handler takes care of that\n+        // Only check if not login because onJoin handles login\n         if (e.getCause() != PlayerTeleportEvent.TeleportCause.UNKNOWN) {\n             Player p = e.getPlayer();\n \n-            pl.getFlightManager().check(p);\n+            // Only check if same worlds because onWorldChange handles world changes\n+            if (e.getFrom().getWorld().equals(e.getTo().getWorld())) {\n+                pl.getFlightManager().check(p);\n+            }\n \n-            // Fixes a bug where particles remain when not supposed so\n+            // Fixes a bug where particles remain when not supposed to\n             if (!p.getAllowFlight()) {\n                 pl.getTrailManager().disableTrail(p);\n             }\n         }\n     }\n \n+    /**\n+    * Checks a player's flight status when they change worlds, and disables the trail if necessary.\n+    *\n+    * Note: Must use world change event because otherwise the manager checks from the previous\n+    * world and enables flight incorrectly.\n+    */\n+    @EventHandler private void onWorldChange(PlayerChangedWorldEvent e) {\n+        Player p = e.getPlayer();\n+\n+        pl.getFlightManager().check(p);\n+\n+        // Fixes a bug where particles remain when not supposed to\n+        if (!p.getAllowFlight()) {\n+            pl.getTrailManager().disableTrail(p);\n+        }\n+\n+    }\n+\n     /**\n      * Pauses temporary flight timer and removes trail on player disconnect.\n      */\n@@ -196,7 +217,8 @@ public void run() {\n      * Checks tempfly timer when a player interacts\n      * with a sign because signs may affect tempfly status.\n      */\n-    @EventHandler(priority = EventPriority.MONITOR) private void onSignInteract(PlayerInteractEvent e) {\n+    @EventHandler(priority = EventPriority.MONITOR)\n+    private void onSignInteract(PlayerInteractEvent e) {\n         if (e.hasBlock()) {\n             // Workaround for multiple versions (I hope)\n             if (e.getClickedBlock().getState() instanceof Sign) {\n@@ -233,4 +255,4 @@ public void run() {\n     @EventHandler private void onWorldInit(WorldInitEvent e) {\n         pl.getPermissionManager().registerDefaultFlyPerms(e.getWorld().getName());\n     }\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "94c343e179d9274c9bb6853bddaf89670ca20a4a",
    "filename": "FlightControl/src/main/java/org/spazzinq/flightcontrol/manager/FlightManager.java",
    "status": "modified",
    "additions": 9,
    "deletions": 6,
    "changes": 15,
    "blob_url": "https://github.com/Spazzinq/FlightControl/blob/83cc0a55495f3562e3173fac1e69b7031d6758e9/FlightControl/src/main/java/org/spazzinq/flightcontrol/manager/FlightManager.java",
    "raw_url": "https://github.com/Spazzinq/FlightControl/raw/83cc0a55495f3562e3173fac1e69b7031d6758e9/FlightControl/src/main/java/org/spazzinq/flightcontrol/manager/FlightManager.java",
    "contents_url": "https://api.github.com/repos/Spazzinq/FlightControl/contents/FlightControl/src/main/java/org/spazzinq/flightcontrol/manager/FlightManager.java?ref=83cc0a55495f3562e3173fac1e69b7031d6758e9",
    "patch": "@@ -69,22 +69,23 @@ public void check(Player p, boolean isCommand) {\n             boolean disable = !disableChecks.isEmpty();\n             Cause enableCause = enable ? enableChecks.iterator().next().getCause() : null;\n             Cause disableCause = disable ? disableChecks.iterator().next().getCause() : null;\n-\n             if (p.getAllowFlight()) {\n                 // If override or not enabled\n                 if (disable || !enable) {\n                     disableFlight(p, disableCause,false);\n                 }\n             // If all clear to enable\n+\n             } else if (enable && !disable) {\n                 // If directly enabled or auto-enable is enabled\n+\n                 if (isCommand || (pl.getConfManager().isAutoEnable() && !disabledByPlayer.contains(p))) {\n                     enableFlight(p, enableCause, isCommand);\n                 } else {\n                     canEnable(p, enableCause);\n                 }\n             // If denied\n-            } else if (isCommand || alreadyCanMsg.contains(p)) {\n+            } else if (isCommand || (alreadyCanMsg.contains(p) && !disabledByPlayer.contains(p))) {\n                 cannotEnable(p, disableCause);\n             }\n         // If bypassing checks\n@@ -124,6 +125,9 @@ private void cannotEnable(Player p, Cause cause) {\n         APIManager.getInstance().callEvent(e);\n \n         if (!e.isCancelled()) {\n+            pl.getPlayerManager().getFlightPlayer(p).getTempflyTimer().pause();\n+            p.setAllowFlight(false);\n+            p.setFlying(false);\n             alreadyCanMsg.remove(p);\n             Sound.play(p, e.getSound());\n             msg(p, e.getMessage(), e.isByActionbar());\n@@ -140,6 +144,7 @@ private void enableFlight(Player p, Cause cause, boolean isCommand) {\n             if (isCommand) {\n                 disabledByPlayer.remove(p);\n             }\n+            alreadyCanMsg.add(p);\n             p.setAllowFlight(true);\n             // Ignore if not double-tapped\n             if (!Sound.playEveryEnable) {\n@@ -154,16 +159,14 @@ public void disableFlight(Player p, Cause cause, boolean isCommand) {\n                 Sound.disableSound, pl.getLangManager().useActionBar(), isCommand);\n \n         APIManager.getInstance().callEvent(e);\n-\n         if (!e.isCancelled()) {\n+\n             pl.getPlayerManager().getFlightPlayer(p).getTempflyTimer().pause();\n \n             if (isCommand) {\n                 disabledByPlayer.add(p);\n-                alreadyCanMsg.add(p);\n-            } else {\n-                alreadyCanMsg.remove(p);\n             }\n+            alreadyCanMsg.remove(p);\n \n             if (pl.getConfManager().isCancelFall() && p.isFlying()) {\n                 noFallDmg.add(p);"
  }
]
