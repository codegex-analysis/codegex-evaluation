[
  {
    "sha": "6338c1b141b8ff68064fc081dded6049cb3a26d3",
    "filename": "pom.xml",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/AlexZiablitsev/Tests/blob/c666ff9538730cb43d8a6e810681262783d471bb/pom.xml",
    "raw_url": "https://github.com/AlexZiablitsev/Tests/raw/c666ff9538730cb43d8a6e810681262783d471bb/pom.xml",
    "contents_url": "https://api.github.com/repos/AlexZiablitsev/Tests/contents/pom.xml?ref=c666ff9538730cb43d8a6e810681262783d471bb",
    "patch": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.tms</groupId>\n+    <artifactId>lesson_5</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <properties>\n+        <maven.compiler.source>15</maven.compiler.source>\n+        <maven.compiler.target>15</maven.compiler.target>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.testng</groupId>\n+            <artifactId>testng</artifactId>\n+            <version>7.4.0</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.seleniumhq.selenium</groupId>\n+            <artifactId>selenium-java</artifactId>\n+            <version>3.141.59</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.seleniumhq.selenium</groupId>\n+            <artifactId>selenium-chrome-driver</artifactId>\n+            <version>3.141.59</version>\n+        </dependency>\n+\n+    </dependencies>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "c8aa86c1c59d15cb074408c1a8f39717cb1c3f2f",
    "filename": "src/test/java/Lesson5/SmokeTest2.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/AlexZiablitsev/Tests/blob/c666ff9538730cb43d8a6e810681262783d471bb/src/test/java/Lesson5/SmokeTest2.java",
    "raw_url": "https://github.com/AlexZiablitsev/Tests/raw/c666ff9538730cb43d8a6e810681262783d471bb/src/test/java/Lesson5/SmokeTest2.java",
    "contents_url": "https://api.github.com/repos/AlexZiablitsev/Tests/contents/src/test/java/Lesson5/SmokeTest2.java?ref=c666ff9538730cb43d8a6e810681262783d471bb",
    "patch": "@@ -0,0 +1,72 @@\n+package Lesson5;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.chrome.ChromeDriver;\n+import org.openqa.selenium.support.ui.Select;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+public class SmokeTest2 {\n+\n+    @Test\n+    public void smokeTest1() throws InterruptedException {\n+        ClassLoader classLoader = getClass().getClassLoader();\n+        File file = new File(classLoader.getResource(\"drivers/chromedriver.exe\").getFile());\n+        String absolutePath = file.getAbsolutePath();\n+\n+        System.setProperty(\"webdriver.chrome.driver\", absolutePath);\n+\n+        ChromeDriver driver = new ChromeDriver();\n+        driver.get(\"https://calc.by/building-calculators/laminate.html\");\n+\n+        WebElement selectWebElement = driver.findElement(By.id(\"laying_method_laminate\"));\n+        Select layingMethodLaminate = new Select(selectWebElement);\n+\n+        layingMethodLaminate.selectByVisibleText(\"с использованием отрезанного элемента\");\n+\n+        WebElement lengthRoom = driver.findElement(By.id(\"ln_room_id\"));\n+        lengthRoom.clear();\n+        lengthRoom.sendKeys(\"500\");\n+\n+        WebElement widthRoom = driver.findElement(By.id(\"wd_room_id\"));\n+        widthRoom.clear();\n+        widthRoom.sendKeys(\"400\");\n+\n+        WebElement lengthLaminate = driver.findElement(By.id(\"ln_lam_id\"));\n+        lengthLaminate.clear();\n+        lengthLaminate.sendKeys(\"2000\");\n+\n+        WebElement widthLaminate = driver.findElement(By.id(\"wd_lam_id\"));\n+        widthLaminate.clear();\n+        widthLaminate.sendKeys(\"200\");\n+\n+        List<WebElement> layingDirectionOfLaminate = driver.findElements(By.name(\"direction-laminate\"));\n+        for (WebElement select : layingDirectionOfLaminate) {\n+            if (select.getAttribute(\"value\").equals(\"1\")) {\n+                select.click();\n+                break;\n+            }\n+        }\n+\n+        WebElement calcBtn = driver.findElement(By.linkText(\"Рассчитать\"));\n+        calcBtn.click();\n+\n+\n+        Thread.sleep(5000); // неуспевает страница обновиться выкинул вот \"ЭТО\"\n+\n+\n+\n+        WebElement quantityLaminate = driver.findElement(By.xpath(\"//span [text() = '53']\"));\n+        Assert.assertEquals(quantityLaminate.getText(), \"53\",\"Требуемое количество досок ламината отображается не корректно.\");\n+\n+        WebElement countPacks = driver.findElement(By.xpath(\"//span [text() = '7']\"));\n+        Assert.assertEquals(countPacks.getText(),\"7\",\"Количество упаковок ламината отображается не корректно.\");\n+\n+\n+        driver.quit();\n+    }\n+}"
  },
  {
    "sha": "14cf913c1d5fd561576efb5094ae27a90eccb326",
    "filename": "src/test/java/Lesson5/SmokeTest3.java",
    "status": "added",
    "additions": 230,
    "deletions": 0,
    "changes": 230,
    "blob_url": "https://github.com/AlexZiablitsev/Tests/blob/c666ff9538730cb43d8a6e810681262783d471bb/src/test/java/Lesson5/SmokeTest3.java",
    "raw_url": "https://github.com/AlexZiablitsev/Tests/raw/c666ff9538730cb43d8a6e810681262783d471bb/src/test/java/Lesson5/SmokeTest3.java",
    "contents_url": "https://api.github.com/repos/AlexZiablitsev/Tests/contents/src/test/java/Lesson5/SmokeTest3.java?ref=c666ff9538730cb43d8a6e810681262783d471bb",
    "patch": "@@ -0,0 +1,230 @@\n+package Lesson5;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.JavascriptExecutor;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.chrome.ChromeDriver;\n+import org.openqa.selenium.support.ui.Select;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+\n+public class SmokeTest3 {\n+\n+    @Test\n+    public void smokeTest1() {\n+        ClassLoader classLoader = getClass().getClassLoader();\n+        File file = new File(classLoader.getResource(\"drivers/chromedriver.exe\").getFile());\n+        String absolutePath = file.getAbsolutePath();\n+\n+        System.setProperty(\"webdriver.chrome.driver\", absolutePath);\n+\n+        ChromeDriver driver = new ChromeDriver();\n+        driver.get(\"https://masterskayapola.ru/kalkulyator/laminata.html\");\n+\n+        WebElement lengthRoom = driver.findElement(By.name(\"calc_roomwidth\"));\n+        JavascriptExecutor jselenghtRoom = (JavascriptExecutor) driver;\n+        jselenghtRoom.executeScript(\"arguments[0].value='6';\", lengthRoom);\n+\n+\n+        WebElement widthRoom = driver.findElement(By.name(\"calc_roomheight\"));\n+        JavascriptExecutor jsewidthRoom = (JavascriptExecutor) driver;\n+        jsewidthRoom.executeScript(\"arguments[0].value='4';\", widthRoom);\n+\n+        WebElement lengthLaminate = driver.findElement(By.name(\"calc_lamwidth\"));\n+        JavascriptExecutor jsell = (JavascriptExecutor) driver;\n+        jsell.executeScript(\"arguments[0].value='2000';\", lengthLaminate);\n+\n+        WebElement widthLaminate = driver.findElement(By.name(\"calc_lamheight\"));\n+        JavascriptExecutor jsewl = (JavascriptExecutor) driver;\n+        jsewl.executeScript(\"arguments[0].value='200';\", widthLaminate);\n+\n+        WebElement packing = driver.findElement(By.name(\"calc_inpack\"));\n+        JavascriptExecutor jsePacking = (JavascriptExecutor) driver;\n+        jsePacking.executeScript(\"arguments[0].value='8';\", packing);\n+\n+        WebElement price = driver.findElement(By.name(\"calc_price\"));\n+        JavascriptExecutor jsePrice = (JavascriptExecutor) driver;\n+        jsePrice.executeScript(\"arguments[0].value='10';\", price);\n+\n+        WebElement layingDirectionOfLaminate = driver.findElement(By.name(\"calc_direct\"));\n+        Select select = new Select(layingDirectionOfLaminate);\n+        select.selectByValue(\"toh\");\n+\n+        WebElement offsetRows = driver.findElement(By.name(\"calc_bias\"));\n+        JavascriptExecutor jseoffsetRows = (JavascriptExecutor) driver;\n+        jseoffsetRows.executeScript(\"arguments[0].value= '400';\", offsetRows);\n+\n+        WebElement indentFromTheWall = driver.findElement(By.name(\"calc_walldist\"));\n+        JavascriptExecutor jseindentFromTheWall = (JavascriptExecutor) driver;\n+        jseindentFromTheWall.executeScript(\"arguments[0].value = '8';\", indentFromTheWall);\n+\n+        WebElement btn = driver.findElement(By.className(\"tocalc\"));\n+        btn.click();\n+\n+        WebElement square = driver.findElement(By.id(\"s_lam\"));\n+        Assert.assertEquals(square.getText(), \"23.84 м2.\", \"Площадь укладки отображается не верно.\");\n+\n+        WebElement countLaminate = driver.findElement(By.id(\"l_count\"));\n+        Assert.assertEquals(countLaminate.getText(), \"62 шт.\", \"Количество панелей отображается не верно.\");\n+\n+        WebElement countPack = driver.findElement(By.id(\"l_packs\"));\n+        Assert.assertEquals(countPack.getText(), \"8 шт.\", \"Количество упаковок отображается не верно.\");\n+\n+        WebElement priceLaminate = driver.findElement(By.id(\"l_price\"));\n+        Assert.assertEquals(priceLaminate.getText(), \"256 руб.\", \"Стоимость отображается не верно.\");\n+\n+        WebElement remains = driver.findElement(By.id(\"l_over\"));\n+        Assert.assertEquals(remains.getText(), \"2 шт.\", \"Остатки отображаются не верно.\");\n+\n+        WebElement segment = driver.findElement(By.id(\"l_trash\"));\n+        Assert.assertEquals(segment.getText(), \"10 шт.\", \"Отрезки отображаются не верно.\");\n+\n+        driver.quit();\n+    }\n+\n+    @Test\n+    public void smokeTest2() {\n+        ClassLoader classLoader = getClass().getClassLoader();\n+        File file = new File(classLoader.getResource(\"drivers/chromedriver.exe\").getFile());\n+        String absolutePath = file.getAbsolutePath();\n+\n+        System.setProperty(\"webdriver.chrome.driver\", absolutePath);\n+\n+        ChromeDriver driver = new ChromeDriver();\n+        driver.get(\"https://masterskayapola.ru/kalkulyator/laminata.html\");\n+\n+        WebElement lengthRoom = driver.findElement(By.name(\"calc_roomwidth\"));\n+        JavascriptExecutor jselenghtRoom = (JavascriptExecutor) driver;\n+        jselenghtRoom.executeScript(\"arguments[0].value='1.421';\", lengthRoom);\n+\n+\n+        WebElement widthRoom = driver.findElement(By.name(\"calc_roomheight\"));\n+        JavascriptExecutor jsewidthRoom = (JavascriptExecutor) driver;\n+        jsewidthRoom.executeScript(\"arguments[0].value='1.111';\", widthRoom);\n+\n+        WebElement lengthLaminate = driver.findElement(By.name(\"calc_lamwidth\"));\n+        JavascriptExecutor jsell = (JavascriptExecutor) driver;\n+        jsell.executeScript(\"arguments[0].value='500';\", lengthLaminate);\n+\n+        WebElement widthLaminate = driver.findElement(By.name(\"calc_lamheight\"));\n+        JavascriptExecutor jsewl = (JavascriptExecutor) driver;\n+        jsewl.executeScript(\"arguments[0].value='150';\", widthLaminate);\n+\n+        WebElement packing = driver.findElement(By.name(\"calc_inpack\"));\n+        JavascriptExecutor jsePacking = (JavascriptExecutor) driver;\n+        jsePacking.executeScript(\"arguments[0].value='6';\", packing);\n+\n+        WebElement price = driver.findElement(By.name(\"calc_price\"));\n+        JavascriptExecutor jsePrice = (JavascriptExecutor) driver;\n+        jsePrice.executeScript(\"arguments[0].value='11';\", price);\n+\n+        WebElement layingDirectionOfLaminate = driver.findElement(By.name(\"calc_direct\"));\n+        Select select = new Select(layingDirectionOfLaminate);\n+        select.selectByIndex(0);\n+\n+        WebElement offsetRows = driver.findElement(By.name(\"calc_bias\"));\n+        JavascriptExecutor jseoffsetRows = (JavascriptExecutor) driver;\n+        jseoffsetRows.executeScript(\"arguments[0].value= '250';\", offsetRows);\n+\n+        WebElement indentFromTheWall = driver.findElement(By.name(\"calc_walldist\"));\n+        JavascriptExecutor jseindentFromTheWall = (JavascriptExecutor) driver;\n+        jseindentFromTheWall.executeScript(\"arguments[0].value = '8';\", indentFromTheWall);\n+\n+        WebElement btn = driver.findElement(By.className(\"tocalc\"));\n+        btn.click();\n+\n+        WebElement square = driver.findElement(By.id(\"s_lam\"));\n+        Assert.assertEquals(square.getText(), \"1.54 м2.\", \"Площадь укладки отображается не верно.\");\n+\n+        WebElement countLaminate = driver.findElement(By.id(\"l_count\"));\n+        Assert.assertEquals(countLaminate.getText(), \"24 шт.\", \"Количество панелей отображается не верно.\");\n+\n+        WebElement countPack = driver.findElement(By.id(\"l_packs\"));\n+        Assert.assertEquals(countPack.getText(), \"4 шт.\", \"Количество упаковок отображается не верно.\");\n+\n+        WebElement priceLaminate = driver.findElement(By.id(\"l_price\"));\n+        Assert.assertEquals(priceLaminate.getText(), \"19 руб.\", \"Стоимость отображается не верно.\");\n+\n+        WebElement remains = driver.findElement(By.id(\"l_over\"));\n+        Assert.assertEquals(remains.getText(), \"0 шт.\", \"Остатки отображаются не верно.\");\n+\n+        WebElement segment = driver.findElement(By.id(\"l_trash\"));\n+        Assert.assertEquals(segment.getText(), \"4 шт.\");\n+\n+        driver.quit();\n+    }\n+\n+    @Test\n+    public void smokeTest3() {\n+        ClassLoader classLoader = getClass().getClassLoader();\n+        File file = new File(classLoader.getResource(\"drivers/chromedriver.exe\").getFile());\n+        String absolutePath = file.getAbsolutePath();\n+\n+        System.setProperty(\"webdriver.chrome.driver\", absolutePath);\n+\n+        ChromeDriver driver = new ChromeDriver();\n+        driver.get(\"https://masterskayapola.ru/kalkulyator/laminata.html\");\n+\n+        WebElement lengthRoom = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[1]/div[2]/div/span[2]/input\"));\n+        JavascriptExecutor jselenghtRoom = (JavascriptExecutor) driver;\n+        jselenghtRoom.executeScript(\"arguments[0].value='6.12';\", lengthRoom);\n+\n+\n+        WebElement widthRoom = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[1]/div[3]/div/span[2]/input\"));\n+        JavascriptExecutor jsewidthRoom = (JavascriptExecutor) driver;\n+        jsewidthRoom.executeScript(\"arguments[0].value='4.523';\", widthRoom);\n+\n+        WebElement lengthLaminate = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[2]/div[2]/div/span[2]/input\"));\n+        JavascriptExecutor jsell = (JavascriptExecutor) driver;\n+        jsell.executeScript(\"arguments[0].value='5000';\", lengthLaminate);\n+\n+        WebElement widthLaminate = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[2]/div[3]/div/span[2]/input\"));\n+        JavascriptExecutor jsewl = (JavascriptExecutor) driver;\n+        jsewl.executeScript(\"arguments[0].value='400';\", widthLaminate);\n+\n+        WebElement packing = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[2]/div[4]/div/span[2]/input\"));\n+        JavascriptExecutor jsePacking = (JavascriptExecutor) driver;\n+        jsePacking.executeScript(\"arguments[0].value='12';\", packing);\n+\n+        WebElement price = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[2]/div[5]/div/span[2]/input\"));\n+        JavascriptExecutor jsePrice = (JavascriptExecutor) driver;\n+        jsePrice.executeScript(\"arguments[0].value='156';\", price);\n+\n+        WebElement layingDirectionOfLaminate = driver.findElement(By.name(\"calc_direct\"));\n+        Select select = new Select(layingDirectionOfLaminate);\n+        select.selectByValue(\"tow\");\n+\n+        WebElement offsetRows = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[3]/div[3]/div/span[2]/input\"));\n+        JavascriptExecutor jseoffsetRows = (JavascriptExecutor) driver;\n+        jseoffsetRows.executeScript(\"arguments[0].value= '400';\", offsetRows);\n+\n+        WebElement indentFromTheWall = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[3]/div[4]/div/span[2]/input\"));\n+        JavascriptExecutor jseindentFromTheWall = (JavascriptExecutor) driver;\n+        jseindentFromTheWall.executeScript(\"arguments[0].value = '12';\", indentFromTheWall);\n+\n+        WebElement btn = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[3]/div[7]/div/input\"));\n+        btn.click();\n+\n+        WebElement square = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[4]/div[2]/div/span[3]/b\"));\n+        Assert.assertEquals(square.getText(), \"27.43\", \"Площадь укладки отображается не верно.\");\n+\n+        WebElement countLaminate = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[4]/div[3]/div/span[3]/b\"));\n+        Assert.assertEquals(countLaminate.getText(), \"15\", \"Количество панелей отображается не верно.\");\n+\n+        WebElement countPack = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[4]/div[4]/div/span[3]/b\"));\n+        Assert.assertEquals(countPack.getText(), \"2\", \"Количество упаковок отображается не верно.\");\n+\n+        WebElement priceLaminate = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[4]/div[5]/div/span[3]/b\"));\n+        Assert.assertEquals(priceLaminate.getText(), \"7488\", \"Стоимость отображается не верно.\");\n+\n+        WebElement remains = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[4]/div[6]/div/span[3]/b\"));\n+        Assert.assertEquals(remains.getText(), \"9\", \"Остатки отображаются не верно.\");\n+\n+        WebElement segment = driver.findElement(By.xpath(\"/html/body/div[1]/div/div/article/div/div[1]/div/div[2]/div[1]/div[2]/div[1]/div/form/div/div[4]/div[7]/div/span[3]/b\"));\n+        Assert.assertEquals(segment.getText(), \"1\", \"Отрезки отображаются не верно.\");\n+\n+        driver.quit();\n+    }\n+}"
  },
  {
    "sha": "d51602de7fe04617a7dd067ed913f343a1b3e222",
    "filename": "src/test/resources/drivers/chromedriver.exe",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/AlexZiablitsev/Tests/blob/c666ff9538730cb43d8a6e810681262783d471bb/src/test/resources/drivers/chromedriver.exe",
    "raw_url": "https://github.com/AlexZiablitsev/Tests/raw/c666ff9538730cb43d8a6e810681262783d471bb/src/test/resources/drivers/chromedriver.exe",
    "contents_url": "https://api.github.com/repos/AlexZiablitsev/Tests/contents/src/test/resources/drivers/chromedriver.exe?ref=c666ff9538730cb43d8a6e810681262783d471bb"
  }
]
