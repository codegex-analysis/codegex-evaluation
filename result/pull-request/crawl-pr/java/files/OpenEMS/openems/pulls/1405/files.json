[
  {
    "sha": "b16d4f340b4cfe8b17309d7a08de1b0d9bec90da",
    "filename": "ui/package-lock.json",
    "status": "modified",
    "additions": 826,
    "deletions": 445,
    "changes": 1271,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/package-lock.json",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/package-lock.json",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/package-lock.json?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35"
  },
  {
    "sha": "ccccfeb4da4c7b87e7b2d8b912c2fe68b2c9ce73",
    "filename": "ui/package.json",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/package.json",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/package.json",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/package.json?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -51,7 +51,7 @@\n   },\n   \"devDependencies\": {\n     \"@angular-devkit/architect\": \"^0.803.29\",\n-    \"@angular-devkit/build-angular\": \"^0.1002.2\",\n+    \"@angular-devkit/build-angular\": \"^0.1002.3\",\n     \"@angular-devkit/core\": \"^10.2.2\",\n     \"@angular-devkit/schematics\": \"^10.2.2\",\n     \"@angular/cli\": \"^10.2.2\","
  },
  {
    "sha": "9cba75328af56d21bcd2dd84df5d0633494ffdb7",
    "filename": "ui/src/app/about/about.component.html",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/about/about.component.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/about/about.component.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/about/about.component.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -20,7 +20,7 @@\n               </li>\n               <li>\n                 <a target=\"_blank\" href=\"https://github.com/OpenEMS/openems/tree/develop\">\n-                  <span translate>About.build</span>: 2021.5.0-SNAPSHOT</a>\n+                  <span translate>About.build</span>: 2021.4.0-SNAPSHOT</a>\n               </li>\n             </ul>\n             <p>"
  },
  {
    "sha": "395efd7bdb9445be8c3f2ad34d74835e5a2649b5",
    "filename": "ui/src/app/app-routing.module.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/app-routing.module.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/app-routing.module.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/app-routing.module.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -31,6 +31,7 @@ import { SymmetricPeakshavingChartOverviewComponent } from './edge/history/peaks\n import { SystemExecuteComponent as EdgeSettingsSystemExecuteComponent } from './edge/settings/systemexecute/systemexecute.component';\n import { SystemLogComponent as EdgeSettingsSystemLogComponent } from './edge/settings/systemlog/systemlog.component';\n import { TimeslotPeakshavingChartOverviewComponent } from './edge/history/peakshaving/timeslot/timeslotpeakshavingchartoverview/timeslotpeakshavingchartoverview.component';\n+import { LukasChartOverviewComponent } from './edge/history/lukas/lukaschartoverview/lukaschartoverview.component';\n \n \n \n@@ -58,6 +59,7 @@ const routes: Routes = [\n   { path: 'device/:edgeId/history/autarchychart', component: AutarchyChartOverviewComponent },\n   { path: 'device/:edgeId/history/consumptionchart', component: ConsumptionChartOverviewComponent },\n   { path: 'device/:edgeId/history/gridchart', component: GridChartOverviewComponent },\n+  { path: 'device/:edgeId/history/lukaschart', component: LukasChartOverviewComponent },\n   { path: 'device/:edgeId/history/productionchart', component: ProductionChartOverviewComponent },\n   { path: 'device/:edgeId/history/selfconsumptionchart', component: SelfconsumptionChartOverviewComponent },\n   { path: 'device/:edgeId/history/storagechart', component: StorageChartOverviewComponent },"
  },
  {
    "sha": "e247e9266b07fa0ebdb2057ad735dca7fc3b4de7",
    "filename": "ui/src/app/edge/history/abstracthistorychart.ts",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/abstracthistorychart.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/abstracthistorychart.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/history/abstracthistorychart.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -1,13 +1,13 @@\n-import { TranslateService } from '@ngx-translate/core';\n+import { ChannelAddress, Edge, EdgeConfig, Service, Utils } from \"../../shared/shared\";\n import { ChartDataSets } from 'chart.js';\n+import { ChartOptions, DEFAULT_TIME_CHART_OPTIONS, EMPTY_DATASET } from './shared';\n import { differenceInDays } from 'date-fns';\n-import { queryHistoricTimeseriesEnergyPerPeriodRequest } from 'src/app/shared/jsonrpc/request/queryHistoricTimeseriesEnergyPerPeriodRequest';\n-import { queryHistoricTimeseriesEnergyPerPeriodResponse } from 'src/app/shared/jsonrpc/response/queryHistoricTimeseriesEnergyPerPeriodResponse';\n import { JsonrpcResponseError } from \"../../shared/jsonrpc/base\";\n import { QueryHistoricTimeseriesDataRequest } from \"../../shared/jsonrpc/request/queryHistoricTimeseriesDataRequest\";\n import { QueryHistoricTimeseriesDataResponse } from \"../../shared/jsonrpc/response/queryHistoricTimeseriesDataResponse\";\n-import { ChannelAddress, Edge, EdgeConfig, Service, Utils } from \"../../shared/shared\";\n-import { ChartOptions, DEFAULT_TIME_CHART_OPTIONS, EMPTY_DATASET } from './shared';\n+import { queryHistoricTimeseriesEnergyPerPeriodRequest } from 'src/app/shared/jsonrpc/request/queryHistoricTimeseriesEnergyPerPeriodRequest';\n+import { queryHistoricTimeseriesEnergyPerPeriodResponse } from 'src/app/shared/jsonrpc/response/queryHistoricTimeseriesEnergyPerPeriodResponse';\n+import { TranslateService } from '@ngx-translate/core';\n \n // NOTE: Auto-refresh of widgets is currently disabled to reduce server load\n export abstract class AbstractHistoryChart {"
  },
  {
    "sha": "03c32218c8d72abe50882154be7e91b2b109dd94",
    "filename": "ui/src/app/edge/history/energy/energy.component.ts",
    "status": "modified",
    "additions": 16,
    "deletions": 16,
    "changes": 32,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/energy/energy.component.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/energy/energy.component.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/history/energy/energy.component.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -1,25 +1,25 @@\n-import { formatNumber } from '@angular/common';\n-import { Component, Input, OnChanges } from '@angular/core';\n+import { AbstractHistoryChart } from '../abstracthistorychart';\n import { ActivatedRoute } from '@angular/router';\n-import { ModalController, Platform } from '@ionic/angular';\n-import { TranslateService } from '@ngx-translate/core';\n-import { ChartData, ChartDataSets, ChartLegendLabelItem, ChartTooltipItem } from 'chart.js';\n-import { differenceInDays, format, isSameDay, isSameMonth, isSameYear } from 'date-fns';\n import { addDays } from 'date-fns/esm';\n-import * as FileSaver from 'file-saver';\n-import { Subject } from 'rxjs';\n-import { takeUntil } from 'rxjs/operators';\n-import { QueryHistoricTimeseriesExportXlxsRequest } from 'src/app/shared/jsonrpc/request/queryHistoricTimeseriesExportXlxs';\n import { Base64PayloadResponse } from 'src/app/shared/jsonrpc/response/base64PayloadResponse';\n-import { queryHistoricTimeseriesEnergyPerPeriodResponse } from 'src/app/shared/jsonrpc/response/queryHistoricTimeseriesEnergyPerPeriodResponse';\n-import { QueryHistoricTimeseriesEnergyResponse } from 'src/app/shared/jsonrpc/response/queryHistoricTimeseriesEnergyResponse';\n-import { UnitvaluePipe } from 'src/app/shared/pipe/unitvalue/unitvalue.pipe';\n-import { DefaultTypes } from 'src/app/shared/service/defaulttypes';\n-import { QueryHistoricTimeseriesDataResponse } from '../../../shared/jsonrpc/response/queryHistoricTimeseriesDataResponse';\n import { ChannelAddress, Edge, EdgeConfig, Service, Utils, Websocket } from '../../../shared/shared';\n-import { AbstractHistoryChart } from '../abstracthistorychart';\n+import { ChartData, ChartDataSets, ChartLegendLabelItem, ChartTooltipItem } from 'chart.js';\n import { ChartOptions, Data, DEFAULT_TIME_CHART_OPTIONS, TooltipItem } from './../shared';\n+import { Component, Input, OnChanges } from '@angular/core';\n+import { DefaultTypes } from 'src/app/shared/service/defaulttypes';\n+import { differenceInDays, format, isSameDay, isSameMonth, isSameYear } from 'date-fns';\n import { EnergyModalComponent } from './modal/modal.component';\n+import { formatNumber } from '@angular/common';\n+import { ModalController, Platform } from '@ionic/angular';\n+import { QueryHistoricTimeseriesDataResponse } from '../../../shared/jsonrpc/response/queryHistoricTimeseriesDataResponse';\n+import { queryHistoricTimeseriesEnergyPerPeriodResponse } from 'src/app/shared/jsonrpc/response/queryHistoricTimeseriesEnergyPerPeriodResponse';\n+import { QueryHistoricTimeseriesEnergyResponse } from 'src/app/shared/jsonrpc/response/queryHistoricTimeseriesEnergyResponse';\n+import { QueryHistoricTimeseriesExportXlxsRequest } from 'src/app/shared/jsonrpc/request/queryHistoricTimeseriesExportXlxs';\n+import { Subject } from 'rxjs';\n+import { takeUntil } from 'rxjs/operators';\n+import { TranslateService } from '@ngx-translate/core';\n+import { UnitvaluePipe } from 'src/app/shared/pipe/unitvalue/unitvalue.pipe';\n+import * as FileSaver from 'file-saver';\n \n type EnergyChartLabels = {\n   production: string,"
  },
  {
    "sha": "7550be79c67965780674b0070706f36183dfc466",
    "filename": "ui/src/app/edge/history/history.component.html",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/history.component.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/history.component.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/history/history.component.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -2,6 +2,7 @@\n <ion-content>\n   <ion-grid *ngIf=\"isTimedataAvailable && widgets\">\n     <ion-row>\n+\n       <!-- Energymonitor Chart -->\n       <ion-col size=\"12\">\n         <energy [period]=\"service.historyPeriod\" [style.height]=\"energyChartHeight\"></energy>\n@@ -11,6 +12,7 @@\n         <ion-col *ngSwitchCase=\"'Storage'\" size=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"3\">\n           <storageWidget [period]=\"service.historyPeriod\"></storageWidget>\n         </ion-col>\n+\n         <ion-col *ngSwitchCase=\"'Production'\" size=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"3\">\n           <productionWidget [period]=\"service.historyPeriod\"></productionWidget>\n         </ion-col>\n@@ -26,12 +28,19 @@\n         <ion-col *ngSwitchCase=\"'Autarchy'\" size=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"3\">\n           <autarchyWidget [period]=\"service.historyPeriod\"></autarchyWidget>\n         </ion-col>\n+        <ion-col *ngSwitchCase=\"'Lukas'\" size=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"3\">\n+          <lukasWidget [period]=\"service.historyPeriod\"></lukasWidget>\n+        </ion-col>\n       </ng-container>\n       <ng-container *ngFor=\"let widget of widgets.list\" [ngSwitch]=\"widget.name\">\n         <ion-col size=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"3\" *ngSwitchCase=\"'Controller.ChannelThreshold'\">\n           <channelthresholdWidget [componentId]=\"widget.componentId\" [period]=\"service.historyPeriod\">\n           </channelthresholdWidget>\n         </ion-col>\n+        <ion-col size=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"3\" *ngSwitchCase=\"'Controller.lukas'\">\n+          <autarchyWidget [componentId]=\"widget.componentId\" [period]=\"service.historyPeriod\">\n+          </autarchyWidget>\n+        </ion-col>\n         <ion-col size=\"12\" size-md=\"6\" size-lg=\"4\" size-xl=\"3\" *ngSwitchCase=\"'Controller.Io.FixDigitalOutput'\">\n           <fixDigitalOutputWidget [componentId]=\"widget.componentId\" [period]=\"service.historyPeriod\">\n           </fixDigitalOutputWidget>"
  },
  {
    "sha": "d8fe4b5293c4f36cd67c9a6fecbaf76d56268c7d",
    "filename": "ui/src/app/edge/history/history.module.ts",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/history.module.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/history.module.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/history/history.module.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -4,6 +4,9 @@ import { AsymmetricPeakshavingWidgetComponent } from './peakshaving/asymmetric/w\n import { AutarchyChartComponent } from './autarchy/chart.component';\r\n import { AutarchyChartOverviewComponent } from './autarchy/autarchychartoverview/autarchychartoverview.component';\r\n import { AutarchyWidgetComponent } from './autarchy/widget.component';\r\n+import { LukasChartComponent } from './lukas/chart.component';\r\n+import { LukasChartOverviewComponent } from './lukas/lukaschartoverview/lukaschartoverview.component';\r\n+import { LukasWidgetComponent } from './lukas/widget.component';\r\n import { ChannelthresholdChartOverviewComponent } from './channelthreshold/channelthresholdchartoverview/channelthresholdchartoverview.component';\r\n import { ChannelthresholdSingleChartComponent } from './channelthreshold/singlechart.component';\r\n import { ChannelthresholdTotalChartComponent } from './channelthreshold/totalchart.component';\r\n@@ -80,6 +83,9 @@ import { TimeslotPeakshavingWidgetComponent } from './peakshaving/timeslot/widge\n     AutarchyChartComponent,\r\n     AutarchyChartOverviewComponent,\r\n     AutarchyWidgetComponent,\r\n+    LukasChartComponent,\r\n+    LukasChartOverviewComponent,\r\n+    LukasWidgetComponent,\r\n     ChannelthresholdChartOverviewComponent,\r\n     ChannelthresholdSingleChartComponent,\r\n     ChannelthresholdTotalChartComponent,\r"
  },
  {
    "sha": "a7910238978fa9ba8a5d224c9a8a54dd084580c5",
    "filename": "ui/src/app/edge/history/lukas/chart.component.ts",
    "status": "added",
    "additions": 187,
    "deletions": 0,
    "changes": 187,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/lukas/chart.component.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/lukas/chart.component.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/history/lukas/chart.component.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,187 @@\n+import { AbstractHistoryChart } from '../abstracthistorychart';\n+import { ActivatedRoute } from '@angular/router';\n+import { ChannelAddress, Service } from '../../../shared/shared';\n+import { Component, Input, OnChanges, OnInit } from '@angular/core';\n+import { CurrentData } from 'src/app/shared/edge/currentdata';\n+import { Data, TooltipItem } from '../shared';\n+import { DefaultTypes } from 'src/app/shared/service/defaulttypes';\n+import { formatNumber } from '@angular/common';\n+import { TranslateService } from '@ngx-translate/core';\n+import { GeneratedFile } from '@angular/compiler';\n+\n+\n+@Component({\n+    selector: 'lukaschart',\n+    templateUrl: '../abstracthistorychart.html'\n+})\n+export class LukasChartComponent extends AbstractHistoryChart implements OnInit, OnChanges {\n+\n+    @Input() private period: DefaultTypes.HistoryPeriod;\n+\n+    ngOnChanges() {\n+        this.updateChart();\n+    };\n+\n+    constructor(\n+        protected service: Service,\n+        protected translate: TranslateService,\n+        private route: ActivatedRoute,\n+    ) {\n+        super(service, translate);\n+    }\n+\n+\n+    ngOnInit() {\n+        this.spinnerId = \"lukas-chart\";\n+        this.service.startSpinner(this.spinnerId);\n+        this.service.setCurrentComponent('', this.route);\n+    }\n+\n+    ngOnDestroy() {\n+        this.unsubscribeChartRefresh()\n+    }\n+\n+    protected updateChart() {\n+        this.autoSubscribeChartRefresh();\n+        this.service.startSpinner(this.spinnerId);\n+        this.loading = true;\n+        this.colors = [];\n+        this.queryHistoricTimeseriesData(this.period.from, this.period.to).then(response => {\n+            let result = response.result;\n+            // convert labels\n+            /* let labels: Date[] = [];\n+             for (let timestamp of result.timestamps) {\n+                 labels.push(new Date(timestamp));\n+             }\n+             this.labels = labels;*/\n+\n+            // convert datasets\n+\n+        }).catch(reason => {\n+            let datasets = [];\n+\n+            let lukas: number[] = [1233, 116, 1326, 4229, 2219, 2218, 1613, 1428, 12, 1442, 6228, 1426, 8421, 6421, 68, 1541, 2646, 6758, 1326, 8451, 6458]\n+            let labels: Date[] = [];\n+            //let minutes: number = labels.getUTCHours().value;\n+            for (let timestamp = 0; timestamp < lukas.length; timestamp++) {\n+\n+                labels.push(new Date((timestamp)));\n+            }\n+            this.labels = labels;\n+\n+\n+            datasets.push({\n+                type: 'bar',\n+                label: this.translate.instant('General.lukas'),\n+                data: lukas,\n+                hidden: false\n+            })\n+\n+\n+            this.colors.push({\n+                backgroundColor: 'rgba(0,152,204,0.05)',\n+                borderColor: 'rgba(0,152,204,1)'\n+            })\n+            let socData: number[] = [20, 30, 20, 10, 15, 10]\n+            datasets.push({\n+                type: 'line',\n+                label: this.translate.instant('General.energy'),\n+                data: socData,\n+                hidden: false,\n+                borderDash: [10, 5],\n+            })\n+\n+\n+            this.colors.push({\n+                backgroundColor: 'rgba(0,52,104,0.05)',\n+                borderColor: 'rgba(0,52,104,1)'\n+            })\n+            this.datasets = datasets;\n+            this.loading = false;\n+            this.service.stopSpinner(this.spinnerId);\n+            return;\n+            this.datasets = datasets;\n+            this.loading = false;\n+            this.service.stopSpinner(this.spinnerId);\n+            return;\n+\n+\n+        });\n+\n+    }\n+\n+    protected getChannelAddresses(): Promise<ChannelAddress[]> {\n+        return new Promise((resolve) => {\n+            let result: ChannelAddress[] = [\n+                new ChannelAddress('_sum', 'GridActivePower'),\n+                new ChannelAddress('_sum', 'ConsumptionActivePower')\n+            ];\n+            resolve(result);\n+        })\n+    }\n+\n+    protected setLabel() {\n+        let options = this.createDefaultChartOptions();\n+        options.scales.yAxes[0].scaleLabel.labelString = this.translate.instant('General.percentage');\n+\n+        options.tooltips.callbacks.label = function (tooltipItem: TooltipItem, data: Data) {\n+            let label = data.datasets[tooltipItem.datasetIndex].label;\n+            let value = tooltipItem.yLabel;\n+            return label + \": \" + formatNumber(value, 'de', '1.0-0') + \" %\"; // TODO get locale dynamically\n+        }\n+        options.scales.yAxes[0].ticks.max = 100;\n+        options.scales.yAxes[0].id = \"yAxis1\";\n+        options.scales.yAxes[0].scaleLabel.labelString = \"kW\";\n+\n+        this.options = options;\n+        options.scales.yAxes.push({\n+            id: 'yAxis2',\n+            position: 'right',\n+            scaleLabel: {\n+                display: true,\n+                labelString: '%',\n+                padding: -2,\n+                fontSize: 11\n+            },\n+            gridLines: {\n+                display: false\n+            },\n+            ticks: {\n+                beginAtZero: true,\n+                max: 100,\n+                padding: -5,\n+                stepSize: 5\n+            }\n+        })\n+        options.scales.yAxes.push({\n+            id: 'yAxis1',\n+            position: 'left',\n+            scaleLabel: {\n+                display: true,\n+                labelString: 'kw',\n+                padding: -2,\n+                fontSize: 11\n+            },\n+            gridLines: {\n+                display: false\n+            },\n+            ticks: {\n+                beginAtZero: true,\n+                padding: -5,\n+                stepSize: 100\n+            }\n+        })\n+        options.layout = {\n+            padding: {\n+                left: 2,\n+                right: 2,\n+                top: 0,\n+                bottom: 0\n+            }\n+        }\n+    }\n+\n+    public getChartHeight(): number {\n+        return window.innerHeight / 1.3;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "43524d67b7f891a34403e6281733c1505b1f6c5a",
    "filename": "ui/src/app/edge/history/lukas/lukaschartoverview/lukaschartoverview.component.html",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/lukas/lukaschartoverview/lukaschartoverview.component.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/lukas/lukaschartoverview/lukaschartoverview.component.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/history/lukas/lukaschartoverview/lukaschartoverview.component.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,29 @@\n+<ng-container *ngIf=\"edge\">\n+    <ion-header>\n+        <ion-toolbar color=\"primary\">\n+            <ion-title translate>General.lukas</ion-title>\n+            <ion-buttons slot=\"end\">\n+                <ion-button routerLink=\"/device/{{edge.id}}/history\">\n+                    <ion-icon name=\"close-outline\"></ion-icon>\n+                </ion-button>\n+            </ion-buttons>\n+        </ion-toolbar>\n+        <ion-toolbar color=\"primary\">\n+            <ion-buttons class=\"ion-justify-content-center\">\n+                <pickdate></pickdate>\n+            </ion-buttons>\n+        </ion-toolbar>\n+    </ion-header>\n+    <ion-content>\n+        <ion-card-content>\n+            <table class=\"full_width\">\n+                <tr>\n+                    <td style=\"width: 100%\" class=\"ion-padding\"></td>\n+                </tr>\n+            </table>\n+            <lukaschart [period]=\"service.historyPeriod\" baseChart [datasets]=\"datasets\" [labels]=\"labels\"\n+                [options]=\"options\" [colors]=\"colors\" chartType=\"line\">\n+            </lukaschart>\n+        </ion-card-content>\n+    </ion-content>\n+</ng-container>\n\\ No newline at end of file"
  },
  {
    "sha": "5a7b4c2fd4fe4555c5bdaba2a54d1850490ac479",
    "filename": "ui/src/app/edge/history/lukas/lukaschartoverview/lukaschartoverview.component.ts",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/lukas/lukaschartoverview/lukaschartoverview.component.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/lukas/lukaschartoverview/lukaschartoverview.component.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/history/lukas/lukaschartoverview/lukaschartoverview.component.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,27 @@\n+import { ActivatedRoute } from '@angular/router';\n+import { Component } from '@angular/core';\n+import { ModalController } from '@ionic/angular';\n+import { Service, Edge } from '../../../../shared/shared';\n+\n+@Component({\n+    selector: LukasChartOverviewComponent.SELECTOR,\n+    templateUrl: './lukaschartoverview.component.html'\n+})\n+export class LukasChartOverviewComponent {\n+\n+    private static readonly SELECTOR = \"lukas-chart-overview\";\n+\n+    public edge: Edge = null;\n+\n+    constructor(\n+        public service: Service,\n+        public modalCtrl: ModalController,\n+        private route: ActivatedRoute,\n+    ) { }\n+\n+    ngOnInit() {\n+        this.service.setCurrentComponent('', this.route).then(edge => {\n+            this.edge = edge;\n+        });\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "126a655f15ae75ff96d8d77574e26e7853f196bf",
    "filename": "ui/src/app/edge/history/lukas/widget.component.html",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/lukas/widget.component.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/lukas/widget.component.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/history/lukas/widget.component.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,26 @@\n+<ion-card *ngIf=\"edge\" button routerLink=\"/device/{{edge.id}}/history/lukaschart\">\n+    <ion-item lines=\"full\" color=\"dark\">\n+        <ion-avatar slot=\"start\">\n+            <img src=\"assets/img/autarchy.png\">\n+        </ion-avatar>\n+        <ion-label translate>General.lukas</ion-label>\n+    </ion-item>\n+    <ion-card-content>\n+        <table class=\"full_width\">\n+            <tr>\n+                <td style=\"width:100%\" *ngIf=\"lukasValue\">\n+                    <percentagebar [value]=\"lukasValue\">\n+                    </percentagebar>\n+                </td>\n+                <ng-template #noData>\n+                    <td style=\"width:35%\" class=\"align_right\">\n+                        Hier\n+                    </td>\n+                </ng-template>\n+            </tr>\n+        </table>\n+\n+\n+\n+    </ion-card-content>\n+</ion-card>\n\\ No newline at end of file"
  },
  {
    "sha": "bcafb40fd1b422730686de6e53e282d8b2b30882",
    "filename": "ui/src/app/edge/history/lukas/widget.component.ts",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/lukas/widget.component.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/history/lukas/widget.component.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/history/lukas/widget.component.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,67 @@\n+import { AbstractHistoryWidget } from '../abstracthistorywidget';\n+import { ActivatedRoute } from '@angular/router';\n+import { ChannelAddress, Edge, Service, EdgeConfig } from '../../../shared/shared';\n+import { Component, Input, OnChanges, OnInit } from '@angular/core';\n+import { CurrentData } from 'src/app/shared/edge/currentdata';\n+import { DefaultTypes } from 'src/app/shared/service/defaulttypes';\n+import { ModalController } from '@ionic/angular';\n+\n+@Component({\n+    selector: LukasWidgetComponent.SELECTOR,\n+    templateUrl: './widget.component.html'\n+})\n+export class LukasWidgetComponent extends AbstractHistoryWidget implements OnInit, OnChanges {\n+\n+    @Input() public period: DefaultTypes.HistoryPeriod;\n+\n+    private static readonly SELECTOR = \"lukasWidget\";\n+\n+    public lukasValue: number | null = null;\n+    public edge: Edge = null;\n+\n+    constructor(\n+        public service: Service,\n+        private route: ActivatedRoute,\n+        public modalCtrl: ModalController,\n+    ) {\n+        super(service);\n+    }\n+\n+    ngOnInit() {\n+        this.service.setCurrentComponent('', this.route).then(response => {\n+            this.edge = response;\n+        });\n+    }\n+\n+    ngOnDestroy() {\n+        this.unsubscribeWidgetRefresh();\n+    }\n+\n+    ngOnChanges() {\n+        this.updateValues();\n+    };\n+\n+    protected updateValues() {\n+        this.service.getConfig().then(config => {\n+            this.getChannelAddresses(this.edge, config).then(channels => {\n+                this.service.queryEnergy(this.period.from, this.period.to, channels).then(response => {\n+                    let result = response.result;\n+                    this.lukasValue = CurrentData.calculateAutarchy(result.data['_sum/GridBuyActiveEnergy'] / 1000, result.data['_sum/ConsumptionActiveEnergy'] / 1000);\n+                }).catch(() => {\n+                    this.lukasValue = null;\n+                })\n+            });\n+        })\n+    }\n+\n+    protected getChannelAddresses(edge: Edge, config: EdgeConfig): Promise<ChannelAddress[]> {\n+        return new Promise((resolve) => {\n+            let channels: ChannelAddress[] = [\n+                new ChannelAddress('_sum', 'GridBuyActiveEnergy'),\n+                new ChannelAddress('_sum', 'ConsumptionActiveEnergy'),\n+            ];\n+            resolve(channels);\n+        });\n+    }\n+}\n+"
  },
  {
    "sha": "792fafd48f0f1faf2d6f28fa66d13d82f32f50cd",
    "filename": "ui/src/app/edge/live/abstractWIdget.ts",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/abstractWIdget.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/abstractWIdget.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/abstractWIdget.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,41 @@\n+import { Component } from \"@angular/core\";\n+import { ActivatedRoute } from \"@angular/router\";\n+import { ModalController } from \"@ionic/angular\";\n+import { CurrentData } from \"src/app/shared/edge/currentdata\";\n+import { ChannelAddress, Edge, EdgeConfig, Service, Websocket } from \"src/app/shared/shared\";\n+\n+@Component({\n+    selector: AbstractWidget.SELECTOR,\n+    templateUrl: 'abstractWidget.html'\n+})\n+export abstract class AbstractWidget {\n+    static SELECTOR: string = 'abstractWidget';\n+    public edge: Edge = null;\n+    public config: EdgeConfig = null;\n+    public currentData = CurrentData;\n+\n+    constructor(\n+        public service: Service,\n+        private websocket: Websocket,\n+        private route: ActivatedRoute,\n+    ) { }\n+    /** getting the parameter from flatwidget for Subscribing.\n+     * \n+     * @param selector getting the selector of each Widget\n+     * @param channelAddress getting the channels of each Widget\n+    */\n+    public subscribeOnChannels(selector: string, channelAddress: ChannelAddress[]) {\n+        this.service.getConfig().then(config => {\n+            this.config = config;\n+            this.service.setCurrentComponent('', this.route).then(edge => {\n+                this.edge = edge;\n+                /** subscribing on the passed selector and channelAddress */\n+                this.edge.subscribeChannels(this.websocket, selector, channelAddress);\n+                console.log(\"AbstractWidget: Channeladresses for \" + selector + \"-Widget: \", channelAddress);\n+            })\n+        });\n+    }\n+}\n+\n+// this.service.setCurrentComponent('', this.route).then(edge => {\n+    // this.edge = edge;\n\\ No newline at end of file"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "ui/src/app/edge/live/abstractWidget.html",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/abstractWidget.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/abstractWidget.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/abstractWidget.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35"
  },
  {
    "sha": "bdef65f8aabffa5dd2a5cb27fb4dabec31d4862c",
    "filename": "ui/src/app/edge/live/autarchy/autarchy.component.html",
    "status": "modified",
    "additions": 6,
    "deletions": 20,
    "changes": 26,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/autarchy/autarchy.component.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/autarchy/autarchy.component.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/autarchy/autarchy.component.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -1,21 +1,7 @@\n-<ng-container *ngIf=\"service.currentEdge | async as edge\">\n-    <ng-container *ngIf=\"edge.currentData | async as currentData\">\n-        <ion-card button (click)=\"presentModal()\">\n-            <ion-item lines=\"full\" color=\"light\">\n-                <ion-avatar slot=\"start\">\n-                    <img src=\"assets/img/autarchy.png\">\n-                </ion-avatar>\n-                <ion-label translate>General.autarchy</ion-label>\n-            </ion-item>\n-            <ion-card-content *ngIf=\"currentData.summary as sum\">\n-                <table class=\"full_width\">\n-                    <tr>\n-                        <td style=\"width: 100%\">\n-                            <percentagebar [value]=\"sum.system.autarchy\"></percentagebar>\n-                        </td>\n-                    </tr>\n-                </table>\n-            </ion-card-content>\n-        </ion-card>\n-    </ng-container>\n+<ng-container *ngIf=\"edge\">\n+    <flat-widget selector=\"autarchy\" [title]=\"'AUTARCHY GENERIC'\" img=\"assets/img/autarchy.png\" button\n+        (click)=\"presentModal()\" [channelAdresses]=\"channelAdress\">\n+        <flat-widget-percentagebar [value]=\"percentageValue\">\n+        </flat-widget-percentagebar>\n+    </flat-widget>\n </ng-container>\n\\ No newline at end of file"
  },
  {
    "sha": "bfd9ce5cf4fafd42bd2e33f4c7966450dbf0f0b1",
    "filename": "ui/src/app/edge/live/autarchy/autarchy.component.ts",
    "status": "modified",
    "additions": 48,
    "deletions": 3,
    "changes": 51,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/autarchy/autarchy.component.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/autarchy/autarchy.component.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/autarchy/autarchy.component.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -1,8 +1,10 @@\n import { ActivatedRoute } from '@angular/router';\n import { AutarchyModalComponent } from './modal/modal.component';\n import { Component } from '@angular/core';\n-import { Edge, Service } from '../../../shared/shared';\n+import { ChannelAddress, Edge, Service, Websocket } from '../../../shared/shared';\n import { ModalController } from '@ionic/angular';\n+import { BehaviorSubject } from 'rxjs';\n+import { CurrentData } from 'src/app/shared/edge/currentdata';\n \n @Component({\n   selector: AutarchyComponent.SELECTOR,\n@@ -12,22 +14,65 @@ export class AutarchyComponent {\n \n   private static readonly SELECTOR = \"autarchy\";\n \n-  private edge: Edge = null;\n+  public edge: Edge = null;\n+  public percentageValue: number | null = null;\n+  public currentData = CurrentData;\n+  public channelAdress: ChannelAddress[];\n \n   constructor(\n     private route: ActivatedRoute,\n     public modalCtrl: ModalController,\n     public service: Service,\n+    private websocket: Websocket,\n   ) { }\n \n   ngOnInit() {\n-    this.service.setCurrentComponent('', this.route)\n+    this.service.setCurrentComponent('', this.route).then(edge => {\n+      this.edge = edge;\n+      this.edge.currentData.subscribe(currentData => {\n+        this.percentageValue = currentData.summary.system.autarchy;\n+      });\n+    })\n+\n+    // console.log(\"ChannelAddress in autarchy: \", this.channelAdress)\n+    // this.percentageValue = this.currentData.summary.system.autarchy;\n+\n   }\n \n+\n   async presentModal() {\n     const modal = await this.modalCtrl.create({\n       component: AutarchyModalComponent,\n+\n     });\n     return await modal.present();\n   }\n+\n+  //, ...inputChannels: ChannelAddress[]\n+  // insertSuggestion(currentData: BehaviorSubject<CurrentData>): string {\n+  //   console.log(\"##################################################################\");\n+  //   //console.log(\"Inputchannels: \", inputChannels)\n+  //   console.log(\"currentData\", currentData);\n+  //   console.log(\"currentData\", currentData);\n+  //   console.log(\"currentData\", currentData);\n+  //   console.log(\"currentData\", currentData.value);\n+  //   // let component = \"_sum\";\n+  //   //let channel = \"EssSoc\";\n+\n+  //   return \"This ist the result\";\n+\n+  //currentData.subscribe();\n+\n+  //console.log(\"a\"), currentData['_value'];\n+  //console.log(\"a\"), currentData['value'];\n+  //console.log(\"b\", currentData);\n+  //console.log(\"c\", currentData.value['channel']);\n+  //console.log(\"d\", currentData.value.summary.system);\n+  //console.log(\"e\", currentData[channel]);\n+  //console.log(\"f\", currentData[channel]);\n+  //console.log(\"g\", currentData[channel]);\n+\n+  // console.log(\"test\", currentData.channel[component + \"/\" + channel]);\n+  //console.log(\"test\", currentData.value.channel[component + \"/\" + channel]);\n+  //console.log(\"autarkie\", currentData['summary'].system.autarchy);\n }"
  },
  {
    "sha": "ccbcd9aa38512f84b2929d7477244ee681291bba",
    "filename": "ui/src/app/edge/live/consumption/consumption.component.ts",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/consumption/consumption.component.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/consumption/consumption.component.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/consumption/consumption.component.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -52,7 +52,7 @@ export class ConsumptionComponent {\n           )\n         }\n       })\n-      this.edge.subscribeChannels(this.websocket, ConsumptionComponent.SELECTOR, channels);\n+\n     });\n   }\n "
  },
  {
    "sha": "0e393d8ca0b42c140484c38b4417b4b5fa1d4286",
    "filename": "ui/src/app/edge/live/fixactivepower/fixactivepower.component.html",
    "status": "modified",
    "additions": 7,
    "deletions": 2,
    "changes": 9,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/fixactivepower/fixactivepower.component.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/fixactivepower/fixactivepower.component.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/fixactivepower/fixactivepower.component.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -1,4 +1,4 @@\n-<ion-card button (click)=\"presentModal()\" *ngIf=\"component != null\">\n+<!-- <ion-card button (click)=\"presentModal()\" *ngIf=\"component != null\">\n     <ion-item lines=\"full\" color=\"light\">\n         <ion-icon slot=\"start\" color=\"primary\" name=\"swap-vertical-outline\"></ion-icon>\n         <ion-label>{{ component.alias }}</ion-label>\n@@ -39,4 +39,9 @@\n             </tr>\n         </table>\n     </ion-card-content>\n-</ion-card>\n\\ No newline at end of file\n+</ion-card> -->\n+<ng-container *ngIf=\"component\">\n+    <flat-widget [icon]=\"{color: 'primary', name:'swap-vertical-outline'}\" [title]=\"component.alias\">\n+        <flat-widget-line title=\"state\" title_type=\"translate\"></flat-widget-line>\n+        <flat-widget-line [title]=\"chargeState\" title_type=\"translate\"></flat-widget-line>\n+    </flat-widget>\n\\ No newline at end of file"
  },
  {
    "sha": "456333249cd60783d28f1ec0f63d6130219e4e4e",
    "filename": "ui/src/app/edge/live/fixactivepower/fixactivepower.component.ts",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/fixactivepower/fixactivepower.component.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/fixactivepower/fixactivepower.component.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/fixactivepower/fixactivepower.component.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -3,6 +3,7 @@ import { FixActivePowerModalComponent } from './modal/modal.component';\n import { Component, Input } from '@angular/core';\n import { Edge, EdgeConfig, Service } from '../../../shared/shared';\n import { ModalController } from '@ionic/angular';\n+import { compileComponentFromMetadata } from '@angular/compiler';\n \n @Component({\n   selector: FixActivePowerComponent.SELECTOR,\n@@ -12,10 +13,13 @@ export class FixActivePowerComponent {\n \n   @Input() private componentId: string | null = null;\n \n+\n   private static readonly SELECTOR = \"fixactivepower\";\n \n   private edge: Edge = null;\n   public component: EdgeConfig.Component | null = null;\n+  public chargeState: string;\n+  public chargeStateValue: number;\n \n   constructor(\n     private route: ActivatedRoute,\n@@ -28,6 +32,13 @@ export class FixActivePowerComponent {\n       this.edge = edge;\n       this.service.getConfig().then(config => {\n         this.component = config.getComponent(this.componentId);\n+        if (this.component.properties.power >= 0) {\n+          this.chargeState = 'dischargePower';\n+          this.chargeStateValue = this.component.properties.power\n+        } else if (this.component.properties.power < 0) {\n+          this.chargeState = 'chargePower';\n+          this.chargeStateValue = this.component.properties.power * -1;\n+        }\n       })\n     })\n   }"
  },
  {
    "sha": "3eb03f7667698a3e2cf1733e45405bbba3fb9441",
    "filename": "ui/src/app/edge/live/fixdigitaloutput/fixdigitaloutput.component.html",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/fixdigitaloutput/fixdigitaloutput.component.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/fixdigitaloutput/fixdigitaloutput.component.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/fixdigitaloutput/fixdigitaloutput.component.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -1,4 +1,4 @@\n-<ion-card *ngIf=\"edge && component && outputChannel\" (click)=\"presentModal()\" style=\"cursor: pointer;\">\n+<!-- <ion-card *ngIf=\"edge && component && outputChannel\" (click)=\"presentModal()\" style=\"cursor: pointer;\">\n   <ion-progress-bar *ngIf=\"!(edge.currentData | async)\" type=\"indeterminate\"></ion-progress-bar>\n   <ng-container *ngIf=\"(edge.currentData | async)\">\n \n@@ -18,4 +18,10 @@\n       </table>\n     </ion-card-content>\n   </ng-container>\n-</ion-card>\n\\ No newline at end of file\n+</ion-card> -->\n+<ng-container *ngIf=\"edge && component && outputChannel\">\n+  <flat-widget (click)=\"presentModal()\" [channelAdresses]=\"channelAddress\" [title]=\"component.alias\"\n+    selector=\"fixdigitaloutput\" [icon]=\"{name: 'power-outline', color: 'primary', size: 'large'}\">\n+    <flat-widget-line title=\"Aktueller Status\" [title_value]=\"state\"></flat-widget-line>\n+  </flat-widget>\n+</ng-container>\n\\ No newline at end of file"
  },
  {
    "sha": "08550e57013d5e6f95670e73d13b4953eff5a35a",
    "filename": "ui/src/app/edge/live/fixdigitaloutput/fixdigitaloutput.component.ts",
    "status": "modified",
    "additions": 15,
    "deletions": 4,
    "changes": 19,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/fixdigitaloutput/fixdigitaloutput.component.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/fixdigitaloutput/fixdigitaloutput.component.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/fixdigitaloutput/fixdigitaloutput.component.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -3,6 +3,7 @@ import { ChannelAddress, Edge, EdgeConfig, Service, Websocket } from '../../../s\n import { Component, Input } from '@angular/core';\n import { FixDigitalOutputModalComponent } from './modal/modal.component';\n import { ModalController } from '@ionic/angular';\n+import { CurrentData } from 'src/app/shared/edge/currentdata';\n \n @Component({\n   selector: 'fixdigitaloutput',\n@@ -16,7 +17,9 @@ export class FixDigitalOutputComponent {\n \n   public edge: Edge = null;\n   public component: EdgeConfig.Component = null;\n-  public outputChannel: string = null;\n+  public outputChannel: string;\n+  public state: string;\n+  public channelAddress: ChannelAddress[] = [];\n \n   constructor(\n     private service: Service,\n@@ -32,9 +35,17 @@ export class FixDigitalOutputComponent {\n       this.service.getConfig().then(config => {\n         this.component = config.components[this.componentId];\n         this.outputChannel = this.component.properties['outputChannelAddress']\n-        edge.subscribeChannels(this.websocket, FixDigitalOutputComponent.SELECTOR + this.componentId, [\n-          ChannelAddress.fromString(this.outputChannel)\n-        ]);\n+        this.channelAddress.push(ChannelAddress.fromString(this.outputChannel));\n+        this.edge.currentData.subscribe(currentData => {\n+          let channel = currentData.channel[this.outputChannel];\n+          if (channel == null) {\n+            this.state = '-';\n+          } else if (channel == 1) {\n+            this.state = 'on'\n+          } else if (channel == 0) {\n+            this.state = 'off'\n+          }\n+        });\n       });\n     });\n   }"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "ui/src/app/edge/live/flat/flat-widget-header/flatwidget-header.html",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-header/flatwidget-header.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-header/flatwidget-header.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/flat/flat-widget-header/flatwidget-header.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35"
  },
  {
    "sha": "0fd012c6135e758d42c35db8e95fd60c192f6114",
    "filename": "ui/src/app/edge/live/flat/flat-widget-header/flatwidget-header.ts",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-header/flatwidget-header.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-header/flatwidget-header.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/flat/flat-widget-header/flatwidget-header.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,47 @@\n+import { Component, Input, TemplateRef, ViewChild, ViewContainerRef } from \"@angular/core\";\n+import { ActivatedRoute } from \"@angular/router\";\n+import { Edge, Service } from \"src/app/shared/shared\";\n+\n+\n+@Component({\n+    selector: 'flat-widget-header',\n+    template: ` \n+    <ng-template #header>\n+    <ion-item [color]=\"color\" lines=\"full\">\n+                <ion-avatar slot=\"start\" *ngIf=\"icon.includes('assets/img')\">\n+                    <img src={{icon}}>\n+                </ion-avatar>\n+               \n+                <ion-label translate>General.{{title}}</ion-label>\n+            </ion-item>\n+    </ng-template>\n+`,\n+})\n+\n+\n+export class FlatWidgetHeader {\n+\n+    @ViewChild('header', { static: true }) header;\n+\n+\n+    public edge: Edge = null\n+    @Input() title: string;\n+    @Input() icon: string;\n+    @Input() color: string;\n+\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private service: Service,\n+        private viewContainerRef: ViewContainerRef\n+    ) {\n+    }\n+    ngOnInit() {\n+        this.viewContainerRef.createEmbeddedView(this.header);\n+        this.service.setCurrentComponent('', this.route).then(edge => {\n+            this.edge = edge;\n+\n+        });\n+    }\n+\n+}"
  },
  {
    "sha": "f36f41d46251ee98bd302dabe7b4d7fee2222b69",
    "filename": "ui/src/app/edge/live/flat/flat-widget-line/flatwidget-line.html",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-line/flatwidget-line.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-line/flatwidget-line.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/flat/flat-widget-line/flatwidget-line.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,47 @@\n+<ng-template #content>\n+    <ng-container *ngIf=\"edge\">\n+        <table class=\"full_width\" *ngIf=\"edge.currentData | async as currentData\">\n+            <tr content>\n+\n+                <!-- Title of Parameter on the left side -->\n+                <td *ngIf=\"title && !title_type\" style=\"width:65%\">{{title}}</td>\n+                <td *ngIf=\"title && title_type == 'translate'\" style=\"width:65%\" translate>General.{{title}}</td>\n+                <td *ngIf=\"title && title_type == 'translateWithoutGeneral'\" style=\"width:65%\" translate>{{title}}</td>\n+\n+\n+                <!-- Title Values of the Parameter on the right side -->\n+                <td style=\"width:35%\" class=\"align_right\"\n+                    *ngIf=\"currentData.channel != null &&title && channel  &&(edge.currentData | async) as currentData\">\n+                    <ng-container *ngIf=\"channel!= null\">\n+                        {{ currentData.channel[channel] | unitvalue:'kW'}}\n+                    </ng-container>\n+                </td>\n+                <td style=\"width:35%\" class=\"align_right\" *ngIf=\"value != null &&title\">\n+                    {{ value | unitvalue:'kW'}}\n+                </td>\n+                <td style=\"width:35%\" class=\"align_right\" *ngIf=\"value != null && date &&currentData.channel &&title\">\n+                    {{ value | date: 'H:mm':'UTC'}}&nbsp;h\n+                </td>\n+                <td style=\"width:35%\" class=\"align_right\" *ngIf=\"title && !title_value_type && !value\" translate>\n+                    {{title_value}}\n+                </td>\n+                <td style=\"width:35%\" class=\"align_right\"\n+                    *ngIf=\"!title &&!title_value_type && !value && !title_value_type\" [innerHTML]=\"title_value\">\n+                </td>\n+                <td style=\"width:35%\" class=\"align_right\" *ngIf=\"title_value_type && !value && title_value == '-'\"\n+                    [innerHTML]=\"title_value\">\n+                </td>\n+                <td style=\"width:35%\" class=\"align_right\" *ngIf=\"title && title_value !='-' &&\n+                    title_value_type=='translate'\" translate>\n+                    General.{{title_value}}\n+                </td>\n+            </tr>\n+        </table>\n+    </ng-container>\n+</ng-template>\n+<ng-template #empty>\n+\n+    <td style=\" width:35%;\" class=\"align_right\">-</td>\n+\n+\n+</ng-template>\n\\ No newline at end of file"
  },
  {
    "sha": "24b1aaa6a0db627424e16445a576498d725717a4",
    "filename": "ui/src/app/edge/live/flat/flat-widget-line/flatwidget-line.ts",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-line/flatwidget-line.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-line/flatwidget-line.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/flat/flat-widget-line/flatwidget-line.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,47 @@\n+import { Component, Input, TemplateRef, ViewChild, ViewContainerRef } from \"@angular/core\";\n+import { ActivatedRoute } from \"@angular/router\";\n+import { Edge, EdgeConfig, Service, Websocket } from \"src/app/shared/shared\";\n+\n+@Component({\n+    selector: 'flat-widget-line',\n+    templateUrl: './flatwidget-line.html'\n+})\n+/** FlatWidgetLine is one line in FlatWidget. you can give him a title, a title_type, title_value, title_value_type, a channel and a value. */\n+export class FlatWidgetLine {\n+\n+    /** SELECTOR defines, how to call this Widget */\n+    static SELECTOR: string = 'flat-widget-line';\n+    /** ViewChild selects the ng-teplate with certain ID */\n+    @ViewChild('content', { static: true }) content;\n+    /** Title for parameter, displayed on the left side*/\n+    @Input() title: string;\n+    /** Title_Type specifies, if there is a title to translate */\n+    @Input() title_type: string;\n+    /** Title_value defines value of the parameter, displayed on the right */\n+    @Input() title_value: string;\n+    /** Title_value_type specifies, if there is a title_value to translate */\n+    @Input() title_value_type: string;\n+    /** Channel defines the channel, you need for this line */\n+    @Input() channel: string;\n+    /** value get used, if the channelAddress is not starting with currentData.channel, but your unit is kw. You have to hand over the whole path.  */\n+    @Input() value: string;\n+    /** date is set when unit is date */\n+    @Input() date: boolean;\n+\n+    public edge: Edge = null\n+    public essComponents: EdgeConfig.Component[] = null;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private service: Service,\n+        private viewContainerRef: ViewContainerRef,\n+\n+    ) {\n+    }\n+    ngOnInit() {\n+        this.viewContainerRef.createEmbeddedView(this.content);\n+        this.service.setCurrentComponent('', this.route).then(edge => {\n+            this.edge = edge;\n+        });\n+    }\n+}"
  },
  {
    "sha": "7c2b64665dc84172653e226d3f513ddf40b3282b",
    "filename": "ui/src/app/edge/live/flat/flat-widget-percentagebar/flatwidget-percentagebar.html",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-percentagebar/flatwidget-percentagebar.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-percentagebar/flatwidget-percentagebar.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/flat/flat-widget-percentagebar/flatwidget-percentagebar.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,6 @@\n+<svg width=\"100%\" height=\"20\">\n+    <rect width=\"100%\" rx=\"5\" ry=\"5\" height=\"20\" style=\"fill:#f4f4f4\" />\n+    <rect *ngIf=\"value\" x=\"1\" y=\"2\" rx=\"5\" ry=\"5\" attr.width=\"{{value}}%\" height=\"16\" style=\"fill:#2d8fab\" />\n+    <text x=\"50%\" y=\"58%\" dominant-baseline=\"middle\" text-anchor=\"middle\" style=\"font-weight: 500\">{{ value |\n+        unitvalue:'%' }}</text>\n+</svg>\n\\ No newline at end of file"
  },
  {
    "sha": "af574e8c62219cdc3d9e51c51d44f62050b22019",
    "filename": "ui/src/app/edge/live/flat/flat-widget-percentagebar/flatwidget-percentagebar.ts",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-percentagebar/flatwidget-percentagebar.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flat-widget-percentagebar/flatwidget-percentagebar.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/flat/flat-widget-percentagebar/flatwidget-percentagebar.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,20 @@\n+import { Component, Input } from \"@angular/core\";\n+\n+\n+@Component({\n+    selector: 'flat-widget-percentagebar',\n+    templateUrl: './flatwidget-percentagebar.html'\n+})\n+\n+\n+export class FlatWidgetPercentagebar {\n+\n+    /** value is the channel the percentagebar is reffering to */\n+    @Input() value: number;\n+\n+    constructor(\n+    ) {\n+    }\n+    ngOnInit() {\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "15af6d3eaa87c99bdb6b31cd019fee6014b5818b",
    "filename": "ui/src/app/edge/live/flat/flatwidget.component.html",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flatwidget.component.html",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flatwidget.component.html",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/flat/flatwidget.component.html?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,21 @@\n+<ion-card *ngIf=\"edge\">\n+    <ng-container>\n+        <ion-item color=\"light\" lines=\"full\">\n+            <ng-container *ngIf=\"img\">\n+                <ion-avatar slot=\"start\" *ngIf=\"!img.includes('<img')\">\n+                    <img [src]=\"img\">\n+                </ion-avatar>\n+                <ion-avatar slot=\"start\" *ngIf=\"img.includes('<img')\" [innerHTML]=\"img\">\n+                </ion-avatar>\n+            </ng-container>\n+            <ng-container *ngIf=\"icon\">\n+                <ion-icon slot=\"start\" [size]=\"icon.size\" [color]=\"icon.color\" [name]=\"icon.name\"></ion-icon>\n+            </ng-container>\n+            <ion-label *ngIf=\"!title_type\">{{title}}</ion-label>\n+            <ion-label *ngIf=\"title_type == 'translate'\" translate>General.{{title}}</ion-label>\n+        </ion-item>\n+        <ion-card-content>\n+            <ng-content></ng-content>\n+        </ion-card-content>\n+    </ng-container>\n+</ion-card>\n\\ No newline at end of file"
  },
  {
    "sha": "ec1a08b03e0db27196f62f7440e0a4a10857017a",
    "filename": "ui/src/app/edge/live/flat/flatwidget.component.ts",
    "status": "added",
    "additions": 81,
    "deletions": 0,
    "changes": 81,
    "blob_url": "https://github.com/OpenEMS/openems/blob/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flatwidget.component.ts",
    "raw_url": "https://github.com/OpenEMS/openems/raw/f8714b6ba969ba576c19a9daa41783b4cc88bd35/ui/src/app/edge/live/flat/flatwidget.component.ts",
    "contents_url": "https://api.github.com/repos/OpenEMS/openems/contents/ui/src/app/edge/live/flat/flatwidget.component.ts?ref=f8714b6ba969ba576c19a9daa41783b4cc88bd35",
    "patch": "@@ -0,0 +1,81 @@\n+import { ActivatedRoute } from '@angular/router';\n+import { ChannelAddress, Edge, EdgeConfig, Service, Websocket } from '../../../shared/shared';\n+import { Component, Input } from '@angular/core';\n+\n+import { ModalController } from '@ionic/angular';\n+import { AbstractWidget } from '../abstractWidget';\n+import { FixDigitalOutputModalComponent } from '../fixdigitaloutput/modal/modal.component';\n+\n+@Component({\n+  selector: FlatWidgetComponent.SELECTOR,\n+  templateUrl: './flatwidget.component.html'\n+})\n+export class FlatWidgetComponent extends AbstractWidget {\n+\n+  /** SELECTOR defines, how to call this Widget */\n+  static SELECTOR: string = 'flat-widget';\n+\n+  /** Title in Header */\n+  @Input() public title: string;\n+\n+  /** Image in Header */\n+  @Input() public img: string;\n+\n+  /** Icon in Header */\n+  @Input() public icon: Icon = null;\n+\n+  /** BackgroundColor of the Header (light or dark) */\n+  @Input() public color: string;\n+\n+  /** ChannelAdresses sends all the channels from the Widget to FlatWidget */\n+  @Input() public channelAdresses: ChannelAddress[];\n+\n+  /** Selector sends the Widget's selector to FlatWidget */\n+  @Input() public selector: string;\n+\n+  /** Title_Type specifies if there is a title to translate */\n+  @Input() public title_type: string;\n+\n+  public edge: Edge = null;\n+  public component: EdgeConfig.Component = null;\n+\n+  constructor(\n+    /** Constructor responsible for initializing the variables, that are needed for subscribe */\n+    public service: Service,\n+    websocket: Websocket,\n+    route: ActivatedRoute,\n+    private modalController: ModalController\n+  ) {\n+    /** super() calls the Parentclass AbstractWidget and sends him service websocket and route */\n+    super(service, websocket, route);\n+\n+  }\n+\n+  ngOnInit() {\n+\n+    this.edge = this.edge;\n+\n+    /** SubscribeOnChannels() sends collected selector`s and channelAdresses to AbstractWidget */\n+    this.subscribeOnChannels(this.selector, this.channelAdresses);\n+  }\n+  ngOnDestroy() {\n+    if (this.edge != null) {\n+    }\n+  }\n+  async presentModal() {\n+    const modal = await this.modalController.create({\n+      component: FixDigitalOutputModalComponent,\n+      componentProps: {\n+        component: this.component,\n+        edge: this.edge\n+      }\n+    });\n+    return await modal.present();\n+  }\n+}\n+\n+export type Icon = {\n+  color: string;\n+  size: string;\n+  name: string;\n+}"
  }
]
