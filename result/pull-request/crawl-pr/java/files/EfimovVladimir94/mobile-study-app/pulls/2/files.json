[
  {
    "sha": "717878df1e6729e2bc9fba4b87d91dc4856d93e7",
    "filename": "README.md",
    "status": "modified",
    "additions": 195,
    "deletions": 1,
    "changes": 196,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/README.md",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/README.md",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/README.md?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -1 +1,195 @@\n-# mobile-study-app\n\\ No newline at end of file\n+# mobile-study-app\n+Back-end RestFull приложение, предназначенное для программы обучения.  \n+Состоит из 3 CRUD с основными сущностями Event(мероприятие), Animal(фактически профиль пользователя),\n+User(пользователь).  \n+Image - картинка сохраняющаяся в БД в виде массива байтов. Реализует отношение 1 к 1 с \"Animal\".\n+ImageId связан с userId foreign key\n+Location - координаты точки на карте. Реализует отношение 1 к 1 с \"Event\". LocationId связан с eventId foreign key\n+В приложение интегрирована защита Spring Security и распространяется на все эндпойнты кроме публичных.\n+\n+Public endpoints:\n+- \"/v1/authorization\"\n+- \"/v1/recovery\"\n+- \"/v1/email\"\n+- \"/v1/registration\"\n+- \"/v1/saveEvent\"\n+- \"/v1/event/{id}\"\n+- \"/v1/eventList\"\n+- \"/v1/event\"\n+\n+## User\n+- POST \"/v1/registration\" - эндпойнт предназначенный для регистрации пользователя.  \n+  Пример запроса:\n+  email, password обязательные для заполнения\n+  http://localhost:8080/v1/registration  \n+  {  \n+  \"email\": \"test@mail.ru\",  \n+  \"password\": \"test@mail.ru\"  \n+  }  \n+  Response:  \n+  HTTPSTATUS 200 при успешной регистрации,  \n+  HTTPSTATUS 400 BadRequest в случае наличия пользователя в базе данных\n+\n+- POST \"/v1/recovery\" - эндпойнт предназначенный для восстановления пользователя (update password).  \n+  Пример запроса:\n+  email, password не могут быть пустыми\n+  http://localhost:8080/v1/recovery  \n+  {  \n+  \"email\": \"test@mail.ru\",  \n+  \"password\": \"test@mail.ru\"  \n+  }  \n+  Response:  \n+  HTTPSTATUS 200 при успешной замене пароля  \n+  HTTPSTATUS 400 BadRequest попытка смена пароля при отсутствующем в бд пользователе\n+\n+- GET \"/v1/email\" - эндпойнт предназначенный для проверки наличия email в бд.  \n+  Пример запроса:  \n+  http://localhost:8080/v1/email?email=test@mail.ru  \n+  Response:  \n+  HTTPSTATUS 200 \"Ура! E-mail свободен! Идем дальше...\" - доступно для записи  \n+  HTTPSTATUS 200 \"Такой e-mail занят :(\"  - данный email занят\n+\n+- POST \"/v1/authorization\" - эндпойнт предназначенный для авторизации пользователя.   \n+  Пример запроса:  \n+  http://localhost:8080/v1/email?email=test@mail.ru  \n+  {\n+  \"email\": \"test@mail.ru\",\n+  \"password\": \"test@mail.ru\"\n+  }\n+  Response:  \n+  HTTPSTATUS 200  \"authToken\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiO... \" - пользователь авторизован  \n+  HTTPSTATUS 401 \"Unauthorized\" - авториазация не удалась\n+\n+## Animal\n+Доступно только авторизаванному пользователю. (В headers добавлять авторизационный токен)\n+Например: \"Authorization\" : \"Bearer eyJhbGc.eyYyMH0.BPN18SLJYDy3xuQ7ONIPa65A ...\"\n+\n+- POST \"/v1/animal\" - эндпойнт предназначенный для сохранения профиля в бд  \n+  Пример запроса:\n+  name, city, age, breed, registrationDate обязательные для заполнения\n+  http://localhost:8080/v1/animal\n+  {\n+  \"name\": \"test1\",\n+  \"city\": \"Ufa\",\n+  \"age\": \"11\",\n+  \"breed\": \"pitbul\",\n+  \"description\": \"beautiful dog\",\n+  \"ownerName\": \"Katy\",\n+  \"gender\": \"man\",\n+  \"registrationDate\": \"2013-09-29T18:46:19Z\"\n+  }\n+  Response:   \n+  HTTPSTATUS 200 при успешном сохранении профиля,  \n+  HTTPSTATUS 400 BadRequest в случае некорректных данных\n+\n+- DELETE \"/v1/animal\" - эндпойнт предназначенный для удаления профиля\n+  Пример запроса:\n+  http://localhost:8080/v1/animal\n+  Response:   \n+  HTTPSTATUS 200 при успешном сохранении профиля,  \n+  HTTPSTATUS 400 BadRequest в случае некорректных данных\n+\n+- GET \"/v1/animal\" - эндпойнт предназначенный для удаления профиля\n+  Пример запроса:\n+  http://localhost:8080/v1/animal\n+  Response:\n+  HTTPSTATUS 200 \n+  {  \n+  \"id\": 1   \n+  \"name\": \"test1\"    \n+  \"city\": \"Ufa\"  \n+  \"age\": 11  \n+  \"breed\": \"pitbul\"  \n+  \"gender\": \"man\"  \n+  \"ownerName\": \"Katy\"  \n+  \"description\": \"\"  \n+  \"registrationDate\": \"2013-09-29\"  \n+  \"image\": null  \n+  }  \n+  HTTPSTATUS 400 BadRequest в случае некорректных данных\n+\n+## Image\n+\n+Доступно только авторизаванному пользователю. (В headers добавлять авторизационный токен)\n+Например: \"Authorization\" : \"Bearer eyJhbGc.eyYyMH0.BPN18SLJYDy3xuQ7ONIPa65A ...\"\n+\n+- POST \"/v1/animalImage\" - эндпойнт предназначенный для сохранения картинки профиля в бд. \n+  Так же необходимо приложить MultipartFile в RequestParam с именем \"file\"\n+  Пример запроса:\n+  http://localhost:8080/v1/animalImage\n+  Response:   \n+  HTTPSTATUS 200 при успешном сохранении профиля,  \n+  HTTPSTATUS 400 BadRequest в случае некорректных данных\n+\n+- DELETE \"/v1/animalImage\" - эндпойнт предназначенный для удаления картинки профиля\n+  Пример запроса:\n+  http://localhost:8080/v1/animalImage  \n+  Response:   \n+  HTTPSTATUS 200 при успешном сохранении профиля,  \n+  HTTPSTATUS 400 BadRequest в случае некорректных данных\n+\n+- GET \"/v1/animalImage\" - эндпойнт предназначенный для удаления профиля\n+  Пример запроса:\n+  http://localhost:8080/v1/animalImage  \n+  Response:  \n+  HTTPSTATUS 200 + картинка, при успешном запросе\n+  HTTPSTATUS 400 BadRequest в случае некорректных данных\n+  \n+## Event \n+- POST \"/v1/saveEvent\" - эндпойнт предназначенный для сохранения мериприятия в бд.\n+  Пример запроса:\n+  Так же необходимо приложить 2 параметра:   \n+  + MultipartFile в RequestParam с именем \"file\"\n+  + объект payload например:\n+    {\n+    \"name\": \"test1\"    \n+    \"eventType\": \"Выставка кошек\"  \n+    \"description\": \"description\"  \n+    \"phone\": \"+7(999)-000-00-00\"  \n+    \"location\": [  \n+    \"lat\":\"11.11111\",  \n+    \"lng\":\"11.11111\"  \n+    ]}  \n+\n+  Response:   \n+  HTTPSTATUS 200 при успешном сохранении профиля,  \n+  HTTPSTATUS 400 BadRequest в случае некорректных данных\n+\n+- DELETE \"/v1/event/{id}\" - эндпойнт предназначенный для удаления метки мероприятия\n+  Пример запроса:\n+  http://localhost:8080/v1/event/{id}\n+  Response:   \n+  HTTPSTATUS 200 при успешном сохранении профиля,\n+\n+- GET \"/v1/eventList\" - эндпойнт предназначенный для получения списка мероприятий\n+  Пример запроса:\n+  http://localhost:8080/v1/animal  \n+  Response:\n+  HTTPSTATUS 200  \n+  {  \n+  \"id\": 1   \n+  \"name\": \"test1\"    \n+  \"description\": \"description\"  \n+  \"eventType\": \"eventType\"  \n+  \"location\": [  \n+  \"lat\":\"11.11111\",  \n+  \"lng\":\"11.11111\"  \n+  ]}   \n+  }\n+\n+- GET \"/v1/event\" - эндпойнт предназначенный для получения мероприятия\n+  Пример запроса:\n+  http://localhost:8080/v1/event?id=65\n+  Response:\n+  HTTPSTATUS 200  \n+  {  \n+  \"id\": 1   \n+  \"name\": \"test1\"    \n+  \"description\": \"description\"  \n+  \"eventType\": \"eventType\"  \n+  \"image\": \"[bytes]\"   \n+  \"location\": [  \n+  \"lat\":\"11.11111\",  \n+  \"lng\":\"11.11111\"  \n+  ]}  \n+  HTTPSTATUS 400 BadRequest в случае некорректных данных\n\\ No newline at end of file"
  },
  {
    "sha": "af2b51ce27ca41d4f82c13e4ad22ff852d8340c8",
    "filename": "src/main/java/com/study/mobileback/Util/DataMapper.java",
    "status": "modified",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/Util/DataMapper.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/Util/DataMapper.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/Util/DataMapper.java?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -51,19 +51,6 @@ public static AnimalInfoDto animalToAnimalDto(Animal animal, Long id) {\n                 .build();\n     }\n \n-    public static List<AnimalInfoDto> listAnimalToListAnimalInfoDto(List<Animal> animal) {\n-        return animal.stream()\n-                .map(x -> AnimalInfoDto.builder()\n-                        .id(x.getId())\n-                        .name(x.getName())\n-                        .city(x.getCity())\n-                        .age(x.getAge())\n-                        .breed(x.getBreed())\n-                        .description(x.getDescription())\n-                        .build())\n-                .collect(Collectors.toList());\n-    }\n-\n     public static Event eventDtoToEvent(String payload, byte[] file) {\n        EventInfoDto eventInfoDto =  parseEventSaveRequest(payload);\n         Event newEvent = Event.builder()"
  },
  {
    "sha": "bad2172e2b62af11e92bcefa82b885615bad88cc",
    "filename": "src/main/java/com/study/mobileback/config/WebSecurityConfig.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/config/WebSecurityConfig.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/config/WebSecurityConfig.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/config/WebSecurityConfig.java?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -50,6 +50,8 @@ protected void configure(HttpSecurity httpSecurity) throws Exception {\n \t\thttpSecurity.csrf().disable()\n \t\t\t\t.authorizeRequests().antMatchers(\n \t\t\t\t        \"/v1/authorization\",\n+\t\t\t\t\"/v1/recovery\",\n+\t\t\t\t\"/v1/email\",\n \t\t\t\t\"/v1/registration\",\n \t\t\t\t\"/v1/saveEvent\",\n \t\t\t\t\"/v1/event/{id}\","
  },
  {
    "sha": "0fd1fd670eda09eb4b0588bd9c765c62046f93ff",
    "filename": "src/main/java/com/study/mobileback/controller/AnimalController.java",
    "status": "modified",
    "additions": 1,
    "deletions": 12,
    "changes": 13,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/controller/AnimalController.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/controller/AnimalController.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/controller/AnimalController.java?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -1,16 +1,13 @@\n package com.study.mobileback.controller;\n \n import com.study.mobileback.dto.AnimalDto;\n-import com.study.mobileback.dto.AnimalInfoDto;\n import com.study.mobileback.service.AnimalService;\n import lombok.AllArgsConstructor;\n import lombok.extern.slf4j.Slf4j;\n-import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.*;\n \n import javax.validation.Valid;\n-import java.util.List;\n \n @RestController\n @AllArgsConstructor\n@@ -31,14 +28,6 @@\n \n     @GetMapping(path = \"/v1/animal\")\n     public ResponseEntity<?> getAnimal() {\n-        AnimalInfoDto animal = animalService.getAnimal();\n-        return new ResponseEntity<>(animal, HttpStatus.OK);\n-    }\n-\n-    //не используется\n-    @GetMapping(path = \"/v1/animalList\")\n-    public ResponseEntity<?> getAnimalList(@RequestParam Long userId) {\n-        List<AnimalInfoDto> animalList = animalService.getAnimalList(userId);\n-        return new ResponseEntity<>(animalList, HttpStatus.OK);\n+        return animalService.getAnimal();\n     }\n }"
  },
  {
    "sha": "b4b6389a651f5d4c0b07a22a304a557f592c4c91",
    "filename": "src/main/java/com/study/mobileback/controller/EventController.java",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/controller/EventController.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/controller/EventController.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/controller/EventController.java?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -1,6 +1,5 @@\n package com.study.mobileback.controller;\n \n-import com.study.mobileback.dto.EventInfoDto;\n import com.study.mobileback.dto.EventMapMarkDto;\n import com.study.mobileback.service.EventService;\n import lombok.AllArgsConstructor;\n@@ -20,8 +19,7 @@\n     @PostMapping(path = \"/v1/saveEvent\")\n     public ResponseEntity<?> saveEvent(@RequestParam(\"event\") String eventInfoDto,\n                                        @RequestParam(\"file\") MultipartFile file) {\n-        eventService.saveEvent(eventInfoDto, file);\n-        return new ResponseEntity<>(\"Success\", HttpStatus.OK);\n+        return eventService.saveEvent(eventInfoDto, file);\n     }\n \n     @DeleteMapping(value = \"/v1/event/{id}\")\n@@ -38,7 +36,6 @@\n \n     @GetMapping(path = \"/v1/event\")\n     public ResponseEntity<?> getEvent(@RequestParam Long id) {\n-        EventInfoDto event = eventService.findEvent(id);\n-        return new ResponseEntity<>(event, HttpStatus.OK);\n+        return eventService.findEvent(id);\n     }\n }"
  },
  {
    "sha": "328c15710e7460094faf2a66fb4392852aea881f",
    "filename": "src/main/java/com/study/mobileback/controller/UserMainController.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/controller/UserMainController.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/controller/UserMainController.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/controller/UserMainController.java?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -4,7 +4,6 @@\n import com.study.mobileback.model.entity.User;\n import com.study.mobileback.service.UserRegistrationService;\n import lombok.AllArgsConstructor;\n-import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.*;\n \n@@ -23,8 +22,7 @@\n \n     @PostMapping(path = \"/v1/recovery\")\n     public ResponseEntity<?> recoveryPassword(@RequestBody UserDto userDto) {\n-        boolean recoveryResult = userRegistrationService.recovery(userDto);\n-        return new ResponseEntity<>(recoveryResult, HttpStatus.OK);\n+        return userRegistrationService.recovery(userDto);\n     }\n \n     @GetMapping(path = \"/v1/email\")"
  },
  {
    "sha": "d1f4bb2883083ffd40d1970ac82a06a288c9a1a6",
    "filename": "src/main/java/com/study/mobileback/dto/AnimalDto.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/dto/AnimalDto.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/dto/AnimalDto.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/dto/AnimalDto.java?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -8,7 +8,6 @@\n import javax.validation.constraints.NotBlank;\n import javax.validation.constraints.NotEmpty;\n import javax.validation.constraints.NotNull;\n-import java.util.Date;\n \n @Data\n @NoArgsConstructor\n@@ -29,8 +28,8 @@\n     private String breed;\n     private String gender;\n     private String ownerName;\n+    private String description;\n     @NotBlank\n     @NotEmpty\n-    private String description;\n     private String registrationDate;\n }"
  },
  {
    "sha": "b6d92904b5d8184ecab411718248d22565a30c3d",
    "filename": "src/main/java/com/study/mobileback/dto/EventDto.java",
    "status": "removed",
    "additions": 0,
    "deletions": 30,
    "changes": 30,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/7c1f779a7c63f50f22b9317b5f02f0674196f301/src/main/java/com/study/mobileback/dto/EventDto.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/7c1f779a7c63f50f22b9317b5f02f0674196f301/src/main/java/com/study/mobileback/dto/EventDto.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/dto/EventDto.java?ref=7c1f779a7c63f50f22b9317b5f02f0674196f301",
    "patch": "@@ -1,30 +0,0 @@\n-package com.study.mobileback.dto;\n-\n-import lombok.AllArgsConstructor;\n-import lombok.Builder;\n-import lombok.Data;\n-import lombok.NoArgsConstructor;\n-import org.hibernate.validator.constraints.Length;\n-import org.springframework.web.multipart.MultipartFile;\n-\n-import javax.validation.constraints.NotBlank;\n-import javax.validation.constraints.NotEmpty;\n-\n-@Data\n-@NoArgsConstructor\n-@AllArgsConstructor\n-@Builder\n-public class EventDto {\n-\n-    private Long id;\n-    @NotBlank\n-    @NotEmpty\n-    private String name;\n-    @NotBlank\n-    @NotEmpty\n-    private String eventType;\n-    @Length(max = 255, message = \"Описание не может превышать более 255 символов\")\n-    private String description;\n-    private LocationDto location;\n-    private byte[] image;\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "e560773bc1c3be144163504888e4120a0964cf49",
    "filename": "src/main/java/com/study/mobileback/repository/AnimalRepository.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/repository/AnimalRepository.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/repository/AnimalRepository.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/repository/AnimalRepository.java?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -10,8 +10,6 @@\n \n public interface AnimalRepository extends JpaRepository<Animal, Long> {\n \n-    List<Animal> findByUserId(Long userId);\n-\n     @Transactional\n     @Modifying(clearAutomatically = true)\n     @Query(\"update Animal a set a.name = :name, a.city = :city, a.age = :age, a.breed = :breed, a.description = :description where a.id = :id\")"
  },
  {
    "sha": "e1b0b2316bc3d21d627c7a91a77686577c3a464c",
    "filename": "src/main/java/com/study/mobileback/service/AnimalService.java",
    "status": "modified",
    "additions": 6,
    "deletions": 7,
    "changes": 13,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/service/AnimalService.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/service/AnimalService.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/service/AnimalService.java?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -94,10 +94,14 @@\n         return new ResponseEntity<>(\"Failure\", HttpStatus.BAD_REQUEST);\n     }\n \n-    public AnimalInfoDto getAnimal() {\n+    public ResponseEntity<?> getAnimal() {\n         User authorizationUser = getAuthorizationUser();\n         Animal existAnimal = getExistAnimal(authorizationUser.getId());\n-        return animalToAnimalDto(existAnimal, authorizationUser.getId());\n+        if (existAnimal == null) {\n+            return new ResponseEntity<>(\"Failure\", HttpStatus.BAD_REQUEST);\n+        }\n+        AnimalInfoDto animalInfoDto = animalToAnimalDto(existAnimal, authorizationUser.getId());\n+        return new ResponseEntity<>(animalInfoDto, HttpStatus.OK);\n     }\n \n     public ResponseEntity<?> getImage() {\n@@ -114,11 +118,6 @@ public Animal getExistAnimal(Long id) {\n         return exist.orElse(null);\n     }\n \n-    public List<AnimalInfoDto> getAnimalList(Long userId) {\n-        List<Animal> exist = animalRepository.findByUserId(userId);\n-        return listAnimalToListAnimalInfoDto(exist);\n-    }\n-\n     private User getAuthorizationUser() {\n         org.springframework.security.core.userdetails.User principal =\n                 (org.springframework.security.core.userdetails.User)"
  },
  {
    "sha": "2f1170dcf6334e0426e35eb977045161ea5c40d1",
    "filename": "src/main/java/com/study/mobileback/service/EventService.java",
    "status": "modified",
    "additions": 13,
    "deletions": 5,
    "changes": 18,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/service/EventService.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/service/EventService.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/service/EventService.java?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -1,21 +1,23 @@\n package com.study.mobileback.service;\n \n import com.study.mobileback.Util.DataMapper;\n-import com.study.mobileback.dto.EventDto;\n import com.study.mobileback.dto.EventInfoDto;\n import com.study.mobileback.dto.EventMapMarkDto;\n import com.study.mobileback.model.entity.Event;\n import com.study.mobileback.repository.EventRepository;\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n import org.springframework.stereotype.Service;\n import org.springframework.web.multipart.MultipartFile;\n \n import java.io.IOException;\n import java.util.List;\n import java.util.Optional;\n \n-import static com.study.mobileback.Util.DataMapper.*;\n+import static com.study.mobileback.Util.DataMapper.eventDtoToEvent;\n+import static com.study.mobileback.Util.DataMapper.listEventToListEventDto;\n \n @Service\n @Slf4j\n@@ -24,15 +26,17 @@\n     @Autowired\n     private EventRepository repository;\n \n-    public void saveEvent(String dto, MultipartFile file) {\n+    public ResponseEntity<?> saveEvent(String dto, MultipartFile file) {\n         byte[] bytes = new byte[0];\n         try {\n             bytes = file.getBytes();\n             Event event = eventDtoToEvent(dto, bytes);\n             repository.save(event);\n+            return new ResponseEntity<>(\"Success\", HttpStatus.OK);\n         } catch (IOException e) {\n             log.error(\"save event failure \");\n             e.printStackTrace();\n+            return new ResponseEntity<>(\"Failure\", HttpStatus.OK);\n         }\n     }\n \n@@ -45,8 +49,12 @@ public void deleteEvent(Long id) {\n         return listEventToListEventDto(events);\n     }\n \n-    public EventInfoDto findEvent(Long id) {\n+    public ResponseEntity<?> findEvent(Long id) {\n         Optional<Event> event = repository.findById(id);\n-        return event.map(DataMapper::eventToEventDto).orElse(null);\n+        if(event.isPresent()){\n+            EventInfoDto eventInfoDto = event.map(DataMapper::eventToEventDto).orElse(null);\n+            return new ResponseEntity<>(eventInfoDto, HttpStatus.OK);\n+        }\n+        return new ResponseEntity<>(\"Failure\", HttpStatus.OK);\n     }\n }"
  },
  {
    "sha": "06435365f71838d0d3d9fe453f2e8413fac1073a",
    "filename": "src/main/java/com/study/mobileback/service/UserRegistrationService.java",
    "status": "modified",
    "additions": 6,
    "deletions": 10,
    "changes": 16,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/service/UserRegistrationService.java",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/java/com/study/mobileback/service/UserRegistrationService.java",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/java/com/study/mobileback/service/UserRegistrationService.java?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -1,13 +1,10 @@\n package com.study.mobileback.service;\n \n-\n-import com.study.mobileback.Util.PasswordUtils;\n import com.study.mobileback.dto.UserDto;\n import com.study.mobileback.model.entity.User;\n import com.study.mobileback.repository.UserRepository;\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n import org.springframework.security.crypto.password.PasswordEncoder;\n@@ -26,7 +23,7 @@\n     @Autowired\n     private PasswordEncoder bcryptEncoder;\n \n-    public ResponseEntity registration(UserDto dto) {\n+    public ResponseEntity<?> registration(UserDto dto) {\n \n         User user = userDtoToUser(dto);\n         User existUser = getExistUser(dto.getEmail());\n@@ -36,27 +33,26 @@ public ResponseEntity registration(UserDto dto) {\n             newUser.setPassword(bcryptEncoder.encode(dto.getPassword()));\n             log.info(\"User id: {} save success\", newUser.getId());\n             repository.save(newUser);\n-            return new ResponseEntity(HttpStatus.OK);\n+            return new ResponseEntity<>(\"Success\", HttpStatus.OK);\n         }\n         log.info(\"User id: {} save failure.\", user.getId());\n-        return new ResponseEntity(HttpStatus.BAD_REQUEST);\n+        return new ResponseEntity<>(\"Failure\", HttpStatus.BAD_REQUEST);\n     }\n \n-    public boolean recovery(UserDto userDto) {\n+    public ResponseEntity<?> recovery(UserDto userDto) {\n         User existUser = getExistUser(userDto.getEmail());\n         if (existUser != null) {\n             User user = userDtoToUser(userDto);\n             repository.update(user.getEmail(), bcryptEncoder.encode(user.getPassword()));\n             log.info(\"User id: {} recovery success\", existUser.getId());\n-            return true;\n+            return new ResponseEntity<>(\"Success\", HttpStatus.OK);\n         }\n         log.info(\"User doesn't exist\");\n-        return false;\n+        return new ResponseEntity<>(\"Failure\", HttpStatus.BAD_REQUEST);\n     }\n \n     public User getExistUser(String email) {\n         Optional<User> exist = repository.findByEmail(email);\n         return exist.orElse(null);\n     }\n-\n }"
  },
  {
    "sha": "a02eaff5a4de304214256a0c4ab412a5b0f67cad",
    "filename": "src/main/resources/application.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/EfimovVladimir94/mobile-study-app/blob/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/resources/application.properties",
    "raw_url": "https://github.com/EfimovVladimir94/mobile-study-app/raw/ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/EfimovVladimir94/mobile-study-app/contents/src/main/resources/application.properties?ref=ac0e78d5e5d272aab2382f8f896c9d3036bb7ba5",
    "patch": "@@ -11,3 +11,4 @@ spring.jpa.show-sql=true\n jwt.secret.key=wZOAmOsv2Q7oL66FKwKzb7U2t4IZCQ\n #JWT time expire im millis\n jwt.time.expire=18000\n+server.port=8081"
  }
]
