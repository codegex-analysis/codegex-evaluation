[
  {
    "sha": "d743f21fa0246472b18dbef06fa3c3ac9d8398f5",
    "filename": "src/main/java/com/plaid/client/response/LiabilitiesGetResponse.java",
    "status": "modified",
    "additions": 228,
    "deletions": 76,
    "changes": 304,
    "blob_url": "https://github.com/plaid/plaid-java/blob/a467b7edcea4e0a17b0038baa09ab15f5dce03ab/src/main/java/com/plaid/client/response/LiabilitiesGetResponse.java",
    "raw_url": "https://github.com/plaid/plaid-java/raw/a467b7edcea4e0a17b0038baa09ab15f5dce03ab/src/main/java/com/plaid/client/response/LiabilitiesGetResponse.java",
    "contents_url": "https://api.github.com/repos/plaid/plaid-java/contents/src/main/java/com/plaid/client/response/LiabilitiesGetResponse.java?ref=a467b7edcea4e0a17b0038baa09ab15f5dce03ab",
    "patch": "@@ -20,15 +20,240 @@ public Liabilities getLiabilities() {\n   }\n \n   public static class Liabilities {\n-    private List<StudentLoanLiability> student;\n     private List<CreditCardLiability> credit;\n+    private List<StudentLoanLiability> student;\n+    private  List<MortgageLiability> mortgage;\n+\n+    public List<CreditCardLiability> getCredit() {\n+      return credit;\n+    }\n \n     public List<StudentLoanLiability> getStudent() {\n       return student;\n     }\n \n-    public List<CreditCardLiability> getCredit() {\n-      return credit;\n+    public List<MortgageLiability> getMortgage() {\n+      return mortgage;\n+    }\n+  }\n+\n+  // CreditCardLiability contains credit card liability data.\n+  public static class CreditCardLiability {\n+    private List<Apr> aprs;\n+    private String accountId;\n+    private Boolean isOverdue;\n+    private Double lastPaymentAmount;\n+    private String lastPaymentDate;\n+    private Double lastStatementBalance;\n+    private String lastStatementIssueDate;\n+    private Double minimumPaymentAmount;\n+    private String nextPaymentDueDate;\n+\n+    public List<Apr> getAprs() {\n+      return aprs;\n+    }\n+\n+    public String getAccountId() {\n+      return accountId;\n+    }\n+\n+    public Boolean getIsOverdue() {\n+      return isOverdue;\n+    }\n+\n+    public Double getLastPaymentAmount() {\n+      return lastPaymentAmount;\n+    }\n+\n+    public String getLastPaymentDate() {\n+      return lastPaymentDate;\n+    }\n+\n+    public Double getLastStatementBalance() {\n+      return lastStatementBalance;\n+    }\n+\n+    public String getLastStatementIssueDate() {\n+      return lastStatementIssueDate;\n+    }\n+\n+    public Double getMinimumPaymentAmount() {\n+      return minimumPaymentAmount;\n+    }\n+\n+    public String getNextPaymentDueDate() {\n+      return nextPaymentDueDate;\n+    }\n+  }\n+\n+  // Apr contains APR data related to credit card liability.\n+  public static class Apr {\n+    private Double aprPercentage;\n+    private String aprType;\n+    private Double balanceSubjectToApr;\n+    private Double interestChargeAmount;\n+\n+    public Double getAprPercentage() {\n+      return aprPercentage;\n+    }\n+\n+    public String getAprType() {\n+      return aprType;\n+    }\n+\n+    public Double getBalanceSubjectToApr() {\n+      return balanceSubjectToApr;\n+    }\n+\n+    public Double getInterestChargeAmount() {\n+      return interestChargeAmount;\n+    }\n+  }\n+\n+  // MortgageLiability contains mortgage liability data.\n+  public static class MortgageLiability {\n+    private String accountId;\n+    private String accountNumber;\n+    private Double currentLateFee;\n+    private Double escrowBalance;\n+    private Boolean hasPmi;\n+    private Boolean hasPrepaymentPenalty;\n+    private InterestRate interestRate;\n+    private Double lastPaymentAmount;\n+    private String lastPaymentDate;\n+    private String loanTypeDescription;\n+    private String loanTerm;\n+    private String maturityDate;\n+    private Double nextMonthlyPayment;\n+    private String nextPaymentDueDate;\n+    private String originationDate;\n+    private Double originationPrincipalAmount;\n+    private Double pastDueAmount;\n+    private PropertyAddress propertyAddress;\n+    private Double ytdInterestPaid;\n+    private Double ytdPrincipalPaid;\n+\n+    public String getAccountId() {\n+      return accountId;\n+    }\n+\n+    public String getAccountNumber() {\n+      return accountNumber;\n+    }\n+\n+    public Double getCurrentLateFee() {\n+      return currentLateFee;\n+    }\n+\n+    public Double getEscrowBalance() {\n+      return escrowBalance;\n+    }\n+\n+    public Boolean getHasPmi() {\n+      return hasPmi;\n+    }\n+\n+    public Boolean getHasPrepaymentPenalty() {\n+      return hasPrepaymentPenalty;\n+    }\n+\n+    public InterestRate getInterestRate() {\n+      return interestRate;\n+    }\n+\n+    public Double getLastPaymentAmount() {\n+      return lastPaymentAmount;\n+    }\n+\n+    public String getLastPaymentDate() {\n+      return lastPaymentDate;\n+    }\n+\n+    public String getLoanTypeDescription() {\n+      return loanTypeDescription;\n+    }\n+\n+    public String getLoanTerm() {\n+      return loanTerm;\n+    }\n+\n+    public String getMaturityDate() {\n+      return maturityDate;\n+    }\n+\n+    public Double getNextMonthlyPayment() {\n+      return nextMonthlyPayment;\n+    }\n+\n+    public String getNextPaymentDueDate() {\n+      return nextPaymentDueDate;\n+    }\n+\n+    public String getOriginationDate() {\n+      return originationDate;\n+    }\n+\n+    public Double getOriginationPrincipalAmount() {\n+      return originationPrincipalAmount;\n+    }\n+\n+    public Double getPastDueAmount() {\n+      return pastDueAmount;\n+    }\n+\n+    public PropertyAddress getPropertyAddress() {\n+      return propertyAddress;\n+    }\n+\n+    public Double getYtdInterestPaid() {\n+      return ytdInterestPaid;\n+    }\n+\n+    public Double getYtdPrincipalPaid() {\n+      return ytdPrincipalPaid;\n+    }\n+  }\n+\n+  // InterestRate contains interest data related to mortgage liability.\n+  public static class InterestRate {\n+    private Double percentage;\n+    private String type;\n+\n+    public Double getPercentage() {\n+      return percentage;\n+    }\n+\n+    public String getType() {\n+      return type;\n+    }\n+  }\n+\n+  // PropertyAddress contains the address associated to mortgage liability.\n+  public static class PropertyAddress {\n+    private String city;\n+    private String country;\n+    private String postalCode;\n+    private String region;\n+    private String street;\n+\n+    public String getCity() {\n+      return city;\n+    }\n+\n+    public String getCountry() {\n+      return country;\n+    }\n+\n+    public String getPostalCode() {\n+      return postalCode;\n+    }\n+\n+    public String getRegion() {\n+      return region;\n+    }\n+\n+    public String getStreet() {\n+      return street;\n     }\n   }\n \n@@ -238,77 +463,4 @@ public String getDescription() {\n       return description;\n     }\n   }\n-\n-  // CreditCardLiability contains credit card liability data.\n-  public static class CreditCardLiability {\n-    private List<Apr> aprs;\n-    private String accountId;\n-    private Boolean isOverdue;\n-    private Double lastPaymentAmount;\n-    private String lastPaymentDate;\n-    private Double lastStatementBalance;\n-    private String lastStatementIssueDate;\n-    private Double minimumPaymentAmount;\n-    private String nextPaymentDueDate;\n-\n-    public List<Apr> getAprs() {\n-      return aprs;\n-    }\n-\n-    public String getAccountId() {\n-      return accountId;\n-    }\n-\n-    public Boolean getIsOverdue() {\n-      return isOverdue;\n-    }\n-\n-    public Double getLastPaymentAmount() {\n-      return lastPaymentAmount;\n-    }\n-\n-    public String getLastPaymentDate() {\n-      return lastPaymentDate;\n-    }\n-\n-    public Double getLastStatementBalance() {\n-      return lastStatementBalance;\n-    }\n-\n-    public String getLastStatementIssueDate() {\n-      return lastStatementIssueDate;\n-    }\n-\n-    public Double getMinimumPaymentAmount() {\n-      return minimumPaymentAmount;\n-    }\n-\n-    public String getNextPaymentDueDate() {\n-      return nextPaymentDueDate;\n-    }\n-  }\n-\n-  // Apr contains APR data related to credit card liability.\n-  public static class Apr {\n-    private Double aprPercentage;\n-    private String aprType;\n-    private Double balanceSubjectToApr;\n-    private Double interestChargeAmount;\n-\n-    public Double getAprPercentage() {\n-      return aprPercentage;\n-    }\n-\n-    public String getAprType() {\n-      return aprType;\n-    }\n-\n-    public Double getBalanceSubjectToApr() {\n-      return balanceSubjectToApr;\n-    }\n-\n-    public Double getInterestChargeAmount() {\n-      return interestChargeAmount;\n-    }\n-  }\n }"
  },
  {
    "sha": "218031903597a63ac67288258ba1fc21ee53fa6f",
    "filename": "src/test/java/com/plaid/client/integration/LiabilitiesGetTest.java",
    "status": "modified",
    "additions": 49,
    "deletions": 10,
    "changes": 59,
    "blob_url": "https://github.com/plaid/plaid-java/blob/a467b7edcea4e0a17b0038baa09ab15f5dce03ab/src/test/java/com/plaid/client/integration/LiabilitiesGetTest.java",
    "raw_url": "https://github.com/plaid/plaid-java/raw/a467b7edcea4e0a17b0038baa09ab15f5dce03ab/src/test/java/com/plaid/client/integration/LiabilitiesGetTest.java",
    "contents_url": "https://api.github.com/repos/plaid/plaid-java/contents/src/test/java/com/plaid/client/integration/LiabilitiesGetTest.java?ref=a467b7edcea4e0a17b0038baa09ab15f5dce03ab",
    "patch": "@@ -27,11 +27,50 @@ protected String setupItemInstitutionId() {\n     return TARTAN_BANK_INSTITUTION_ID;\n   }\n \n+  @Test\n+  public  void testLiabilitiesMortgageGetSuccess() throws Exception {\n+    Response<LiabilitiesGetResponse> response = client().service().liabilitiesGet(\n+            new LiabilitiesGetRequest(getItemPublicTokenExchangeResponse().getAccessToken()))\n+            .execute();\n+\n+    assertSuccessResponse(response);\n+\n+    // item should be the same one we created\n+    assertItemEquals(getItem(), response.body().getItem());\n+\n+    // sandbox should return expected mortgage liabilities\n+    LiabilitiesGetResponse.Liabilities liabilities = response.body().getLiabilities();\n+    List<LiabilitiesGetResponse.MortgageLiability> mortgages = liabilities.getMortgage();\n+    assertTrue(mortgages.size() > 0);\n+    for (LiabilitiesGetResponse.MortgageLiability mortgage : mortgages) {\n+      assertNotNull(mortgage.getAccountId());\n+      assertNotNull(mortgage.getAccountNumber());\n+      assertNotNull(mortgage.getCurrentLateFee());\n+      assertNotNull(mortgage.getEscrowBalance());\n+      assertNotNull(mortgage.getHasPmi());\n+      assertNotNull(mortgage.getHasPrepaymentPenalty());\n+      assertNotNull(mortgage.getInterestRate());\n+      assertNotNull(mortgage.getLastPaymentAmount());\n+      assertNotNull(mortgage.getLastPaymentDate());\n+      assertNotNull(mortgage.getLoanTypeDescription());\n+      assertNotNull(mortgage.getLoanTerm());\n+      assertNotNull(mortgage.getMaturityDate());\n+      assertNotNull(mortgage.getNextMonthlyPayment());\n+      assertNotNull(mortgage.getNextPaymentDueDate());\n+      assertNotNull(mortgage.getOriginationDate());\n+      assertNotNull(mortgage.getOriginationPrincipalAmount());\n+      assertNotNull(mortgage.getPastDueAmount());\n+      assertNotNull(mortgage.getPropertyAddress());\n+      assertNotNull(mortgage.getYtdInterestPaid());\n+      assertNotNull(mortgage.getYtdPrincipalPaid());\n+    }\n+  }\n+\n   @Test\n   public void testLiabilitiesStudentLoanGetSuccess() throws Exception {\n     Response<LiabilitiesGetResponse> response = client().service().liabilitiesGet(\n-      new LiabilitiesGetRequest(getItemPublicTokenExchangeResponse().getAccessToken()))\n-      .execute();\n+            new LiabilitiesGetRequest(getItemPublicTokenExchangeResponse().getAccessToken()))\n+            .execute();\n \n     assertSuccessResponse(response);\n \n@@ -86,8 +125,8 @@ public void testLiabilitiesStudentLoanGetSuccess() throws Exception {\n   @Test\n   public void testLiabilitiesCreditCardGetSuccess() throws Exception {\n     Response<LiabilitiesGetResponse> response = client().service().liabilitiesGet(\n-      new LiabilitiesGetRequest(getItemPublicTokenExchangeResponse().getAccessToken()))\n-      .execute();\n+            new LiabilitiesGetRequest(getItemPublicTokenExchangeResponse().getAccessToken()))\n+            .execute();\n \n     assertSuccessResponse(response);\n \n@@ -122,8 +161,8 @@ public void testLiabilitiesCreditCardGetSuccess() throws Exception {\n   public void testLiabilitiesGetWithAccountIds() throws Exception {\n     // first call to get an account ID\n     Response<LiabilitiesGetResponse> response = client().service().liabilitiesGet(\n-      new LiabilitiesGetRequest(getItemPublicTokenExchangeResponse().getAccessToken()))\n-      .execute();\n+            new LiabilitiesGetRequest(getItemPublicTokenExchangeResponse().getAccessToken()))\n+            .execute();\n     assertSuccessResponse(response);\n     String accountId = null;\n     for (Account account : response.body().getAccounts()) {\n@@ -135,8 +174,8 @@ public void testLiabilitiesGetWithAccountIds() throws Exception {\n \n     // call under test\n     response = client().service().liabilitiesGet(\n-      new LiabilitiesGetRequest(getItemPublicTokenExchangeResponse().getAccessToken()).withAccountIds(Arrays.asList(accountId)))\n-      .execute();\n+            new LiabilitiesGetRequest(getItemPublicTokenExchangeResponse().getAccessToken()).withAccountIds(Arrays.asList(accountId)))\n+            .execute();\n     assertSuccessResponse(response);\n \n     // item should be the same one we created\n@@ -150,8 +189,8 @@ public void testLiabilitiesGetWithAccountIds() throws Exception {\n   @Test\n   public void testLiabilitiesGetInvalidAccessToken() throws Exception {\n     Response<LiabilitiesGetResponse> response = client().service().liabilitiesGet(\n-      new LiabilitiesGetRequest(\"notreal\"))\n-      .execute();\n+            new LiabilitiesGetRequest(\"notreal\"))\n+            .execute();\n     assertErrorResponse(response, ErrorResponse.ErrorType.INVALID_INPUT, \"INVALID_ACCESS_TOKEN\");\n   }\n "
  }
]
