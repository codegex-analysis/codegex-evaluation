[
  {
    "sha": "8160607bdc8b96fb1b04f94ce3d084a88758e8be",
    "filename": "src/ru/koryaking/eigthhomework/Authority.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/Authority.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/Authority.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/Authority.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.koryaking.eigthhomework;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"authorities\")\n+public class Authority {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @Column(name = \"name\")\n+    private String name;\n+\n+    public Authority(Long id, String name) {\n+        this.id = id;\n+        this.name = name;\n+    }\n+\n+    public Authority() {\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "08d73bb815aa53a593805874cd3ba684a87db5a5",
    "filename": "src/ru/koryaking/eigthhomework/Hw7Application.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/Hw7Application.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/Hw7Application.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/Hw7Application.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.koryaking.eigthhomework;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class Hw7Application {\n+\n+\tpublic static void main(String[] args) {\n+\t\tSpringApplication.run(Hw7Application.class, args);\n+\t}\n+\n+}"
  },
  {
    "sha": "fcdbcc6a6de6d1b38ca8c704b325ede637c15850",
    "filename": "src/ru/koryaking/eigthhomework/MainController.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/MainController.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/MainController.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/MainController.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,43 @@\n+package ru.koryaking.eigthhomework;\n+\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.GetMapping;\n+\n+import java.security.Principal;\n+\n+\n+@Controller\n+public class MainController {\n+\n+   @GetMapping(\"/\")\n+   public String main () {\n+       return \"index\";\n+   }\n+\n+   @GetMapping(\"/authenticated\")\n+    public String authenticatedPage (Principal principal) {\n+//       Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n+//       System.out.println(Thread.currentThread().getName());\n+//       String out = String.format(\"authenticated user: %s, password: %s\", principal.getName(),\"-\");\n+       return \"security\";\n+   }\n+\n+    @GetMapping(\"/authenticated/manager\")\n+    public String managerPage() {\n+        return \"manager\";\n+    }\n+\n+    @GetMapping(\"/authenticated/admin\")\n+    public String adminPage() {\n+        return \"admin\";\n+    }\n+\n+    @GetMapping(\"/authenticated/user\")\n+    public String userPage() {\n+        return \"user\";\n+    }\n+\n+\n+}"
  },
  {
    "sha": "88146a022e5989b905f0abbc1b7207a2d2f327c2",
    "filename": "src/ru/koryaking/eigthhomework/Role.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/Role.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/Role.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/Role.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,46 @@\n+package ru.koryaking.eigthhomework;\n+\n+import javax.persistence.*;\n+import java.util.Collection;\n+\n+@Entity\n+@Table(name = \"roles\")\n+public class Role {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @Column(name = \"name\")\n+    private String name;\n+\n+    @ManyToMany\n+    @JoinTable(name = \"roles_authorities\",\n+            joinColumns = @JoinColumn(name = \"role_id\"),\n+            inverseJoinColumns = @JoinColumn(name = \"authority_id\"))\n+    private Collection<Authority> authorities;\n+\n+    public Role(Long id, String name) {\n+        this.id = id;\n+        this.name = name;\n+    }\n+\n+    public Role() {\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"
  },
  {
    "sha": "a2380296321343af28d14ea5aa8b2f1b5d970d34",
    "filename": "src/ru/koryaking/eigthhomework/RoleRepository.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/RoleRepository.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/RoleRepository.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/RoleRepository.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,8 @@\n+package ru.koryaking.eigthhomework;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface RoleRepository extends JpaRepository<Role, Long> {\n+}"
  },
  {
    "sha": "b4d60b3beed1853aece5e682d1a31aa5247cef9e",
    "filename": "src/ru/koryaking/eigthhomework/SecurityConfig.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/SecurityConfig.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/SecurityConfig.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/SecurityConfig.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,49 @@\n+package ru.koryaking.eigthhomework;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.security.authentication.dao.DaoAuthenticationProvider;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.core.userdetails.UserDetailsService;\n+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n+\n+@EnableWebSecurity\n+public class SecurityConfig extends WebSecurityConfigurerAdapter {\n+\n+    private UserDetailsService userDetailsService;\n+\n+    @Autowired\n+    public void setUserDetailsService(UserDetailsService userDetailsService) {\n+        this.userDetailsService = userDetailsService;\n+    }\n+\n+    @Override\n+    protected void configure (HttpSecurity http) throws Exception {\n+        http.authorizeRequests()\n+                .antMatchers(\"/authenticated/**\").authenticated() // если хочет пройти по этому адресу, то не должен быть гостем\n+                .antMatchers(\"/admins/**\").hasAuthority(\"ADMIN\") // должен иметь роль АДМИНА\n+                .antMatchers(\"/manager/**\").hasAuthority(\"MANAGER\") // должен иметь роль АДМИНА\n+                .antMatchers(\"/user/**\").hasAuthority(\"USER\") // должен иметь роль АДМИНА\n+                .anyRequest().permitAll() //по всем остальным не указанным запросам гость может ходить\n+                .and()\n+                .httpBasic() // форма для ввода логина и пароля\n+                .and()\n+                .csrf().disable()\n+                .logout().logoutSuccessUrl(\"/\"); //юзер выходит, то попадает по этому адресу\n+    }\n+    // преобразует пароль из базы в кри\n+    @Bean\n+    public BCryptPasswordEncoder passwordEncoder() {\n+        return new BCryptPasswordEncoder();\n+    }\n+\n+    @Bean\n+    public DaoAuthenticationProvider daoAuthenticationProvider() {\n+        DaoAuthenticationProvider authenticationProvider = new DaoAuthenticationProvider();\n+        authenticationProvider.setPasswordEncoder(passwordEncoder());\n+        authenticationProvider.setUserDetailsService(userDetailsService);\n+        return authenticationProvider;\n+    }\n+}"
  },
  {
    "sha": "b05c89f52ba6ba8afe5f34a1270ee559c91b7807",
    "filename": "src/ru/koryaking/eigthhomework/Student.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/Student.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/Student.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/Student.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,50 @@\n+package ru.koryaking.eigthhomework;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table (name = \"students\")\n+public class Student {\n+    @Id\n+    @GeneratedValue (strategy = GenerationType.IDENTITY)\n+    @Column (name = \"id\")\n+    private Long id;\n+    @Column (name = \"name\")\n+    private String name;\n+    @Column (name = \"age\")\n+    private int age;\n+\n+    public Student() {\n+    }\n+\n+    public Student(Long id, String name, int age) {\n+        this.id = id;\n+        this.name = name;\n+        this.age = age;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public int getAge() {\n+        return age;\n+    }\n+\n+    public void setAge(int age) {\n+        this.age = age;\n+    }\n+\n+}"
  },
  {
    "sha": "e9760564819ad27b2bdc19a4702b11d9e18bd920",
    "filename": "src/ru/koryaking/eigthhomework/StudentNotFoundException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/StudentNotFoundException.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/StudentNotFoundException.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/StudentNotFoundException.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.koryaking.eigthhomework;\n+\n+public class StudentNotFoundException extends RuntimeException {\n+    public StudentNotFoundException(String message) {\n+        super(message);\n+    }\n+}"
  },
  {
    "sha": "efdedff82f9c85f58ca17e8bc52c8757905d5b05",
    "filename": "src/ru/koryaking/eigthhomework/StudentsController.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/StudentsController.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/StudentsController.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/StudentsController.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,47 @@\n+package ru.koryaking.eigthhomework;\n+\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.List;\n+\n+@Controller\n+@RequestMapping(\"/students\")\n+public class StudentsController {\n+    private StudentsService studentsService;\n+\n+    public StudentsController(StudentsService studentsService) {\n+        this.studentsService = studentsService;\n+    }\n+\n+    @GetMapping\n+    public String showAllStudents(Model model) {\n+        List<Student> students = studentsService.getAll();\n+        model.addAttribute(\"students\", students);\n+        return \"all_students\";\n+    }\n+\n+    @GetMapping(\"/add\")\n+    public String showAddForm() {\n+        return \"add_student_form\";\n+    }\n+\n+    @PostMapping(\"/add\")\n+    public String saveNewStudent(@ModelAttribute Student newStudent) {\n+        studentsService.saveOrUpdate(newStudent);\n+        return \"redirect:/students/\";\n+    }\n+\n+    @GetMapping (\"/edit/{id}\")\n+    public String showEditForm (@PathVariable Long id, Model model){\n+        model.addAttribute(\"student\", studentsService.findById(id));\n+        return \"edit_student_form\";\n+    }\n+\n+    @PostMapping (\"/edit\")\n+    public String modifyStudent (@ModelAttribute Student modifiedStudent) {\n+        studentsService.saveOrUpdate(modifiedStudent);\n+        return \"redirect:/students\";\n+    }\n+}"
  },
  {
    "sha": "85682b10ddd29bb116e8ac0cf71f6a5e0966361c",
    "filename": "src/ru/koryaking/eigthhomework/StudentsRepository.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/StudentsRepository.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/StudentsRepository.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/StudentsRepository.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,10 @@\n+package ru.koryaking.eigthhomework;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+//наследуемся от спрингового репозитория указываем ему с какой сущностью он работает и какой тип id у него\n+@Repository\n+public interface StudentsRepository extends JpaRepository <Student, Long>{\n+\n+}"
  },
  {
    "sha": "4256c31a9c979ae415a2dd6450c2fd404513812d",
    "filename": "src/ru/koryaking/eigthhomework/StudentsService.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/StudentsService.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/StudentsService.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/StudentsService.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,30 @@\n+package ru.koryaking.eigthhomework;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.List;\n+\n+@Service\n+public class StudentsService {\n+    private StudentsRepository studentsRepository;\n+\n+    @Autowired\n+    public void setStudentsRepository (StudentsRepository studentsRepository){\n+        this.studentsRepository = studentsRepository;\n+    }\n+\n+    // вызываем метод findAll у репозитория JPARepository\n+    public List<Student> getAll () {\n+        return studentsRepository.findAll();\n+    }\n+\n+    public Student saveOrUpdate (Student student){\n+        return studentsRepository.save(student);\n+    }\n+\n+    public Student findById (Long id) {\n+        return studentsRepository.findById(id).orElseThrow(()->new StudentNotFoundException(\"Can't find this id: \" + id));\n+    }\n+\n+}"
  },
  {
    "sha": "c2659a15e803b5b40fcb286a1a0aa37a7d74f818",
    "filename": "src/ru/koryaking/eigthhomework/User.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/User.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/User.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/User.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,72 @@\n+package ru.koryaking.eigthhomework;\n+\n+import javax.persistence.*;\n+import java.util.Collection;\n+\n+@Entity\n+@Table(name = \"users\")\n+public class User {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @Column(name = \"username\")\n+    private String username;\n+\n+    @Column(name = \"password\")\n+    private String password;\n+\n+    @Column(name = \"email\")\n+    private String email;\n+\n+    @ManyToMany\n+    @JoinTable(name = \"users_roles\",\n+            joinColumns = @JoinColumn(name = \"user_id\"),\n+            inverseJoinColumns = @JoinColumn(name = \"role_id\"))\n+    private Collection<Role> roles;\n+\n+\n+    public User() {\n+    }\n+\n+    public User(Long id, String username, String password, String email) {\n+        this.id = id;\n+        this.username = username;\n+        this.password = password;\n+        this.email = email;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getUsername() {\n+        return username;\n+    }\n+\n+    public void setUsername(String username) {\n+        this.username = username;\n+    }\n+\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+    public void setPassword(String password) {\n+        this.password = password;\n+    }\n+\n+    public String getEmail() {\n+        return email;\n+    }\n+\n+    public void setEmail(String email) {\n+        this.email = email;\n+    }\n+\n+}"
  },
  {
    "sha": "1a26253a884b44297ccf9d392f0162f11ed509e1",
    "filename": "src/ru/koryaking/eigthhomework/UserRepository.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/UserRepository.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/UserRepository.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/UserRepository.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,9 @@\n+package ru.koryaking.eigthhomework;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface UserRepository extends JpaRepository<User, Long> {\n+    User findByUsername(String username);\n+}"
  },
  {
    "sha": "dcef4c664897e339f021246da15862d66ed8b61d",
    "filename": "src/ru/koryaking/eigthhomework/UserService.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/UserService.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/eigthhomework/UserService.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/eigthhomework/UserService.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,44 @@\n+package ru.koryaking.eigthhomework;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.core.authority.SimpleGrantedAuthority;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.security.core.userdetails.UserDetailsService;\n+import org.springframework.security.core.userdetails.UsernameNotFoundException;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import java.util.Collection;\n+import java.util.stream.Collectors;\n+\n+@Service\n+public class UserService implements UserDetailsService {\n+    private UserRepository userRepository;\n+\n+    @Autowired\n+    public void setUserRepository(UserRepository userRepository) {\n+        this.userRepository = userRepository;\n+    }\n+\n+    public User findByUsername(String username) {\n+        return userRepository.findByUsername(username);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n+        User user = findByUsername(username);\n+        if (user == null) {\n+            throw new UsernameNotFoundException(String.format(\"User '%s' not found\", username));\n+        }\n+        return new org.springframework.security.core.userdetails.User(\n+                user.getUsername(),\n+                user.getPassword(),\n+                mapRolesToAuthorities(user.getRoles()));\n+    }\n+\n+    private Collection<? extends GrantedAuthority> mapRolesToAuthorities(Collection<Role> roles) {\n+        return roles.stream().map(role -> new SimpleGrantedAuthority(role.getName())).collect(Collectors.toList());\n+    }\n+}"
  },
  {
    "sha": "725cb869d07d2978c2f6f66749548c7b4ed00dc9",
    "filename": "src/ru/koryaking/sevenhomework/Student.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/Student.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/Student.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/sevenhomework/Student.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,50 @@\n+package ru.koryaking.demo;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table (name = \"students\")\n+public class Student {\n+    @Id\n+    @GeneratedValue (strategy = GenerationType.IDENTITY)\n+    @Column (name = \"id\")\n+    private Long id;\n+    @Column (name = \"name\")\n+    private String name;\n+    @Column (name = \"age\")\n+    private int age;\n+\n+    public Student() {\n+    }\n+\n+    public Student(Long id, String name, int age) {\n+        this.id = id;\n+        this.name = name;\n+        this.age = age;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public int getAge() {\n+        return age;\n+    }\n+\n+    public void setAge(int age) {\n+        this.age = age;\n+    }\n+\n+}"
  },
  {
    "sha": "b02b6c6185df5af7a026bcd3001c3495ddcb9a6c",
    "filename": "src/ru/koryaking/sevenhomework/StudentNotFoundException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/StudentNotFoundException.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/StudentNotFoundException.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/sevenhomework/StudentNotFoundException.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.koryaking.demo;\n+\n+public class StudentNotFoundException extends RuntimeException {\n+    public StudentNotFoundException(String message) {\n+        super(message);\n+    }\n+}"
  },
  {
    "sha": "ca32d495e856c597133387250f532b581f306fce",
    "filename": "src/ru/koryaking/sevenhomework/StudentsController.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/StudentsController.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/StudentsController.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/sevenhomework/StudentsController.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,49 @@\n+package ru.koryaking.demo;\n+\n+\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.*;\n+\n+// root: http://localhost:8189/app/students\n+\n+@Controller\n+@RequestMapping(\"/students\")\n+public class StudentsController {\n+\n+    private StudentsService studentsService;\n+\n+    @GetMapping\n+    public String getAllStudents(Model model) {\n+        model.addAttribute(\"students\", studentsService.findAll());\n+        return \"students\";\n+    }\n+\n+    @GetMapping(\"/{id}\")\n+    public String getStudentById(Model model, @PathVariable Long id) {\n+        model.addAttribute(\"student\", studentsService.findById(id).orElseThrow(() -> new StudentNotFoundException(\"Студент с таким id: \"+ id + \" не найден\")));\n+        return \"students\";\n+    }\n+\n+    @GetMapping(\"/add\")\n+    public String addStudent(Model model) {\n+        model.addAttribute(\"student\", new Student());\n+        return \"student\";\n+    }\n+\n+    @PostMapping(\"/save\")\n+    public String saveStudent(@ModelAttribute Student student) {\n+        studentsService.saveOrUpdate(student);\n+        return \"redirect:/student\";\n+    }\n+\n+    @GetMapping(\"/delete/{id}\")\n+    public String deleteStudent(@PathVariable Long id) {\n+        studentsService.deleteById(id);\n+        return \"redirect:/students\";\n+    }\n+\n+\n+\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "4f5348632c0e7af8d4a0c76344e7891ea111b66e",
    "filename": "src/ru/koryaking/sevenhomework/StudentsRepository.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/StudentsRepository.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/StudentsRepository.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/sevenhomework/StudentsRepository.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.koryaking.demo;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.JpaSpecificationExecutor;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.List;\n+\n+@Repository\n+public interface StudentsRepository extends JpaRepository<Student, Long> {\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "aafba6ddba52603a0883e59ddf4fa090eab42781",
    "filename": "src/ru/koryaking/sevenhomework/StudentsService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/StudentsService.java",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/StudentsService.java",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/sevenhomework/StudentsService.java?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,40 @@\n+package ru.koryaking.demo;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.PageRequest;\n+import org.springframework.data.jpa.domain.Specification;\n+import org.springframework.stereotype.Service;\n+import java.util.Optional;\n+import java.util.List;\n+\n+@Service\n+public class StudentsService {\n+\n+    private StudentsRepository studentsRepository;\n+\n+    @Autowired\n+    public void setStudentsRepository(StudentsRepository studentsRepository){\n+        this.studentsRepository = studentsRepository;\n+    }\n+\n+    public void saveOrUpdate(Student student) {\n+        studentsRepository.save(student);\n+    }\n+\n+    public Optional<Student> findById(Long id) {\n+        return studentsRepository.findById(id);\n+    }\n+\n+    public void deleteById(Long id) {\n+        studentsRepository.deleteById(id);\n+    }\n+\n+    public List<Student> findAll() {\n+        return studentsRepository.findAll();\n+    }\n+\n+\n+\n+\n+}"
  },
  {
    "sha": "e284c00d56d70a47266f26c51c203ff2cefc6029",
    "filename": "src/ru/koryaking/sevenhomework/V1__initialize.sql",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/V1__initialize.sql",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/V1__initialize.sql",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/sevenhomework/V1__initialize.sql?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,7 @@\n+drop table if exists students cascade;\n+create table students (id bigserial, name varchar(255), age int, primary key(id));\n+insert into students\n+(name, age) values\n+('Batman', 45),\n+('Superman', 35),\n+('Aquaman', 27);"
  },
  {
    "sha": "f7b377b2cbab94b09f2a6232f61b495ec0517d68",
    "filename": "src/ru/koryaking/sevenhomework/application.yaml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/application.yaml",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/application.yaml",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/sevenhomework/application.yaml?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,20 @@\n+server:\n+    port: 8190\n+    servlet:\n+        context-path: /app\n+\n+spring:\n+    datasource:\n+        driver-class-name: org.h2.Driver\n+        url: jdbc:h2:mem:mydatabase;MODE=PostgreSQL\n+        username: admin\n+        password: admin\n+    jpa:\n+        show-sql: true\n+        properties:\n+          hibernate:\n+            dialect: org.hibernate.dialect.H2Dialect\n+            temp:\n+                use_jdbc_metadata_defaults: false\n+    thymeleaf:\n+        encoding: UTF-8"
  },
  {
    "sha": "2f593fca02d3397703bb794bba1d7b254d8d8509",
    "filename": "src/ru/koryaking/sevenhomework/pom.xml",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/pom.xml",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/pom.xml",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/sevenhomework/pom.xml?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<parent>\n+\t\t<groupId>org.springframework.boot</groupId>\n+\t\t<artifactId>spring-boot-starter-parent</artifactId>\n+\t\t<version>2.4.3</version>\n+\t\t<relativePath/> <!-- lookup parent from repository -->\n+\t</parent>\n+\t<groupId>ru.koryaking</groupId>\n+\t<artifactId>demo</artifactId>\n+\t<version>0.0.1-SNAPSHOT</version>\n+\t<name>HW7</name>\n+\t<description>HW7 for GeekBrains</description>\n+\t<properties>\n+\t\t<java.version>11</java.version>\n+\t</properties>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.h2database</groupId>\n+\t\t\t<artifactId>h2</artifactId>\n+\t\t\t<scope>runtime</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.flywaydb</groupId>\n+\t\t\t<artifactId>flyway-core</artifactId>\n+\t\t\t<version>7.5.4</version>\n+\t\t</dependency>\n+\t</dependencies>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+</project>"
  },
  {
    "sha": "d0e0ec6593b4d47e58e6be9631c46456cb6fa131",
    "filename": "src/ru/koryaking/sevenhomework/student.html",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/student.html",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/student.html",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/sevenhomework/student.html?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,52 @@\n+<!DOCTYPE html>\n+\n+<html xmlns:th=\"http://www.thymeleaf.org\">\n+\n+<head>\n+    <meta charset=\"utf-8\"/>\n+\n+    <title>Информация о студенте</title>\n+\n+    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\n+    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n+    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\n+</head>\n+\n+<body>\n+\n+<div class=\"container\">\n+    <div class=\"row justify-content-center\">\n+        <div class=\"col-md-6\">\n+            <div class=\"card\">\n+                <header class=\"card-header\">\n+                    <h4 class=\"card-title mt-2\"><span>Информация о студенте</span></h4>\n+                </header>\n+                <article class=\"card-body\">\n+                    <form th:action=\"@{/students/save}\" th:object=\"${student}\" method=\"POST\">\n+                        <input th:field=\"*{id}\" type=\"hidden\" class=\"form-control\">\n+                        <div class=\"form-row\">\n+                            <div class=\"col form-group\">\n+                                <label>Имя</label>\n+                                <input th:field=\"*{name}\" type=\"text\" class=\"form-control\" placeholder=\"Имя\">\n+                            </div>\n+                            <div class=\"col form-group\">\n+                                <label>Возраст</label>\n+                                <input th:field=\"*{age}\" type=\"number\" class=\"form-control\" placeholder=\"Возраст\">\n+                            </div>\n+                        </div>\n+                        <div class=\"form-row\">\n+                            <div class=\"col-md-6 form-group\">\n+                                <button type=\"button\" class=\"btn btn-secondary\" onclick=\"history.back();\">Назад</button>\n+                            </div>\n+                            <div class=\"col-md-6 form-group\">\n+                                <button type=\"submit\" class=\"btn btn-primary btn-block\">Сохранить</button>\n+                            </div>\n+                        </div>\n+                    </form>\n+                </article>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "42ec3cf762fedc0c4a3d20d0b3247a715795f914",
    "filename": "src/ru/koryaking/sevenhomework/students.html",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/KoryakinGG/InterviewPreparation/blob/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/students.html",
    "raw_url": "https://github.com/KoryakinGG/InterviewPreparation/raw/9dc446fdb1ff502bf861fa6232944f807ecde788/src/ru/koryaking/sevenhomework/students.html",
    "contents_url": "https://api.github.com/repos/KoryakinGG/InterviewPreparation/contents/src/ru/koryaking/sevenhomework/students.html?ref=9dc446fdb1ff502bf861fa6232944f807ecde788",
    "patch": "@@ -0,0 +1,44 @@\n+<!DOCTYPE html>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:th=\"http://www.thymeleaf.org\">\n+\n+<head>\n+    <meta charset=\"utf-8\"/>\n+\n+    <title>Список студентов</title>\n+\n+    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\n+    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n+    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\n+</head>\n+\n+<body>\n+\n+<div class=\"container\">\n+    <h1>Список студентов</h1>\n+    <a class=\"btn btn-primary\" th:href=\"@{'/students/add'}\">Зачислить еще одного студента</a>\n+    <p></p>\n+    <table class=\"table table-hover\">\n+        <thead class=\"thead-dark\">\n+        <tr>\n+            <th>ID</th>\n+            <th>Имя</th>\n+            <th>Возраст</th>\n+            <th></th>\n+        </tr>\n+        </thead>\n+        <tbody>\n+        <tr th:each=\"s : ${students}\">\n+            <td th:text=\"${s.id}\"/>\n+            <td th:text=\"${s.name}\"/>\n+            <td th:text=\"${s.age}\"/>\n+            <td>\n+                <a class=\"btn btn-success\" th:href=\"@{'/students/' + ${s.id}}\">Редактировать</a>\n+                <a class=\"btn btn-danger\" th:href=\"@{'/students/delete/' + ${s.id}}\">Отчислить</a>\n+            </td>\n+        </tr>\n+        </tbody>\n+    </table>\n+</div>\n+\n+</body>\n+</html>\n\\ No newline at end of file"
  }
]
