[
  {
    "sha": "eb8bec1d80f786a39b0d7787d998de2002e98781",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.html",
    "status": "removed",
    "additions": 0,
    "deletions": 14,
    "changes": 14,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.html",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.html",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.html?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,14 +0,0 @@\n-<!DOCTYPE html>\n-<html xmlns:wicket=\"http://wicket.apache.org\">\n-<head>\n-<meta charset=\"utf-8\">\n-<title>EditUserDashboardPage</title>\n-</head>\n-<body>\n-    <wicket:extend>\n-        <div wicket:id=\"firstIndicator\"></div>\n-        <div wicket:id=\"secondIndicator\"></div>\n-        <div wicket:id=\"color\"></div>\n-    </wicket:extend>\n-</body>\n-</html>"
  },
  {
    "sha": "34a2068b85db3ac6c2205dadb216ea41ea0d1927",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.java",
    "status": "removed",
    "additions": 0,
    "deletions": 129,
    "changes": 129,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.java?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,129 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2016 Development Gateway, Inc and others.\n- *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the MIT License (MIT)\n- * which accompanies this distribution, and is available at\n- * https://opensource.org/licenses/MIT\n- *\n- * Contributors:\n- * Development Gateway - initial API and implementation\n- *******************************************************************************/\n-package org.devgateway.ocds.forms.wicket.page.edit;\n-\n-import org.apache.wicket.authroles.authorization.strategies.role.annotations.AuthorizeInstantiation;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.FormComponent;\n-import org.apache.wicket.markup.html.form.validation.AbstractFormValidator;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.devgateway.ocds.forms.wicket.page.list.ListAllColorIndicatorPage;\n-import org.devgateway.ocds.persistence.dao.ColorIndicatorPair;\n-import org.devgateway.ocds.persistence.mongo.flags.FlagsConstants;\n-import org.devgateway.toolkit.forms.wicket.components.form.ColorPickerBootstrapFormComponent;\n-import org.devgateway.toolkit.forms.wicket.components.form.Select2ChoiceBootstrapFormComponent;\n-import org.devgateway.toolkit.forms.wicket.page.edit.AbstractEditPage;\n-import org.devgateway.toolkit.forms.wicket.providers.GenericChoiceProvider;\n-import org.devgateway.toolkit.persistence.repository.PersonRepository;\n-import org.devgateway.toolkit.persistence.service.ColorIndicatorPairService;\n-import org.devgateway.toolkit.web.security.SecurityConstants;\n-import org.wicketstuff.annotation.mount.MountPath;\n-\n-@AuthorizeInstantiation(SecurityConstants.Roles.ROLE_ADMIN)\n-@MountPath(\"/editColorIndicatorPairPage\")\n-public class EditColorIndicatorPairPage extends AbstractEditPage<ColorIndicatorPair> {\n-\n-    private static final long serialVersionUID = -6069250112046118104L;\n-\n-    @SpringBean\n-    private ColorIndicatorPairService colorIndicatorPairService;\n-\n-    @SpringBean\n-    private PersonRepository personRepository;\n-\n-    private Select2ChoiceBootstrapFormComponent<String> firstIndicator;\n-\n-    private Select2ChoiceBootstrapFormComponent<String> secondIndicator;\n-\n-    public EditColorIndicatorPairPage(final PageParameters parameters) {\n-        super(parameters);\n-        this.jpaService = colorIndicatorPairService;\n-        this.listPageClass = ListAllColorIndicatorPage.class;\n-\n-    }\n-\n-\n-    @Override\n-    protected void onInitialize() {\n-        super.onInitialize();\n-\n-        firstIndicator =\n-                new Select2ChoiceBootstrapFormComponent<String>(\"firstIndicator\",\n-                        new GenericChoiceProvider<String>(FlagsConstants.FLAGS_LIST));\n-        firstIndicator.required();\n-        editForm.add(firstIndicator);\n-\n-        secondIndicator =\n-                new Select2ChoiceBootstrapFormComponent<String>(\"secondIndicator\",\n-                        new GenericChoiceProvider<String>(FlagsConstants.FLAGS_LIST));\n-        secondIndicator.required();\n-        editForm.add(secondIndicator);\n-\n-        ColorPickerBootstrapFormComponent color = new ColorPickerBootstrapFormComponent(\"color\");\n-        color.required();\n-        editForm.add(color);\n-        editForm.add(new ColorIndicatorDistinctFormValidator());\n-        editForm.add(new ColorIndicatorUniquePairFormValidator(compoundModel));\n-\n-    }\n-\n-\n-    private class ColorIndicatorDistinctFormValidator extends AbstractFormValidator {\n-\n-        @Override\n-        public FormComponent<?>[] getDependentFormComponents() {\n-            return new FormComponent[]{firstIndicator.getField(), secondIndicator.getField()};\n-        }\n-\n-        @Override\n-        public void validate(Form<?> form) {\n-            if (firstIndicator.getField().getValue() != null && secondIndicator.getField().getValue() != null\n-                    && firstIndicator.getField().getValue().equals(secondIndicator.getField().getValue())) {\n-                error(firstIndicator.getField());\n-                error(secondIndicator.getField());\n-            }\n-        }\n-    }\n-\n-\n-    private class ColorIndicatorUniquePairFormValidator extends AbstractFormValidator {\n-\n-        private final IModel<ColorIndicatorPair> masterModel;\n-\n-        ColorIndicatorUniquePairFormValidator(IModel<ColorIndicatorPair> masterModel) {\n-            this.masterModel = masterModel;\n-        }\n-\n-        @Override\n-        public FormComponent<?>[] getDependentFormComponents() {\n-            return new FormComponent[]{firstIndicator.getField(), secondIndicator.getField()};\n-        }\n-\n-        @Override\n-        public void validate(Form<?> form) {\n-            if (firstIndicator.getField().getValue() != null && secondIndicator.getField().getValue() != null) {\n-                ColorIndicatorPair indicator = colorIndicatorPairService.\n-                        findByFirstIndicatorAndSecondIndicator(firstIndicator.getField().getValue(),\n-                                secondIndicator.getField().getValue());\n-\n-                if ((masterModel.getObject().isNew() && indicator != null)\n-                        || (!masterModel.getObject().isNew() && indicator != null\n-                        && !indicator.getId().equals(masterModel.getObject().getId()))) {\n-                    error(firstIndicator.getField());\n-                    error(secondIndicator.getField());\n-                }\n-            }\n-        }\n-    }\n-}"
  },
  {
    "sha": "35fb0cdfcbdc192b8f97eefab8a4ff8822e13002",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 17,
    "changes": 17,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.properties",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.properties",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditColorIndicatorPairPage.properties?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,17 +0,0 @@\n-###############################################################################\n-# Copyright (c) 2015 Development Gateway, Inc and others.\n-#\n-# All rights reserved. This program and the accompanying materials\n-# are made available under the terms of the MIT License (MIT)\n-# which accompanies this distribution, and is available at\n-# https://opensource.org/licenses/MIT\n-#\n-# Contributors:\n-# Development Gateway - initial API and implementation\n-###############################################################################\n-page.title=Edit Color Indicator Pair\n-firstIndicator.label=First Indicator\n-secondIndicator.label=Second Indicator\n-color.label=Color\n-ColorIndicatorDistinctFormValidator=Please select two distinct indicators\n-ColorIndicatorUniquePairFormValidator=A similar pair of indicators was already saved with a color. You can add only distinct pairs. \n\\ No newline at end of file"
  },
  {
    "sha": "7a2782cdda294da23f2fc252c68387b05fe5215f",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.html",
    "status": "removed",
    "additions": 0,
    "deletions": 15,
    "changes": 15,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.html",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.html",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.html?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,15 +0,0 @@\n-<!DOCTYPE html>\n-<html xmlns:wicket=\"http://wicket.apache.org\">\n-<head>\n-<meta charset=\"utf-8\">\n-<title>EditUserDashboardPage</title>\n-</head>\n-<body>\n-    <wicket:extend>\n-        <div wicket:id=\"name\"></div>\n-        <div wicket:id=\"formUrlEncodedBody\"></div>\n-        <div wicket:id=\"users\"></div>\n-        <div wicket:id=\"defaultDashboardUsers\"></div>\n-    </wicket:extend>\n-</body>\n-</html>"
  },
  {
    "sha": "f9bf6ddb3b11283bf475c431da90cf5c7bbcaaae",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.java",
    "status": "removed",
    "additions": 0,
    "deletions": 76,
    "changes": 76,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.java?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,76 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2016 Development Gateway, Inc and others.\n- *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the MIT License (MIT)\n- * which accompanies this distribution, and is available at\n- * https://opensource.org/licenses/MIT\n- *\n- * Contributors:\n- * Development Gateway - initial API and implementation\n- *******************************************************************************/\n-package org.devgateway.ocds.forms.wicket.page.edit;\n-\n-import org.apache.wicket.authroles.authorization.strategies.role.annotations.AuthorizeInstantiation;\n-import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.devgateway.ocds.forms.wicket.page.list.ListAllDashboardsPage;\n-import org.devgateway.ocds.forms.wicket.providers.LabelPersistableJpaRepositoryTextChoiceProvider;\n-import org.devgateway.ocds.persistence.dao.UserDashboard;\n-import org.devgateway.toolkit.forms.wicket.components.form.Select2MultiChoiceBootstrapFormComponent;\n-import org.devgateway.toolkit.forms.wicket.components.form.TextAreaFieldBootstrapFormComponent;\n-import org.devgateway.toolkit.forms.wicket.components.form.TextFieldBootstrapFormComponent;\n-import org.devgateway.toolkit.forms.wicket.page.edit.AbstractEditPage;\n-import org.devgateway.toolkit.persistence.dao.Person;\n-import org.devgateway.toolkit.persistence.service.PersonService;\n-import org.devgateway.toolkit.persistence.service.UserDashboardService;\n-import org.devgateway.toolkit.web.security.SecurityConstants;\n-import org.wicketstuff.annotation.mount.MountPath;\n-\n-@AuthorizeInstantiation(SecurityConstants.Roles.ROLE_ADMIN)\n-@MountPath(\"/editUserDashboard\")\n-public class EditUserDashboardPage extends AbstractEditPage<UserDashboard> {\n-\n-    private static final long serialVersionUID = -6069250112046118104L;\n-\n-    @SpringBean\n-    private UserDashboardService userDashboardService;\n-\n-    @SpringBean\n-    private PersonService personService;\n-\n-    public EditUserDashboardPage(final PageParameters parameters) {\n-        super(parameters);\n-        this.jpaService = userDashboardService;\n-        this.listPageClass = ListAllDashboardsPage.class;\n-\n-    }\n-\n-    @Override\n-    protected void onInitialize() {\n-        super.onInitialize();\n-\n-        TextFieldBootstrapFormComponent<String> name = new TextFieldBootstrapFormComponent<>(\"name\");\n-        name.required();\n-        editForm.add(name);\n-\n-        TextAreaFieldBootstrapFormComponent<String> formUrlEncodedBody =\n-                new TextAreaFieldBootstrapFormComponent<>(\"formUrlEncodedBody\");\n-        formUrlEncodedBody.required();\n-        formUrlEncodedBody.getField().setEnabled(false);\n-        editForm.add(formUrlEncodedBody);\n-\n-        Select2MultiChoiceBootstrapFormComponent<Person> defaultDashboardUsers =\n-                new Select2MultiChoiceBootstrapFormComponent<>(\"defaultDashboardUsers\",\n-                        new LabelPersistableJpaRepositoryTextChoiceProvider<Person>(personService));\n-        defaultDashboardUsers.setEnabled(false);\n-        editForm.add(defaultDashboardUsers);\n-\n-        Select2MultiChoiceBootstrapFormComponent<Person> users =\n-                new Select2MultiChoiceBootstrapFormComponent<>(\"users\",\n-                        new LabelPersistableJpaRepositoryTextChoiceProvider<>(personService));\n-        editForm.add(users);\n-\n-        \n-    }\n-}"
  },
  {
    "sha": "2522f31341265f5e0fffc5bab771fcf44ceaf68f",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 20,
    "changes": 20,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.properties",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.properties",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/edit/EditUserDashboardPage.properties?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,20 +0,0 @@\n-###############################################################################\n-# Copyright (c) 2015 Development Gateway, Inc and others.\n-#\n-# All rights reserved. This program and the accompanying materials\n-# are made available under the terms of the MIT License (MIT)\n-# which accompanies this distribution, and is available at\n-# https://opensource.org/licenses/MIT\n-#\n-# Contributors:\n-# Development Gateway - initial API and implementation\n-###############################################################################\n-page.title=Edit User Dashboard\n-name.label=Name\n-formUrlEncodedBody.label=Filter body\n-formUrlEncodedBody.help=This is a list of saved filters from the UI and cannot be edited here.\n-defaultDashboardUsers.label=Default Dashboard For Users\n-defaultDashboardUsers.help=This is a user setting and can be changed from the User form\n-users.label=Assigned Users\n-delete_error_message=Cannot delete this dashboard. It is assigned as the default dashboard for at least one user.\\\n- Please assign a different default dashboard for the assigned users or select no default dashboard, and then try the delete again.\n\\ No newline at end of file"
  },
  {
    "sha": "5e28582ee7ddf3404cc8496b9e811e82fe9549df",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllColorIndicatorPage.java",
    "status": "removed",
    "additions": 0,
    "deletions": 50,
    "changes": 50,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllColorIndicatorPage.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllColorIndicatorPage.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllColorIndicatorPage.java?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,50 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2016 Development Gateway, Inc and others.\n- *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the MIT License (MIT)\n- * which accompanies this distribution, and is available at\n- * https://opensource.org/licenses/MIT\n- *\n- * Contributors:\n- * Development Gateway - initial API and implementation\n- *******************************************************************************/\n-package org.devgateway.ocds.forms.wicket.page.list;\n-\n-import org.apache.wicket.authroles.authorization.strategies.role.annotations.AuthorizeInstantiation;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.model.StringResourceModel;\n-import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.devgateway.ocds.forms.wicket.page.edit.EditColorIndicatorPairPage;\n-import org.devgateway.ocds.persistence.dao.ColorIndicatorPair;\n-import org.devgateway.toolkit.forms.wicket.page.lists.AbstractListPage;\n-import org.devgateway.toolkit.persistence.service.ColorIndicatorPairService;\n-import org.devgateway.toolkit.web.security.SecurityConstants;\n-import org.wicketstuff.annotation.mount.MountPath;\n-\n-@AuthorizeInstantiation(SecurityConstants.Roles.ROLE_ADMIN)\n-@MountPath(value = \"/listColorIndicators\")\n-public class ListAllColorIndicatorPage extends AbstractListPage<ColorIndicatorPair> {\n-\n-    @SpringBean\n-    protected ColorIndicatorPairService colorIndicatorPairService;\n-\n-\n-\n-    public ListAllColorIndicatorPage(final PageParameters pageParameters) {\n-        super(pageParameters);\n-        this.jpaService = colorIndicatorPairService;\n-        this.editPageClass = EditColorIndicatorPairPage.class;\n-        columns.add(new PropertyColumn<>(new StringResourceModel(\"firstIndicator\", this),\n-                \"firstIndicator\", \"firstIndicator\"));\n-\n-        columns.add(new PropertyColumn<>(new StringResourceModel(\"secondIndicator\", this),\n-                \"secondIndicator\", \"secondIndicator\"));\n-\n-        columns.add(new PropertyColumn<>(new StringResourceModel(\"color\", this),\n-                \"color\", \"color\"));\n-\n-    }\n-\n-}"
  },
  {
    "sha": "c468f7ac627e4a1441365aafaa53da55c7866142",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllColorIndicatorPage.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 18,
    "changes": 18,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllColorIndicatorPage.properties",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllColorIndicatorPage.properties",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllColorIndicatorPage.properties?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,18 +0,0 @@\n-###############################################################################\n-# Copyright (c) 2015 Development Gateway, Inc and others.\n-#\n-# All rights reserved. This program and the accompanying materials\n-# are made available under the terms of the MIT License (MIT)\n-# which accompanies this distribution, and is available at\n-# https://opensource.org/licenses/MIT\n-#\n-# Contributors:\n-# Development Gateway - initial API and implementation\n-###############################################################################\n-page.title=All Color Indicator Pairs\n-defaultDashboardUsers=Default Dashboard For Users\n-users=Users\n-view=View\n-firstIndicator=First Indicator\n-secondIndicator=Second Indicator\n-color=Color"
  },
  {
    "sha": "00ec36917c9260a9f732645533c85a0e15df3f1d",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllDashboardsPage.java",
    "status": "removed",
    "additions": 0,
    "deletions": 90,
    "changes": 90,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllDashboardsPage.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllDashboardsPage.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllDashboardsPage.java?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,90 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2016 Development Gateway, Inc and others.\n- *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the MIT License (MIT)\n- * which accompanies this distribution, and is available at\n- * https://opensource.org/licenses/MIT\n- *\n- * Contributors:\n- * Development Gateway - initial API and implementation\n- *******************************************************************************/\n-package org.devgateway.ocds.forms.wicket.page.list;\n-\n-import de.agilecoders.wicket.core.markup.html.bootstrap.button.BootstrapExternalLink;\n-import de.agilecoders.wicket.core.markup.html.bootstrap.button.Buttons;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.icon.FontAwesomeIconType;\n-import org.apache.wicket.authroles.authorization.strategies.role.annotations.AuthorizeInstantiation;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.StringResourceModel;\n-import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.devgateway.ocds.forms.wicket.page.edit.EditUserDashboardPage;\n-import org.devgateway.ocds.persistence.dao.UserDashboard;\n-import org.devgateway.toolkit.forms.wicket.page.lists.AbstractListPage;\n-import org.devgateway.toolkit.persistence.service.UserDashboardService;\n-import org.devgateway.toolkit.web.security.SecurityConstants;\n-import org.wicketstuff.annotation.mount.MountPath;\n-\n-@AuthorizeInstantiation(SecurityConstants.Roles.ROLE_ADMIN)\n-@MountPath(value = \"/listAllDashboards\")\n-public class ListAllDashboardsPage extends AbstractListPage<UserDashboard> {\n-    // TODO - pages from this package are not scanned for @MountPath annotation\n-    /**\n-     *\n-     */\n-    private static final long serialVersionUID = -324298525712620234L;\n-    @SpringBean\n-    protected UserDashboardService userDashboardService;\n-\n-    public class DashboardsActionPanel extends ActionPanel {\n-\n-        /**\n-         * @param id\n-         * @param model\n-         */\n-        public DashboardsActionPanel(String id, IModel<UserDashboard> model) {\n-            super(id, model);\n-\n-            UserDashboard entity = (UserDashboard) this.getDefaultModelObject();\n-\n-            BootstrapExternalLink viewLink = new BootstrapExternalLink(\"view\", Model.of(\"ui/index.html?dashboardId=\"\n-                    + entity.getId()), Buttons.Type.Danger) {\n-            };\n-            viewLink.setLabel(new StringResourceModel(\"view\", ListAllDashboardsPage.this, null));\n-            viewLink.setIconType(FontAwesomeIconType.eye).setSize(Buttons.Size.Small);\n-            add(viewLink);\n-\n-        }\n-    }\n-\n-    public ListAllDashboardsPage(final PageParameters pageParameters) {\n-        super(pageParameters);\n-        this.jpaService = userDashboardService;\n-        this.editPageClass = EditUserDashboardPage.class;\n-        columns.add(new PropertyColumn<UserDashboard, String>(\n-                new Model<String>((new StringResourceModel(\"name\", ListAllDashboardsPage.this, null)).getString()),\n-                \"name\", \"name\"));\n-        columns.add(new PropertyColumn<UserDashboard, String>(new Model<String>(\n-                (new StringResourceModel(\"defaultDashboardUsers\", ListAllDashboardsPage.this, null)).getString()),\n-                \"defaultDashboardUsers\", \"defaultDashboardUsers\"));\n-\n-        columns.add(new PropertyColumn<UserDashboard, String>(new Model<String>(\n-                (new StringResourceModel(\"users\", ListAllDashboardsPage.this, null)).getString()),\n-                \"users\", \"users\"));\n-\n-    }\n-\n-    @Override\n-    protected void onInitialize() {\n-        super.onInitialize();\n-        editPageLink.setVisibilityAllowed(false);\n-    }\n-\n-    @Override\n-    public ActionPanel getActionPanel(String id, IModel<UserDashboard> model) {\n-        return new DashboardsActionPanel(id, model);\n-    }\n-}"
  },
  {
    "sha": "c961f460c1477bf08f70e55d22d052ad786725d0",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllDashboardsPage.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 16,
    "changes": 16,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllDashboardsPage.properties",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllDashboardsPage.properties",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListAllDashboardsPage.properties?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,16 +0,0 @@\n-###############################################################################\n-# Copyright (c) 2015 Development Gateway, Inc and others.\n-#\n-# All rights reserved. This program and the accompanying materials\n-# are made available under the terms of the MIT License (MIT)\n-# which accompanies this distribution, and is available at\n-# https://opensource.org/licenses/MIT\n-#\n-# Contributors:\n-# Development Gateway - initial API and implementation\n-###############################################################################\n-page.title=All Dashboards\n-name=Name\n-defaultDashboardUsers=Default Dashboard For Users\n-users=Users\n-view=View\n\\ No newline at end of file"
  },
  {
    "sha": "e130042d619ebf615218cdf3dcc5a91adf3702ea",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListMyDashboardsPage.java",
    "status": "removed",
    "additions": 0,
    "deletions": 46,
    "changes": 46,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListMyDashboardsPage.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListMyDashboardsPage.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/page/list/ListMyDashboardsPage.java?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,46 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2016 Development Gateway, Inc and others.\n- *\n- * All rights reserved. This program and the accompanying materials\n- * are made available under the terms of the MIT License (MIT)\n- * which accompanies this distribution, and is available at\n- * https://opensource.org/licenses/MIT\n- *\n- * Contributors:\n- * Development Gateway - initial API and implementation\n- *******************************************************************************/\n-package org.devgateway.ocds.forms.wicket.page.list;\n-\n-import org.apache.wicket.authroles.authorization.strategies.role.annotations.AuthorizeInstantiation;\n-import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.devgateway.ocds.forms.wicket.providers.PersonDashboardJpaRepositoryProvider;\n-import org.devgateway.ocds.persistence.dao.UserDashboard;\n-import org.devgateway.toolkit.forms.wicket.providers.SortableJpaServiceDataProvider;\n-import org.devgateway.toolkit.persistence.service.PersonService;\n-import org.devgateway.toolkit.web.security.SecurityConstants;\n-import org.wicketstuff.annotation.mount.MountPath;\n-\n-@AuthorizeInstantiation(SecurityConstants.Roles.ROLE_PROCURING_ENTITY)\n-@MountPath(value = \"/listMyDashboards\")\n-public class ListMyDashboardsPage extends ListAllDashboardsPage {\n-\n-    /**\n-     * \n-     */\n-    private static final long serialVersionUID = 8105049572554654046L;\n-\n-    @SpringBean\n-    private PersonService personService;\n-\n-    \n-    @Override\n-    public SortableJpaServiceDataProvider<UserDashboard> getProvider() {\n-        return new PersonDashboardJpaRepositoryProvider(userDashboardService, personService);\n-    }\n-\n-    public ListMyDashboardsPage(final PageParameters pageParameters) {\n-        super(pageParameters);\n-    }\n-\n-}"
  },
  {
    "sha": "75148ef008a9e171cbf8c482aadc95e372039055",
    "filename": "forms/src/main/java/org/devgateway/ocds/forms/wicket/providers/PersonDashboardJpaRepositoryProvider.java",
    "status": "removed",
    "additions": 0,
    "deletions": 55,
    "changes": 55,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/providers/PersonDashboardJpaRepositoryProvider.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/a94729b76f354256711f3508972db4b07d91ff77/forms/src/main/java/org/devgateway/ocds/forms/wicket/providers/PersonDashboardJpaRepositoryProvider.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/ocds/forms/wicket/providers/PersonDashboardJpaRepositoryProvider.java?ref=a94729b76f354256711f3508972db4b07d91ff77",
    "patch": "@@ -1,55 +0,0 @@\n-/**\n- * \n- */\n-package org.devgateway.ocds.forms.wicket.providers;\n-\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.devgateway.ocds.persistence.dao.UserDashboard;\n-import org.devgateway.toolkit.forms.WebConstants;\n-import org.devgateway.toolkit.forms.wicket.providers.SortableJpaServiceDataProvider;\n-import org.devgateway.toolkit.persistence.service.PersonService;\n-import org.devgateway.toolkit.persistence.service.UserDashboardService;\n-import org.devgateway.toolkit.web.security.SecurityUtil;\n-import org.springframework.data.domain.Page;\n-import org.springframework.data.domain.PageRequest;\n-\n-import java.util.Iterator;\n-\n-/**\n- * @author mpost\n- *\n- */\n-public class PersonDashboardJpaRepositoryProvider extends SortableJpaServiceDataProvider<UserDashboard> {\n-\n-    private static final long serialVersionUID = -490237568464403107L;\n-\n-    private UserDashboardService userDashboardService;\n-\n-    private PersonService personService;\n-\n-    public PersonDashboardJpaRepositoryProvider(UserDashboardService userDashboardService,\n-                                                PersonService personService) {\n-        super(userDashboardService);\n-        this.personService = personService;\n-        this.userDashboardService = userDashboardService;\n-    }\n-\n-    /**\n-     * @see SortableDataProvider#iterator(long, long)\n-     */\n-    @Override\n-    public Iterator<UserDashboard> iterator(final long first, final long count) {\n-        int page = (int) ((double) first / WebConstants.PAGE_SIZE);\n-        Page<UserDashboard> findAll =\n-                userDashboardService.findDashboardsForPersonId(SecurityUtil.getCurrentAuthenticatedPerson().getId(),\n-                        PageRequest.of(page, WebConstants.PAGE_SIZE, translateSort()));\n-        return findAll.iterator();\n-    }\n-\n-    @Override\n-    public long size() {\n-        return personService.findById(SecurityUtil.getCurrentAuthenticatedPerson().getId()).get()\n-                .getDashboards().size();\n-    }\n-\n-}"
  },
  {
    "sha": "4e787b910e077b68b454cf435bd875a553b85e77",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/behaviors/RefreshOnEventBehavior.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/behaviors/RefreshOnEventBehavior.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/behaviors/RefreshOnEventBehavior.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/behaviors/RefreshOnEventBehavior.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -0,0 +1,36 @@\n+package org.devgateway.toolkit.forms.wicket.behaviors;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.event.IEvent;\n+import org.devgateway.toolkit.forms.wicket.events.AjaxUpdateEvent;\n+\n+/**\n+ * Refresh the attached component when it receives an event with a payload that extends from {@link AjaxUpdateEvent}.\n+ *\n+ * @author Octavian Ciubotaru\n+ */\n+public final class RefreshOnEventBehavior<T extends AjaxUpdateEvent> extends Behavior {\n+\n+    private final Class<T> payloadClass;\n+\n+    public RefreshOnEventBehavior(Class<T> payloadClass) {\n+        this.payloadClass = payloadClass;\n+    }\n+\n+    @Override\n+    public void bind(Component component) {\n+        super.bind(component);\n+        component.setOutputMarkupId(true);\n+    }\n+\n+    @Override\n+    public void onEvent(Component component, IEvent<?> event) {\n+        super.onEvent(component, event);\n+\n+        if (payloadClass.isAssignableFrom(event.getPayload().getClass())) {\n+            event.dontBroadcastDeeper();\n+            ((AjaxUpdateEvent) event.getPayload()).getAjaxRequestTarget().add(component);\n+        }\n+    }\n+}"
  },
  {
    "sha": "1075ebb51364a1e66fb0965c5b6b5eec19096b80",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/ListViewSectionPanel.html",
    "status": "modified",
    "additions": 3,
    "deletions": 5,
    "changes": 8,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/ListViewSectionPanel.html",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/ListViewSectionPanel.html",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/ListViewSectionPanel.html?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -44,11 +44,9 @@ <h4 wicket:id=\"panelTitle\">[[title]]</h4>\n                             <div class=\"col-md-12\">\n                                 <button wicket:id=\"edit\" type=\"button\" class=\"btn btn-primary pull-right\">[[Edit]]</button>\n                             </div>\n-                            <div class=\"row\">\n-                                <div class=\"col-md-12\">\n-                                    <button wicket:id=\"remove\" type=\"button\" class=\"btn btn-red pull-right\">[[Remove]]\n-                                    </button>\n-                                </div>\n+                            <div class=\"col-md-12\">\n+                                <button wicket:id=\"remove\" type=\"button\" class=\"btn btn-red pull-right\">[[Remove]]\n+                                </button>\n                             </div>\n                             <div wicket:id=\"removeButtonNotificationPanel\" class=\"col-md-12\"></div>\n                         </div>"
  },
  {
    "sha": "1dd79287b5a5f9d184161d9585431c6eb834a6b7",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/ListViewSectionPanel.java",
    "status": "modified",
    "additions": 49,
    "deletions": 11,
    "changes": 60,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/ListViewSectionPanel.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/ListViewSectionPanel.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/ListViewSectionPanel.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -6,6 +6,7 @@\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.ladda.LaddaAjaxButton;\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.Component;\n+import org.apache.wicket.MetaDataKey;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -63,10 +64,13 @@\n         DgFmFormComponentSubject {\n     private static final Logger logger = LoggerFactory.getLogger(ListViewSectionPanel.class);\n \n+    private static final MetaDataKey<Boolean> HEADER = new MetaDataKey<Boolean>() { };\n+\n     @SpringBean\n     protected DgFmService fmService;\n \n     private ListItemsValidator listItemsValidator;\n+    private AjaxLink<Void> showHideAllEntries;\n \n     @Override\n     public DgFmService getFmService() {\n@@ -95,8 +99,16 @@ public boolean isVisible() {\n \n     protected NotificationPanel addButtonNotificationPanel;\n \n+    private final Boolean foldable;\n+\n     public ListViewSectionPanel(final String id) {\n         super(id);\n+        this.foldable = true;\n+    }\n+\n+    public ListViewSectionPanel(final String id, final Boolean foldable) {\n+        super(id);\n+        this.foldable = foldable;\n     }\n \n     protected void checkAndSendEventForDisableEditing(IEventSink sink) {\n@@ -166,7 +178,7 @@ protected void onInitialize() {\n                 new StringResourceModel(\"totalEntries\", this).setParameters(\n                         (IModel<Integer>) () -> ListViewSectionPanel.this.getModel().getObject().size())));\n \n-        final AjaxLink<Void> showHideAllEntries = new AjaxLink<Void>(\"showHideAllEntries\") {\n+        showHideAllEntries = new AjaxLink<Void>(\"showHideAllEntries\") {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 // take the list of elements from the path: listWrapper/list\n@@ -199,7 +211,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n         listWrapper.add(showHideAllEntries);\n-        showHideAllEntries.setVisibilityAllowed(!ComponentUtil.isPrintMode());\n+        showHideAllEntries.setVisibilityAllowed(foldable && !ComponentUtil.isPrintMode());\n \n         final IModel listModel = new FilteredListModel<T>(getModel()) {\n             @Override\n@@ -223,12 +235,13 @@ protected void populateItem(final ListItem<T> item) {\n                 // we add the header #\n                 item.add(new Label(\"headerNo\", 1 + item.getIndex()));\n \n-                // just keep the last element editable and expanded\n-                if (item.getIndex() == getModel().getObject().size() - 1) {\n+                // just keep the last element editable and expanded, unless non foldable\n+                if (!foldable || item.getIndex() == getModel().getObject().size() - 1) {\n                     item.getModelObject().setExpanded(true);\n                     item.getModelObject().setEditable(true);\n                 }\n \n+\n                 // we add the rest of the items in the listItem\n                 populateCompoundListItem(item);\n \n@@ -252,10 +265,17 @@ protected void populateItem(final ListItem<T> item) {\n         add(addButtonNotificationPanel);\n     }\n \n-    private void addAcordion(final ListItem<T> item) {\n+    protected Label createShowDetailsLink() {\n         final Label showDetailsLink = new Label(\"showDetailsLink\", new ResourceModel(\"showDetailsLink\"));\n         showDetailsLink.setOutputMarkupId(true);\n-        showDetailsLink.setVisibilityAllowed(!ComponentUtil.isPrintMode());\n+        showDetailsLink.setOutputMarkupPlaceholderTag(true);\n+        showDetailsLink.setVisibilityAllowed(foldable && !ComponentUtil.isPrintMode());\n+        return showDetailsLink;\n+    }\n+\n+\n+    private void addAcordion(final ListItem<T> item) {\n+        Label showDetailsLink = createShowDetailsLink();\n \n         // the section that will collapse\n         final TransparentWebMarkupContainer hideableContainer =\n@@ -270,6 +290,9 @@ private void addAcordion(final ListItem<T> item) {\n         final AjaxLink<Void> accordionToggle = new AjaxLink<Void>(ID_ACCORDION_TOGGLE) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n+                if (!foldable) {\n+                    return;\n+                }\n                 final T modelObject = item.getModelObject();\n                 if (modelObject.getExpanded()) {\n                     hideSection(modelObject, target, hideableContainer, showDetailsLink);\n@@ -283,7 +306,9 @@ public void onClick(final AjaxRequestTarget target) {\n         accordion.add(accordionToggle);\n \n         // we add the special header field\n-        accordionToggle.add(getHeaderField(\"headerField\", new CompoundPropertyModel<>(item.getModel())));\n+        Component headerField = createHeaderField(\"headerField\", new CompoundPropertyModel<>(item.getModel()));\n+        headerField.setMetaData(HEADER, true);\n+        accordionToggle.add(headerField);\n \n         accordionToggle.add(showDetailsLink);\n         accordion.add(hideableContainer);\n@@ -427,15 +452,18 @@ public AddNewChildButton(final String id, final IModel<String> model) {\n \n         @Override\n         protected void onSubmit(final AjaxRequestTarget target) {\n-            final T newChild = createNewChild(\n-                    (IModel<PARENT>) ListViewSectionPanel.this.getParent().getDefaultModel());\n+            final T newChild = createNewChild(getParentModel());\n             ListViewSectionPanel.this.getModelObject().add(newChild);\n \n             listView.removeAll();\n             target.add(listWrapper);\n         }\n     }\n \n+    protected IModel<PARENT> getParentModel() {\n+        return (IModel<PARENT>) ListViewSectionPanel.this.getParent().getDefaultModel();\n+    }\n+\n     private static void goToComponent(final AjaxRequestTarget target, final String markupId) {\n         target.appendJavaScript(JQueryUtil.animateScrollTop(\"#\" + markupId, 500));\n     }\n@@ -449,10 +477,18 @@ protected void addFilterPanel() {\n         add(hiddenForm);\n     }\n \n-    protected Component getHeaderField(final String id, final CompoundPropertyModel<T> compoundModel) {\n+    protected Component createHeaderField(final String id, final CompoundPropertyModel<T> compoundModel) {\n         return new TransparentWebMarkupContainer(id);\n     }\n \n+    protected Component findHeaderField(final ListItem<T> item) {\n+        return item.visitChildren((object, visit) -> {\n+            Boolean value = object.getMetaData(HEADER);\n+            if (value != null && value) {\n+                visit.stop(object);\n+            }\n+        });\n+    }\n \n     /**\n      * Use the constructor for new children and return the entity after setting its parent.\n@@ -468,5 +504,7 @@ protected Component getHeaderField(final String id, final CompoundPropertyModel<\n      */\n     public abstract void populateCompoundListItem(ListItem<T> item);\n \n-    protected abstract boolean filterListItem(T t);\n+    protected boolean filterListItem(T t) {\n+        return true;\n+    }\n }"
  },
  {
    "sha": "6fec4af816377661544e6bf78d89c9c3d6411d4b",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/table/SelectFilteredBootstrapPropertyColumn.java",
    "status": "modified",
    "additions": 48,
    "deletions": 7,
    "changes": 55,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/table/SelectFilteredBootstrapPropertyColumn.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/table/SelectFilteredBootstrapPropertyColumn.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/table/SelectFilteredBootstrapPropertyColumn.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -3,11 +3,13 @@\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.DataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.filter.ChoiceFilteredPropertyColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.filter.FilterForm;\n import org.apache.wicket.model.IModel;\n import org.devgateway.toolkit.forms.wicket.components.form.Select2ChoiceBootstrapFormComponent;\n import org.devgateway.toolkit.forms.wicket.providers.GenericChoiceProvider;\n+import org.wicketstuff.select2.ChoiceProvider;\n \n import java.util.List;\n \n@@ -18,35 +20,61 @@\n  * @since 12/20/16\n  */\n public class SelectFilteredBootstrapPropertyColumn<T, Y, S> extends ChoiceFilteredPropertyColumn<T, Y, S> {\n-    private final AjaxFallbackBootstrapDataTable dataTable;\n+    private DataTable<T, String> dataTable;\n     private boolean disableFilter = false;\n+    private ChoiceProvider<Y> choiceProvider;\n+\n+    public SelectFilteredBootstrapPropertyColumn(final IModel<String> displayModel,\n+                                                 final S sortProperty,\n+                                                 final String propertyExpression,\n+                                                 final ChoiceProvider<Y> choiceProvider,\n+                                                 final DataTable<T, String> dataTable) {\n+        this(displayModel, sortProperty, propertyExpression, choiceProvider, dataTable, false);\n+    }\n \n     public SelectFilteredBootstrapPropertyColumn(final IModel<String> displayModel,\n                                                  final S sortProperty,\n                                                  final String propertyExpression,\n                                                  final IModel<? extends List<? extends Y>> filterChoices,\n-                                                 final AjaxFallbackBootstrapDataTable dataTable) {\n+                                                 final DataTable<T, String> dataTable) {\n         this(displayModel, sortProperty, propertyExpression, filterChoices, dataTable, false);\n     }\n \n+    public SelectFilteredBootstrapPropertyColumn(final IModel<String> displayModel,\n+                                                 final S sortProperty,\n+                                                 final String propertyExpression,\n+                                                 final ChoiceProvider<Y> choiceProvider,\n+                                                 final DataTable<T, String> dataTable,\n+                                                 final boolean disableFilter) {\n+        super(displayModel, sortProperty, propertyExpression, null);\n+        this.disableFilter = disableFilter;\n+        this.dataTable = dataTable;\n+        this.choiceProvider = choiceProvider;\n+    }\n+\n \n     public SelectFilteredBootstrapPropertyColumn(final IModel<String> displayModel,\n                                                  final S sortProperty,\n                                                  final String propertyExpression,\n                                                  final IModel<? extends List<? extends Y>> filterChoices,\n-                                                 final AjaxFallbackBootstrapDataTable dataTable,\n-                                                 boolean disableFilter) {\n+                                                 final DataTable<T, String> dataTable,\n+                                                 final boolean disableFilter) {\n         super(displayModel, sortProperty, propertyExpression, filterChoices);\n         this.disableFilter = disableFilter;\n         this.dataTable = dataTable;\n     }\n \n     @Override\n     public Component getFilter(final String componentId, final FilterForm<?> form) {\n+        ChoiceProvider<Y> provider;\n+\n+        if (choiceProvider != null) {\n+            provider = choiceProvider;\n+        } else {\n+            provider = new GenericChoiceProvider<>((List<Y>) getFilterChoices().getObject());\n+        }\n         final Select2ChoiceBootstrapFormComponent<Y> selectorField =\n-                new Select2ChoiceBootstrapFormComponent<>(componentId,\n-                        new GenericChoiceProvider<>((List<Y>) getFilterChoices().getObject()),\n-                        getFilterModel(form));\n+                new Select2ChoiceBootstrapFormComponent<>(componentId, provider, getFilterModel(form));\n         selectorField.fmNoAutoAttach();\n         selectorField.hideLabel();\n         if (disableFilter) {\n@@ -69,8 +97,21 @@ public Component getFilter(final String componentId, final FilterForm<?> form) {\n         @Override\n         protected void onUpdate(final AjaxRequestTarget target) {\n             // update the table component\n+            onFieldUpdate(target);\n             dataTable.setCurrentPage(0);\n             target.add(dataTable);\n         }\n+\n+    }\n+\n+    protected void onFieldUpdate(final AjaxRequestTarget target) {\n+    }\n+\n+    @Override\n+    public void detach() {\n+        super.detach();\n+        if (choiceProvider != null) {\n+            choiceProvider.detach();\n+        }\n     }\n }"
  },
  {
    "sha": "7030db73b7f0de13326edea21506081a50d5aad2",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/table/SelectMultiFilteredBootstrapPropertyColumn.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/table/SelectMultiFilteredBootstrapPropertyColumn.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/table/SelectMultiFilteredBootstrapPropertyColumn.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/table/SelectMultiFilteredBootstrapPropertyColumn.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -3,6 +3,7 @@\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.DataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.filter.ChoiceFilteredPropertyColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.filter.FilterForm;\n import org.apache.wicket.model.IModel;\n@@ -19,14 +20,14 @@\n  * A ChoiceFilteredPropertyColumn that uses Select2MultiChoiceBootstrapFormComponent as a filter.\n  */\n public class SelectMultiFilteredBootstrapPropertyColumn<T, Y, S> extends ChoiceFilteredPropertyColumn<T, Y, S> {\n-    private final AjaxFallbackBootstrapDataTable dataTable;\n+    private final DataTable<T, String> dataTable;\n     private Boolean enableInput = true;\n \n     public SelectMultiFilteredBootstrapPropertyColumn(final IModel<String> displayModel,\n                                                       final S sortProperty,\n                                                       final String propertyExpression,\n                                                       final IModel<? extends List<? extends Y>> filterChoices,\n-                                                      final AjaxFallbackBootstrapDataTable dataTable) {\n+                                                      final DataTable<T, String> dataTable) {\n         super(displayModel, sortProperty, propertyExpression, filterChoices);\n \n         this.dataTable = dataTable;\n@@ -35,7 +36,7 @@ public SelectMultiFilteredBootstrapPropertyColumn(final IModel<String> displayMo\n     public SelectMultiFilteredBootstrapPropertyColumn(final IModel<String> displayModel,\n                                                       final String propertyExpression,\n                                                       final IModel<? extends List<? extends Y>> filterChoices,\n-                                                      final AjaxFallbackBootstrapDataTable dataTable) {\n+                                                      final DataTable<T, String> dataTable) {\n         super(displayModel, propertyExpression, filterChoices);\n \n         this.dataTable = dataTable;\n@@ -44,7 +45,7 @@ public SelectMultiFilteredBootstrapPropertyColumn(final IModel<String> displayMo\n     public SelectMultiFilteredBootstrapPropertyColumn(final IModel<String> displayModel,\n                                                       final String propertyExpression,\n                                                       final IModel<? extends List<? extends Y>> filterChoices,\n-                                                      final AjaxFallbackBootstrapDataTable dataTable,\n+                                                      final DataTable<T, String> dataTable,\n                                                       boolean enableInput) {\n         this(displayModel, propertyExpression, filterChoices, dataTable);\n         this.enableInput = enableInput;"
  },
  {
    "sha": "22155f5f68d276298791bcd7f185c39198e771b1",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/util/ComponentUtil.java",
    "status": "modified",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/util/ComponentUtil.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/util/ComponentUtil.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/components/util/ComponentUtil.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -7,6 +7,8 @@\n import org.apache.wicket.event.IEvent;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.FormComponent;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.request.IRequestCycle;\n import org.apache.wicket.request.IRequestHandler;\n import org.apache.wicket.request.component.IRequestablePage;\n@@ -18,6 +20,7 @@\n import org.devgateway.toolkit.forms.service.PermissionEntityRenderableService;\n import org.devgateway.toolkit.forms.service.SessionMetadataService;\n import org.devgateway.toolkit.forms.validators.BigDecimalValidator;\n+import org.devgateway.toolkit.forms.validators.UniquePropertyEntryValidator;\n import org.devgateway.toolkit.forms.wicket.components.form.AJAXDownload;\n import org.devgateway.toolkit.forms.wicket.components.form.CheckBoxBootstrapFormComponent;\n import org.devgateway.toolkit.forms.wicket.components.form.CheckBoxToggleBootstrapFormComponent;\n@@ -35,20 +38,23 @@\n import org.devgateway.toolkit.forms.wicket.page.edit.AbstractEditPage;\n import org.devgateway.toolkit.forms.wicket.page.edit.roleassignable.EditorValidatorRoleAssignable;\n import org.devgateway.toolkit.forms.wicket.providers.GenericPersistableJpaTextChoiceProvider;\n+import org.devgateway.toolkit.persistence.dao.AbstractAuditableEntity;\n import org.devgateway.toolkit.persistence.dao.DBConstants;\n import org.devgateway.toolkit.persistence.dao.GenericPersistable;\n import org.devgateway.toolkit.persistence.dao.Labelable;\n import org.devgateway.toolkit.persistence.dao.categories.Supplier;\n import org.devgateway.toolkit.persistence.dao.form.Bid;\n import org.devgateway.toolkit.persistence.dao.form.TenderProcess;\n import org.devgateway.toolkit.persistence.dao.form.TenderQuotationEvaluation;\n+import org.devgateway.toolkit.persistence.service.BaseJpaService;\n import org.devgateway.toolkit.persistence.service.TextSearchableService;\n import org.devgateway.toolkit.persistence.spring.PersistenceUtil;\n import org.devgateway.toolkit.web.security.SecurityConstants;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.wicketstuff.select2.ChoiceProvider;\n \n+import javax.persistence.metamodel.SingularAttribute;\n import javax.servlet.http.HttpServletResponse;\n import java.io.IOException;\n import java.io.InputStream;\n@@ -310,6 +316,19 @@ public static DateTimeFieldBootstrapFormComponent addDateTimeField(\n         return field;\n     }\n \n+    public static <C extends AbstractAuditableEntity>\n+    void addUniquePropertyEntryValidator(FormComponent<String> field,\n+                                         SingularAttribute<C, String> singularAttribute,\n+                                         BaseJpaService<C> jpaService,\n+                                         IModel<C> formModel,\n+                                         String message) {\n+        field.add(new UniquePropertyEntryValidator<>(message,\n+                jpaService::findAll,\n+                (o, v) -> (root, query, cb) -> cb.equal(cb.lower(root.get(singularAttribute)),\n+                        v.trim().toLowerCase()),\n+                formModel));\n+    }\n+\n     public static DateFieldBootstrapFormComponent addDateField(\n             final WebMarkupContainer parent,\n             final String id) {"
  },
  {
    "sha": "57c28af5eb6b9eed863d619100cf073ca8bb702a",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/events/SupplierChanged.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/events/SupplierChanged.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/events/SupplierChanged.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/events/SupplierChanged.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -0,0 +1,13 @@\n+package org.devgateway.toolkit.forms.wicket.events;\n+\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+\n+/**\n+ * @author Octavian Ciubotaru\n+ */\n+public final class SupplierChanged extends AjaxUpdateEvent {\n+\n+    public SupplierChanged(AjaxRequestTarget target) {\n+        super(target);\n+    }\n+}"
  },
  {
    "sha": "5f73b94593a98445ec4f84e84e4547111fd30ad9",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/BasePage.java",
    "status": "modified",
    "additions": 48,
    "deletions": 7,
    "changes": 55,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/BasePage.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/BasePage.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/BasePage.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -31,6 +31,7 @@\n import org.apache.commons.lang.StringUtils;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n+import org.apache.wicket.RestartResponseException;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.markup.head.CssHeaderItem;\n import org.apache.wicket.markup.head.IHeaderResponse;\n@@ -62,7 +63,7 @@\n import org.devgateway.toolkit.forms.wicket.components.GoogleAnalyticsTracker;\n import org.devgateway.toolkit.forms.wicket.components.util.ComponentUtil;\n import org.devgateway.toolkit.forms.wicket.page.edit.EditAdminSettingsPage;\n-import org.devgateway.toolkit.forms.wicket.page.lists.AbstractListPage;\n+import org.devgateway.toolkit.forms.wicket.page.lists.AbstractBaseListPage;\n import org.devgateway.toolkit.forms.wicket.page.lists.ListFiscalYearBudgetPage;\n import org.devgateway.toolkit.forms.wicket.page.lists.ListFiscalYearPage;\n import org.devgateway.toolkit.forms.wicket.page.lists.ListUserPage;\n@@ -101,6 +102,9 @@\n import org.devgateway.toolkit.forms.wicket.page.lists.form.ListPurchaseRequisitionGroupPage;\n import org.devgateway.toolkit.forms.wicket.page.lists.form.ListTenderPage;\n import org.devgateway.toolkit.forms.wicket.page.lists.form.ListTenderQuotationEvaluationPage;\n+import org.devgateway.toolkit.forms.wicket.page.lists.form.prequalification.ListPrequalificationSchemaPage;\n+import org.devgateway.toolkit.forms.wicket.page.lists.form.prequalification.ListPrequalificationYearRangePage;\n+import org.devgateway.toolkit.forms.wicket.page.lists.form.prequalification.ListPrequalifiedSupplierPage;\n import org.devgateway.toolkit.forms.wicket.page.user.EditUserPage;\n import org.devgateway.toolkit.forms.wicket.page.user.LogoutPage;\n import org.devgateway.toolkit.forms.wicket.styles.BaseStyles;\n@@ -158,6 +162,15 @@ protected void createGoogleAnalyticsTracker() {\n         add(googleAnalyticsTracker);\n     }\n \n+    /**\n+     * Do not allow access to pages that are attached to invisible features\n+     */\n+    protected void redirectForInvisibleFm() {\n+        if (!isFmVisible()) {\n+            throw new RestartResponseException(Homepage.class);\n+        }\n+    }\n+\n     @SpringBean\n     protected DgFmService fmService;\n \n@@ -282,10 +295,10 @@ public BasePage(final PageParameters parameters) {\n         createGoogleAnalyticsTracker();\n     }\n \n-    protected void createPrintLink() {\n+    protected Component createPrintLink(String id) {\n         PageParameters pp = new PageParameters(getPageParameters());\n         pp.set(PARAM_PRINT, true);\n-        printLink = new BootstrapBookmarkablePageLink<Void>(\"printLink\", BasePage.this.getClass(), pp,\n+        printLink = new BootstrapBookmarkablePageLink<Void>(id, BasePage.this.getClass(), pp,\n                 Buttons.Type.Default) {\n \n         };\n@@ -294,6 +307,7 @@ protected void createPrintLink() {\n         printLink.setPopupSettings(popupSettings);\n         add(printLink);\n         printLink.setVisibilityAllowed(!ComponentUtil.isPrintMode());\n+        return printLink;\n     }\n \n     private NotificationPanel createFeedbackPanel() {\n@@ -372,14 +386,14 @@ public NavbarDropDownButton newLanguageMenu() {\n     }\n \n \n-    private <L extends AbstractListPage> BootstrapBookmarkablePageLink<L>\n+    private <L extends AbstractBaseListPage<?>> BootstrapBookmarkablePageLink<L>\n     createListMenu(Class<L> clazz, String resourceKey, IconType iconType) {\n         return new MenuBookmarkablePageLink<L>(clazz, null,\n                 new StringResourceModel(resourceKey, this, null))\n                 .setIconType(iconType);\n     }\n \n-    private <L extends AbstractListPage> BootstrapBookmarkablePageLink<L>\n+    private <L extends AbstractBaseListPage<?>> BootstrapBookmarkablePageLink<L>\n     createAddListMenu(List<AbstractLink> list, Class<L> clazz, String resourceKey, IconType iconType) {\n \n         if (fmService.isFeatureVisible(resourceKey)) {\n@@ -392,7 +406,15 @@ public NavbarDropDownButton newLanguageMenu() {\n         return null;\n     }\n \n-    private <L extends AbstractListPage> void\n+    private <L extends AbstractBaseListPage<?>> void\n+    createAddFmListMenuWithRole(List<AbstractLink> list, String role, Class<L> clazz, String resourceKey,\n+                              IconType iconType) {\n+        if (fmService.isFeatureVisible(resourceKey)) {\n+            createAddListMenuWithRole(list, role, clazz, resourceKey, iconType);\n+        }\n+    }\n+\n+    private <L extends AbstractBaseListPage<?>> void\n     createAddListMenuWithRole(List<AbstractLink> list, String role, Class<L> clazz, String resourceKey,\n                               IconType iconType) {\n         BootstrapBookmarkablePageLink<L> menu = createAddListMenu(list, clazz, resourceKey, iconType);\n@@ -401,7 +423,7 @@ public NavbarDropDownButton newLanguageMenu() {\n         }\n     }\n \n-    private <L extends AbstractListPage> void\n+    private <L extends AbstractBaseListPage<?>> void\n     createAddListMenuWithRoles(List<AbstractLink> list, Collection<String> roles, Class<L> clazz, String resourceKey,\n                                IconType iconType) {\n         BootstrapBookmarkablePageLink<L> menu = createAddListMenu(list, clazz, resourceKey, iconType);\n@@ -491,6 +513,19 @@ private NavbarDropDownButton newMetadataMenu() {\n                         \"navbar.unitlist\", FontAwesomeIconType.list\n                 );\n \n+                createAddFmListMenuWithRole(list, ROLE_ADMIN, ListPrequalificationSchemaPage.class,\n+                        \"navbar.prequalificationSchema\", FontAwesomeIconType.list\n+                );\n+\n+                createAddFmListMenuWithRole(list, ROLE_ADMIN, ListPrequalificationYearRangePage.class,\n+                        \"navbar.prequalificationYearRange\", FontAwesomeIconType.list\n+                );\n+\n+                createAddFmListMenuWithRole(list, ROLE_ADMIN, ListPrequalifiedSupplierPage.class,\n+                        \"navbar.prequalifiedSupplierPage\", FontAwesomeIconType.list\n+                );\n+\n+\n                 return list;\n             }\n         };\n@@ -782,4 +817,10 @@ public void renderHead(final IHeaderResponse response) {\n         response.render(JavaScriptHeaderItem.forReference(new JavaScriptResourceReference(\n                 BaseStyles.class, \"assets/js/fileupload.js\")));\n     }\n+\n+    @Override\n+    protected void onInitialize() {\n+        super.onInitialize();\n+        redirectForInvisibleFm();\n+    }\n }"
  },
  {
    "sha": "45599f0f57b4e304e356b820340ce6172e1fb7ee",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/BasePage.properties",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/BasePage.properties",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/BasePage.properties",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/BasePage.properties?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -69,6 +69,9 @@ navbar.javamelody=Javamelody\n navbar.inspectionReport=Inspection Report\n navbar.fiscalYearBudget=Fiscal Year Budget\n navbar.procurementMethodRationale=Procurement Method Rationale\n+navbar.prequalificationSchema=Prequalification Schemas\n+navbar.prequalificationYearRange=Prequalification Year Ranges\n+navbar.prequalifiedSupplierPage=Prequalified Suppliers\n navbar.features=Features\n fileUnit.B=B\n fileUnit.KB=KB"
  },
  {
    "sha": "974ddfd3e627818f7626686885adc3f7d065c28f",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/AbstractEditPage.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/AbstractEditPage.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/AbstractEditPage.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/AbstractEditPage.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -646,8 +646,6 @@ public boolean hasNonRecoverableError() {\n     protected void onInitialize() {\n         super.onInitialize();\n \n-        createPrintLink();\n-\n         // we cant do anything if we dont have a jpaService here\n         if (jpaService == null) {\n             throw new NullJpaServiceException();\n@@ -673,6 +671,8 @@ protected void onInitialize() {\n             editForm.setCompoundPropertyModel(model);\n         }\n \n+        add(createPrintLink(\"printLink\"));\n+\n         afterLoad(model);\n     }\n \n@@ -685,4 +685,13 @@ public void renderHead(final IHeaderResponse response) {\n             response.render(JavaScriptHeaderItem.forReference(BlockUiJavaScript.INSTANCE));\n         }\n     }\n+\n+    @Override\n+    protected Component createPrintLink(String id) {\n+        Component printLink = super.createPrintLink(id);\n+        if (editForm.getModelObject().isNew()) {\n+            printLink.setVisibilityAllowed(false);\n+        }\n+        return printLink;\n+    }\n }"
  },
  {
    "sha": "7c03d917d06266c04824c58a34cfee80a0adc611",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/AbstractEditStatusEntityPage.java",
    "status": "modified",
    "additions": 44,
    "deletions": 6,
    "changes": 50,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/AbstractEditStatusEntityPage.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/AbstractEditStatusEntityPage.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/AbstractEditStatusEntityPage.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -42,6 +42,7 @@\n import org.apache.wicket.util.time.Duration;\n import org.apache.wicket.util.visit.IVisit;\n import org.apache.wicket.util.visit.IVisitor;\n+import org.devgateway.ocds.forms.wicket.FormSecurityUtil;\n import org.devgateway.toolkit.forms.WebConstants;\n import org.devgateway.toolkit.forms.wicket.components.form.BootstrapSubmitButton;\n import org.devgateway.toolkit.forms.wicket.components.form.CheckBoxYesNoToggleBootstrapFormComponent;\n@@ -141,6 +142,7 @@ protected void onSubmit(AjaxRequestTarget target) {\n             addButton(button);\n             button.setDefaultFormProcessing(false);\n             button.setLabel(buttonModel);\n+            enableDisableAutosaveFields(null);\n         }\n     }\n \n@@ -274,7 +276,9 @@ protected void checkAndSendEventForDisableEditing() {\n         }\n     }\n \n-    public abstract boolean isDisableEditingEvent();\n+    public boolean isDisableEditingEvent() {\n+        return !Strings.isEqual(editForm.getModelObject().getStatus(), DBConstants.Status.DRAFT) || isViewMode();\n+    }\n \n     protected abstract boolean isViewMode();\n \n@@ -661,6 +665,7 @@ protected void setButtonsPermissions() {\n         addApproveButtonPermissions(saveApproveButton);\n         addSaveRevertButtonPermissions(revertToDraftPageButton);\n         addDeleteButtonPermissions(deleteButton);\n+        addSaveNextButtonPermissions(submitAndNext);\n         addTerminateButtonPermissions(saveTerminateButton);\n \n         // no need to display the buttons on print view so we overwrite the above permissions\n@@ -674,15 +679,48 @@ protected void setButtonsPermissions() {\n         }\n     }\n \n-    protected abstract void addTerminateButtonPermissions(Component button);\n+    protected void addSaveNextButtonPermissions(Component button) {\n+        addDefaultAllButtonsPermissions(button);\n+    }\n \n-    protected abstract void addDeleteButtonPermissions(Component button);\n+    protected void addTerminateButtonPermissions(Component button) {\n+        addDefaultAllButtonsPermissions(button);\n+        if (editForm.getModelObject().isNew()) {\n+            button.setVisibilityAllowed(false);\n+        }\n+    }\n+\n+    protected void addDeleteButtonPermissions(Component button) {\n+        addDefaultAllButtonsPermissions(button);\n+        MetaDataRoleAuthorizationStrategy.authorize(button, Component.RENDER, SecurityConstants.Roles.ROLE_ADMIN);\n+        button.setVisibilityAllowed(entityId != null && !isTerminated() && !isViewMode());\n+    }\n \n-    protected abstract void addSaveRevertButtonPermissions(Component button);\n+    protected void addSaveRevertButtonPermissions(Component button) {\n+        addDefaultAllButtonsPermissions(button);\n \n-    protected abstract void addApproveButtonPermissions(Component button);\n+        button.setVisibilityAllowed(button.isVisibilityAllowed()\n+                && !DBConstants.Status.DRAFT.equals(editForm.getModelObject().getStatus()));\n \n-    protected abstract void addSaveButtonsPermissions(Component button);\n+        //admins can revert anything, including terminated, but only on the terminated form, not elsewhere!\n+        if (FormSecurityUtil.isCurrentUserAdmin()\n+                && ((!isTerminated() && DBConstants.Status.APPROVED.equals(editForm.getModelObject().getStatus()))\n+                || DBConstants.Status.TERMINATED.equals(editForm.getModelObject().getStatus()))) {\n+            button.setVisibilityAllowed(true);\n+        }\n+    }\n+\n+    protected void addApproveButtonPermissions(Component button) {\n+        addDefaultAllButtonsPermissions(button);\n+        button.setVisibilityAllowed(button.isVisibilityAllowed()\n+                && DBConstants.Status.SUBMITTED.equals(editForm.getModelObject().getStatus()));\n+    }\n+\n+    protected void addSaveButtonsPermissions(Component button) {\n+        addDefaultAllButtonsPermissions(button);\n+        button.setVisibilityAllowed(button.isVisibilityAllowed()\n+                && DBConstants.Status.DRAFT.equals(editForm.getModelObject().getStatus()));\n+    }\n \n     protected void addDefaultAllButtonsPermissions(final Component button) {\n         MetaDataRoleAuthorizationStrategy.authorize(button, Component.RENDER, SecurityConstants.Roles.ROLE_ADMIN);"
  },
  {
    "sha": "1ed2499a61cdf2650b38d7ba20bbd3992878796e",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/AbstractCategoryEditPage.html",
    "status": "modified",
    "additions": 3,
    "deletions": 5,
    "changes": 8,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/AbstractCategoryEditPage.html",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/AbstractCategoryEditPage.html",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/AbstractCategoryEditPage.html?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -2,11 +2,9 @@\n <html xmlns:wicket=\"http://wicket.apache.org\">\n <body>\n <wicket:extend>\n-    <div class=\"row\">\n-        <div class=\"col-md-12\">\n-            <div wicket:id=\"label\" class=\"col-md-6\"></div>\n-            <wicket:child/>\n-        </div>\n+    <div class=\"row display-flex\">\n+        <div wicket:id=\"label\" class=\"col-md-6\"></div>\n+        <wicket:child/>\n     </div>\n </wicket:extend>\n </body>"
  },
  {
    "sha": "da3af594d4cafae89639d1d02e26d1fe72a13f1d",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.html",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.html",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.html",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.html?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -3,7 +3,17 @@\n <body>\n <wicket:extend>\n     <div wicket:id=\"code\" class=\"col-md-6\"></div>\n-    <div wicket:id=\"targetGroup\" class=\"col-md-6\"></div>\n+    <div wicket:id=\"targetGroups\" class=\"col-md-6\"></div>\n+    <div wicket:id=\"agpoRegistrationId\" class=\"col-md-6\"></div>\n+    <div class=\"col-md-12\">\n+        <div wicket:id=\"contacts\" class=\"form-group\"></div>\n+    </div>\n+    <div class=\"col-md-12\">\n+        <div class=\"row\">\n+            <div wicket:id=\"subcounties\" class=\"col-md-6\"></div>\n+            <div wicket:id=\"wards\" class=\"col-md-6\"></div>\n+        </div>\n+    </div>\n     <div wicket:id=\"address\" class=\"col-md-12\"></div>\n </wicket:extend>\n </body>"
  },
  {
    "sha": "b3e9d40779f8028623944d06b49723d7e3f3bdb6",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.java",
    "status": "modified",
    "additions": 35,
    "deletions": 1,
    "changes": 36,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -4,15 +4,22 @@\n package org.devgateway.toolkit.forms.wicket.page.edit.category;\n \n import org.apache.wicket.authroles.authorization.strategies.role.annotations.AuthorizeInstantiation;\n+import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.devgateway.toolkit.forms.WebConstants;\n+import org.devgateway.toolkit.forms.wicket.behaviors.CountyAjaxFormComponentUpdatingBehavior;\n+import org.devgateway.toolkit.forms.wicket.components.form.Select2MultiChoiceBootstrapFormComponent;\n import org.devgateway.toolkit.forms.wicket.components.form.TextAreaFieldBootstrapFormComponent;\n import org.devgateway.toolkit.forms.wicket.components.util.ComponentUtil;\n import org.devgateway.toolkit.forms.wicket.page.lists.category.ListSupplierPage;\n+import org.devgateway.toolkit.persistence.dao.categories.Subcounty;\n import org.devgateway.toolkit.persistence.dao.categories.Supplier;\n+import org.devgateway.toolkit.persistence.dao.categories.Ward;\n+import org.devgateway.toolkit.persistence.service.category.SubcountyService;\n import org.devgateway.toolkit.persistence.service.category.SupplierService;\n import org.devgateway.toolkit.persistence.service.category.TargetGroupService;\n+import org.devgateway.toolkit.persistence.service.category.WardService;\n import org.devgateway.toolkit.web.security.SecurityConstants;\n import org.wicketstuff.annotation.mount.MountPath;\n \n@@ -29,6 +36,12 @@\n     @SpringBean\n     private TargetGroupService targetGroupService;\n \n+    @SpringBean\n+    private SubcountyService subcountyService;\n+\n+    @SpringBean\n+    private WardService wardService;\n+\n     public EditSupplierPage(final PageParameters parameters) {\n         super(parameters);\n         jpaService = supplierService;\n@@ -37,12 +50,33 @@ public EditSupplierPage(final PageParameters parameters) {\n \n     @Override\n     protected void onInitialize() {\n+        editForm.attachFm(\"supplierForm\");\n+\n         super.onInitialize();\n \n+        if (editForm.getModelObject().isNew()) {\n+            editForm.getModelObject().setLabel(getPageParameters().get(\"label\").toOptionalString());\n+        }\n+\n         addCode();\n         final TextAreaFieldBootstrapFormComponent<String> address = ComponentUtil.addTextAreaField(editForm, \"address\");\n         address.getField().add(WebConstants.StringValidators.MAXIMUM_LENGTH_VALIDATOR_ONE_LINE_TEXT);\n \n-        ComponentUtil.addSelect2ChoiceField(editForm, \"targetGroup\", targetGroupService);\n+        ComponentUtil.addSelect2MultiChoiceField(editForm, \"targetGroups\", targetGroupService);\n+\n+        Select2MultiChoiceBootstrapFormComponent<Ward> wards;\n+        wards = ComponentUtil.addSelect2MultiChoiceField(editForm, \"wards\", wardService);\n+\n+        Select2MultiChoiceBootstrapFormComponent<Subcounty> subcounties;\n+        subcounties = ComponentUtil.addSelect2MultiChoiceField(editForm, \"subcounties\", subcountyService);\n+        subcounties.getField()\n+                .add(new CountyAjaxFormComponentUpdatingBehavior<>(subcounties, wards,\n+                        LoadableDetachableModel.of(() -> wardService), editForm.getModelObject()::setWards,\n+                        \"change\"\n+                ));\n+\n+        ComponentUtil.addTextField(editForm, \"agpoRegistrationId\");\n+\n+        editForm.add(new SupplierContactsPanel(\"contacts\"));\n     }\n }"
  },
  {
    "sha": "c17c4ec99dbb318968e64351ebd46317aab8f524",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.properties",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.properties",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.properties",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/EditSupplierPage.properties?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -2,6 +2,10 @@ page.title=Edit Supplier\n label.label=Supplier Name\n code.label=Supplier Code\n address.label=Address\n-targetGroup.label=Target Group\n+targetGroups.label=Target Groups\n uniqueCode=A supplier with the same code already exists!\n uniqueLabel=A supplier with the same name already exists!\n+subcounties.label=Subcounties\n+wards.label=Wards\n+agpoRegistrationId.label=AGPO Registration ID\n+contacts.label=Contacts"
  },
  {
    "sha": "3e782dd65e0221d6a622c4326b3b9c290a741cd5",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.html",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.html",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.html",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.html?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+<body>\n+<wicket:extend>\n+    <div wicket:id=\"contact\"></div>\n+</wicket:extend>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "298a37ca114e0eaf69d562ad93294d953e54ed2b",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.java",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.java",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.java?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -0,0 +1,45 @@\n+package org.devgateway.toolkit.forms.wicket.page.edit.category;\n+\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.devgateway.toolkit.forms.wicket.components.ListViewSectionPanel;\n+import org.devgateway.toolkit.forms.wicket.page.edit.panel.ContactPanel;\n+import org.devgateway.toolkit.persistence.dao.categories.Supplier;\n+import org.devgateway.toolkit.persistence.dao.prequalification.SupplierContact;\n+\n+/**\n+ * @author Octavian Ciubotaru\n+ */\n+public class SupplierContactsPanel extends ListViewSectionPanel<SupplierContact, Supplier> {\n+\n+    public SupplierContactsPanel(String id) {\n+        super(id);\n+    }\n+\n+    @Override\n+    public SupplierContact createNewChild(IModel<Supplier> parentModel) {\n+        return new SupplierContact(parentModel.getObject());\n+    }\n+\n+    @Override\n+    public void populateCompoundListItem(ListItem<SupplierContact> item) {\n+        item.add(new ContactPanel<SupplierContact>(\"contact\", item.getModel()) {\n+            @Override\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                super.onUpdate(target);\n+                target.add(findHeaderField(item));\n+            }\n+        });\n+    }\n+\n+    @Override\n+    protected Component createHeaderField(String id, CompoundPropertyModel<SupplierContact> compoundModel) {\n+        Label label = new Label(id, compoundModel);\n+        label.setOutputMarkupId(true);\n+        return label;\n+    }\n+}"
  },
  {
    "sha": "3402177179ffbb36bc7a2a1ea1233a63922f91b3",
    "filename": "forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.properties",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/devgateway/forms-makueni/blob/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.properties",
    "raw_url": "https://github.com/devgateway/forms-makueni/raw/ed992e01be4e02f686948a0c904f1620f7fffc89/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.properties",
    "contents_url": "https://api.github.com/repos/devgateway/forms-makueni/contents/forms/src/main/java/org/devgateway/toolkit/forms/wicket/page/edit/category/SupplierContactsPanel.properties?ref=ed992e01be4e02f686948a0c904f1620f7fffc89",
    "patch": "@@ -0,0 +1 @@\n+newButton=New Contact"
  }
]
