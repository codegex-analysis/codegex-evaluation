[
  {
    "sha": "c69a19981e82db1284f1c156bdb06e522acb3af5",
    "filename": "opendb-api/src/main/resources/application.yml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/OpenPlaceReviews/opendb/blob/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-api/src/main/resources/application.yml",
    "raw_url": "https://github.com/OpenPlaceReviews/opendb/raw/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-api/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/OpenPlaceReviews/opendb/contents/opendb-api/src/main/resources/application.yml?ref=fa5a073537d23adb85d697d0bb59bc537a5433fa",
    "patch": "@@ -46,8 +46,8 @@ logging:\n \n server:\n   tomcat.max-threads: 50\n-  tomcat.max-http-post-size=100000000\n-  tomcat.max-swallow-size=100000000\n+  tomcat.max-http-post-size: 100000000\n+  tomcat.max-swallow-size: 100000000\n   address: ${SERVER_ADDRESS:127.0.0.1} #keep it behind proxy\n   tomcat:\n     protocol_header: x-forwarded-proto"
  },
  {
    "sha": "3a2b1cdb8f695664079f6fe5fbe9d91dee24fd97",
    "filename": "opendb-core/src/main/java/org/openplacereviews/opendb/ops/OpBlockChain.java",
    "status": "modified",
    "additions": 11,
    "deletions": 3,
    "changes": 14,
    "blob_url": "https://github.com/OpenPlaceReviews/opendb/blob/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/main/java/org/openplacereviews/opendb/ops/OpBlockChain.java",
    "raw_url": "https://github.com/OpenPlaceReviews/opendb/raw/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/main/java/org/openplacereviews/opendb/ops/OpBlockChain.java",
    "contents_url": "https://api.github.com/repos/OpenPlaceReviews/opendb/contents/opendb-core/src/main/java/org/openplacereviews/opendb/ops/OpBlockChain.java?ref=fa5a073537d23adb85d697d0bb59bc537a5433fa",
    "patch": "@@ -14,6 +14,8 @@\n import java.util.Map.Entry;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentLinkedDeque;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n import java.util.stream.Stream;\n \n import static org.openplacereviews.opendb.ops.OpBlock.*;\n@@ -52,8 +54,9 @@\n \tpublic static final String OP_CHANGE_APPEND = \"append\";\n \tpublic static final String OP_CHANGE_APPENDMANY = \"appendmany\";\n \tpublic static final String OP_CHANGE_SET = \"set\";\n-\t\n-\t\n+\n+\tpublic static final String OP_CHANGE_DELETE_OBJ = \"45de018e-46b0-4889-9745-71aa807ce8ff-\";\n+\n \tpublic static final int LOCKED_ERROR = -1; // means it is locked and there was unrecoverable error during atomic operation\n \tpublic static final int UNLOCKED =  0; // unlocked and ready for operations\n \tpublic static final int LOCKED_OP_IN_PROGRESS = 1; // operation on blockchain is in progress and it will be unlocked after\n@@ -995,6 +998,7 @@ private boolean prepareEditedObjects(OpOperation u, LocalValidationCtx ctx) {\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n+\t\t\tboolean hasDeleteOps = false;\n \t\t\tMap<String, Object> changedMap = editObject.getChangedEditFields();\n \t\t\tfor (Map.Entry<String, Object> e : changedMap.entrySet()) {\n \t\t\t\t// evaluate changes for new object\n@@ -1010,7 +1014,8 @@ private boolean prepareEditedObjects(OpOperation u, LocalValidationCtx ctx) {\n \t\t\t\ttry {\n \t\t\t\t\tboolean checkCurrentFieldSpecified = false;\n \t\t\t\t\tif (OP_CHANGE_DELETE.equals(opId)) {\n-\t\t\t\t\t\tnewObject.setFieldByExpr(fieldExpr, null);\n+\t\t\t\t\t\tnewObject.setFieldByExpr(fieldExpr, OP_CHANGE_DELETE_OBJ);\n+\t\t\t\t\t\thasDeleteOps = true;\n \t\t\t\t\t\tcheckCurrentFieldSpecified = true;\n \t\t\t\t\t} else if (OP_CHANGE_SET.equals(opId)) {\n \t\t\t\t\t\tnewObject.setFieldByExpr(fieldExpr, opValue);\n@@ -1072,6 +1077,9 @@ private boolean prepareEditedObjects(OpOperation u, LocalValidationCtx ctx) {\n \t\t\t\t\treturn rules.error(u, ErrorType.EDIT_OBJ_NOT_FOUND, u.getHash(), fieldExpr + \" \" + ex.getMessage());\n \t\t\t\t}\n \t\t\t}\n+\t\t\tif (hasDeleteOps) {\n+\t\t\t\tnewObject.deleteFieldsByObject(OP_CHANGE_DELETE_OBJ);\n+\t\t\t}\n \t\t\tnewObject.parentHash = u.getRawHash();\n \t\t\tnewObject.makeImmutable();\n \t\t\tctx.newObjsCache.put(newObject, currentObject);"
  },
  {
    "sha": "e18b7b336d2d4877e44286969dba808772c19976",
    "filename": "opendb-core/src/main/java/org/openplacereviews/opendb/ops/OpObject.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/OpenPlaceReviews/opendb/blob/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/main/java/org/openplacereviews/opendb/ops/OpObject.java",
    "raw_url": "https://github.com/OpenPlaceReviews/opendb/raw/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/main/java/org/openplacereviews/opendb/ops/OpObject.java",
    "contents_url": "https://api.github.com/repos/OpenPlaceReviews/opendb/contents/opendb-core/src/main/java/org/openplacereviews/opendb/ops/OpObject.java?ref=fa5a073537d23adb85d697d0bb59bc537a5433fa",
    "patch": "@@ -233,6 +233,9 @@ public void setFieldByExpr(String field, Object object) {\n \t\t}\n \t}\n \n+\tpublic void deleteFieldsByObject(Object object) {\n+\t\tJsonObjectUtils.deleteFieldsByObject(this.fields, object);\n+\t}\n \t\n \tpublic Object getCacheObject(String f) {\n \t\tif(cacheFields == null) {"
  },
  {
    "sha": "987a671379194e8285b7a9b6e5ca0825ab626869",
    "filename": "opendb-core/src/main/java/org/openplacereviews/opendb/util/JsonObjectUtils.java",
    "status": "modified",
    "additions": 34,
    "deletions": 1,
    "changes": 35,
    "blob_url": "https://github.com/OpenPlaceReviews/opendb/blob/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/main/java/org/openplacereviews/opendb/util/JsonObjectUtils.java",
    "raw_url": "https://github.com/OpenPlaceReviews/opendb/raw/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/main/java/org/openplacereviews/opendb/util/JsonObjectUtils.java",
    "contents_url": "https://api.github.com/repos/OpenPlaceReviews/opendb/contents/opendb-core/src/main/java/org/openplacereviews/opendb/util/JsonObjectUtils.java?ref=fa5a073537d23adb85d697d0bb59bc537a5433fa",
    "patch": "@@ -1,6 +1,7 @@\n package org.openplacereviews.opendb.util;\n \n import java.util.*;\n+import java.util.Map.Entry;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -89,7 +90,39 @@ public static Object deleteField(Map<String, Object> jsonMap, List<String> field\n \t\treturn accessField(jsonMap, fieldSequence.toArray(new String[fieldSequence.size()]), new OperationAccess(DELETE_OPERATION, null));\n \t}\n \n-\t\n+\t/**\n+\t * Delete fields having defined value from json Map\n+\t *\n+\t * @param obj              source json object deserialized in map\n+\t * @param objectToDelete   value of field\n+\t * @return\n+\t */\n+\t@SuppressWarnings(\"unchecked\")\n+\tpublic static void deleteFieldsByObject(Object obj, Object objectToDelete) {\n+\t\tif (obj instanceof Map) {\n+\t\t\tIterator<Entry<String, Object>> it = ((Map<String, Object>) obj).entrySet().iterator();\n+\t\t\twhile (it.hasNext()) {\n+\t\t\t\tEntry<String, Object> entry = it.next();\n+\t\t\t\tObject object = entry.getValue();\n+\t\t\t\tif (object instanceof Map || object instanceof List) {\n+\t\t\t\t\tdeleteFieldsByObject(object, objectToDelete);\n+\t\t\t\t} else if (objectToDelete.equals(object)) {\n+\t\t\t\t\tit.remove();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} else if (obj instanceof List) {\n+\t\t\tIterator<Object> it = ((List<Object>) obj).iterator();\n+\t\t\twhile (it.hasNext()) {\n+\t\t\t\tObject object = it.next();\n+\t\t\t\tif (object instanceof Map || object instanceof List) {\n+\t\t\t\t\tdeleteFieldsByObject(object, objectToDelete);\n+\t\t\t\t} else if (objectToDelete.equals(object)) {\n+\t\t\t\t\tit.remove();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n \t@SuppressWarnings(\"unchecked\")\n \tprivate static Object accessField(Map<String, Object> jsonObject, String[] fieldSequence, OperationAccess op) {\n \t\tif (fieldSequence == null || fieldSequence.length == 0) {"
  },
  {
    "sha": "1e81f8531e0858df608d75774609f30226aaf60b",
    "filename": "opendb-core/src/test/java/org/openplacereviews/opendb/ObjectGeneratorTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/OpenPlaceReviews/opendb/blob/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/test/java/org/openplacereviews/opendb/ObjectGeneratorTest.java",
    "raw_url": "https://github.com/OpenPlaceReviews/opendb/raw/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/test/java/org/openplacereviews/opendb/ObjectGeneratorTest.java",
    "contents_url": "https://api.github.com/repos/OpenPlaceReviews/opendb/contents/opendb-core/src/test/java/org/openplacereviews/opendb/ObjectGeneratorTest.java?ref=fa5a073537d23adb85d697d0bb59bc537a5433fa",
    "patch": "@@ -19,10 +19,7 @@\n import java.sql.DatabaseMetaData;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.Objects;\n+import java.util.*;\n \n import static org.openplacereviews.opendb.VariableHelperTest.serverKeyPair;\n import static org.openplacereviews.opendb.VariableHelperTest.serverName;\n@@ -42,6 +39,9 @@\n \tpublic static String[] VOTING_LIST =\n \t\t\tnew String[] {\"opr-0-test-user\", \"std-roles\", \"opr-0-test-grant\", \"voting-validation\"};\n \n+\tpublic static String[] MULTIPLE_DELETE_LIST =\n+\t\t\tnew String[] {\"ops-multiple-delete-test\"};\n+\n \tpublic static void generateUserOperations(JsonFormatter formatter, OpBlockChain blc) throws\n \t\t\tFailedVerificationException {\n \t\taddOperationFromList(formatter, blc, USER_LIST);"
  },
  {
    "sha": "aae762506a387ecec6457f154fb3b51de519d084",
    "filename": "opendb-core/src/test/java/org/openplacereviews/opendb/ops/OpBlockchainTest.java",
    "status": "modified",
    "additions": 12,
    "deletions": 5,
    "changes": 17,
    "blob_url": "https://github.com/OpenPlaceReviews/opendb/blob/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/test/java/org/openplacereviews/opendb/ops/OpBlockchainTest.java",
    "raw_url": "https://github.com/OpenPlaceReviews/opendb/raw/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/test/java/org/openplacereviews/opendb/ops/OpBlockchainTest.java",
    "contents_url": "https://api.github.com/repos/OpenPlaceReviews/opendb/contents/opendb-core/src/test/java/org/openplacereviews/opendb/ops/OpBlockchainTest.java?ref=fa5a073537d23adb85d697d0bb59bc537a5433fa",
    "patch": "@@ -6,14 +6,11 @@\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n-import static org.openplacereviews.opendb.ObjectGeneratorTest.generateOperations;\n+import static org.openplacereviews.opendb.ObjectGeneratorTest.*;\n import static org.openplacereviews.opendb.VariableHelperTest.serverKeyPair;\n import static org.openplacereviews.opendb.VariableHelperTest.serverName;\n \n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.*;\n \n import org.junit.Before;\n import org.junit.Rule;\n@@ -410,6 +407,16 @@ public void testCreatingACopyOfObject() {\n \t\tassertNotEquals(copy.getId(), old.getId());\n \t}\n \n+\t@Test\n+\tpublic void testCreateAndEditObject() throws FailedVerificationException {\n+\t\tJsonFormatter formatter = new JsonFormatter();\n+\t\tgenerateOperationsByList(formatter, blc, MULTIPLE_DELETE_LIST);\n+\t\tOpObject opObject = blc.getObjectByName(\"osm.place\",\"8FW97P\", \"wdhpik\");\n+\t\tint countEl = ((List)opObject.getStringListObjMap(\"images\").get(\"review\")).size();\n+\n+\t\tassertEquals( 3, countEl);\n+\t}\n+\n \tprivate OpObject generateTestOpObject() {\n \t\tOpObject opObject = new OpObject();\n \t\topObject.setId(\"some id\");"
  },
  {
    "sha": "1e944f7b959142c6a20b424e94f0fae7547eef5d",
    "filename": "opendb-core/src/test/resources/bootstrap/ops-multiple-delete-test.json",
    "status": "added",
    "additions": 397,
    "deletions": 0,
    "changes": 397,
    "blob_url": "https://github.com/OpenPlaceReviews/opendb/blob/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/test/resources/bootstrap/ops-multiple-delete-test.json",
    "raw_url": "https://github.com/OpenPlaceReviews/opendb/raw/fa5a073537d23adb85d697d0bb59bc537a5433fa/opendb-core/src/test/resources/bootstrap/ops-multiple-delete-test.json",
    "contents_url": "https://api.github.com/repos/OpenPlaceReviews/opendb/contents/opendb-core/src/test/resources/bootstrap/ops-multiple-delete-test.json?ref=fa5a073537d23adb85d697d0bb59bc537a5433fa",
    "patch": "@@ -0,0 +1,397 @@\n+[\n+  {\n+    \"type\" : \"osm.place\",\n+    \"create\": [\n+      {\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ],\n+        \"source\": {\n+          \"osm\": [\n+            {\n+              \"changeset\": \"32438066\",\n+              \"id\": 227631026,\n+              \"lat\": 48.27170487827352,\n+              \"lon\": 7.716907357134784,\n+              \"osm_tag\": \"amenity\",\n+              \"osm_value\": \"biergarten\",\n+              \"tags\": {\n+                \"amenity\": \"biergarten\"\n+              },\n+              \"timestamp\": \"2015-07-06T00:18:20Z\",\n+              \"type\": \"way\",\n+              \"version\": \"4\"\n+            }\n+          ],\n+          \"old-osm-ids\": []\n+        },\n+        \"version\": 2\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review\": {\n+            \"append\": {\n+              \"cid\": \"Qme35CpDmPGdgjHyS5b5cvaNUMG35T24eXPna8veEpLY48\",\n+              \"extension\": \"jpeg\",\n+              \"hash\": \"6ec6c4a14fd80c787c85da1b25ba615ff3b283c4c9edd91d5e497e1446f5ea59\",\n+              \"type\": \"#image\"\n+            }\n+          },\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {},\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review\": {\n+            \"append\": {\n+              \"cid\": \"QmfVSSREh75SyFDekRUBLaLEHf9Ps1U8oocy54CjEHfbke\",\n+              \"extension\": \"jpeg\",\n+              \"hash\": \"14758ea58ca56c43a867ef781a4027368d688d922eec4c0ea530196c6991a9d3\",\n+              \"type\": \"#image\"\n+            }\n+          },\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {},\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review\": {\n+            \"append\": {\n+              \"cid\": \"QmfMYuJBwuoyBp6xdK2rKxWpuGncUDvN1Qzg1quBM57rEj\",\n+              \"extension\": \"jpeg\",\n+              \"hash\": \"08fa918090b3acd937081eeea367ab6ff25ca4b2a76f4d2791f1dc7a04e8d4d4\",\n+              \"type\": \"#image\"\n+            }\n+          },\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {},\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review\": {\n+            \"append\": {\n+              \"cid\": \"QmUkwmTNNWpM2QxdQY8DrBftogy2sE5cs8mbNyh3CrSATa\",\n+              \"extension\": \"jpeg\",\n+              \"hash\": \"7a44a7f9072b19276a75e94d879cb18c5c624ff4d18e317bab2aedcf554f660c\",\n+              \"type\": \"#image\"\n+            }\n+          },\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {},\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review\": {\n+            \"append\": {\n+              \"cid\": \"QmNzAP9wbkHFarJqMiQX6JkNWhR3pDrEfvBEskHppHBeeg\",\n+              \"extension\": \"jpeg\",\n+              \"hash\": \"ff1cffc4cceb8174d3a4d700b6ea4215f9b1bbac004d2f5849c62de6d3d24f09\",\n+              \"type\": \"#image\"\n+            }\n+          },\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {},\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review\": {\n+            \"append\": {\n+              \"cid\": \"QmeJBX49DkzQrqWExJ92wckDEe7h3XKSnpXpofZ6jJz2rA\",\n+              \"extension\": \"jpeg\",\n+              \"hash\": \"7a48efb618bd8d597797584a941031bdb2a3295a5a8a33276eb0c5c96e3fe993\",\n+              \"type\": \"#image\"\n+            }\n+          },\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {},\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review\": {\n+            \"append\": {\n+              \"cid\": \"QmViByYWYqiohmNm7Wu7doyumZJ6rjWojR2Ufg45uDbsVq\",\n+              \"extension\": \"jpeg\",\n+              \"hash\": \"2bb71424b3352d58570d6b5267a1e87b40501ac0002639ac366e11d66d7f9ba6\",\n+              \"type\": \"#image\"\n+            }\n+          },\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {},\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review\": {\n+            \"append\": {\n+              \"cid\": \"QmVQ6ZzprLYHQvwDLdUf74554eahaFEigwpqsGSShYRpbn\",\n+              \"extension\": \"jpeg\",\n+              \"hash\": \"d9db1b05d719d35f3a4696fb879dfd56d0d94a67a9c457412d16092e7fcab437\",\n+              \"type\": \"#image\"\n+            }\n+          },\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {},\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review\": {\n+            \"append\": {\n+              \"cid\": \"QmWFcCsjkRgEcVZ9yJySNPXhUc5WH5iC8dCpAdtGUKekQk\",\n+              \"extension\": \"jpeg\",\n+              \"hash\": \"efcce7eaf9858773d68b0b7863ece65bbbfcdc4b719eacbfb2ac8b96d6925ba4\",\n+              \"type\": \"#image\"\n+            }\n+          },\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {\n+        },\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review\": {\n+            \"append\": {\n+              \"cid\": \"QmYbBhDg1Wx3CEazewcXqPAYjkhbsC12BswewoVxGQNnQE\",\n+              \"extension\": \"jpeg\",\n+              \"hash\": \"903ab7822393db008cd3e0417c87c49b49de04278c99e4e2ef44850d3ae2fd74\",\n+              \"type\": \"#image\"\n+            }\n+          },\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {\n+        },\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.review[4]\": \"delete\",\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {\n+          \"images.review[4]\": {\n+            \"cid\": \"QmNzAP9wbkHFarJqMiQX6JkNWhR3pDrEfvBEskHppHBeeg\",\n+            \"extension\": \"jpeg\",\n+            \"hash\": \"ff1cffc4cceb8174d3a4d700b6ea4215f9b1bbac004d2f5849c62de6d3d24f09\",\n+            \"type\": \"#image\"\n+          }\n+        },\n+        \"eval\": {\n+          \"parentHash\": \"854fc03a7492fb6611c54608d45fda8a5366b1bb06e35efb4721dc171662c88b\",\n+          \"parentType\": \"opr.place\"\n+        },\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ],\n+    \"eval\": {\n+      \"timestamp\": 1614529265822\n+    }\n+  },\n+  {\n+    \"type\" : \"osm.place\",\n+    \"edit\": [\n+      {\n+        \"change\": {\n+          \"images.outdoor\": {\n+            \"appendmany\": [\n+              {\n+                \"cid\": \"Qme35CpDmPGdgjHyS5b5cvaNUMG35T24eXPna8veEpLY48\",\n+                \"extension\": \"jpeg\",\n+                \"hash\": \"6ec6c4a14fd80c787c85da1b25ba615ff3b283c4c9edd91d5e497e1446f5ea59\",\n+                \"type\": \"#image\"\n+              },\n+              {\n+                \"cid\": \"QmfVSSREh75SyFDekRUBLaLEHf9Ps1U8oocy54CjEHfbke\",\n+                \"extension\": \"jpeg\",\n+                \"hash\": \"14758ea58ca56c43a867ef781a4027368d688d922eec4c0ea530196c6991a9d3\",\n+                \"type\": \"#image\"\n+              },\n+              {\n+                \"cid\": \"QmViByYWYqiohmNm7Wu7doyumZJ6rjWojR2Ufg45uDbsVq\",\n+                \"extension\": \"jpeg\",\n+                \"hash\": \"2bb71424b3352d58570d6b5267a1e87b40501ac0002639ac366e11d66d7f9ba6\",\n+                \"type\": \"#image\"\n+              },\n+              {\n+                \"cid\": \"QmVQ6ZzprLYHQvwDLdUf74554eahaFEigwpqsGSShYRpbn\",\n+                \"extension\": \"jpeg\",\n+                \"hash\": \"d9db1b05d719d35f3a4696fb879dfd56d0d94a67a9c457412d16092e7fcab437\",\n+                \"type\": \"#image\"\n+              },\n+              {\n+                \"cid\": \"QmWFcCsjkRgEcVZ9yJySNPXhUc5WH5iC8dCpAdtGUKekQk\",\n+                \"extension\": \"jpeg\",\n+                \"hash\": \"efcce7eaf9858773d68b0b7863ece65bbbfcdc4b719eacbfb2ac8b96d6925ba4\",\n+                \"type\": \"#image\"\n+              },\n+              {\n+                \"cid\": \"QmYbBhDg1Wx3CEazewcXqPAYjkhbsC12BswewoVxGQNnQE\",\n+                \"extension\": \"jpeg\",\n+                \"hash\": \"903ab7822393db008cd3e0417c87c49b49de04278c99e4e2ef44850d3ae2fd74\",\n+                \"type\": \"#image\"\n+              }\n+            ]\n+          },\n+          \"images.review[0]\": \"delete\",\n+          \"images.review[1]\": \"delete\",\n+          \"images.review[5]\": \"delete\",\n+          \"images.review[6]\": \"delete\",\n+          \"images.review[7]\": \"delete\",\n+          \"images.review[8]\": \"delete\",\n+          \"version\": \"increment\"\n+        },\n+        \"current\": {\n+          \"images.review[0]\": {\n+            \"cid\": \"Qme35CpDmPGdgjHyS5b5cvaNUMG35T24eXPna8veEpLY48\",\n+            \"extension\": \"jpeg\",\n+            \"hash\": \"6ec6c4a14fd80c787c85da1b25ba615ff3b283c4c9edd91d5e497e1446f5ea59\",\n+            \"type\": \"#image\"\n+          },\n+          \"images.review[1]\": {\n+            \"cid\": \"QmfVSSREh75SyFDekRUBLaLEHf9Ps1U8oocy54CjEHfbke\",\n+            \"extension\": \"jpeg\",\n+            \"hash\": \"14758ea58ca56c43a867ef781a4027368d688d922eec4c0ea530196c6991a9d3\",\n+            \"type\": \"#image\"\n+          },\n+          \"images.review[5]\": {\n+            \"cid\": \"QmViByYWYqiohmNm7Wu7doyumZJ6rjWojR2Ufg45uDbsVq\",\n+            \"extension\": \"jpeg\",\n+            \"hash\": \"2bb71424b3352d58570d6b5267a1e87b40501ac0002639ac366e11d66d7f9ba6\",\n+            \"type\": \"#image\"\n+          },\n+          \"images.review[6]\": {\n+            \"cid\": \"QmVQ6ZzprLYHQvwDLdUf74554eahaFEigwpqsGSShYRpbn\",\n+            \"extension\": \"jpeg\",\n+            \"hash\": \"d9db1b05d719d35f3a4696fb879dfd56d0d94a67a9c457412d16092e7fcab437\",\n+            \"type\": \"#image\"\n+          },\n+          \"images.review[7]\": {\n+            \"cid\": \"QmWFcCsjkRgEcVZ9yJySNPXhUc5WH5iC8dCpAdtGUKekQk\",\n+            \"extension\": \"jpeg\",\n+            \"hash\": \"efcce7eaf9858773d68b0b7863ece65bbbfcdc4b719eacbfb2ac8b96d6925ba4\",\n+            \"type\": \"#image\"\n+          },\n+          \"images.review[8]\": {\n+            \"cid\": \"QmYbBhDg1Wx3CEazewcXqPAYjkhbsC12BswewoVxGQNnQE\",\n+            \"extension\": \"jpeg\",\n+            \"hash\": \"903ab7822393db008cd3e0417c87c49b49de04278c99e4e2ef44850d3ae2fd74\",\n+            \"type\": \"#image\"\n+          }\n+        },\n+        \"eval\": {\n+          \"parentHash\": \"4d81f08d4a407227e10b46febbf47957756eaf09193cdb756afc82d837f844ba\",\n+          \"parentType\": \"opr.place\"\n+        },\n+        \"id\": [\n+          \"8FW97P\",\n+          \"wdhpik\"\n+        ]\n+      }\n+    ]\n+  }\n+]\n\\ No newline at end of file"
  }
]
