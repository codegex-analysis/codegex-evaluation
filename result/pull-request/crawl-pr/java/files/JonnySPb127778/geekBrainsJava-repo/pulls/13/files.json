[
  {
    "sha": "baaf86aac3a964d0cea9b6a47215d496ec4cbbe3",
    "filename": "Java3_HW_7/AfterSuit.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/blob/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/AfterSuit.java",
    "raw_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/raw/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/AfterSuit.java",
    "contents_url": "https://api.github.com/repos/JonnySPb127778/geekBrainsJava-repo/contents/Java3_HW_7/AfterSuit.java?ref=0cf9515a37ff1f300f8640decdaeade684839d2e",
    "patch": "@@ -0,0 +1,6 @@\n+import java.lang.annotation.*;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.METHOD)\n+public @interface AfterSuit {\n+}"
  },
  {
    "sha": "86835dc35c49c125312aa34450727daba29efbb4",
    "filename": "Java3_HW_7/BeforeSuit.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/blob/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/BeforeSuit.java",
    "raw_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/raw/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/BeforeSuit.java",
    "contents_url": "https://api.github.com/repos/JonnySPb127778/geekBrainsJava-repo/contents/Java3_HW_7/BeforeSuit.java?ref=0cf9515a37ff1f300f8640decdaeade684839d2e",
    "patch": "@@ -0,0 +1,6 @@\n+import java.lang.annotation.*;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.METHOD)\n+public @interface BeforeSuit {\n+}"
  },
  {
    "sha": "b895226fda619b74aadd2567a8b5268e92226cb1",
    "filename": "Java3_HW_7/Logic.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/blob/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/Logic.java",
    "raw_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/raw/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/Logic.java",
    "contents_url": "https://api.github.com/repos/JonnySPb127778/geekBrainsJava-repo/contents/Java3_HW_7/Logic.java?ref=0cf9515a37ff1f300f8640decdaeade684839d2e",
    "patch": "@@ -0,0 +1,44 @@\n+public class Logic {\n+\n+    private static boolean a;\n+    private static boolean b;\n+\n+    public Logic(boolean a, boolean b){\n+        this.a = a;\n+        this.b = b;\n+    }\n+\n+    public static boolean logicAND(){\n+        return a && b;\n+    }\n+\n+    public static boolean logicNotAND(){\n+        return !(a && b);\n+    }\n+\n+    public static boolean logicOR(){\n+        return a || b;\n+    }\n+\n+    public static boolean logicNotOR(){\n+        return !(a || b);\n+    }\n+\n+    public static boolean logicXOR(){\n+        return a ^ b;\n+    }\n+\n+    public static boolean logicNotXOR(){\n+        return !(a ^ b);\n+    }\n+\n+    public static void reset(){\n+        a = false;\n+        b = false;\n+    }\n+\n+    public static void view(){\n+        System.out.print(\"a = \" + a + \"   b = \" + b + \"    \");\n+    }\n+\n+}"
  },
  {
    "sha": "7132b2e54fe02688d5fe97a831edb131392adea7",
    "filename": "Java3_HW_7/Main.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/blob/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/Main.java",
    "raw_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/raw/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/Main.java",
    "contents_url": "https://api.github.com/repos/JonnySPb127778/geekBrainsJava-repo/contents/Java3_HW_7/Main.java?ref=0cf9515a37ff1f300f8640decdaeade684839d2e",
    "patch": "@@ -0,0 +1,7 @@\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class Main {\n+    public static void main(String[] args) throws InvocationTargetException, IllegalAccessException {\n+        TestRunner.start (Tests.class);\n+    }\n+}"
  },
  {
    "sha": "9e91e7a0640c69bbaa989aa00dde4df13b677513",
    "filename": "Java3_HW_7/Test.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/blob/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/Test.java",
    "raw_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/raw/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/Test.java",
    "contents_url": "https://api.github.com/repos/JonnySPb127778/geekBrainsJava-repo/contents/Java3_HW_7/Test.java?ref=0cf9515a37ff1f300f8640decdaeade684839d2e",
    "patch": "@@ -0,0 +1,7 @@\n+import java.lang.annotation.*;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.METHOD)\n+public @interface Test {\n+    int priority() default 5;\n+}"
  },
  {
    "sha": "bcb87ff5efb2c973b472f702ed05257811bbfe12",
    "filename": "Java3_HW_7/TestRunner.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/blob/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/TestRunner.java",
    "raw_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/raw/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/TestRunner.java",
    "contents_url": "https://api.github.com/repos/JonnySPb127778/geekBrainsJava-repo/contents/Java3_HW_7/TestRunner.java?ref=0cf9515a37ff1f300f8640decdaeade684839d2e",
    "patch": "@@ -0,0 +1,40 @@\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.List;\n+\n+public class TestRunner {\n+    public static void start (Class testX) throws InvocationTargetException, IllegalAccessException {\n+        List<Method> testMethods = new ArrayList<>();\n+        Method[] declaredMethods = testX.getDeclaredMethods();\n+        for (Method declaredMethod : declaredMethods) {\n+            if(declaredMethod.isAnnotationPresent(Test.class)) {\n+                testMethods.add(declaredMethod);\n+            }\n+        }\n+\n+        testMethods.sort(Comparator.comparingInt((Method m)->m.getAnnotation(Test.class).priority()).reversed());\n+\n+        for (Method declaredMethod : declaredMethods) {\n+\n+            if(declaredMethod.isAnnotationPresent(BeforeSuit.class)) {\n+                if(testMethods.size() > 0 && testMethods.get(0).isAnnotationPresent(BeforeSuit.class)){\n+                    throw new RuntimeException(\"Method \\\"BeforeSuit\\\" is not the only one!\");\n+                }\n+                testMethods.add(0,declaredMethod);\n+            }\n+\n+            if(declaredMethod.isAnnotationPresent(AfterSuit.class)) {\n+                if(testMethods.size() > 0 && testMethods.get(testMethods.size()-1).isAnnotationPresent(AfterSuit.class)){\n+                    throw new RuntimeException(\"Method \\\"AfterSuit\\\" is not the only one!\");\n+                }\n+                testMethods.add(declaredMethod);\n+            }\n+        }\n+\n+        for (Method testMethod : testMethods) {\n+            testMethod.invoke(null);\n+        }\n+    }\n+}"
  },
  {
    "sha": "acbc4f4635d4edefe5e2da2819fc3eb01ed1bf16",
    "filename": "Java3_HW_7/Tests.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/blob/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/Tests.java",
    "raw_url": "https://github.com/JonnySPb127778/geekBrainsJava-repo/raw/0cf9515a37ff1f300f8640decdaeade684839d2e/Java3_HW_7/Tests.java",
    "contents_url": "https://api.github.com/repos/JonnySPb127778/geekBrainsJava-repo/contents/Java3_HW_7/Tests.java?ref=0cf9515a37ff1f300f8640decdaeade684839d2e",
    "patch": "@@ -0,0 +1,61 @@\n+public class Tests {\n+    private static final boolean A = true ;\n+    private static final boolean B = false ;\n+\n+    @Test(priority = 2)\n+    public static void Test2Lvl(){\n+        System.out.println(\"\\nTest of 2 priority level.\");\n+        Logic.view();\n+        System.out.println(\"Not(a AND b) = \" + Logic.logicNotAND());\n+    }\n+\n+    @BeforeSuit\n+    public static void beforeSuit(){\n+        Logic arg = new Logic(A,B);\n+        System.out.println(\"\\nTest \\\"BeforeSuit\\\".  Set value of arguments.\");\n+        Logic.view();\n+        System.out.println();\n+    }\n+\n+    @Test(priority = 1)\n+    public static void TestLowestLvl(){\n+        System.out.println(\"\\nTest of lowest priority level.\");\n+        Logic.view();\n+        System.out.println(\"a AND b = \" + Logic.logicAND());\n+    }\n+\n+    @Test\n+    public static void TestDefaultLvl(){\n+        System.out.println(\"\\nTest of default priority level.\");\n+        Logic.view();\n+        System.out.println(\"a OR b = \" + Logic.logicOR());\n+    }\n+\n+    @Test(priority = 10)\n+    public static void TestHighestLvl(){\n+        System.out.println(\"\\nTest of highest priority level.\");\n+        Logic.view();\n+        System.out.println(\"a XOR b = \" + Logic.logicXOR());\n+    }\n+\n+    @Test(priority = 6)\n+    public static void TestLvl6(){\n+        System.out.println(\"\\nTest of 6 priority level.\");\n+        Logic.view();\n+        System.out.println(\"Not(a XOR b) = \" + Logic.logicNotXOR());\n+    }\n+\n+    @AfterSuit\n+    public static void afterSuit(){\n+        System.out.println(\"\\nTest \\\"AfterSuit\\\".  Reset value of arguments.\");\n+        Logic.reset();\n+        Logic.view();\n+    }\n+\n+    @Test(priority = 8)\n+    public static void Test8Lvl(){\n+        System.out.println(\"\\nTest of 8 priority level.\");\n+        Logic.view();\n+        System.out.println(\"Not(a OR b) = \" + Logic.logicNotOR());\n+    }\n+}"
  }
]
