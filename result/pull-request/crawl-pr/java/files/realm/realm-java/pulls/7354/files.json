[
  {
    "sha": "a3fd56b4ef74b37925401ff655305a5d79c29907",
    "filename": "dependencies.list",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/realm/realm-java/blob/bea791a22f538cded160534db99e9531679e2abe/dependencies.list",
    "raw_url": "https://github.com/realm/realm-java/raw/bea791a22f538cded160534db99e9531679e2abe/dependencies.list",
    "contents_url": "https://api.github.com/repos/realm/realm-java/contents/dependencies.list?ref=bea791a22f538cded160534db99e9531679e2abe",
    "patch": "@@ -7,10 +7,10 @@ REALM_CORE=10.3.3\n MONGODB_REALM_SERVER=2021-03-09\n \n # Common Android settings across projects\n-GRADLE_BUILD_TOOLS=4.0.0\n+GRADLE_BUILD_TOOLS=4.1.0\n ANDROID_BUILD_TOOLS=29.0.3\n-KOTLIN=1.3.72\n-KOTLIN_COROUTINES=1.3.9\n+KOTLIN=1.4.31\n+KOTLIN_COROUTINES=1.4.2\n \n # Common classpath dependencies\n gradle=6.5"
  },
  {
    "sha": "a1f05aadcb7aef46c99382500ace2d8ffdc7e5c1",
    "filename": "examples/mongoDbRealmExample/build.gradle",
    "status": "modified",
    "additions": 6,
    "deletions": 8,
    "changes": 14,
    "blob_url": "https://github.com/realm/realm-java/blob/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/build.gradle",
    "raw_url": "https://github.com/realm/realm-java/raw/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/build.gradle",
    "contents_url": "https://api.github.com/repos/realm/realm-java/contents/examples/mongoDbRealmExample/build.gradle?ref=bea791a22f538cded160534db99e9531679e2abe",
    "patch": "@@ -34,13 +34,10 @@ android {\n \n     buildTypes {\n         // Configure server and App Id.\n-        // The default server is https://realm-dev.mongodb.com/ . Go to that and copy the MongoDB\n+        // The default server is https://realm.mongodb.com/ . Go to that and copy the MongoDB\n         // Realm App Id.\n-        //\n-        // If you are running a local version of MongoDB Realm, modify endpoint accordingly. Most\n-        // likely it is \"http://localhost:9090\"\n-        def mongodbRealmUrl = \"https://realm-dev.mongodb.com\"\n-        def appId = \"my-app-id\"\n+        def mongodbRealmUrl = \"https://realm.mongodb.com\"\n+        def appId = \"counter-app-snuns\"\n         debug {\n             buildConfigField \"String\", \"MONGODB_REALM_URL\", \"\\\"${mongodbRealmUrl}\\\"\"\n             buildConfigField \"String\", \"MONGODB_REALM_APP_ID\", \"\\\"${appId}\\\"\"\n@@ -65,8 +62,9 @@ realm {\n }\n \n dependencies {\n-    implementation 'androidx.appcompat:appcompat:1.1.0'\n-    implementation 'com.google.android.material:material:1.1.0'\n+    implementation 'androidx.appcompat:appcompat:1.2.0'\n+    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.3.0'\n+    implementation 'com.google.android.material:material:1.3.0'\n     implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'\n     implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\n }"
  },
  {
    "sha": "51e2ef01c2c4cf51e7e1d088beaaa4fa247e8608",
    "filename": "examples/mongoDbRealmExample/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/realm/realm-java/blob/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/realm/realm-java/raw/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/realm/realm-java/contents/examples/mongoDbRealmExample/src/main/AndroidManifest.xml?ref=bea791a22f538cded160534db99e9531679e2abe",
    "patch": "@@ -18,7 +18,13 @@\n         </activity>\n         <activity\n             android:name=\".LoginActivity\"\n-            android:label=\"Login\"></activity>\n+            android:label=\"Login\">\n+        </activity>\n+        <activity\n+            android:name=\".ClientResetActivity\"\n+            android:launchMode=\"singleInstance\"\n+            android:label=\"ClientReset\">\n+        </activity>\n     </application>\n \n </manifest>"
  },
  {
    "sha": "438e9c6821dfacb1ec0e667e8be1896af5d0d576",
    "filename": "examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/ClientResetActivity.kt",
    "status": "added",
    "additions": 115,
    "deletions": 0,
    "changes": 115,
    "blob_url": "https://github.com/realm/realm-java/blob/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/ClientResetActivity.kt",
    "raw_url": "https://github.com/realm/realm-java/raw/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/ClientResetActivity.kt",
    "contents_url": "https://api.github.com/repos/realm/realm-java/contents/examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/ClientResetActivity.kt?ref=bea791a22f538cded160534db99e9531679e2abe",
    "patch": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2021 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.mongodb.realm.example\n+\n+import android.os.Bundle\n+import android.os.SystemClock\n+import android.view.View\n+import android.widget.TextView\n+import android.widget.Toast\n+import androidx.appcompat.app.AppCompatActivity\n+import androidx.databinding.DataBindingUtil\n+import com.mongodb.realm.example.databinding.ActivityClientresetBinding\n+import io.realm.*\n+import io.realm.mongodb.sync.*\n+import me.zhanghai.android.materialprogressbar.MaterialProgressBar\n+import java.util.*\n+import java.util.concurrent.ConcurrentLinkedQueue\n+\n+/**\n+ * This class is used as an example on how to implement Client Reset.\n+ *\n+ * This activity is launched with `singleInstance` so no matter how many times it is\n+ * started only one instance is running. However, when finished, it will just return to whatever is\n+ * on the top of navigation stack.\n+ *\n+ * Pressing back has been disabled to prevent the [clientResetHelper] from accidentally running\n+ * while another Activity is displayed.\n+ */\n+class ClientResetActivity : AppCompatActivity() {\n+\n+    companion object {\n+        // Track Client Reset errors as a queue of errors as the chance of all Realms\n+        // connected to a single app instance experiencing Client Resets is quite high, e.g.\n+        // in the case where Sync was terminated then restarted on the server.\n+        var RESET_ERRORS = ConcurrentLinkedQueue<Pair<ClientResetRequiredError, SyncConfiguration>>()\n+    }\n+\n+    // Run Client Reset logic on a separate helper thread to make it easier to implement timeouts.\n+    // Note, this Runnable is not particular safe as it will continue running even if the Activity\n+    // is excited\n+    private val clientResetHelper = Runnable {\n+        var errorReported = false;\n+        ClientResetLoop@ while(true) {\n+            val error: Pair<ClientResetRequiredError, SyncConfiguration> = RESET_ERRORS.poll() ?: break\n+            val clientReset: ClientResetRequiredError = error.first\n+            val config: SyncConfiguration = error.second\n+\n+            // The background Sync Client take about 10 seconds to fully close the connection and thus\n+            // the background Realm. Set timeout to 20 seconds.\n+            var maxWait = 20\n+            while (Realm.getGlobalInstanceCount(config) > 0) {\n+                if (maxWait == 0) {\n+                    runOnUiThread {\n+                        progressBar.visibility = View.INVISIBLE\n+                        statusView.text = \"'${config.realmFileName}' did not fully close, so database could not be reset. Aborting\"\n+                    }\n+                    errorReported = true\n+                    break@ClientResetLoop\n+                } else {\n+                    maxWait--\n+                    runOnUiThread {\n+                        statusView.text = \"Waiting for '${config.realmFileName}' to fully close ($maxWait): ${Realm.getGlobalInstanceCount(config)}\"\n+                    }\n+                    SystemClock.sleep(1000)\n+                }\n+            }\n+            clientReset.executeClientReset()\n+            runOnUiThread {\n+                statusView.text = \"\"\n+            }\n+        }\n+        if (!errorReported) {\n+            finish()\n+        }\n+    }\n+\n+    private lateinit var binding: ActivityClientresetBinding\n+\n+    private lateinit var statusView: TextView\n+    private lateinit var progressBar: MaterialProgressBar\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        binding = DataBindingUtil.setContentView(this, R.layout.activity_clientreset)\n+        statusView = binding.status\n+        progressBar = binding.progressbar\n+    }\n+\n+    override fun onResume() {\n+        super.onResume()\n+        Thread(clientResetHelper).start();\n+    }\n+\n+    override fun onBackPressed() {\n+        Toast.makeText(\n+                this,\n+                \"Pressing 'Back' is disabled while Client Reset is running.\",\n+                Toast.LENGTH_LONG\n+        ).show()\n+    }\n+}"
  },
  {
    "sha": "95300deae41b431504d3613b5163743ef02702d3",
    "filename": "examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/CounterActivity.kt",
    "status": "modified",
    "additions": 35,
    "deletions": 42,
    "changes": 77,
    "blob_url": "https://github.com/realm/realm-java/blob/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/CounterActivity.kt",
    "raw_url": "https://github.com/realm/realm-java/raw/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/CounterActivity.kt",
    "contents_url": "https://api.github.com/repos/realm/realm-java/contents/examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/CounterActivity.kt?ref=bea791a22f538cded160534db99e9531679e2abe",
    "patch": "@@ -32,10 +32,7 @@ import io.realm.kotlin.syncSession\n import io.realm.kotlin.where\n import io.realm.log.RealmLog\n import io.realm.mongodb.User\n-import io.realm.mongodb.sync.ProgressListener\n-import io.realm.mongodb.sync.ProgressMode\n-import io.realm.mongodb.sync.SyncConfiguration\n-import io.realm.mongodb.sync.SyncSession\n+import io.realm.mongodb.sync.*\n import me.zhanghai.android.materialprogressbar.MaterialProgressBar\n import java.util.*\n import java.util.concurrent.atomic.AtomicBoolean\n@@ -97,43 +94,37 @@ class CounterActivity : AppCompatActivity() {\n         user = loggedInUser\n         val user = user\n         if (user != null) {\n-            // Create a RealmConfiguration for our user\n-            // Use user id as partition value, so each user gets an unique view.\n-            // FIXME Right now we are using waitForInitialRemoteData and a more advanced\n-            // initialData block due to Sync only supporting ObjectId keys. This should\n-            // be changed once natural keys are supported.\n+            // Create a RealmConfiguration for our user. Use user id as partition value, so each\n+            // user gets an unique view.\n             val config = SyncConfiguration.Builder(user, user.id)\n                     .initialData {\n-                        if (it.isEmpty) {\n-                            it.insert(CRDTCounter())\n-                        }\n+                        it.insert(CRDTCounter(user.id))\n+                    }\n+                    .clientResetHandler { session, error ->\n+                        ClientResetActivity.RESET_ERRORS.add(Pair(error, session.configuration))\n+                        val intent = Intent(this, ClientResetActivity::class.java)\n+                        startActivity(intent)\n                     }\n-                    .waitForInitialRemoteData()\n                     .build()\n \n-            // This will automatically sync all changes in the background for as long as the Realm is open\n-            Realm.getInstanceAsync(config, object: Realm.Callback() {\n-                override fun onSuccess(realm: Realm) {\n-                    this@CounterActivity.realm = realm\n-\n-                    counter = realm.where<CRDTCounter>().findFirstAsync()\n-                    counter.addChangeListener<CRDTCounter> { obj, _ ->\n-                        if (obj.isValid) {\n-                            counterView.text = String.format(Locale.US, \"%d\", counter.count)\n-                        } else {\n-                            counterView.text = \"-\"\n-                        }\n+            realm = Realm.getInstance(config).also {\n+                counter = it.where<CRDTCounter>().findFirstAsync()\n+                counter.addChangeListener<CRDTCounter> { obj, _ ->\n+                    if (obj.isValid) {\n+                        counterView.text = String.format(Locale.US, \"%d\", counter.count)\n+                    } else {\n+                        counterView.text = \"-\"\n                     }\n+                }\n \n-                    // Setup progress listeners for indeterminate progress bars\n-                    session = realm.syncSession\n-                    session.run {\n-                        addDownloadProgressListener(ProgressMode.INDEFINITELY, downloadListener)\n-                        addUploadProgressListener(ProgressMode.INDEFINITELY, uploadListener)\n-                    }\n+                // Setup progress listeners for indeterminate progress bars\n+                session = it.syncSession\n+                session.run {\n+                    addDownloadProgressListener(ProgressMode.INDEFINITELY, downloadListener)\n+                    addUploadProgressListener(ProgressMode.INDEFINITELY, uploadListener)\n                 }\n-            })\n-            counterView.text = \"-\"\n+                counterView.text = \"-\"\n+            }\n         }\n     }\n \n@@ -144,6 +135,7 @@ class CounterActivity : AppCompatActivity() {\n                 removeProgressListener(downloadListener)\n                 removeProgressListener(uploadListener)\n             }\n+            // Close Realm here to make sure it is closed when navigating to other Activities.\n             realm?.close()\n         }\n     }\n@@ -156,15 +148,16 @@ class CounterActivity : AppCompatActivity() {\n     override fun onOptionsItemSelected(item: MenuItem): Boolean {\n         return when (item.itemId) {\n             R.id.action_logout -> {\n-                val user = user\n-                user?.logOutAsync {\n-                    if (it.isSuccess) {\n-                        realm?.close()\n-                        this.user = loggedInUser\n-                    } else {\n-                        RealmLog.error(it.error.toString())\n-                    }\n-                }\n+//                val user = user\n+//                user?.logOutAsync {\n+//                    if (it.isSuccess) {\n+//                        realm?.close()\n+//                        this.user = loggedInUser\n+//                    } else {\n+//                        RealmLog.error(it.error.toString())\n+//                    }\n+//                }\n+                ResetHelper.triggerClientReset(user!!.app.sync, realm!!.syncSession)\n                 true\n             }\n             else -> super.onOptionsItemSelected(item)"
  },
  {
    "sha": "db967a46f0f1e8f072276b36155f2998358f1405",
    "filename": "examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/model/CRDTCounter.kt",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/realm/realm-java/blob/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/model/CRDTCounter.kt",
    "raw_url": "https://github.com/realm/realm-java/raw/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/model/CRDTCounter.kt",
    "contents_url": "https://api.github.com/repos/realm/realm-java/contents/examples/mongoDbRealmExample/src/main/java/com/mongodb/realm/example/model/CRDTCounter.kt?ref=bea791a22f538cded160534db99e9531679e2abe",
    "patch": "@@ -22,11 +22,15 @@ import io.realm.annotations.RealmField\n import io.realm.annotations.Required\n import org.bson.types.ObjectId\n \n-open class CRDTCounter : RealmObject() {\n+open class CRDTCounter(userId: String) : RealmObject() {\n+\n+    // Required by Realm\n+    constructor(): this(\"\")\n \n     @PrimaryKey\n     @RealmField(\"_id\")\n-    var id: ObjectId = ObjectId.get()\n+    var id: String = userId\n+\n     @Required\n     private val counter: MutableRealmInteger = MutableRealmInteger.valueOf(0L)\n "
  },
  {
    "sha": "2f33c3922046751cca7471c150f92347f642cb6e",
    "filename": "examples/mongoDbRealmExample/src/main/java/io/realm/mongodb/sync/ResetHelper.kt",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/realm/realm-java/blob/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/java/io/realm/mongodb/sync/ResetHelper.kt",
    "raw_url": "https://github.com/realm/realm-java/raw/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/java/io/realm/mongodb/sync/ResetHelper.kt",
    "contents_url": "https://api.github.com/repos/realm/realm-java/contents/examples/mongoDbRealmExample/src/main/java/io/realm/mongodb/sync/ResetHelper.kt?ref=bea791a22f538cded160534db99e9531679e2abe",
    "patch": "@@ -0,0 +1,9 @@\n+package io.realm.mongodb.sync\n+\n+class ResetHelper {\n+    companion object {\n+        fun triggerClientReset(sync: Sync, session: SyncSession) {\n+            sync.simulateClientReset(session)\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a45ff28619c02b6448dac84f4f83cff5fbe01868",
    "filename": "examples/mongoDbRealmExample/src/main/res/layout/activity_clientreset.xml",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/realm/realm-java/blob/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/res/layout/activity_clientreset.xml",
    "raw_url": "https://github.com/realm/realm-java/raw/bea791a22f538cded160534db99e9531679e2abe/examples/mongoDbRealmExample/src/main/res/layout/activity_clientreset.xml",
    "contents_url": "https://api.github.com/repos/realm/realm-java/contents/examples/mongoDbRealmExample/src/main/res/layout/activity_clientreset.xml?ref=bea791a22f538cded160534db99e9531679e2abe",
    "patch": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n+\n+    <data />\n+\n+    <RelativeLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+        <LinearLayout\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:gravity=\"center_horizontal\"\n+            android:padding=\"32dp\"\n+            android:layout_centerInParent=\"true\"\n+            android:orientation=\"vertical\">\n+\n+            <me.zhanghai.android.materialprogressbar.MaterialProgressBar\n+                android:id=\"@+id/progressbar\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginBottom=\"64dp\"\n+                android:layout_gravity=\"center_horizontal\"\n+                android:indeterminate=\"true\"\n+                style=\"@style/Widget.MaterialProgressBar.ProgressBar\" />\n+\n+            <TextView\n+                android:id=\"@+id/status\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:textSize=\"12sp\"\n+                app:fontFamily=\"sans-serif\" />\n+        </LinearLayout>\n+\n+    </RelativeLayout>\n+</layout>\n+"
  }
]
