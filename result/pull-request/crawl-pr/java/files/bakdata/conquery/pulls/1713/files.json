[
  {
    "sha": "abefeba1d9581d3afedbd5eee839a124b193b9d6",
    "filename": "backend/src/main/java/com/bakdata/conquery/apiv1/forms/export_form/EntityDateMode.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/apiv1/forms/export_form/EntityDateMode.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/apiv1/forms/export_form/EntityDateMode.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/apiv1/forms/export_form/EntityDateMode.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -31,7 +31,9 @@\n @CPSType(id = \"ENTITY_DATE\", base = Mode.class)\r\n public class EntityDateMode extends Mode {\r\n \r\n-    @NotNull\r\n+    /**\r\n+     * Optional DateRestriction\r\n+     */\r\n     @Valid\r\n     private Range<LocalDate> dateRange;\r\n \r\n@@ -62,12 +64,13 @@ public void resolve(QueryResolveContext context) {\n \r\n     @Override\r\n     public IQuery createSpecializedQuery(DatasetRegistry datasets, UserId userId, DatasetId submittedDataset) {\r\n+        CDateRange dateRestriction = dateRange == null ? CDateRange.all() : CDateRange.of(dateRange);\r\n \r\n         return new EntityDateQuery(\r\n                 getForm().getPrerequisite(),\r\n                 resolvedFeatures,\r\n                 ExportForm.getResolutionAlignmentMap(getForm().getResolvedResolutions(), getAlignmentHint()),\r\n-                CDateRange.of(dateRange),\r\n+                dateRestriction,\r\n                 dateAggregationMode\r\n         );\r\n     }\r"
  },
  {
    "sha": "bc3dc610dbfa1812e4664c206d7857da32463168",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -212,9 +212,10 @@ public Duration getExecutionTime() {\n \n \t@TestOnly\n \tpublic void awaitDone(int time, TimeUnit unit) {\n-\t\tif (state == ExecutionState.RUNNING || state == ExecutionState.NEW) {\n-\t\t\tUninterruptibles.awaitUninterruptibly(execution, time, unit);\n+\t\tif (state == ExecutionState.DONE || state == ExecutionState.CANCELED || state == ExecutionState.FAILED ){\n+\t\t\treturn;\n \t\t}\n+\t\tUninterruptibles.awaitUninterruptibly(execution, time, unit);\n \t}\n \n \tprotected void setStatusBase(@NonNull MetaStorage storage, @NonNull User user, @NonNull ExecutionStatus status, UriBuilder url, Map<DatasetId, Set<Ability>> datasetAbilities) {"
  },
  {
    "sha": "f0d9a562276e6f3b5c7c832d8c31cc69ace682ca",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/forms/managed/AbsoluteFormQuery.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/forms/managed/AbsoluteFormQuery.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/forms/managed/AbsoluteFormQuery.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/forms/managed/AbsoluteFormQuery.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -47,8 +47,9 @@ public void resolve(QueryResolveContext context) {\n \tpublic AbsoluteFormQueryPlan createQueryPlan(QueryPlanContext context) {\r\n \t\treturn new AbsoluteFormQueryPlan(\r\n \t\t\tquery.createQueryPlan(context),\r\n-\t\t\tDateContext.generateAbsoluteContexts(CDateRange.of(dateRange), resolutionsAndAlignmentMap),\r\n-\t\t\tfeatures.createQueryPlan(context)\r\n+\t\t\tnew FormQueryPlan(\r\n+\t\t\t\t\tDateContext.generateAbsoluteContexts(CDateRange.of(dateRange), resolutionsAndAlignmentMap),\r\n+\t\t\t\t\tfeatures.createQueryPlan(context))\r\n \t\t);\r\n \t}\r\n \t\r"
  },
  {
    "sha": "4c18faad8e5769d0b3e4d04ffdc96299cbd31e44",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/forms/managed/AbsoluteFormQueryPlan.java",
    "status": "modified",
    "additions": 9,
    "deletions": 9,
    "changes": 18,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/forms/managed/AbsoluteFormQueryPlan.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/forms/managed/AbsoluteFormQueryPlan.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/forms/managed/AbsoluteFormQueryPlan.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -1,13 +1,11 @@\n package com.bakdata.conquery.models.forms.managed;\n \n-import java.util.List;\n-\n-import com.bakdata.conquery.models.forms.util.DateContext;\n+import com.bakdata.conquery.models.common.CDateSet;\n import com.bakdata.conquery.models.query.QueryExecutionContext;\n import com.bakdata.conquery.models.query.entity.Entity;\n-import com.bakdata.conquery.models.query.queryplan.ArrayConceptQueryPlan;\n import com.bakdata.conquery.models.query.queryplan.QueryPlan;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import com.bakdata.conquery.models.query.results.ContainedEntityResult;\n import com.bakdata.conquery.models.query.results.EntityResult;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n@@ -16,30 +14,32 @@\n public class AbsoluteFormQueryPlan implements QueryPlan {\n \n \tprivate final QueryPlan query;\n-\tprivate final List<DateContext> dateContexts;\n-\tprivate final ArrayConceptQueryPlan features;\n+\tprivate final FormQueryPlan subPlan;\n \t\n \t@Override\n \tpublic EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n \t\tEntityResult preResult = query.execute(ctx, entity);\n \t\tif (preResult.isFailed() || !preResult.isContained()) {\n \t\t\treturn preResult;\n \t\t}\n-\t\tFormQueryPlan subPlan = new FormQueryPlan(dateContexts, features);\n \t\treturn subPlan.execute(ctx, entity);\n \t}\n \n \t@Override\n \tpublic AbsoluteFormQueryPlan clone(CloneContext ctx) {\n \t\treturn new AbsoluteFormQueryPlan(\n \t\t\tquery.clone(ctx),\n-\t\t\tdateContexts,\n-\t\t\tfeatures.clone(ctx)\n+\t\t\tsubPlan\n \t\t);\n \t}\n \n \t@Override\n \tpublic boolean isOfInterest(Entity entity) {\n \t\treturn query.isOfInterest(entity);\n \t}\n+\n+\t@Override\n+\tpublic void collectValidityDates(ContainedEntityResult result, CDateSet dateSet) {\n+\t\tsubPlan.collectValidityDates(result, dateSet);\n+\t}\n }"
  },
  {
    "sha": "cf3831aecfed9c313c5886caf4da6e763e75d73f",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/forms/managed/EntityDateQueryPlan.java",
    "status": "modified",
    "additions": 29,
    "deletions": 29,
    "changes": 58,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/forms/managed/EntityDateQueryPlan.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/forms/managed/EntityDateQueryPlan.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/forms/managed/EntityDateQueryPlan.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -1,10 +1,7 @@\n package com.bakdata.conquery.models.forms.managed;\r\n \r\n-import com.bakdata.conquery.apiv1.forms.FeatureGroup;\r\n-import com.bakdata.conquery.apiv1.forms.Form;\r\n import com.bakdata.conquery.apiv1.forms.export_form.ExportForm;\r\n import com.bakdata.conquery.models.common.CDateSet;\r\n-import com.bakdata.conquery.models.common.Range;\r\n import com.bakdata.conquery.models.common.daterange.CDateRange;\r\n import com.bakdata.conquery.models.forms.util.DateContext;\r\n import com.bakdata.conquery.models.query.QueryExecutionContext;\r\n@@ -15,15 +12,12 @@\n import com.bakdata.conquery.models.query.results.ContainedEntityResult;\r\n import com.bakdata.conquery.models.query.results.EntityResult;\r\n import com.bakdata.conquery.models.query.results.MultilineContainedEntityResult;\r\n+import com.google.common.base.Preconditions;\r\n import lombok.RequiredArgsConstructor;\r\n \r\n-import javax.validation.Valid;\r\n-import javax.validation.constraints.NotEmpty;\r\n-import javax.validation.constraints.NotNull;\r\n-import java.time.LocalDate;\r\n import java.util.ArrayList;\r\n-import java.util.Collection;\r\n import java.util.List;\r\n+import java.util.function.BiConsumer;\r\n \r\n /**\r\n  * Implementation of the QueryPlan for an {@link EntityDateQuery}.\r\n@@ -35,7 +29,9 @@\n     private final QueryPlan query;\r\n     private final ArrayConceptQueryPlan features;\r\n     private final List<ExportForm.ResolutionAndAlignment> resolutionsAndAlignments;\r\n-    private final CDateRange dateRange;\r\n+    private final CDateRange dateRestriction;\r\n+\r\n+    private BiConsumer<ContainedEntityResult, CDateSet> validityDateCollector;\r\n \r\n     @Override\r\n     public EntityResult execute(QueryExecutionContext ctx, Entity entity) {\r\n@@ -45,32 +41,30 @@ public EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n             return preResult;\r\n         }\r\n         final List<Object[]> resultLines = new ArrayList<>();\r\n-        // It might be a multi line result, so iterate over every result\r\n-        for (Object[] line : preResult.asContained().listResultLines()) {\r\n \r\n-            // Transform the date set of a result line back to the actual result line\r\n-            CDateSet entityDate = (CDateSet) line[0];\r\n-            entityDate.retainAll(dateRange);\r\n+        CDateSet entityDate = CDateSet.create();\r\n+        query.collectValidityDates(preResult.asContained(), entityDate);\r\n+        entityDate.retainAll(dateRestriction);\r\n \r\n-            // Generate DateContexts in the provided resolutions\r\n-            List<DateContext> contexts = new ArrayList<>();\r\n-            for (CDateRange range : entityDate.asRanges()) {\r\n-                contexts.addAll(DateContext.generateAbsoluteContexts(range, resolutionsAndAlignments));\r\n-            }\r\n+        // Generate DateContexts in the provided resolutions\r\n+        List<DateContext> contexts = new ArrayList<>();\r\n+        for (CDateRange range : entityDate.asRanges()) {\r\n+            contexts.addAll(DateContext.generateAbsoluteContexts(range, resolutionsAndAlignments));\r\n+        }\r\n \r\n-            FormQueryPlan resolutionQuery = new FormQueryPlan(contexts, features);\r\n-            // We assume the date set to be in the first column, this might be wrong\r\n-            EntityResult result = resolutionQuery.execute(ctx, entity);\r\n+        FormQueryPlan resolutionQuery = new FormQueryPlan(contexts, features);\r\n+        validityDateCollector = resolutionQuery::collectValidityDates;\r\n \r\n-            if (result.isFailed() || !result.isContained()) {\r\n-                continue;\r\n-            }\r\n+        EntityResult result = resolutionQuery.execute(ctx, entity);\r\n \r\n-            ContainedEntityResult contained = result.asContained();\r\n+        if (result.isFailed() || !result.isContained()) {\r\n+            return result;\r\n+        }\r\n \r\n-            resultLines.addAll(contained.listResultLines());\r\n+        ContainedEntityResult contained = result.asContained();\r\n+\r\n+        resultLines.addAll(contained.listResultLines());\r\n \r\n-        }\r\n         return new MultilineContainedEntityResult(entity.getId(), resultLines);\r\n     }\r\n \r\n@@ -80,12 +74,18 @@ public EntityDateQueryPlan clone(CloneContext ctx) {\n                 query.clone(ctx),\r\n                 features.clone(ctx),\r\n                 resolutionsAndAlignments,\r\n-                dateRange\r\n+                dateRestriction\r\n         );\r\n     }\r\n \r\n     @Override\r\n     public boolean isOfInterest(Entity entity) {\r\n         return query.isOfInterest(entity);\r\n     }\r\n+\r\n+    @Override\r\n+    public void collectValidityDates(ContainedEntityResult result, CDateSet dateSet) {\r\n+        Preconditions.checkNotNull(validityDateCollector, \"The query was not executed and no validity date collector set\");\r\n+        validityDateCollector.accept(result,dateSet);\r\n+    }\r\n }\r"
  },
  {
    "sha": "00255a3e420f65750b73943edf0de5a72646cc92",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/forms/managed/FormQueryPlan.java",
    "status": "modified",
    "additions": 28,
    "deletions": 4,
    "changes": 32,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/forms/managed/FormQueryPlan.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/forms/managed/FormQueryPlan.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/forms/managed/FormQueryPlan.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -5,6 +5,7 @@\n import java.util.OptionalInt;\n \n import com.bakdata.conquery.models.common.CDateSet;\n+import com.bakdata.conquery.models.common.daterange.CDateRange;\n import com.bakdata.conquery.models.forms.util.DateContext;\n import com.bakdata.conquery.models.forms.util.ResultModifier;\n import com.bakdata.conquery.models.query.QueryExecutionContext;\n@@ -13,6 +14,7 @@\n import com.bakdata.conquery.models.query.queryplan.QueryPlan;\n import com.bakdata.conquery.models.query.queryplan.aggregators.Aggregator;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import com.bakdata.conquery.models.query.results.ContainedEntityResult;\n import com.bakdata.conquery.models.query.results.EntityResult;\n import com.bakdata.conquery.models.query.results.MultilineContainedEntityResult;\n import lombok.Getter;\n@@ -95,7 +97,7 @@ private MultilineContainedEntityResult createResultForNotContained(Entity entity\n \t\treturn features.getAggregators();\n \t}\n \t\n-\tprivate Object[] addConstants(Object[] values, DateContext dateContext) {\t\t\n+\tprivate Object[] addConstants(Object[] values, DateContext dateContext) {\n \t\tObject[] result = new Object[values.length + constantCount];\n \t\tSystem.arraycopy(values, 0, result, constantCount, values.length);\n \t\t\n@@ -112,21 +114,43 @@ private MultilineContainedEntityResult createResultForNotContained(Entity entity\n \t\t\tresult[2] = dateContext.getEventDate().toEpochDay();\n \t\t}\n \t\t//add date range at [2] or [3]\n-\t\tresult[constantCount-1] = dateContext.getDateRange();\n+\t\tresult[getDateRangePosition()] = dateContext.getDateRange();\n \t\t\n \t\treturn result;\n \t}\n \n+\tprivate int getDateRangePosition() {\n+\t\treturn constantCount-1;\n+\t}\n+\n \t@Override\n \tpublic FormQueryPlan clone(CloneContext ctx) {\n-\t\treturn new FormQueryPlan(dateContexts, features);\n+\t\treturn new FormQueryPlan(dateContexts, features.clone(ctx));\n \t}\n \n \t@Override\n \tpublic boolean isOfInterest(Entity entity) {\n \t\treturn features.isOfInterest(entity);\n \t}\n-\t\n+\n+\t@Override\n+\tpublic void collectValidityDates(ContainedEntityResult result, CDateSet dateSet) {\n+\n+\t\tint dateRangePosition = getDateRangePosition();\n+\t\tif(dateRangePosition < 0) {\n+\t\t\treturn;\n+\t\t}\n+\t\tfor(Object[] resultLine : result.listResultLines()) {\n+\t\t\tObject dates = resultLine[dateRangePosition];\n+\n+\t\t\tif(dates == null) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tdateSet.add((CDateRange) dates);\n+\t\t}\n+\t}\n+\n \tpublic int columnCount() {\n \t\treturn constantCount + features.getAggregatorSize();\n \t}"
  },
  {
    "sha": "11d9859a244eb0341ad8e9f8e6d57bc0625ccdb3",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/forms/managed/RelativeFormQueryPlan.java",
    "status": "modified",
    "additions": 27,
    "deletions": 3,
    "changes": 30,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/forms/managed/RelativeFormQueryPlan.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/forms/managed/RelativeFormQueryPlan.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/forms/managed/RelativeFormQueryPlan.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -17,9 +17,9 @@\n import com.bakdata.conquery.models.query.queryplan.QueryPlan;\n import com.bakdata.conquery.models.query.queryplan.aggregators.Aggregator;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import com.bakdata.conquery.models.query.results.ContainedEntityResult;\n import com.bakdata.conquery.models.query.results.EntityResult;\n import com.bakdata.conquery.models.query.results.MultilineContainedEntityResult;\n-import com.bakdata.conquery.models.query.results.SinglelineContainedEntityResult;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Iterables;\n import lombok.Getter;\n@@ -54,9 +54,12 @@ public EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n \t\tif (preResult.isFailed() || !preResult.isContained()) {\n \t\t\treturn preResult;\n \t\t}\n+\n \t\tint size = calculateCompleteLength();\n-\t\tSinglelineContainedEntityResult contained = (SinglelineContainedEntityResult) preResult;\n-\t\tCDateSet dateSet = (CDateSet) contained.getValues()[0];\n+\t\tContainedEntityResult contained = preResult.asContained();\n+\t\tCDateSet dateSet = CDateSet.create();\n+\t\t// Gather all validity dates from prerequisite\n+\t\tquery.collectValidityDates(contained, dateSet);\n \n \t\tfinal OptionalInt sampled = indexSelector.sample(dateSet);\n \n@@ -257,4 +260,25 @@ public RelativeFormQueryPlan clone(CloneContext ctx) {\n \tpublic boolean isOfInterest(Entity entity) {\n \t\treturn query.isOfInterest(entity) || featurePlan.isOfInterest(entity) || outcomePlan.isOfInterest(entity);\n \t}\n+\n+\t@Override\n+\tpublic void collectValidityDates(ContainedEntityResult result, CDateSet dateSet) {\n+\t\tfor(Object[] resultLine : result.listResultLines()) {\n+\t\t\tint featureDateRangePosition = getFeatureDateRangePosition();\n+\t\t\tif(featureDateRangePosition >= 0) {\n+\t\t\t\tObject date = resultLine[featureDateRangePosition];\n+\t\t\t\tif(date != null){\n+\t\t\t\t\tdateSet.add((CDateRange) date);\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tint outcomeDateRangePosition = getOutcomeDateRangePosition();\n+\t\t\tif(outcomeDateRangePosition >= 0) {\n+\t\t\t\tObject date = resultLine[outcomeDateRangePosition];\n+\t\t\t\tif(date != null){\n+\t\t\t\t\tdateSet.add((CDateRange) date);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n }"
  },
  {
    "sha": "d8d5e5ddefc1597c517f35040766223fd3d2d40b",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ArrayConceptQueryPlan.java",
    "status": "modified",
    "additions": 22,
    "deletions": 4,
    "changes": 26,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ArrayConceptQueryPlan.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ArrayConceptQueryPlan.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ArrayConceptQueryPlan.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -14,6 +14,7 @@\n import com.bakdata.conquery.models.query.entity.Entity;\n import com.bakdata.conquery.models.query.queryplan.aggregators.Aggregator;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import com.bakdata.conquery.models.query.results.ContainedEntityResult;\n import com.bakdata.conquery.models.query.results.EntityResult;\n import com.bakdata.conquery.models.query.results.SinglelineContainedEntityResult;\n import com.bakdata.conquery.models.query.results.SinglelineEntityResult;\n@@ -27,6 +28,7 @@\n @ToString\n public class ArrayConceptQueryPlan implements QueryPlan {\n \n+\tpublic static final int VALIDITY_DATE_POSITION = 0;\n \tprivate List<ConceptQueryPlan> childPlans;\n \t@ToString.Exclude\n \tprivate boolean generateDateAggregation = false;\n@@ -112,15 +114,13 @@ public EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n \t\t\tSinglelineContainedEntityResult singleLineResult = (SinglelineContainedEntityResult) result;\n \t\t\t// Mark this result line as contained.\n \t\t\tnotContainedInChildQueries = false;\n-\t\t\tint srcCopyPos = 0;\n \t\t\tif (generateDateAggregation) {\n \t\t\t\tdateSet.addAll((CDateSet) singleLineResult.getValues()[0]);\n \t\t\t\t// Skip overwriting the first value: daterange\n-\t\t\t\tsrcCopyPos = 1;\n \t\t\t}\n \n \t\t\tint copyLength = calculateCopyLength(singleLineResult);\n-\t\t\tSystem.arraycopy(singleLineResult.getValues(), srcCopyPos, resultValues, resultInsertIdx, copyLength);\n+\t\t\tSystem.arraycopy(singleLineResult.getValues(), resultOffset, resultValues, resultInsertIdx, copyLength);\n \n \t\t\t// Advance pointer for the result insertion by the number of currently handled\n \t\t\t// aggregators.\n@@ -133,7 +133,7 @@ public EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n \n \t\tif (generateDateAggregation) {\n \t\t\t// Dateset was needed, add it to the front.\n-\t\t\tresultValues[0] = dateSet;\n+\t\t\tresultValues[VALIDITY_DATE_POSITION] = dateSet;\n \t\t}\n \n \t\treturn new SinglelineContainedEntityResult(entity.getId(), resultValues);\n@@ -149,6 +149,24 @@ public boolean isOfInterest(Entity entity) {\n \t\treturn false;\n \t}\n \n+\t@Override\n+\tpublic void collectValidityDates(ContainedEntityResult result, CDateSet dateSet) {\n+\t\tif(!generateDateAggregation) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif(!(result instanceof SinglelineContainedEntityResult)){\n+\t\t\tthrow new IllegalStateException(\"The presented result cannot have been generated by the query. It must come from somewhere else.\");\n+\t\t}\n+\n+\t\tObject valDate = ((SinglelineContainedEntityResult)result).getValues()[VALIDITY_DATE_POSITION];\n+\n+\t\tif (valDate == null){\n+\t\t\treturn;\n+\t\t}\n+\t\tdateSet.addAll((CDateSet) valDate);\n+\t}\n+\n \n \tpublic int getAggregatorSize() {\n \t\tint size = 0;"
  },
  {
    "sha": "5b1463a124cd74f666d63cceb65bb826478aeca1",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ConceptQueryPlan.java",
    "status": "modified",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ConceptQueryPlan.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ConceptQueryPlan.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ConceptQueryPlan.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -1,6 +1,7 @@\n package com.bakdata.conquery.models.query.queryplan;\n \n import com.bakdata.conquery.io.storage.ModificationShieldedWorkerStorage;\n+import com.bakdata.conquery.models.common.CDateSet;\n import com.bakdata.conquery.models.datasets.Dataset;\n import com.bakdata.conquery.models.events.Bucket;\n import com.bakdata.conquery.models.events.EmptyBucket;\n@@ -10,6 +11,7 @@\n import com.bakdata.conquery.models.query.entity.Entity;\n import com.bakdata.conquery.models.query.queryplan.aggregators.Aggregator;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import com.bakdata.conquery.models.query.results.ContainedEntityResult;\n import com.bakdata.conquery.models.query.results.EntityResult;\n import com.bakdata.conquery.models.query.results.SinglelineContainedEntityResult;\n import com.bakdata.conquery.models.query.results.SinglelineEntityResult;\n@@ -26,6 +28,7 @@\n @Slf4j\n public class ConceptQueryPlan implements QueryPlan {\n \n+\tpublic static final int VALIDITY_DATE_POSITION = 0;\n \t@Getter\n \t@Setter\n \tprivate ThreadLocal<Set<TableId>> requiredTables = new ThreadLocal<>();\n@@ -183,6 +186,28 @@ public boolean isOfInterest(Entity entity) {\n \t\treturn child.isOfInterest(entity);\n \t}\n \n+\t@Override\n+\tpublic void collectValidityDates(ContainedEntityResult result, CDateSet dateSet) {\n+\t\tif(!isAggregateValidityDates()) {\n+\t\t\t// The date aggregator was not added to the plan, so we don't collect a validity date\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif(!(result instanceof SinglelineContainedEntityResult)) {\n+\t\t\tthrow new IllegalStateException(\"The presented result cannot have been generated by the query. It must come from somewhere else.\");\n+\t\t}\n+\n+\t\tObject dates = ((SinglelineContainedEntityResult)result).getValues()[VALIDITY_DATE_POSITION];\n+\t\tif(dates == null) {\n+\t\t\treturn;\n+\t\t}\n+\t\tdateSet.addAll((CDateSet) dates);\n+\t}\n+\n+\tpublic boolean isAggregateValidityDates() {\n+\t\treturn dateAggregator.equals(aggregators.get(0));\n+\t}\n+\n \tpublic boolean isOfInterest(Bucket bucket) {\n \t\treturn child.isOfInterest(bucket);\n \t}"
  },
  {
    "sha": "a632fbe29c1b159b59d1c095fa09cce3a1ea5086",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/QueryPlan.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/QueryPlan.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/QueryPlan.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/QueryPlan.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -1,8 +1,10 @@\n package com.bakdata.conquery.models.query.queryplan;\n \n+import com.bakdata.conquery.models.common.CDateSet;\n import com.bakdata.conquery.models.query.QueryExecutionContext;\n import com.bakdata.conquery.models.query.entity.Entity;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import com.bakdata.conquery.models.query.results.ContainedEntityResult;\n import com.bakdata.conquery.models.query.results.EntityResult;\n \n public interface QueryPlan {\n@@ -12,4 +14,6 @@\n \tEntityResult execute(QueryExecutionContext ctx, Entity entity);\n \n \tboolean isOfInterest(Entity entity);\n+\n+\tvoid collectValidityDates(ContainedEntityResult result, CDateSet dateSet);\n }\n\\ No newline at end of file"
  },
  {
    "sha": "4b92b0653988f8cd66057d4bde41ab4b0a9f487f",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java",
    "status": "modified",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -6,6 +6,8 @@\n import java.util.Map;\n import java.util.Set;\n \n+import com.bakdata.conquery.models.common.CDateSet;\n+import com.bakdata.conquery.models.common.daterange.CDateRange;\n import com.bakdata.conquery.models.datasets.Column;\n import com.bakdata.conquery.models.datasets.Table;\n import com.bakdata.conquery.models.events.Bucket;\n@@ -15,6 +17,7 @@\n import com.bakdata.conquery.models.query.concept.specific.CQConcept;\n import com.bakdata.conquery.models.query.entity.Entity;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import com.bakdata.conquery.models.query.results.ContainedEntityResult;\n import com.bakdata.conquery.models.query.results.EntityResult;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n@@ -34,6 +37,7 @@\n @Setter\n public class SecondaryIdQueryPlan implements QueryPlan {\n \n+\tpublic static final int VALIDITY_DATE_POSITION = ConceptQueryPlan.VALIDITY_DATE_POSITION + 1;\n \tprivate final ConceptQueryPlan query;\n \tprivate final SecondaryIdDescriptionId secondaryId;\n \n@@ -197,4 +201,22 @@ public QueryPlan clone(CloneContext ctx) {\n \tpublic boolean isOfInterest(Entity entity) {\n \t\treturn query.isOfInterest(entity);\n \t}\n+\n+\t@Override\n+\tpublic void collectValidityDates(ContainedEntityResult result, CDateSet dateSet) {\n+\t\tif(!query.isAggregateValidityDates()) {\n+\t\t\treturn;\n+\t\t}\n+\n+\n+\t\tfor(Object[] resultLine : result.listResultLines()) {\n+\t\t\tObject dates = resultLine[VALIDITY_DATE_POSITION];\n+\n+\t\t\tif(dates == null) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tdateSet.addAll((CDateSet) dates);\n+\t\t}\n+\t}\n }"
  },
  {
    "sha": "e46b662f81ee18b01e0f62c489473755566eeb3c",
    "filename": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -13,6 +13,7 @@\n import com.bakdata.conquery.models.query.QueryExecutionContext;\n import com.bakdata.conquery.models.query.entity.Entity;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import com.bakdata.conquery.models.query.results.ContainedEntityResult;\n import com.bakdata.conquery.models.query.results.EntityResult;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n@@ -39,6 +40,11 @@ public boolean isOfInterest(Entity entity) {\n \t\treturn subPlan.isOfInterest(entity);\n \t}\n \n+\t@Override\n+\tpublic void collectValidityDates(ContainedEntityResult result, CDateSet dateSet) {\n+\t\t// TODO figure out where the dates are\n+\t}\n+\n \t@Override\n \tpublic EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n \t\tEntityResult result = subPlan.execute(ctx, entity);"
  },
  {
    "sha": "e488f3e6808f6d9622170eb0871d78dfecff87a1",
    "filename": "backend/src/test/java/com/bakdata/conquery/integration/common/RequiredSecondaryId.java",
    "status": "modified",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/java/com/bakdata/conquery/integration/common/RequiredSecondaryId.java",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/java/com/bakdata/conquery/integration/common/RequiredSecondaryId.java",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/java/com/bakdata/conquery/integration/common/RequiredSecondaryId.java?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -2,9 +2,17 @@\n \n import javax.validation.constraints.NotEmpty;\n \n+import com.bakdata.conquery.integration.IntegrationTest;\n+import com.bakdata.conquery.io.jackson.Jackson;\n import com.bakdata.conquery.models.datasets.SecondaryIdDescription;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.core.JsonParseException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n import lombok.Data;\n \n+import java.io.IOException;\n+import java.util.Objects;\n+\n @Data\n public class RequiredSecondaryId {\n \t@NotEmpty\n@@ -22,4 +30,16 @@ public SecondaryIdDescription toSecondaryId() {\n \n \t\treturn desc;\n \t}\n+\n+\n+\t@JsonCreator\n+\tpublic static RequiredSecondaryId fromFile(String fileResource) throws JsonParseException, JsonMappingException, IOException {\n+\t\treturn Jackson.MAPPER.readValue(\n+\t\t\t\tObjects.requireNonNull(\n+\t\t\t\t\t\tIntegrationTest.class.getResourceAsStream(fileResource),\n+\t\t\t\t\t\tfileResource+\" not found\"\n+\t\t\t\t),\n+\t\t\t\tRequiredSecondaryId.class\n+\t\t);\n+\t}\n }"
  },
  {
    "sha": "1a46d819825358acdac0446154bd52ccb2f563b3",
    "filename": "backend/src/test/resources/tests/form/EXPORT_FORM/ABSOLUT/SECONDARY_ID/ABS_EXPORT_FORM_SECONDARY_ID.test.json",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ABSOLUT/SECONDARY_ID/ABS_EXPORT_FORM_SECONDARY_ID.test.json",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ABSOLUT/SECONDARY_ID/ABS_EXPORT_FORM_SECONDARY_ID.test.json",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/EXPORT_FORM/ABSOLUT/SECONDARY_ID/ABS_EXPORT_FORM_SECONDARY_ID.test.json?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -0,0 +1,78 @@\n+{\n+    \"type\": \"FORM_TEST\",\n+    \"label\": \"ABS-EXPORT-FORM SECONDARY_ID\",\n+    \"expectedCsv\": {\n+        \"results\": \"/tests/form/EXPORT_FORM/ABSOLUT/SECONDARY_ID/expected.csv\"\n+    },\n+    \"form\": {\n+        \"type\": \"EXPORT_FORM\",\n+        \"queryGroup\": \"00000000-0000-0000-0000-000000000001\",\n+        \"resolution\": \"QUARTERS\",\n+        \"timeMode\": {\n+            \"value\": \"ABSOLUTE\",\n+            \"features\": [\n+                {\n+                    \"ids\": [\n+                        \"two_connector\"\n+                    ],\n+                    \"type\": \"CONCEPT\",\n+                    \"label\": \"explicitly set select\",\n+                    \"tables\": [\n+                        {\n+                            \"id\": \"two_connector.table1\",\n+                            \"selects\": \"two_connector.table1.alter_select\"\n+                        },\n+                        {\n+                            \"id\": \"two_connector.table2\"\n+                        }\n+                    ]\n+                }\n+            ],\n+            \"dateRange\": {\n+                \"min\": \"2012-01-16\",\n+                \"max\": \"2012-12-17\"\n+            }\n+        }\n+    },\n+    \"concepts\": [\n+        \"/tests/form/shared/two_connector.concept.json\",\n+        \"/tests/form/shared/abc.concept.json\"\n+    ],\n+    \"content\": {\n+        \"secondaryIds\": [\n+            {\n+                \"name\": \"secondary\"\n+            },\n+            {\n+                \"name\": \"ignored\"\n+            }\n+        ],\n+        \"tables\": [\n+            \"/tests/form/shared/vers_stamm.table.json\",\n+            \"/tests/form/shared/abc.table.json\"\n+        ],\n+        \"previousQueries\": [\n+            {\n+                \"type\": \"SECONDARY_ID_QUERY\",\n+                \"secondaryId\": \"secondary\",\n+                \"root\": {\n+                    \"type\": \"AND\",\n+                    \"children\": [\n+                        {\n+                            \"type\": \"CONCEPT\",\n+                            \"excludeFromSecondaryIdQuery\": false,\n+                            \"ids\": [\n+                                \"abc-concept.a\"\n+                            ],\n+                            \"tables\": [\n+                                {\n+                                    \"id\": \"abc-concept.connector\"\n+                                }\n+                            ]\n+                        }\n+                    ]\n+                }\n+            }\n+        ]\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "1541fb77b097a73aadd8e5db44a9ab125b628c7d",
    "filename": "backend/src/test/resources/tests/form/EXPORT_FORM/ABSOLUT/SECONDARY_ID/expected.csv",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ABSOLUT/SECONDARY_ID/expected.csv",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ABSOLUT/SECONDARY_ID/expected.csv",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/EXPORT_FORM/ABSOLUT/SECONDARY_ID/expected.csv?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -0,0 +1,7 @@\n+result,resolution,index,date_range,explicitly set select - Table1 Ausgabe Alter\n+1,complete,,2012-01-16/2012-12-17,55\n+1,year,1,2012-01-16/2012-12-17,55\n+1,quarter,1,2012-01-16/2012-03-31,55\n+1,quarter,2,2012-04-01/2012-06-30,55\n+1,quarter,3,2012-07-01/2012-09-30,55\n+1,quarter,4,2012-10-01/2012-12-17,55"
  },
  {
    "sha": "ba93d84e4bb7fbddd67f33213a6bd089afbc9da4",
    "filename": "backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/LOGICAL/ABS_EXPORT_FORM.test.json",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/LOGICAL/ABS_EXPORT_FORM.test.json",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/LOGICAL/ABS_EXPORT_FORM.test.json",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/LOGICAL/ABS_EXPORT_FORM.test.json?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -37,6 +37,9 @@\n         \"/tests/form/shared/abc.concept.json\"\n     ],\n     \"content\": {\n+        \"secondaryIds\": [\n+            \"/tests/form/shared/secondary.sid.json\"\n+        ],\n         \"tables\": [\n             \"/tests/form/shared/vers_stamm.table.json\",\n             \"/tests/form/shared/abc.table.json\""
  },
  {
    "sha": "d3cfa9420691a1f47ac94c3b8adacdc56585e28d",
    "filename": "backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/LOGICAL_WITH_EXCLUDE/ABS_EXPORT_FORM.test.json",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/LOGICAL_WITH_EXCLUDE/ABS_EXPORT_FORM.test.json",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/LOGICAL_WITH_EXCLUDE/ABS_EXPORT_FORM.test.json",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/LOGICAL_WITH_EXCLUDE/ABS_EXPORT_FORM.test.json?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -37,6 +37,9 @@\n         \"/tests/form/shared/abc.concept.json\"\n     ],\n     \"content\": {\n+        \"secondaryIds\": [\n+            \"/tests/form/shared/secondary.sid.json\"\n+        ],\n         \"tables\": [\n             \"/tests/form/shared/vers_stamm.table.json\",\n             \"/tests/form/shared/abc.table.json\""
  },
  {
    "sha": "20852d92f5e60021a3564e983607c2a8d06804e3",
    "filename": "backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/SECONDARY_ID/SECONDARY_ID.test.json",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/SECONDARY_ID/SECONDARY_ID.test.json",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/SECONDARY_ID/SECONDARY_ID.test.json",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/SECONDARY_ID/SECONDARY_ID.test.json?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -0,0 +1,69 @@\n+{\n+    \"type\": \"FORM_TEST\",\n+    \"label\": \"ENTITY-DATE-EXPORT-FORM SECONDARY_ID\",\n+    \"expectedCsv\": {\n+        \"results\": \"/tests/form/EXPORT_FORM/ENTITY_DATE/SECONDARY_ID/expected.csv\"\n+    },\n+    \"form\": {\n+        \"type\": \"EXPORT_FORM\",\n+        \"queryGroup\": \"00000000-0000-0000-0000-000000000001\",\n+        \"resolution\": \"QUARTERS\",\n+        \"timeMode\": {\n+            \"value\": \"ENTITY_DATE\",\n+            \"features\": [\n+                {\n+                    \"ids\": [\n+                        \"two_connector\"\n+                    ],\n+                    \"type\": \"CONCEPT\",\n+                    \"label\": \"explicitly set select\",\n+                    \"tables\": [\n+                        {\n+                            \"id\": \"two_connector.table1\",\n+                            \"selects\": \"two_connector.table1.alter_select\"\n+                        },\n+                        {\n+                            \"id\": \"two_connector.table2\"\n+                        }\n+                    ]\n+                }\n+            ]\n+        }\n+    },\n+    \"concepts\": [\n+        \"/tests/form/shared/two_connector.concept.json\",\n+        \"/tests/form/shared/abc.concept.json\"\n+    ],\n+    \"content\": {\n+        \"secondaryIds\": [\n+            \"/tests/form/shared/secondary.sid.json\"\n+        ],\n+        \"tables\": [\n+            \"/tests/form/shared/vers_stamm.table.json\",\n+            \"/tests/form/shared/abc.table.json\"\n+        ],\n+        \"previousQueries\": [\n+            {\n+                \"type\": \"SECONDARY_ID_QUERY\",\n+                \"secondaryId\": \"secondary\",\n+                \"root\": {\n+                    \"type\": \"AND\",\n+                    \"children\": [\n+                        {\n+                            \"type\": \"CONCEPT\",\n+                            \"excludeFromSecondaryIdQuery\": false,\n+                            \"ids\": [\n+                                \"abc-concept.a\"\n+                            ],\n+                            \"tables\": [\n+                                {\n+                                    \"id\": \"abc-concept.connector\"\n+                                }\n+                            ]\n+                        }\n+                    ]\n+                }\n+            }\n+        ]\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "7adf0e053c3c5ea715c9fcbc5980a5a01949f8ea",
    "filename": "backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/SECONDARY_ID/expected.csv",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/SECONDARY_ID/expected.csv",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/SECONDARY_ID/expected.csv",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/EXPORT_FORM/ENTITY_DATE/SECONDARY_ID/expected.csv?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -0,0 +1,7 @@\n+result,resolution,index,date_range,explicitly set select - Table1 Ausgabe Alter\n+1,complete,,2012-03-01/2012-03-02,55\n+1,year,1,2012-03-01/2012-03-02,55\n+1,quarter,1,2012-03-01/2012-03-02,55\n+1,complete,,2012-03-04/2012-03-04,55\n+1,year,1,2012-03-04/2012-03-04,55\n+1,quarter,1,2012-03-04/2012-03-04,55\n\\ No newline at end of file"
  },
  {
    "sha": "0fd97a5c60d0fa70b60d3a1016955b0efc42ce6d",
    "filename": "backend/src/test/resources/tests/form/EXPORT_FORM/RELATIVE/SECONDARY_ID/SECONDARY_ID.test.json",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/RELATIVE/SECONDARY_ID/SECONDARY_ID.test.json",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/RELATIVE/SECONDARY_ID/SECONDARY_ID.test.json",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/EXPORT_FORM/RELATIVE/SECONDARY_ID/SECONDARY_ID.test.json?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -0,0 +1,73 @@\n+{\n+    \"type\": \"FORM_TEST\",\n+    \"label\": \"REL-EXPORT-FORM SECONDARY_ID\",\n+    \"expectedCsv\": {\n+        \"results\": \"/tests/form/EXPORT_FORM/RELATIVE/SECONDARY_ID/expected.csv\"\n+    },\n+    \"form\": {\n+        \"type\": \"EXPORT_FORM\",\n+        \"queryGroup\": \"00000000-0000-0000-0000-000000000001\",\n+        \"resolution\": \"QUARTERS\",\n+        \"timeMode\": {\n+            \"value\": \"RELATIVE\",\n+            \"indexSelector\": \"EARLIEST\",\n+            \"timeUnit\" : \"QUARTERS\",\n+            \"indexPlacement\" : \"BEFORE\",\n+            \"timeCountBefore\" : 4,\n+            \"features\": [\n+                {\n+                    \"ids\": [\n+                        \"two_connector\"\n+                    ],\n+                    \"type\": \"CONCEPT\",\n+                    \"label\": \"explicitly set select\",\n+                    \"tables\": [\n+                        {\n+                            \"id\": \"two_connector.table1\",\n+                            \"selects\": \"two_connector.table1.alter_select\"\n+                        },\n+                        {\n+                            \"id\": \"two_connector.table2\"\n+                        }\n+                    ]\n+                }\n+            ]\n+        }\n+    },\n+    \"concepts\": [\n+        \"/tests/form/shared/two_connector.concept.json\",\n+        \"/tests/form/shared/abc.concept.json\"\n+    ],\n+    \"content\": {\n+        \"secondaryIds\": [\n+            \"/tests/form/shared/secondary.sid.json\"\n+        ],\n+        \"tables\": [\n+            \"/tests/form/shared/vers_stamm.table.json\",\n+            \"/tests/form/shared/abc.table.json\"\n+        ],\n+        \"previousQueries\": [\n+            {\n+                \"type\": \"SECONDARY_ID_QUERY\",\n+                \"secondaryId\": \"secondary\",\n+                \"root\": {\n+                    \"type\": \"AND\",\n+                    \"children\": [\n+                        {\n+                            \"type\": \"CONCEPT\",\n+                            \"excludeFromSecondaryIdQuery\": false,\n+                            \"ids\": [\n+                                \"abc-concept.a\"\n+                            ],\n+                            \"tables\": [\n+                                {\n+                                    \"id\": \"abc-concept.connector\"\n+                                }\n+                            ]\n+                        }\n+                    ]\n+                }\n+            }\n+        ]\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "9b94da45d30f99e80f925a246a5c0bd79b946da1",
    "filename": "backend/src/test/resources/tests/form/EXPORT_FORM/RELATIVE/SECONDARY_ID/expected.csv",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/RELATIVE/SECONDARY_ID/expected.csv",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/EXPORT_FORM/RELATIVE/SECONDARY_ID/expected.csv",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/EXPORT_FORM/RELATIVE/SECONDARY_ID/expected.csv?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -0,0 +1,7 @@\n+result,resolution,index,event_date,feature_date_range,explicitly set select - Table1 Ausgabe Alter\n+1,complete,,2012-03-01,2011-04-01/2012-03-31,55\n+1,year,0,2012-03-01,2011-04-01/2012-03-31,55\n+1,quarter,-3,2012-03-01,2011-04-01/2011-06-30,\n+1,quarter,-2,2012-03-01,2011-07-01/2011-09-30,\n+1,quarter,-1,2012-03-01,2011-10-01/2011-12-31,\n+1,quarter,0,2012-03-01,2012-01-01/2012-03-31,55"
  },
  {
    "sha": "a8222391d8cff0794c885605dbbab7e6fa3e9498",
    "filename": "backend/src/test/resources/tests/form/shared/abc.csv",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/shared/abc.csv",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/shared/abc.csv",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/shared/abc.csv?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -1,7 +1,7 @@\n-pid,datum,column\n-1,2012-03-01,\"A\"\n-1,2012-03-02,\"A\"\n-1,2012-03-04,\"A\"\n-1,2012-03-02,\"B\"\n-1,2012-03-04,\"B\"\n-1,2012-03-06,\"B\"\n\\ No newline at end of file\n+pid,second_id,datum,column\n+1,1,2012-03-01,\"A\"\n+1,1,2012-03-02,\"A\"\n+1,2,2012-03-04,\"A\"\n+1,1,2012-03-02,\"B\"\n+1,2,2012-03-04,\"B\"\n+1,3,2012-03-06,\"B\"\n\\ No newline at end of file"
  },
  {
    "sha": "20cb02c8f657a5f1d0c36151570453254f6916a7",
    "filename": "backend/src/test/resources/tests/form/shared/abc.table.json",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/shared/abc.table.json",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/shared/abc.table.json",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/shared/abc.table.json?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -6,6 +6,11 @@\n       \"type\": \"STRING\"\n     },\n     \"columns\": [\n+      {\n+        \"name\": \"second_id\",\n+        \"type\": \"STRING\",\n+        \"secondaryId\": \"secondary\"\n+      },\n       {\n         \"name\": \"datum\",\n         \"type\": \"DATE\""
  },
  {
    "sha": "57fddb3266fa4f67ab918a0a9890e8bc210005b6",
    "filename": "backend/src/test/resources/tests/form/shared/secondary.sid.json",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/bakdata/conquery/blob/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/shared/secondary.sid.json",
    "raw_url": "https://github.com/bakdata/conquery/raw/9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34/backend/src/test/resources/tests/form/shared/secondary.sid.json",
    "contents_url": "https://api.github.com/repos/bakdata/conquery/contents/backend/src/test/resources/tests/form/shared/secondary.sid.json?ref=9b5f036de6c8f12ed07c6de7e7f1a43b8da26f34",
    "patch": "@@ -0,0 +1,3 @@\n+{\n+    \"name\": \"secondary\"\n+}\n\\ No newline at end of file"
  }
]
