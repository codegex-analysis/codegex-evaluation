[
  {
    "sha": "390b6a5f7ec4e36fe90f01ea59b7f19e24f23242",
    "filename": "src/com/nimooli/mvc/Utils.java",
    "status": "modified",
    "additions": 58,
    "deletions": 1,
    "changes": 59,
    "blob_url": "https://github.com/bhui0003/MVC-Game-Sample/blob/fd43aa1b2fe64192bb483a559aff95b98e394055/src/com/nimooli/mvc/Utils.java",
    "raw_url": "https://github.com/bhui0003/MVC-Game-Sample/raw/fd43aa1b2fe64192bb483a559aff95b98e394055/src/com/nimooli/mvc/Utils.java",
    "contents_url": "https://api.github.com/repos/bhui0003/MVC-Game-Sample/contents/src/com/nimooli/mvc/Utils.java?ref=fd43aa1b2fe64192bb483a559aff95b98e394055",
    "patch": "@@ -9,6 +9,10 @@\n \n /**\n  * Created by Nima Ghafoori on 5/9/14.\n+ * Modified by Luigi Ferrari on 5 March 2021\n+ *  - getElementsFromFile(String filePath)\n+ *    Problems arise if the path contains spaces. \n+ *    Now we use InputStream instead. \n  */\n public class Utils {\n \n@@ -29,6 +33,7 @@\n      * @throws java.lang.Exception        If file doesn't exist or is a directory.\n      * @throws java.lang.RuntimeException If file does not contain valid configuration.\n      */\n+    @Deprecated\n     public static Config getElementsFromFile(String filePath) throws Exception {\n \n         Config config = null;\n@@ -38,9 +43,9 @@ public static Config getElementsFromFile(String filePath) throws Exception {\n         int maxLineLngth; // The first line in input file determines the maximum length of a row\n         List<Element> elementsFromConfig = new ArrayList<Element>();\n \n-\n         try {\n             file = new File(filePath);\n+            \n \n             if (!file.exists() || file.isDirectory()) {\n                 throw new Exception(\"File \" + filePath + \" does not exist or is a directory\");\n@@ -96,7 +101,59 @@ public static Config getElementsFromFile(String filePath) throws Exception {\n         return config;\n     }\n \n+   /**\n+     * Loads a configuration file and parses its configuration.\n+     * If parsing goes without error, a Config object is created\n+     *\n+     * @throws java.lang.RuntimeException If file does not contain valid configuration.\n+     */\n+    public static Config getElementsFromFile(InputStream stream) throws Exception {\n+        Config config = null;\n+        File file;\n+        BufferedReader reader = null;\n+        int maxLineLngth; // The first line in input file determines the maximum length of a row\n+        List<Element> elementsFromConfig = new ArrayList<Element>();\n+\n+        try {\n+            // Read the file character by character and parse it\n+            reader = new BufferedReader(new InputStreamReader(stream));\n+\n+            String line = reader.readLine();\n+            maxLineLngth = line.length();\n+\n+            if (maxLineLngth == 0) {\n+                throw new Exception(\"File \" /*+ filePath/*/ + \" contains an empty row.\");\n+            }\n+\n+            while (line != null) {\n+                for (char c : line.toCharArray()) {\n+                    Element e;\n+                    if (c == ' ') {\n+                        e = getElementFromChar('e');\n+                    } else {\n+                        e = getElementFromChar(c);\n+                    }\n+                    elementsFromConfig.add(e);\n+                }\n+                line = reader.readLine();\n+            }\n+            \n+            config = new Config(elementsFromConfig, maxLineLngth);\n+           \n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        } finally {\n+            try {\n+              if (reader != null)\n+                 reader.close();\n+            } catch (IOException e) {\n+            }\n+        }\n+\n+        return config;\n+    }\n \n+   \n     /**\n      * @param c Character representing an element\n      * @return an Element for valid c or null otherwise"
  },
  {
    "sha": "25ba0a12a75c7c617216d63d740474927b53493b",
    "filename": "src/com/nimooli/mvc/controller/MainController.java",
    "status": "modified",
    "additions": 7,
    "deletions": 2,
    "changes": 9,
    "blob_url": "https://github.com/bhui0003/MVC-Game-Sample/blob/fd43aa1b2fe64192bb483a559aff95b98e394055/src/com/nimooli/mvc/controller/MainController.java",
    "raw_url": "https://github.com/bhui0003/MVC-Game-Sample/raw/fd43aa1b2fe64192bb483a559aff95b98e394055/src/com/nimooli/mvc/controller/MainController.java",
    "contents_url": "https://api.github.com/repos/bhui0003/MVC-Game-Sample/contents/src/com/nimooli/mvc/controller/MainController.java?ref=fd43aa1b2fe64192bb483a559aff95b98e394055",
    "patch": "@@ -6,6 +6,7 @@\n import com.nimooli.mvc.model.DIRECTION;\n import com.nimooli.mvc.model.Mouse;\n import com.nimooli.mvc.view.BoardView;\n+import java.io.InputStream;\n \n import javax.swing.*;\n import java.awt.*;\n@@ -17,6 +18,9 @@\n \n /**\n  * Created by Nima Ghafoori on 5/9/14.\n+ * Modified by Luigi Ferrari on 5 March 2021\n+ *  - URL configFileUrl = Utils.class.getResource(path):\n+ *    problems arise if the path contains spaces. \n  */\n public class MainController extends JFrame implements ActionListener,\n         KeyListener {\n@@ -149,10 +153,11 @@ private void newGame(int level) {\n         }\n \n         // Add the board view to main panel\n-        URL configFileUrl = Utils.class.getResource(\"levels/\" + level);\n+        InputStream is = Utils.class.getResourceAsStream(\"levels/\" + level); \n+        System.out.println(\"InputStream \"+ is.toString());\n         Config config = null;\n         try {\n-            config = Utils.getElementsFromFile(configFileUrl.getPath());\n+            config = Utils.getElementsFromFile(is);\n         } catch (Exception e) {\n             e.printStackTrace();\n         }"
  }
]
