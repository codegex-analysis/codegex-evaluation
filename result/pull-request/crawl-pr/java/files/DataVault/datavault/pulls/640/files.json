[
  {
    "sha": "5100740aa15fd15fe7e7879b760514c11a8ae858",
    "filename": "datavault-broker/src/main/java/org/datavaultplatform/broker/controllers/DepositsController.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/DataVault/datavault/blob/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-broker/src/main/java/org/datavaultplatform/broker/controllers/DepositsController.java",
    "raw_url": "https://github.com/DataVault/datavault/raw/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-broker/src/main/java/org/datavaultplatform/broker/controllers/DepositsController.java",
    "contents_url": "https://api.github.com/repos/DataVault/datavault/contents/datavault-broker/src/main/java/org/datavaultplatform/broker/controllers/DepositsController.java?ref=0e4b540b4d7bc9240ce51284363083979dbe83bc",
    "patch": "@@ -47,6 +47,8 @@\n     private String occRetryTime;\n     private String tsmMaxRetries;\n     private String occMaxRetries;\n+    private String ociNameSpace;\n+    private String ociBucketName;\n \n     private static final Logger logger = LoggerFactory.getLogger(DepositsController.class);\n     \n@@ -134,6 +136,10 @@ public void setOccMaxRetries(String occMaxRetries) {\n         this.occMaxRetries = occMaxRetries;\n     }\n \n+    public void setOciNameSpace(String ociNameSpace) { this.ociNameSpace = ociNameSpace; }\n+\n+    public void setOciBucketName(String ociBucketName) { this.ociBucketName = ociBucketName; }\n+\n     @RequestMapping(value = \"/deposits/{depositid}\", method = RequestMethod.GET)\n     public DepositInfo getDeposit(@RequestHeader(value = \"X-UserID\", required = true) String userID,\n                                   @PathVariable(\"depositid\") String depositID) throws Exception {\n@@ -410,6 +416,12 @@ public Boolean retrieveDeposit(@RequestHeader(value = \"X-UserID\", required = tru\n                     if (this.occMaxRetries != null && ! this.occMaxRetries.equals(\"\")) {\n                         asProps.put(\"occMaxRetries\", this.occMaxRetries);\n                     }\n+                    if (this.ociBucketName != null && ! this.ociBucketName.equals(\"\")) {\n+                        asProps.put(\"ociBucketName\", this.ociBucketName);\n+                    }\n+                    if (this.ociNameSpace != null && ! this.ociNameSpace.equals(\"\")) {\n+                        asProps.put(\"ociNameSpace\", this.ociNameSpace);\n+                    }\n                     archiveStore.setProperties(asProps);\n                 }\n "
  },
  {
    "sha": "d0725cb2f90c3103f4c531d8b31a67094dd24adc",
    "filename": "datavault-broker/src/main/java/org/datavaultplatform/broker/scheduled/AuditDepositsChunks.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/DataVault/datavault/blob/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-broker/src/main/java/org/datavaultplatform/broker/scheduled/AuditDepositsChunks.java",
    "raw_url": "https://github.com/DataVault/datavault/raw/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-broker/src/main/java/org/datavaultplatform/broker/scheduled/AuditDepositsChunks.java",
    "contents_url": "https://api.github.com/repos/DataVault/datavault/contents/datavault-broker/src/main/java/org/datavaultplatform/broker/scheduled/AuditDepositsChunks.java?ref=0e4b540b4d7bc9240ce51284363083979dbe83bc",
    "patch": "@@ -28,6 +28,8 @@\n     private String occRetryTime;\n     private String tsmMaxRetries;\n     private String occMaxRetries;\n+    private String ociNameSpace;\n+    private String ociBucketName;\n \n     public void setDepositsService(DepositsService depositsService) {\n         this.depositsService = depositsService;\n@@ -69,6 +71,8 @@ public void setOccMaxRetries(String occMaxRetries) {\n         this.occMaxRetries = occMaxRetries;\n     }\n     public void setSender(Sender sender) { this.sender = sender; }\n+    public void setOciNameSpace(String ociNameSpace) { this.ociNameSpace = ociNameSpace; }\n+    public void setOciBucketName(String ociBucketName) { this.ociBucketName = ociBucketName; }\n \n     public void execute() throws Exception {\n         Date now = new Date();\n@@ -192,6 +196,12 @@ public void execute() throws Exception {\n                     if (this.occMaxRetries != null && ! this.occMaxRetries.equals(\"\")) {\n                         asProps.put(\"occMaxRetries\", this.occMaxRetries);\n                     }\n+                    if (this.ociBucketName != null && ! this.ociBucketName.equals(\"\")) {\n+                        asProps.put(\"ociBucketName\", this.ociBucketName);\n+                    }\n+                    if (this.ociNameSpace != null && ! this.ociNameSpace.equals(\"\")) {\n+                        asProps.put(\"ociNameSpace\", this.ociNameSpace);\n+                    }\n                     archiveStore.setProperties(asProps);\n                 }\n "
  },
  {
    "sha": "25ad498a6046948dc7129711bef4d0994f27b7dd",
    "filename": "datavault-broker/src/main/java/org/datavaultplatform/broker/services/ArchiveStoreService.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/DataVault/datavault/blob/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-broker/src/main/java/org/datavaultplatform/broker/services/ArchiveStoreService.java",
    "raw_url": "https://github.com/DataVault/datavault/raw/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-broker/src/main/java/org/datavaultplatform/broker/services/ArchiveStoreService.java",
    "contents_url": "https://api.github.com/repos/DataVault/datavault/contents/datavault-broker/src/main/java/org/datavaultplatform/broker/services/ArchiveStoreService.java?ref=0e4b540b4d7bc9240ce51284363083979dbe83bc",
    "patch": "@@ -18,6 +18,8 @@\n     private String occRetryTime;\n     private String tsmMaxRetries;\n     private String occMaxRetries;\n+    private String ociNameSpace;\n+    private String ociBucketName;\n \n     private ArchiveStoreDAO archiveStoreDAO;\n \n@@ -61,6 +63,10 @@ public void setOccMaxRetries(String occMaxRetries) {\n         this.occMaxRetries = occMaxRetries;\n     }\n \n+    public void setOciNameSpace(String ociNameSpace) { this.ociNameSpace = ociNameSpace; }\n+\n+    public void setOciBucketName(String ociBucketName) { this.ociBucketName = ociBucketName; }\n+\n     public List<ArchiveStore> getArchiveStores() {\n         return archiveStoreDAO.list();\n     }\n@@ -123,6 +129,12 @@ public void setArchiveStoreDAO(ArchiveStoreDAO archiveStoreDAO) {\n                     if (this.occMaxRetries != null && ! this.occMaxRetries.equals(\"\")) {\n                         asProps.put(\"occMaxRetries\", this.occMaxRetries);\n                     }\n+                    if (this.ociBucketName != null && ! this.ociBucketName.equals(\"\")) {\n+                        asProps.put(\"ociBucketName\", this.ociBucketName);\n+                    }\n+                    if (this.ociNameSpace != null && ! this.ociNameSpace.equals(\"\")) {\n+                        asProps.put(\"ociNameSpace\", this.ociNameSpace);\n+                    }\n                     archiveStore.setProperties(asProps);\n                 }\n "
  },
  {
    "sha": "04b0ace7472ada582ea981b512998f613ad26d5f",
    "filename": "datavault-broker/src/main/webapp/WEB-INF/datavault-broker-root.xml",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/DataVault/datavault/blob/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-broker/src/main/webapp/WEB-INF/datavault-broker-root.xml",
    "raw_url": "https://github.com/DataVault/datavault/raw/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-broker/src/main/webapp/WEB-INF/datavault-broker-root.xml",
    "contents_url": "https://api.github.com/repos/DataVault/datavault/contents/datavault-broker/src/main/webapp/WEB-INF/datavault-broker-root.xml?ref=0e4b540b4d7bc9240ce51284363083979dbe83bc",
    "patch": "@@ -125,6 +125,8 @@\n         <property name=\"tsmMaxRetries\" value=\"${tsmMaxRetries:#{null}}\" />\n         <property name=\"occRetryTime\" value=\"${occRetryTime:#{null}}\" />\n         <property name=\"occMaxRetries\" value=\"${occMaxRetries:#{null}}\" />\n+        <property name=\"ociNameSpace\" value=\"${ociNameSpace:#{null}}\" />\n+        <property name=\"ociBucketName\" value=\"${ociBucketName:#{null}}\" />\n         <property name=\"tempDir\" value=\"${tempDir:#{null}}\" />\n         <property name=\"bucketName\" value=\"${s3.bucketName:#{null}}\" />\n         <property name=\"region\" value=\"${s3.region:#{null}}\" />\n@@ -195,6 +197,8 @@\n         <property name=\"tsmMaxRetries\" value=\"${tsmMaxRetries:#{null}}\" />\n         <property name=\"occRetryTime\" value=\"${occRetryTime:#{null}}\" />\n         <property name=\"occMaxRetries\" value=\"${occMaxRetries:#{null}}\" />\n+        <property name=\"ociNameSpace\" value=\"${ociNameSpace:#{null}}\" />\n+        <property name=\"ociBucketName\" value=\"${ociBucketName:#{null}}\" />\n         <property name=\"tempDir\" value=\"${tempDir:#{null}}\" />\n         <property name=\"bucketName\" value=\"${s3.bucketName:#{null}}\" />\n         <property name=\"region\" value=\"${s3.region:#{null}}\" />\n@@ -323,7 +327,7 @@\n                 <prop key=\"hibernate.dialect\">org.hibernate.dialect.MySQLDialect</prop>\n                 <prop key=\"hibernate.show_sql\">false</prop>\n                 <prop key=\"hibernate.format_sql\">false</prop>\n-                <prop key=\"hibernate.hbm2ddl.auto\">update</prop>\n+                <prop key=\"hibernate.hbm2ddl.auto\">validate</prop>\n                 <prop key=\"hibernate.enable_lazy_load_no_trans\">true</prop>\n                 <prop key=\"hibernate.hbm2ddl.import_files\">/import.sql</prop>\n             </props>"
  },
  {
    "sha": "e07e57d88f5ad40c922d8daea62b244d62c2c11f",
    "filename": "datavault-broker/src/main/webapp/WEB-INF/datavault-broker-servlet.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/DataVault/datavault/blob/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-broker/src/main/webapp/WEB-INF/datavault-broker-servlet.xml",
    "raw_url": "https://github.com/DataVault/datavault/raw/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-broker/src/main/webapp/WEB-INF/datavault-broker-servlet.xml",
    "contents_url": "https://api.github.com/repos/DataVault/datavault/contents/datavault-broker/src/main/webapp/WEB-INF/datavault-broker-servlet.xml?ref=0e4b540b4d7bc9240ce51284363083979dbe83bc",
    "patch": "@@ -79,6 +79,8 @@\n         <property name=\"tsmMaxRetries\" value=\"${tsmMaxRetries:#{null}}\" />\n         <property name=\"occRetryTime\" value=\"${occRetryTime:#{null}}\" />\n         <property name=\"occMaxRetries\" value=\"${occMaxRetries:#{null}}\" />\n+        <property name=\"ociNameSpace\" value=\"${ociNameSpace:#{null}}\" />\n+        <property name=\"ociBucketName\" value=\"${ociBucketName:#{null}}\" />\n         <property name=\"tempDir\" value=\"${tempDir:#{null}}\" />\n         <property name=\"bucketName\" value=\"${s3.bucketName:#{null}}\" />\n         <property name=\"region\" value=\"${s3.region:#{null}}\" />"
  },
  {
    "sha": "9c2b3141594baa72c3467c4484e86a986733f936",
    "filename": "datavault-common/pom.xml",
    "status": "modified",
    "additions": 26,
    "deletions": 30,
    "changes": 56,
    "blob_url": "https://github.com/DataVault/datavault/blob/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-common/pom.xml",
    "raw_url": "https://github.com/DataVault/datavault/raw/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-common/pom.xml",
    "contents_url": "https://api.github.com/repos/DataVault/datavault/contents/datavault-common/pom.xml?ref=0e4b540b4d7bc9240ce51284363083979dbe83bc",
    "patch": "@@ -27,6 +27,15 @@\n                 <type>pom</type>\n                 <scope>import</scope>\n             </dependency>\n+            <!-- Oracle Gen 2 -->\n+            <dependency>\n+                <groupId>com.oracle.oci.sdk</groupId>\n+                <artifactId>oci-java-sdk-bom</artifactId>\n+                <!-- replace the version below with your required version -->\n+                <version>1.23.2</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n         </dependencies>\n     </dependencyManagement>\n     \n@@ -70,15 +79,7 @@\n             <artifactId>jsondoc-core</artifactId>\n             <version>1.2.9</version>\n         </dependency>\n-        \n-        <!-- DropBox -->\n-        <!--\n-        <dependency>\n-            <groupId>com.dropbox.core</groupId>\n-            <artifactId>dropbox-core-sdk</artifactId>\n-            <version>1.8.2</version>\n-        </dependency>\n-        -->\n+\n         <!-- Amazon Glacier -->\n         <dependency>\n             <groupId>com.amazonaws</groupId>\n@@ -92,34 +93,29 @@\n             <groupId>com.amazonaws</groupId>\n             <artifactId>aws-java-sdk-sns</artifactId>\n         </dependency>\n-        <!--  Oracle Cloud Storage Classic -->\n-        <!--\n+\n+        <dependency>\n+            <groupId>com.oracle.oci.sdk</groupId>\n+            <artifactId>oci-java-sdk-common</artifactId>\n+        </dependency>\n         <dependency>\n-    \t\t<groupId>oracle.cloudstorage.ftm</groupId>\n-    \t\t<artifactId>ftm-api</artifactId>\n-    \t\t<version>1.0</version>\n-  \t\t</dependency>\n+            <groupId>com.oracle.oci.sdk</groupId>\n+            <artifactId>oci-java-sdk-core</artifactId>\n+        </dependency>\n         <dependency>\n-            <groupId>oracle.cloudstorage.ftm</groupId>\n-            <artifactId>low-level-api-core</artifactId>\n-            <version>1.0</version>\n+            <groupId>com.oracle.oci.sdk</groupId>\n+            <artifactId>oci-java-sdk-objectstorage</artifactId>\n         </dependency>\n-        -->\n         <dependency>\n-            <groupId>ftm-sdk-2.4.2</groupId>\n-            <artifactId>ftm-api</artifactId>\n-            <version>2.4.2</version>\n-            <scope>system</scope>\n-            <systemPath>${root.basedir}/lib/ftm-api-2.4.2.jar</systemPath>\n+            <groupId>com.oracle.oci.sdk</groupId>\n+            <artifactId>oci-java-sdk-objectstorage-extensions</artifactId>\n+            <version>1.23.2</version>\n         </dependency>\n         <dependency>\n-            <groupId>oracle.cloudstorage.ftm</groupId>\n-            <artifactId>low-level-api-core</artifactId>\n-            <version>1.14.19</version>\n-            <scope>system</scope>\n-            <systemPath>${root.basedir}/lib/low-level-api-core-1.14.19.jar</systemPath>\n+            <groupId>com.oracle.oci.sdk</groupId>\n+            <artifactId>oci-java-sdk-objectstorage-generated</artifactId>\n+            <version>1.23.2</version>\n         </dependency>\n-\n         <dependency>\n     \t\t<groupId>org.glassfish</groupId>\n     \t\t<artifactId>javax.json</artifactId>"
  },
  {
    "sha": "8a5099f059712d08e4cdc69c61b34549476f14f5",
    "filename": "datavault-common/src/main/java/org/datavaultplatform/common/storage/impl/DropboxFileSystem.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/DataVault/datavault/blob/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-common/src/main/java/org/datavaultplatform/common/storage/impl/DropboxFileSystem.java",
    "raw_url": "https://github.com/DataVault/datavault/raw/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-common/src/main/java/org/datavaultplatform/common/storage/impl/DropboxFileSystem.java",
    "contents_url": "https://api.github.com/repos/DataVault/datavault/contents/datavault-common/src/main/java/org/datavaultplatform/common/storage/impl/DropboxFileSystem.java?ref=0e4b540b4d7bc9240ce51284363083979dbe83bc",
    "patch": "@@ -48,7 +48,7 @@ public DropboxFileSystem(String name, Map<String,String> config) throws IOExcept\n     \n     @Override\n     public List<FileInfo> list(String path) {\n-        \n+\n         /*if (!path.startsWith(PATH_SEPARATOR)) {\n             path = PATH_SEPARATOR + path;\n         }*/\n@@ -300,7 +300,7 @@ public long getUsableSpace() throws Exception {\n \n     @Override\n     public void retrieve(String path, File working, Progress progress) throws Exception {\n-        \n+\n         /*if (!path.startsWith(PATH_SEPARATOR)) {\n             path = PATH_SEPARATOR + path;\n         }\n@@ -313,7 +313,7 @@ public String store(String path, File working, Progress progress) throws Excepti\n \n         /*// TODO: cleanup path handling - Dropbox paths MUST start with a \"/\"\n         \n-        if (!path.startsWith(PATH_SEPARATOR)) {\n+        /*if (!path.startsWith(PATH_SEPARATOR)) {\n             path = PATH_SEPARATOR + path;\n         }\n         "
  },
  {
    "sha": "c8053776504f986ceaf37a935ec1226483c29d6b",
    "filename": "datavault-common/src/main/java/org/datavaultplatform/common/storage/impl/OracleObjectStorageClassic.java",
    "status": "modified",
    "additions": 173,
    "deletions": 103,
    "changes": 276,
    "blob_url": "https://github.com/DataVault/datavault/blob/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-common/src/main/java/org/datavaultplatform/common/storage/impl/OracleObjectStorageClassic.java",
    "raw_url": "https://github.com/DataVault/datavault/raw/0e4b540b4d7bc9240ce51284363083979dbe83bc/datavault-common/src/main/java/org/datavaultplatform/common/storage/impl/OracleObjectStorageClassic.java",
    "contents_url": "https://api.github.com/repos/DataVault/datavault/contents/datavault-common/src/main/java/org/datavaultplatform/common/storage/impl/OracleObjectStorageClassic.java?ref=0e4b540b4d7bc9240ce51284363083979dbe83bc",
    "patch": "@@ -1,62 +1,57 @@\n package org.datavaultplatform.common.storage.impl;\n \n import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.InputStream;\n import java.util.Map;\n-import java.util.Properties;\n-import java.util.concurrent.*;\n-//import java.util.concurrent.atomic.AtomicReference;\n+import java.util.concurrent.TimeUnit;\n \n+import com.oracle.bmc.ConfigFileReader;\n+import com.oracle.bmc.auth.AuthenticationDetailsProvider;\n+import com.oracle.bmc.auth.ConfigFileAuthenticationDetailsProvider;\n+import com.oracle.bmc.objectstorage.ObjectStorage;\n+import com.oracle.bmc.objectstorage.ObjectStorageClient;\n+import com.oracle.bmc.objectstorage.model.RestoreObjectsDetails;\n+import com.oracle.bmc.objectstorage.requests.*;\n+import com.oracle.bmc.objectstorage.responses.*;\n+import com.oracle.bmc.objectstorage.transfer.UploadConfiguration;\n+import com.oracle.bmc.objectstorage.transfer.UploadManager;\n+import org.apache.commons.io.FileUtils;\n import org.datavaultplatform.common.io.Progress;\n import org.datavaultplatform.common.storage.ArchiveStore;\n import org.datavaultplatform.common.storage.Device;\n import org.datavaultplatform.common.storage.Verify;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import oracle.cloudstorage.ftm.CloudStorageClass;\n-import oracle.cloudstorage.ftm.DownloadConfig;\n-import oracle.cloudstorage.ftm.FileTransferAuth;\n-import oracle.cloudstorage.ftm.FileTransferManager;\n-import oracle.cloudstorage.ftm.TransferResult;\n-import oracle.cloudstorage.ftm.TransferState;\n-import oracle.cloudstorage.ftm.UploadConfig;\n-import oracle.cloudstorage.ftm.exception.ClientException;\n-import oracle.cloudstorage.ftm.exception.ObjectExists;\n-import oracle.cloudstorage.ftm.exception.ObjectNotFound;\n+/*\n+This class has been upgraded to use the Gen 2 Oracle Object Storage rather than classic.\n+For reasons it was easier to do this than add a new Gen 2 plugin due to there currently\n+being no mechanism for changing the plugins of a deployed instance.\n \n+To be clean despite being named OracleObjecStorageClassic it uses OCI not OCC\n+ */\n public class OracleObjectStorageClassic extends Device implements ArchiveStore {\n \t\n \tprivate static final Logger logger = LoggerFactory.getLogger(OracleObjectStorageClassic.class);\n \tprivate static String DEFAULT_CONTAINER_NAME = \"datavault-container-edina\";\n \tpublic Verify.Method verificationMethod = Verify.Method.CLOUD;\n-\tprivate static final String PROPERTIES_FILE_PATH = System.getProperty(\"user.home\") + \"/.occ/occ.properties\";\n-\tprivate FileTransferManager manager = null;\n-\tprivate static String USER_NAME = \"user-name\";\n-\tprivate static String PASSWORD = \"password\";\n-\tprivate static String SERVICE_NAME = \"service-name\";\n-\tprivate static String SERVICE_URL = \"service-url\";\n-\tprivate static String IDENTITY_DOMAIN = \"identity-domain\";\n-\tprivate static String CONTAINER_NAME = \"container-name\";\n+\tprivate ObjectStorage client = null;\n+\tprivate static final String CONFIG_FILE_PATH = System.getProperty(\"user.home\") + \"/.oci/config\";\n+\tprivate static final String PROFILE = \"DEFAULT\";\n \tprivate static int defaultRetryTime = 30;\n \tprivate static int defaultMaxRetries = 48; // 24 hours if retry time is 30 minutes\n \tprivate static int retryTime = OracleObjectStorageClassic.defaultRetryTime;\n \tprivate static int maxRetries = OracleObjectStorageClassic.defaultMaxRetries;\n-\t\n-\t/*\n-\t * Add local jars to mvn\n-\t * mvn install:install-file -Dfile=/Users/dspeed2/Downloads/ftm-sdk-2.4.2/libs/ftm-api-2.4.2.jar -DgroupId=oracle.cloudstorage.ftm -DartifactId=ftm-api -Dversion=1.0 -Dpackaging=jar\n-\t * mvn install:install-file -Dfile=/Users/dspeed2/Downloads/ftm-sdk-2.4.2/libs/low-level-api-core-1.14.19.jar -DgroupId=oracle.cloudstorage.ftm -DartifactId=low-level-api-core -Dversion=1.0 -Dpackaging=jar\n-\t * \n-\t * javax.json-1.0.4.jar has been added to the common project pom file and when I tried to add the other jars from the sample code to the pom the validator said they were \n-\t * already managed ( log4j-1.2.17.jar, slf4j-api-1.7.7.jar, slf4j-log4j12-1.7.7.jar) \n-\t */\n+\tprivate static String restoredKey = \"Restored\";\n+\tprivate static String nameSpaceName = \"testNameSpace\";\n+\tprivate static String bucketName = \"testBucketName\";\n+\n \tpublic OracleObjectStorageClassic(String name, Map<String, String> config) throws Exception {\n \t\tsuper(name, config);\n \t\tsuper.depositIdStorageKey = true;\n \t\tString retryKey = \"occRetryTime\";\n \t\tString maxKey = \"occMaxRetries\";\n+\t\tString nameSpace = \"ociNameSpace\";\n+\t\tString bucketName = \"ociBucketName\";\n \n \t\tif (config.containsKey(retryKey)){\n \t\t\ttry {\n@@ -72,6 +67,16 @@ public OracleObjectStorageClassic(String name, Map<String, String> config) throw\n \t\t\t\tOracleObjectStorageClassic.maxRetries = OracleObjectStorageClassic.defaultMaxRetries;\n \t\t\t}\n \t\t}\n+\n+\t\tif (config.containsKey(nameSpace)){\n+\t\t\tlogger.debug(\"Got namespace config \" + config.get(nameSpace));\n+\t\t\tOracleObjectStorageClassic.nameSpaceName = config.get(nameSpace);\n+\t\t}\n+\n+\t\tif (config.containsKey(bucketName)){\n+\t\t\tlogger.debug(\"Got bucketName config\" + config.get(bucketName));\n+\t\t\tOracleObjectStorageClassic.bucketName = config.get(bucketName);\n+\t\t}\n \t}\n \n \t@Override\n@@ -86,78 +91,90 @@ public long getUsableSpace() throws Exception {\n \n \t@Override\n \tpublic void retrieve(String depositId, File working, Progress progress) throws Exception {\n+\t\tRestoreObjectsDetails restoreObjectDetails = RestoreObjectsDetails.builder()\n+\t\t\t\t.objectName(depositId)\n+\t\t\t\t.hours(24)\n+\t\t\t\t.build();\n+\n+\t\tRestoreObjectsRequest restoreObjectsRequest = RestoreObjectsRequest.builder()\n+\t\t\t\t.namespaceName(OracleObjectStorageClassic.nameSpaceName)\n+\t\t\t\t.bucketName(OracleObjectStorageClassic.bucketName)\n+\t\t\t\t.restoreObjectsDetails(restoreObjectDetails)\n+\t\t\t\t.build();\n+\n+\t\tHeadObjectRequest headObjectRequest = HeadObjectRequest.builder()\n+\t\t\t\t.namespaceName(OracleObjectStorageClassic.nameSpaceName)\n+\t\t\t\t.bucketName(OracleObjectStorageClassic.bucketName)\n+\t\t\t\t.objectName(depositId)\n+\t\t\t\t.build();\n+\n+\t\tGetObjectRequest getObjectRequest = GetObjectRequest.builder()\n+\t\t\t\t.namespaceName(OracleObjectStorageClassic.nameSpaceName)\n+\t\t\t\t.bucketName(OracleObjectStorageClassic.bucketName)\n+\t\t\t\t.objectName(depositId)\n+\t\t\t\t.build();\n+\n \t\tfor (int r = 0; r < OracleObjectStorageClassic.maxRetries; r++) {\n \t\t\ttry {\n-\t\t\t\tthis.manager = FileTransferManager.getDefaultFileTransferManager(this.getTransferAuth());\n-\t\t\t\tDownloadConfig downloadConfig = new DownloadConfig();\n-\t\t\t\tString containerName = this.getContainerName();\n-\t            TransferResult downloadResult = manager.download(downloadConfig, containerName, depositId, working);\n-\t            logger.info(\"Task completed. State:\" + downloadResult.toString());\n-\t            TransferState ts = downloadResult.getState();\n-\t            while (ts.equals(TransferState.RestoreInProgress)) {\n-\t                    logger.info(\"Restore in progress. % completed: \" + downloadResult.getRestoreCompletedPercentage());\n-\t                    Thread.sleep(1 * 60 * 1000); // Wait for 1 mins.\n-\t                    downloadResult = manager.download(downloadConfig, containerName, depositId, working);\n-\t                    ts = downloadResult.getState();\n-\t            }\n-\t            logger.info(\"Download Result:\" + downloadResult.toString());\n-\t            break;\n-\t\t\t} catch (ClientException ce) {\n-\t\t\t\tlogger.error(\"Download failed. \" + ce.getMessage());\n-\t\t\t\tif (r == (OracleObjectStorageClassic.maxRetries -1)) {\n-\t\t\t\t\tthrow ce;\n+\t\t\t\t// create new client / manager each time so we can update the config\n+\t\t\t\t// while in the holding pattern\n+\t\t\t\tthis.client = new ObjectStorageClient(this.getAuthDetailsProvider());\n+\t\t\t\t// ask for the object to be restored\n+\t\t\t\tthis.client.restoreObjects(restoreObjectsRequest);\n+\n+\t\t\t\t// check if it has been restored\n+\t\t\t\t//Boolean restored = false;\n+\t\t\t\tint attemptCount = 0;\n+\n+\t\t\t\twhile (true) {\n+\t\t\t\t\t// retry for two hours (restores should be approx 1 hr)\n+\t\t\t\t\tif (attemptCount > (60 / OracleObjectStorageClassic.retryTime) * 2) {\n+\t\t\t\t\t\tthrow new Exception(\"Restore failed\");\n+\t\t\t\t\t}\n+\t\t\t\t\tHeadObjectResponse getHeadObjectResponse = this.client.headObject(headObjectRequest);\n+\t\t\t\t\tlogger.debug(\"Object status is: \" + getHeadObjectResponse.getArchivalState());\n+\t\t\t\t\tif (getHeadObjectResponse.getArchivalState().equals(OracleObjectStorageClassic.restoredKey)) {\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t\tattemptCount++;\n+\t\t\t\t\tTimeUnit.MINUTES.sleep(OracleObjectStorageClassic.retryTime);\n \t\t\t\t}\n-\t\t\t\tTimeUnit.MINUTES.sleep(OracleObjectStorageClassic.retryTime);\n+\t\t\t\t// once restored get it\n+\t\t\t\tGetObjectResponse getObjectResponse = client.getObject(getObjectRequest);\n+\t\t\t\tFileUtils.copyInputStreamToFile(getObjectResponse.getInputStream(), working);\n+\t\t\t\tlogger.info(\"Oracle response:\" + getObjectResponse.toString());\n+\t\t\t\tbreak;\n \t\t\t} catch (Exception e) {\n-\t\t\t\tlogger.error(\"Download failed. \" + e.getMessage());\n-\t\t\t\tif (r == (OracleObjectStorageClassic.maxRetries -1)) {\n+\t\t\t\tlogger.error(\"Retrieve failed. \" + \"Retrying in \" + OracleObjectStorageClassic.retryTime + \" mins \" + e.getMessage());\n+\t\t\t\tif (r == (OracleObjectStorageClassic.maxRetries - 1)) {\n \t\t\t\t\tthrow e;\n \t\t\t\t}\n \t\t\t\tTimeUnit.MINUTES.sleep(OracleObjectStorageClassic.retryTime);\n-\t\t\t} finally {\n-\t\t\t\tif (this.manager != null) {\n-\t\t\t\t\tthis.manager.shutdown();\n-\t\t\t\t}\n \t\t\t}\n \t\t}\n+\n \t\t\n \t}\n \n \t@Override\n \tpublic String store(String depositId, File working, Progress progress) throws Exception {\n \t\tfor (int r = 0; r < OracleObjectStorageClassic.maxRetries; r++) {\n \t\t\ttry {\n-\t\t\t\tString containerName = this.getContainerName();\n-\t\t\t\tthis.manager = FileTransferManager.getDefaultFileTransferManager(this.getTransferAuth());\n-\t\t\t\tUploadConfig uploadConfig = new UploadConfig();\n-\t\t\t\tuploadConfig.setOverwrite(false);\n-\t\t\t\tuploadConfig.setStorageClass(CloudStorageClass.Archive);\n-\t\t\t\tlogger.info(\"Uploading file \" + working.getName() + \" to container \" + containerName + \" as \" + depositId);\n-\t\t\t\tTransferResult uploadResult = this.manager.upload(uploadConfig, containerName, depositId, working);\n-\t\t\t\tlogger.info(\"Upload completed successfully.\");\n-\t\t\t\tlogger.info(\"Upload result:\" + uploadResult.toString());\n-\t\t\t\tbreak;\n-\t\t\t} catch (ObjectExists oe) {\n-\t\t\t\t// if the object already exists we must be attempting to restart a job\n-\t\t\t\t// so just ignore exception and carry on\n-\t\t\t\tlogger.info(\"Uploaded previously: skipping.\");\n+\t\t\t\t// create new client / manager each time so we can update the config\n+\t\t\t\t// while in the holding pattern\n+\n+\t\t\t\tUploadManager uploadManager = this.constructUploadManager(this.getAuthDetailsProvider());\n+\n+\t\t\t\tUploadManager.UploadRequest uploadDetails = this.constructUploadRequest(depositId, working);\n+\t\t\t\tUploadManager.UploadResponse response = uploadManager.upload(uploadDetails);\n+\t\t\t\tlogger.info(\"Oracle response:\" + response.toString());\n \t\t\t\tbreak;\n-\t\t\t} catch (ClientException ce) {\n-\t\t\t\tlogger.error(\"Upload failed. \" + \"Retrying in \" + OracleObjectStorageClassic.retryTime + \" mins \" + ce.getMessage());\n-\t\t\t\tif (r == (OracleObjectStorageClassic.maxRetries -1)) {\n-\t\t\t\t\tthrow ce;\n-\t\t\t\t}\n-\t\t\t\tTimeUnit.MINUTES.sleep(OracleObjectStorageClassic.retryTime);\n \t\t\t} catch (Exception e) {\n \t\t\t\tlogger.error(\"Upload failed. \" + \"Retrying in \" + OracleObjectStorageClassic.retryTime + \" mins \" + e.getMessage());\n-\t\t\t\tif (r == (OracleObjectStorageClassic.maxRetries -1)) {\n+\t\t\t\tif (r == (OracleObjectStorageClassic.maxRetries - 1)) {\n \t\t\t\t\tthrow e;\n \t\t\t\t}\n \t\t\t\tTimeUnit.MINUTES.sleep(OracleObjectStorageClassic.retryTime);\n-\t\t\t} finally {\n-\t\t\t\tif (this.manager != null) {\n-\t\t\t\t\tthis.manager.shutdown();\n-\t\t\t\t}\n \t\t\t}\n \t\t}\n \t\t\n@@ -166,7 +183,7 @@ public String store(String depositId, File working, Progress progress) throws Ex\n \t\n \t@Override\n \tpublic void delete(String path, File working, Progress progress) throws Exception {\n-\t\ttry {\n+\t\t/*try {\n \t\t\tthis.manager = FileTransferManager.getDefaultFileTransferManager(this.getTransferAuth());\n \t\t\tmanager.deleteObject(this.getContainerName(), path);\n             logger.info(\"Delete Successful from Oracle Cloud Storage\");\n@@ -176,37 +193,90 @@ public void delete(String path, File working, Progress progress) throws Exceptio\n \t\t\tif (this.manager != null) {\n \t\t\t\tthis.manager.shutdown();\n \t\t\t}\n+\t\t}*/\n+\n+\t\ttry {\n+\t\t\tthis.client = new ObjectStorageClient(this.getAuthDetailsProvider());\n+\t\t\tDeleteObjectRequest request =\n+\t\t\t\t\tDeleteObjectRequest.builder()\n+\t\t\t\t\t\t\t.bucketName(OracleObjectStorageClassic.bucketName)\n+\t\t\t\t\t\t\t.namespaceName(OracleObjectStorageClassic.nameSpaceName)\n+\t\t\t\t\t\t\t.objectName(path)\n+\t\t\t\t\t\t\t.build();\n+\t\t\tthis.client.deleteObject(request);\n+            logger.info(\"Delete Successful from Oracle Cloud Storage\");\n+\t\t} catch (Exception e) {\n+\t\t\tlogger.error(\"Object does not exists in Oracle Cloud Storage \" + e.getMessage());\n \t\t}\n \t}\n \n-\tprivate String getContainerName() throws Exception {\n+\t/*private String getContainerName() throws Exception {\n \t\tProperties prop = this.getProperties();\n \t\tString contName = prop.getProperty(OracleObjectStorageClassic.CONTAINER_NAME);\n \t\treturn (contName != null) ? contName : OracleObjectStorageClassic.DEFAULT_CONTAINER_NAME;\n+\t}*/\n+\n+\tprivate AuthenticationDetailsProvider getAuthDetailsProvider() throws Exception {\n+\t\tConfigFileReader.ConfigFile config = this.getProperties();\n+\t\tAuthenticationDetailsProvider provider = new ConfigFileAuthenticationDetailsProvider(config);\n+\t\tif (provider == null) {\n+\t\t\tlogger.debug(\"Failed to get provider\");\n+\t\t\tthrow new Exception(\"Failed to get provider\");\n+\t\t}\n+\t\t//logger.debug(\"TenantId '\" + provider.getTenantId() + \"'\");\n+\t\t//logger.debug(\"UserId '\" + provider.getUserId() + \"'\");\n+\t\t//logger.debug(\"Fingerprint '\" + provider.getFingerprint() + \"'\");\n+\t\t//logger.debug(\"KeyId '\" + provider.getKeyId() + \"'\");\n+\t\t//logger.debug(\"PrivateKey '\" + provider.getPrivateKey() + \"'\");\n+\t\t//logger.debug(\"Get AuthDetailsProvider End\");\n+\t\treturn provider;\n \t}\n \n-\tprivate FileTransferAuth getTransferAuth() throws Exception {\n-\t\tProperties prop = this.getProperties();\n-\t\tFileTransferAuth retVal = new FileTransferAuth(\n-\t\t\t\tprop.getProperty(OracleObjectStorageClassic.USER_NAME),\n-\t\t\t\tprop.getProperty(OracleObjectStorageClassic.PASSWORD).toCharArray(),\n-\t\t\t\tprop.getProperty(OracleObjectStorageClassic.SERVICE_NAME),\n-\t\t\t\tprop.getProperty(OracleObjectStorageClassic.SERVICE_URL),\n-\t\t\t\tprop.getProperty(OracleObjectStorageClassic.IDENTITY_DOMAIN)\n-\t\t);\n+\tprivate ConfigFileReader.ConfigFile getProperties() throws Exception {\n+\t\tConfigFileReader.ConfigFile retVal =\n+\t\t\t\tConfigFileReader.parse(OracleObjectStorageClassic.CONFIG_FILE_PATH, OracleObjectStorageClassic.PROFILE);\n+\t\tif (retVal == null) {\n+\t\t\tlogger.debug(\"Problem getting the Oracle config\");\n+\t\t\tthrow new Exception(\"Oracle Config is null\");\n+\t\t}\n+\t\t\n \t\treturn retVal;\n \t}\n \n-\tprivate Properties getProperties() throws Exception {\n-\t\tProperties retVal = new Properties();\n-\t\ttry (InputStream is = new FileInputStream(OracleObjectStorageClassic.PROPERTIES_FILE_PATH)) {\n-\t\t\tretVal.load(is);\n-\t\t} catch (Exception e) {\n-\t\t\tlogger.info(\"Failed to read Occ properties file.\");\n-\t\t\tthrow e;\n-\t\t}\n+\tprivate UploadManager constructUploadManager(AuthenticationDetailsProvider provider) {\n+\t\tthis.client = new ObjectStorageClient(provider);\n \n-\t\treturn retVal;\n+\t\tUploadConfiguration uploadConfiguration =\n+\t\t\t\tUploadConfiguration.builder()\n+\t\t\t\t\t\t.allowMultipartUploads(true)\n+\t\t\t\t\t\t.allowParallelUploads(true)\n+\t\t\t\t\t\t.build();\n+\n+\t\tUploadManager uploadManager = new UploadManager(this.client, uploadConfiguration);\n+\t\treturn uploadManager;\n \t}\n-\t\t\n+\n+\tprivate UploadManager.UploadRequest constructUploadRequest(String depositId, File working) {\n+\n+\t\tMap<String, String> metadata = null;\n+\t\tString contentType = null;\n+\t\tString contentEncoding = null;\n+\t\tString contentLanguage = null;\n+\n+\t\tPutObjectRequest request =\n+\t\t\t\tPutObjectRequest.builder()\n+\t\t\t\t\t\t.bucketName(OracleObjectStorageClassic.bucketName)\n+\t\t\t\t\t\t.namespaceName(OracleObjectStorageClassic.nameSpaceName)\n+\t\t\t\t\t\t.objectName(depositId)\n+\t\t\t\t\t\t.contentType(contentType)\n+\t\t\t\t\t\t.contentLanguage(contentLanguage)\n+\t\t\t\t\t\t.contentEncoding(contentEncoding)\n+\t\t\t\t\t\t.opcMeta(metadata)\n+\t\t\t\t\t\t.build();\n+\n+\t\tUploadManager.UploadRequest uploadDetails =\n+\t\t\t\tUploadManager.UploadRequest.builder(working).allowOverwrite(true).build(request);\n+\t\treturn uploadDetails;\n+\t}\n+\n }"
  },
  {
    "sha": "fc1d10cf8bf645305a5ebf8972d35d7d575a4c2a",
    "filename": "docker-compose.yml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/DataVault/datavault/blob/0e4b540b4d7bc9240ce51284363083979dbe83bc/docker-compose.yml",
    "raw_url": "https://github.com/DataVault/datavault/raw/0e4b540b4d7bc9240ce51284363083979dbe83bc/docker-compose.yml",
    "contents_url": "https://api.github.com/repos/DataVault/datavault/contents/docker-compose.yml?ref=0e4b540b4d7bc9240ce51284363083979dbe83bc",
    "patch": "@@ -52,6 +52,7 @@ services:\n       - ./docker/keystore:/docker_datavault-home/keystore/\n       - ./docker/scripts:/docker_datavault-home/scripts/\n       - ./docker/.occ:/home/datavault/.occ/\n+      - ./docker/.oci:/home/datavault/.oci/\n     networks:\n       - mqnet\n       - vault"
  },
  {
    "sha": "e6d786f5f0166173c864fdcdabd8f5f2f72a7a0d",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/DataVault/datavault/blob/0e4b540b4d7bc9240ce51284363083979dbe83bc/pom.xml",
    "raw_url": "https://github.com/DataVault/datavault/raw/0e4b540b4d7bc9240ce51284363083979dbe83bc/pom.xml",
    "contents_url": "https://api.github.com/repos/DataVault/datavault/contents/pom.xml?ref=0e4b540b4d7bc9240ce51284363083979dbe83bc",
    "patch": "@@ -219,9 +219,6 @@\n             <dependency>\n                 <groupId>com.fasterxml.jackson.core</groupId>\n                 <artifactId>jackson-databind</artifactId>\n-                <!-- <version>2.10.2</version> -->\n-                <!-- <version>2.8.11.5</version> -->\n-                <!-- <version>2.7.9.4</version> -->\n                 <version>2.9.10.7</version>\n             </dependency>\n "
  }
]
