[
  {
    "sha": "0e1adf28c2676cd929b9520f19dc3cfc7bc6366d",
    "filename": ".cirrus.yml",
    "status": "modified",
    "additions": 90,
    "deletions": 22,
    "changes": 112,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/.cirrus.yml",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/.cirrus.yml",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/.cirrus.yml?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -1,27 +1,95 @@\n-# global default\n-#container:\n-#  image: gradle:jdk8\n+# Linux\n+linux_task:\n+  install_script:\n+    # The following uses latest LO version. Without this, the tests would\n+    # be executed using an older LO version (4.2.8.2 as of 2020-01-14)\n+    #- add-apt-repository -y ppa:libreoffice/libreoffice-5-4\n+    #- add-apt-repository -y ppa:libreoffice/libreoffice-4-2\n+    #- add-apt-repository -y ppa:libreoffice/ppa\n+    - apt-get -q update\n+    - apt-get -y install libreoffice\n+  # See https://hub.docker.com/_/openjdk for openjdk versions that could be tested.\n+  matrix:\n+    - name: linux:openjdk8\n+      env:\n+        CI_NAME: \"CirrusCI\"\n+        CI_BUILD_NUMBER: $CIRRUS_TASK_ID\n+        CI_BUILD_URL: \"https://cirrus-ci.com/task/$CIRRUS_TASK_ID\"\n+        CI_BRANCH: $CIRRUS_BRANCH\n+        CI_PULL_REQUEST: $CIRRUS_PR\n+        COVERALLS_REPO_TOKEN: ENCRYPTED[9fa0f47af9055f09dc3f3e65c4d126fedff998cbdc4430847762be36c38477f0658d577cd981a6ed8bd5439fa8e4defd]\n+      container:\n+        image: openjdk:8-jdk\n+      build_script:\n+        - ./gradlew build -x javadoc --stacktrace\n+      coverage_script:\n+        - ./gradlew coveralls --warning-mode all\n+    - name: linux:openjdk11\n+      container:\n+        image: openjdk:11-jdk\n+      build_script:\n+        - ./gradlew build -x javadoc --stacktrace\n \n-build_task:\n+# Windows\n+windows_task:\n+  windows_container:\n+    image: cirrusci/windowsservercore:2019\n+  env:\n+    JAVA_HOME: C:\\Program Files\\AdoptOpenJDK\n+  clone_script:\n+    # Use custom cloning to set the autocrlf to true orelse spotless will fail on Windows.\n+    CMD.exe /C ECHO ON &\n+      IF NOT DEFINED CIRRUS_PR (\n+      git config --global core.autocrlf true &\n+      git clone --recursive --branch=%CIRRUS_BRANCH% https://x-access-token:%CIRRUS_REPO_CLONE_TOKEN%@github.com/%CIRRUS_REPO_FULL_NAME%.git %CIRRUS_WORKING_DIR% &\n+      git reset --hard %CIRRUS_CHANGE_IN_REPO%\n+    ) ELSE (\n+      git config --global core.autocrlf true &\n+      git clone --recursive https://x-access-token:%CIRRUS_REPO_CLONE_TOKEN%@github.com/%CIRRUS_REPO_FULL_NAME%.git %CIRRUS_WORKING_DIR% &\n+      git fetch origin pull/%CIRRUS_PR%/head:pull/%CIRRUS_PR% &\n+      git reset --hard %CIRRUS_CHANGE_IN_REPO%\n+    )\n+  matrix:\n+    - name: windows:adoptopenjdk8\n+      env:\n+        # https://chocolatey.org/packages/adoptopenjdk8\n+        ADOPTOPENJDK_PACKAGE: adoptopenjdk8\n+    - name: windows:adoptopenjdk11\n+      env:\n+        # https://chocolatey.org/packages/adoptopenjdk11\n+        ADOPTOPENJDK_PACKAGE: adoptopenjdk11\n+  install_script:\n+    - choco install -y libreoffice\n+    - choco install -y %ADOPTOPENJDK_PACKAGE% --params=\"/ADDLOCAL=FeatureMain,FeatureJavaHome /INSTALLDIR=%JAVA_HOME% /quiet\"\n+  build_script:\n+    - gradlew.bat build -x javadoc --stacktrace\n+\n+# macOS\n+macos_task:\n+  # See https://cirrus-ci.org/guide/macOS/#list-of-available-images versions that could be tested.\n+  matrix:\n+    - name: macos:xcode:12.2\n+      macos_instance:\n+        image: catalina-xcode-12.2\n+  install_script:\n+    #- brew update\n+    - brew cask install libreoffice\n+  build_script:\n+    - ./gradlew build -x javadoc --stacktrace\n+\n+# FreeBSD\n+freebsd_task:\n   freebsd_instance:\n-    image: freebsd-12-0-release-amd64\n-#  gradle_cache:\n-#    folder: ~/.gradle/caches\n-#   install_zip_script:\n-#      pkg install -y zip\n-#      cd /usr/ports/archivers/zip\n-#      make install clean\n-#   install_sdkman_script:\n-#    - curl -s \"https://get.sdkman.io\" | bash\n-#    - source \"/home/user/.sdkman/bin/sdkman-init.sh\"\n-  install_gradle_script:\n-#    #- sdk install gradle\n-    - pkg install -y gradle\n+    image_family: freebsd-12-1\n   install_libreoffice_script:\n     - pkg install -y libreoffice\n+  # See https://www.freebsd.org/java/ for all available openjdk that could be tested.\n+  matrix:\n+      - name: freebsd:openjdk8\n+        install_java_script:\n+          - pkg install -y openjdk8\n+      - name: freebsd:openjdk11\n+        install_java_script:\n+          - pkg install -y openjdk11\n   build_script:\n-    - gradle build\n-    #- ./gradlew build --stacktrace\n-#  cleanup_before_cache_script:\n-#    - rm -rf ~/.gradle/caches/$GRADLE_VERSION/\n-#    - find ~/.gradle/caches/ -name \"*.lock\" -type f -delete\n\\ No newline at end of file\n+    - ./gradlew build -x javadoc --stacktrace\n\\ No newline at end of file"
  },
  {
    "sha": "a4fb6e1c7d9ae41c008caa8d16116e7fd5196dc8",
    "filename": ".travis.yml",
    "status": "removed",
    "additions": 0,
    "deletions": 87,
    "changes": 87,
    "blob_url": "https://github.com/teramura/jodconverter/blob/b916f54cb1a1cd4521b2b55b5b35c41124b3b03d/.travis.yml",
    "raw_url": "https://github.com/teramura/jodconverter/raw/b916f54cb1a1cd4521b2b55b5b35c41124b3b03d/.travis.yml",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/.travis.yml?ref=b916f54cb1a1cd4521b2b55b5b35c41124b3b03d",
    "patch": "@@ -1,87 +0,0 @@\n-language: java\n-\n-jobs:\n-  include:\n-    #linux Java8\n-    - os: linux\n-      dist: trusty\n-      jdk: oraclejdk8\n-      script:\n-        - ./gradlew build --stacktrace\n-      after_success:\n-        - ./gradlew coveralls\n-    #linux Java11\n-    - os: linux\n-      dist: trusty\n-      jdk: openjdk11\n-      script:\n-        - ./gradlew build -x javadoc --stacktrace\n-    #linux Java12\n-    - os: linux\n-      dist: trusty\n-      jdk: openjdk12\n-      script:\n-        - ./gradlew build -x javadoc --stacktrace\n-    #linux Java13\n-    - os: linux\n-      dist: trusty\n-      jdk: openjdk13\n-      script:\n-        - ./gradlew build -x javadoc --stacktrace\n-\n-    #macos - see https://docs.travis-ci.com/user/reference/osx/#jdk-and-macos\n-\n-    #macos Java8\n-    - os: osx\n-      osx_image: xcode8.3\n-      jdk: oraclejdk8\n-      script:\n-       - ./gradlew build -x javadoc --stacktrace\n-    #macos Java11\n-    - os: osx\n-      osx_image: xcode10.1\n-      jdk: openjdk11\n-      script:\n-       - ./gradlew build -x javadoc --stacktrace\n-    #macos Java12\n-    - os: osx\n-      osx_image: xcode11\n-      jdk: openjdk12\n-      script:\n-       - ./gradlew build -x javadoc --stacktrace\n-    #macos Java13\n-    - os: osx\n-      osx_image: xcode11.3\n-      jdk: openjdk13\n-      script:\n-       - ./gradlew build -x javadoc --stacktrace\n-\n-before_install:\n-  - |\n-    if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then\n-      # The following uses latest LO version. Without this, the tests would\n-      # be executed using an older LO version (4.2.8.2 as of 2020-01-14)\n-      # sudo add-apt-repository ppa:libreoffice/libreoffice-5-4\n-      # sudo add-apt-repository ppa:libreoffice/libreoffice-4-2\n-      sudo add-apt-repository -y ppa:libreoffice/ppa\n-      sudo apt-get -q update\n-    fi\n-  - |\n-    if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then\n-      brew update\n-      # brew update && brew upgrade brew-cask\n-      # brew update && brew upgrade brew-cask && brew cleanup && brew cask cleanup\n-    fi\n-\n-install:\n-  - |\n-    if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then\n-      sudo apt-get -y install libreoffice\n-    fi\n-  - |\n-    if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then\n-      brew cask install libreoffice\n-    fi\n-\n-before_script:\n-  - chmod +x ./gradlew"
  },
  {
    "sha": "844e8a100a2bd20a836ab715a68cda6ef69b7584",
    "filename": "CHANGELOG.md",
    "status": "modified",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/CHANGELOG.md",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/CHANGELOG.md?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -1,5 +1,67 @@\n # Changelog\n \n+## [v4.4.2](https://github.com/sbraconnier/jodconverter/tree/v4.4.2) (2021-02-10)\n+\n+[Full Changelog](https://github.com/sbraconnier/jodconverter/compare/v4.4.1...v4.4.2)\n+\n+**Fixed bugs:**\n+\n+- DocumentFormat.input family should be optional. [\\#249](https://github.com/sbraconnier/jodconverter/issues/249)\n+\n+## [v4.4.1](https://github.com/sbraconnier/jodconverter/tree/v4.4.1) (2021-02-10)\n+\n+[Full Changelog](https://github.com/sbraconnier/jodconverter/compare/v4.4.0...v4.4.1)\n+\n+**Fixed bugs:**\n+\n+- LocalOfficeManager\\#afterStartProcessDelay is not validated properly. [\\#246](https://github.com/sbraconnier/jodconverter/issues/246)\n+\n+**Closed issues:**\n+\n+- 2 concurrent calls to  LocalConvertor-\\>convert\\(\\)  return the same PDF file. [\\#243](https://github.com/sbraconnier/jodconverter/issues/243)\n+\n+**Merged pull requests:**\n+\n+- bugfix filename contains CJK characters cause error, change to UTF-8 encoding [\\#245](https://github.com/sbraconnier/jodconverter/pull/245) ([chunlinyao](https://github.com/chunlinyao))\n+\n+## [v4.4.0](https://github.com/sbraconnier/jodconverter/tree/v4.4.0) (2021-01-15)\n+\n+[Full Changelog](https://github.com/sbraconnier/jodconverter/compare/v4.3.0...v4.4.0)\n+\n+**Implemented enhancements:**\n+\n+- Add the ability to wait after an attempt to start an office process before trying to connect. [\\#244](https://github.com/sbraconnier/jodconverter/issues/244)\n+- Issues converting dotx [\\#213](https://github.com/sbraconnier/jodconverter/issues/213)\n+- Attaching OfficeManager to already running Process [\\#203](https://github.com/sbraconnier/jodconverter/issues/203)\n+- JoDConverterBean: How to add filter [\\#201](https://github.com/sbraconnier/jodconverter/issues/201)\n+- Make office process management asynchronous \\(start, restart, etc\\). [\\#200](https://github.com/sbraconnier/jodconverter/issues/200)\n+- Remove unnecessary dependencies. [\\#198](https://github.com/sbraconnier/jodconverter/issues/198)\n+- Do conversions on remote host with LibreOffice directly \\(not with LibreOffice online, not through spring boot\\) [\\#195](https://github.com/sbraconnier/jodconverter/issues/195)\n+- Use ExternalOfficeManager with a pool of processes [\\#191](https://github.com/sbraconnier/jodconverter/issues/191)\n+- Allow process restart to be asynchronous [\\#171](https://github.com/sbraconnier/jodconverter/issues/171)\n+- Patching library to be able reuse already running libreoffice instances \\>\\> killExistingProcess\\(false\\) [\\#72](https://github.com/sbraconnier/jodconverter/issues/72)\n+\n+**Fixed bugs:**\n+\n+- ExternalOfficeManager :: makeTempDir not called when connectOnStart = false [\\#211](https://github.com/sbraconnier/jodconverter/issues/211)\n+\n+**Closed issues:**\n+\n+- ExternalOfficeManager always connects sockets to 127.0.0.1 [\\#241](https://github.com/sbraconnier/jodconverter/issues/241)\n+- DocUpdateMode not working? [\\#227](https://github.com/sbraconnier/jodconverter/issues/227)\n+- Depending on the operating system, /tmp is getting regularly cleaned [\\#220](https://github.com/sbraconnier/jodconverter/issues/220)\n+- Temporary file name added in CSV -\\> PDF conversion [\\#219](https://github.com/sbraconnier/jodconverter/issues/219)\n+- wiki page for LibreOffice Online example code shoule be RemoteOfficeManager [\\#216](https://github.com/sbraconnier/jodconverter/issues/216)\n+- Wiki page for LibreOffice Online still references \"jodconverter-online\" [\\#214](https://github.com/sbraconnier/jodconverter/issues/214)\n+- Jodconverter randomly fails. [\\#204](https://github.com/sbraconnier/jodconverter/issues/204)\n+- I have an issue when I try to convert MS 97-2003 .DOC file to PDF [\\#202](https://github.com/sbraconnier/jodconverter/issues/202)\n+- Jod-Converter Reached limit Tasks and Restart  [\\#196](https://github.com/sbraconnier/jodconverter/issues/196)\n+\n+**Merged pull requests:**\n+\n+- Make 127.0.0.1 in socket connection configurable [\\#242](https://github.com/sbraconnier/jodconverter/pull/242) ([nikowitt](https://github.com/nikowitt))\n+- bugfix ps args truncated at 125 chars [\\#238](https://github.com/sbraconnier/jodconverter/pull/238) ([chunlinyao](https://github.com/chunlinyao))\n+\n ## [v4.3.0](https://github.com/sbraconnier/jodconverter/tree/v4.3.0) (2020-03-05)\n \n [Full Changelog](https://github.com/sbraconnier/jodconverter/compare/v4.2.4...v4.3.0)\n@@ -14,6 +76,13 @@\n - regression: Upgrade to jodconverter-local 4.2.3 imply to also add a dependency to jodconverter-core [\\#183](https://github.com/sbraconnier/jodconverter/issues/183)\n - Unthrown MalformedInputException when looking for soffice PID [\\#180](https://github.com/sbraconnier/jodconverter/issues/180)\n \n+**Closed issues:**\n+\n+- Looking for more information [\\#194](https://github.com/sbraconnier/jodconverter/issues/194)\n+- Pdf without bookmarking [\\#185](https://github.com/sbraconnier/jodconverter/issues/185)\n+- SocketException: Connection reset Issue [\\#184](https://github.com/sbraconnier/jodconverter/issues/184)\n+- if inputFile has no content, then it throw exception   [\\#179](https://github.com/sbraconnier/jodconverter/issues/179)\n+\n ## [v4.2.4](https://github.com/sbraconnier/jodconverter/tree/v4.2.4) (2020-01-16)\n \n [Full Changelog](https://github.com/sbraconnier/jodconverter/compare/v4.2.3...v4.2.4)"
  },
  {
    "sha": "1c8361393c870556ec00d803984c2d3c018e7e06",
    "filename": "README.md",
    "status": "modified",
    "additions": 5,
    "deletions": 7,
    "changes": 12,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/README.md",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/README.md",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/README.md?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -1,8 +1,6 @@\n # <img src=\"https://github.com/sbraconnier/jodconverter/wiki/images/jodconverter_w200.png\">&nbsp;<sup>&nbsp;LibreOffice</sup>&nbsp;/&nbsp;<sub>Apache OpenOffice</sub>\n \n [![Build Status](https://api.cirrus-ci.com/github/sbraconnier/jodconverter.svg)](https://cirrus-ci.com/github/sbraconnier/jodconverter)\n-[![Build status](https://ci.appveyor.com/api/projects/status/mvn8oqr2m8xorslk?svg=true)](https://ci.appveyor.com/project/sbraconnier/jodconverter)\n-[![Build Status](https://travis-ci.org/sbraconnier/jodconverter.svg?branch=master)](https://travis-ci.org/sbraconnier/jodconverter)\n [![Coverage Status](https://coveralls.io/repos/github/sbraconnier/jodconverter/badge.svg?branch=master)](https://coveralls.io/github/sbraconnier/jodconverter?branch=master)\n [![Codacy Badge](https://api.codacy.com/project/badge/Grade/20f3adafce26439fb6f38a7767388944)](https://www.codacy.com/app/sbraconnier/jodconverter?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=sbraconnier/jodconverter&amp;utm_campaign=Badge_Grade)\n [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n@@ -27,21 +25,21 @@ I created this fork years ago because I had to do some changes to the original p\n \n #### Gradle:\n ```Shell\n-compile 'org.jodconverter:jodconverter-local:4.3.0'\n+compile 'org.jodconverter:jodconverter-local:4.4.2'\n ```\n \n #### Maven:\n ```Shell\n <dependency>\n   <groupId>org.jodconverter</groupId>\n   <artifactId>jodconverter-local</artifactId>\n-  <version>4.3.0</version>\n+  <version>4.4.2</version>\n </dependency>\n ```\n \n ### Building the Project\n \n-Build default, JODConverter is built using the OpenOffice libraries. See [here](https://github.com/sbraconnier/jodconverter/issues/113) to know why. Bu you can build the project using the LibreOffice libraries with the `useLibreOffice` argument.\n+Build default, JODConverter is built using the OpenOffice libraries. See [here](https://github.com/sbraconnier/jodconverter/issues/113) to know why. But you can build the project using the LibreOffice libraries with the `useLibreOffice` argument.\n \n #### With OpenOffice libraries:\n ```Shell\n@@ -80,7 +78,7 @@ Here are my favorite/inspiration forks/projects:\n - [Nuxeo fork](https://github.com/nuxeo/jodconverter): Nice choice if you don't want to use SIGAR and don't came across an unresponsive office process following a timeout exception that drives you crazy.\n - [documents4j project](https://github.com/documents4j/documents4j): Nice choice if you want 100% perfect conversion using MS Office. But work only on Windows out of the box (Local implementation) and not totally free (since MS Office is not free). The new \"job\" package is strongly inspired by this project.\n \n-### A special thanks to:\n+### :sparkles: A special thanks to :\n \n [@michelole](https://github.com/michelole) who created a pull request in these two forks with a [stress test](https://github.com/sbraconnier/jodconverter/blob/master/jodconverter-local/src/integTest/java/org/jodconverter/StressITest.java) that made my office process to crash every times! My first commit was when I was able to build my things with his stress test on!!  \n \n@@ -93,6 +91,6 @@ including some [wiki pages](https://code.google.com/archive/p/jodconverter/wikis\n \n ## Donations\n \n-If this project helps you, please consider a donation. I have to pay for the jodconverter web site (domain and hosting) every year. I also sit on my chair in front of a monitor a lot instead of being outside drinking a beer to improve this project :smiley:. Thanks!! :heart:\n+If this project helps you, please consider a donation. I have to pay for the jodconverter web site (domain and hosting) every year. I also sit on my chair in front of a monitor a lot instead of being outside drinking a :beer: to improve this project :smiley:. Thanks!! :heart:\n \n [![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=XUYFM5NLLK628)"
  },
  {
    "sha": "0b9e154c41c9a25161dca4a39aa7cac5174c1349",
    "filename": "appveyor.yml",
    "status": "removed",
    "additions": 0,
    "deletions": 48,
    "changes": 48,
    "blob_url": "https://github.com/teramura/jodconverter/blob/b916f54cb1a1cd4521b2b55b5b35c41124b3b03d/appveyor.yml",
    "raw_url": "https://github.com/teramura/jodconverter/raw/b916f54cb1a1cd4521b2b55b5b35c41124b3b03d/appveyor.yml",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/appveyor.yml?ref=b916f54cb1a1cd4521b2b55b5b35c41124b3b03d",
    "patch": "@@ -1,48 +0,0 @@\n-version: \"{build}\"\n-\n-# Avoid build failure caused by the spotless plugin\n-init:\n-  - git config --global core.autocrlf true\n-\n-# Build artifacts\n-build_script:\n-  - gradlew.bat assemble -x javadoc\n-\n-# Verify artifacts\n-test_script:\n-  - gradlew.bat check -x integTest\n-\n-# Branches to build\n-branches:\n-  only:\n-    - master\n-\n-# Preserve dependencies between builds\n-cache:\n-  - C:\\Users\\appveyor\\.gradle\n-\n-# Environment settings\n-environment:\n-  matrix:\n-  # jdk 1.8\n-  - JAVA_HOME: C:\\Program Files\\Java\\jdk1.8.0\n-  # jdk 11\n-  - JAVA_HOME: C:\\Program Files\\Java\\jdk11\n-  # jdk 12\n-  - JAVA_HOME: C:\\Program Files\\Java\\jdk12\n-  # jdk 13\n-  - JAVA_HOME: C:\\Program Files\\Java\\jdk13\n-\n-# Failing jobs settings\n-matrix:\n-  # Immediately finish build once one of the jobs fails\n-  fast_finish: true\n-\n-on_failure:\n-  - cmd: set\n-  - cmd: type \"%APPVEYOR_BUILD_FOLDER%\\jodconverter-cli\\build\\tmp\\javadoc\\javadoc.options\"\n-  - cmd: type \"%APPVEYOR_BUILD_FOLDER%\\jodconverter-core\\build\\tmp\\javadoc\\javadoc.options\"\n-  - cmd: type \"%APPVEYOR_BUILD_FOLDER%\\jodconverter-local\\build\\tmp\\javadoc\\javadoc.options\"\n-  - cmd: type \"%APPVEYOR_BUILD_FOLDER%\\jodconverter-remote\\build\\tmp\\javadoc\\javadoc.options\"\n-  - cmd: type \"%APPVEYOR_BUILD_FOLDER%\\jodconverter-spring\\build\\tmp\\javadoc\\javadoc.options\"\n-  - cmd: type \"%APPVEYOR_BUILD_FOLDER%\\jodconverter-spring-boot-starter\\build\\tmp\\javadoc\\javadoc.options\""
  },
  {
    "sha": "2cd95123134ade1659b0b986a908acff889f3a92",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/build.gradle",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/build.gradle",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/build.gradle?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -26,7 +26,7 @@ description = '''\n '''\n \n group = 'org.jodconverter'\n-version = '4.3.1-SNAPSHOT'\n+version = '4.4.3-SNAPSHOT'\n \n // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n // Properties"
  },
  {
    "sha": "5f0430cc27aea84476d800eca3b5fe487290e800",
    "filename": "buildSrc/src/main/java/org/jodconverter/Deps.java",
    "status": "modified",
    "additions": 9,
    "deletions": 10,
    "changes": 19,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/buildSrc/src/main/java/org/jodconverter/Deps.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/buildSrc/src/main/java/org/jodconverter/Deps.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/buildSrc/src/main/java/org/jodconverter/Deps.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -9,27 +9,27 @@\n   // Compile\n   // ~~~~~~~~~~~~~~~~~~~~~~~~~~\n   // Latest version -> https://mvnrepository.com/artifact/org.checkerframework/checker-qual\n-  public static final String checkerVersion = \"3.1.1\";\n+  public static final String checkerVersion = \"3.9.1\";\n \n   // Main\n   // ~~~~~~~~~~~~~~~~~~~~~~~~~~\n   // Latest version -> https://mvnrepository.com/artifact/commons-cli/commons-cli\n   public static final String commonsCliVersion = \"1.4\";\n   // Latest version -> https://mvnrepository.com/artifact/commons-io/commons-io\n-  public static final String commonsIoVersion = \"2.6\";\n+  public static final String commonsIoVersion = \"2.8.0\";\n   // Latest version -> https://mvnrepository.com/artifact/org.libreoffice\n-  public static final String loVersion = \"6.3.2\";\n+  public static final String loVersion = \"7.0.4\";\n   // Latest version -> https://mvnrepository.com/artifact/org.openoffice\n   public static final String ooVersion = \"4.1.2\";\n   // Latest version -> https://mvnrepository.com/artifact/org.springframework.boot/spring-boot\n-  public static final String springBootVersion = \"2.2.4.RELEASE\";\n+  public static final String springBootVersion = \"2.4.1\";\n \n   // Test\n   // ~~~~~~~~~~~~~~~~~~~~~~~~~~\n   // Latest version -> https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito2\n-  public static final String powermockVersion = \"2.0.4\";\n+  public static final String powermockVersion = \"2.0.9\";\n   // Latest version -> https://mvnrepository.com/artifact/com.github.tomakehurst/wiremock\n-  public static final String wiremockVersion = \"2.25.1\";\n+  public static final String wiremockVersion = \"2.27.2\";\n \n   // ~~~~~~~~~~~~~~~~~~~~~~~~~~\n   // DEPENDENCIES\n@@ -88,16 +88,15 @@\n   public static final String assertj = \"org.assertj:assertj-core\";\n   public static final String junitJupiterApi = \"org.junit.jupiter:junit-jupiter-api\";\n   public static final String junitJupiterEngine = \"org.junit.jupiter:junit-jupiter-engine\";\n+  public static final String junitJupiterParams = \"org.junit.jupiter:junit-jupiter-params\";\n   public static final String junitVintageEngine = \"org.junit.vintage:junit-vintage-engine\";\n   public static final String mockito = \"org.mockito:mockito-core\";\n   public static final String powermockJunit =\n       \"org.powermock:powermock-module-junit4:\" + powermockVersion;\n   public static final String powermockMockito =\n       \"org.powermock:powermock-api-mockito2:\" + powermockVersion;\n-  // We now have to use the wiremock standalone version since jetty dependency\n-  // is provided by spring boot\n-  //  public static final String  wiremock =\n-  //  \"com.github.tomakehurst:wiremock:\" + wiremockVersion;\n+  // We now have to use the wiremock standalone version since\n+  // jetty dependency is provided by spring boot\n   public static final String wiremock =\n       \"com.github.tomakehurst:wiremock-standalone:\" + wiremockVersion;\n }"
  },
  {
    "sha": "51fb6852d7595be6606ca4d071cb33696ee6bd95",
    "filename": "buildSrc/src/main/java/org/jodconverter/Plugins.java",
    "status": "modified",
    "additions": 10,
    "deletions": 10,
    "changes": 20,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/buildSrc/src/main/java/org/jodconverter/Plugins.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/buildSrc/src/main/java/org/jodconverter/Plugins.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/buildSrc/src/main/java/org/jodconverter/Plugins.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -1,18 +1,18 @@\n package org.jodconverter;\n \n public class Plugins {\n-  // Latest version -> https://sourceforge.net/projects/checkstyle/files/checkstyle\n-  public static final String checkstyleVersion = \"8.29\";\n+  // Latest version -> https://github.com/checkstyle/checkstyle/releases/\n+  public static final String checkstyleVersion = \"8.39\";\n   // Latest version -> https://plugins.gradle.org/plugin/com.github.kt3k.coveralls\n-  public static final String coverallsVersion = \"2.9.0\";\n-  // Latest version -> https://plugins.gradle.org/plugin/nebula.integtest\n-  public static final String nebulaVersion = \"7.0.5\";\n-  // Latest version -> https://plugins.gradle.org/plugin/io.codearte.nexus-staging\n-  public static final String nexusStagingVersion = \"0.21.2\";\n+  public static final String coverallsVersion = \"2.10.2\";\n+  // Latest version -> https://plugins.gradle.org/plugin/nebula.integtest\n+  public static final String nebulaVersion = \"7.0.9\";\n+  // Latest version -> https://plugins.gradle.org/plugin/io.codearte.nexus-staging\n+  public static final String nexusStagingVersion = \"0.22.0\";\n   // Latest version -> https://pmd.github.io\n-  public static final String pmdVersion = \"6.21.0\";\n-  // Latest version -> https://plugins.gradle.org/plugin/com.diffplug.gradle.spotless\n-  public static final String spotlessVersion = \"3.27.0\";\n+  public static final String pmdVersion = \"6.30.0\";\n+  // Latest version -> https://plugins.gradle.org/plugin/com.diffplug.gradle.spotless\n+  public static final String spotlessVersion = \"5.9.0\";\n \n   public static final String coveralls =\n       \"gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:\" + coverallsVersion;"
  },
  {
    "sha": "4fe23f4f04ef101c3203fdd9049810600c1a4afc",
    "filename": "gradle/java-config.gradle",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/gradle/java-config.gradle",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/gradle/java-config.gradle",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/gradle/java-config.gradle?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -11,7 +11,7 @@ apply plugin: 'pmd'\n apply plugin: 'checkstyle'\n apply plugin: 'nebula.facet'\n apply plugin: 'jacoco'\n-apply plugin: 'com.diffplug.gradle.spotless'\n+apply plugin: 'com.diffplug.spotless'\n \n // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n // Integration tests SourceSet configuration\n@@ -28,10 +28,12 @@ facets {\n \n dependencies {\n     implementation platform(Deps.springBootDependencies)\n+\n     compileOnly Deps.checkerQual\n \n     testImplementation Deps.assertj\n     testImplementation Deps.junitJupiterApi\n+    testImplementation Deps.junitJupiterParams\n     testImplementation Deps.mockito\n \n     testRuntimeOnly Deps.checkerQual // Required by PowerMock\n@@ -77,7 +79,7 @@ pmd {\n     toolVersion = Plugins.pmdVersion\n     ruleSetConfig = rootProject.resources.text.fromFile(\"ruleset.xml\")\n     ignoreFailures = true\n-    rulePriority = 5\n+    rulesMinimumPriority = 5\n     // Don't use the default gradle rule sets\n     ruleSets = []\n }"
  },
  {
    "sha": "e708b1c023ec8b20f512888fe07c5bd3ff77bb8f",
    "filename": "gradle/wrapper/gradle-wrapper.jar",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/gradle/wrapper/gradle-wrapper.jar",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/gradle/wrapper/gradle-wrapper.jar",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/gradle/wrapper/gradle-wrapper.jar?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e"
  },
  {
    "sha": "da9702f9e70d99d587ce73bbfb0c212fc66e24c9",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/gradle/wrapper/gradle-wrapper.properties?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -1,5 +1,5 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-6.2.2-bin.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.8-bin.zip\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists"
  },
  {
    "sha": "4f906e0c811fc9e230eb44819f509cd0627f2600",
    "filename": "gradlew",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/gradlew",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/gradlew",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/gradlew?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -82,6 +82,7 @@ esac\n \n CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n \n+\n # Determine the Java command to use to start the JVM.\n if [ -n \"$JAVA_HOME\" ] ; then\n     if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n@@ -129,6 +130,7 @@ fi\n if [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n     APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n     CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+\n     JAVACMD=`cygpath --unix \"$JAVACMD\"`\n \n     # We build the pattern for arguments to be converted via cygpath"
  },
  {
    "sha": "ac1b06f93825db68fb0c0b5150917f340eaa5d02",
    "filename": "gradlew.bat",
    "status": "modified",
    "additions": 7,
    "deletions": 18,
    "changes": 25,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/gradlew.bat",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/gradlew.bat",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/gradlew.bat?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -29,6 +29,9 @@ if \"%DIRNAME%\" == \"\" set DIRNAME=.\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n+@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\n+for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n+\r\n @rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n \r\n@@ -37,7 +40,7 @@ if defined JAVA_HOME goto findJavaFromJavaHome\n \r\n set JAVA_EXE=java.exe\r\n %JAVA_EXE% -version >NUL 2>&1\r\n-if \"%ERRORLEVEL%\" == \"0\" goto init\r\n+if \"%ERRORLEVEL%\" == \"0\" goto execute\r\n \r\n echo.\r\n echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n@@ -51,7 +54,7 @@ goto fail\n set JAVA_HOME=%JAVA_HOME:\"=%\r\n set JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n \r\n-if exist \"%JAVA_EXE%\" goto init\r\n+if exist \"%JAVA_EXE%\" goto execute\r\n \r\n echo.\r\n echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n@@ -61,28 +64,14 @@ echo location of your Java installation.\n \r\n goto fail\r\n \r\n-:init\r\n-@rem Get command-line arguments, handling Windows variants\r\n-\r\n-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n-\r\n-:win9xME_args\r\n-@rem Slurp the command line arguments.\r\n-set CMD_LINE_ARGS=\r\n-set _SKIP=2\r\n-\r\n-:win9xME_args_slurp\r\n-if \"x%~1\" == \"x\" goto execute\r\n-\r\n-set CMD_LINE_ARGS=%*\r\n-\r\n :execute\r\n @rem Setup the command line\r\n \r\n set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n \r\n+\r\n @rem Execute Gradle\r\n-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n \r\n :end\r\n @rem End local scope for the variables with windows NT shell\r"
  },
  {
    "sha": "d2db750cc7a0d561dbc34878a9588ec4074e9358",
    "filename": "jodconverter-cli/src/integTest/java/org/jodconverter/cli/ConvertITest.java",
    "status": "modified",
    "additions": 204,
    "deletions": 168,
    "changes": 372,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/integTest/java/org/jodconverter/cli/ConvertITest.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/integTest/java/org/jodconverter/cli/ConvertITest.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/integTest/java/org/jodconverter/cli/ConvertITest.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -27,6 +27,7 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Objects;\n \n+import org.junit.jupiter.api.Nested;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.junit.jupiter.api.io.TempDir;\n@@ -37,6 +38,7 @@\n import org.jodconverter.cli.util.ResetExitExceptionExtension;\n import org.jodconverter.cli.util.SystemLogHandler;\n import org.jodconverter.core.util.FileUtils;\n+import org.jodconverter.local.office.ExistingProcessAction;\n import org.jodconverter.local.office.LocalOfficeUtils;\n \n /**\n@@ -47,189 +49,223 @@\n   NoExitExtension.class,\n   ResetExitExceptionExtension.class\n })\n-public class ConvertITest {\n+class ConvertITest {\n \n   private static final String CONFIG_DIR = \"src/integTest/resources/config/\";\n   private static final String SOURCE_FILE = \"src/integTest/resources/documents/test1.doc\";\n   private static final String SOURCE_MULTI_FILE =\n       \"src/integTest/resources/documents/test_multi_page.doc\";\n \n-  @Test\n-  public void convert_WithCustomFormatRegistry_ShouldSupportOnlyTargetTxtOrPdf(\n-      final @TempDir File testFolder) {\n-\n-    final File registryFile = new File(CONFIG_DIR + \"cli-document-formats.json\");\n-    final File inputFile = new File(SOURCE_FILE);\n-    final File outputFile = new File(testFolder, \"convert_WithMultipleFilters.doc\");\n-\n-    SystemLogHandler.startCapture();\n-    assertThatExceptionOfType(ExitException.class)\n-        .isThrownBy(\n-            () ->\n-                Convert.main(\n-                    new String[] {\n-                      \"-k\", \"-r\", registryFile.getPath(), inputFile.getPath(), outputFile.getPath()\n-                    }))\n-        .satisfies(\n-            e -> {\n-              final String capturedlog = SystemLogHandler.stopCapture();\n-              assertThat(e).hasFieldOrPropertyWithValue(\"status\", 2);\n-              assertThat(capturedlog).contains(\"The target format is missing or not supported\");\n-            });\n-  }\n+  @Nested\n+  class Convert_ {\n \n-  @Test\n-  public void convert_WithFilenames_ShouldSucceed(final @TempDir File testFolder) {\n+    @Test\n+    void withCustomFormatRegistry_ShouldSupportOnlyTargetTxtOrPdf(final @TempDir File testFolder) {\n \n-    final File inputFile = new File(SOURCE_FILE);\n-    final File outputFile = new File(testFolder, \"convert_WithFilenames.pdf\");\n+      final File registryFile = new File(CONFIG_DIR + \"cli-document-formats.json\");\n+      final File inputFile = new File(SOURCE_FILE);\n+      final File outputFile = new File(testFolder, \"convert_WithMultipleFilters.doc\");\n \n-    assertThatExceptionOfType(ExitException.class)\n-        .isThrownBy(\n-            () -> Convert.main(new String[] {\"-k\", inputFile.getPath(), outputFile.getPath()}))\n-        .satisfies(\n-            e -> {\n-              assertThat(e)\n-                  .isExactlyInstanceOf(ExitException.class)\n-                  .hasFieldOrPropertyWithValue(\"status\", 0);\n+      SystemLogHandler.startCapture();\n+      assertThatExceptionOfType(ExitException.class)\n+          .isThrownBy(\n+              () ->\n+                  Convert.main(\n+                      new String[] {\n+                        \"-r\",\n+                        registryFile.getPath(),\n+                        \"-x\",\n+                        ExistingProcessAction.KILL.toString(),\n+                        inputFile.getPath(),\n+                        outputFile.getPath()\n+                      }))\n+          .satisfies(\n+              e -> {\n+                final String capturedlog = SystemLogHandler.stopCapture();\n+                assertThat(e).hasFieldOrPropertyWithValue(\"status\", 2);\n+                assertThat(capturedlog).contains(\"The target format is missing or not supported\");\n+              });\n+    }\n \n-              assertThat(outputFile).isFile();\n-              assertThat(outputFile.length()).isGreaterThan(0L);\n-            });\n-  }\n+    @Test\n+    void withFilenames_ShouldSucceed(final @TempDir File testFolder) {\n \n-  @Test\n-  public void convert_WithOutputFormat_ShouldSucceed(final @TempDir File testFolder)\n-      throws Exception {\n-\n-    final File inputFile = new File(SOURCE_FILE);\n-    FileUtils.copyFileToDirectory(inputFile, testFolder);\n-    final File inputFileTmp =\n-        new File(testFolder, Objects.requireNonNull(FileUtils.getName(SOURCE_FILE)));\n-    final File outputFile =\n-        new File(testFolder, FileUtils.getBaseName(inputFile.getName()) + \".pdf\");\n-\n-    assertThatExceptionOfType(ExitException.class)\n-        .isThrownBy(() -> Convert.main(new String[] {\"-k\", \"-f\", \"pdf\", inputFileTmp.getPath()}))\n-        .satisfies(\n-            e -> {\n-              assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n-              assertThat(outputFile).isFile();\n-              assertThat(outputFile.length()).isGreaterThan(0L);\n-            });\n-  }\n+      final File inputFile = new File(SOURCE_FILE);\n+      final File outputFile = new File(testFolder, \"convert_WithFilenames.pdf\");\n \n-  @Test\n-  public void convert_WithMultipleFilters_ShouldSucceed(final @TempDir File testFolder) {\n-\n-    final File filterChainFile = new File(CONFIG_DIR + \"applicationContext_multipleFilters.xml\");\n-    final File inputFile = new File(SOURCE_FILE);\n-    final File outputFile = new File(testFolder, \"convert_WithMultipleFilters.pdf\");\n-\n-    assertThatExceptionOfType(ExitException.class)\n-        .isThrownBy(\n-            () ->\n-                Convert.main(\n-                    new String[] {\n-                      \"-k\",\n-                      \"-a\",\n-                      filterChainFile.getPath(),\n-                      inputFile.getPath(),\n-                      outputFile.getPath()\n-                    }))\n-        .satisfies(\n-            e -> {\n-              assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n-\n-              assertThat(outputFile).isFile();\n-              assertThat(outputFile.length()).isGreaterThan(0L);\n-            });\n-  }\n+      assertThatExceptionOfType(ExitException.class)\n+          .isThrownBy(\n+              () ->\n+                  Convert.main(\n+                      new String[] {\n+                        \"-x\",\n+                        ExistingProcessAction.KILL.toString(),\n+                        inputFile.getPath(),\n+                        outputFile.getPath()\n+                      }))\n+          .satisfies(\n+              e -> {\n+                assertThat(e)\n+                    .isExactlyInstanceOf(ExitException.class)\n+                    .hasFieldOrPropertyWithValue(\"status\", 0);\n \n-  @Test\n-  public void convert_WithSingleFilter_ShouldSucceed(final @TempDir File testFolder) {\n-\n-    final File filterChainFile =\n-        new File(CONFIG_DIR + \"applicationContext_pagesSelectorFilter.xml\");\n-    final File inputFile = new File(SOURCE_MULTI_FILE);\n-    final File outputFile = new File(testFolder, \"convert_WithSingleFilter.txt\");\n-\n-    assertThatExceptionOfType(ExitException.class)\n-        .isThrownBy(\n-            () ->\n-                Convert.main(\n-                    new String[] {\n-                      \"-k\",\n-                      \"-a\",\n-                      filterChainFile.getPath(),\n-                      inputFile.getPath(),\n-                      outputFile.getPath()\n-                    }))\n-        .satisfies(\n-            e -> {\n-              assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n-\n-              try {\n-                final String content =\n-                    FileUtils.readFileToString(outputFile, StandardCharsets.UTF_8);\n-                assertThat(content)\n-                    .as(\"Check content: %s\", content)\n-                    .contains(\"Test document Page 2\")\n-                    .doesNotContain(\"Test document Page 1\")\n-                    .doesNotContain(\"Test document Page 3\");\n-              } catch (IOException ex) {\n-                assertThat(ex).isNull();\n-              }\n-            });\n-  }\n+                assertThat(outputFile).isFile();\n+                assertThat(outputFile.length()).isGreaterThan(0L);\n+              });\n+    }\n+\n+    @Test\n+    void withOutputFormat_ShouldSucceed(final @TempDir File testFolder) throws Exception {\n+\n+      final File inputFile = new File(SOURCE_FILE);\n+      FileUtils.copyFileToDirectory(inputFile, testFolder);\n+      final File inputFileTmp =\n+          new File(testFolder, Objects.requireNonNull(FileUtils.getName(SOURCE_FILE)));\n+      final File outputFile =\n+          new File(testFolder, FileUtils.getBaseName(inputFile.getName()) + \".pdf\");\n+\n+      assertThatExceptionOfType(ExitException.class)\n+          .isThrownBy(\n+              () ->\n+                  Convert.main(\n+                      new String[] {\n+                        \"-f\",\n+                        \"pdf\",\n+                        \"-x\",\n+                        ExistingProcessAction.KILL.toString(),\n+                        inputFileTmp.getPath()\n+                      }))\n+          .satisfies(\n+              e -> {\n+                assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n+                assertThat(outputFile).isFile();\n+                assertThat(outputFile.length()).isGreaterThan(0L);\n+              });\n+    }\n+\n+    @Test\n+    void withMultipleFilters_ShouldSucceed(final @TempDir File testFolder) {\n+\n+      final File filterChainFile = new File(CONFIG_DIR + \"applicationContext_multipleFilters.xml\");\n+      final File inputFile = new File(SOURCE_FILE);\n+      final File outputFile = new File(testFolder, \"convert_WithMultipleFilters.pdf\");\n+\n+      assertThatExceptionOfType(ExitException.class)\n+          .isThrownBy(\n+              () ->\n+                  Convert.main(\n+                      new String[] {\n+                        \"-a\",\n+                        filterChainFile.getPath(),\n+                        \"-x\",\n+                        ExistingProcessAction.KILL.toString(),\n+                        inputFile.getPath(),\n+                        outputFile.getPath()\n+                      }))\n+          .satisfies(\n+              e -> {\n+                assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n \n-  @Test\n-  public void convert_WithCustomStoreProperties_ShouldSucceed(final @TempDir File testFolder) {\n-\n-    final File inputFile = new File(SOURCE_MULTI_FILE);\n-    final File outputFile = new File(testFolder, \"convert_WithCustomStoreProperties.pdf\");\n-\n-    assertThatExceptionOfType(ExitException.class)\n-        .isThrownBy(\n-            () ->\n-                Convert.main(\n-                    new String[] {\n-                      \"-k\", \"-sFDPageRange=2-2\", inputFile.getPath(), outputFile.getPath()\n-                    }))\n-        .satisfies(\n-            e -> {\n-              assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n-\n-              // If the document (with the image) is fully converted, it will\n-              // be much greater that 30K (over 70K). Only the second page\n-              // doesn't have an image.\n-              assertThat(outputFile.length()).isLessThan(30_000L);\n-            });\n+                assertThat(outputFile).isFile();\n+                assertThat(outputFile.length()).isGreaterThan(0L);\n+              });\n+    }\n+\n+    @Test\n+    void withSingleFilter_ShouldSucceed(final @TempDir File testFolder) {\n+\n+      final File filterChainFile =\n+          new File(CONFIG_DIR + \"applicationContext_pagesSelectorFilter.xml\");\n+      final File inputFile = new File(SOURCE_MULTI_FILE);\n+      final File outputFile = new File(testFolder, \"convert_WithSingleFilter.txt\");\n+\n+      assertThatExceptionOfType(ExitException.class)\n+          .isThrownBy(\n+              () ->\n+                  Convert.main(\n+                      new String[] {\n+                        \"-a\",\n+                        filterChainFile.getPath(),\n+                        \"-x\",\n+                        ExistingProcessAction.KILL.toString(),\n+                        inputFile.getPath(),\n+                        outputFile.getPath()\n+                      }))\n+          .satisfies(\n+              e -> {\n+                assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n+\n+                try {\n+                  final String content =\n+                      FileUtils.readFileToString(outputFile, StandardCharsets.UTF_8);\n+                  assertThat(content)\n+                      .as(\"Check content: %s\", content)\n+                      .contains(\"Test document Page 2\")\n+                      .doesNotContain(\"Test document Page 1\")\n+                      .doesNotContain(\"Test document Page 3\");\n+                } catch (IOException ex) {\n+                  assertThat(ex).isNull();\n+                }\n+              });\n+    }\n+\n+    @Test\n+    void withCustomStoreProperties_ShouldSucceed(final @TempDir File testFolder) {\n+\n+      final File inputFile = new File(SOURCE_MULTI_FILE);\n+      final File outputFile = new File(testFolder, \"convert_WithCustomStoreProperties.pdf\");\n+\n+      assertThatExceptionOfType(ExitException.class)\n+          .isThrownBy(\n+              () ->\n+                  Convert.main(\n+                      new String[] {\n+                        \"-sFDPageRange=2-2\",\n+                        \"-x\",\n+                        ExistingProcessAction.KILL.toString(),\n+                        inputFile.getPath(),\n+                        outputFile.getPath()\n+                      }))\n+          .satisfies(\n+              e -> {\n+                assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n+\n+                // If the document (with the image) is fully converted, it will\n+                // be much greater that 30K (over 70K). Only the second page\n+                // doesn't have an image.\n+                assertThat(outputFile.length()).isLessThan(30_000L);\n+              });\n+    }\n   }\n \n-  @Test\n-  public void main_WithAllCustomizableOption_ExecuteAndExitWithCod0() {\n-\n-    assertThatExceptionOfType(ExitException.class)\n-        .isThrownBy(\n-            () ->\n-                Convert.main(\n-                    new String[] {\n-                      \"-g\",\n-                      \"-k\",\n-                      \"-i\",\n-                      LocalOfficeUtils.getDefaultOfficeHome().getPath(),\n-                      \"-m\",\n-                      LocalOfficeUtils.findBestProcessManager().getClass().getName(),\n-                      \"-t\",\n-                      \"30000\",\n-                      \"-p\",\n-                      \"2002\",\n-                      \"-u\",\n-                      new File(\"src/integTest/resources/templateProfileDir\").getPath(),\n-                      \"input1.txt\",\n-                      \"output1.pdf\"\n-                    }))\n-        .satisfies(e -> assertThat(e.getStatus()).isEqualTo(0));\n+  @Nested\n+  class Main {\n+\n+    @Test\n+    public void withAllCustomizableOption_ShouldExecuteAndExitWithCode0() {\n+\n+      assertThatExceptionOfType(ExitException.class)\n+          .isThrownBy(\n+              () ->\n+                  Convert.main(\n+                      new String[] {\n+                        \"-g\",\n+                        \"-i\",\n+                        LocalOfficeUtils.getDefaultOfficeHome().getPath(),\n+                        \"-m\",\n+                        LocalOfficeUtils.findBestProcessManager().getClass().getName(),\n+                        \"-t\",\n+                        \"30000\",\n+                        \"-p\",\n+                        \"2002\",\n+                        \"-u\",\n+                        new File(\"src/integTest/resources/templateProfileDir\").getPath(),\n+                        \"-x\",\n+                        ExistingProcessAction.KILL.toString(),\n+                        \"input1.txt\",\n+                        \"output1.pdf\"\n+                      }))\n+          .satisfies(e -> assertThat(e.getStatus()).isEqualTo(0));\n+    }\n   }\n }"
  },
  {
    "sha": "bbb07e602ca6b79631b838dca763955875266c29",
    "filename": "jodconverter-cli/src/integTest/java/org/jodconverter/cli/RemoteConvertITest.java",
    "status": "modified",
    "additions": 120,
    "deletions": 116,
    "changes": 236,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/integTest/java/org/jodconverter/cli/RemoteConvertITest.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/integTest/java/org/jodconverter/cli/RemoteConvertITest.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/integTest/java/org/jodconverter/cli/RemoteConvertITest.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -31,6 +31,7 @@\n import java.nio.charset.StandardCharsets;\n \n import com.github.tomakehurst.wiremock.WireMockServer;\n+import org.junit.jupiter.api.Nested;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.junit.jupiter.api.io.TempDir;\n@@ -50,138 +51,141 @@\n   NoExitExtension.class,\n   ResetExitExceptionExtension.class\n })\n-public class RemoteConvertITest {\n+class RemoteConvertITest {\n \n   private static final String RESOURCES_PATH = \"src/integTest/resources/\";\n   private static final String CONFIG_DIR = RESOURCES_PATH + \"config/\";\n   private static final String SOURCE_FILE_DOC = RESOURCES_PATH + \"documents/test1.doc\";\n   private static final String SERVER_KEYSTORE_PATH = RESOURCES_PATH + \"serverkeystore.jks\";\n   private static final String SERVER_KEYSTORE_PWD = \"serverkeystore\";\n \n-  @Test\n-  public void convert_WithCustomFormatRegistry_ShouldSupportOnlyTargetTxtOrPdf(\n-      final @TempDir File testFolder) {\n-\n-    final File inputFile = new File(SOURCE_FILE_DOC);\n-    final File outputFile = new File(testFolder, \"out.doc\");\n-    final File registryFile = new File(CONFIG_DIR + \"cli-document-formats.json\");\n-\n-    final WireMockServer wireMockServer = new WireMockServer(options().port(8000));\n-    wireMockServer.start();\n-    try {\n-      SystemLogHandler.startCapture();\n-      assertThatExceptionOfType(ExitException.class)\n-          .isThrownBy(\n-              () ->\n+  @Nested\n+  class Convert_ {\n+\n+    @Test\n+    void withCustomFormatRegistry_ShouldSupportOnlyTargetTxtOrPdf(final @TempDir File testFolder) {\n+\n+      final File inputFile = new File(SOURCE_FILE_DOC);\n+      final File outputFile = new File(testFolder, \"out.doc\");\n+      final File registryFile = new File(CONFIG_DIR + \"cli-document-formats.json\");\n+\n+      final WireMockServer wireMockServer = new WireMockServer(options().port(8000));\n+      wireMockServer.start();\n+      try {\n+        SystemLogHandler.startCapture();\n+        assertThatExceptionOfType(ExitException.class)\n+            .isThrownBy(\n+                () ->\n+                    Convert.main(\n+                        new String[] {\n+                          \"-c\",\n+                          \"http://localhost:8000/lool/convert-to/\",\n+                          \"-r\",\n+                          registryFile.getPath(),\n+                          inputFile.getPath(),\n+                          outputFile.getPath()\n+                        }))\n+            .satisfies(\n+                e -> {\n+                  final String capturedlog = SystemLogHandler.stopCapture();\n+                  assertThat(e).hasFieldOrPropertyWithValue(\"status\", 2);\n+                  assertThat(capturedlog).contains(\"The target format is missing or not supported\");\n+                });\n+      } finally {\n+        wireMockServer.stop();\n+      }\n+    }\n+\n+    @Test\n+    void withConnectionOption_ShouldSucceed(final @TempDir File testFolder) {\n+\n+      final File inputFile = new File(SOURCE_FILE_DOC);\n+      final File outputFile = new File(testFolder, \"out.txt\");\n+\n+      final WireMockServer wireMockServer = new WireMockServer(options().port(8000));\n+      wireMockServer.start();\n+      try {\n+        assertThatExceptionOfType(ExitException.class)\n+            .isThrownBy(\n+                () -> {\n+                  wireMockServer.stubFor(\n+                      post(urlPathEqualTo(\"/lool/convert-to/txt\"))\n+                          .willReturn(aResponse().withBody(\"Test Document\")));\n+\n                   Convert.main(\n                       new String[] {\n                         \"-c\",\n                         \"http://localhost:8000/lool/convert-to/\",\n-                        \"-r\",\n-                        registryFile.getPath(),\n                         inputFile.getPath(),\n                         outputFile.getPath()\n-                      }))\n-          .satisfies(\n-              e -> {\n-                final String capturedlog = SystemLogHandler.stopCapture();\n-                assertThat(e).hasFieldOrPropertyWithValue(\"status\", 2);\n-                assertThat(capturedlog).contains(\"The target format is missing or not supported\");\n-              });\n-    } finally {\n-      wireMockServer.stop();\n+                      });\n+                })\n+            .satisfies(\n+                e -> {\n+                  assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n+\n+                  try {\n+                    final String content =\n+                        FileUtils.readFileToString(outputFile, StandardCharsets.UTF_8);\n+                    assertThat(content).as(\"Check content: %s\", content).contains(\"Test Document\");\n+                  } catch (IOException ex) {\n+                    assertThat(ex).isNull();\n+                  }\n+                });\n+      } finally {\n+        wireMockServer.stop();\n+      }\n     }\n-  }\n \n-  @Test\n-  public void convert_WithConnectionOption_ShouldSucceed(final @TempDir File testFolder) {\n-\n-    final File inputFile = new File(SOURCE_FILE_DOC);\n-    final File outputFile = new File(testFolder, \"out.txt\");\n-\n-    final WireMockServer wireMockServer = new WireMockServer(options().port(8000));\n-    wireMockServer.start();\n-    try {\n-      assertThatExceptionOfType(ExitException.class)\n-          .isThrownBy(\n-              () -> {\n-                wireMockServer.stubFor(\n-                    post(urlPathEqualTo(\"/lool/convert-to/txt\"))\n-                        .willReturn(aResponse().withBody(\"Test Document\")));\n-\n-                Convert.main(\n-                    new String[] {\n-                      inputFile.getPath(),\n-                      outputFile.getPath(),\n-                      \"-c\",\n-                      \"http://localhost:8000/lool/convert-to/\"\n-                    });\n-              })\n-          .satisfies(\n-              e -> {\n-                assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n-\n-                try {\n-                  final String content =\n-                      FileUtils.readFileToString(outputFile, StandardCharsets.UTF_8);\n-                  assertThat(content).as(\"Check content: %s\", content).contains(\"Test Document\");\n-                } catch (IOException ex) {\n-                  assertThat(ex).isNull();\n-                }\n-              });\n-    } finally {\n-      wireMockServer.stop();\n-    }\n-  }\n+    @Test\n+    void withConnectionOptionAndSslConfig_ShouldSucceed(final @TempDir File testFolder) {\n+\n+      final File inputFile = new File(SOURCE_FILE_DOC);\n+      final File outputFile = new File(testFolder, \"out.txt\");\n+      final File contextFile = new File(CONFIG_DIR + \"applicationContext_sslConfig.xml\");\n+\n+      final WireMockServer wireMockServer =\n+          new WireMockServer(\n+              options()\n+                  .port(8000)\n+                  .httpsPort(8001)\n+                  .keystorePath(SERVER_KEYSTORE_PATH)\n+                  .keystorePassword(SERVER_KEYSTORE_PWD)\n+                  .keyManagerPassword(SERVER_KEYSTORE_PWD));\n+      wireMockServer.start();\n+      try {\n+        assertThatExceptionOfType(ExitException.class)\n+            .isThrownBy(\n+                () -> {\n+                  wireMockServer.stubFor(\n+                      post(urlPathEqualTo(\"/lool/convert-to/txt\"))\n+                          .willReturn(aResponse().withBody(\"Test Document\")));\n \n-  @Test\n-  public void convert_WithConnectionOptionAndSslConfig_ShouldSucceed(\n-      final @TempDir File testFolder) {\n-\n-    final File inputFile = new File(SOURCE_FILE_DOC);\n-    final File outputFile = new File(testFolder, \"out.txt\");\n-    final File contextFile = new File(CONFIG_DIR + \"applicationContext_sslConfig.xml\");\n-\n-    final WireMockServer wireMockServer =\n-        new WireMockServer(\n-            options()\n-                .port(8000)\n-                .httpsPort(8001)\n-                .keystorePath(SERVER_KEYSTORE_PATH)\n-                .keystorePassword(SERVER_KEYSTORE_PWD));\n-    wireMockServer.start();\n-    try {\n-      assertThatExceptionOfType(ExitException.class)\n-          .isThrownBy(\n-              () -> {\n-                wireMockServer.stubFor(\n-                    post(urlPathEqualTo(\"/lool/convert-to/txt\"))\n-                        .willReturn(aResponse().withBody(\"Test Document\")));\n-\n-                Convert.main(\n-                    new String[] {\n-                      inputFile.getPath(),\n-                      outputFile.getPath(),\n-                      \"-c\",\n-                      \"https://localhost:8001/lool/convert-to/\",\n-                      \"-a\",\n-                      contextFile.getPath()\n-                    });\n-              })\n-          .satisfies(\n-              e -> {\n-                assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n-\n-                try {\n-                  final String content =\n-                      FileUtils.readFileToString(outputFile, StandardCharsets.UTF_8);\n-                  assertThat(content).as(\"Check content: %s\", content).contains(\"Test Document\");\n-                } catch (IOException ex) {\n-                  assertThat(ex).isNull();\n-                }\n-              });\n-    } finally {\n-      wireMockServer.stop();\n+                  Convert.main(\n+                      new String[] {\n+                        \"-c\",\n+                        \"https://localhost:8001/lool/convert-to/\",\n+                        \"-a\",\n+                        contextFile.getPath(),\n+                        inputFile.getPath(),\n+                        outputFile.getPath()\n+                      });\n+                })\n+            .satisfies(\n+                e -> {\n+                  assertThat(e).hasFieldOrPropertyWithValue(\"status\", 0);\n+\n+                  try {\n+                    final String content =\n+                        FileUtils.readFileToString(outputFile, StandardCharsets.UTF_8);\n+                    assertThat(content).as(\"Check content: %s\", content).contains(\"Test Document\");\n+                  } catch (IOException ex) {\n+                    assertThat(ex).isNull();\n+                  }\n+                });\n+      } finally {\n+        wireMockServer.stop();\n+      }\n     }\n   }\n }"
  },
  {
    "sha": "bc9daf0b8133d79df5f6a2a274e3b2b40a128fc7",
    "filename": "jodconverter-cli/src/main/java/org/jodconverter/cli/CliConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/main/java/org/jodconverter/cli/CliConverter.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/main/java/org/jodconverter/cli/CliConverter.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/main/java/org/jodconverter/cli/CliConverter.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -208,6 +208,7 @@ private void convertFile(\n     }\n   }\n \n+  @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n   private void prepareOutputDir(final File outputDir) throws OfficeException {\n \n     if (outputDir != null) {\n@@ -226,7 +227,6 @@ private void prepareOutputDir(final File outputDir) throws OfficeException {\n \n         } else {\n           // Create the output directory\n-          //noinspection ResultOfMethodCallIgnored\n           outputDir.mkdirs();\n         }\n "
  },
  {
    "sha": "0e1263f687bdf3b2313c4a734bc95467a87323e4",
    "filename": "jodconverter-cli/src/main/java/org/jodconverter/cli/Convert.java",
    "status": "modified",
    "additions": 68,
    "deletions": 48,
    "changes": 116,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/main/java/org/jodconverter/cli/Convert.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/main/java/org/jodconverter/cli/Convert.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/main/java/org/jodconverter/cli/Convert.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -23,18 +23,13 @@\n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n import java.util.HashMap;\n+import java.util.Locale;\n import java.util.Map;\n import java.util.Optional;\n import java.util.stream.Collectors;\n import java.util.stream.IntStream;\n \n-import org.apache.commons.cli.CommandLine;\n-import org.apache.commons.cli.DefaultParser;\n-import org.apache.commons.cli.HelpFormatter;\n-import org.apache.commons.cli.Option;\n-import org.apache.commons.cli.Options;\n-import org.apache.commons.cli.ParseException;\n-import org.checkerframework.checker.nullness.qual.Nullable;\n+import org.apache.commons.cli.*;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.support.AbstractApplicationContext;\n import org.springframework.context.support.FileSystemXmlApplicationContext;\n@@ -46,6 +41,7 @@\n import org.jodconverter.core.util.FileUtils;\n import org.jodconverter.local.LocalConverter;\n import org.jodconverter.local.filter.FilterChain;\n+import org.jodconverter.local.office.ExistingProcessAction;\n import org.jodconverter.local.office.LocalOfficeManager;\n import org.jodconverter.remote.RemoteConverter;\n import org.jodconverter.remote.office.RemoteOfficeManager;\n@@ -98,11 +94,6 @@\n           .hasArg()\n           .desc(\"office home directory (optional; defaults to auto-detect)\")\n           .build();\n-  private static final Option OPT_KILL_EXISTING_PROCESS =\n-      Option.builder(\"k\")\n-          .longOpt(\"kill-process\")\n-          .desc(\"Kill existing office process (optional)\")\n-          .build();\n   private static final Option OPT_LOAD_PROPERTIES =\n       Option.builder(\"l\")\n           .longOpt(\"load-properties\")\n@@ -157,6 +148,18 @@\n           .build();\n   private static final Option OPT_VERSION =\n       Option.builder(\"v\").longOpt(\"version\").desc(\"displays version information and exit\").build();\n+  private static final Option OPT_EXISTING_PROCESS_ACTION =\n+      Option.builder(\"x\")\n+          .longOpt(\"existing-process-action\")\n+          .hasArg()\n+          .desc(\n+              \"action taken when a process running with the same connection string\"\n+                  + \" (optional; defaults to kill);\"\n+                  + \" with fail: abort conversion;\"\n+                  + \" with kill: kill existing process;\"\n+                  + \" with connect: connect to existing process;\"\n+                  + \" with connect_or_kill: connect to existing process with kill fallback\")\n+          .build();\n \n   private static final Options OPTIONS = initOptions();\n \n@@ -192,12 +195,13 @@ private static OfficeManager createOfficeManager(\n \n     final LocalOfficeManager.Builder builder = LocalOfficeManager.builder();\n \n+    // Always fail fast!!\n+    builder.startFailFast(true);\n+\n     if (commandLine.hasOption(OPT_OFFICE_HOME.getOpt())) {\n       builder.officeHome(commandLine.getOptionValue(OPT_OFFICE_HOME.getOpt()));\n     }\n \n-    builder.killExistingProcess(commandLine.hasOption(OPT_KILL_EXISTING_PROCESS.getOpt()));\n-\n     builder.disableOpengl(commandLine.hasOption(OPT_DISABLE_OPENGL.getOpt()));\n \n     if (commandLine.hasOption(OPT_PROCESS_MANAGER.getOpt())) {\n@@ -217,10 +221,32 @@ private static OfficeManager createOfficeManager(\n       builder.templateProfileDir(new File(commandLine.getOptionValue(OPT_USER_PROFILE.getOpt())));\n     }\n \n+    if (commandLine.hasOption(OPT_EXISTING_PROCESS_ACTION.getOpt())) {\n+      switch (commandLine\n+          .getOptionValue(OPT_EXISTING_PROCESS_ACTION.getOpt())\n+          .toLowerCase(Locale.ROOT)\n+          .replace('-', '_')) {\n+        case \"fail\":\n+          builder.existingProcessAction(ExistingProcessAction.FAIL);\n+          break;\n+        case \"kill\":\n+          builder.existingProcessAction(ExistingProcessAction.KILL);\n+          break;\n+        case \"connect\":\n+          builder.existingProcessAction(ExistingProcessAction.CONNECT);\n+          break;\n+        case \"connect_or_kill\":\n+          builder.existingProcessAction(ExistingProcessAction.CONNECT_OR_KILL);\n+          break;\n+        default:\n+          // Ignore\n+          break;\n+      }\n+    }\n+\n     return builder.install().build();\n   }\n \n-  @Nullable\n   private static AbstractApplicationContext getApplicationContextOption(\n       final CommandLine commandLine) {\n \n@@ -233,13 +259,11 @@ private static AbstractApplicationContext getApplicationContextOption(\n     return null;\n   }\n \n-  @Nullable\n   private static FilterChain getFilterChain(final ApplicationContext context) {\n \n     return Optional.ofNullable(context).map(ctx -> ctx.getBean(FilterChain.class)).orElse(null);\n   }\n \n-  @Nullable\n   private static DocumentFormatRegistry getRegistryOption(final CommandLine commandLine)\n       throws IOException {\n \n@@ -252,7 +276,6 @@ private static DocumentFormatRegistry getRegistryOption(final CommandLine comman\n     return null;\n   }\n \n-  @Nullable\n   private static String getStringOption(final CommandLine commandLine, final String option) {\n \n     if (commandLine.hasOption(option)) {\n@@ -266,23 +289,23 @@ private static String getStringOption(final CommandLine commandLine, final Strin\n   private static Options initOptions() {\n \n     final Options options = new Options();\n-    options.addOption(OPT_HELP);\n-    options.addOption(OPT_VERSION);\n-    options.addOption(OPT_APPLICATION_CONTEXT);\n-    options.addOption(OPT_OUTPUT_DIRECTORY);\n-    options.addOption(OPT_OUTPUT_FORMAT);\n-    options.addOption(OPT_OFFICE_HOME);\n-    options.addOption(OPT_KILL_EXISTING_PROCESS);\n-    options.addOption(OPT_LOAD_PROPERTIES);\n-    options.addOption(OPT_DISABLE_OPENGL);\n-    options.addOption(OPT_PROCESS_MANAGER);\n-    options.addOption(OPT_OVERWRITE);\n-    options.addOption(OPT_PORT);\n-    options.addOption(OPT_REGISTRY);\n-    options.addOption(OPT_STORE_PROPERTIES);\n-    options.addOption(OPT_TIMEOUT);\n-    options.addOption(OPT_USER_PROFILE);\n-    options.addOption(OPT_CONNECTION_URL);\n+    options.addOption(OPT_APPLICATION_CONTEXT); // -a, --application-context\n+    options.addOption(OPT_CONNECTION_URL); // -c, --connection-url\n+    options.addOption(OPT_OUTPUT_DIRECTORY); // -d, --output-directory\n+    options.addOption(OPT_OUTPUT_FORMAT); // -f, --output-format\n+    options.addOption(OPT_DISABLE_OPENGL); // -g, --disable-opengl\n+    options.addOption(OPT_HELP); // -h, --help\n+    options.addOption(OPT_OFFICE_HOME); // -i, --office-home\n+    options.addOption(OPT_LOAD_PROPERTIES); // -l, --load-properties\n+    options.addOption(OPT_PROCESS_MANAGER); // -m, --process-manager\n+    options.addOption(OPT_OVERWRITE); // -o, --overwriteOfficeManager\n+    options.addOption(OPT_PORT); // -p, --port\n+    options.addOption(OPT_REGISTRY); // -r, --registry\n+    options.addOption(OPT_STORE_PROPERTIES); // -s, --store-properties\n+    options.addOption(OPT_TIMEOUT); // -u, --timeout\n+    options.addOption(OPT_USER_PROFILE); // -u, --user-profile\n+    options.addOption(OPT_VERSION); // -c, --connection-url\n+    options.addOption(OPT_EXISTING_PROCESS_ACTION); // -x, --existing-process-action\n \n     return options;\n   }\n@@ -370,7 +393,6 @@ public static void main(final String[] arguments) {\n     }\n   }\n \n-  @Nullable\n   private static Map<String, Object> toMap(final String... options) {\n \n     if (options.length % 2 != 0) {\n@@ -399,8 +421,7 @@ public static void main(final String[] arguments) {\n                 }));\n   }\n \n-  @Nullable\n-  private static Map<String, Object> buildProperties(@Nullable final String... args) {\n+  private static Map<String, Object> buildProperties(final String... args) {\n \n     if (args == null || args.length == 0) {\n       return null;\n@@ -432,7 +453,7 @@ private static CliConverter createCliConverter(\n       final CommandLine commandLine,\n       final AbstractApplicationContext context,\n       final OfficeManager officeManager,\n-      @Nullable final DocumentFormatRegistry registry) {\n+      final DocumentFormatRegistry registry) {\n \n     if (commandLine.hasOption(OPT_CONNECTION_URL.getOpt())) {\n       final RemoteConverter.Builder builder =\n@@ -475,24 +496,23 @@ private static CliConverter createCliConverter(\n \n   private static void printHelp() {\n \n-    new HelpFormatter()\n-        .printHelp(\n-            \"jodconverter-cli [options] infile outfile [infile outfile ...]\\n\"\n-                + \"   or: jodconverter-cli [options] -f output-format infile [infile ...]\",\n-            OPTIONS);\n+    final String[] help = {\n+      \"jodconverter-cli [options] infile outfile [infile outfile ...]\",\n+      \"  or:\",\n+      \"jodconverter-cli [options] -f output-format infile [infile ...]\"\n+    };\n+    new HelpFormatter().printHelp(String.join(\"\\n\", help), OPTIONS);\n   }\n \n   private static void printErr(final Object... values) {\n \n-    System.err.println // NOPMD - Allow System.err.println\n-        (String.format(\"jodconverter-cli: %s\", values));\n+    System.err.printf(\"jodconverter-cli: %s%n\", values); // NOPMD - Allow System.out.println\n     System.err.flush();\n   }\n \n   private static void printInfo(final String message, final Object... values) {\n \n-    System.out.println // NOPMD - Allow System.out.println\n-        (String.format(message, values));\n+    System.out.printf(message + \"%n\", values); // NOPMD - Allow System.out.println\n     System.out.flush();\n   }\n }"
  },
  {
    "sha": "22e455354f38fce3a11dd8ef0ea29ea594bbddc4",
    "filename": "jodconverter-cli/src/test/java/org/jodconverter/cli/CliConverterTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/java/org/jodconverter/cli/CliConverterTest.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/java/org/jodconverter/cli/CliConverterTest.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/test/java/org/jodconverter/cli/CliConverterTest.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -199,6 +199,7 @@ public void convert_FilenamesToFilenamesAllowingOverwrite_TasksExecuted(\n   }\n \n   @Test\n+  @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n   public void convert_FilenamesToFilenamesWithoutOverwrite_NoTaskExecuted(\n       final @TempDir File testFolder) throws Exception {\n \n@@ -295,15 +296,14 @@ public void convert_FilenamesToFormatWithOutputDir_TasksExecuted(final @TempDir\n   }\n \n   @Test\n+  @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n   public void convert_FilenamesToTargetAllowingOverwrite_TasksExecuted(\n       final @TempDir File testFolder) throws Exception {\n \n     final File targetFile1 = new File(testFolder, TARGET_FILENAME_1);\n     final File targetFile2 = new File(testFolder, TARGET_FILENAME_2);\n \n-    //noinspection ResultOfMethodCallIgnored\n     targetFile1.createNewFile();\n-    //noinspection ResultOfMethodCallIgnored\n     targetFile2.createNewFile();\n \n     converter.convert(\n@@ -327,6 +327,7 @@ public void convert_FilenamesToTargetAllowingOverwrite_TasksExecuted(\n   }\n \n   @Test\n+  @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n   public void convert_FilenamesToTargetWithoutOverwrite_NoTaskExecuted(\n       final @TempDir File testFolder) throws Exception {\n "
  },
  {
    "sha": "2d1706a060cc36d745a8bcd1efab33da58f9c1dc",
    "filename": "jodconverter-cli/src/test/java/org/jodconverter/cli/ConvertTest.java",
    "status": "modified",
    "additions": 455,
    "deletions": 190,
    "changes": 645,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/java/org/jodconverter/cli/ConvertTest.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/java/org/jodconverter/cli/ConvertTest.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/test/java/org/jodconverter/cli/ConvertTest.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -20,245 +20,510 @@\n package org.jodconverter.cli;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.mockito.Mockito.mock;\n+import static org.jodconverter.core.office.AbstractOfficeManagerPool.DEFAULT_TASK_EXECUTION_TIMEOUT;\n+import static org.jodconverter.core.office.AbstractOfficeManagerPool.DEFAULT_TASK_QUEUE_TIMEOUT;\n+import static org.jodconverter.local.office.LocalOfficeManager.*;\n \n+import java.io.File;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n \n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.DefaultParser;\n import org.apache.commons.cli.Options;\n-import org.junit.jupiter.api.BeforeAll;\n+import org.assertj.core.api.InstanceOfAssertFactories;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Nested;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n+import org.junit.jupiter.api.io.TempDir;\n import org.powermock.reflect.Whitebox;\n \n-import org.jodconverter.cli.util.ConsoleStreamsListenerExtension;\n-import org.jodconverter.cli.util.ExitException;\n-import org.jodconverter.cli.util.NoExitExtension;\n-import org.jodconverter.cli.util.ResetExitExceptionExtension;\n-import org.jodconverter.cli.util.SystemLogHandler;\n+import org.jodconverter.cli.util.*;\n import org.jodconverter.core.office.OfficeManager;\n+import org.jodconverter.core.office.OfficeUtils;\n import org.jodconverter.local.LocalConverter;\n+import org.jodconverter.local.office.ExistingProcessAction;\n+import org.jodconverter.local.office.LocalOfficeManager;\n+import org.jodconverter.local.office.LocalOfficeUtils;\n \n /** Contains tests for the {@link Convert} class. */\n @ExtendWith({\n   ConsoleStreamsListenerExtension.class,\n   NoExitExtension.class,\n   ResetExitExceptionExtension.class\n })\n-public class ConvertTest {\n+class ConvertTest {\n \n-  private static OfficeManager officeManager;\n+  @TempDir File testFolder;\n \n-  /** Setup the office manager once before all tests. */\n-  @BeforeAll\n-  public static void setUpClass() {\n-    officeManager = mock(OfficeManager.class);\n+  @BeforeEach\n+  void setUpOfficeHome() {\n+    System.setProperty(\"office.home\", new File(\"src/test/resources/oohome\").getPath());\n   }\n \n-  @Test\n-  public void main_WithOptionHelp_PrintHelpAndExitWithCode0() {\n+  @AfterEach\n+  void tearDown() {\n+    System.setProperty(\"office.home\", \"\");\n+  }\n+\n+  @Nested\n+  class Main {\n+\n+    @Test\n+    void withOptionHelp_ShouldPrintHelpAndExitWithCode0() {\n \n-    try {\n-      SystemLogHandler.startCapture();\n-      Convert.main(new String[] {\"-h\"});\n+      try {\n+        SystemLogHandler.startCapture();\n+        Convert.main(new String[] {\"-h\"});\n \n-    } catch (Exception ex) {\n-      final String capturedlog = SystemLogHandler.stopCapture();\n-      assertThat(capturedlog)\n-          .contains(\"jodconverter-cli [options] infile outfile [infile outfile ...]\");\n-      assertThat(ex)\n-          .isExactlyInstanceOf(ExitException.class)\n-          .hasFieldOrPropertyWithValue(\"status\", 0);\n+      } catch (Exception ex) {\n+        final String capturedlog = SystemLogHandler.stopCapture();\n+        assertThat(capturedlog)\n+            .contains(\"jodconverter-cli [options] infile outfile [infile outfile ...]\");\n+        assertThat(ex)\n+            .isExactlyInstanceOf(ExitException.class)\n+            .hasFieldOrPropertyWithValue(\"status\", 0);\n+      }\n     }\n-  }\n \n-  @Test\n-  public void main_WithOptionHelp_PrintVersionAndExitWithCode0() {\n+    @Test\n+    void withOptionHelp_ShouldPrintVersionAndExitWithCode0() {\n \n-    try {\n-      SystemLogHandler.startCapture();\n-      Convert.main(new String[] {\"-v\"});\n+      try {\n+        SystemLogHandler.startCapture();\n+        Convert.main(new String[] {\"-v\"});\n \n-    } catch (Exception ex) {\n-      final String capturedlog = SystemLogHandler.stopCapture();\n-      assertThat(capturedlog).contains(\"jodconverter-cli version\");\n-      assertThat(ex)\n-          .isExactlyInstanceOf(ExitException.class)\n-          .hasFieldOrPropertyWithValue(\"status\", 0);\n+      } catch (Exception ex) {\n+        final String capturedlog = SystemLogHandler.stopCapture();\n+        assertThat(capturedlog).contains(\"jodconverter-cli version\");\n+        assertThat(ex)\n+            .isExactlyInstanceOf(ExitException.class)\n+            .hasFieldOrPropertyWithValue(\"status\", 0);\n+      }\n     }\n-  }\n \n-  @Test\n-  public void main_WithUnknownArgument_PrintErrorHelpAndExitWithCode2() {\n-\n-    try {\n-      SystemLogHandler.startCapture();\n-      Convert.main(new String[] {\"-xyz\"});\n-\n-    } catch (Exception ex) {\n-      final String capturedlog = SystemLogHandler.stopCapture();\n-      assertThat(capturedlog)\n-          .contains(\n-              \"Unrecognized option: -xyz\",\n-              \"jodconverter-cli [options] infile outfile [infile outfile ...]\");\n-      assertThat(ex)\n-          .isExactlyInstanceOf(ExitException.class)\n-          .hasFieldOrPropertyWithValue(\"status\", 2);\n+    @Test\n+    void withUnknownArgument_ShouldPrintErrorHelpAndExitWithCode2() {\n+\n+      try {\n+        SystemLogHandler.startCapture();\n+        Convert.main(new String[] {\"-wyz\"});\n+\n+      } catch (Exception ex) {\n+        final String capturedlog = SystemLogHandler.stopCapture();\n+        assertThat(capturedlog)\n+            .contains(\n+                \"Unrecognized option: -wyz\",\n+                \"jodconverter-cli [options] infile outfile [infile outfile ...]\");\n+        assertThat(ex)\n+            .isExactlyInstanceOf(ExitException.class)\n+            .hasFieldOrPropertyWithValue(\"status\", 2);\n+      }\n     }\n-  }\n \n-  @Test\n-  public void main_WithMissingsFilenames_PrintErrorHelpAndExitWithCode255() {\n-\n-    try {\n-      SystemLogHandler.startCapture();\n-      Convert.main(new String[] {\"\"});\n+    @Test\n+    void withMissingsFilenames_ShouldPrintErrorHelpAndExitWithCode255() {\n+\n+      try {\n+        SystemLogHandler.startCapture();\n+        Convert.main(new String[] {\"\"});\n+\n+      } catch (Exception ex) {\n+        final String capturedlog = SystemLogHandler.stopCapture();\n+        assertThat(capturedlog)\n+            .contains(\"jodconverter-cli [options] infile outfile [infile outfile ...]\");\n+        assertThat(ex)\n+            .isExactlyInstanceOf(ExitException.class)\n+            .hasFieldOrPropertyWithValue(\"status\", 255);\n+      }\n+    }\n \n-    } catch (Exception ex) {\n-      final String capturedlog = SystemLogHandler.stopCapture();\n-      assertThat(capturedlog)\n-          .contains(\"jodconverter-cli [options] infile outfile [infile outfile ...]\");\n-      assertThat(ex)\n-          .isExactlyInstanceOf(ExitException.class)\n-          .hasFieldOrPropertyWithValue(\"status\", 255);\n+    @Test\n+    void withWrongFilenamesLength_ShouldPrintErrorHelpAndExitWithCode255() {\n+\n+      try {\n+        SystemLogHandler.startCapture();\n+        Convert.main(new String[] {\"input1.txt\", \"output1.pdf\", \"input2.txt\"});\n+\n+      } catch (Exception ex) {\n+        final String capturedlog = SystemLogHandler.stopCapture();\n+        assertThat(capturedlog)\n+            .contains(\"jodconverter-cli [options] infile outfile [infile outfile ...]\");\n+        assertThat(ex)\n+            .isExactlyInstanceOf(ExitException.class)\n+            .hasFieldOrPropertyWithValue(\"status\", 255);\n+      }\n     }\n   }\n \n-  @Test\n-  public void main_WithWrongFilenamesLength_PrintErrorHelpAndExitWithCode255() {\n+  @Nested\n+  class CreateOfficeManager {\n+\n+    @Test\n+    void withDefaultProperties_ShouldCreateManagerWithDefaultProperties() throws Exception {\n+\n+      final CommandLine commandLine =\n+          new DefaultParser()\n+              .parse(\n+                  (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n+                  new String[] {\"output1.pdf\", \"input2.txt\"});\n+\n+      final OfficeManager officeManager =\n+          Whitebox.invokeMethod(Convert.class, \"createOfficeManager\", commandLine, null);\n+      assertThat(officeManager).isInstanceOf(LocalOfficeManager.class);\n+      assertThat(officeManager)\n+          .extracting(\"tempDir\")\n+          .satisfies(\n+              o ->\n+                  assertThat(o)\n+                      .asInstanceOf(InstanceOfAssertFactories.FILE)\n+                      .hasParent(OfficeUtils.getDefaultWorkingDir()));\n+      assertThat(officeManager)\n+          .hasFieldOrPropertyWithValue(\"taskQueueTimeout\", DEFAULT_TASK_QUEUE_TIMEOUT);\n+      assertThat(officeManager)\n+          .extracting(\"entries\")\n+          .asList()\n+          .hasSize(1)\n+          .element(0)\n+          .satisfies(\n+              o ->\n+                  assertThat(o)\n+                      .extracting(\n+                          \"taskExecutionTimeout\",\n+                          \"maxTasksPerProcess\",\n+                          \"officeProcessManager.officeUrl.connectionAndParametersAsString\",\n+                          \"officeProcessManager.officeHome\",\n+                          \"officeProcessManager.processManager.class.name\",\n+                          \"officeProcessManager.runAsArgs\",\n+                          \"officeProcessManager.templateProfileDir\",\n+                          \"officeProcessManager.processTimeout\",\n+                          \"officeProcessManager.processRetryInterval\",\n+                          \"officeProcessManager.afterStartProcessDelay\",\n+                          \"officeProcessManager.existingProcessAction\",\n+                          \"officeProcessManager.startFailFast\",\n+                          \"officeProcessManager.keepAliveOnShutdown\",\n+                          \"officeProcessManager.disableOpengl\",\n+                          \"officeProcessManager.connection.officeUrl.connectionAndParametersAsString\")\n+                      .containsExactly(\n+                          DEFAULT_TASK_EXECUTION_TIMEOUT,\n+                          DEFAULT_MAX_TASKS_PER_PROCESS,\n+                          \"socket,host=127.0.0.1,port=2002,tcpNoDelay=1\",\n+                          LocalOfficeUtils.getDefaultOfficeHome(),\n+                          LocalOfficeUtils.findBestProcessManager().getClass().getName(),\n+                          Collections.EMPTY_LIST,\n+                          null,\n+                          DEFAULT_PROCESS_TIMEOUT,\n+                          DEFAULT_PROCESS_RETRY_INTERVAL,\n+                          DEFAULT_AFTER_START_PROCESS_DELAY,\n+                          DEFAULT_EXISTING_PROCESS_ACTION,\n+                          true,\n+                          DEFAULT_KEEP_ALIVE_ON_SHUTDOWN,\n+                          DEFAULT_DISABLE_OPENGL,\n+                          \"socket,host=127.0.0.1,port=2002,tcpNoDelay=1\"));\n+    }\n \n-    try {\n-      SystemLogHandler.startCapture();\n-      Convert.main(new String[] {\"input1.txt\", \"output1.pdf\", \"input2.txt\"});\n+    @Test\n+    @SuppressWarnings(\"ResultOfMethodCallIgnored\")\n+    void withCustomValues_ShouldInitializedManagerWithCustomValues() throws Exception {\n+\n+      final File ooHome = new File(testFolder, \"oohomecustom\");\n+      final File program = new File(ooHome, \"program\");\n+      program.mkdirs();\n+      new File(program, \"soffice.bin\").createNewFile(); // EXECUTABLE_DEFAULT\n+      new File(program, \"soffice\").createNewFile(); // EXECUTABLE_MAC\n+      new File(program, \"soffice.exe\").createNewFile(); // EXECUTABLE_WINDOWS\n+      final File macos = new File(ooHome, \"MacOS\");\n+      macos.mkdirs();\n+      new File(macos, \"soffice\").createNewFile(); // EXECUTABLE_MAC_41\n+      program.mkdirs();\n+\n+      final CommandLine commandLine =\n+          new DefaultParser()\n+              .parse(\n+                  (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n+                  new String[] {\n+                    \"-g\",\n+                    \"-i\",\n+                    ooHome.getPath(),\n+                    \"-m\",\n+                    LocalOfficeUtils.findBestProcessManager().getClass().getName(),\n+                    \"-t\",\n+                    \"30\",\n+                    \"-p\",\n+                    \"2003\",\n+                    \"-u\",\n+                    new File(\"src/test/resources/templateProfileDir\").getPath(),\n+                    \"-x\",\n+                    ExistingProcessAction.KILL.toString(),\n+                    \"input1.txt\",\n+                    \"output1.pdf\"\n+                  });\n+\n+      final OfficeManager officeManager =\n+          Whitebox.invokeMethod(Convert.class, \"createOfficeManager\", commandLine, null);\n+      assertThat(officeManager)\n+          .extracting(\"tempDir\")\n+          .satisfies(\n+              o ->\n+                  assertThat(o)\n+                      .asInstanceOf(InstanceOfAssertFactories.FILE)\n+                      .hasParent(OfficeUtils.getDefaultWorkingDir()));\n+      assertThat(officeManager)\n+          .hasFieldOrPropertyWithValue(\"taskQueueTimeout\", DEFAULT_TASK_QUEUE_TIMEOUT);\n+      assertThat(officeManager)\n+          .extracting(\"entries\")\n+          .asList()\n+          .hasSize(1)\n+          .element(0)\n+          .satisfies(\n+              o ->\n+                  assertThat(o)\n+                      .extracting(\n+                          \"taskExecutionTimeout\",\n+                          \"maxTasksPerProcess\",\n+                          \"officeProcessManager.officeUrl.connectionAndParametersAsString\",\n+                          \"officeProcessManager.officeHome\",\n+                          \"officeProcessManager.processManager.class.name\",\n+                          \"officeProcessManager.runAsArgs\",\n+                          \"officeProcessManager.templateProfileDir\",\n+                          \"officeProcessManager.processTimeout\",\n+                          \"officeProcessManager.processRetryInterval\",\n+                          \"officeProcessManager.afterStartProcessDelay\",\n+                          \"officeProcessManager.existingProcessAction\",\n+                          \"officeProcessManager.startFailFast\",\n+                          \"officeProcessManager.keepAliveOnShutdown\",\n+                          \"officeProcessManager.disableOpengl\",\n+                          \"officeProcessManager.connection.officeUrl.connectionAndParametersAsString\")\n+                      .containsExactly(\n+                          30_000L,\n+                          DEFAULT_MAX_TASKS_PER_PROCESS,\n+                          \"socket,host=127.0.0.1,port=2003,tcpNoDelay=1\",\n+                          ooHome,\n+                          LocalOfficeUtils.findBestProcessManager().getClass().getName(),\n+                          Collections.EMPTY_LIST,\n+                          new File(\"src/test/resources/templateProfileDir\"),\n+                          DEFAULT_PROCESS_TIMEOUT,\n+                          DEFAULT_PROCESS_RETRY_INTERVAL,\n+                          DEFAULT_AFTER_START_PROCESS_DELAY,\n+                          ExistingProcessAction.KILL,\n+                          true,\n+                          DEFAULT_KEEP_ALIVE_ON_SHUTDOWN,\n+                          true,\n+                          \"socket,host=127.0.0.1,port=2003,tcpNoDelay=1\"));\n+    }\n \n-    } catch (Exception ex) {\n-      final String capturedlog = SystemLogHandler.stopCapture();\n-      assertThat(capturedlog)\n-          .contains(\"jodconverter-cli [options] infile outfile [infile outfile ...]\");\n-      assertThat(ex)\n-          .isExactlyInstanceOf(ExitException.class)\n-          .hasFieldOrPropertyWithValue(\"status\", 255);\n+    @Test\n+    void withExistingProcessActionFail_ShouldInitializedManagerWithCustomValues() throws Exception {\n+\n+      final CommandLine commandLine =\n+          new DefaultParser()\n+              .parse(\n+                  (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n+                  new String[] {\n+                    \"-x\", ExistingProcessAction.FAIL.toString(), \"input1.txt\", \"output1.pdf\"\n+                  });\n+\n+      final OfficeManager officeManager =\n+          Whitebox.invokeMethod(Convert.class, \"createOfficeManager\", commandLine, null);\n+\n+      assertThat(officeManager)\n+          .extracting(\"entries\")\n+          .asList()\n+          .hasSize(1)\n+          .element(0)\n+          .satisfies(\n+              o ->\n+                  assertThat(o)\n+                      .hasFieldOrPropertyWithValue(\n+                          \"officeProcessManager.existingProcessAction\",\n+                          ExistingProcessAction.FAIL));\n     }\n-  }\n \n-  @Test\n-  public void createCliConverter_WithLoadProperties_CreateConverterWithExpectedLoadProperties()\n-      throws Exception {\n-\n-    final CommandLine commandLine =\n-        new DefaultParser()\n-            .parse(\n-                (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n-                new String[] {\"-lPassword=myPassword\", \"output1.pdf\", \"input2.txt\"});\n-\n-    final CliConverter cliConverter =\n-        Whitebox.invokeMethod(\n-            Convert.class, \"createCliConverter\", commandLine, null, officeManager, null);\n-    final LocalConverter localConverter =\n-        (LocalConverter) Whitebox.getField(CliConverter.class, \"converter\").get(cliConverter);\n-\n-    final Map<String, Object> expectedLoadProperties =\n-        new HashMap<>(LocalConverter.DEFAULT_LOAD_PROPERTIES);\n-    expectedLoadProperties.put(\"Password\", \"myPassword\");\n-    assertThat(localConverter).extracting(\"loadProperties\").isEqualTo(expectedLoadProperties);\n-  }\n+    @Test\n+    void withExistingProcessActionConnect_ShouldInitializedManagerWithCustomValues()\n+        throws Exception {\n+\n+      final CommandLine commandLine =\n+          new DefaultParser()\n+              .parse(\n+                  (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n+                  new String[] {\n+                    \"-x\", ExistingProcessAction.CONNECT.toString(), \"input1.txt\", \"output1.pdf\"\n+                  });\n+\n+      final OfficeManager officeManager =\n+          Whitebox.invokeMethod(Convert.class, \"createOfficeManager\", commandLine, null);\n+\n+      assertThat(officeManager)\n+          .extracting(\"entries\")\n+          .asList()\n+          .hasSize(1)\n+          .element(0)\n+          .satisfies(\n+              o ->\n+                  assertThat(o)\n+                      .hasFieldOrPropertyWithValue(\n+                          \"officeProcessManager.existingProcessAction\",\n+                          ExistingProcessAction.CONNECT));\n+    }\n \n-  @Test\n-  public void\n-      createCliConverter_WithFilterDataProperties_CreateConverterWithExpectedStoreProperties()\n-          throws Exception {\n-\n-    final CommandLine commandLine =\n-        new DefaultParser()\n-            .parse(\n-                (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n-                new String[] {\"-sFDPageRange=2-2\", \"output1.pdf\", \"input2.txt\"});\n-\n-    final CliConverter cliConverter =\n-        Whitebox.invokeMethod(\n-            Convert.class, \"createCliConverter\", commandLine, null, officeManager, null);\n-    final LocalConverter localConverter =\n-        (LocalConverter) Whitebox.getField(CliConverter.class, \"converter\").get(cliConverter);\n-\n-    final Map<String, Object> expectedFilterData = new HashMap<>();\n-    expectedFilterData.put(\"PageRange\", \"2-2\");\n-    final Map<String, Object> expectedStoreProperties = new HashMap<>();\n-    expectedStoreProperties.put(\"FilterData\", expectedFilterData);\n-    assertThat(localConverter).extracting(\"storeProperties\").isEqualTo(expectedStoreProperties);\n+    @Test\n+    void withExistingProcessActionConnectOrKill_ShouldInitializedManagerWithCustomValues()\n+        throws Exception {\n+\n+      final CommandLine commandLine =\n+          new DefaultParser()\n+              .parse(\n+                  (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n+                  new String[] {\n+                    \"-x\",\n+                    ExistingProcessAction.CONNECT_OR_KILL.toString(),\n+                    \"input1.txt\",\n+                    \"output1.pdf\"\n+                  });\n+\n+      final OfficeManager officeManager =\n+          Whitebox.invokeMethod(Convert.class, \"createOfficeManager\", commandLine, null);\n+\n+      assertThat(officeManager)\n+          .extracting(\"entries\")\n+          .asList()\n+          .hasSize(1)\n+          .element(0)\n+          .satisfies(\n+              o ->\n+                  assertThat(o)\n+                      .hasFieldOrPropertyWithValue(\n+                          \"officeProcessManager.existingProcessAction\",\n+                          ExistingProcessAction.CONNECT_OR_KILL));\n+    }\n   }\n \n-  @Test\n-  public void createCliConverter_WithStoreProperties_CreateConverterWithExpectedStoreProperties()\n-      throws Exception {\n-\n-    final CommandLine commandLine =\n-        new DefaultParser()\n-            .parse(\n-                (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n-                new String[] {\"-sOverwrite=true\", \"output1.pdf\", \"input2.txt\"});\n-\n-    final CliConverter cliConverter =\n-        Whitebox.invokeMethod(\n-            Convert.class, \"createCliConverter\", commandLine, null, officeManager, null);\n-    final LocalConverter localConverter =\n-        (LocalConverter) Whitebox.getField(CliConverter.class, \"converter\").get(cliConverter);\n-\n-    final Map<String, Object> expectedStoreProperties = new HashMap<>();\n-    expectedStoreProperties.put(\"Overwrite\", true);\n-    assertThat(localConverter).extracting(\"storeProperties\").isEqualTo(expectedStoreProperties);\n-  }\n+  @Nested\n+  class CreateCliConverter {\n+\n+    @Test\n+    void withLoadProperties_ShouldCreateConverterWithExpectedProperties() throws Exception {\n+\n+      final CommandLine commandLine =\n+          new DefaultParser()\n+              .parse(\n+                  (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n+                  new String[] {\"-lPassword=myPassword\", \"output1.pdf\", \"input2.txt\"});\n+\n+      final OfficeManager officeManager =\n+          Whitebox.invokeMethod(Convert.class, \"createOfficeManager\", commandLine, null);\n+      final CliConverter cliConverter =\n+          Whitebox.invokeMethod(\n+              Convert.class, \"createCliConverter\", commandLine, null, officeManager, null);\n+      final LocalConverter localConverter = Whitebox.getInternalState(cliConverter, \"converter\");\n+\n+      final Map<String, Object> expectedLoadProperties =\n+          new HashMap<>(LocalConverter.DEFAULT_LOAD_PROPERTIES);\n+      expectedLoadProperties.put(\"Password\", \"myPassword\");\n+      assertThat(localConverter).extracting(\"loadProperties\").isEqualTo(expectedLoadProperties);\n+    }\n \n-  @Test\n-  public void\n-      createCliConverter_WithStoreAndFilterDataProperties_CreateConverterWithExpectedStoreProperties()\n-          throws Exception {\n-\n-    final CommandLine commandLine =\n-        new DefaultParser()\n-            .parse(\n-                (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n-                new String[] {\n-                  \"-sOverwrite=true\",\n-                  \"-sFDPageRange=2-4\",\n-                  \"-sFDIntProp=5\",\n-                  \"-sFD=NotFilterData\",\n-                  \"output1.pdf\",\n-                  \"input2.txt\"\n-                });\n-\n-    final CliConverter cliConverter =\n-        Whitebox.invokeMethod(\n-            Convert.class, \"createCliConverter\", commandLine, null, officeManager, null);\n-    final LocalConverter localConverter =\n-        (LocalConverter) Whitebox.getField(CliConverter.class, \"converter\").get(cliConverter);\n-\n-    final Map<String, Object> expectedFilterData = new HashMap<>();\n-    expectedFilterData.put(\"PageRange\", \"2-4\");\n-    expectedFilterData.put(\"IntProp\", 5);\n-    final Map<String, Object> expectedStoreProperties = new HashMap<>();\n-    expectedStoreProperties.put(\"Overwrite\", true);\n-    expectedStoreProperties.put(\"FD\", \"NotFilterData\");\n-    expectedStoreProperties.put(\"FilterData\", expectedFilterData);\n-    assertThat(localConverter).extracting(\"storeProperties\").isEqualTo(expectedStoreProperties);\n-  }\n+    @Test\n+    void withFilterDataProperties_ShouldCreateConverterWithExpectedProperties() throws Exception {\n+\n+      final CommandLine commandLine =\n+          new DefaultParser()\n+              .parse(\n+                  (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n+                  new String[] {\"-sFDPageRange=2-2\", \"output1.pdf\", \"input2.txt\"});\n+\n+      final OfficeManager officeManager =\n+          Whitebox.invokeMethod(Convert.class, \"createOfficeManager\", commandLine, null);\n+      final CliConverter cliConverter =\n+          Whitebox.invokeMethod(\n+              Convert.class, \"createCliConverter\", commandLine, null, officeManager, null);\n+      final LocalConverter localConverter = Whitebox.getInternalState(cliConverter, \"converter\");\n+\n+      final Map<String, Object> expectedFilterData = new HashMap<>();\n+      expectedFilterData.put(\"PageRange\", \"2-2\");\n+      final Map<String, Object> expectedStoreProperties = new HashMap<>();\n+      expectedStoreProperties.put(\"FilterData\", expectedFilterData);\n+      assertThat(localConverter).extracting(\"storeProperties\").isEqualTo(expectedStoreProperties);\n+    }\n \n-  @Test\n-  public void createCliConverter_WithBadLoadProperties_BadLoadPropertiesIgnored() throws Exception {\n+    @Test\n+    void withStoreProperties_ShouldCreateConverterWithExpectedProperties() throws Exception {\n+\n+      final CommandLine commandLine =\n+          new DefaultParser()\n+              .parse(\n+                  (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n+                  new String[] {\"-sOverwrite=true\", \"output1.pdf\", \"input2.txt\"});\n+\n+      final OfficeManager officeManager =\n+          Whitebox.invokeMethod(Convert.class, \"createOfficeManager\", commandLine, null);\n+      final CliConverter cliConverter =\n+          Whitebox.invokeMethod(\n+              Convert.class, \"createCliConverter\", commandLine, null, officeManager, null);\n+      final LocalConverter localConverter = Whitebox.getInternalState(cliConverter, \"converter\");\n+\n+      final Map<String, Object> expectedStoreProperties = new HashMap<>();\n+      expectedStoreProperties.put(\"Overwrite\", true);\n+      assertThat(localConverter).extracting(\"storeProperties\").isEqualTo(expectedStoreProperties);\n+    }\n+\n+    @Test\n+    void withStoreAndFilterDataProperties_ShouldCreateConverterWithExpectedProperties()\n+        throws Exception {\n+\n+      final CommandLine commandLine =\n+          new DefaultParser()\n+              .parse(\n+                  (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n+                  new String[] {\n+                    \"-sOverwrite=true\",\n+                    \"-sReadOnly=false\",\n+                    \"-sFDPageRange=2-4\",\n+                    \"-sFDIntProp=5\",\n+                    \"-sFD=NotFilterData\",\n+                    \"output1.pdf\",\n+                    \"input2.txt\"\n+                  });\n+\n+      final OfficeManager officeManager =\n+          Whitebox.invokeMethod(Convert.class, \"createOfficeManager\", commandLine, null);\n+      final CliConverter cliConverter =\n+          Whitebox.invokeMethod(\n+              Convert.class, \"createCliConverter\", commandLine, null, officeManager, null);\n+      final LocalConverter localConverter = Whitebox.getInternalState(cliConverter, \"converter\");\n+\n+      final Map<String, Object> expectedFilterData = new HashMap<>();\n+      expectedFilterData.put(\"PageRange\", \"2-4\");\n+      expectedFilterData.put(\"IntProp\", 5);\n+      final Map<String, Object> expectedStoreProperties = new HashMap<>();\n+      expectedStoreProperties.put(\"Overwrite\", true);\n+      expectedStoreProperties.put(\"ReadOnly\", false);\n+      expectedStoreProperties.put(\"FD\", \"NotFilterData\");\n+      expectedStoreProperties.put(\"FilterData\", expectedFilterData);\n+      assertThat(localConverter).extracting(\"storeProperties\").isEqualTo(expectedStoreProperties);\n+    }\n \n-    final CommandLine commandLine =\n-        new DefaultParser()\n-            .parse(\n-                (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n-                new String[] {\"-lPassword\", \"output1.pdf\", \"input2.txt\"});\n+    @Test\n+    void withBadLoadProperties_ShouldIgnoreBadLoadProperties() throws Exception {\n \n-    final CliConverter cliConverter =\n-        Whitebox.invokeMethod(\n-            Convert.class, \"createCliConverter\", commandLine, null, officeManager, null);\n-    final LocalConverter localConverter =\n-        (LocalConverter) Whitebox.getField(CliConverter.class, \"converter\").get(cliConverter);\n+      final CommandLine commandLine =\n+          new DefaultParser()\n+              .parse(\n+                  (Options) Whitebox.getField(Convert.class, \"OPTIONS\").get(null),\n+                  new String[] {\"-lPassword\", \"output1.pdf\", \"input2.txt\"});\n \n-    assertThat(localConverter).extracting(\"loadProperties\").isEqualTo(null);\n+      final OfficeManager officeManager =\n+          Whitebox.invokeMethod(Convert.class, \"createOfficeManager\", commandLine, null);\n+      final CliConverter cliConverter =\n+          Whitebox.invokeMethod(\n+              Convert.class, \"createCliConverter\", commandLine, null, officeManager, null);\n+      final LocalConverter localConverter = Whitebox.getInternalState(cliConverter, \"converter\");\n+\n+      assertThat(localConverter).extracting(\"loadProperties\").isEqualTo(null);\n+    }\n   }\n }"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "jodconverter-cli/src/test/resources/oohome/MacOS/soffice",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/resources/oohome/MacOS/soffice",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/resources/oohome/MacOS/soffice",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/test/resources/oohome/MacOS/soffice?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "jodconverter-cli/src/test/resources/oohome/program/soffice",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/resources/oohome/program/soffice",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/resources/oohome/program/soffice",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/test/resources/oohome/program/soffice?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "jodconverter-cli/src/test/resources/oohome/program/soffice.bin",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/resources/oohome/program/soffice.bin",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/resources/oohome/program/soffice.bin",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/test/resources/oohome/program/soffice.bin?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "jodconverter-cli/src/test/resources/oohome/program/soffice.exe",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/resources/oohome/program/soffice.exe",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/resources/oohome/program/soffice.exe",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/test/resources/oohome/program/soffice.exe?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e"
  },
  {
    "sha": "12ec4ea4a82b4664d1540497f7d513e6f63171b2",
    "filename": "jodconverter-cli/src/test/resources/templateProfileDir/user/customFile",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/resources/templateProfileDir/user/customFile",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-cli/src/test/resources/templateProfileDir/user/customFile",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-cli/src/test/resources/templateProfileDir/user/customFile?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -0,0 +1 @@\n+custom file with nothing inside\n\\ No newline at end of file"
  },
  {
    "sha": "0d40c7bdb59ed886a5703b40a34c73375325e311",
    "filename": "jodconverter-core/src/integTest/resources/log4j.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/teramura/jodconverter/blob/b916f54cb1a1cd4521b2b55b5b35c41124b3b03d/jodconverter-core/src/integTest/resources/log4j.properties",
    "raw_url": "https://github.com/teramura/jodconverter/raw/b916f54cb1a1cd4521b2b55b5b35c41124b3b03d/jodconverter-core/src/integTest/resources/log4j.properties",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-core/src/integTest/resources/log4j.properties?ref=b916f54cb1a1cd4521b2b55b5b35c41124b3b03d",
    "patch": "@@ -1,6 +0,0 @@\n-log4j.rootLogger=INFO, stdout\n-log4j.appender.stdout=org.apache.log4j.ConsoleAppender\n-log4j.appender.stdout.layout.ConversionPattern=%d %-5p --- [%t] %c{1.} - %m%n\n-log4j.appender.stdout.layout=org.apache.log4j.EnhancedPatternLayout\n-\n-#log4j.logger.org.jodconverter=DEBUG\n\\ No newline at end of file"
  },
  {
    "sha": "606a7cefe826fd34e1f4ff9e28381eba82abe76e",
    "filename": "jodconverter-core/src/main/java/org/jodconverter/core/document/DefaultDocumentFormatRegistry.java",
    "status": "modified",
    "additions": 53,
    "deletions": 47,
    "changes": 100,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-core/src/main/java/org/jodconverter/core/document/DefaultDocumentFormatRegistry.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-core/src/main/java/org/jodconverter/core/document/DefaultDocumentFormatRegistry.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-core/src/main/java/org/jodconverter/core/document/DefaultDocumentFormatRegistry.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -54,7 +54,7 @@\n    *   <li>Media Type: application/pdf\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat PDF = byExtension(\"pdf\");\n+  public static final @NonNull DocumentFormat PDF = byExtension(\"pdf\");\n \n   /**\n    * Macromedia Flash.\n@@ -64,7 +64,7 @@\n    *   <li>Media Type: application/x-shockwave-flash\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat SWF = byExtension(\"swf\");\n+  public static final @NonNull DocumentFormat SWF = byExtension(\"swf\");\n \n   /**\n    * HTML.\n@@ -74,7 +74,7 @@\n    *   <li>Media Type: text/html\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat HTML = byExtension(\"html\");\n+  public static final @NonNull DocumentFormat HTML = byExtension(\"html\");\n \n   /**\n    * XHTML.\n@@ -84,7 +84,7 @@\n    *   <li>Media Type: application/xhtml+xml\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat XHTML = byExtension(\"xhtml\");\n+  public static final @NonNull DocumentFormat XHTML = byExtension(\"xhtml\");\n \n   /**\n    * OpenDocument Text.\n@@ -94,7 +94,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.text\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat ODT = byExtension(\"odt\");\n+  public static final @NonNull DocumentFormat ODT = byExtension(\"odt\");\n \n   /**\n    * OpenDocument Text Template.\n@@ -104,7 +104,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.text-template\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat OTT = byExtension(\"ott\");\n+  public static final @NonNull DocumentFormat OTT = byExtension(\"ott\");\n \n   /**\n    * OpenDocument Text Flat XML.\n@@ -114,7 +114,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.text-flat-xml\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat FODT = byExtension(\"fodt\");\n+  public static final @NonNull DocumentFormat FODT = byExtension(\"fodt\");\n \n   /**\n    * OpenOffice.org 1.0 Text Document.\n@@ -124,7 +124,7 @@\n    *   <li>Media Type: application/vnd.sun.xml.writer\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat SXW = byExtension(\"sxw\");\n+  public static final @NonNull DocumentFormat SXW = byExtension(\"sxw\");\n \n   /**\n    * Microsoft Word 97-2003.\n@@ -134,7 +134,7 @@\n    *   <li>Media Type: application/msword\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat DOC = byExtension(\"doc\");\n+  public static final @NonNull DocumentFormat DOC = byExtension(\"doc\");\n \n   /**\n    * Microsoft Word 2007-2013 XML.\n@@ -144,7 +144,17 @@\n    *   <li>Media Type: application/vnd.openxmlformats-officedocument.wordprocessingml.document\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat DOCX = byExtension(\"docx\");\n+  public static final @NonNull DocumentFormat DOCX = byExtension(\"docx\");\n+\n+  /**\n+   * Word Open XML Document Template.\n+   *\n+   * <ul>\n+   *   <li>Extension: dotx\n+   *   <li>Media Type: application/vnd.openxmlformats-officedocument.wordprocessingml.template\n+   * </ul>\n+   */\n+  public static final @NonNull DocumentFormat DOTX = byExtension(\"dotx\");\n \n   /**\n    * Rich Text Format.\n@@ -154,7 +164,7 @@\n    *   <li>Media Type: text/rtf\"\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat RTF = byExtension(\"rtf\");\n+  public static final @NonNull DocumentFormat RTF = byExtension(\"rtf\");\n \n   /**\n    * WordPerfect.\n@@ -164,7 +174,7 @@\n    *   <li>Media Type: application/wordperfect\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat WPD = byExtension(\"wpd\");\n+  public static final @NonNull DocumentFormat WPD = byExtension(\"wpd\");\n \n   /**\n    * Plain Text.\n@@ -174,7 +184,7 @@\n    *   <li>Media Type: text/plain\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat TXT = byExtension(\"txt\");\n+  public static final @NonNull DocumentFormat TXT = byExtension(\"txt\");\n \n   /**\n    * OpenDocument Spreadsheet.\n@@ -184,7 +194,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.spreadsheet\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat ODS = byExtension(\"ods\");\n+  public static final @NonNull DocumentFormat ODS = byExtension(\"ods\");\n \n   /**\n    * OpenDocument Spreadsheet Template.\n@@ -194,7 +204,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.spreadsheet-template\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat OTS = byExtension(\"ots\");\n+  public static final @NonNull DocumentFormat OTS = byExtension(\"ots\");\n \n   /**\n    * OpenDocument Spreadsheet Flat XML.\n@@ -204,7 +214,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.spreadsheet-flat-xml\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat FODS = byExtension(\"fods\");\n+  public static final @NonNull DocumentFormat FODS = byExtension(\"fods\");\n \n   /**\n    * OpenOffice.org 1.0 Spreadsheet.\n@@ -214,7 +224,7 @@\n    *   <li>Media Type: application/vnd.sun.xml.calc\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat SXC = byExtension(\"sxc\");\n+  public static final @NonNull DocumentFormat SXC = byExtension(\"sxc\");\n \n   /**\n    * Microsoft Excel 97-2003.\n@@ -224,7 +234,7 @@\n    *   <li>Media Type: application/vnd.ms-excel\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat XLS = byExtension(\"xls\");\n+  public static final @NonNull DocumentFormat XLS = byExtension(\"xls\");\n \n   /**\n    * Microsoft Excel 2007-2013 XML.\n@@ -234,7 +244,7 @@\n    *   <li>Media Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat XLSX = byExtension(\"xlsx\");\n+  public static final @NonNull DocumentFormat XLSX = byExtension(\"xlsx\");\n \n   /**\n    * Comma Separated Values.\n@@ -244,7 +254,7 @@\n    *   <li>Media Type: text/csv\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat CSV = byExtension(\"csv\");\n+  public static final @NonNull DocumentFormat CSV = byExtension(\"csv\");\n \n   /**\n    * Tab Separated Values.\n@@ -254,7 +264,7 @@\n    *   <li>Media Type: text/tab-separated-values\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat TSV = byExtension(\"tsv\");\n+  public static final @NonNull DocumentFormat TSV = byExtension(\"tsv\");\n \n   /**\n    * OpenDocument Presentation.\n@@ -264,7 +274,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.presentation\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat ODP = byExtension(\"odp\");\n+  public static final @NonNull DocumentFormat ODP = byExtension(\"odp\");\n \n   /**\n    * OpenDocument Presentation Template.\n@@ -274,7 +284,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.presentation-template\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat OTP = byExtension(\"otp\");\n+  public static final @NonNull DocumentFormat OTP = byExtension(\"otp\");\n \n   /**\n    * OpenDocument Presentation Flat XML.\n@@ -284,7 +294,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.presentation-flat-xml\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat FODP = byExtension(\"fodp\");\n+  public static final @NonNull DocumentFormat FODP = byExtension(\"fodp\");\n \n   /**\n    * OpenOffice.org 1.0 Presentation.\n@@ -294,7 +304,7 @@\n    *   <li>Media Type: application/vnd.sun.xml.impress\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat SXI = byExtension(\"sxi\");\n+  public static final @NonNull DocumentFormat SXI = byExtension(\"sxi\");\n \n   /**\n    * Microsoft PowerPoint 97-2003.\n@@ -304,7 +314,7 @@\n    *   <li>Media Type: application/vnd.ms-powerpoint\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat PPT = byExtension(\"ppt\");\n+  public static final @NonNull DocumentFormat PPT = byExtension(\"ppt\");\n \n   /**\n    * Microsoft PowerPoint 2007-2013 XML.\n@@ -314,7 +324,7 @@\n    *   <li>Media Type: application/vnd.openxmlformats-officedocument.presentationml.presentation\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat PPTX = byExtension(\"pptx\");\n+  public static final @NonNull DocumentFormat PPTX = byExtension(\"pptx\");\n \n   /**\n    * OpenDocument Drawing.\n@@ -324,7 +334,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.graphics\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat ODG = byExtension(\"odg\");\n+  public static final @NonNull DocumentFormat ODG = byExtension(\"odg\");\n \n   /**\n    * OpenDocument Drawing Template.\n@@ -334,7 +344,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.graphics\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat OTG = byExtension(\"otg\");\n+  public static final @NonNull DocumentFormat OTG = byExtension(\"otg\");\n \n   /**\n    * OpenDocument Drawing Flat XML.\n@@ -344,7 +354,7 @@\n    *   <li>Media Type: application/vnd.oasis.opendocument.graphics-flat-xml\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat FODG = byExtension(\"fodg\");\n+  public static final @NonNull DocumentFormat FODG = byExtension(\"fodg\");\n \n   /**\n    * Scalable Vector Graphics.\n@@ -354,7 +364,7 @@\n    *   <li>Media Type: image/svg+xml\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat SVG = byExtension(\"svg\");\n+  public static final @NonNull DocumentFormat SVG = byExtension(\"svg\");\n \n   /**\n    * Visio format.\n@@ -364,7 +374,7 @@\n    *   <li>Media Type: application/x-visio\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat VSD = byExtension(\"vsd\");\n+  public static final @NonNull DocumentFormat VSD = byExtension(\"vsd\");\n \n   /**\n    * New Visio format.\n@@ -374,7 +384,7 @@\n    *   <li>Media Type: application/vnd-ms-visio.drawing\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat VSDX = byExtension(\"vsdx\");\n+  public static final @NonNull DocumentFormat VSDX = byExtension(\"vsdx\");\n \n   /**\n    * Portable Network Graphics.\n@@ -384,7 +394,7 @@\n    *   <li>Media Type: image/png\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat PNG = byExtension(\"png\");\n+  public static final @NonNull DocumentFormat PNG = byExtension(\"png\");\n \n   /**\n    * Joint Photographic Experts Group.\n@@ -394,7 +404,7 @@\n    *   <li>Media Type: image/jpg\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat JPEG = byExtension(\"jpg\");\n+  public static final @NonNull DocumentFormat JPEG = byExtension(\"jpg\");\n \n   /**\n    * Tagged Image File Format.\n@@ -404,7 +414,7 @@\n    *   <li>Media Type: image/tif\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat TIFF = byExtension(\"tif\");\n+  public static final @NonNull DocumentFormat TIFF = byExtension(\"tif\");\n \n   /**\n    * Graphic Interchange Format.\n@@ -414,7 +424,7 @@\n    *   <li>Media Type: image/gif\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat GIF = byExtension(\"gif\");\n+  public static final @NonNull DocumentFormat GIF = byExtension(\"gif\");\n \n   /**\n    * Windows Bitmap.\n@@ -424,15 +434,14 @@\n    *   <li>Media Type: image/bmp\n    * </ul>\n    */\n-  @NonNull public static final DocumentFormat BMP = byExtension(\"bmp\");\n+  public static final @NonNull DocumentFormat BMP = byExtension(\"bmp\");\n \n   /**\n    * Gets the default instance of the class.\n    *\n    * @return The default DocumentFormatRegistry.\n    */\n-  @NonNull\n-  public static DocumentFormatRegistry getInstance() {\n+  public static @NonNull DocumentFormatRegistry getInstance() {\n     return DefaultDocumentFormatRegistryInstanceHolder.getInstance();\n   }\n \n@@ -449,8 +458,7 @@ private static DocumentFormat byExtension(final String extension) {\n    * @return The found document format, or {@code null} if no document format exists for the\n    *     specified extension.\n    */\n-  @Nullable\n-  public static DocumentFormat getFormatByExtension(@NonNull final String extension) {\n+  public static @Nullable DocumentFormat getFormatByExtension(@NonNull final String extension) {\n     return getInstance().getFormatByExtension(extension);\n   }\n \n@@ -461,8 +469,7 @@ public static DocumentFormat getFormatByExtension(@NonNull final String extensio\n    * @return The found document format, or {@code null} if no document format exists for the\n    *     specified media type.\n    */\n-  @Nullable\n-  public static DocumentFormat getFormatByMediaType(@NonNull final String mediaType) {\n+  public static @Nullable DocumentFormat getFormatByMediaType(@NonNull final String mediaType) {\n     return getInstance().getFormatByMediaType(mediaType);\n   }\n \n@@ -472,9 +479,8 @@ public static DocumentFormat getFormatByMediaType(@NonNull final String mediaTyp\n    * @param family The family whose document formats will be returned.\n    * @return A set with all the document formats for the specified family.\n    */\n-  @NonNull\n-  public static Set<@NonNull DocumentFormat> getOutputFormats(\n-      @NonNull final DocumentFamily family) {\n+  public static @NonNull Set<@NonNull DocumentFormat> getOutputFormats(\n+      final @NonNull DocumentFamily family) {\n     return getInstance().getOutputFormats(family);\n   }\n "
  },
  {
    "sha": "4cc605f9d17b3d65d84023f03f6c321028348c14",
    "filename": "jodconverter-core/src/main/java/org/jodconverter/core/document/DefaultDocumentFormatRegistryInstanceHolder.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-core/src/main/java/org/jodconverter/core/document/DefaultDocumentFormatRegistryInstanceHolder.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-core/src/main/java/org/jodconverter/core/document/DefaultDocumentFormatRegistryInstanceHolder.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-core/src/main/java/org/jodconverter/core/document/DefaultDocumentFormatRegistryInstanceHolder.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -39,8 +39,7 @@\n    *\n    * @return The default {@link DocumentFormatRegistry}.\n    */\n-  @NonNull\n-  public static DocumentFormatRegistry getInstance() {\n+  public static @NonNull DocumentFormatRegistry getInstance() {\n     synchronized (DocumentFormatRegistry.class) {\n       if (instance == null) {\n         try (InputStream input =\n@@ -62,7 +61,7 @@ public static DocumentFormatRegistry getInstance() {\n    *\n    * @param registry The default {@link DocumentFormatRegistry}.\n    */\n-  public static void setInstance(@NonNull final DocumentFormatRegistry registry) {\n+  public static void setInstance(final @NonNull DocumentFormatRegistry registry) {\n     synchronized (DocumentFormatRegistry.class) {\n       instance = registry;\n     }"
  },
  {
    "sha": "7a34185404c6429a6c8c7153f2ed882b11f5fd28",
    "filename": "jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormat.java",
    "status": "modified",
    "additions": 56,
    "deletions": 40,
    "changes": 96,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormat.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormat.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormat.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -19,16 +19,17 @@\n \n package org.jodconverter.core.document;\n \n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.EnumMap;\n-import java.util.HashMap;\n-import java.util.LinkedHashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n+import java.lang.reflect.Type;\n+import java.util.*;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import com.google.gson.JsonDeserializationContext;\n+import com.google.gson.JsonDeserializer;\n+import com.google.gson.JsonElement;\n+import com.google.gson.annotations.JsonAdapter;\n+import com.google.gson.annotations.SerializedName;\n+import com.google.gson.reflect.TypeToken;\n import org.checkerframework.checker.nullness.qual.NonNull;\n import org.checkerframework.checker.nullness.qual.Nullable;\n \n@@ -38,19 +39,46 @@\n public class DocumentFormat {\n \n   private final String name;\n+  // Be backward compatible. Former json file doesn't support multiple document format extensions.\n+  @SerializedName(\n+      value = \"extensions\",\n+      alternate = {\"extension\"})\n+  @JsonAdapter(ExtensionsAdapter.class)\n   private final List<String> extensions;\n+\n   private final String mediaType;\n   private final DocumentFamily inputFamily;\n   private final Map<String, Object> loadProperties;\n+  // Be backward compatible. storePropertiesByFamily has been renamed storeProperties\n+  @SerializedName(\n+      value = \"storeProperties\",\n+      alternate = {\"storePropertiesByFamily\"})\n   private final Map<DocumentFamily, Map<String, Object>> storeProperties;\n \n+  /**\n+   * Special adapter used to support backward compatibility when loading a document format json\n+   * file. Former json file doesn't support multiple document format extensions.\n+   */\n+  private static class ExtensionsAdapter implements JsonDeserializer<List<String>> {\n+\n+    @Override\n+    public List<String> deserialize(\n+        final JsonElement json, final Type type, final JsonDeserializationContext cxt) {\n+\n+      if (json.isJsonArray()) {\n+        final Type listType = new TypeToken<List<String>>() {}.getType();\n+        return cxt.deserialize(json, listType);\n+      }\n+      return Stream.of(json.getAsString()).collect(Collectors.toList());\n+    }\n+  }\n+\n   /**\n    * Creates a new builder instance.\n    *\n    * @return A new builder instance.\n    */\n-  @NonNull\n-  public static Builder builder() {\n+  public static @NonNull Builder builder() {\n     return new Builder();\n   }\n \n@@ -61,8 +89,7 @@ public static Builder builder() {\n    * @return A {@link DocumentFormat}, which will be modifiable, unlike the default document formats\n    *     are.\n    */\n-  @NonNull\n-  public static DocumentFormat copy(@NonNull final DocumentFormat sourceFormat) {\n+  public static @NonNull DocumentFormat copy(final @NonNull DocumentFormat sourceFormat) {\n     return new Builder().from(sourceFormat).unmodifiable(false).build();\n   }\n \n@@ -73,8 +100,8 @@ public static DocumentFormat copy(@NonNull final DocumentFormat sourceFormat) {\n    * @return A {@link DocumentFormat}, which will be unmodifiable, like the default document formats\n    *     are.\n    */\n-  @NonNull\n-  public static DocumentFormat unmodifiableCopy(@NonNull final DocumentFormat sourceFormat) {\n+  public static @NonNull DocumentFormat unmodifiableCopy(\n+      final @NonNull DocumentFormat sourceFormat) {\n     return new Builder().from(sourceFormat).unmodifiable(true).build();\n   }\n \n@@ -103,7 +130,6 @@ private DocumentFormat(\n     AssertUtils.notBlank(name, \"name must not be null nor blank\");\n     AssertUtils.notNull(extensions, \"extensions must not be null\");\n     AssertUtils.notBlank(mediaType, \"mediaType must not be null nor blank\");\n-    AssertUtils.notNull(inputFamily, \"inputFamily must not be null\");\n \n     this.name = name;\n     this.extensions = new ArrayList<>(extensions);\n@@ -139,8 +165,7 @@ private DocumentFormat(\n    *\n    * @return A string that represents an extension.\n    */\n-  @NonNull\n-  public String getExtension() {\n+  public @NonNull String getExtension() {\n     return extensions.get(0);\n   }\n \n@@ -149,8 +174,7 @@ public String getExtension() {\n    *\n    * @return A list of string that represents the extensions.\n    */\n-  @NonNull\n-  public List<@NonNull String> getExtensions() {\n+  public @NonNull List<@NonNull String> getExtensions() {\n     return extensions;\n   }\n \n@@ -159,8 +183,7 @@ public String getExtension() {\n    *\n    * @return The input DocumentFamily of the document format.\n    */\n-  @NonNull\n-  public DocumentFamily getInputFamily() {\n+  public @Nullable DocumentFamily getInputFamily() {\n     return inputFamily;\n   }\n \n@@ -169,8 +192,7 @@ public DocumentFamily getInputFamily() {\n    *\n    * @return A map containing the properties to apply when loading a document of this format.\n    */\n-  @Nullable\n-  public Map<@NonNull String, @NonNull Object> getLoadProperties() {\n+  public @Nullable Map<@NonNull String, @NonNull Object> getLoadProperties() {\n     return loadProperties;\n   }\n \n@@ -179,8 +201,7 @@ public DocumentFamily getInputFamily() {\n    *\n    * @return A string that represents the media type.\n    */\n-  @NonNull\n-  public String getMediaType() {\n+  public @NonNull String getMediaType() {\n     return mediaType;\n   }\n \n@@ -189,8 +210,7 @@ public String getMediaType() {\n    *\n    * @return A string that represents the name of the format.\n    */\n-  @NonNull\n-  public String getName() {\n+  public @NonNull String getName() {\n     return name;\n   }\n \n@@ -201,8 +221,7 @@ public String getName() {\n    * @return A DocumentFamily/Map pairs containing the properties to apply when storing a document\n    *     of this format, by DocumentFamily.\n    */\n-  @Nullable\n-  public Map<@NonNull DocumentFamily, @NonNull Map<@NonNull String, @NonNull Object>>\n+  public @Nullable Map<@NonNull DocumentFamily, @NonNull Map<@NonNull String, @NonNull Object>>\n       getStoreProperties() {\n     return storeProperties;\n   }\n@@ -214,16 +233,14 @@ public String getName() {\n    * @param family The DocumentFamily for which the properties are get.\n    * @return A map containing the properties to apply when storing a document to this format.\n    */\n-  @Nullable\n-  public Map<@NonNull String, @NonNull Object> getStoreProperties(\n+  public @Nullable Map<@NonNull String, @NonNull Object> getStoreProperties(\n       @NonNull final DocumentFamily family) {\n \n     return storeProperties == null ? null : storeProperties.get(family);\n   }\n \n-  @NonNull\n   @Override\n-  public String toString() {\n+  public @NonNull String toString() {\n     return getClass().getSimpleName()\n         + \"{\"\n         + \"name=\\\"\"\n@@ -322,13 +339,12 @@ public Builder extension(@NonNull final String extension) {\n      * Specifies the input (when a document is loaded) DocumentFamily associated with the document\n      * format.\n      *\n-     * @param inputFamily The DocumentFamily, cannot be null.\n+     * @param inputFamily The DocumentFamily, may be null.\n      * @return This builder instance.\n      */\n     @NonNull\n-    public Builder inputFamily(@NonNull final DocumentFamily inputFamily) {\n+    public Builder inputFamily(@Nullable final DocumentFamily inputFamily) {\n \n-      AssertUtils.notNull(inputFamily, \"inputFamily must not be null\");\n       this.inputFamily = inputFamily;\n       return this;\n     }\n@@ -343,7 +359,7 @@ public Builder inputFamily(@NonNull final DocumentFamily inputFamily) {\n      * @return This builder instance.\n      */\n     @NonNull\n-    public Builder loadProperty(@NonNull final String name, @Nullable final Object value) {\n+    public Builder loadProperty(@NonNull final String name, final @Nullable Object value) {\n \n       AssertUtils.notBlank(name, \"name must not be null nor blank\");\n \n@@ -423,7 +439,7 @@ public Builder unmodifiable(final boolean unmodifiable) {\n     public Builder storeProperty(\n         @NonNull final DocumentFamily documentFamily,\n         @NonNull final String name,\n-        @Nullable final Object value) {\n+        final @Nullable Object value) {\n \n       AssertUtils.notNull(documentFamily, \"documentFamily must not be null\");\n       AssertUtils.notBlank(name, \"name must not be null nor blank\");"
  },
  {
    "sha": "bc219f3202b8bf4148af43db7bd71b535c7cc199",
    "filename": "jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormatProperties.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormatProperties.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormatProperties.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormatProperties.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -41,8 +41,7 @@\n    *\n    * @return A map containing the properties.\n    */\n-  @NonNull\n-  public Map<@NonNull String, @NonNull Object> getLoad() {\n+  public @NonNull Map<@NonNull String, @NonNull Object> getLoad() {\n     return load;\n   }\n \n@@ -51,8 +50,8 @@\n    *\n    * @return A map containing the properties.\n    */\n-  @NonNull\n-  public Map<@NonNull DocumentFamily, @NonNull Map<@NonNull String, @NonNull Object>> getStore() {\n+  public @NonNull Map<@NonNull DocumentFamily, @NonNull Map<@NonNull String, @NonNull Object>>\n+      getStore() {\n     return store;\n   }\n }"
  },
  {
    "sha": "df5694a3a88e42b9da1610faa77c91dc9d37083d",
    "filename": "jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormatRegistryException.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/teramura/jodconverter/blob/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormatRegistryException.java",
    "raw_url": "https://github.com/teramura/jodconverter/raw/bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e/jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormatRegistryException.java",
    "contents_url": "https://api.github.com/repos/teramura/jodconverter/contents/jodconverter-core/src/main/java/org/jodconverter/core/document/DocumentFormatRegistryException.java?ref=bab2ea01ef3ea87fcbe4c3ba817089a9b5b19c3e",
    "patch": "@@ -35,7 +35,7 @@\n    * @param cause the cause.\n    */\n   public DocumentFormatRegistryException(\n-      @NonNull final String message, @NonNull final Throwable cause) {\n+      final @NonNull String message, final @NonNull Throwable cause) {\n     super(message, cause);\n   }\n }"
  }
]
