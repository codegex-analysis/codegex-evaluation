[
  {
    "sha": "548613bc8188aa33445c587b45442025e2d6c1f3",
    "filename": "README.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/README.md",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/README.md",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/README.md?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -1 +1 @@\n-# geek-java-ee\n+# geek-java-ee\r"
  },
  {
    "sha": "c6a3f885744ea376c834d5c3e7fa5485ff15d565",
    "filename": "first-jsf-app/datasource_p.cli",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/datasource_p.cli",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/datasource_p.cli",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/datasource_p.cli?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -1,4 +1,4 @@\n-# 1. creating datasource section in standalone.xml config\n+cd# 1. creating datasource section in standalone.xml config\n data-source add \\\n    --jndi-name=java:/jboss/datasources/PostgresDS \\\n    --name=PostgresDS \\"
  },
  {
    "sha": "8f33b83237d4e9ce04e89da1827a3a6ed3cc652d",
    "filename": "first-jsf-app/mysql-driver.cli",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/mysql-driver.cli",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/mysql-driver.cli",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/mysql-driver.cli?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -1,7 +1,7 @@\n-module add \\\n-  --name=com.mysql.driver \\\n-  --dependencies=javax.api,javax.transaction.api \\\n-  --resources=C:/_Study/JDBC/mysql-connector-java-8.0.23.jar\n+#module add \\\n+#  --name=com.mysql.driver \\\n+#  --dependencies=javax.api,javax.transaction.api \\\n+#  --resources=C:/_Study/JDBC/mysql-connector-java-8.0.23.jar\n \n /subsystem=datasources/jdbc-driver=mysql:add(driver-name=mysql, driver-module-name=com.mysql.driver, driver-class-name=com.mysql.jdbc.Driver )\n "
  },
  {
    "sha": "132c8a171924b705c0ad29a58ca9a8f6418ffc95",
    "filename": "first-jsf-app/pom.xml",
    "status": "modified",
    "additions": 21,
    "deletions": 8,
    "changes": 29,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/pom.xml",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/pom.xml",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/pom.xml?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -99,6 +99,27 @@\n             <version>2.0.0.Final</version>\n             <scope>provided</scope>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>javax.jms</groupId>\n+            <artifactId>javax.jms-api</artifactId>\n+            <version>2.0.1</version>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>javax.ws.rs</groupId>\n+            <artifactId>javax.ws.rs-api</artifactId>\n+            <version>2.1.1</version>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>ru.geekbrains</groupId>\n+            <artifactId>remote-services-api</artifactId>\n+            <version>1.0-SNAPSHOT</version>\n+            <scope>compile</scope>\n+        </dependency>\n     </dependencies>\n \n     <build>\n@@ -120,14 +141,6 @@\n                 </configuration>\n             </plugin>\n \n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-war-plugin</artifactId>\n-                <version>3.2.3</version>\n-                <configuration>\n-                    <archiveClasses>true</archiveClasses>\n-                </configuration>\n-            </plugin>\n         </plugins>\n     </build>\n "
  },
  {
    "sha": "3c82ea31f44ec88134204680b9bfbc007050983d",
    "filename": "first-jsf-app/postgres-driver.cli",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/postgres-driver.cli",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/postgres-driver.cli",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/postgres-driver.cli?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -1,7 +1,7 @@\n-module add \\\n-  --name=org.postgresql \\\n-  --dependencies=javax.api,javax.transaction.api \\\n-  --resources=C:/_Study/Distrib/JDBC/postgresql-42.2.19.jar\n+#module add \\\n+#  --name=org.postgresql \\\n+#  --dependencies=javax.api,javax.transaction.api \\\n+#  --resources=C:/_Study/Distrib/JDBC/postgresql-42.2.19.jar\n \n /subsystem=datasources/jdbc-driver=postgres:add(driver-name=postgres, driver-module-name=org.postgresql, driver-class-name=org.postgresql.Driver )\n "
  },
  {
    "sha": "9a7e23c4fd7d5ae4c059b9511190cef7627f282b",
    "filename": "first-jsf-app/requests.http",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/requests.http",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/requests.http",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/requests.http?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,65 @@\n+GET http://localhost:8080/first-jsf-app/api/v1/products\n+\n+###\n+\n+GET http://localhost:8080/first-jsf-app/api/v1/categories\n+\n+###\n+\n+POST http://localhost:8080/first-jsf-app/api/v1/categories\n+Content-Type: application/json\n+\n+ {\n+    \"name\": \"Furniture\"\n+  }\n+\n+###\n+\n+GET http://localhost:8080/first-jsf-app/api/v1/users\n+\n+###\n+\n+POST http://localhost:8080/first-jsf-app/api/v1/users\n+Content-Type: application/json\n+\n+{\n+  \"name\": \"Максим\",\n+  \"surname\": \"Горький\"\n+}\n+\n+###\n+\n+GET http://localhost:8080/first-jsf-app/api/v1/products/6\n+\n+###\n+\n+POST http://localhost:8080/first-jsf-app/api/v1/products\n+Content-Type: application/json\n+\n+{\n+  \"categoryId\": 2,\n+  \"categoryName\": \"Notebooks\",\n+  \"description\": \"Notebook from REST\",\n+  \"name\": \"REST Nimbus 3000\",\n+  \"price\": 5555.55\n+}\n+\n+###\n+\n+PUT http://localhost:8080/first-jsf-app/api/v1/products\n+Content-Type: application/json\n+\n+{\n+  \"categoryId\": 2,\n+  \"categoryName\": \"Notebooks\",\n+  \"description\": \"Notebook from REST\",\n+  \"id\": 6,\n+  \"name\": \"REST Nimbus 3000 Limited\",\n+  \"price\": 5555.55\n+}\n+\n+###\n+\n+DELETE http://localhost:8080/first-jsf-app/api/v1/products\n+\n+4"
  },
  {
    "sha": "e40e1908e79db5910264b69a825ee69466aefcc6",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/jms/JmsProductReceiver.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/jms/JmsProductReceiver.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/jms/JmsProductReceiver.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/jms/JmsProductReceiver.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,42 @@\n+package ru.geekbrains.jms;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import ru.geekbrains.dto.ProductDto;\n+import ru.geekbrains.services.ProductService;\n+\n+import javax.ejb.ActivationConfigProperty;\n+import javax.ejb.EJB;\n+import javax.ejb.MessageDriven;\n+import javax.jms.JMSException;\n+import javax.jms.Message;\n+import javax.jms.MessageListener;\n+import javax.jms.ObjectMessage;\n+\n+@MessageDriven(\n+        activationConfig = {\n+                @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n+                @ActivationConfigProperty(propertyName = \"destination\", propertyValue = \"java:jboss/exported/jms/productQueue\")\n+        }\n+)\n+public class JmsProductReceiver implements MessageListener {\n+\n+    private final Logger logger = LoggerFactory.getLogger(JmsProductReceiver.class);\n+\n+    @EJB\n+    ProductService productService;\n+\n+    @Override\n+    public void onMessage(Message message) {\n+        logger.info(\"New JMS message\");\n+\n+        if(message instanceof ObjectMessage) {\n+            ObjectMessage om = (ObjectMessage) message;\n+            try {\n+                productService.saveOrUpdate((ProductDto) om.getObject());\n+            } catch (JMSException e) {\n+                logger.error(\"\", e);\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "544b016e44db66279941e62449fd3d48fa884a37",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/persist/Category.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/Category.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/Category.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/persist/Category.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -12,6 +12,7 @@\n @Data\n @NamedQueries({\n         @NamedQuery(name = \"findAllCategories\", query = \"from Category\"),\n+        @NamedQuery(name = \"findCategoryByName\", query = \"from Category c where c.name = :name\"),\n         @NamedQuery(name = \"deleteCategoryById\", query = \"delete from Category c where c.id = :id\"),\n         @NamedQuery(name = \"countAllCategories\", query = \"select count(*) from Category\")\n })"
  },
  {
    "sha": "a3367acf88c557e0522ced3a8c753c39973138af",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/persist/CategoryRepository.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/CategoryRepository.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/CategoryRepository.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/persist/CategoryRepository.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -45,4 +45,8 @@ public void saveOrUpdate(Category category) {\n     public void deleteById(Long id) {\n         entityManager.createNamedQuery(\"deleteCategoryById\").setParameter(\"id\", id).executeUpdate();\n     }\n+\n+    public Category findByName(String name) {\n+        return entityManager.createNamedQuery(\"findCategoryByName\", Category.class).setParameter(\"name\", name).getSingleResult();\n+    }\n }"
  },
  {
    "sha": "c569dc8d2f9a3884f7dfb95c027a30af663f8000",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/persist/Product.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/Product.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/Product.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/persist/Product.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -12,6 +12,8 @@\n @Data\n @NamedQueries({\n         @NamedQuery(name = \"findAllProducts\", query = \"from Product\"),\n+        @NamedQuery(name = \"findProductByName\", query = \"from Product p where p.name = :name\"),\n+        @NamedQuery(name = \"findProductByCategory\", query = \"from Product p where p.category.id = :category_id\"),\n         @NamedQuery(name = \"deleteProductById\", query = \"delete from Product p where p.id = :id\"),\n         @NamedQuery(name = \"countAllProducts\", query = \"select count(*) from Product\")\n })"
  },
  {
    "sha": "2e3eb88075c11b9164774855215f08b811d70dc8",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/persist/ProductRepository.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/ProductRepository.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/persist/ProductRepository.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -38,4 +38,13 @@ public void saveOrUpdate(Product product) {\n     public void deleteById(Long id) {\n         entityManager.createNamedQuery(\"deleteProductById\").setParameter(\"id\", id).executeUpdate();\n     }\n+\n+    public Product findByName(String name) {\n+        return entityManager.createNamedQuery(\"findProductByName\", Product.class).setParameter(\"name\", name).getSingleResult();\n+    }\n+\n+    public List<Product> findAllByCategory(Long categoryId) {\n+        return entityManager.createNamedQuery(\"findProductByCategory\", Product.class).setParameter(\"category_id\", categoryId).getResultList();\n+    }\n+\n }"
  },
  {
    "sha": "3684193276d92f59ce42890517186889a04b4bf9",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/persist/User.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/User.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/User.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/persist/User.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -13,6 +13,7 @@\n @Data\n @NamedQueries({\n         @NamedQuery(name = \"findAllUsers\", query = \"from User\"),\n+        @NamedQuery(name = \"findUserByName\", query = \"from User u where u.name = :name\"),\n         @NamedQuery(name = \"deleteUserById\", query = \"delete from User u where u.id = :id\"),\n         @NamedQuery(name = \"countAllUsers\", query = \"select count(*) from User\")\n })"
  },
  {
    "sha": "eb5aff2839444b7a4fa2d073fb581025e3dfa4fc",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/persist/UserRepository.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/UserRepository.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/persist/UserRepository.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/persist/UserRepository.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -39,6 +39,12 @@ public void saveOrUpdate(User user) {\n \n     @Transactional\n     public void deleteById(Long id) {\n-        entityManager.createNamedQuery(\"deleteUserById\").setParameter(\"id\", id).executeUpdate();\n+        entityManager.createNamedQuery(\"deleteUserById\")\n+                .setParameter(\"id\", id).executeUpdate();\n+    }\n+\n+    public User findByName(String name) {\n+        return entityManager.createNamedQuery(\"findUserByName\", User.class)\n+                .setParameter(\"name\", name).getSingleResult();\n     }\n }"
  },
  {
    "sha": "cd4f84771b4cffc6baeee749948f564e8b249e0c",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/rest/CategoryServiceRest.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/rest/CategoryServiceRest.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/rest/CategoryServiceRest.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/rest/CategoryServiceRest.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,42 @@\n+package ru.geekbrains.rest;\n+\n+import ru.geekbrains.dto.CategoryDto;\n+\n+import javax.ejb.Local;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.MediaType;\n+import java.util.List;\n+\n+@Local\n+@Path(\"/v1/categories\")\n+public interface CategoryServiceRest {\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    List<CategoryDto> findAll();\n+\n+    @GET\n+    @Path(\"/{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    CategoryDto findById(@PathParam(\"id\") Long id);\n+\n+    @GET\n+    @Path(\"/name\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    CategoryDto findByName(@QueryParam(\"name\") String name);\n+\n+    @GET\n+    @Path(\"/count\")\n+    Long countAll();\n+\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    void insert(CategoryDto categoryDto);\n+\n+    @PUT\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    void update(CategoryDto categoryDto);\n+\n+    @DELETE\n+    void deleteById(Long id);\n+}"
  },
  {
    "sha": "98a4c46ed1e9c4b48176ef9039af1e43904bde0f",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/rest/JaxRsApplication.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/rest/JaxRsApplication.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/rest/JaxRsApplication.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/rest/JaxRsApplication.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,9 @@\n+package ru.geekbrains.rest;\n+\n+import javax.ws.rs.ApplicationPath;\n+import javax.ws.rs.core.Application;\n+\n+@ApplicationPath(\"/api\")\n+public class JaxRsApplication extends Application {\n+\n+}"
  },
  {
    "sha": "5c59aa08627fa943be21db206b0585a758f97760",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/rest/ProductServiceRest.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/rest/ProductServiceRest.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/rest/ProductServiceRest.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/rest/ProductServiceRest.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,47 @@\n+package ru.geekbrains.rest;\n+\n+import ru.geekbrains.dto.ProductDto;\n+\n+import javax.ejb.Local;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.MediaType;\n+import java.util.List;\n+\n+@Local\n+@Path(\"/v1/products\")\n+public interface ProductServiceRest {\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    List<ProductDto> findAll();\n+\n+    @GET\n+    @Path(\"/{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    ProductDto findById(@PathParam(\"id\") Long id);\n+\n+    @GET\n+    @Path(\"/name\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    ProductDto findByName(@QueryParam(\"name\") String name);\n+\n+    @GET\n+    @Path(\"/category\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    List<ProductDto> findAllByCategory(@QueryParam(\"category_id\") Long categoryId);\n+\n+    @GET\n+    @Path(\"/count\")\n+    Long countAll();\n+\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    void insert(ProductDto productDto);\n+\n+    @PUT\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    void update(ProductDto productDto);\n+\n+    @DELETE\n+    void deleteById(Long id);\n+}"
  },
  {
    "sha": "76db17089253862cb2677a506af5a60e8f6fe70c",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/rest/UserServiceRest.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/rest/UserServiceRest.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/rest/UserServiceRest.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/rest/UserServiceRest.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,42 @@\n+package ru.geekbrains.rest;\n+\n+import ru.geekbrains.dto.UserDto;\n+\n+import javax.ejb.Local;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.MediaType;\n+import java.util.List;\n+\n+@Local\n+@Path(\"/v1/users\")\n+public interface UserServiceRest {\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    List<UserDto> findAll();\n+\n+    @GET\n+    @Path(\"/{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    UserDto findById(@PathParam(\"id\") Long id);\n+\n+    @GET\n+    @Path(\"/name\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    UserDto findByName(@QueryParam(\"name\") String name);\n+\n+    @GET\n+    @Path(\"/count\")\n+    Long countAll();\n+\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    void insert(UserDto userDto);\n+\n+    @PUT\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    void update(UserDto userDto);\n+\n+    @DELETE\n+    void deleteById(Long id);\n+}"
  },
  {
    "sha": "b50e09cce919a25f05a61bd1eec3c38ed22257a5",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/services/CartServiceImpl.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/services/CartServiceImpl.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/services/CartServiceImpl.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/services/CartServiceImpl.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -3,13 +3,15 @@\n \n import ru.geekbrains.dto.ProductDto;\n \n+import javax.ejb.Remote;\n import javax.ejb.Stateful;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n @Stateful\n+@Remote(CartServiceRemote.class)\n public class CartServiceImpl implements CartService, CartServiceRemote {\n \n     private final Map<Long, ProductDto> cart = new HashMap<>();"
  },
  {
    "sha": "5bf8e12c212cc6b390fff2f21b23ebaa40782a9c",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/services/CategoryServiceImpl.java",
    "status": "modified",
    "additions": 37,
    "deletions": 3,
    "changes": 40,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/services/CategoryServiceImpl.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/services/CategoryServiceImpl.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/services/CategoryServiceImpl.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -5,15 +5,18 @@\n import ru.geekbrains.dto.CategoryDto;\n import ru.geekbrains.persist.Category;\n import ru.geekbrains.persist.CategoryRepository;\n+import ru.geekbrains.rest.CategoryServiceRest;\n \n import javax.ejb.EJB;\n+import javax.ejb.Remote;\n import javax.ejb.Stateless;\n import javax.ejb.TransactionAttribute;\n import java.util.List;\n import java.util.stream.Collectors;\n \n @Stateless\n-public class CategoryServiceImpl implements CategoryService {\n+@Remote(CategoryServiceRemote.class)\n+public class CategoryServiceImpl implements CategoryService, CategoryServiceRemote, CategoryServiceRest {\n \n     private static final Logger logger = LoggerFactory.getLogger(CategoryServiceImpl.class);\n \n@@ -22,21 +25,45 @@\n \n     @Override\n     public List<CategoryDto> findAll() {\n-        return categoryRepository.findAll().stream().map(CategoryDto::new).collect(Collectors.toList());\n+        return categoryRepository.findAll().stream()\n+                .map(this::buildCategoryDto).collect(Collectors.toList());\n     }\n \n     @Override\n     public CategoryDto findById(Long id) {\n         Category category = categoryRepository.findById(id);\n         if(category == null) return null;\n-        return new CategoryDto(category);\n+        return buildCategoryDto(category);\n+    }\n+\n+    @Override\n+    public CategoryDto findByName(String name) {\n+        Category category = categoryRepository.findByName(name);\n+        if(category == null) return null;\n+        return buildCategoryDto(category);\n     }\n \n     @Override\n     public Long countAll() {\n         return categoryRepository.countAll();\n     }\n \n+    @Override\n+    public void insert(CategoryDto categoryDto) {\n+        if(categoryDto.getId() != null) {\n+            throw new IllegalArgumentException();\n+        }\n+        saveOrUpdate(categoryDto);\n+    }\n+\n+    @Override\n+    public void update(CategoryDto categoryDto) {\n+        if(categoryDto.getId() == null) {\n+            throw new IllegalArgumentException();\n+        }\n+        saveOrUpdate(categoryDto);\n+    }\n+\n     @TransactionAttribute\n     @Override\n     public void saveOrUpdate(CategoryDto categoryDto) {\n@@ -49,5 +76,12 @@ public void deleteById(Long id) {\n         categoryRepository.deleteById(id);\n     }\n \n+    public CategoryDto buildCategoryDto(Category category) {\n+        CategoryDto categoryDto = new CategoryDto();\n+        categoryDto.setId(category.getId());\n+        categoryDto.setName(category.getName());\n+        return categoryDto;\n+    }\n+\n \n }"
  },
  {
    "sha": "dec0e77e7cee3c8ce1df6bdf028ad040ad564aeb",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/services/ProductServiceImpl.java",
    "status": "modified",
    "additions": 47,
    "deletions": 3,
    "changes": 50,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/services/ProductServiceImpl.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/services/ProductServiceImpl.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/services/ProductServiceImpl.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -7,15 +7,18 @@\n import ru.geekbrains.persist.CategoryRepository;\n import ru.geekbrains.persist.Product;\n import ru.geekbrains.persist.ProductRepository;\n+import ru.geekbrains.rest.ProductServiceRest;\n \n import javax.ejb.EJB;\n+import javax.ejb.Remote;\n import javax.ejb.Stateless;\n import javax.ejb.TransactionAttribute;\n import java.util.List;\n import java.util.stream.Collectors;\n \n @Stateless\n-public class ProductServiceImpl implements ProductService, ProductServiceRemote {\n+@Remote(ProductServiceRemote.class)\n+public class ProductServiceImpl implements ProductService, ProductServiceRemote, ProductServiceRest {\n \n     private static final Logger logger = LoggerFactory.getLogger(ProductServiceImpl.class);\n \n@@ -28,21 +31,50 @@\n     @Override\n     public List<ProductDto> findAll() {\n         return productRepository.findAll().stream()\n-                .map(ProductDto::new).collect(Collectors.toList());\n+                .map(this::buildProductDto).collect(Collectors.toList());\n     }\n \n     @Override\n     public ProductDto findById(Long id) {\n         Product product = productRepository.findById(id);\n         if(product == null) return null;\n-        return new ProductDto(product);\n+        return buildProductDto(product);\n+    }\n+\n+    @Override\n+    public ProductDto findByName(String name) {\n+        Product product = productRepository.findByName(name);\n+        if(product == null) return null;\n+        return buildProductDto(product);\n+    }\n+\n+    @Override\n+    public List<ProductDto> findAllByCategory(Long categoryId) {\n+        return productRepository.findAllByCategory(categoryId).stream()\n+                .map(this::buildProductDto).collect(Collectors.toList());\n     }\n \n     @Override\n     public Long countAll() {\n         return productRepository.countAll();\n     }\n \n+    @Override\n+    public void insert(ProductDto productDto) {\n+        if(productDto.getId() != null) {\n+            throw new IllegalArgumentException();\n+        }\n+        saveOrUpdate(productDto);\n+    }\n+\n+    @Override\n+    public void update(ProductDto productDto) {\n+        if(productDto.getId() == null) {\n+            throw new IllegalArgumentException();\n+        }\n+        saveOrUpdate(productDto);\n+    }\n+\n     @TransactionAttribute\n     @Override\n     public void saveOrUpdate(ProductDto productDto) {\n@@ -58,4 +90,16 @@ public void saveOrUpdate(ProductDto productDto) {\n     public void deleteById(Long id) {\n         productRepository.deleteById(id);\n     }\n+\n+    public ProductDto buildProductDto(Product product) {\n+        ProductDto productDto = new ProductDto();\n+        productDto.setId(product.getId());\n+        productDto.setName(product.getName());\n+        productDto.setDescription(product.getDescription());\n+        productDto.setPrice(product.getPrice());\n+        Category category = product.getCategory();\n+        productDto.setCategoryId((category == null) ? null : category.getId());\n+        productDto.setCategoryName((category == null) ? null : category.getName());\n+        return productDto;\n+    }\n }"
  },
  {
    "sha": "785a8da12b95d614a21b15bc36adbc3a20889f03",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/services/UserServiceImpl.java",
    "status": "modified",
    "additions": 38,
    "deletions": 3,
    "changes": 41,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/services/UserServiceImpl.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/first-jsf-app/src/main/java/ru/geekbrains/services/UserServiceImpl.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/services/UserServiceImpl.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -5,15 +5,18 @@\n import ru.geekbrains.dto.UserDto;\n import ru.geekbrains.persist.User;\n import ru.geekbrains.persist.UserRepository;\n+import ru.geekbrains.rest.UserServiceRest;\n \n import javax.ejb.EJB;\n+import javax.ejb.Remote;\n import javax.ejb.Stateless;\n import javax.ejb.TransactionAttribute;\n import java.util.List;\n import java.util.stream.Collectors;\n \n @Stateless\n-public class UserServiceImpl implements UserService, UserServiceRemote {\n+@Remote(UserServiceRemote.class)\n+public class UserServiceImpl implements UserService, UserServiceRemote, UserServiceRest {\n \n     private static final Logger logger = LoggerFactory.getLogger(UserServiceImpl.class);\n \n@@ -22,21 +25,45 @@\n \n     @Override\n     public List<UserDto> findAll() {\n-        return userRepository.findAll().stream().map(UserDto::new).collect(Collectors.toList());\n+        return userRepository.findAll().stream()\n+                .map(this::buildUserDto).collect(Collectors.toList());\n     }\n \n     @Override\n     public UserDto findById(Long id) {\n         User user = userRepository.findById(id);\n         if(user == null) return null;\n-        return new UserDto(user);\n+        return buildUserDto(user);\n+    }\n+\n+    @Override\n+    public UserDto findByName(String name) {\n+        User user = userRepository.findByName(name);\n+        if(user == null) return null;\n+        return buildUserDto(user);\n     }\n \n     @Override\n     public Long countAll() {\n         return userRepository.countAll();\n     }\n \n+    @Override\n+    public void insert(UserDto userDto) {\n+        if(userDto.getId() != null) {\n+            throw new IllegalArgumentException();\n+        }\n+        saveOrUpdate(userDto);\n+    }\n+\n+    @Override\n+    public void update(UserDto userDto) {\n+        if(userDto.getId() == null) {\n+            throw new IllegalArgumentException();\n+        }\n+        saveOrUpdate(userDto);\n+    }\n+\n     @TransactionAttribute\n     @Override\n     public void saveOrUpdate(UserDto userDto) {\n@@ -49,5 +76,13 @@ public void deleteById(Long id) {\n         userRepository.deleteById(id);\n     }\n \n+    public UserDto buildUserDto(User user) {\n+        UserDto userDto = new UserDto();\n+        userDto.setId(user.getId());\n+        userDto.setName(user.getName());\n+        userDto.setSurname(user.getSurname());\n+        return userDto;\n+    }\n+\n \n }"
  },
  {
    "sha": "577d74fd9ccfb4907a41de52b4832afb0cbfc21e",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/pom.xml",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/pom.xml",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/pom.xml?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -16,6 +16,7 @@\n \n     <modules>\n         <module>first-web-app</module>\n+        <module>remote-services-api</module>\n         <module>first-jsf-app</module>\n         <module>remote-client</module>\n     </modules>"
  },
  {
    "sha": "96c972e90fce8f8a98bc494cfe408b6bd8187e36",
    "filename": "remote-client/pom.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-client/pom.xml",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-client/pom.xml",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/remote-client/pom.xml?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -32,11 +32,17 @@\n             <scope>compile</scope>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.wildfly</groupId>\n+            <artifactId>wildfly-jms-client-bom</artifactId>\n+            <type>pom</type>\n+            <version>22.0.1.Final</version>\n+        </dependency>\n+\n         <dependency>\n             <groupId>ru.geekbrains</groupId>\n-            <artifactId>first-jsf-app</artifactId>\n+            <artifactId>remote-services-api</artifactId>\n             <version>1.0-SNAPSHOT</version>\n-            <classifier>classes</classifier>\n         </dependency>\n \n     </dependencies>"
  },
  {
    "sha": "6e96cddaa216b09b3dbb380b7f6ed18c3235dcb9",
    "filename": "remote-client/src/main/java/ru/geekbrains/EjbClient.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-client/src/main/java/ru/geekbrains/EjbClient.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-client/src/main/java/ru/geekbrains/EjbClient.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/remote-client/src/main/java/ru/geekbrains/EjbClient.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -24,4 +24,5 @@ public static Context createInitialContext() throws IOException, NamingException\n         final Properties env = new Properties();\n         env.load(EjbClient.class.getClassLoader().getResourceAsStream(\"wildfly-jndi.properties\"));\n         return new InitialContext(env);\n-    }}\n+    }\n+}"
  },
  {
    "sha": "e75343501d29e9d4ea1c03e736cb7e3809704b4b",
    "filename": "remote-client/src/main/java/ru/geekbrains/JmsClient.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-client/src/main/java/ru/geekbrains/JmsClient.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-client/src/main/java/ru/geekbrains/JmsClient.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/remote-client/src/main/java/ru/geekbrains/JmsClient.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,34 @@\n+package ru.geekbrains;\n+\n+import ru.geekbrains.dto.ProductDto;\n+\n+import javax.jms.*;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+import java.io.IOException;\n+import java.math.BigDecimal;\n+import java.util.Properties;\n+\n+public class JmsClient {\n+\n+    public static void main(String[] args) throws IOException, NamingException {\n+        Context context = createInitialContext();\n+\n+        ConnectionFactory connectionFactory = (ConnectionFactory) context.lookup(\"jms/RemoteConnectionFactory\");\n+        JMSContext jmsContext = connectionFactory.createContext(\"jmsUser\", \"123\");\n+        Destination dest = (Destination) context.lookup(\"jms/productQueue\");\n+        JMSProducer producer = jmsContext.createProducer();\n+        ObjectMessage objectMessage = jmsContext.createObjectMessage(\n+                new ProductDto(null, \"Product from JMS\", \"Product from JMS\", new BigDecimal(1000),\n+                        1L, null));\n+        producer.send(dest, objectMessage);\n+    }\n+\n+    public static Context createInitialContext() throws IOException, NamingException {\n+        final Properties env = new Properties();\n+        env.load(JmsClient.class.getClassLoader().getResourceAsStream(\"wildfly-jndi.properties\"));\n+        return new InitialContext(env);\n+    }\n+\n+}"
  },
  {
    "sha": "bcf60c400eaa8e0c13cf1f1c28f94e30408bbefb",
    "filename": "remote-services-api/pom.xml",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-services-api/pom.xml",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-services-api/pom.xml",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/remote-services-api/pom.xml?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>geek-java-ee</artifactId>\n+        <groupId>ru.geekbrains</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>remote-services-api</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>11</maven.compiler.source>\n+        <maven.compiler.target>11</maven.compiler.target>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>1.18.18</version>\n+        </dependency>\n+\n+    </dependencies>\n+</project>"
  },
  {
    "sha": "76d659189ee620e3b766cdd305cfebbe2030eb05",
    "filename": "remote-services-api/src/main/java/ru/geekbrains/dto/CategoryDto.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-services-api/src/main/java/ru/geekbrains/dto/CategoryDto.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-services-api/src/main/java/ru/geekbrains/dto/CategoryDto.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/remote-services-api/src/main/java/ru/geekbrains/dto/CategoryDto.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.geekbrains.dto;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import java.io.Serializable;\n+\n+@Data\n+@NoArgsConstructor\n+public class CategoryDto implements Serializable {\n+\n+    private Long id;\n+    private String name;\n+\n+}"
  },
  {
    "sha": "677c35ed563215c6d3dfa3f31dd1b067e7043574",
    "filename": "remote-services-api/src/main/java/ru/geekbrains/dto/ProductDto.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-services-api/src/main/java/ru/geekbrains/dto/ProductDto.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-services-api/src/main/java/ru/geekbrains/dto/ProductDto.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/remote-services-api/src/main/java/ru/geekbrains/dto/ProductDto.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.geekbrains.dto;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class ProductDto implements Serializable {\n+\n+    private Long id;\n+    private String name;\n+    private String description;\n+    private BigDecimal price;\n+    private Long categoryId;\n+    private String categoryName;\n+\n+}"
  },
  {
    "sha": "5f712f883adff0e2df2146509cf1f105fece6f3b",
    "filename": "remote-services-api/src/main/java/ru/geekbrains/dto/UserDto.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-services-api/src/main/java/ru/geekbrains/dto/UserDto.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-services-api/src/main/java/ru/geekbrains/dto/UserDto.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/remote-services-api/src/main/java/ru/geekbrains/dto/UserDto.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.geekbrains.dto;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import java.io.Serializable;\n+\n+@Data\n+@NoArgsConstructor\n+public class UserDto implements Serializable {\n+\n+    private Long id;\n+    private String name;\n+    private String surname;\n+\n+}"
  },
  {
    "sha": "da7f351631fb101ecf87eda4bd92bf8569d92409",
    "filename": "remote-services-api/src/main/java/ru/geekbrains/services/CartServiceRemote.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/egorbarinov/geek-java-ee/blob/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-services-api/src/main/java/ru/geekbrains/services/CartServiceRemote.java",
    "raw_url": "https://github.com/egorbarinov/geek-java-ee/raw/ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1/remote-services-api/src/main/java/ru/geekbrains/services/CartServiceRemote.java",
    "contents_url": "https://api.github.com/repos/egorbarinov/geek-java-ee/contents/remote-services-api/src/main/java/ru/geekbrains/services/CartServiceRemote.java?ref=ca7ba4d7cd00aa00e84cd99cc8852a2056a43ee1",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.geekbrains.services;\n+\n+import ru.geekbrains.dto.ProductDto;\n+\n+import java.util.List;\n+\n+public interface CartServiceRemote {\n+\n+    int getSize();\n+    List<ProductDto> getProductsInCart();\n+}"
  }
]
