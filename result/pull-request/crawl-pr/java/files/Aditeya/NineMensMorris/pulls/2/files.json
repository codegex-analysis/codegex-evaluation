[
  {
    "sha": "81e8386863f32335960273dcce89bf0194c57f90",
    "filename": "NineMensMorris.java",
    "status": "added",
    "additions": 158,
    "deletions": 0,
    "changes": 158,
    "blob_url": "https://github.com/Aditeya/NineMensMorris/blob/a5b94aa5710131c13909d52fde67993ffdfd7fa0/NineMensMorris.java",
    "raw_url": "https://github.com/Aditeya/NineMensMorris/raw/a5b94aa5710131c13909d52fde67993ffdfd7fa0/NineMensMorris.java",
    "contents_url": "https://api.github.com/repos/Aditeya/NineMensMorris/contents/NineMensMorris.java?ref=a5b94aa5710131c13909d52fde67993ffdfd7fa0",
    "patch": "@@ -0,0 +1,158 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package ninemensmorris;\n+\n+import java.rmi.RemoteException;\n+import java.rmi.registry.LocateRegistry;\n+import java.rmi.registry.Registry;\n+import javafx.application.Application;\n+import static javafx.application.Application.launch;\n+import javafx.application.Platform;\n+import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.GridPane;\n+import javafx.scene.layout.Pane;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.paint.Color;\n+import javafx.scene.shape.Ellipse;\n+import javafx.scene.shape.Line;\n+import javafx.stage.Stage;\n+\n+/**\n+ *\n+ * @author aditeya\n+ */\n+public class NineMensMorris extends Application {\n+\n+   \n+    private char marker;\n+    private boolean myTurn = false;\n+    private char whoseTurn = 'X';\n+            int row_colnum = 5;\n+\n+    private Cell[][] cell = new Cell[row_colnum][row_colnum];\n+    private Label lblStatus = new Label(\"X's turn to play\");\n+    private Label lblIdentification = new Label();\n+\n+    public void start(Stage primaryStage) {\n+  \n+\tGridPane pane = new GridPane();\n+\tfor (int i = 0; i < row_colnum; ++i)\n+\t    for (int j = 0; j < row_colnum; ++j) \n+\t\tpane.add(cell[i][j] = new Cell(i,j), j, i);\n+Button btn = new Button(\"OO\");\n+\tBorderPane borderPane = new BorderPane();\n+\tborderPane.setCenter(pane);\n+        borderPane.setLeft(btn);\n+\tborderPane.setTop(lblStatus);\n+\tborderPane.setBottom(lblIdentification);\n+\t\n+\tScene scene = new Scene(borderPane, 750, 750);\n+\tprimaryStage.setTitle(\"Nine Men's Morris\");\n+\tprimaryStage.setScene(scene);\n+\tprimaryStage.show();\n+\t\n+        \n+        btn.onMousePressedProperty(\n+                e->{\n+            \n+        });\n+        \n+\tnew Thread( () -> {\n+\t\ttry {\n+\t\t    initializeRMI();\n+\t\t} catch (Exception ex) {\n+\t\t    ex.printStackTrace();\n+\t\t}\n+\t}).start();\n+    }\n+\n+    protected boolean initializeRMI() throws Exception {\n+\tString host = \"\";\n+\ttry {\n+            \n+\t} catch (Exception ex) {\n+\t    System.out.println(ex.getMessage());\n+\t}\n+        return false;\n+\n+    }\n+\n+    public void setMyTurn(boolean myTurn) {\n+\tthis.myTurn = myTurn;\n+    }\n+\n+    public void setMessage(String message) {\n+    }\n+\n+    public void mark(int row, int column, char token) {\n+    }\n+\n+    public class Cell extends Pane {\n+\tprivate boolean marked = false;\n+\tint row, column;\n+\tprivate char token = ' ';\n+\n+\tpublic Cell(final int row, final int column) {\n+\t    this.row = row;\n+\t    this.column = column;\n+\t    setStyle(\"-fx-border-color: black\");\n+\t    this.setPrefSize(2000,2000);\n+\t    this.setOnMouseClicked(e -> handleMouseClick());\n+\t}\n+\n+\tpublic char getToken() {\n+\t    return token;\n+\t}\n+\n+\tpublic void setToken(char c) {\n+\t    token = c;\n+\t    marked = true;\n+\n+\t    if (token == 'X') {\n+\t\tLine line1 = new Line(10, 10, this.getWidth() - 10,\n+\t\t\t\t      this.getHeight() - 10);\n+\t\tline1.endXProperty().bind(this.widthProperty().subtract(10));\n+\t\tline1.endYProperty().bind(this.heightProperty().subtract(10));\n+\n+\t\tLine line2 = new Line(10, this.getHeight() - 10,\n+\t\t\t\t      this.getWidth() - 10, 10);\n+\t\tline2.startYProperty().bind(this.heightProperty().subtract(10));\n+\t\tline2.endXProperty().bind(this.widthProperty().subtract(10));\n+\n+\t\tPlatform.runLater(() -> this.getChildren().addAll(line1, line2));\n+\t    } else if (token == 'O') {\n+\t\tEllipse ellipse = new Ellipse(this.getWidth() / 2,\n+\t\t\t\t\t      this.getHeight() / 2,\n+\t\t\t\t\t      this.getWidth() / 2 - 10,\n+\t\t\t\t\t      this .getHeight() / 2 - 10);\n+\t\tellipse.centerXProperty().bind(this.widthProperty().divide(2));\n+\t\tellipse.centerYProperty().bind(this.heightProperty().divide(2));\n+\t\tellipse.radiusXProperty().bind(this.widthProperty().divide(2).subtract(10));\n+\t\tellipse.radiusYProperty().bind(this.heightProperty().divide(2).subtract(10));\n+\t\tellipse.setStroke(Color.BLACK);\n+\t\tellipse.setFill(Color.WHITE);\n+\n+\t\tPlatform.runLater(() -> getChildren().add(ellipse));\n+\t    }\n+\t}\n+\n+\tprivate void handleMouseClick() {\n+\t    if (myTurn && !marked) {\n+\t\tsetToken(marker);\n+\t    }\n+\t}\n+    }\n+\n+    public static void main(String[] args) {\n+\tlaunch(args);\n+    }\n+}\n+"
  },
  {
    "sha": "4bce9cce09246e494f3dc16951a4130f885ad212",
    "filename": "src/ninemensmorris/Board.css",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/Aditeya/NineMensMorris/blob/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/Board.css",
    "raw_url": "https://github.com/Aditeya/NineMensMorris/raw/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/Board.css",
    "contents_url": "https://api.github.com/repos/Aditeya/NineMensMorris/contents/src/ninemensmorris/Board.css?ref=a5b94aa5710131c13909d52fde67993ffdfd7fa0",
    "patch": "@@ -0,0 +1,10 @@\n+/*\n+To change this license header, choose License Headers in Project Properties.\n+To change this template file, choose Tools | Templates\n+and open the template in the editor.\n+*/\n+/* \n+    Created on : Mar 7, 2021, 8:36:47 PM\n+    Author     : LENOVO\n+*/\n+"
  },
  {
    "sha": "b4ce795d97b027d29189fff2f910586c52a0524c",
    "filename": "src/ninemensmorris/BoardComp.java",
    "status": "added",
    "additions": 309,
    "deletions": 0,
    "changes": 309,
    "blob_url": "https://github.com/Aditeya/NineMensMorris/blob/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/BoardComp.java",
    "raw_url": "https://github.com/Aditeya/NineMensMorris/raw/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/BoardComp.java",
    "contents_url": "https://api.github.com/repos/Aditeya/NineMensMorris/contents/src/ninemensmorris/BoardComp.java?ref=a5b94aa5710131c13909d52fde67993ffdfd7fa0",
    "patch": "@@ -0,0 +1,309 @@\n+package nmmguisample;\n+\n+\n+import com.almasb.checkers.CheckersApp;\n+import java.util.HashMap;\n+import javafx.scene.layout.Pane;\n+import javafx.scene.paint.Color;\n+import javafx.scene.shape.Circle;\n+import javafx.scene.shape.Line;\n+import javafx.scene.shape.Rectangle;\n+import static nmmguisample.SaMPLENMM.HEIGHT;\n+import static nmmguisample.SaMPLENMM.POS_SIZE;\n+import static nmmguisample.SaMPLENMM.WIDTH;\n+\n+/*\n+ *The board components ared designed using a blocked graph as referance.\n+ */\n+\n+/**\n+ * @author LENOVO\n+ */\n+public class BoardComp extends Rectangle{\n+    private Coin coin;\n+\n+   \n+    public boolean hasCoin(){\n+        return coin != null;\n+    }\n+    public Coin getCoin(){\n+        return coin;\n+    }\n+    public void setCoin(Coin coin){\n+        this.coin = coin;\n+    }\n+    public BoardComp(boolean posMove, int x,int y ) {\n+        setHeight(SaMPLENMM.POS_SIZE);\n+        setWidth(SaMPLENMM.POS_SIZE);\n+        relocate(x*SaMPLENMM.POS_SIZE,y*SaMPLENMM.POS_SIZE);\n+        setFill(posMove ? Color.GREEN: Color.GREY);\n+    }\n+\n+    public BoardComp() {\n+    }\n+    \n+      public void PlaceCoin(Pane root,CoinType ct,double [] xy){\n+        double x= xy[0]*100;        double y= xy[1]*100;\n+         Coin c = new Coin(ct, x,y,true);\n+         root.getChildren().addAll(c.ReturnCoin());\n+    }\n+   public void GenerateBoard(Pane root){\n+        for (int i = 0; i < 4; i++) {\n+            Rectangle r1 = new Rectangle(POS_SIZE * HEIGHT - (2 * i * POS_SIZE), POS_SIZE * WIDTH - (2 * i * POS_SIZE));\n+            r1.setStroke(Color.CADETBLUE);\n+            r1.setX(i * POS_SIZE);         r1.setY(i * POS_SIZE);\n+            r1.setStrokeWidth(10); root.getChildren().add(r1);\n+        }\n+        String[] lineStr = {\"A2\",\"C2\",\"D1\",\"D3\",\"E1\",\"E3\",\"F2\",\"H2\"};\n+        \n+        for(int i = 0;i<lineStr.length;i=i+2){\n+            System.out.println(\"i=\"+i);\n+        Line line = new Line(getSlot(lineStr[i])[0]*100,getSlot(lineStr[i])[1]*100,\n+        getSlot(lineStr[i+1])[0]*100,getSlot(lineStr[i+1])[1]*100);\n+      //  System.out.println(\"= \"+\"\\n  \"+lineStr[i]+\" \"+bc.getSlot(lineStr[i])[0]*100+\"\"    + \" \"+bc.getSlot(lineStr[i])[1]*100+ \"\\n \"+lineStr[i+1]+\" \"+    bc.getSlot(lineStr[i+1])[0]*100+\" \"+bc.getSlot(lineStr[i+1])[1]*100);\n+        line.setId(\"boardlines\");  \n+        root.getChildren().add(line);\n+        }\n+\n+        int[] posX = {100,600};      int[] posY = {100,350,600};\n+        int[] posX1 = {200,500};        int[] posY1 = {200,350,500};\n+        int[] posX2 = {300,400};        int[] posY2 = {300,350,400};\n+        int[] posX3 = {350};       int[] posY3 = {100,200,300,400,500,600};\n+        \n+        CreateSlots(posX,posY,root);\n+        CreateSlots(posX1,posY1,root);\n+        CreateSlots(posX2,posY2,root);\n+        CreateSlots(posX3,posY3,root);\n+       \n+       \n+  \n+   }   \n+   \n+    public double[] getSlot(String pos){\n+        double [] doubleArr = new double[2];\n+        switch(pos) {\n+  case \"A1\":\n+    doubleArr[0]= 1;\n+    doubleArr[1]= 1;\n+    break;\n+  case \"A2\":\n+    doubleArr[0]= 3.5;\n+    doubleArr[1]= 1;\n+    break;\n+  case \"A3\":\n+    doubleArr[1]= 1;\n+    doubleArr[0]= 6;\n+    break;\n+  case \"B1\":\n+    doubleArr[1]= 2;\n+    doubleArr[0]= 2;\n+    break;\n+  case \"B2\":\n+    doubleArr[1]= 2;\n+    doubleArr[0]= 3.5;\n+    break;\n+  case \"B3\":\n+    doubleArr[1]= 2;\n+    doubleArr[0]= 5;\n+    break;\n+  case \"C1\":\n+    doubleArr[1]= 3;\n+    doubleArr[0]= 3;\n+    break;\n+  case \"C2\":\n+    doubleArr[1]= 3;\n+    doubleArr[0]= 3.5;\n+    break;\n+  case \"C3\":\n+    doubleArr[1]= 3;\n+    doubleArr[0]= 4;\n+    break;\n+  case \"D1\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 1;\n+    break;\n+  case \"D2\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 2;\n+    break;\n+  case \"D3\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 3;\n+    break;\n+  case \"E1\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 4;\n+    break;\n+  case \"E2\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 5;\n+    break;\n+  case \"E3\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 6;\n+    break;\n+  case \"F1\":\n+    doubleArr[1]= 4;\n+    doubleArr[0]= 3;\n+    break;\n+  case \"F2\":\n+    doubleArr[1]= 4;\n+    doubleArr[0]= 3.5;\n+    break;\n+  case \"F3\":\n+    doubleArr[1]= 4;\n+    doubleArr[0]= 4;\n+    break;\n+  case \"G1\":\n+    doubleArr[1]= 5;\n+    doubleArr[0]= 2;\n+    break;\n+  case \"G2\":\n+    doubleArr[1]= 5;\n+    doubleArr[0]= 3.5;\n+    break;\n+  case \"G3\":\n+    doubleArr[1]= 5;\n+    doubleArr[0]= 5;\n+    break;  \n+  case \"H1\":\n+    doubleArr[1]= 6;\n+    doubleArr[0]= 1;\n+    break;\n+  case \"H2\":\n+    doubleArr[1]= 6;\n+    doubleArr[0]= 3.5;\n+    break;\n+  case \"H3\":\n+    doubleArr[1]= 6;\n+    doubleArr[0]= 6;\n+    break;  \n+  default:\n+}\n+        return doubleArr;\n+    }\n+    \n+  public void CreateSlots(int[] posX,int[] posY,Pane root){\n+      for (int i = 0; i < posX.length; i++) {\n+            for (int j = 0; j < posY.length; j++) {\n+                Circle c1 = new Circle(10);\n+                // c1.setCenterX(posX[i]);\n+                //c1.setCenterY(posY[j]);\n+                c1.setCenterX(posX[i]);\n+                c1.setCenterY(posY[j]);\n+                c1.setFill(Color.CORAL);\n+                System.out.println(\"X \" +posX[i] + \" Y \" +posY[j]);\n+                c1.setFill(Color.CORAL);\n+                root.getChildren().addAll(c1);\n+            }\n+        }\n+    }\n+      \n+    \n+    public double[] getSlotHash(String pos){\n+        \n+        double [] doubleArr = new double[2];\n+        switch(pos) {\n+  case \"A1\":\n+    doubleArr[0]= 1;\n+    doubleArr[1]= 1;\n+    break;\n+  case \"A2\":\n+    doubleArr[0]= 3.5;\n+    doubleArr[1]= 1;\n+    break;\n+  case \"A3\":\n+    doubleArr[1]= 1;\n+    doubleArr[0]= 6;\n+    break;\n+  case \"B1\":\n+    doubleArr[1]= 2;\n+    doubleArr[0]= 2;\n+    break;\n+  case \"B2\":\n+    doubleArr[1]= 2;\n+    doubleArr[0]= 3.5;\n+    break;\n+  case \"B3\":\n+    doubleArr[1]= 2;\n+    doubleArr[0]= 5;\n+    break;\n+  case \"C1\":\n+    doubleArr[1]= 3;\n+    doubleArr[0]= 3;\n+    break;\n+  case \"C2\":\n+    doubleArr[1]= 3;\n+    doubleArr[0]= 3.5;\n+    break;\n+  case \"C3\":\n+    doubleArr[1]= 3;\n+    doubleArr[0]= 4;\n+    break;\n+  case \"D1\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 1;\n+    break;\n+  case \"D2\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 2;\n+    break;\n+  case \"D3\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 3;\n+    break;\n+  case \"E1\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 4;\n+    break;\n+  case \"E2\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 5;\n+    break;\n+  case \"E3\":\n+    doubleArr[1]= 3.5;\n+    doubleArr[0]= 6;\n+    break;\n+  case \"F1\":\n+    doubleArr[1]= 4;\n+    doubleArr[0]= 3;\n+    break;\n+  case \"F2\":\n+    doubleArr[1]= 4;\n+    doubleArr[0]= 3.5;\n+    break;\n+  case \"F3\":\n+    doubleArr[1]= 4;\n+    doubleArr[0]= 4;\n+    break;\n+  case \"G1\":\n+    doubleArr[1]= 5;\n+    doubleArr[0]= 2;\n+    break;\n+  case \"G2\":\n+    doubleArr[1]= 5;\n+    doubleArr[0]= 3.5;\n+    break;\n+  case \"G3\":\n+    doubleArr[1]= 5;\n+    doubleArr[0]= 5;\n+    break;  \n+  case \"H1\":\n+    doubleArr[1]= 6;\n+    doubleArr[0]= 1;\n+    break;\n+  case \"H2\":\n+    doubleArr[1]= 6;\n+    doubleArr[0]= 3.5;\n+    break;\n+  case \"H3\":\n+    doubleArr[1]= 6;\n+    doubleArr[0]= 6;\n+    break;  \n+  default:\n+}\n+        return doubleArr;\n+    }\n+   \n+   \n+}"
  },
  {
    "sha": "59230d516f94b39d615eaed885e77904200b5933",
    "filename": "src/ninemensmorris/Coin.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/Aditeya/NineMensMorris/blob/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/Coin.java",
    "raw_url": "https://github.com/Aditeya/NineMensMorris/raw/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/Coin.java",
    "contents_url": "https://api.github.com/repos/Aditeya/NineMensMorris/contents/src/ninemensmorris/Coin.java?ref=a5b94aa5710131c13909d52fde67993ffdfd7fa0",
    "patch": "@@ -0,0 +1,76 @@\n+/*\n+ */\n+package nmmguisample;\n+import java.sql.Types;\n+import javafx.event.EventHandler;\n+import javafx.scene.Group;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.Pane;\n+import static nmmguisample.SaMPLENMM.POS_SIZE;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.paint.Color;\n+import javafx.scene.shape.Circle;\n+\n+/**\n+ */\n+public class Coin extends Pane {\n+    private CoinType type;\n+    \n+    public CoinType getType(){\n+        return type;\n+    }\n+\n+    public Coin (CoinType type , double x, double y) {\n+        this.type = type;\n+        \n+        Group CoinGroup = new Group();\n+        \n+         Circle bg = new Circle(POS_SIZE/15*3.125);\n+        bg.setFill(Color.BLUE);\n+        bg.setStroke(Color.WHITESMOKE);\n+        bg.setTranslateX(x);\n+        bg.setTranslateY(y);\n+       // bg.setStrokeWidth(POS_SIZE*0.020);\n+      //  bg.setTranslateX((POS_SIZE*3.125*2)/2) ;\n+      // bg.setTranslateY((POS_SIZE*0.26*2)/2+POS_SIZE*0.07);\n+        \n+        \n+        \n+        Circle ellipse = new Circle(POS_SIZE/15*3.125);\n+        ellipse.setFill(type== CoinType.WHITE ? Color.WHITESMOKE :Color.BLUEVIOLET );\n+        ellipse.setStroke(Color.WHITESMOKE);\n+         ellipse.setTranslateX(x-4);\n+        ellipse.setTranslateY(y-4);\n+\n+         System.out.println(\" X \"+x+\" Y \"+y);\n+        //Sellipse.setStrokeWidth(POS_SIZE*0.020);\n+        //ellipse.setTranslateX(x) ;\n+       //ellipse.setTranslateY(y);\n+       CoinGroup.getChildren().addAll(bg,ellipse);\n+       CoinGroup.setOnMouseDragged(new EventHandler <MouseEvent>()\n+        {\n+            public void handle(MouseEvent event)\n+            {\n+                System.out.println(\"\\\"Event on Source: mouse dragged\"+Types.TIME_WITH_TIMEZONE);\n+                System.out.println(\"\\\"Event on Source: mouse draggedr34657\");\n+                event.setDragDetect(false);\n+               \n+            }\n+        });\n+       \n+       CoinGroup.setOnMouseClicked(new EventHandler <MouseEvent>()\n+        {\n+            public void handle(MouseEvent event)\n+            {\n+                System.out.println(\"Clicked on\");\n+            }\n+        });\n+        \n+        getChildren().addAll(CoinGroup);\n+        \n+        \n+       //,//ellipse1);\n+    }\n+    \n+    \n+}"
  },
  {
    "sha": "18f17d950c11753d780449408df38f494d7a6471",
    "filename": "src/ninemensmorris/CoinType.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Aditeya/NineMensMorris/blob/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/CoinType.java",
    "raw_url": "https://github.com/Aditeya/NineMensMorris/raw/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/CoinType.java",
    "contents_url": "https://api.github.com/repos/Aditeya/NineMensMorris/contents/src/ninemensmorris/CoinType.java?ref=a5b94aa5710131c13909d52fde67993ffdfd7fa0",
    "patch": "@@ -0,0 +1,22 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package nmmguisample;\n+\n+/**\n+ *\n+ * @author LENOVO\n+ */\n+public enum CoinType {\n+BLACK(1),WHITE(-1);\n+\n+\n+final int moveDir;\n+\n+    private CoinType(int moveDir) {\n+        this.moveDir = moveDir;\n+    }\n+\n+}"
  },
  {
    "sha": "ab48cbb2077916e0f462faf20930ccd75603d857",
    "filename": "src/ninemensmorris/NMMApplication.java",
    "status": "modified",
    "additions": 124,
    "deletions": 17,
    "changes": 141,
    "blob_url": "https://github.com/Aditeya/NineMensMorris/blob/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/NMMApplication.java",
    "raw_url": "https://github.com/Aditeya/NineMensMorris/raw/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/NMMApplication.java",
    "contents_url": "https://api.github.com/repos/Aditeya/NineMensMorris/contents/src/ninemensmorris/NMMApplication.java?ref=a5b94aa5710131c13909d52fde67993ffdfd7fa0",
    "patch": "@@ -5,12 +5,24 @@\n  */\n package ninemensmorris;\n \n+import java.rmi.RemoteException;\n+import java.rmi.registry.LocateRegistry;\n+import java.rmi.registry.Registry;\n import javafx.application.Application;\n+import static javafx.application.Application.launch;\n+import javafx.application.Platform;\n import javafx.event.ActionEvent;\n import javafx.event.EventHandler;\n import javafx.scene.Scene;\n import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.BorderPane;\n+import javafx.scene.layout.GridPane;\n+import javafx.scene.layout.Pane;\n import javafx.scene.layout.StackPane;\n+import javafx.scene.paint.Color;\n+import javafx.scene.shape.Ellipse;\n+import javafx.scene.shape.Line;\n import javafx.stage.Stage;\n \n /**\n@@ -19,33 +31,128 @@\n  */\n public class NMMApplication extends Application {\n \n-    @Override\n+    private char marker;\n+    private boolean myTurn = false;\n+    private char whoseTurn = 'X';\n+    int row_colnum = 5;\n+\n+    private Cell[][] cell = new Cell[row_colnum][row_colnum];\n+    private Label lblStatus = new Label(\"X's turn to play\");\n+    private Label lblIdentification = new Label();\n+\n     public void start(Stage primaryStage) {\n-        Button btn = new Button();\n-        btn.setText(\"Say 'Hello World'\");\n-        btn.setOnAction(new EventHandler<ActionEvent>() {\n \n-            @Override\n-            public void handle(ActionEvent event) {\n-                System.out.println(\"Hello World!\");\n+        GridPane pane = new GridPane();\n+        for (int i = 0; i < row_colnum; ++i) {\n+            for (int j = 0; j < row_colnum; ++j) {\n+                pane.add(cell[i][j] = new Cell(i, j), j, i);\n             }\n+        }\n+        \n+        Button btn = new Button(\"OO\");\n+        BorderPane borderPane = new BorderPane();\n+        borderPane.setCenter(pane);\n+        borderPane.setLeft(btn);\n+        borderPane.setTop(lblStatus);\n+        borderPane.setBottom(lblIdentification);\n+\n+        Scene scene = new Scene(borderPane, 750, 750);\n+        primaryStage.setTitle(\"Nine Men's Morris\");\n+        primaryStage.setScene(scene);\n+        primaryStage.show();\n+\n+        btn.onMousePressedProperty(e -> {\n+\n+            new Thread(() -> {\n+                try {\n+                    initializeRMI();\n+                } catch (Exception ex) {\n+                    ex.printStackTrace();\n+                }\n+            }).start();\n         });\n \n-        StackPane root = new StackPane();\n-        root.getChildren().add(btn);\n+    \n \n-        Scene scene = new Scene(root, 300, 250);\n+    protected boolean initializeRMI() throws Exception {\n+        String host = \"\";\n+        try {\n \n-        primaryStage.setTitle(\"Hello World!\");\n-        primaryStage.setScene(scene);\n-        primaryStage.show();\n+        } catch (Exception ex) {\n+            System.out.println(ex.getMessage());\n+        }\n+        return false;\n+\n+    }\n+\n+    public void setMyTurn(boolean myTurn) {\n+        this.myTurn = myTurn;\n+    }\n+\n+    public void setMessage(String message) {\n+    }\n+\n+    public void mark(int row, int column, char token) {\n+    }\n+\n+    public class Cell extends Pane {\n+\n+        private boolean marked = false;\n+        int row, column;\n+        private char token = ' ';\n+\n+        public Cell(final int row, final int column) {\n+            this.row = row;\n+            this.column = column;\n+            setStyle(\"-fx-border-color: black\");\n+            this.setPrefSize(2000, 2000);\n+            this.setOnMouseClicked(e -> handleMouseClick());\n+        }\n+\n+        public char getToken() {\n+            return token;\n+        }\n+\n+        public void setToken(char c) {\n+            token = c;\n+            marked = true;\n+\n+            if (token == 'X') {\n+                Line line1 = new Line(10, 10, this.getWidth() - 10,\n+                        this.getHeight() - 10);\n+                line1.endXProperty().bind(this.widthProperty().subtract(10));\n+                line1.endYProperty().bind(this.heightProperty().subtract(10));\n+\n+                Line line2 = new Line(10, this.getHeight() - 10,\n+                        this.getWidth() - 10, 10);\n+                line2.startYProperty().bind(this.heightProperty().subtract(10));\n+                line2.endXProperty().bind(this.widthProperty().subtract(10));\n+\n+                Platform.runLater(() -> this.getChildren().addAll(line1, line2));\n+            } else if (token == 'O') {\n+                Ellipse ellipse = new Ellipse(this.getWidth() / 2,\n+                        this.getHeight() / 2,\n+                        this.getWidth() / 2 - 10,\n+                        this.getHeight() / 2 - 10);\n+                ellipse.centerXProperty().bind(this.widthProperty().divide(2));\n+                ellipse.centerYProperty().bind(this.heightProperty().divide(2));\n+                ellipse.radiusXProperty().bind(this.widthProperty().divide(2).subtract(10));\n+                ellipse.radiusYProperty().bind(this.heightProperty().divide(2).subtract(10));\n+                ellipse.setStroke(Color.BLACK);\n+                ellipse.setFill(Color.WHITE);\n+\n+                Platform.runLater(() -> getChildren().add(ellipse));\n+            }\n+        }\n+\n+        private void handleMouseClick() {\n+            if (myTurn && !marked) {\n+                setToken(marker);\n+            }\n+        }\n     }\n \n-    /**\n-     * @param args the command line arguments\n-     */\n     public static void main(String[] args) {\n         launch(args);\n     }\n-\n }"
  },
  {
    "sha": "8da5e234d66c69ada91720f418e93b60d84a4cea",
    "filename": "src/ninemensmorris/NMMBoard.css",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/Aditeya/NineMensMorris/blob/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/NMMBoard.css",
    "raw_url": "https://github.com/Aditeya/NineMensMorris/raw/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/NMMBoard.css",
    "contents_url": "https://api.github.com/repos/Aditeya/NineMensMorris/contents/src/ninemensmorris/NMMBoard.css?ref=a5b94aa5710131c13909d52fde67993ffdfd7fa0",
    "patch": "@@ -0,0 +1,27 @@\n+#slots{\n+    -fx-fill: salmon;\n+    }\n+#boardlines{\n+    -fx-stroke: cadetblue;\n+    -fx-stroke-width: 10;    \n+    }\n+#coinbg{\n+        -fx-fill: cornflowerblue;\n+         -fx-stroke: whitesmoke;\n+\n+    }\n+#coin-black {\n+        -fx-fill: violet;\n+        -fx-stroke: whitesmoke;\n+\n+    }\n+    #coin-white{\n+        -fx-fill: white;\n+        -fx-stroke: whitesmoke;\n+    }    \n+    \n+#coinobj{\n+        -fx-stroke: yellow;\n+    -fx-stroke-width: 5;    \n+\n+    }      \n\\ No newline at end of file"
  },
  {
    "sha": "bac517f36666e467895455145f6dd432618a8ea1",
    "filename": "src/ninemensmorris/NMMLogic.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Aditeya/NineMensMorris/blob/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/NMMLogic.java",
    "raw_url": "https://github.com/Aditeya/NineMensMorris/raw/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/NMMLogic.java",
    "contents_url": "https://api.github.com/repos/Aditeya/NineMensMorris/contents/src/ninemensmorris/NMMLogic.java?ref=a5b94aa5710131c13909d52fde67993ffdfd7fa0",
    "patch": "@@ -29,7 +29,7 @@\n  *\n  * @author eltojaro\n  */\n-public class NnMnMrrs {\n+public class NMMLogic {\n \n     //static json Object that stors slot index pairs\n     private static JSONObject slotIndxRef = null;\n@@ -46,7 +46,7 @@\n     /**\n      * Default Constructor, intializes a RTU game\n      */\n-    NnMnMrrs() {\n+    NMMLogic() {\n \n         //The number of men availible at the start of the game\n         menLeft = 9;\n@@ -74,7 +74,7 @@\n                         new InputStreamReader(\n                                 getClass().getResourceAsStream(\"/ninemensmorris/resources/slot_index_ref.json\")));\n             } catch (Exception ex) {\n-                Logger.getLogger(NnMnMrrs.class.getName()).log(Level.SEVERE, null, ex);\n+                Logger.getLogger(NMMLogic.class.getName()).log(Level.SEVERE, null, ex);\n             }\n         }\n     }"
  },
  {
    "sha": "9f7ff0ca06f210c8a5af0868ac438dff7a35fb05",
    "filename": "src/ninemensmorris/NMMLogicDemo.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/Aditeya/NineMensMorris/blob/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/NMMLogicDemo.java",
    "raw_url": "https://github.com/Aditeya/NineMensMorris/raw/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/NMMLogicDemo.java",
    "contents_url": "https://api.github.com/repos/Aditeya/NineMensMorris/contents/src/ninemensmorris/NMMLogicDemo.java?ref=a5b94aa5710131c13909d52fde67993ffdfd7fa0",
    "patch": "@@ -30,7 +30,7 @@ public static void main(String[] args) throws InterruptedException {\n         test2(test);\n         System.out.println(test[1]);\n \n-        NnMnMrrs nmm = new NnMnMrrs();\n+        NMMLogic nmm = new NMMLogic();\n         \n         System.out.println(\"Player \" + nmm.getNmmTurn());\n         nmm.swapNMMTurn();\n@@ -46,15 +46,15 @@ public static void main(String[] args) throws InterruptedException {\n         NMMCoin coin = new NMMCoin(MCoinType.WHITE, null, null, null);\n         System.out.println(coin.getCoinInt());\n \n-        System.out.println(NnMnMrrs.slotLkUp(\"E3\")[0]);\n-        System.out.println(NnMnMrrs.slotLkUp(\"E3\")[1]);\n+        System.out.println(NMMLogic.slotLkUp(\"E3\")[0]);\n+        System.out.println(NMMLogic.slotLkUp(\"E3\")[1]);\n         System.out.println(\"\\n\\n\\n\");\n         /*\n         //Use these to set coins\n         //nmm.setNmmCnType(MCoinType.BLACK, slot) //will throw unsupportedException      \n-        int[] numslot = NnMnMrrs.slotLkUp(\"A1\");\n+        int[] numslot = NMMLogic.slotLkUp(\"A1\");\n         nmm.setNmmCnType(MCoinType.WHITE, numslot[0], numslot[1]);\n-        numslot = NnMnMrrs.slotLkUp(\"G3\");\n+        numslot = NMMLogic.slotLkUp(\"G3\");\n         nmm.setNmmCnType(MCoinType.BLACK, numslot[0], numslot[1]);\n         nmm.cmdPrint(PrintType.VALUE);\n          */"
  },
  {
    "sha": "93596005cf3aca71c22ffc41b291bcf48ccc6cef",
    "filename": "src/ninemensmorris/SaMPLENMM.java",
    "status": "added",
    "additions": 106,
    "deletions": 0,
    "changes": 106,
    "blob_url": "https://github.com/Aditeya/NineMensMorris/blob/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/SaMPLENMM.java",
    "raw_url": "https://github.com/Aditeya/NineMensMorris/raw/a5b94aa5710131c13909d52fde67993ffdfd7fa0/src/ninemensmorris/SaMPLENMM.java",
    "contents_url": "https://api.github.com/repos/Aditeya/NineMensMorris/contents/src/ninemensmorris/SaMPLENMM.java?ref=a5b94aa5710131c13909d52fde67993ffdfd7fa0",
    "patch": "@@ -0,0 +1,106 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package nmmguisample;\n+import javafx.application.Application;\n+import javafx.scene.Group;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.layout.Pane;\n+import javafx.stage.Stage;\n+import javafx.scene.layout.VBox;\n+public class SaMPLENMM extends Application {\n+\n+    public static final int POS_SIZE = 100;\n+\n+    public static final int WIDTH = 7;\n+    public static final int HEIGHT = 7;\n+\n+    private Group boardCoGroup = new Group();\n+    private Group CoinGroup = new Group();\n+    private BoardComp[][] board = new BoardComp[WIDTH][HEIGHT];\n+\n+    private Parent createContent() {\n+       Pane root = new Pane();\n+        root.setPrefSize(WIDTH * POS_SIZE, HEIGHT * POS_SIZE);\n+          BoardComp bc = new BoardComp();\n+          bc.GenerateBoard(root);\n+        \n+        Coin c = new Coin(CoinType.WHITE, POS_SIZE, POS_SIZE, true);\n+      \n+        String [] vldMvs= {\"A1\",\"A3\"};\n+        String [][] milled ={{\"C1\",\"C2\"},{}};\n+        \n+        \n+          String [] str ={\"A1\",\"A2\",\"A3\",\"F1\",\"C2\",\"C1\",\"H2\",\"F3\"};\n+       \n+\n+        for(int i =0;i<str.length;i++){\n+        NMMCoin nc = new NMMCoin(\"H3\", true, vldMvs);\n+        nc.setCoinSlot(str[i]);\n+        nc.toString();\n+            System.out.println(\"str =>\"+str[i]);\n+         if(i%2==0){\n+                nc.setCoin(CoinType.WHITE);\n+            }else{\n+             nc.setCoin(CoinType.BLACK);\n+         }\n+            System.out.println(\"nc.\"+nc.getCoinSlot());\n+        \n+         bc.PlaceCoin(root, nc.getCoinType(),bc.getSlot(nc.getCoinSlot()));\n+        \n+        }\n+        \n+        NMMCoin nc2 = new NMMCoin(CoinType.WHITE,\"Coin Slot\", true, vldMvs); \n+      \n+        \n+        \n+        \n+        \n+        \n+        \n+        \n+        //Coin Placed\n+     \n+        \n+        \n+        \n+    //     bc.PlaceCoin(root, CoinType.WHITE, bc.getSlot(\"B2\"));\n+//      bc.   PlaceCoin(root, CoinType.BLACK, getSlot(\"B1\"));\n+//         bc.PlaceCoin(root, CoinType.WHITE, getSlot(\"C2\"));\n+//       bc.  PlaceCoin(root, CoinType.WHITE, getSlot(\"C3\"));\n+//        bc. PlaceCoin(root, CoinType.BLACK, getSlot(\"C1\"));\n+//        bc. PlaceCoin(root, CoinType.WHITE, getSlot(\"H2\"));\n+\n+         return root;\n+    }\n+\n+    @Override\n+    public void start(Stage primaryStage) {\n+        Button btn = new Button(\"OO\");\n+        VBox root = new VBox();\n+        root.getChildren().addAll(btn, createContent());\n+        Scene scene = new Scene(root);\n+        scene.getStylesheets().add(\"Resc/NMMBoard.css\");\n+        primaryStage.setTitle(\"Nine Men's Morris\");\n+        primaryStage.setScene(scene);\n+        primaryStage.show();\n+    }\n+\n+    /**\n+     * @param args the command line arguments\n+     */\n+    public static void main(String[] args) {\n+        launch(args);\n+    }\n+\n+    \n+  \n+    \n+   \n+    \n+    \n+}"
  }
]
