[
  {
    "sha": "6b94e51cc705d34ec5d835f6633c0d1559257a70",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/.gitignore",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/.gitignore",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/.gitignore?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -6,3 +6,5 @@ eclipse/\n .classpath\n .project\n build.number\n+run/\n+.idea/\n\\ No newline at end of file"
  },
  {
    "sha": "9e4245cdf8458614a590f0a0f7fa575a01388060",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 48,
    "deletions": 88,
    "changes": 136,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/build.gradle",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/build.gradle",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/build.gradle?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -1,31 +1,33 @@\n-\n buildscript {\n     repositories {\n-        jcenter()\n-        maven {\n-            name = \"forge\"\n-            url = \"http://files.minecraftforge.net/maven\"\n-        }\n+        jcenter()    \n         maven {\n-            name = 'sponge'\n-            url = 'http://repo.spongepowered.org/maven'\n+            name = \"Fabric\"\n+            url = \"https://maven.fabricmc.net/\"\n         }\n     }\n-\n     dependencies {\n-        classpath \"net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT\"\n-        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'\n+        classpath 'net.fabricmc:fabric-loom:0.2.6-SNAPSHOT'\n     }\n }\n \n+apply plugin: \"fabric-loom\"\n+\n+/*\n+plugins {\n+    id 'fabric-loom' version '0.2.6-SNAPSHOT'\n+    id 'maven-publish'\n+}\n+*/\n+\n repositories {\n     maven {\n         url 'https://masa.dy.fi/maven'\n     }\n }\n \n-apply plugin: 'net.minecraftforge.gradle.liteloader'\n-apply plugin: 'org.spongepowered.mixin'\n+sourceCompatibility = JavaVersion.VERSION_1_8\n+targetCompatibility = JavaVersion.VERSION_1_8\n \n ext.configFile = file \"build.properties\"\n \n@@ -35,104 +37,62 @@ configFile.withReader {\n     project.ext.config = new ConfigSlurper().parse prop\n }\n \n-minecraft {\n-    version = config.minecraft_version\n-    mappings = config.mappings_version\n-    runDir = 'minecraft'\n-    makeObfSourceJar = false\n+dependencies {\n+    minecraft \"com.mojang:minecraft:${config.minecraft_version}\"\n+    mappings \"net.fabricmc:yarn:${config.mappings_version}:v2\"\n+    modCompile \"net.fabricmc:fabric-loader:${config.fabric_loader_version}\"\n+    compile \"com.google.code.findbugs:jsr305:3.0.2\"\n+\n+    modCompile \"fi.dy.masa.malilib:malilib-fabric-${config.minecraft_version_out}:${config.malilib_version}\"\n+    modCompile \"io.github.prospector:modmenu:${config.mod_menu_version}\"\n+\n+    // Fabric API. This is technically optional, but you probably want it anyway.\n+    //modCompile \"net.fabricmc:fabric:\" + config.fabric_version\n+}\n \n+minecraft {\n     ext.mod_version = config.mod_version\n \n     if (mod_version.endsWith('-dev')) {\n         mod_version = mod_version + \".\" + new Date().format('yyyyMMdd.HHmmss')\n     }\n-\n-    replaceIn \"Reference.java\"\n-    replace \"@MOD_VERSION@\", mod_version\n-}\n-\n-dependencies {\n-    deobfCompile \"fi.dy.masa.malilib:malilib-\" + config.minecraft_version_out + \":\" + config.malilib_version + \":deobf\"\n }\n \n-sourceSets {\n-    main {\n-        ext.refMap = 'mixins.' + config.mod_id + '.refmap.json'\n-    }\n+compileJava {\n+    sourceCompatibility = JavaVersion.VERSION_1_8\n+    targetCompatibility = JavaVersion.VERSION_1_8\n+    options.encoding = 'UTF-8'\n }\n \n-group = config.group + \".\" + config.mod_id // http://maven.apache.org/guides/mini/guide-naming-conventions.html\n-archivesBaseName = config.mod_id + '-' + config.minecraft_version_out\n+group = config.group + \".\" + config.mod_id\n+archivesBaseName = config.mod_file_name + '-' + config.minecraft_version_out\n version = project.minecraft.mod_version\n \n-/**\n- * This section allows you to customise the generated litemod.json file\n- */\n-litemod {\n-    json {\n-        name = config.mod_id\n-        displayName = config.mod_name\n-        mcversion = config.minecraft_version\n-        version = config.mod_version\n-        author = config.author\n-\n-        // Uncomment any of the following lines and fill in your own details as required\n-        //requiredAPIs = [ 'someapi' ]\n-        //tweakClass = 'name.of.tweaker.here'\n-        dependsOn = [ 'malilib' ]\n-        mixinConfigs = [ 'mixins.' + config.mod_id + '.json' ]\n-    }\n-}\n-\n-/**\n- * This section allows you to customise your generated jar (litemod) file. By\n- * default it includes the generated litemod.json file, however if you prefer to\n- * include your own file from resources, simply remove the line below.\n- */\n-jar {\n-    // Remove the \"-mc1.12\" suffix from the file name\n-    classifier = \"\"\n-    // Don't append a 'mod-' filename prefix >_>\n-    baseName = archivesBaseName\n-\n-    from litemod.outputs\n-\n-    /*\n-    manifest.mainAttributes (\n-        'Built-By': System.properties['user.name'],\n-        'Created-By': System.properties['java.vm.version'] + \" (\" + System.properties['java.vm.vendor'] + \")\",\n-        'Implementation-Title': config.mod_id,\n-        'Implementation-Version': project.version\n-    )\n-    */\n-}\n-\n-mixin {\n-    defaultObfuscationEnv notch\n-}\n-\n-//tasks.withType(Jar)*.baseName = archivesBaseName\n-\n processResources\n {\n     // Exclude the GIMP image files\n     exclude '**/*.xcf'\n     exclude '**/xcf'\n \n     // this will ensure that this task is redone when the versions change.\n+    //inputs.property \"mod_version\", project.minecraft.mod_version\n+    //inputs.property \"minecraft_version\", project.config.minecraft_version\n+\n     inputs.property \"mod_version\", project.minecraft.mod_version\n-    inputs.property \"minecraft_version\", project.config.minecraft_version\n \n-    // replace stuff in mcmod.info, nothing else\n     from(sourceSets.main.resources.srcDirs) {\n-        include 'mcmod.info'\n-                \n-        // replace version and mcversion\n-        expand 'mod_version': project.minecraft.mod_version, 'minecraft_version': project.config.minecraft_version\n+        include \"fabric.mod.json\"\n+        expand \"mod_version\": project.minecraft.mod_version\n     }\n-      \n-    // copy everything else, thats not the mcmod.info\n+\n     from(sourceSets.main.resources.srcDirs) {\n-        exclude 'mcmod.info'\n+        exclude \"fabric.mod.json\"\n     }\n }\n+\n+// ensure that the encoding is set to UTF-8, no matter what the system default is\n+// this fixes some edge cases with special characters not displaying correctly\n+// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html\n+tasks.withType(JavaCompile) {\n+    options.encoding = \"UTF-8\"\n+}"
  },
  {
    "sha": "bcc8b2bab5a44d5dc679a9cf49fe6cae71156488",
    "filename": "build.properties",
    "status": "modified",
    "additions": 8,
    "deletions": 4,
    "changes": 12,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/build.properties",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/build.properties",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/build.properties?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -3,14 +3,18 @@ group = fi.dy.masa\n mod_id = litematica\n mod_name = Litematica\n author = masa\n+mod_file_name = litematica-fabric\n \n # Current mod version\n mod_version = 0.0.0-dev\n \n # Required malilib version\n-malilib_version = 0.10.0-dev.19\n+malilib_version = 0.10.0-dev.21+arne.1\n \n # Minecraft, Forge and MCP mappings versions\n-minecraft_version_out = 1.12.0\n-minecraft_version = 1.12\n-mappings_version = stable_39\n+minecraft_version_out = 1.15.2\n+minecraft_version = 1.15.2\n+mappings_version = 1.15.2+build.14\n+\n+fabric_loader_version = 0.7.8+build.184\n+mod_menu_version = 1.8.5+build.23"
  },
  {
    "sha": "5cacfe89738a37bc1c3e47f7838d9c270ff55e28",
    "filename": "gradle.properties",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/gradle.properties",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/gradle.properties",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/gradle.properties?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -0,0 +1,2 @@\n+# Done to increase the memory available to gradle.\n+org.gradle.jvmargs=-Xmx1G"
  },
  {
    "sha": "29953ea141f55e3b8fc691d31b5ca8816d89fa87",
    "filename": "gradle/wrapper/gradle-wrapper.jar",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/gradle/wrapper/gradle-wrapper.jar",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/gradle/wrapper/gradle-wrapper.jar",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/gradle/wrapper/gradle-wrapper.jar?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd"
  },
  {
    "sha": "24635041d629f63cebf617892be6a6c9140113ff",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/gradle/wrapper/gradle-wrapper.properties?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -1,6 +1,6 @@\n-#Thu Mar 02 15:26:25 EET 2017\n+#Mon Aug 22 17:36:22 EDT 2016\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.14.1-bin.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.9-bin.zip"
  },
  {
    "sha": "cccdd3d517fc5249beaefa600691cf150f2fa3e6",
    "filename": "gradlew",
    "status": "modified",
    "additions": 17,
    "deletions": 9,
    "changes": 26,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/gradlew",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/gradlew",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/gradlew?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/env bash\n+#!/usr/bin/env sh\n \n ##############################################################################\n ##\n@@ -33,11 +33,11 @@ DEFAULT_JVM_OPTS=\"\"\n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=\"maximum\"\n \n-warn ( ) {\n+warn () {\n     echo \"$*\"\n }\n \n-die ( ) {\n+die () {\n     echo\n     echo \"$*\"\n     echo\n@@ -154,11 +154,19 @@ if $cygwin ; then\n     esac\n fi\n \n-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n-function splitJvmOpts() {\n-    JVM_OPTS=(\"$@\")\n+# Escape application args\n+save () {\n+    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n+    echo \" \"\n }\n-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n-JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+APP_ARGS=$(save \"$@\")\n \n-exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n+# Collect all arguments for the java command, following the shell quoting and substitution rules\n+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n+\n+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\n+if [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n+  cd \"$(dirname \"$0\")\"\n+fi\n+\n+exec \"$JAVACMD\" \"$@\""
  },
  {
    "sha": "f9553162f122c71b34635112e717c3e733b5b212",
    "filename": "gradlew.bat",
    "status": "modified",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/gradlew.bat",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/gradlew.bat",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/gradlew.bat?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -49,7 +49,6 @@ goto fail\n @rem Get command-line arguments, handling Windows variants\n \n if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n-if \"%@eval[2+2]\" == \"4\" goto 4NT_args\n \n :win9xME_args\n @rem Slurp the command line arguments.\n@@ -60,11 +59,6 @@ set _SKIP=2\n if \"x%~1\" == \"x\" goto execute\n \n set CMD_LINE_ARGS=%*\n-goto execute\n-\n-:4NT_args\n-@rem Get arguments from the 4NT Shell from JP Software\n-set CMD_LINE_ARGS=%$\n \n :execute\n @rem Setup the command line"
  },
  {
    "sha": "5b60df3d25fea5853a5f64d321d56834d6fc33d7",
    "filename": "settings.gradle",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/settings.gradle",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/settings.gradle",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/settings.gradle?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -0,0 +1,10 @@\n+pluginManagement {\n+    repositories {\n+        jcenter()\n+        maven {\n+            name = 'Fabric'\n+            url = 'https://maven.fabricmc.net/'\n+        }\n+        gradlePluginPortal()\n+    }\n+}"
  },
  {
    "sha": "7abd74ff6aea264f5812260af4a19f420900e4c8",
    "filename": "src/main/java/fi/dy/masa/litematica/InitHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/InitHandler.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/InitHandler.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/InitHandler.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -15,7 +15,7 @@\n import fi.dy.masa.malilib.event.WorldLoadHandler;\n import fi.dy.masa.malilib.interfaces.IInitializationHandler;\n import fi.dy.masa.malilib.interfaces.IRenderer;\n-import net.minecraft.client.Minecraft;\n+import net.minecraft.client.MinecraftClient;\n \n public class InitHandler implements IInitializationHandler\n {\n@@ -38,7 +38,7 @@ public void registerModHandlers()\n         WorldLoadHandler.getInstance().registerWorldLoadPreHandler(listener);\n         WorldLoadHandler.getInstance().registerWorldLoadPostHandler(listener);\n \n-        KeyCallbacks.init(Minecraft.getMinecraft());\n+        KeyCallbacks.init(MinecraftClient.getInstance());\n         StatusInfoRenderer.init();\n \n         DataManager.getAreaSelectionsBaseDirectory();"
  },
  {
    "sha": "aa3d3b1f8f6c6e0abb0d429edbb2c8bfb5881fad",
    "filename": "src/main/java/fi/dy/masa/litematica/LiteModLitematica.java",
    "status": "removed",
    "additions": 0,
    "deletions": 44,
    "changes": 44,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/e3494f48fc5015165107c819a2168800eb4462f3/src/main/java/fi/dy/masa/litematica/LiteModLitematica.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/e3494f48fc5015165107c819a2168800eb4462f3/src/main/java/fi/dy/masa/litematica/LiteModLitematica.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/LiteModLitematica.java?ref=e3494f48fc5015165107c819a2168800eb4462f3",
    "patch": "@@ -1,44 +0,0 @@\n-package fi.dy.masa.litematica;\n-\n-import java.io.File;\n-import org.apache.logging.log4j.LogManager;\n-import org.apache.logging.log4j.Logger;\n-import com.mumfrey.liteloader.Configurable;\n-import com.mumfrey.liteloader.LiteMod;\n-import com.mumfrey.liteloader.modconfig.ConfigPanel;\n-import fi.dy.masa.litematica.config.gui.LitematicaConfigPanel;\n-import fi.dy.masa.malilib.event.InitializationHandler;\n-\n-public class LiteModLitematica implements LiteMod, Configurable\n-{\n-    public static final Logger logger = LogManager.getLogger(Reference.MOD_ID);\n-\n-    @Override\n-    public String getName()\n-    {\n-        return Reference.MOD_NAME;\n-    }\n-\n-    @Override\n-    public String getVersion()\n-    {\n-        return Reference.MOD_VERSION;\n-    }\n-\n-    @Override\n-    public Class<? extends ConfigPanel> getConfigPanelClass()\n-    {\n-        return LitematicaConfigPanel.class;\n-    }\n-\n-    @Override\n-    public void init(File configPath)\n-    {\n-        InitializationHandler.getInstance().registerInitializationHandler(new InitHandler());\n-    }\n-\n-    @Override\n-    public void upgradeSettings(String version, File configPath, File oldConfigPath)\n-    {\n-    }\n-}"
  },
  {
    "sha": "ac24ab2852c02450c76a0af9871b73ec07134ae3",
    "filename": "src/main/java/fi/dy/masa/litematica/Litematica.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/Litematica.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/Litematica.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/Litematica.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -0,0 +1,17 @@\n+package fi.dy.masa.litematica;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import fi.dy.masa.malilib.event.InitializationHandler;\n+import net.fabricmc.api.ModInitializer;\n+\n+public class Litematica implements ModInitializer\n+{\n+    public static final Logger logger = LogManager.getLogger(Reference.MOD_ID);\n+\n+    @Override\n+    public void onInitialize()\n+    {\n+        InitializationHandler.getInstance().registerInitializationHandler(new InitHandler());\n+    }\n+}"
  },
  {
    "sha": "88b45a4020fe436e638bbdb3a66c23c552066bc7",
    "filename": "src/main/java/fi/dy/masa/litematica/Reference.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/Reference.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/Reference.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/Reference.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -1,8 +1,10 @@\n package fi.dy.masa.litematica;\n \n+import fi.dy.masa.malilib.util.StringUtils;\n+\n public class Reference\n {\n     public static final String MOD_ID = \"litematica\";\n     public static final String MOD_NAME = \"Litematica\";\n-    public static final String MOD_VERSION = \"@MOD_VERSION@\";\n+    public static final String MOD_VERSION = StringUtils.getModVersionString(MOD_ID);\n }"
  },
  {
    "sha": "4dccec45e822d992c576cff015fceba3b505721f",
    "filename": "src/main/java/fi/dy/masa/litematica/compat/modmenu/ModMenuImpl.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/compat/modmenu/ModMenuImpl.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/compat/modmenu/ModMenuImpl.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/compat/modmenu/ModMenuImpl.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -0,0 +1,26 @@\n+package fi.dy.masa.litematica.compat.modmenu;\n+\n+import java.util.function.Function;\n+import net.minecraft.client.gui.screen.Screen;\n+import fi.dy.masa.litematica.Reference;\n+import fi.dy.masa.litematica.gui.GuiConfigs;\n+import io.github.prospector.modmenu.api.ModMenuApi;\n+\n+public class ModMenuImpl implements ModMenuApi\n+{\n+    @Override\n+    public String getModId()\n+    {\n+        return Reference.MOD_ID;\n+    }\n+\n+    @Override\n+    public Function<Screen, ? extends Screen> getConfigScreenFactory()\n+    {\n+        return (screen) -> {\n+            GuiConfigs gui = new GuiConfigs();\n+            gui.setParent(screen);\n+            return gui;\n+        };\n+    }\n+}"
  },
  {
    "sha": "21d866d601cf3edbb8f75a9b95ad3a037a12ddbb",
    "filename": "src/main/java/fi/dy/masa/litematica/config/Configs.java",
    "status": "modified",
    "additions": 9,
    "deletions": 3,
    "changes": 12,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/config/Configs.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/config/Configs.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/config/Configs.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -29,15 +29,18 @@\n \n     public static class Generic\n     {\n-        public static final ConfigBoolean       AREAS_PER_WORLD         = new ConfigBoolean(    \"areaSelectionsPerWorld\", true, \"Use per-world or server root directories for the area selections\\n�6NOTE: Don't switch this OFF while you are live streaming,\\n�6as then the Area Selection browser will show the server IP\\n�6in the navigation widget and also in the current selection name/path\\n�6until you change the current directory and selection again\");\n+        public static final ConfigBoolean       AREAS_PER_WORLD         = new ConfigBoolean(    \"areaSelectionsPerWorld\", true, \"Use per-world or server root directories for the area selections\\n§6NOTE: Don't switch this OFF while you are live streaming,\\n§6as then the Area Selection browser will show the server IP\\n§6in the navigation widget and also in the current selection name/path\\n§6until you change the current directory and selection again\");\n         public static final ConfigBoolean       BETTER_RENDER_ORDER     = new ConfigBoolean(    \"betterRenderOrder\", true, \"If enabled, then the schematic rendering is done\\nby injecting the different render call into the vanilla\\nrendering code. This should result in better translucent block\\nrendering/ordering and schematic blocks not getting rendered\\nthrough the client world blocks/terrain.\\nIf the rendering doesn't work (for example with Optifine),\\ntry disabling this option.\");\n         public static final ConfigBoolean       CHANGE_SELECTED_CORNER  = new ConfigBoolean(    \"changeSelectedCornerOnMove\", true, \"If true, then the selected corner of an area selection\\nis always set to the last moved corner,\\nwhen using the set corner hotkeys\");\n         public static final ConfigBoolean       EASY_PLACE_MODE         = new ConfigBoolean(    \"easyPlaceMode\", false, \"When enabled, then simply trying to use an item/place a block\\non schematic blocks will place\\nthat block in that position\");\n+        public static final ConfigBoolean       PRINT_MODE              = new ConfigBoolean(    \"printingMode\", false, \"Autobuild / print loaded selection.\\nBe aware that some servers and anticheat plugins do not allow printing.\");\n         public static final ConfigBoolean       EASY_PLACE_HOLD_ENABLED = new ConfigBoolean(    \"easyPlaceHoldEnabled\", false, \"When enabled, then simply holding down the use key\\nand looking at different schematic blocks will place them\");\n         public static final ConfigBoolean       EXECUTE_REQUIRE_TOOL    = new ConfigBoolean(    \"executeRequireHoldingTool\", true, \"Require holding an enabled tool item\\nfor the executeOperation hotkey to work\");\n         public static final ConfigBoolean       FIX_RAIL_ROTATION       = new ConfigBoolean(    \"fixRailRotation\", true, \"If true, then a fix is applied for the vanilla bug in rails,\\nwhere the 180 degree rotations of straight north-south and\\neast-west rails rotate 90 degrees counterclockwise instead >_>\");\n         public static final ConfigBoolean       LOAD_ENTIRE_SCHEMATICS  = new ConfigBoolean(    \"loadEntireSchematics\", false, \"If true, then the entire schematic is always loaded at once.\\nIf false, then only the part that is within the client's view distance is loaded.\");\n         public static final ConfigInteger       PASTE_COMMAND_INTERVAL  = new ConfigInteger(    \"pasteCommandInterval\", 1, 1, 1000, \"The interval in game ticks the Paste schematic task runs at,\\nin the command-based mode\");\n+        public static final ConfigDouble        PRINTING_DELAY          = new ConfigDouble(     \"printingDelay\", 0.2, 0.0, 1.0, \"Delay between printing blocks.\\nDo not set to 0 if you are playing on a server.\");\n+        public static final ConfigInteger       PRINTING_RANGE          = new ConfigInteger(    \"printingRange\", 2, 1, 6, \"Printing block place range\\nLower values are recommended for servers.\");\n         public static final ConfigInteger       PASTE_COMMAND_LIMIT     = new ConfigInteger(    \"pasteCommandLimit\", 64, 1, 1000000, \"Max number of commands sent per game tick,\\nwhen using the Paste schematic feature in the\\ncommand mode on a server\");\n         public static final ConfigString        PASTE_COMMAND_SETBLOCK  = new ConfigString(     \"pasteCommandNameSetblock\", \"setblock\", \"The setblock command name to use for the\\nPaste schematic feature on servers, when\\nusing the command-based paste mode\");\n         public static final ConfigOptionList    PASTE_REPLACE_BEHAVIOR  = new ConfigOptionList( \"pasteReplaceBehavior\", ReplaceBehavior.NONE, \"The behavior of replacing existing blocks\\nin the Paste schematic tool mode\");\n@@ -52,7 +55,7 @@\n \n         public static final ImmutableList<IConfigBase> OPTIONS = ImmutableList.of(\n                 AREAS_PER_WORLD,\n-                BETTER_RENDER_ORDER,\n+                //BETTER_RENDER_ORDER,\n                 CHANGE_SELECTED_CORNER,\n                 EASY_PLACE_MODE,\n                 EASY_PLACE_HOLD_ENABLED,\n@@ -61,6 +64,7 @@\n                 LOAD_ENTIRE_SCHEMATICS,\n                 PICK_BLOCK_ENABLED,\n                 PLACEMENT_RESTRICTION,\n+                PRINT_MODE,\n                 RENDER_MATERIALS_IN_GUI,\n                 RENDER_THREAD_NO_TIMEOUT,\n                 TOOL_ITEM_ENABLED,\n@@ -72,6 +76,8 @@\n                 PASTE_COMMAND_LIMIT,\n                 PASTE_COMMAND_SETBLOCK,\n                 PICK_BLOCKABLE_SLOTS,\n+                PRINTING_DELAY,\n+                PRINTING_RANGE,\n                 TOOL_ITEM\n         );\n     }\n@@ -255,7 +261,7 @@ public static void saveToFile()\n     {\n         File dir = FileUtils.getConfigDirectory();\n \n-        if (dir.exists() && dir.isDirectory())\n+        if ((dir.exists() && dir.isDirectory()) || dir.mkdirs())\n         {\n             JsonObject root = new JsonObject();\n "
  },
  {
    "sha": "17d4cd2c49ddd146803a7512bdbc0de9285de3b2",
    "filename": "src/main/java/fi/dy/masa/litematica/config/Hotkeys.java",
    "status": "modified",
    "additions": 34,
    "deletions": 32,
    "changes": 66,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/config/Hotkeys.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/config/Hotkeys.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/config/Hotkeys.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -8,40 +8,41 @@\n public class Hotkeys\n {\n     public static final ConfigHotkey ADD_SELECTION_BOX                  = new ConfigHotkey(\"addSelectionBox\",                   \"M,A\",  \"Add a new selection box (position 1) here\");\n-    public static final ConfigHotkey CLONE_SELECTION                    = new ConfigHotkey(\"cloneSelection\",                    \"\",    \"Quickly clone the current area selection.\\nThis basically just creates an in-memory-only schematic,\\nand then creates a placement of that schematic and selects it,\\nand also switches the tool mode to the Paste mode.\");\n-    public static final ConfigHotkey DELETE_SELECTION_BOX               = new ConfigHotkey(\"deleteSelectionBox\",                \"\",    \"Delete the currently selected box\");\n-    public static final ConfigHotkey EASY_PLACE_ACTIVATION              = new ConfigHotkey(\"easyPlaceActivation\",               \"\",    KeybindSettings.MODIFIER_INGAME_EMPTY, \"When the easyPlaceMode is enabled, this key must\\nbe held to enable placing the blocks when\\nusing the vanilla Use key\");\n-    public static final ConfigHotkey EASY_PLACE_TOGGLE                  = new ConfigHotkey(\"easyPlaceToggle\",                   \"\",    \"Allows quickly toggling on/off the Easy Place mode\");\n-    public static final ConfigHotkey EXECUTE_OPERATION                  = new ConfigHotkey(\"executeOperation\",                  \"\",    \"Execute the currently selected tool operation with the\\ncurrent selection or placement in the Fill, Replace,\\nPaste Schematic etc. modes\");\n-    public static final ConfigHotkey INVERT_GHOST_BLOCK_RENDER_STATE    = new ConfigHotkey(\"invertGhostBlockRenderState\",       \"\",    \"Inverts the schematic/ghost block rendering status\\nwhile this keybind is held down\");\n-    public static final ConfigHotkey INVERT_OVERLAY_RENDER_STATE        = new ConfigHotkey(\"invertOverlayRenderState\",          \"\", \"Inverts the Overlay rendering status while this keybind is held down\");\n-    public static final ConfigHotkey LAYER_MODE_NEXT                    = new ConfigHotkey(\"layerModeNext\",                     \"M,PRIOR\", \"Cycle the rendering mode (all, layers) forward\");\n-    public static final ConfigHotkey LAYER_MODE_PREVIOUS                = new ConfigHotkey(\"layerModePrevious\",                 \"M,NEXT\",  \"Cycle the rendering mode (all, layers) backwards\");\n-    public static final ConfigHotkey LAYER_NEXT                         = new ConfigHotkey(\"layerNext\",                         \"PRIOR\", \"Move the rendered layer selection up\");\n-    public static final ConfigHotkey LAYER_PREVIOUS                     = new ConfigHotkey(\"layerPrevious\",                     \"NEXT\",  \"Move the rendered layer selection down\");\n-    public static final ConfigHotkey LAYER_SET_HERE                     = new ConfigHotkey(\"layerSetHere\",                      \"\",    \"Set the Render Layer to the player's current position\");\n-    public static final ConfigHotkey NUDGE_SELECTION_NEGATIVE           = new ConfigHotkey(\"nudgeSelectionNegative\",            \"\",    \"Nudge the current selection in the \\\"negative\\\" direction\\nThis is basically the same as mouse wheel down\\nwith the Nudge modifier pressed\");\n-    public static final ConfigHotkey NUDGE_SELECTION_POSITIVE           = new ConfigHotkey(\"nudgeSelectionPositive\",            \"\",    \"Nudge the current selection in the \\\"positive\\\" direction\\nThis is basically the same as mouse wheel up\\nwith the Nudge modifier pressed\");\n-    public static final ConfigHotkey MOVE_ENTIRE_SELECTION              = new ConfigHotkey(\"moveEntireSelection\",               \"\",    \"Move the entire current selection here\");\n-    public static final ConfigHotkey OPEN_GUI_AREA_SETTINGS             = new ConfigHotkey(\"openGuiAreaSettings\",               \"MULTIPLY\",  \"Open the Area Settings GUI for the currently selected area\");\n+    public static final ConfigHotkey CLONE_SELECTION                    = new ConfigHotkey(\"cloneSelection\",                    \"\",     \"Quickly clone the current area selection.\\nThis basically just creates an in-memory-only schematic,\\nand then creates a placement of that schematic and selects it,\\nand also switches the tool mode to the Paste mode.\");\n+    public static final ConfigHotkey DELETE_SELECTION_BOX               = new ConfigHotkey(\"deleteSelectionBox\",                \"\",     \"Delete the currently selected box\");\n+    public static final ConfigHotkey EASY_PLACE_ACTIVATION              = new ConfigHotkey(\"easyPlaceActivation\",               \"\",     KeybindSettings.MODIFIER_INGAME_EMPTY, \"When the easyPlaceMode is enabled, this key must\\nbe held to enable placing the blocks when\\nusing the vanilla Use key\");\n+    public static final ConfigHotkey EASY_PLACE_TOGGLE                  = new ConfigHotkey(\"easyPlaceToggle\",                   \"\",     \"Allows quickly toggling on/off the Easy Place mode\");\n+    public static final ConfigHotkey TOGGLE_PRINTING_MODE               = new ConfigHotkey(\"togglePrintingMode\",                \"M,O\",  \"Allows quickly toggling on/off Printing mode\");\n+    public static final ConfigHotkey EXECUTE_OPERATION                  = new ConfigHotkey(\"executeOperation\",                  \"\",     \"Execute the currently selected tool operation with the\\ncurrent selection or placement in the Fill, Replace,\\nPaste Schematic etc. modes\");\n+    public static final ConfigHotkey INVERT_GHOST_BLOCK_RENDER_STATE    = new ConfigHotkey(\"invertGhostBlockRenderState\",       \"\",     \"Inverts the schematic/ghost block rendering status\\nwhile this keybind is held down\");\n+    public static final ConfigHotkey INVERT_OVERLAY_RENDER_STATE        = new ConfigHotkey(\"invertOverlayRenderState\",          \"\",     \"Inverts the Overlay rendering status while this keybind is held down\");\n+    public static final ConfigHotkey LAYER_MODE_NEXT                    = new ConfigHotkey(\"layerModeNext\",                     \"M,PAGE_UP\",    \"Cycle the rendering mode (all, layers) forward\");\n+    public static final ConfigHotkey LAYER_MODE_PREVIOUS                = new ConfigHotkey(\"layerModePrevious\",                 \"M,PAGE_DOWN\",  \"Cycle the rendering mode (all, layers) backwards\");\n+    public static final ConfigHotkey LAYER_NEXT                         = new ConfigHotkey(\"layerNext\",                         \"PAGE_UP\",      \"Move the rendered layer selection up\");\n+    public static final ConfigHotkey LAYER_PREVIOUS                     = new ConfigHotkey(\"layerPrevious\",                     \"PAGE_DOWN\",    \"Move the rendered layer selection down\");\n+    public static final ConfigHotkey LAYER_SET_HERE                     = new ConfigHotkey(\"layerSetHere\",                      \"\",     \"Set the Render Layer to the player's current position\");\n+    public static final ConfigHotkey NUDGE_SELECTION_NEGATIVE           = new ConfigHotkey(\"nudgeSelectionNegative\",            \"\",     \"Nudge the current selection in the \\\"negative\\\" direction\\nThis is basically the same as mouse wheel down\\nwith the Nudge modifier pressed\");\n+    public static final ConfigHotkey NUDGE_SELECTION_POSITIVE           = new ConfigHotkey(\"nudgeSelectionPositive\",            \"\",     \"Nudge the current selection in the \\\"positive\\\" direction\\nThis is basically the same as mouse wheel up\\nwith the Nudge modifier pressed\");\n+    public static final ConfigHotkey MOVE_ENTIRE_SELECTION              = new ConfigHotkey(\"moveEntireSelection\",               \"\",     \"Move the entire current selection here\");\n+    public static final ConfigHotkey OPEN_GUI_AREA_SETTINGS             = new ConfigHotkey(\"openGuiAreaSettings\",               \"KP_MULTIPLY\", \"Open the Area Settings GUI for the currently selected area\");\n     public static final ConfigHotkey OPEN_GUI_LOADED_SCHEMATICS         = new ConfigHotkey(\"openGuiLoadedSchematics\",           \"\",     \"Open the Loaded Schematic GUI\");\n     public static final ConfigHotkey OPEN_GUI_MAIN_MENU                 = new ConfigHotkey(\"openGuiMainMenu\",                   \"M\",    KeybindSettings.RELEASE_EXCLUSIVE, \"Open the Litematica main menu\");\n     public static final ConfigHotkey OPEN_GUI_MATERIAL_LIST             = new ConfigHotkey(\"openGuiMaterialList\",               \"M,L\",  \"Open the Material List GUI for the currently\\nselected schematic placement\");\n-    public static final ConfigHotkey OPEN_GUI_PLACEMENT_SETTINGS        = new ConfigHotkey(\"openGuiPlacementSettings\",          \"SUBTRACT\",  \"Open the Placement Settings GUI for the currently\\nselected placement or sub-region\");\n+    public static final ConfigHotkey OPEN_GUI_PLACEMENT_SETTINGS        = new ConfigHotkey(\"openGuiPlacementSettings\",          \"KP_SUBTRACT\", \"Open the Placement Settings GUI for the currently\\nselected placement or sub-region\");\n     public static final ConfigHotkey OPEN_GUI_SCHEMATIC_PLACEMENTS      = new ConfigHotkey(\"openGuiSchematicPlacements\",        \"M,P\",  \"Open the Schematic Placements GUI\");\n     public static final ConfigHotkey OPEN_GUI_SCHEMATIC_PROJECTS        = new ConfigHotkey(\"openGuiSchematicProjects\",          \"\",     \"Open the Schematic Projects GUI\");\n     public static final ConfigHotkey OPEN_GUI_SCHEMATIC_VERIFIER        = new ConfigHotkey(\"openGuiSchematicVerifier\",          \"M,V\",  \"Open the Schematic Verifier GUI for the currently\\nselected schematic placement\");\n     public static final ConfigHotkey OPEN_GUI_SELECTION_MANAGER         = new ConfigHotkey(\"openGuiSelectionManager\",           \"M,S\",  \"Open the Area Selection manager GUI\");\n     public static final ConfigHotkey OPEN_GUI_SETTINGS                  = new ConfigHotkey(\"openGuiSettings\",                   \"M,C\",  \"Open the Config GUI\");\n-    public static final ConfigHotkey OPERATION_MODE_CHANGE_MODIFIER     = new ConfigHotkey(\"operationModeChangeModifier\",       \"LCONTROL\", KeybindSettings.MODIFIER_INGAME, \"The modifier key to quickly change the operation mode.\\nHold this and scroll while holding the \\\"tool item\\\" to quickly cycle the mode.\");\n-    public static final ConfigHotkey PICK_BLOCK_FIRST                   = new ConfigHotkey(\"pickBlockFirst\",                    \"BUTTON2\", KeybindSettings.PRESS_ALLOWEXTRA, \"A key to pick block the first\\nschematic block ray traced to\");\n-    public static final ConfigHotkey PICK_BLOCK_LAST                    = new ConfigHotkey(\"pickBlockLast\",                     \"\",      KeybindSettings.MODIFIER_INGAME, \"A key to pick block the last schematic block\\nray traced to, before the first (possible) client world\\nblock ray traced to. Basically this would get\\nyou the block you could place against an existing block.\");\n-    public static final ConfigHotkey PICK_BLOCK_TOGGLE                  = new ConfigHotkey(\"pickBlockToggle\",                   \"M,BUTTON2\", \"A hotkey to toggle the pick block toggle option in the\\nGeneric configs. This is provided as a quick way to enable\\nor disable the pick block keys, if they interfere with something.\");\n-    public static final ConfigHotkey RENDER_INFO_OVERLAY                = new ConfigHotkey(\"renderInfoOverlay\",                 \"I\", KeybindSettings.PRESS_ALLOWEXTRA, \"The key that enables rendering the block info overlay.\\nUse NONE for not requiring a key to be pressed.\\nDisable the similarly named option in the Visuals\\nconfigs to disable the overlay completely.\");\n-    public static final ConfigHotkey RENDER_OVERLAY_THROUGH_BLOCKS      = new ConfigHotkey(\"renderOverlayThroughBlocks\",        \"RCONTROL\", KeybindSettings.PRESS_ALLOWEXTRA, \"A hotkey to allow the overlays to render through blocks.\\nThis is just a quicker way to temporarily enable\\nthe same thing that the 'schematicOverlayRenderThroughBlocks' option in Visuals does.\");\n+    public static final ConfigHotkey OPERATION_MODE_CHANGE_MODIFIER     = new ConfigHotkey(\"operationModeChangeModifier\",       \"LEFT_CONTROL\", KeybindSettings.MODIFIER_INGAME, \"The modifier key to quickly change the operation mode.\\nHold this and scroll while holding the \\\"tool item\\\" to quickly cycle the mode.\");\n+    public static final ConfigHotkey PICK_BLOCK_FIRST                   = new ConfigHotkey(\"pickBlockFirst\",                    \"BUTTON_3\",     KeybindSettings.PRESS_ALLOWEXTRA, \"A key to pick block the first\\nschematic block ray traced to\");\n+    public static final ConfigHotkey PICK_BLOCK_LAST                    = new ConfigHotkey(\"pickBlockLast\",                     \"\",             KeybindSettings.MODIFIER_INGAME, \"A key to pick block the last schematic block\\nray traced to, before the first (possible) client world\\nblock ray traced to. Basically this would get\\nyou the block you could place against an existing block.\");\n+    public static final ConfigHotkey PICK_BLOCK_TOGGLE                  = new ConfigHotkey(\"pickBlockToggle\",                   \"M,BUTTON_3\",   \"A hotkey to toggle the pick block toggle option in the\\nGeneric configs. This is provided as a quick way to enable\\nor disable the pick block keys, if they interfere with something.\");\n+    public static final ConfigHotkey RENDER_INFO_OVERLAY                = new ConfigHotkey(\"renderInfoOverlay\",                 \"I\",            KeybindSettings.PRESS_ALLOWEXTRA, \"The key that enables rendering the block info overlay.\\nUse NONE for not requiring a key to be pressed.\\nDisable the similarly named option in the Visuals\\nconfigs to disable the overlay completely.\");\n+    public static final ConfigHotkey RENDER_OVERLAY_THROUGH_BLOCKS      = new ConfigHotkey(\"renderOverlayThroughBlocks\",        \"RIGHT_CONTROL\", KeybindSettings.PRESS_ALLOWEXTRA, \"A hotkey to allow the overlays to render through blocks.\\nThis is just a quicker way to temporarily enable\\nthe same thing that the 'schematicOverlayRenderThroughBlocks' option in Visuals does.\");\n     public static final ConfigHotkey RERENDER_SCHEMATIC                 = new ConfigHotkey(\"rerenderSchematic\",                 \"F3,M\", \"Hotkey to refresh/redraw only the schematic, instead of\\nhaving to refresh the vanilla terrain too with F3 + A\");\n     public static final ConfigHotkey SAVE_AREA_AS_IN_MEMORY_SCHEMATIC   = new ConfigHotkey(\"saveAreaAsInMemorySchematic\",       \"\",     \"Save the current Area Selection as an in-memory Schematic\");\n-    public static final ConfigHotkey SAVE_AREA_AS_SCHEMATIC_TO_FILE     = new ConfigHotkey(\"saveAreaAsSchematicToFile\",         \"LCONTROL,LMENU,S\",  \"Save the current Area Selection as a Schematic to a file\");\n+    public static final ConfigHotkey SAVE_AREA_AS_SCHEMATIC_TO_FILE     = new ConfigHotkey(\"saveAreaAsSchematicToFile\",         \"LEFT_CONTROL,LEFT_ALT,S\",  \"Save the current Area Selection as a Schematic to a file\");\n     public static final ConfigHotkey SCHEMATIC_REBUILD_BREAK_ALL        = new ConfigHotkey(\"schematicRebuildBreakPlaceAll\",     \"\",     KeybindSettings.MODIFIER_INGAME, \"Modifier key to activate the \\\"break all identical blocks\\\"\\nfunction in the Schematic Rebuild tool mode\");\n     public static final ConfigHotkey SCHEMATIC_REBUILD_BREAK_DIRECTION  = new ConfigHotkey(\"schematicRebuildBreakPlaceDirection\",\"\",    KeybindSettings.MODIFIER_INGAME, \"Modifier key to activate the directional/continuous\\nbreak or place function in the Schematic Rebuild tool mode\");\n     public static final ConfigHotkey SCHEMATIC_REBUILD_REPLACE_ALL      = new ConfigHotkey(\"schematicRebuildReplaceAll\",        \"\",     KeybindSettings.MODIFIER_INGAME, \"Modifier key to activate the \\\"replace all identical\\\"\\nreplace mode/function in the Schematic Rebuild tool mode\");\n@@ -52,8 +53,8 @@\n     public static final ConfigHotkey SELECTION_GRAB_MODIFIER            = new ConfigHotkey(\"selectionGrabModifier\",             \"\",     KeybindSettings.MODIFIER_INGAME, \"The modifier key to hold to \\\"grab\\\" a selection\\nbox or corner for cursor moving.\");\n     public static final ConfigHotkey SELECTION_GROW_HOTKEY              = new ConfigHotkey(\"selectionGrow\",                     \"\",     \"The action hotkey to auto-grow the selection box around\\nany adjacent/diagonally connected blocks\");\n     public static final ConfigHotkey SELECTION_GROW_MODIFIER            = new ConfigHotkey(\"selectionGrowModifier\",             \"\",     KeybindSettings.MODIFIER_INGAME, \"The modifier key to hold to grow or shrink\\na selection box while scrolling\");\n-    public static final ConfigHotkey SELECTION_NUDGE_MODIFIER           = new ConfigHotkey(\"selectionNudgeModifier\",            \"LMENU\", KeybindSettings.MODIFIER_INGAME, \"The modifier key to hold while scrolling\\nto nudge the selected area or corner\");\n-    public static final ConfigHotkey SELECTION_MODE_CYCLE               = new ConfigHotkey(\"selectionModeCycle\",                \"LCONTROL,M\", \"Change the mode between Corners and Cuboid\\nin the Area Selection mode\");\n+    public static final ConfigHotkey SELECTION_NUDGE_MODIFIER           = new ConfigHotkey(\"selectionNudgeModifier\",            \"LEFT_ALT\", KeybindSettings.MODIFIER_INGAME, \"The modifier key to hold while scrolling\\nto nudge the selected area or corner\");\n+    public static final ConfigHotkey SELECTION_MODE_CYCLE               = new ConfigHotkey(\"selectionModeCycle\",                \"LEFT_CONTROL,M\", \"Change the mode between Corners and Cuboid\\nin the Area Selection mode\");\n     public static final ConfigHotkey SELECTION_SHRINK_HOTKEY            = new ConfigHotkey(\"selectionShrink\",                   \"\",     \"The action hotkey to shrink the selection box so that there\\nisn't any empty space (empty layers) on any side\");\n     public static final ConfigHotkey SET_AREA_ORIGIN                    = new ConfigHotkey(\"setAreaOrigin\",                     \"\",     \"Set/move the origin point of the current\\narea selection to the player's position\");\n     public static final ConfigHotkey SET_SELECTION_BOX_POSITION_1       = new ConfigHotkey(\"setSelectionBoxPosition1\",          \"\",     \"Set the first position of the currently selected\\nbox to the player's position\");\n@@ -71,12 +72,12 @@\n     public static final ConfigHotkey TOGGLE_TRANSLUCENT_RENDERING       = new ConfigHotkey(\"toggleTranslucentRendering\",        \"\",     \"Toggle translucent vs. opaque ghost block rendering\");\n     public static final ConfigHotkey TOGGLE_VERIFIER_OVERLAY_RENDERING  = new ConfigHotkey(\"toggleVerifierOverlayRendering\",    \"\",     \"Toggle the Schematic Verifier overlay rendering\");\n     public static final ConfigHotkey TOOL_ENABLED_TOGGLE                = new ConfigHotkey(\"toolEnabledToggle\",                 \"M,T\",  \"The keybind to toggle the \\\"tool\\\" item functionality on/off\");\n-    public static final ConfigHotkey TOOL_PLACE_CORNER_1                = new ConfigHotkey(\"toolPlaceCorner1\",                  \"BUTTON0\", KeybindSettings.PRESS_ALLOWEXTRA, \"The button to use while holding the \\\"tool\\\" item\\nto place the primary/first corner\");\n-    public static final ConfigHotkey TOOL_PLACE_CORNER_2                = new ConfigHotkey(\"toolPlaceCorner2\",                  \"BUTTON1\", KeybindSettings.PRESS_ALLOWEXTRA, \"The button to use while holding the \\\"tool\\\" item\\nto place the second corner\");\n-    public static final ConfigHotkey TOOL_SELECT_ELEMENTS               = new ConfigHotkey(\"toolSelectElements\",                \"BUTTON2\", KeybindSettings.PRESS_ALLOWEXTRA, \"The button to use to select corners or boxes\\nwhile holding the \\\"tool\\\" item\");\n-    public static final ConfigHotkey TOOL_SELECT_MODIFIER_BLOCK_1       = new ConfigHotkey(\"toolSelectModifierBlock1\",          \"LMENU\", KeybindSettings.MODIFIER_INGAME, \"The modifier key to hold while using the 'toolSelectElements'\\nhotkey, to select the primary block type to use in some of the tool modes\");\n-    public static final ConfigHotkey TOOL_SELECT_MODIFIER_BLOCK_2       = new ConfigHotkey(\"toolSelectModifierBlock2\",          \"LSHIFT\", KeybindSettings.MODIFIER_INGAME, \"The modifier key to hold while using the 'toolSelectElements'\\nhotkey, to select the secondary block type to use in some of the tool modes\");\n-    public static final ConfigHotkey UNLOAD_CURRENT_SCHEMATIC           = new ConfigHotkey(\"unloadCurrentSchematic\",            \"\",    \"Unloads the schematic of the currently selected placement,and thus also removes all placements created from it\\n\");\n+    public static final ConfigHotkey TOOL_PLACE_CORNER_1                = new ConfigHotkey(\"toolPlaceCorner1\",                  \"BUTTON_1\", KeybindSettings.PRESS_ALLOWEXTRA, \"The button to use while holding the \\\"tool\\\" item\\nto place the primary/first corner\");\n+    public static final ConfigHotkey TOOL_PLACE_CORNER_2                = new ConfigHotkey(\"toolPlaceCorner2\",                  \"BUTTON_2\", KeybindSettings.PRESS_ALLOWEXTRA, \"The button to use while holding the \\\"tool\\\" item\\nto place the second corner\");\n+    public static final ConfigHotkey TOOL_SELECT_ELEMENTS               = new ConfigHotkey(\"toolSelectElements\",                \"BUTTON_3\", KeybindSettings.PRESS_ALLOWEXTRA, \"The button to use to select corners or boxes\\nwhile holding the \\\"tool\\\" item\");\n+    public static final ConfigHotkey TOOL_SELECT_MODIFIER_BLOCK_1       = new ConfigHotkey(\"toolSelectModifierBlock1\",          \"LEFT_ALT\", KeybindSettings.MODIFIER_INGAME, \"The modifier key to hold while using the 'toolSelectElements'\\nhotkey, to select the primary block type to use in some of the tool modes\");\n+    public static final ConfigHotkey TOOL_SELECT_MODIFIER_BLOCK_2       = new ConfigHotkey(\"toolSelectModifierBlock2\",          \"LEFT_SHIFT\", KeybindSettings.MODIFIER_INGAME, \"The modifier key to hold while using the 'toolSelectElements'\\nhotkey, to select the secondary block type to use in some of the tool modes\");\n+    public static final ConfigHotkey UNLOAD_CURRENT_SCHEMATIC           = new ConfigHotkey(\"unloadCurrentSchematic\",            \"\",     \"Unloads the schematic of the currently selected placement,and thus also removes all placements created from it\\n\");\n \n     public static final List<ConfigHotkey> HOTKEY_LIST = ImmutableList.of(\n             ADD_SELECTION_BOX,\n@@ -138,6 +139,7 @@\n             TOGGLE_OVERLAY_SIDE_RENDERING,\n             TOGGLE_PLACEMENT_BOXES_RENDERING,\n             TOGGLE_PLACEMENT_RESTRICTION,\n+            TOGGLE_PRINTING_MODE,\n             TOGGLE_SCHEMATIC_BLOCK_RENDERING,\n             TOGGLE_SCHEMATIC_RENDERING,\n             TOGGLE_TRANSLUCENT_RENDERING,"
  },
  {
    "sha": "a23052f29e4b98b3adc3c4fd28a7bafa62bd8e09",
    "filename": "src/main/java/fi/dy/masa/litematica/config/gui/LitematicaConfigPanel.java",
    "status": "removed",
    "additions": 0,
    "deletions": 27,
    "changes": 27,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/e3494f48fc5015165107c819a2168800eb4462f3/src/main/java/fi/dy/masa/litematica/config/gui/LitematicaConfigPanel.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/e3494f48fc5015165107c819a2168800eb4462f3/src/main/java/fi/dy/masa/litematica/config/gui/LitematicaConfigPanel.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/config/gui/LitematicaConfigPanel.java?ref=e3494f48fc5015165107c819a2168800eb4462f3",
    "patch": "@@ -1,27 +0,0 @@\n-package fi.dy.masa.litematica.config.gui;\n-\n-import fi.dy.masa.litematica.Reference;\n-import fi.dy.masa.litematica.config.Configs;\n-import fi.dy.masa.litematica.config.Hotkeys;\n-import fi.dy.masa.malilib.config.gui.ConfigPanelBase;\n-import fi.dy.masa.malilib.config.gui.GuiModConfigs;\n-\n-public class LitematicaConfigPanel extends ConfigPanelBase\n-{\n-    @Override\n-    protected String getPanelTitlePrefix()\n-    {\n-        return Reference.MOD_NAME + \" options\";\n-    }\n-\n-    @Override\n-    protected void createSubPanels()\n-    {\n-        String modId = Reference.MOD_ID;\n-        this.addSubPanel((new GuiModConfigs(modId, Configs.Generic.OPTIONS, \"litematica.gui.button.config_gui.generic\")).setConfigWidth(160));\n-        this.addSubPanel((new GuiModConfigs(modId, Configs.InfoOverlays.OPTIONS, \"litematica.gui.button.config_gui.info_overlays\")).setConfigWidth(160));\n-        this.addSubPanel((new GuiModConfigs(modId, Configs.Visuals.OPTIONS, \"litematica.gui.button.config_gui.visuals\")).setConfigWidth(120));\n-        this.addSubPanel((new GuiModConfigs(modId, Configs.Colors.OPTIONS, \"litematica.gui.button.config_gui.colors\")).setConfigWidth(100));\n-        this.addSubPanel((new GuiModConfigs(modId, Hotkeys.HOTKEY_LIST, \"litematica.gui.button.config_gui.hotkeys\")).setConfigWidth(210));\n-    }\n-}"
  },
  {
    "sha": "0a20cf5dd6637785629bd710a3a24d9668f9ad6e",
    "filename": "src/main/java/fi/dy/masa/litematica/data/DataManager.java",
    "status": "modified",
    "additions": 13,
    "deletions": 48,
    "changes": 61,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/data/DataManager.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/data/DataManager.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/data/DataManager.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -9,7 +9,12 @@\n import com.google.gson.JsonElement;\n import com.google.gson.JsonObject;\n import com.google.gson.JsonPrimitive;\n-import fi.dy.masa.litematica.LiteModLitematica;\n+import net.minecraft.item.Item;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.item.Items;\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.Registry;\n+import fi.dy.masa.litematica.Litematica;\n import fi.dy.masa.litematica.Reference;\n import fi.dy.masa.litematica.config.Configs;\n import fi.dy.masa.litematica.gui.GuiConfigs.ConfigGuiTab;\n@@ -31,18 +36,11 @@\n import fi.dy.masa.malilib.util.JsonUtils;\n import fi.dy.masa.malilib.util.LayerRange;\n import fi.dy.masa.malilib.util.StringUtils;\n-import fi.dy.masa.malilib.util.WorldUtils;\n-import net.minecraft.client.Minecraft;\n-import net.minecraft.init.Items;\n-import net.minecraft.item.Item;\n-import net.minecraft.item.ItemStack;\n-import net.minecraft.util.ResourceLocation;\n \n public class DataManager implements IDirectoryCache\n {\n     private static final DataManager INSTANCE = new DataManager();\n \n-    private static final Pattern PATTERN_ITEM_META = Pattern.compile(\"^(?<name>(?:[a-z0-9\\\\._-]+:)[a-z0-9\\\\._-]+)(@(?<meta>[0-9]+))$\");\n     private static final Pattern PATTERN_ITEM_BASE = Pattern.compile(\"^(?<name>(?:[a-z0-9\\\\._-]+:)[a-z0-9\\\\._-]+)$\");\n     private static final Map<String, File> LAST_DIRECTORIES = new HashMap<>();\n \n@@ -397,7 +395,7 @@ public static File getSchematicsBaseDirectory()\n \n         if (dir.exists() == false && dir.mkdirs() == false)\n         {\n-            LiteModLitematica.logger.warn(\"Failed to create the schematic directory '{}'\", dir.getAbsolutePath());\n+            Litematica.logger.warn(\"Failed to create the schematic directory '{}'\", dir.getAbsolutePath());\n         }\n \n         return dir;\n@@ -421,7 +419,7 @@ public static File getAreaSelectionsBaseDirectory()\n \n         if (dir.exists() == false && dir.mkdirs() == false)\n         {\n-            LiteModLitematica.logger.warn(\"Failed to create the area selections base directory '{}'\", dir.getAbsolutePath());\n+            Litematica.logger.warn(\"Failed to create the area selections base directory '{}'\", dir.getAbsolutePath());\n         }\n \n         return dir;\n@@ -433,30 +431,10 @@ private static File getCurrentStorageFile(boolean globalData)\n \n         if (dir.exists() == false && dir.mkdirs() == false)\n         {\n-            LiteModLitematica.logger.warn(\"Failed to create the config directory '{}'\", dir.getAbsolutePath());\n-        }\n-\n-        return new File(dir, getStorageFileName(globalData));\n-    }\n-\n-    private static String getStorageFileName(boolean globalData)\n-    {\n-        Minecraft mc = Minecraft.getMinecraft();\n-        String name = StringUtils.getWorldOrServerName();\n-\n-        if (name != null)\n-        {\n-            if (globalData)\n-            {\n-                return Reference.MOD_ID + \"_\" + name + \".json\";\n-            }\n-            else\n-            {\n-                return Reference.MOD_ID + \"_\" + name + \"_dim\" + WorldUtils.getDimensionId(mc.world) + \".json\";\n-            }\n+            Litematica.logger.warn(\"Failed to create the config directory '{}'\", dir.getAbsolutePath());\n         }\n \n-        return Reference.MOD_ID + \"_default.json\";\n+        return new File(dir, StringUtils.getStorageFileName(globalData, Reference.MOD_ID + \"_\", \".json\", \"default\"));\n     }\n \n     public static void setToolItem(String itemName)\n@@ -469,24 +447,11 @@ public static void setToolItem(String itemName)\n \n         try\n         {\n-            Matcher matcher = PATTERN_ITEM_META.matcher(itemName);\n-\n-            if (matcher.matches())\n-            {\n-                Item item = Item.REGISTRY.getObject(new ResourceLocation(matcher.group(\"name\")));\n-\n-                if (item != null && item != Items.AIR)\n-                {\n-                    toolItem = new ItemStack(item, 1, Integer.parseInt(matcher.group(\"meta\")));\n-                    return;\n-                }\n-            }\n-\n-            matcher = PATTERN_ITEM_BASE.matcher(itemName);\n+            Matcher matcher = PATTERN_ITEM_BASE.matcher(itemName);\n \n             if (matcher.matches())\n             {\n-                Item item = Item.REGISTRY.getObject(new ResourceLocation(matcher.group(\"name\")));\n+                Item item = Registry.ITEM.get(new Identifier(matcher.group(\"name\")));\n \n                 if (item != null && item != Items.AIR)\n                 {\n@@ -501,6 +466,6 @@ public static void setToolItem(String itemName)\n \n         // Fall back to a stick\n         toolItem = new ItemStack(Items.STICK);\n-        Configs.Generic.TOOL_ITEM.setValueFromString(Item.REGISTRY.getNameForObject(Items.STICK).toString());\n+        Configs.Generic.TOOL_ITEM.setValueFromString(Registry.ITEM.getId(Items.STICK).toString());\n     }\n }"
  },
  {
    "sha": "c930af176157d92d85df90bb79219127b619913e",
    "filename": "src/main/java/fi/dy/masa/litematica/event/InputHandler.java",
    "status": "modified",
    "additions": 35,
    "deletions": 26,
    "changes": 61,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/event/InputHandler.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/event/InputHandler.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/event/InputHandler.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -1,5 +1,9 @@\n package fi.dy.masa.litematica.event;\n \n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.Direction;\n import fi.dy.masa.litematica.Reference;\n import fi.dy.masa.litematica.config.Configs;\n import fi.dy.masa.litematica.config.Hotkeys;\n@@ -23,10 +27,6 @@\n import fi.dy.masa.malilib.hotkeys.KeybindMulti;\n import fi.dy.masa.malilib.util.GuiUtils;\n import fi.dy.masa.malilib.util.InfoUtils;\n-import net.minecraft.client.Minecraft;\n-import net.minecraft.entity.player.EntityPlayer;\n-import net.minecraft.util.EnumFacing;\n-import net.minecraft.util.math.BlockPos;\n \n public class InputHandler implements IKeybindProvider, IKeyboardInputHandler, IMouseInputHandler\n {\n@@ -57,21 +57,21 @@ public void addHotkeys(IKeybindManager manager)\n     }\n \n     @Override\n-    public boolean onKeyInput(int eventKey, boolean eventKeyState)\n+    public boolean onKeyInput(int keyCode, int scanCode, int modifiers, boolean eventKeyState)\n     {\n         if (eventKeyState)\n         {\n-            Minecraft mc = Minecraft.getMinecraft();\n+            MinecraftClient mc = MinecraftClient.getInstance();\n \n-            if (eventKey == mc.gameSettings.keyBindUseItem.getKeyCode())\n+            if (mc.options.keyUse.matchesKey(keyCode, scanCode))\n             {\n                 return this.handleUseKey(mc);\n             }\n-            else if (eventKey == mc.gameSettings.keyBindAttack.getKeyCode())\n+            else if (mc.options.keyAttack.matchesKey(keyCode, scanCode))\n             {\n                 return this.handleAttackKey(mc);\n             }\n-            else if (eventKey == mc.gameSettings.keyBindScreenshot.getKeyCode() && GuiSchematicManager.hasPendingPreviewTask())\n+            else if (mc.options.keyScreenshot.matchesKey(keyCode, scanCode) && GuiSchematicManager.hasPendingPreviewTask())\n             {\n                 return GuiSchematicManager.setPreviewImage();\n             }\n@@ -81,34 +81,43 @@ else if (eventKey == mc.gameSettings.keyBindScreenshot.getKeyCode() && GuiSchema\n     }\n \n     @Override\n-    public boolean onMouseInput(int eventButton, int dWheel, boolean eventButtonState)\n+    public boolean onMouseClick(int mouseX, int mouseY, int eventButton, boolean eventButtonState)\n     {\n-        Minecraft mc = Minecraft.getMinecraft();\n+        MinecraftClient mc = MinecraftClient.getInstance();\n \n         // Tool enabled, and not in a GUI\n-        if (GuiUtils.getCurrentScreen() == null && mc.world != null && mc.player != null)\n+        if (GuiUtils.getCurrentScreen() == null && mc.world != null && mc.player != null && eventButtonState)\n         {\n-            if (eventButtonState && eventButton == mc.gameSettings.keyBindUseItem.getKeyCode() + 100)\n+            if (eventButtonState && mc.options.keyUse.matchesMouse(eventButton))\n             {\n                 return this.handleUseKey(mc);\n             }\n-            else if (eventButtonState && eventButton == mc.gameSettings.keyBindAttack.getKeyCode() + 100)\n+            else if (eventButtonState && mc.options.keyAttack.matchesMouse(eventButton))\n             {\n                 return this.handleAttackKey(mc);\n             }\n+        }\n \n-            if (dWheel != 0)\n-            {\n-                return this.handleMouseScroll(dWheel, mc);\n-            }\n+        return false;\n+    }\n+\n+    @Override\n+    public boolean onMouseScroll(int mouseX, int mouseY, double dWheel)\n+    {\n+        MinecraftClient mc = MinecraftClient.getInstance();\n+\n+        // Not in a GUI\n+        if (GuiUtils.getCurrentScreen() == null && mc.world != null && mc.player != null)\n+        {\n+            return this.handleMouseScroll(dWheel, mc);\n         }\n \n         return false;\n     }\n \n-    private boolean handleMouseScroll(double dWheel, Minecraft mc)\n+    private boolean handleMouseScroll(double dWheel, MinecraftClient mc)\n     {\n-        EntityPlayer player = mc.player;\n+        PlayerEntity player = mc.player;\n         boolean toolEnabled = Configs.Visuals.ENABLE_RENDERING.getBooleanValue() && Configs.Generic.TOOL_ITEM_ENABLED.getBooleanValue();\n \n         if (toolEnabled == false || EntityUtils.hasToolItem(player) == false)\n@@ -173,7 +182,7 @@ else if (mode == ToolMode.MOVE)\n         return false;\n     }\n \n-    public static boolean nudgeSelection(int amount, ToolMode mode, EntityPlayer player)\n+    public static boolean nudgeSelection(int amount, ToolMode mode, PlayerEntity player)\n     {\n         if (mode.getUsesAreaSelection())\n         {\n@@ -187,7 +196,7 @@ public static boolean nudgeSelection(int amount, ToolMode mode, EntityPlayer pla\n         }\n         else if (mode.getUsesSchematic())\n         {\n-            EnumFacing direction = EntityUtils.getClosestLookingDirection(player);\n+            Direction direction = EntityUtils.getClosestLookingDirection(player);\n             DataManager.getSchematicPlacementManager().nudgePositionOfCurrentSelection(direction, amount);\n             return true;\n         }\n@@ -226,7 +235,7 @@ private boolean growOrShrinkSelection(int amount, ToolMode mode)\n         return true;\n     }\n \n-    private boolean handleAttackKey(Minecraft mc)\n+    private boolean handleAttackKey(MinecraftClient mc)\n     {\n         if (mc.player != null && DataManager.getToolMode() == ToolMode.REBUILD && KeybindMulti.getTriggeredCount() == 0)\n         {\n@@ -247,7 +256,7 @@ else if (Hotkeys.SCHEMATIC_REBUILD_BREAK_ALL.getKeybind().isKeybindHeld())\n         return false;\n     }\n \n-    private boolean handleUseKey(Minecraft mc)\n+    private boolean handleUseKey(MinecraftClient mc)\n     {\n         if (mc.player != null)\n         {\n@@ -281,7 +290,7 @@ else if (Configs.Generic.EASY_PLACE_MODE.getBooleanValue() &&\n             }\n             else if (Configs.Generic.PICK_BLOCK_ENABLED.getBooleanValue())\n             {\n-                if (KeybindMulti.hotkeyMatchesKeybind(Hotkeys.PICK_BLOCK_LAST, mc.gameSettings.keyBindUseItem))\n+                if (KeybindMulti.hotkeyMatchesKeybind(Hotkeys.PICK_BLOCK_LAST, mc.options.keyUse))\n                 {\n                     WorldUtils.doSchematicWorldPickBlock(false, mc);\n                 }\n@@ -296,7 +305,7 @@ else if (Configs.Generic.PICK_BLOCK_ENABLED.getBooleanValue())\n         return false;\n     }\n \n-    public static void onTick(Minecraft mc)\n+    public static void onTick(MinecraftClient mc)\n     {\n         SelectionManager sm = DataManager.getSelectionManager();\n "
  },
  {
    "sha": "e6dc13588a441b11f0aaaf74b0ebc6aa9770bc21",
    "filename": "src/main/java/fi/dy/masa/litematica/event/KeyCallbacks.java",
    "status": "modified",
    "additions": 13,
    "deletions": 12,
    "changes": 25,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/event/KeyCallbacks.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/event/KeyCallbacks.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/event/KeyCallbacks.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -1,5 +1,7 @@\n package fi.dy.masa.litematica.event;\n \n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.util.math.BlockPos;\n import fi.dy.masa.litematica.config.Configs;\n import fi.dy.masa.litematica.config.Hotkeys;\n import fi.dy.masa.litematica.data.DataManager;\n@@ -43,12 +45,10 @@\n import fi.dy.masa.malilib.interfaces.IValueChangeCallback;\n import fi.dy.masa.malilib.util.InfoUtils;\n import fi.dy.masa.malilib.util.LayerMode;\n-import net.minecraft.client.Minecraft;\n-import net.minecraft.util.math.BlockPos;\n \n public class KeyCallbacks\n {\n-    public static void init(Minecraft mc)\n+    public static void init(MinecraftClient mc)\n     {\n         IHotkeyCallback callbackHotkeys = new KeyCallbackHotkeys(mc);\n         IHotkeyCallback callbackMessage = new KeyCallbackToggleMessage(mc);\n@@ -95,6 +95,7 @@ public static void init(Minecraft mc)\n         Hotkeys.ADD_SELECTION_BOX.getKeybind().setCallback(callbackMessage);\n         Hotkeys.DELETE_SELECTION_BOX.getKeybind().setCallback(callbackMessage);\n         Hotkeys.EASY_PLACE_TOGGLE.getKeybind().setCallback(new KeyCallbackToggleBooleanConfigWithMessage(Configs.Generic.EASY_PLACE_MODE));\n+        Hotkeys.TOGGLE_PRINTING_MODE.getKeybind().setCallback(new KeyCallbackToggleBooleanConfigWithMessage(Configs.Generic.PRINT_MODE));\n         Hotkeys.MOVE_ENTIRE_SELECTION.getKeybind().setCallback(callbackMessage);\n         Hotkeys.SELECTION_MODE_CYCLE.getKeybind().setCallback(callbackMessage);\n         Hotkeys.SET_AREA_ORIGIN.getKeybind().setCallback(callbackMessage);\n@@ -150,9 +151,9 @@ public boolean onKeyAction(KeyAction action, IKeybind key)\n \n     private static class KeyCallbackHotkeys implements IHotkeyCallback\n     {\n-        private final Minecraft mc;\n+        private final MinecraftClient mc;\n \n-        public KeyCallbackHotkeys(Minecraft mc)\n+        public KeyCallbackHotkeys(MinecraftClient mc)\n         {\n             this.mc = mc;\n         }\n@@ -424,7 +425,7 @@ else if (key == Hotkeys.PICK_BLOCK_LAST.getKeybind())\n                 {\n                     // Only do the pick block here, if it's not bound to the use button.\n                     // If it's bound to the use button, then it will be done from the input handling.\n-                    if (KeybindMulti.hotkeyMatchesKeybind(Hotkeys.PICK_BLOCK_LAST, this.mc.gameSettings.keyBindUseItem) == false)\n+                    if (KeybindMulti.hotkeyMatchesKeybind(Hotkeys.PICK_BLOCK_LAST, this.mc.options.keyUse) == false)\n                     {\n                         WorldUtils.doSchematicWorldPickBlock(false, this.mc);\n                     }\n@@ -525,9 +526,9 @@ else if (key == Hotkeys.UNLOAD_CURRENT_SCHEMATIC.getKeybind())\n \n     private static class KeyCallbackToggleMessage implements IHotkeyCallback\n     {\n-        private final Minecraft mc;\n+        private final MinecraftClient mc;\n \n-        public KeyCallbackToggleMessage(Minecraft mc)\n+        public KeyCallbackToggleMessage(MinecraftClient mc)\n         {\n             this.mc = mc;\n         }\n@@ -581,7 +582,7 @@ else if (key == Hotkeys.MOVE_ENTIRE_SELECTION.getKeybind())\n \n                     if (selection != null)\n                     {\n-                        BlockPos pos = new BlockPos(this.mc.player.getPositionVector());\n+                        BlockPos pos = new BlockPos(this.mc.player.getPos());\n \n                         if (mode == ToolMode.MOVE)\n                         {\n@@ -597,7 +598,7 @@ else if (key == Hotkeys.MOVE_ENTIRE_SELECTION.getKeybind())\n                 }\n                 else if (mode.getUsesSchematic())\n                 {\n-                    BlockPos pos = new BlockPos(this.mc.player.getPositionVector());\n+                    BlockPos pos = new BlockPos(this.mc.player.getPos());\n                     DataManager.getSchematicPlacementManager().setPositionOfCurrentSelectionTo(pos, this.mc);\n                     return true;\n                 }\n@@ -628,7 +629,7 @@ else if (key == Hotkeys.SET_AREA_ORIGIN.getKeybind())\n \n                     if (area != null)\n                     {\n-                        BlockPos pos = new BlockPos(this.mc.player.getPositionVector());\n+                        BlockPos pos = new BlockPos(this.mc.player.getPos());\n                         area.setExplicitOrigin(pos);\n                         String posStr = String.format(\"x: %d, y: %d, z: %d\", pos.getX(), pos.getY(), pos.getZ());\n                         InfoUtils.printActionbarMessage(\"litematica.message.set_area_origin\", posStr);\n@@ -646,7 +647,7 @@ else if (key == Hotkeys.SET_SELECTION_BOX_POSITION_1.getKeybind() ||\n \n                     if (area != null && area.getSelectedSubRegionBox() != null)\n                     {\n-                        BlockPos pos = new BlockPos(this.mc.player.getPositionVector());\n+                        BlockPos pos = new BlockPos(this.mc.player.getPos());\n                         Corner corner = key == Hotkeys.SET_SELECTION_BOX_POSITION_1.getKeybind() ? Corner.CORNER_1 : Corner.CORNER_2;\n                         area.setSelectedSubRegionCornerPos(pos, corner);\n "
  },
  {
    "sha": "05a9b3bbea83f2fe81afd6c36231049e67aab742",
    "filename": "src/main/java/fi/dy/masa/litematica/event/RenderHandler.java",
    "status": "modified",
    "additions": 8,
    "deletions": 17,
    "changes": 25,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/event/RenderHandler.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/event/RenderHandler.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/event/RenderHandler.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -1,53 +1,44 @@\n package fi.dy.masa.litematica.event;\n \n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.util.math.MatrixStack;\n import fi.dy.masa.litematica.config.Configs;\n-import fi.dy.masa.litematica.config.Hotkeys;\n import fi.dy.masa.litematica.data.DataManager;\n import fi.dy.masa.litematica.gui.GuiSchematicManager;\n-import fi.dy.masa.litematica.render.LitematicaRenderer;\n import fi.dy.masa.litematica.render.OverlayRenderer;\n import fi.dy.masa.litematica.render.infohud.InfoHud;\n import fi.dy.masa.litematica.render.infohud.ToolHud;\n import fi.dy.masa.litematica.tool.ToolMode;\n import fi.dy.masa.malilib.interfaces.IRenderer;\n import fi.dy.masa.malilib.util.GuiUtils;\n-import net.minecraft.client.Minecraft;\n \n public class RenderHandler implements IRenderer\n {\n     @Override\n-    public void onRenderWorldLast(float partialTicks)\n+    public void onRenderWorldLast(float partialTicks, MatrixStack matrices)\n     {\n-        Minecraft mc = Minecraft.getMinecraft();\n+        MinecraftClient mc = MinecraftClient.getInstance();\n \n         if (Configs.Visuals.ENABLE_RENDERING.getBooleanValue() && mc.player != null)\n         {\n-            boolean invert = Hotkeys.INVERT_GHOST_BLOCK_RENDER_STATE.getKeybind().isKeybindHeld();\n-\n-            if (Configs.Visuals.ENABLE_SCHEMATIC_RENDERING.getBooleanValue() != invert &&\n-                Configs.Generic.BETTER_RENDER_ORDER.getBooleanValue() == false)\n-            {\n-                LitematicaRenderer.getInstance().renderSchematicWorld(partialTicks);\n-            }\n-\n-            OverlayRenderer.getInstance().renderBoxes(partialTicks);\n+            OverlayRenderer.getInstance().renderBoxes(matrices, partialTicks);\n \n             if (Configs.InfoOverlays.VERIFIER_OVERLAY_ENABLED.getBooleanValue())\n             {\n-                OverlayRenderer.getInstance().renderSchematicVerifierMismatches(partialTicks);\n+                OverlayRenderer.getInstance().renderSchematicVerifierMismatches(matrices, partialTicks);\n             }\n \n             if (DataManager.getToolMode() == ToolMode.REBUILD)\n             {\n-                OverlayRenderer.getInstance().renderSchematicRebuildTargetingOverlay(partialTicks);\n+                OverlayRenderer.getInstance().renderSchematicRebuildTargetingOverlay(matrices, partialTicks);\n             }\n         }\n     }\n \n     @Override\n     public void onRenderGameOverlayPost(float partialTicks)\n     {\n-        Minecraft mc = Minecraft.getMinecraft();\n+        MinecraftClient mc = MinecraftClient.getInstance();\n \n         if (Configs.Visuals.ENABLE_RENDERING.getBooleanValue() && mc.player != null)\n         {"
  },
  {
    "sha": "19d1a6935a846df17a4134d237d3aa8d0db2247d",
    "filename": "src/main/java/fi/dy/masa/litematica/event/WorldLoadListener.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/event/WorldLoadListener.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/event/WorldLoadListener.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/event/WorldLoadListener.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -4,13 +4,13 @@\n import fi.dy.masa.litematica.data.DataManager;\n import fi.dy.masa.litematica.world.SchematicWorldHandler;\n import fi.dy.masa.malilib.interfaces.IWorldLoadListener;\n-import net.minecraft.client.Minecraft;\n-import net.minecraft.client.multiplayer.WorldClient;\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.world.ClientWorld;\n \n public class WorldLoadListener implements IWorldLoadListener\n {\n     @Override\n-    public void onWorldLoadPre(@Nullable WorldClient worldBefore, @Nullable WorldClient worldAfter, Minecraft mc)\n+    public void onWorldLoadPre(@Nullable ClientWorld worldBefore, @Nullable ClientWorld worldAfter, MinecraftClient mc)\n     {\n         // Save the settings before the integrated server gets shut down\n         if (worldBefore != null)\n@@ -20,7 +20,7 @@ public void onWorldLoadPre(@Nullable WorldClient worldBefore, @Nullable WorldCli\n     }\n \n     @Override\n-    public void onWorldLoadPost(@Nullable WorldClient worldBefore, @Nullable WorldClient worldAfter, Minecraft mc)\n+    public void onWorldLoadPost(@Nullable ClientWorld worldBefore, @Nullable ClientWorld worldAfter, MinecraftClient mc)\n     {\n         SchematicWorldHandler.recreateSchematicWorld(worldAfter == null);\n "
  },
  {
    "sha": "bd82d264fb8c5d02a13ce6537572d99ab0b2b9d3",
    "filename": "src/main/java/fi/dy/masa/litematica/gui/ButtonIcons.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/ButtonIcons.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/ButtonIcons.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/gui/ButtonIcons.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -3,7 +3,7 @@\n import fi.dy.masa.litematica.Reference;\n import fi.dy.masa.malilib.gui.interfaces.IGuiIcon;\n import fi.dy.masa.malilib.render.RenderUtils;\n-import net.minecraft.util.ResourceLocation;\n+import net.minecraft.util.Identifier;\n \n public enum ButtonIcons implements IGuiIcon\n {\n@@ -17,7 +17,7 @@\n     SCHEMATIC_PROJECTS      (102,  98, 14, 14),\n     TASK_MANAGER            (102, 112, 14, 14),;\n \n-    public static final ResourceLocation TEXTURE = new ResourceLocation(Reference.MOD_ID, \"textures/gui/gui_widgets.png\");\n+    public static final Identifier TEXTURE = new Identifier(Reference.MOD_ID, \"textures/gui/gui_widgets.png\");\n \n     private final int u;\n     private final int v;\n@@ -75,7 +75,7 @@ public void renderAt(int x, int y, float zLevel, boolean enabled, boolean select\n     }\n \n     @Override\n-    public ResourceLocation getTexture()\n+    public Identifier getTexture()\n     {\n         return TEXTURE;\n     }"
  },
  {
    "sha": "703b2c62be1e1d63c5eb955579435c438c535461",
    "filename": "src/main/java/fi/dy/masa/litematica/gui/GuiMainMenu.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiMainMenu.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiMainMenu.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/gui/GuiMainMenu.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -10,8 +10,8 @@\n import fi.dy.masa.malilib.gui.button.ButtonGeneric;\n import fi.dy.masa.malilib.gui.button.IButtonActionListener;\n import fi.dy.masa.malilib.util.StringUtils;\n-import net.minecraft.client.Minecraft;\n-import net.minecraft.client.gui.GuiScreen;\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.Screen;\n \n public class GuiMainMenu extends GuiBase\n {\n@@ -104,9 +104,9 @@ private int getButtonWidth()\n     {\n         private final ButtonType type;\n         @Nullable\n-        private final GuiScreen parent;\n+        private final Screen parent;\n \n-        public ButtonListenerChangeMenu(ButtonType type, @Nullable GuiScreen parent)\n+        public ButtonListenerChangeMenu(ButtonType type, @Nullable Screen parent)\n         {\n             this.type = type;\n             this.parent = parent;\n@@ -219,7 +219,7 @@ private ButtonListenerCycleToolMode(GuiMainMenu gui)\n         @Override\n         public void actionPerformedWithButton(ButtonBase button, int mouseButton)\n         {\n-            ToolMode mode = DataManager.getToolMode().cycle(Minecraft.getMinecraft().player, mouseButton == 0);\n+            ToolMode mode = DataManager.getToolMode().cycle(MinecraftClient.getInstance().player, mouseButton == 0);\n             DataManager.setToolMode(mode);\n             this.gui.initGui();\n         }"
  },
  {
    "sha": "00361005527e6e1a4cafc1b256fac1cc43083117",
    "filename": "src/main/java/fi/dy/masa/litematica/gui/GuiMaterialList.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiMaterialList.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiMaterialList.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/gui/GuiMaterialList.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -320,7 +320,7 @@ private DataDump getMaterialListDump(MaterialListBase materialList, boolean csv)\n                 int total = entry.getCountTotal() * multiplier;\n                 int missing = multiplier > 1 ? total : entry.getCountMissing();\n                 int available = entry.getCountAvailable();\n-                dump.addData(entry.getStack().getDisplayName(), String.valueOf(total), String.valueOf(missing), String.valueOf(available));\n+                dump.addData(entry.getStack().getName().getString(), String.valueOf(total), String.valueOf(missing), String.valueOf(available));\n             }\n \n             String titleTotal = multiplier > 1 ? String.format(\"Total (x%d)\", multiplier) : \"Total\";"
  },
  {
    "sha": "694677e205e199efc23a0fdcec87861f49583e2a",
    "filename": "src/main/java/fi/dy/masa/litematica/gui/GuiPlacementConfiguration.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiPlacementConfiguration.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiPlacementConfiguration.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/gui/GuiPlacementConfiguration.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -24,9 +24,9 @@\n import fi.dy.masa.malilib.util.GuiUtils;\n import fi.dy.masa.malilib.util.PositionUtils.CoordinateType;\n import fi.dy.masa.malilib.util.StringUtils;\n-import net.minecraft.client.Minecraft;\n-import net.minecraft.util.Mirror;\n-import net.minecraft.util.Rotation;\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.util.BlockMirror;\n+import net.minecraft.util.BlockRotation;\n import net.minecraft.util.math.BlockPos;\n \n public class GuiPlacementConfiguration  extends GuiListBase<SubRegionPlacement, WidgetPlacementSubRegion, WidgetListPlacementSubRegions>\n@@ -66,7 +66,7 @@ public void initGui()\n         int y = 22;\n \n         this.textFieldRename = new GuiTextFieldGeneric(x, y + 2, width, 16, this.textRenderer);\n-        this.textFieldRename.setMaxStringLength(256);\n+        this.textFieldRename.setMaxLength(256);\n         this.textFieldRename.setText(this.placement.getName());\n         this.addTextField(this.textFieldRename, null);\n         this.createButton(x + width + 4, y, -1, ButtonListener.Type.RENAME_PLACEMENT);\n@@ -342,7 +342,7 @@ public ButtonListener(Type type, SchematicPlacement placement, GuiPlacementConfi\n         @Override\n         public void actionPerformedWithButton(ButtonBase button, int mouseButton)\n         {\n-            Minecraft mc = Minecraft.getMinecraft();\n+            MinecraftClient mc = MinecraftClient.getInstance();\n             int amount = mouseButton == 1 ? -1 : 1;\n             if (GuiBase.isShiftDown()) { amount *= 8; }\n             if (GuiBase.isAltDown()) { amount *= 4; }\n@@ -358,22 +358,22 @@ public void actionPerformedWithButton(ButtonBase button, int mouseButton)\n                 case ROTATE:\n                 {\n                     boolean reverse = mouseButton == 1;\n-                    Rotation rotation = PositionUtils.cycleRotation(this.placement.getRotation(), reverse);\n+                    BlockRotation rotation = PositionUtils.cycleRotation(this.placement.getRotation(), reverse);\n                     this.placement.setRotation(rotation, this.parent);\n                     break;\n                 }\n \n                 case MIRROR:\n                 {\n                     boolean reverse = mouseButton == 1;\n-                    Mirror mirror = PositionUtils.cycleMirror(this.placement.getMirror(), reverse);\n+                    BlockMirror mirror = PositionUtils.cycleMirror(this.placement.getMirror(), reverse);\n                     this.placement.setMirror(mirror, this.parent);\n                     break;\n                 }\n \n                 case MOVE_TO_PLAYER:\n                 {\n-                    BlockPos pos = new BlockPos(mc.player.getPositionVector());\n+                    BlockPos pos = new BlockPos(mc.player.getPos());\n                     this.placement.setOrigin(pos, this.parent);\n                     break;\n                 }"
  },
  {
    "sha": "f5832202b498512a399ee8503d9389f351c817f9",
    "filename": "src/main/java/fi/dy/masa/litematica/gui/GuiSchematicLoad.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicLoad.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicLoad.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicLoad.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -174,7 +174,7 @@ else if (fileType == FileType.VANILLA_STRUCTURE)\n \n                     if (DataManager.getCreatePlacementOnLoad())\n                     {\n-                        BlockPos pos = new BlockPos(this.gui.mc.player.getPositionVector());\n+                        BlockPos pos = new BlockPos(this.gui.mc.player.getPos());\n                         String name = schematic.getMetadata().getName();\n                         boolean enabled = GuiBase.isShiftDown() == false;\n "
  },
  {
    "sha": "846b4d93ec4818220308c32326ca9fd563e7c5f7",
    "filename": "src/main/java/fi/dy/masa/litematica/gui/GuiSchematicManager.java",
    "status": "modified",
    "additions": 13,
    "deletions": 21,
    "changes": 34,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicManager.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicManager.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicManager.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -1,12 +1,8 @@\n package fi.dy.masa.litematica.gui;\n \n-import java.awt.Graphics2D;\n-import java.awt.geom.AffineTransform;\n-import java.awt.image.AffineTransformOp;\n-import java.awt.image.BufferedImage;\n import java.io.File;\n import javax.annotation.Nullable;\n-import fi.dy.masa.litematica.LiteModLitematica;\n+import fi.dy.masa.litematica.Litematica;\n import fi.dy.masa.litematica.data.DataManager;\n import fi.dy.masa.litematica.gui.GuiMainMenu.ButtonListenerChangeMenu;\n import fi.dy.masa.litematica.schematic.LitematicaSchematic;\n@@ -25,10 +21,12 @@\n import fi.dy.masa.malilib.gui.widgets.WidgetFileBrowserBase.DirectoryEntry;\n import fi.dy.masa.malilib.interfaces.IConfirmationListener;\n import fi.dy.masa.malilib.interfaces.IStringConsumerFeedback;\n+import fi.dy.masa.malilib.util.GuiUtils;\n import fi.dy.masa.malilib.util.InfoUtils;\n import fi.dy.masa.malilib.util.StringUtils;\n-import net.minecraft.client.Minecraft;\n-import net.minecraft.util.ScreenShotHelper;\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.texture.NativeImage;\n+import net.minecraft.client.util.ScreenshotUtils;\n \n public class GuiSchematicManager extends GuiSchematicBrowserBase implements ISelectionListener<DirectoryEntry>\n {\n@@ -394,25 +392,19 @@ public void createAndSetPreviewImage()\n             {\n                 try\n                 {\n-                    Minecraft mc = Minecraft.getMinecraft();\n-                    BufferedImage screenshot = ScreenShotHelper.createScreenshot(mc.displayWidth, mc.displayHeight, mc.getFramebuffer());\n+                    MinecraftClient mc = MinecraftClient.getInstance();\n+                    int screenWidth = GuiUtils.getDisplayWidth();\n+                    int screenHeight = GuiUtils.getDisplayHeight();\n+                    NativeImage screenshot = ScreenshotUtils.takeScreenshot(screenWidth, screenHeight, mc.getFramebuffer());\n \n                     int x = screenshot.getWidth() >= screenshot.getHeight() ? (screenshot.getWidth() - screenshot.getHeight()) / 2 : 0;\n                     int y = screenshot.getHeight() >= screenshot.getWidth() ? (screenshot.getHeight() - screenshot.getWidth()) / 2 : 0;\n                     int longerSide = Math.min(screenshot.getWidth(), screenshot.getHeight());\n                     //System.out.printf(\"w: %d, h: %d, x: %d, y: %d\\n\", screenshot.getWidth(), screenshot.getHeight(), x, y);\n-\n                     int previewDimensions = 140;\n-                    double scaleFactor = (double) previewDimensions / longerSide;\n-                    BufferedImage scaled = new BufferedImage(previewDimensions, previewDimensions, BufferedImage.TYPE_INT_ARGB);\n-                    AffineTransform at = new AffineTransform();\n-                    at.scale(scaleFactor, scaleFactor);\n-                    AffineTransformOp scaleOp = new AffineTransformOp(at, AffineTransformOp.TYPE_BICUBIC);\n-\n-                    Graphics2D graphics = scaled.createGraphics();\n-                    graphics.drawImage(screenshot.getSubimage(x, y, longerSide, longerSide), scaleOp, 0, 0);\n-\n-                    int[] pixels = scaled.getRGB(0, 0, previewDimensions, previewDimensions, null, 0, scaled.getWidth());\n+                    NativeImage scaled = new NativeImage(previewDimensions, previewDimensions, false);\n+                    screenshot.resizeSubRectTo(x, y, longerSide, longerSide, scaled);\n+                    int[] pixels = scaled.makePixelArray();\n \n                     schematic.getMetadata().setPreviewImagePixelData(pixels);\n                     schematic.getMetadata().setTimeModified(System.currentTimeMillis());\n@@ -423,7 +415,7 @@ public void createAndSetPreviewImage()\n                 }\n                 catch (Exception e)\n                 {\n-                    LiteModLitematica.logger.warn(\"Exception while creating preview image\", e);\n+                    Litematica.logger.warn(\"Exception while creating preview image\", e);\n                 }\n             }\n             else"
  },
  {
    "sha": "7ae031015dadb6c0081de41e68ca1e7da302219d",
    "filename": "src/main/java/fi/dy/masa/litematica/gui/GuiSchematicProjectManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicProjectManager.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicProjectManager.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicProjectManager.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -19,7 +19,7 @@\n import fi.dy.masa.malilib.interfaces.IConfirmationListener;\n import fi.dy.masa.malilib.util.GuiUtils;\n import fi.dy.masa.malilib.util.StringUtils;\n-import net.minecraft.client.Minecraft;\n+import net.minecraft.client.MinecraftClient;\n import net.minecraft.util.math.BlockPos;\n \n public class GuiSchematicProjectManager extends GuiListBase<SchematicVersion, WidgetSchematicVersion, WidgetListSchematicVersions>\n@@ -249,7 +249,7 @@ public boolean onActionCancelled()\n         @Override\n         public boolean onActionConfirmed()\n         {\n-            DataManager.getSchematicProjectsManager().deleteLastSeenArea(Minecraft.getMinecraft());\n+            DataManager.getSchematicProjectsManager().deleteLastSeenArea(MinecraftClient.getInstance());\n             return true;\n         }\n "
  },
  {
    "sha": "90f851aa016b79350a57fac8d7dd4d8aa14fa6c8",
    "filename": "src/main/java/fi/dy/masa/litematica/gui/GuiSchematicSave.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/aleksilassila/litematica-printer/blob/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicSave.java",
    "raw_url": "https://github.com/aleksilassila/litematica-printer/raw/1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicSave.java",
    "contents_url": "https://api.github.com/repos/aleksilassila/litematica-printer/contents/src/main/java/fi/dy/masa/litematica/gui/GuiSchematicSave.java?ref=1f5088969b4c71fdaaa8818fa01cd4fe9bbb21dd",
    "patch": "@@ -17,7 +17,7 @@\n import fi.dy.masa.malilib.util.FileUtils;\n import fi.dy.masa.malilib.util.GuiUtils;\n import fi.dy.masa.malilib.util.StringUtils;\n-import net.minecraft.client.Minecraft;\n+import net.minecraft.client.MinecraftClient;\n \n public class GuiSchematicSave extends GuiSchematicSaveBase implements ICompletionListener\n {\n@@ -72,13 +72,13 @@ protected IButtonActionListener createButtonListener(ButtonType type)\n     @Override\n     public void onTaskCompleted()\n     {\n-        if (this.mc.isCallingFromMinecraftThread())\n+        if (this.mc.isOnThread())\n         {\n             this.refreshList();\n         }\n         else\n         {\n-            this.mc.addScheduledTask(new Runnable()\n+            this.mc.execute(new Runnable()\n             {\n                 @Override\n                 public void run()\n@@ -164,7 +164,7 @@ public void actionPerformedWithButton(ButtonBase button, int mouseButton)\n                             return;\n                         }\n \n-                        String author = this.gui.mc.player.getName();\n+                        String author = this.gui.mc.player.getName().getString();\n                         boolean takeEntities = this.gui.checkboxIgnoreEntities.isChecked() == false;\n                         LitematicaSchematic schematic = LitematicaSchematic.createEmptySchematic(area, author);\n                         TaskSaveSchematic task = new TaskSaveSchematic(dir, fileName, schematic, area, takeEntities, overwrite);\n@@ -184,19 +184,19 @@ public void actionPerformedWithButton(ButtonBase button, int mouseButton)\n     public static class InMemorySchematicCreator implements IStringConsumer\n     {\n         private final AreaSelection area;\n-        private final Minecraft mc;\n+        private final MinecraftClient mc;\n \n         public InMemorySchematicCreator(AreaSelection area)\n         {\n             this.area = area;\n-            this.mc = Minecraft.getMinecraft();\n+            this.mc = MinecraftClient.getInstance();\n         }\n \n         @Override\n         public void setString(String string)\n         {\n             boolean takeEntities = true; // TODO\n-            String author = this.mc.player.getName();\n+            String author = this.mc.player.getName().getString();\n             LitematicaSchematic schematic = LitematicaSchematic.createEmptySchematic(this.area, author);\n \n             if (schematic != null)"
  }
]
