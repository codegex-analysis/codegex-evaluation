[
  {
    "sha": "1bdcdcfd4954c0088cc9efb0b122a86dfe074917",
    "filename": "src/com/tms/lesson13/additional/shop/Product.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/additional/shop/Product.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/additional/shop/Product.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/additional/shop/Product.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,48 @@\n+package com.tms.lesson13.additional.shop;\n+\n+//Создать класс Товар, поля:\n+//•name(строка)\n+//•id(целое число)\n+//•price(целое число)\n+\n+public class Product {\n+  private String name;\n+  private int id;\n+  private int price;\n+\n+  Product() {\n+    setId((int) (Math.random() * 10 + 1));\n+    setName(\"Чипсы\");\n+    setPrice((int) (Math.random() * 8 + 1));\n+  }\n+\n+  Product(String name, int id, int price) {\n+    setName(name);\n+    setId(id);\n+    setPrice(price);\n+  }\n+\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+  public String getName() {\n+    return name;\n+  }\n+\n+  public void setId(int id) {\n+    this.id = id;\n+  }\n+\n+  public int getId() {\n+    return id;\n+  }\n+\n+  public void setPrice(int price) {\n+    this.price = price;\n+  }\n+\n+  public int getPrice() {\n+    return price;\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "88da623ee3603a3936ecbcfd56691235e201eecd",
    "filename": "src/com/tms/lesson13/additional/shop/Shop.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/additional/shop/Shop.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/additional/shop/Shop.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/additional/shop/Shop.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,91 @@\n+package com.tms.lesson13.additional.shop;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+// Дополнительное задание lesson13 \"Магазин\".\n+// Создать класс Магазин, поля:\n+//•Список товаров (изначально пустой)\n+//методы:\n+//•добавить товар(принимает объект товара и добавляет его в список товаров). При попытке добавить товар с id уже существующем в списке, вставка производится не должна\n+//•получить все товары(метод ВОЗВРАЩАЕТ список всех товаров в магазине)\n+//•удалить товар (метод принимает id товара и удаляет из списка товар с соответствующим id)\n+//•редактировать товар(принимает объект товара и редактирует им список товаров)\n+\n+public class Shop {\n+  List<Product> productsList = new ArrayList<>();\n+\n+  public void setProductInList(Product product) {\n+    boolean setPermission = true;\n+    for (Product value : productsList) {\n+      if (product.getId() == value.getId()) {\n+        System.out.println(\"Товар с ID \" + product.getId() + \" уже есть в магазаине! (введидите другой ID и повторите попытку)\\n\");\n+        setPermission = false;\n+        break;\n+      }\n+    }\n+    if (setPermission) {\n+      productsList.add(product);\n+    }\n+  }\n+\n+  public List<Product> getProductsList() {\n+    return productsList;\n+  }\n+\n+  public void removeProduct(int id) {\n+    for (int i = 0; i < productsList.size(); i++) {\n+      if (productsList.get(i).getId() == id) {\n+        productsList.remove(i);\n+      }\n+    }\n+  }\n+\n+  public void editProduct(Product product, String name, int price, int id) {\n+    boolean success = false;\n+    String tempName = product.getName();\n+    for (Product value : getProductsList()) {\n+      if (product.getId() == value.getId()) {\n+        product.setName(name);\n+        product.setPrice(price);\n+        product.setId(id);\n+        success = true;\n+        break;\n+      }\n+    }\n+    if (success) {\n+      System.out.println(\"Товар \" + tempName + \" успешно отредактирован! теперь это \" + product.getName() + \"!\\n\");\n+    } else {\n+      System.out.println(\"В списке нет такого товара(\\n\");\n+    }\n+  }\n+\n+  public void sortProductsListByPrice() {\n+    List<Product> sortedList = getProductsList();\n+    for (int i = 0; i < sortedList.size() - 1; i++) {\n+      for (int j = 0; j < sortedList.size() - 1 - i; j++) {\n+        if (sortedList.get(j).getPrice() > sortedList.get(j + 1).getPrice()) {\n+          Product temp = sortedList.get(j);\n+          sortedList.set(j, sortedList.get(j + 1));\n+          sortedList.set(j + 1, temp);\n+        }\n+      }\n+    }\n+  }\n+\n+  public void sortProductsListByAdded() {\n+    List<Product> sortedList = getProductsList();\n+    for (int i = 0; i < sortedList.size() / 2; i++) {\n+      Product temp = sortedList.get(i);\n+      sortedList.set(i, sortedList.get(sortedList.size() - 1 - i));\n+      sortedList.set(sortedList.size() - 1 - i, temp);\n+    }\n+  }\n+\n+  public void printProductsList() {\n+    for (Product product : getProductsList()) {\n+      System.out.println(\"Название продута: \" + product.getName() + \", ID: \" + product.getId() + \", цена: \"\n+              + product.getPrice() + \"$\");\n+    }\n+    System.out.println();\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "cf98e0788d2829c7ca16c0474a9996a83708293d",
    "filename": "src/com/tms/lesson13/additional/shop/ShopRunner.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/additional/shop/ShopRunner.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/additional/shop/ShopRunner.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/additional/shop/ShopRunner.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,40 @@\n+package com.tms.lesson13.additional.shop;\n+\n+//В main:\n+//•создаем объект магазина\n+//•создаем пару тройку товаров и добавляем эти товары в магазин\n+//•получаем список товаров из магазина, сортируем по цене(по возрастанию) и выводим в консоль.\n+//•удаляем один товар\n+//•получаем список товаров из магазина, сортируем по порядку добавления(последние добавленные в начале) и выводим в консоль.\n+//•редактируем один товар\n+//•получаем список товаров и выводим в консоль\n+\n+public class ShopRunner {\n+  public static void main(String[] args) {\n+    Shop shop = new Shop();\n+    Product chips = new Product();\n+    Product beer = new Product(\"Пиво\", 33, 9);\n+    Product bread = new Product(\"Хлеб\", 21, 5);\n+    Product breadTwo = new Product(\"Батон\", 21, 3);\n+    Product juice = new Product(\"Сок\", 67, 7);\n+\n+    shop.setProductInList(chips);\n+    shop.setProductInList(beer);\n+    shop.setProductInList(bread);\n+    shop.setProductInList(breadTwo);\n+    shop.setProductInList(juice);\n+    shop.printProductsList();\n+\n+    shop.sortProductsListByPrice();\n+    shop.printProductsList();\n+\n+    shop.removeProduct(21);\n+    shop.printProductsList();\n+\n+    shop.sortProductsListByAdded();\n+    shop.printProductsList();\n+\n+    shop.editProduct(juice, \"Газировка\", 3, 44);\n+    shop.printProductsList();\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "49210aa3b33218ff5df2ffe4215528246f945fbf",
    "filename": "src/com/tms/lesson13/task29/ListOfGrades.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task29/ListOfGrades.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task29/ListOfGrades.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/task29/ListOfGrades.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,57 @@\n+package com.tms.lesson13.task29;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+//Задание №29 из методички №3. Создать список оценок учеников с помощью ArrayList, заполнить случайными\n+//оценками. Удалить неудовлетворительные оценки из списка.\n+\n+public class ListOfGrades {\n+  private int numberOfStudents;\n+  private int numberOfPoorStudents = 0;\n+  private List<Student> gradesList = new ArrayList<>();\n+\n+  public void setNumberOfStudents(int numberOfStudents) {\n+    this.numberOfStudents = numberOfStudents;\n+  }\n+\n+  public int getNumberOfStudents() {\n+    return numberOfStudents;\n+  }\n+\n+  public List<Student> getGradesList() {\n+    return gradesList;\n+  }\n+\n+  public void setGradesInList() {\n+    System.out.println(\"Оценки ученикам выставляются по десятибальной шкале.\");\n+    for (int i = 0; i < getNumberOfStudents(); i++) {\n+      int grade = (int) (Math.random() * 10 + 1);\n+      gradesList.add(new Student(\"Ученик №\" + (i + 1), grade));\n+    }\n+  }\n+\n+  public void printListOfGrades() {\n+    for (Student student : gradesList) {\n+      System.out.print(student.getName() + \", оценка: \" + student.getGrade());\n+      if (student.getGrade() <= 3) {\n+        System.out.print(\" - неуд!\");\n+        numberOfPoorStudents++;\n+      }\n+      System.out.println();\n+    }\n+    System.out.println();\n+  }\n+\n+  public void deleteBadGrades() {\n+    while (numberOfPoorStudents > 0) {\n+      for (int i = 0; i < gradesList.size(); i++) {\n+        if (gradesList.get(i).getGrade() <= 3) {\n+          gradesList.remove(i);\n+          numberOfPoorStudents--;\n+        }\n+      }\n+    }\n+    System.out.println(\"Отчисление непутевых учеников выполнено успешно!\\n\");\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b2c76a25f8811169b6f8d7c66176d6034c983b0d",
    "filename": "src/com/tms/lesson13/task29/ListOfGradesRunner.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task29/ListOfGradesRunner.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task29/ListOfGradesRunner.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/task29/ListOfGradesRunner.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,12 @@\n+package com.tms.lesson13.task29;\n+\n+public class ListOfGradesRunner {\n+  public static void main(String[] args) {\n+    ListOfGrades list = new ListOfGrades();\n+    list.setNumberOfStudents(10);\n+    list.setGradesInList();\n+    list.printListOfGrades();\n+    list.deleteBadGrades();\n+    list.printListOfGrades();\n+  }\n+}"
  },
  {
    "sha": "35c19d964e2833d59e5ced735f1c302b5f0ee1be",
    "filename": "src/com/tms/lesson13/task29/Student.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task29/Student.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task29/Student.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/task29/Student.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,27 @@\n+package com.tms.lesson13.task29;\n+\n+public class Student {\n+  private String name;\n+  private int grade;\n+\n+  Student(String name, int grade) {\n+    this.name = name;\n+    this.grade = grade;\n+  }\n+\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+  public String getName() {\n+    return name;\n+  }\n+\n+  public void setGrade(int grade) {\n+    this.grade = grade;\n+  }\n+\n+  public int getGrade() {\n+    return grade;\n+  }\n+}"
  },
  {
    "sha": "f5732aeb307917954ffe414e009db5ed8938483b",
    "filename": "src/com/tms/lesson13/task30/CollectionOfRandomNumbers.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task30/CollectionOfRandomNumbers.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task30/CollectionOfRandomNumbers.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/task30/CollectionOfRandomNumbers.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,37 @@\n+package com.tms.lesson13.task30;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+//Задание №30 из методички №3. Создать коллекцию, наполнить ее случайными числами. Удалить повторяющиеся числа.\n+\n+public class CollectionOfRandomNumbers {\n+  private final List<Integer> randomNumbersList = new ArrayList<>();\n+\n+  public void setRandomNumbersInList() {\n+    int randomNumber = (int) (Math.random() * 30);\n+    for (int i = 0; i < randomNumber; i++) {\n+      int rand = (int) (Math.random() * 10);\n+      randomNumbersList.add(i, rand);\n+    }\n+    System.out.println(\"Коллекция заполнена рандомными числами!\");\n+  }\n+\n+  public void printRandomNumbersList() {\n+    for (int x : randomNumbersList) {\n+      System.out.print(x + \" \");\n+    }\n+    System.out.println();\n+  }\n+\n+  public void deleteSameNumbersInList() {\n+    for (int i = 0; i < randomNumbersList.size(); i++) {\n+      for (int j = i; j < randomNumbersList.size() - 1; j++) {\n+        if (randomNumbersList.get(i).equals(randomNumbersList.get(j + 1))) {\n+          randomNumbersList.remove(j + 1);\n+          j--;\n+        }\n+      }\n+    }\n+    System.out.println(\"Элементы с одинаковыми значениями удалены!\");\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "1159632fdfe76bb38835a1424aec6193e719106b",
    "filename": "src/com/tms/lesson13/task30/Runner.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task30/Runner.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task30/Runner.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/task30/Runner.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,11 @@\n+package com.tms.lesson13.task30;\n+\n+public class Runner {\n+  public static void main(String[] args) {\n+    CollectionOfRandomNumbers list = new CollectionOfRandomNumbers();\n+    list.setRandomNumbersInList();\n+    list.printRandomNumbersList();\n+    list.deleteSameNumbersInList();\n+    list.printRandomNumbersList();\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "695aaa90ae023776aa5d4fa3d401e84c97a4e6e4",
    "filename": "src/com/tms/lesson13/task31/BestsOfGrades.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task31/BestsOfGrades.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task31/BestsOfGrades.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/task31/BestsOfGrades.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,53 @@\n+package com.tms.lesson13.task31;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.ListIterator;\n+\n+//Задание №31 из методички №3. Создать список оценок учеников с помощью ArryList, заполнить случайными\n+//оценками. Найти самую высокую оценку с использованием итератора.\n+\n+public class BestsOfGrades {\n+  private final List<Student> gradesList = new ArrayList<>();\n+\n+  public void setGradesInList() {\n+    System.out.println(\"Оценки ученикам выставляются по десятибальной шкале.\");\n+    int randomNumber = (int) (Math.random() * 10 + 5);\n+    for (int i = 0; i < randomNumber; i++) {\n+      int grade = (int) (Math.random() * 10 + 1);\n+      gradesList.add(new Student(\"Ученик №\" + (i + 1), grade));\n+    }\n+  }\n+\n+  public void printListOfGrades() {\n+    for (Student student : gradesList) {\n+      System.out.println(student.getName() + \" - оценка: \" + student.getGrade());\n+    }\n+    System.out.println();\n+  }\n+\n+  public void getBestGrades() {\n+    ListIterator<Student> iterator = gradesList.listIterator();\n+    List<Student> bestStudents = new ArrayList<>();\n+    int maxGrade = 0;\n+\n+    while (iterator.hasNext()) {\n+      Student tempOne = iterator.next();\n+      if (maxGrade < tempOne.getGrade()) {\n+        maxGrade = tempOne.getGrade();\n+      }\n+    }\n+\n+    while (iterator.hasPrevious()) {\n+      Student tempTwo = iterator.previous();\n+      if (maxGrade == tempTwo.getGrade()) {\n+        bestStudents.add(tempTwo);\n+      }\n+    }\n+\n+    System.out.println(\"Лучшие ученик(и) школы:\");\n+\n+    for (Student student : bestStudents) {\n+      System.out.println(student.getName() + \" - оценка: \" + student.getGrade());\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "7d1ecd60288cef0c604bed4c86cd14d80e480a14",
    "filename": "src/com/tms/lesson13/task31/Runner.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task31/Runner.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task31/Runner.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/task31/Runner.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,10 @@\n+package com.tms.lesson13.task31;\n+\n+public class Runner {\n+  public static void main(String[] args) {\n+    BestsOfGrades list = new BestsOfGrades();\n+    list.setGradesInList();\n+    list.printListOfGrades();\n+    list.getBestGrades();\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "3183c47531effd1239fb92b1d38cc6a4ffaaed27",
    "filename": "src/com/tms/lesson13/task31/Student.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task31/Student.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task31/Student.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/task31/Student.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,27 @@\n+package com.tms.lesson13.task31;\n+\n+public class Student {\n+  private String name;\n+  private int grade;\n+\n+  Student(String name, int grade) {\n+    this.name = name;\n+    this.grade = grade;\n+  }\n+\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+  public String getName() {\n+    return name;\n+  }\n+\n+  public void setGrade(int grade) {\n+    this.grade = grade;\n+  }\n+\n+  public int getGrade() {\n+    return grade;\n+  }\n+}"
  },
  {
    "sha": "77938e19ddcb19f81907b06d4be0c7730b0bdf58",
    "filename": "src/com/tms/lesson13/task32/FrequencyDictionary.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task32/FrequencyDictionary.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task32/FrequencyDictionary.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/task32/FrequencyDictionary.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,29 @@\n+package com.tms.lesson13.task32;\n+import java.util.LinkedHashMap;\n+import java.util.StringTokenizer;\n+\n+//Задание №32 из методички №3. Имеется текст. Следует составить для него частотный словарь.\n+\n+public class FrequencyDictionary {\n+  public String someText = \"Как Как Как говорится  говорится, палец не палец, стрекоза не мать! Почешешь - не засмеётся! Я \" +\n+          \"восемнадцать лет уже работаю в службах внутренних органов, и все восемнадцать лет ещё такого \" +\n+          \"у меня не было, чтобы я начал чего-то делать.\";\n+  LinkedHashMap<String, Integer> dictionary = new LinkedHashMap<>();\n+  StringTokenizer findWords = new StringTokenizer(someText, \" -,.;:()!\");\n+\n+  public void setWordsInDictionary() {\n+    while (findWords.hasMoreTokens()) {\n+      String word = findWords.nextToken();\n+      if (dictionary.containsKey(word)) {\n+        int tempValue = dictionary.get(word);\n+        dictionary.put(word, ++tempValue);\n+      } else {\n+        dictionary.put(word, 1);\n+      }\n+    }\n+  }\n+\n+  public void printDictionary() {\n+    System.out.println(dictionary);\n+  }\n+}"
  },
  {
    "sha": "2938bfd769ecf25c691606616a1f442b16911e0e",
    "filename": "src/com/tms/lesson13/task32/Runner.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/JonDorian/JavaHomework/blob/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task32/Runner.java",
    "raw_url": "https://github.com/JonDorian/JavaHomework/raw/043585ed5c802c821150c97db0df9b237c02b84b/src/com/tms/lesson13/task32/Runner.java",
    "contents_url": "https://api.github.com/repos/JonDorian/JavaHomework/contents/src/com/tms/lesson13/task32/Runner.java?ref=043585ed5c802c821150c97db0df9b237c02b84b",
    "patch": "@@ -0,0 +1,9 @@\n+package com.tms.lesson13.task32;\n+\n+public class Runner {\n+  public static void main(String[] args) {\n+    FrequencyDictionary dictionary = new FrequencyDictionary();\n+    dictionary.setWordsInDictionary();\n+    dictionary.printDictionary();\n+  }\n+}\n\\ No newline at end of file"
  }
]
