[
  {
    "sha": "5d67691fe27eae38522ed4abedb9e9c2f1bbd84a",
    "filename": "EssentialsDiscord/README.md",
    "status": "modified",
    "additions": 0,
    "deletions": 7,
    "changes": 7,
    "blob_url": "https://github.com/EssentialsX/Essentials/blob/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/README.md",
    "raw_url": "https://github.com/EssentialsX/Essentials/raw/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/README.md",
    "contents_url": "https://api.github.com/repos/EssentialsX/Essentials/contents/EssentialsDiscord/README.md?ref=34f0b2716c5c47b01b39ba986fb2b1da032ac9c1",
    "patch": "@@ -243,13 +243,6 @@ them.\n     would allow people in the same channel as you to see exactly what command you execute. In the example below,\n     you can see how disabling this option shows a message of the user and the command they executed.`\n   * Example: ![Show Command](https://i.imgur.com/Q61iP4n.gif)\n-* `hide-response`\n-  * Default: `true`\n-  * Description: `Whether other people should not be able to see the reponse of commands you execute. Setting to\n-    false would allow people in the same channel as you to see all the reponses to the commands you execute. In\n-    the example below, you can see how disabling this option shows the command reponses as normal messages and\n-    the option to \"Dismiss this Message\" goes away.`\n-  * Example: ![Show Response](https://i.imgur.com/yHVOYR0.gif)\n * `allowed-roles`\n   * Description: `A list of user ids or role names/ids that are allowed to use the command. You can also use '*'\n     in order to allow everyone to use the command.`"
  },
  {
    "sha": "079f23ef9e351be1eba81b4a08ecc3c3172e63db",
    "filename": "EssentialsDiscord/src/main/java/net/essentialsx/discord/DiscordSettings.java",
    "status": "modified",
    "additions": 1,
    "deletions": 5,
    "changes": 6,
    "blob_url": "https://github.com/EssentialsX/Essentials/blob/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/java/net/essentialsx/discord/DiscordSettings.java",
    "raw_url": "https://github.com/EssentialsX/Essentials/raw/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/java/net/essentialsx/discord/DiscordSettings.java",
    "contents_url": "https://api.github.com/repos/EssentialsX/Essentials/contents/EssentialsDiscord/src/main/java/net/essentialsx/discord/DiscordSettings.java?ref=34f0b2716c5c47b01b39ba986fb2b1da032ac9c1",
    "patch": "@@ -123,12 +123,8 @@ public boolean isCommandEnabled(String command) {\n         return config.getBoolean(\"commands.\" + command + \".enabled\", true);\n     }\n \n-    public boolean isCommandConsumed(String command) {\n-        return config.getBoolean(\"commands.\" + command + \".hide-command\", true);\n-    }\n-\n     public boolean isCommandEphemeral(String command) {\n-        return config.getBoolean(\"commands.\" + command + \".hide-response\", true);\n+        return config.getBoolean(\"commands.\" + command + \".hide-command\", true);\n     }\n \n     public List<String> getCommandSnowflakes(String command) {"
  },
  {
    "sha": "2c580515293f2c3610eff4bd0c44e84d3268c0ef",
    "filename": "EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/InteractionController.java",
    "status": "modified",
    "additions": 13,
    "deletions": 12,
    "changes": 25,
    "blob_url": "https://github.com/EssentialsX/Essentials/blob/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/InteractionController.java",
    "raw_url": "https://github.com/EssentialsX/Essentials/raw/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/InteractionController.java",
    "contents_url": "https://api.github.com/repos/EssentialsX/Essentials/contents/EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/InteractionController.java?ref=34f0b2716c5c47b01b39ba986fb2b1da032ac9c1",
    "patch": "@@ -44,7 +44,7 @@ public InteractionController(EssentialsJDA jda) {\n         this.jda = jda;\n         this.apiRegister = \"https://discord.com/api/v8/applications/\" + jda.getJda().getSelfUser().getId() + \"/guilds/\" + jda.getGuild().getId() + \"/commands\";\n         this.apiDelete = \"https://discord.com/api/v8/applications/\" + jda.getJda().getSelfUser().getId() + \"/guilds/\" + jda.getGuild().getId() + \"/commands/{id}\";\n-        this.apiFollowup = \"https://discord.com/api/webhooks/\" + jda.getJda().getSelfUser().getId() + \"/{token}\";\n+        this.apiFollowup = \"https://discord.com/api/webhooks/\" + jda.getJda().getSelfUser().getId() + \"/{token}/messages/@original\";\n \n         jda.getJda().addEventListener(this);\n     }\n@@ -71,7 +71,7 @@ public void onRawGateway(@NotNull RawGatewayEvent event) {\n             try {\n                 final InteractionCommand command = commandMap.get(data.getString(\"name\"));\n                 final Response response = post(apiCallback.replace(\"{id}\", id).replace(\"{token}\", token),\n-                        command.isConsume() ? DiscordUtil.ACK_CONSUME : DiscordUtil.ACK_SEND).execute();\n+                        command.isEphemeral() ? DiscordUtil.ACK_DEFER_EPHEMERAL : DiscordUtil.ACK_DEFER).execute();\n                 if (!response.isSuccessful()) {\n                     //noinspection ConstantConditions\n                     logger.info(\"Error while responding to interaction: \" + response.body().string());\n@@ -81,7 +81,7 @@ public void onRawGateway(@NotNull RawGatewayEvent event) {\n \n                 final Member member = jda.getGuild().retrieveMemberById(payload.getObject(\"member\").getObject(\"user\").getString(\"id\")).complete();\n                 jda.getPlugin().getEss().scheduleSyncDelayedTask(() ->\n-                        command.onPreCommand(new InteractionEvent(member, token, channelId, options, InteractionController.this, command.isEphemeral())));\n+                        command.onPreCommand(new InteractionEvent(member, token, channelId, options, InteractionController.this)));\n             } catch (IOException e) {\n                 logger.severe(\"Error while responding to interaction: \" + e.getMessage());\n                 if (jda.isDebug()) {\n@@ -94,22 +94,17 @@ public void onRawGateway(@NotNull RawGatewayEvent event) {\n     /**\n      * Sends a message in response to a user who created an interaction.\n      *\n-     * @param interactionToken   The authorization token of the interaction.\n-     * @param message            The message to be sent.\n-     * @param isCommandEphemeral Whether the command should be sent as client-side only.\n+     * @param interactionToken The authorization token of the interaction.\n+     * @param message          The message to be sent.\n      */\n-    public void sendInteractionMessage(String interactionToken, String message, boolean isCommandEphemeral) {\n+    public void editInteractionResponse(String interactionToken, String message) {\n         message = FormatUtil.stripFormat(message).replace(\"ยง\", \"\"); // Don't ask\n \n         final JsonObject body = new JsonObject();\n-        body.addProperty(\"type\", 3);\n         body.addProperty(\"content\", message);\n         body.add(\"allowed_mentions\", DiscordUtil.RAW_NO_GROUP_MENTIONS);\n-        if (isCommandEphemeral) {\n-            body.addProperty(\"flags\", 1 << 6);\n-        }\n \n-        post(apiFollowup.replace(\"{token}\", interactionToken), RequestBody.create(DiscordUtil.JSON_TYPE, body.toString())).enqueue(new Callback() {\n+        patch(apiFollowup.replace(\"{token}\", interactionToken), RequestBody.create(DiscordUtil.JSON_TYPE, body.toString())).enqueue(new Callback() {\n             @Override\n             public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {\n                 if (!response.isSuccessful()) {\n@@ -180,6 +175,12 @@ public void shutdown() {\n         commandMap.clear();\n     }\n \n+    private Call patch(String url, RequestBody body) {\n+        return jda.getJda().getHttpClient().newCall(builder(url)\n+                .patch(body)\n+                .build());\n+    }\n+\n     private Call post(String url, RequestBody body) {\n         return jda.getJda().getHttpClient().newCall(builder(url)\n                 .post(body)"
  },
  {
    "sha": "04cc2430891171ea811da200864bb038345c0afc",
    "filename": "EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/command/InteractionCommand.java",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/EssentialsX/Essentials/blob/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/command/InteractionCommand.java",
    "raw_url": "https://github.com/EssentialsX/Essentials/raw/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/command/InteractionCommand.java",
    "contents_url": "https://api.github.com/repos/EssentialsX/Essentials/contents/EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/command/InteractionCommand.java?ref=34f0b2716c5c47b01b39ba986fb2b1da032ac9c1",
    "patch": "@@ -26,10 +26,6 @@ public final boolean isEnabled() {\n         return jda.getSettings().isCommandEnabled(name);\n     }\n \n-    public final boolean isConsume() {\n-        return jda.getSettings().isCommandConsumed(name);\n-    }\n-\n     public final boolean isEphemeral() {\n         return jda.getSettings().isCommandEphemeral(name);\n     }"
  },
  {
    "sha": "9ac1a7506c1307ccc537a04c8b97f9ec90cb2178",
    "filename": "EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/command/InteractionEvent.java",
    "status": "modified",
    "additions": 7,
    "deletions": 4,
    "changes": 11,
    "blob_url": "https://github.com/EssentialsX/Essentials/blob/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/command/InteractionEvent.java",
    "raw_url": "https://github.com/EssentialsX/Essentials/raw/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/command/InteractionEvent.java",
    "contents_url": "https://api.github.com/repos/EssentialsX/Essentials/contents/EssentialsDiscord/src/main/java/net/essentialsx/discord/interactions/command/InteractionEvent.java?ref=34f0b2716c5c47b01b39ba986fb2b1da032ac9c1",
    "patch": "@@ -1,30 +1,33 @@\n package net.essentialsx.discord.interactions.command;\n \n+import com.google.common.base.Joiner;\n import net.dv8tion.jda.api.entities.Member;\n import net.dv8tion.jda.api.utils.data.DataArray;\n import net.essentialsx.discord.interactions.InteractionController;\n \n+import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.List;\n \n public class InteractionEvent {\n     private final Member member;\n     private final String token;\n     private final String channelId;\n     private final DataArray options;\n     private final InteractionController controller;\n-    private final boolean isCommandEphemeral;\n+    private final List<String> replyBuffer = new ArrayList<>();\n \n-    public InteractionEvent(Member member, String token, String channelId, DataArray options, InteractionController controller, boolean isCommandEphemeral) {\n+    public InteractionEvent(Member member, String token, String channelId, DataArray options, InteractionController controller) {\n         this.member = member;\n         this.token = token;\n         this.channelId = channelId;\n         this.options = options;\n         this.controller = controller;\n-        this.isCommandEphemeral = isCommandEphemeral;\n     }\n \n     public void reply(String message) {\n-        controller.sendInteractionMessage(token, message, isCommandEphemeral);\n+        replyBuffer.add(message);\n+        controller.editInteractionResponse(token, Joiner.on('\\n').join(replyBuffer));\n     }\n \n     public Member getMember() {"
  },
  {
    "sha": "63478f38c119aa7250e76fee599407f9b6b58f4a",
    "filename": "EssentialsDiscord/src/main/java/net/essentialsx/discord/util/DiscordUtil.java",
    "status": "modified",
    "additions": 8,
    "deletions": 3,
    "changes": 11,
    "blob_url": "https://github.com/EssentialsX/Essentials/blob/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/java/net/essentialsx/discord/util/DiscordUtil.java",
    "raw_url": "https://github.com/EssentialsX/Essentials/raw/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/java/net/essentialsx/discord/util/DiscordUtil.java",
    "contents_url": "https://api.github.com/repos/EssentialsX/Essentials/contents/EssentialsDiscord/src/main/java/net/essentialsx/discord/util/DiscordUtil.java?ref=34f0b2716c5c47b01b39ba986fb2b1da032ac9c1",
    "patch": "@@ -26,8 +26,9 @@\n     public final static List<Message.MentionType> NO_GROUP_MENTIONS;\n     public final static JsonObject RAW_NO_GROUP_MENTIONS;\n     public final static MediaType JSON_TYPE = MediaType.parse(\"application/json; charset=utf-8\");\n-    public final static RequestBody ACK_CONSUME = RequestBody.create(JSON_TYPE, \"{\\\"type\\\": 2}\");\n-    public final static RequestBody ACK_SEND = RequestBody.create(JSON_TYPE, \"{\\\"type\\\": 5}\");\n+    public final static int EPHEMERAL_FLAG = 1 << 6;\n+    public final static RequestBody ACK_DEFER = RequestBody.create(JSON_TYPE, \"{\\\"type\\\": 5}\");\n+    public final static RequestBody ACK_DEFER_EPHEMERAL = RequestBody.create(JSON_TYPE, \"{\\\"type\\\": 5, \\\"data\\\":{\\\"flags\\\": \" + EPHEMERAL_FLAG + \"}}\");\n \n     private final static String WEBHOOK_NAME = \"EssX Console Relay\";\n \n@@ -49,6 +50,7 @@ private DiscordUtil() {\n \n     /**\n      * Creates a {@link WebhookClient}.\n+     *\n      * @param id     The id of the webhook.\n      * @param token  The token of the webhook.\n      * @param client The http client of the webhook.\n@@ -64,6 +66,7 @@ public static WebhookClient getWebhookClient(long id, String token, OkHttpClient\n \n     /**\n      * Gets the webhook to be used for console relay or null if permissions are not available.\n+     *\n      * @param consoleChannel The channel to search for webhooks in.\n      * @return The webhook to be used for console relay or null if unavailable.\n      */\n@@ -97,6 +100,7 @@ public static Webhook getAndCleanWebhook(TextChannel consoleChannel) {\n \n     /**\n      * Gets the uppermost bukkit color code of a given member or an empty string if the server version is &lt; 1.16.\n+     *\n      * @param member The target member.\n      * @return The bukkit color code or blank string.\n      */\n@@ -111,6 +115,7 @@ public static String getRoleColorFormat(Member member) {\n \n     /**\n      * Checks is the supplied user has at least one of the supplied roles.\n+     *\n      * @param member          The member to check.\n      * @param roleDefinitions A list with either the name or id of roles.\n      * @return true if member has role.\n@@ -128,7 +133,7 @@ public static boolean hasRoles(Member member, List<String> roleDefinitions) {\n                 return true;\n             }\n \n-            for (final Role role : roles){\n+            for (final Role role : roles) {\n                 if (role.getId().equals(roleDefinition) || role.getName().equalsIgnoreCase(roleDefinition)) {\n                     return true;\n                 }"
  },
  {
    "sha": "88f910808b8aa9e90cc1c71e80ca6dbbb4b68ae7",
    "filename": "EssentialsDiscord/src/main/resources/config.yml",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/EssentialsX/Essentials/blob/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/resources/config.yml",
    "raw_url": "https://github.com/EssentialsX/Essentials/raw/34f0b2716c5c47b01b39ba986fb2b1da032ac9c1/EssentialsDiscord/src/main/resources/config.yml",
    "contents_url": "https://api.github.com/repos/EssentialsX/Essentials/contents/EssentialsDiscord/src/main/resources/config.yml?ref=34f0b2716c5c47b01b39ba986fb2b1da032ac9c1",
    "patch": "@@ -99,11 +99,8 @@ commands:\n     # You must restart your server after changing this\n     enabled: true\n     # Whether or not the command should be hidden from other people in the channel\n-    # If set to false, members of the discord will be able to see the exact command you executed\n+    # If set to false, members of the discord will be able to see the exact command you executed as well as its response\n     hide-command: true\n-    # Whether or not the command response should be hidden from other people in the channel\n-    # If set to false, members of the discord will be able to the output of commands you execute\n-    hide-response: true\n     # List of user ids or role names/ids allowed to use this command (or * to allow anyone to access it)\n     allowed-roles:\n       - \"Admins\"\n@@ -130,7 +127,7 @@ commands:\n     # You must restart your server after changing this\n     enabled: true\n     # Whether or not the command should be hidden from other people in the channel\n-    # If set to false, members of the discord will be able to see when you use this command\n+    # If set to false, members of the discord will be able to see when you use this command as well as its response\n     hide-command: true\n     # List of user ids or role names/ids allowed to use this command (or '*' to allow anyone to access it)\n     allowed-roles:"
  }
]
