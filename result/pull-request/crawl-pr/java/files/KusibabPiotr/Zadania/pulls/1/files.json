[
  {
    "sha": "046888ed6786a8db9e7cd4003df2fb840134df42",
    "filename": ".gradle/6.3/executionHistory/executionHistory.bin",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/executionHistory/executionHistory.bin",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/executionHistory/executionHistory.bin",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/.gradle/6.3/executionHistory/executionHistory.bin?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5"
  },
  {
    "sha": "750942f3289d4ac3e44882749157eba05d0ab3db",
    "filename": ".gradle/6.3/executionHistory/executionHistory.lock",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/executionHistory/executionHistory.lock",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/executionHistory/executionHistory.lock",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/.gradle/6.3/executionHistory/executionHistory.lock?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5"
  },
  {
    "sha": "1f3624a630a1a0ffc57e03a8b2fd4006aa6e743c",
    "filename": ".gradle/6.3/fileHashes/fileHashes.bin",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/fileHashes/fileHashes.bin",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/fileHashes/fileHashes.bin",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/.gradle/6.3/fileHashes/fileHashes.bin?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5"
  },
  {
    "sha": "14d58b5861dc9ca05e2e15199d8328a7da5e2dec",
    "filename": ".gradle/6.3/fileHashes/fileHashes.lock",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/fileHashes/fileHashes.lock",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/fileHashes/fileHashes.lock",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/.gradle/6.3/fileHashes/fileHashes.lock?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5"
  },
  {
    "sha": "014903e17cba093f698370e49aaabb8ce78123e6",
    "filename": ".gradle/6.3/javaCompile/classAnalysis.bin",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/javaCompile/classAnalysis.bin",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/javaCompile/classAnalysis.bin",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/.gradle/6.3/javaCompile/classAnalysis.bin?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5"
  },
  {
    "sha": "45fef0e7efd48514ec40ed60d031176c83f129d8",
    "filename": ".gradle/6.3/javaCompile/javaCompile.lock",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/javaCompile/javaCompile.lock",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/6.3/javaCompile/javaCompile.lock",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/.gradle/6.3/javaCompile/javaCompile.lock?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5"
  },
  {
    "sha": "c711b827fe4cb1ffb757d5c46abc9328d91f3654",
    "filename": ".gradle/buildOutputCleanup/buildOutputCleanup.lock",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/buildOutputCleanup/buildOutputCleanup.lock",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/.gradle/buildOutputCleanup/buildOutputCleanup.lock",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/.gradle/buildOutputCleanup/buildOutputCleanup.lock?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5"
  },
  {
    "sha": "6d602d03bf48b9831aff74a851b7f2961fe35fd6",
    "filename": "src/main/java/cleanCode/challenges/food2door/Main.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/Main.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/Main.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/Main.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,28 @@\n+package cleanCode.challenges.food2door;\n+\n+import cleanCode.challenges.food2door.entities.Producer;\n+import cleanCode.challenges.food2door.entities.Product;\n+import cleanCode.challenges.food2door.orderService.EmailOrder;\n+import cleanCode.challenges.food2door.orderService.ProcessOrder;\n+import cleanCode.challenges.food2door.orderService.TraditionalOrder;\n+import cleanCode.challenges.food2door.paymentService.BankPayment;\n+import cleanCode.challenges.food2door.paymentService.CashPayment;\n+import cleanCode.challenges.food2door.paymentService.PayPalPayment;\n+\n+public class Main {\n+    public static void main(String[] args) {\n+\n+        Producer producer = new Producer(\"ExtraFoodShop\", \"Gnojna 13\", \"756234123\", \"4454 6765 5454 4532\",\"ExtraFoodShop@op.pl\",new Product(\"Organiczne jab≈Çka\", 1000),\"ExtraFoodShopPAYPAL\");\n+        Producer producer2 = new Producer(\"HealthyShop\", \"Dymna 131\", \"733876765\",\"4454 9999 5454 7676\",\"HealthyShop@op.pl\", new Product(\"Organiczne super gruszki\", 1500),\"HealthyShopPAYPAL\");\n+        Producer producer3 = new Producer(\"GlutenFreeShop\", \"Stara 19\", \"512765278\",\"4454 6567 5454 8776\",\"GlutenFreeShop@onet.pl\", new Product(\"Naturalne Grzybki\", 500),\"GlutenFreeShopPAYPAL\");\n+\n+        ProcessOrder processOrder = new ProcessOrder(producer,new BankPayment(),new EmailOrder());\n+        System.out.println(processOrder.process().toString());\n+\n+        ProcessOrder processOrder2 = new ProcessOrder(producer2,new PayPalPayment(),new TraditionalOrder());\n+        System.out.println(processOrder2.process().toString());\n+\n+        ProcessOrder processOrder3 = new ProcessOrder(producer3,new CashPayment(),new EmailOrder());\n+        System.out.println(processOrder3.process().toString());\n+    }\n+}"
  },
  {
    "sha": "a5ec310b93d794d38e353cdbd7e3ecea8c31fd4a",
    "filename": "src/main/java/cleanCode/challenges/food2door/entities/Order.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/entities/Order.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/entities/Order.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/entities/Order.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,42 @@\n+package cleanCode.challenges.food2door.entities;\n+\n+public class Order {\n+\n+    private final Producer producer;\n+    private final Product product;\n+    private final Status orderStatus;\n+\n+    public Order(Producer producer, Product product, Status orderStatus) {\n+        this.producer = producer;\n+        this.product = product;\n+        this.orderStatus = orderStatus;\n+    }\n+\n+    public Producer getProducer() {\n+        return producer;\n+    }\n+\n+    public Product getProduct() {\n+        return product;\n+    }\n+\n+    public Status getOrderStatus() {\n+        return orderStatus;\n+    }\n+\n+    public Order changeOrderStatusToPaid(){\n+        return new Order(producer, product, Status.PAID);\n+    }\n+\n+    public Order changeOrderStatusToSent(){\n+        return new Order(producer, product, Status.SENT);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"product=\" + product.getName() +\n+                \", quantity: \" + product.getQuantity() +\n+                \", orderStatus=\" + orderStatus +\n+                ' ';\n+    }\n+}"
  },
  {
    "sha": "42ba1809b93a25accb69507954ed01b941006427",
    "filename": "src/main/java/cleanCode/challenges/food2door/entities/OrderProducerDto.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/entities/OrderProducerDto.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/entities/OrderProducerDto.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/entities/OrderProducerDto.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,28 @@\n+package cleanCode.challenges.food2door.entities;\n+\n+import cleanCode.challenges.food2door.entities.Order;\n+import cleanCode.challenges.food2door.entities.Producer;\n+\n+public final class OrderProducerDto {\n+\n+    private final Producer producer;\n+    private final Order order;\n+\n+    public OrderProducerDto(Producer producer, Order order) {\n+        this.producer = producer;\n+        this.order = order;\n+    }\n+\n+    public Producer getProducer() {\n+        return producer;\n+    }\n+\n+    public Order getOrder() {\n+        return order;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Waiting for receive order from: \" +producer.getName() + \". We oreded: \" + order + \"\\n\";\n+    }\n+}"
  },
  {
    "sha": "afa6694b37332be924ff8e02aa7e3767efe7cae2",
    "filename": "src/main/java/cleanCode/challenges/food2door/entities/Producer.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/entities/Producer.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/entities/Producer.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/entities/Producer.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,50 @@\n+package cleanCode.challenges.food2door.entities;\n+\n+public class Producer{\n+\n+    private final String name;\n+    private final String address;\n+    private final String phoneNumber;\n+    private final String bankAccountNumber;\n+    private final String email;\n+    private final String payPalAccount;\n+    private final Product product;\n+\n+    public Producer(String name, String address, String phoneNumber, String bankAccountNumber, String email, Product product, String payPalAccount) {\n+        this.name = name;\n+        this.address = address;\n+        this.phoneNumber = phoneNumber;\n+        this.bankAccountNumber = bankAccountNumber;\n+        this.email = email;\n+        this.product = product;\n+        this.payPalAccount = payPalAccount;\n+    }\n+\n+    public String getPayPalAccount() {\n+        return payPalAccount;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public Product getProduct() {\n+        return product;\n+    }\n+\n+    public String getAddress() {\n+        return address;\n+    }\n+\n+    public String getPhoneNumber() {\n+        return phoneNumber;\n+    }\n+\n+    public String getBankAccountNumber() {\n+        return bankAccountNumber;\n+    }\n+\n+    public String getEmail() {\n+        return email;\n+    }\n+}"
  },
  {
    "sha": "9fd15aaadc18711090417d1a4bf2bfbb12ab926f",
    "filename": "src/main/java/cleanCode/challenges/food2door/entities/Product.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/entities/Product.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/entities/Product.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/entities/Product.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,20 @@\n+package cleanCode.challenges.food2door.entities;\n+\n+public final class Product {\n+\n+    private final String name;\n+    private final int quantity;\n+\n+    public Product(final String name,final int quantity) {\n+        this.name = name;\n+        this.quantity = quantity;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public int getQuantity() {\n+        return quantity;\n+    }\n+}"
  },
  {
    "sha": "1c594531741842d9a2ec972262a359c5670247ca",
    "filename": "src/main/java/cleanCode/challenges/food2door/entities/Status.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/entities/Status.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/entities/Status.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/entities/Status.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,19 @@\n+package cleanCode.challenges.food2door.entities;\n+\n+public enum Status {\n+\n+    CREATED(\"CREATED\"),\n+    SENT(\"SENT\"),\n+    PAID(\"PAID\"),\n+    RECEIVED(\"RECEIVED\");\n+\n+    private String description;\n+\n+    Status(String description) {\n+        this.description = description;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+}"
  },
  {
    "sha": "b74d99b43fe19cb465385cce7eed647867cf7828",
    "filename": "src/main/java/cleanCode/challenges/food2door/orderService/EmailOrder.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/orderService/EmailOrder.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/orderService/EmailOrder.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/orderService/EmailOrder.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,13 @@\n+package cleanCode.challenges.food2door.orderService;\n+\n+import cleanCode.challenges.food2door.entities.Order;\n+import cleanCode.challenges.food2door.entities.OrderProducerDto;\n+\n+public class EmailOrder implements OrderService{\n+    @Override\n+    public boolean placeOrder(Order order) {\n+        System.out.println(\"Created new order. It contains: \" + order);\n+        System.out.println(\"Order was send to \" + order.getProducer().getName() + \" to email address: \" + order.getProducer().getEmail());\n+        return true;\n+    }\n+}"
  },
  {
    "sha": "508f5878e198edb3d77fb0a87a6f67786454b811",
    "filename": "src/main/java/cleanCode/challenges/food2door/orderService/OrderService.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/orderService/OrderService.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/orderService/OrderService.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/orderService/OrderService.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,9 @@\n+package cleanCode.challenges.food2door.orderService;\n+\n+import cleanCode.challenges.food2door.entities.Order;\n+import cleanCode.challenges.food2door.entities.OrderProducerDto;\n+\n+public interface OrderService {\n+\n+    boolean placeOrder(Order order);\n+}"
  },
  {
    "sha": "3107130ef731da27042e5ba4bdae39900491b52c",
    "filename": "src/main/java/cleanCode/challenges/food2door/orderService/ProcessOrder.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/orderService/ProcessOrder.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/orderService/ProcessOrder.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/orderService/ProcessOrder.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,41 @@\n+package cleanCode.challenges.food2door.orderService;\n+\n+import cleanCode.challenges.food2door.entities.Order;\n+import cleanCode.challenges.food2door.entities.OrderProducerDto;\n+import cleanCode.challenges.food2door.entities.Producer;\n+import cleanCode.challenges.food2door.entities.Status;\n+import cleanCode.challenges.food2door.orderService.OrderService;\n+import cleanCode.challenges.food2door.paymentService.PaymentService;\n+\n+public final class ProcessOrder {\n+\n+    private final Producer producer;\n+    private final PaymentService paymentService;\n+    private final OrderService orderService;\n+\n+    public ProcessOrder(final Producer producer,final PaymentService paymentService,final OrderService orderService) {\n+        this.producer = producer;\n+        this.paymentService = paymentService;\n+        this.orderService = orderService;\n+    }\n+\n+    public OrderProducerDto process() {\n+\n+        Order order = createOrder();\n+        boolean isConfirmed = orderService.placeOrder(order);\n+        order = order.changeOrderStatusToSent();\n+\n+        if (isConfirmed){\n+            if(paymentService.pay(producer)){\n+                order = order.changeOrderStatusToPaid();\n+            }\n+        }\n+        return new OrderProducerDto(producer,order);\n+    }\n+\n+    private Order createOrder() {\n+\n+        return new Order(producer, producer.getProduct(), Status.CREATED);\n+    }\n+\n+}"
  },
  {
    "sha": "24d8e5b4a8585cc249a0c4759a192db1a5845743",
    "filename": "src/main/java/cleanCode/challenges/food2door/orderService/TraditionalOrder.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/orderService/TraditionalOrder.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/orderService/TraditionalOrder.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/orderService/TraditionalOrder.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,13 @@\n+package cleanCode.challenges.food2door.orderService;\n+\n+import cleanCode.challenges.food2door.entities.Order;\n+import cleanCode.challenges.food2door.entities.OrderProducerDto;\n+\n+public class TraditionalOrder implements OrderService {\n+    @Override\n+    public boolean placeOrder(Order order) {\n+        System.out.println(\"Created new order. It contains: \" + order);\n+        System.out.println(\"Order was send to \" + order.getProducer().getName() + \" to address: \" + order.getProducer().getAddress());\n+        return true;\n+    }\n+}"
  },
  {
    "sha": "9aeec736d74aaa64ba3722086f183c77bee125ee",
    "filename": "src/main/java/cleanCode/challenges/food2door/paymentService/BankPayment.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/paymentService/BankPayment.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/paymentService/BankPayment.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/paymentService/BankPayment.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,14 @@\n+package cleanCode.challenges.food2door.paymentService;\n+\n+import cleanCode.challenges.food2door.entities.Producer;\n+\n+public class BankPayment implements PaymentService {\n+\n+    @Override\n+    public boolean pay(Producer producer) {\n+        System.out.println(\"Transfering money to \" + producer.getName());\n+        System.out.println(\"PayPal account name: \" + producer.getPayPalAccount());\n+        System.out.println(\"Transaction completed\");\n+        return true;\n+    }\n+}"
  },
  {
    "sha": "2ab1618331c72c8cf672b5b7b1239a66cfc00b60",
    "filename": "src/main/java/cleanCode/challenges/food2door/paymentService/CashPayment.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/paymentService/CashPayment.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/paymentService/CashPayment.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/paymentService/CashPayment.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,12 @@\n+package cleanCode.challenges.food2door.paymentService;\n+\n+import cleanCode.challenges.food2door.entities.Producer;\n+\n+public class CashPayment implements PaymentService {\n+\n+    @Override\n+    public boolean pay(Producer producer) {\n+        System.out.println(\"Money will be paid to the supplier upon delivery\");\n+        return false;\n+    }\n+}"
  },
  {
    "sha": "b79d8d04e73d8d5e91b4f8ff149d4e607aa09827",
    "filename": "src/main/java/cleanCode/challenges/food2door/paymentService/PayPalPayment.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/paymentService/PayPalPayment.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/paymentService/PayPalPayment.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/paymentService/PayPalPayment.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,13 @@\n+package cleanCode.challenges.food2door.paymentService;\n+\n+import cleanCode.challenges.food2door.entities.Producer;\n+\n+public class PayPalPayment implements PaymentService{\n+    @Override\n+    public boolean pay(Producer producer) {\n+        System.out.println(\"Transfering money to \" + producer.getName());\n+        System.out.println(\"Account number: \" + producer.getBankAccountNumber());\n+        System.out.println(\"Transaction completed\");\n+        return true;\n+    }\n+}"
  },
  {
    "sha": "a9a2893d91727b4cf28b0a9f0017d1eedfab6447",
    "filename": "src/main/java/cleanCode/challenges/food2door/paymentService/PaymentService.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/paymentService/PaymentService.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/food2door/paymentService/PaymentService.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/food2door/paymentService/PaymentService.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,8 @@\n+package cleanCode.challenges.food2door.paymentService;\n+\n+import cleanCode.challenges.food2door.entities.Producer;\n+\n+public interface PaymentService {\n+\n+    boolean pay(Producer producer);\n+}"
  },
  {
    "sha": "faa77bfe1ecc8162be5d2f98a31a7646803ee250",
    "filename": "src/main/java/cleanCode/challenges/loty/Run.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/Run.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/Run.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/loty/Run.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,17 @@\n+package cleanCode.challenges.loty;\n+\n+import cleanCode.challenges.loty.repository.SystemFlightsRepository;\n+import cleanCode.challenges.loty.services.BookingProcessor;\n+import cleanCode.challenges.loty.services.booking.FlightAirport;\n+import cleanCode.challenges.loty.services.booking.OnlineBooking;\n+import cleanCode.challenges.loty.services.payment.PayPalPayment;\n+\n+public class Run {\n+    public static void main(String[] args) {\n+\n+        BookingProcessor processor = new BookingProcessor(new OnlineBooking(new SystemFlightsRepository()), new PayPalPayment());\n+\n+\n+        processor.process(FlightAirport.FROM, \"Cracow\");\n+    }\n+}"
  },
  {
    "sha": "22142f647ba0795bdf9cda9995a34f0f42e1a5ed",
    "filename": "src/main/java/cleanCode/challenges/loty/entity/Flight.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/entity/Flight.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/entity/Flight.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/loty/entity/Flight.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,72 @@\n+package cleanCode.challenges.loty.entity;\n+\n+public final class Flight {\n+\n+    private final String departureAirport;\n+    private final String arrivalAirport;\n+    private final String indirectAirport;\n+    private final int flightTimeMinutes;\n+    private final double price;\n+    private final int idNumber;\n+\n+    public Flight(String departureAirport, String arrivalAirport,String indirectAirport, int flightTimeMinutes, double price,int idNumber) {\n+        this.departureAirport = departureAirport;\n+        this.arrivalAirport = arrivalAirport;\n+        this.indirectAirport = indirectAirport;\n+        this.flightTimeMinutes = flightTimeMinutes;\n+        this.price = price;\n+        this.idNumber = idNumber;\n+    }\n+\n+    public String getIndirectAirport() {\n+        return indirectAirport;\n+    }\n+\n+    public String getDepartureAirport() {\n+        return departureAirport;\n+    }\n+\n+    public String getArrivalAirport() {\n+        return arrivalAirport;\n+    }\n+\n+    public int getFlightTimeMinutes() {\n+        return flightTimeMinutes;\n+    }\n+\n+    public double getPrice() {\n+        return price;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return departureAirport + \" - \" + indirectAirport + \" - \" + arrivalAirport;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+\n+        Flight flight = (Flight) o;\n+\n+        if (flightTimeMinutes != flight.flightTimeMinutes) return false;\n+        if (Double.compare(flight.price, price) != 0) return false;\n+        if (departureAirport != null ? !departureAirport.equals(flight.departureAirport) : flight.departureAirport != null)\n+            return false;\n+        return arrivalAirport != null ? arrivalAirport.equals(flight.arrivalAirport) : flight.arrivalAirport == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result;\n+        long temp;\n+        result = departureAirport != null ? departureAirport.hashCode() : 0;\n+        result = 31 * result + (arrivalAirport != null ? arrivalAirport.hashCode() : 0);\n+        result = 31 * result + flightTimeMinutes;\n+        temp = Double.doubleToLongBits(price);\n+        result = 31 * result + (int) (temp ^ (temp >>> 32));\n+        return result;\n+    }\n+}"
  },
  {
    "sha": "6463365feabdaf9166993e27f75ef2b67141391f",
    "filename": "src/main/java/cleanCode/challenges/loty/repository/FlightRepository.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/repository/FlightRepository.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/repository/FlightRepository.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/loty/repository/FlightRepository.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,12 @@\n+package cleanCode.challenges.loty.repository;\n+\n+import cleanCode.challenges.loty.entity.Flight;\n+\n+import java.util.List;\n+import java.util.function.Predicate;\n+\n+public interface FlightRepository {\n+\n+    List<Flight> findFlights(Predicate <Flight> p);\n+\n+}"
  },
  {
    "sha": "40d3023207f00f2cc6c7359db25a5f634124a3af",
    "filename": "src/main/java/cleanCode/challenges/loty/repository/SystemFlightsRepository.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/repository/SystemFlightsRepository.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/repository/SystemFlightsRepository.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/loty/repository/SystemFlightsRepository.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,35 @@\n+package cleanCode.challenges.loty.repository;\n+\n+import cleanCode.challenges.loty.entity.Flight;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+public final class SystemFlightsRepository implements FlightRepository{\n+\n+    private final List<Flight> flightList = new ArrayList<>();\n+\n+    {\n+        flightList.add(new Flight(\"Madrid\",\"Moscow\",\"Berlin\",440,1500,1));\n+        flightList.add(new Flight(\"Cracow\",\"London\",\"\",120,500,2));\n+        flightList.add(new Flight(\"Glasgow\",\"Warsaw\",\"\",145,380,3));\n+        flightList.add(new Flight(\"Cracow\",\"Barcelona\",\"Vienna\",360,1200,4));\n+        flightList.add(new Flight(\"London\",\"Berlin\",\"\",100,300,5));\n+        flightList.add(new Flight(\"Madrid\",\"Glasgow\",\"\",120,400,6));\n+        flightList.add(new Flight(\"Madrid\",\"Warsaw\",\"Berlin\",180,600,7));\n+        flightList.add(new Flight(\"Cracow\",\"Warsaw\",\"\",60,300,8));\n+        flightList.add(new Flight(\"Berlin\",\"London\",\"Vienna\",360,500,9));\n+    }\n+\n+    @Override\n+    public List<Flight> findFlights(Predicate <Flight> p) {\n+        return new CopyOnWriteArrayList<>(flightList)\n+                .stream()\n+                .filter(p)\n+                .collect(Collectors.toUnmodifiableList());\n+    }\n+\n+}"
  },
  {
    "sha": "87b93614b70209c42209abcdd10043c56da825b5",
    "filename": "src/main/java/cleanCode/challenges/loty/services/BookingProcessor.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/services/BookingProcessor.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/services/BookingProcessor.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/loty/services/BookingProcessor.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,32 @@\n+package cleanCode.challenges.loty.services;\n+\n+import cleanCode.challenges.loty.entity.Flight;\n+import cleanCode.challenges.loty.services.booking.BookingService;\n+import cleanCode.challenges.loty.services.booking.FlightAirport;\n+import cleanCode.challenges.loty.services.payment.PaymentService;\n+import java.util.List;\n+\n+public class BookingProcessor {\n+\n+    private final BookingService bookingService;\n+    private final PaymentService paymentService;\n+\n+    public BookingProcessor(BookingService bookingService, PaymentService paymentService) {\n+        this.bookingService = bookingService;\n+        this.paymentService = paymentService;\n+    }\n+\n+    public void process(FlightAirport selectionType, String airport){\n+\n+        List<Flight> flights = bookingService.searchForFlight(airport,selectionType);\n+\n+        if (flights.size() > 0){\n+            Flight flight = bookingService.bookYourFlight(flights);\n+            paymentService.pay(flight);\n+        } else {\n+            System.out.println(\"No avalaible flights \" + selectionType.toString() + \" \" + airport);\n+        }\n+    }\n+\n+\n+}"
  },
  {
    "sha": "610a927e86cc0f098646ef083c08ac8a894d268c",
    "filename": "src/main/java/cleanCode/challenges/loty/services/booking/BookingService.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/services/booking/BookingService.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/services/booking/BookingService.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/loty/services/booking/BookingService.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,17 @@\n+package cleanCode.challenges.loty.services.booking;\n+\n+import cleanCode.challenges.loty.entity.Flight;\n+\n+import java.util.List;\n+import java.util.Scanner;\n+\n+public interface BookingService {\n+\n+//    List<Flight> searchForFlightByAirport(String airport);\n+//\n+//    List<Flight> searchForFlightFromAirport(String airport);\n+\n+    List<Flight> searchForFlight(String airport, FlightAirport type);\n+\n+    Flight bookYourFlight(List<Flight> flights);\n+}"
  },
  {
    "sha": "0a206ff6e35d290ab0245e8149de5689598b88b7",
    "filename": "src/main/java/cleanCode/challenges/loty/services/booking/FlightAirport.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/services/booking/FlightAirport.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/services/booking/FlightAirport.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/loty/services/booking/FlightAirport.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,8 @@\n+package cleanCode.challenges.loty.services.booking;\n+\n+public enum  FlightAirport {\n+    FROM,\n+    BY,\n+    TO;\n+\n+}"
  },
  {
    "sha": "737f4dcb6140877b411da744b1189af1f6ae8b95",
    "filename": "src/main/java/cleanCode/challenges/loty/services/booking/OnlineBooking.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/services/booking/OnlineBooking.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/services/booking/OnlineBooking.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/loty/services/booking/OnlineBooking.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,48 @@\n+package cleanCode.challenges.loty.services.booking;\n+\n+import cleanCode.challenges.loty.entity.Flight;\n+import cleanCode.challenges.loty.repository.FlightRepository;\n+import java.util.List;\n+import java.util.Scanner;\n+\n+public final class OnlineBooking implements BookingService {\n+\n+    private final FlightRepository flightRepository;\n+\n+    public OnlineBooking(FlightRepository flightRepository) {\n+        this.flightRepository = flightRepository;\n+    }\n+\n+    @Override\n+    public List<Flight> searchForFlight(String airport, FlightAirport selectionType) {\n+\n+        if (selectionType.equals(FlightAirport.FROM)){\n+            return flightRepository.findFlights(e -> e.getDepartureAirport().equals(airport));\n+        }else if (selectionType.equals(FlightAirport.BY)) {\n+            return flightRepository.findFlights(e -> e.getIndirectAirport().equals(airport));\n+        } else {\n+            return flightRepository.findFlights(e -> e.getArrivalAirport().equals(airport));\n+        }\n+\n+    }\n+\n+    @Override\n+    public Flight bookYourFlight(List<Flight> flights) {\n+\n+        System.out.println(\"Pick your flight:\");\n+        flights.forEach(e -> System.out.println(\"Flight id - \" + e.getIdNumber() + \" >> \" + e + \" <<\"));\n+        Scanner sc = new Scanner(System.in);\n+\n+        int flightNumber;\n+        do {\n+            flightNumber = sc.nextInt();\n+        }while (flightNumber<1 && flightNumber>=flights.size());\n+\n+        int finalFlightNumber = flightNumber;\n+        Flight flight = flights.stream().filter(e -> e.getIdNumber() == finalFlightNumber).findFirst().get();\n+\n+        System.out.println(\"Flight \" + flight + \" has been booked succesfully!\");\n+        return flight;\n+    }\n+\n+}"
  },
  {
    "sha": "4ab8ec23a5a234615cec4ee588364f87cb3d8daf",
    "filename": "src/main/java/cleanCode/challenges/loty/services/payment/PayPalPayment.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/KusibabPiotr/Zadania/blob/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/services/payment/PayPalPayment.java",
    "raw_url": "https://github.com/KusibabPiotr/Zadania/raw/cc15e69e6972c436b8c95b8655901c2c3f161ac5/src/main/java/cleanCode/challenges/loty/services/payment/PayPalPayment.java",
    "contents_url": "https://api.github.com/repos/KusibabPiotr/Zadania/contents/src/main/java/cleanCode/challenges/loty/services/payment/PayPalPayment.java?ref=cc15e69e6972c436b8c95b8655901c2c3f161ac5",
    "patch": "@@ -0,0 +1,12 @@\n+package cleanCode.challenges.loty.services.payment;\n+\n+import cleanCode.challenges.loty.entity.Flight;\n+\n+public class PayPalPayment implements PaymentService{\n+\n+    @Override\n+    public boolean pay(Flight flight) {\n+        System.out.println(\"PayPal transaction for the amount \" +flight.getPrice() + \" z≈Ç for flight \" + flight + \" completed succesfully\");\n+        return true;\n+    }\n+}"
  }
]
