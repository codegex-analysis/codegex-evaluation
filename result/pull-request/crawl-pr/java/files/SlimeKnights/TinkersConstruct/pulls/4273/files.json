[
  {
    "sha": "7a70294ef4c6235cfe5f979c20d54ab629eb63c3",
    "filename": "src/generated/resources/data/tconstruct/recipes/gadgets/slimesling/blood.json",
    "status": "removed",
    "additions": 0,
    "deletions": 23,
    "changes": 23,
    "blob_url": "https://github.com/SlimeKnights/TinkersConstruct/blob/0dd2db6f58975bd444cd18e0614d7ea2d5e3ed2f/src/generated/resources/data/tconstruct/recipes/gadgets/slimesling/blood.json",
    "raw_url": "https://github.com/SlimeKnights/TinkersConstruct/raw/0dd2db6f58975bd444cd18e0614d7ea2d5e3ed2f/src/generated/resources/data/tconstruct/recipes/gadgets/slimesling/blood.json",
    "contents_url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct/contents/src/generated/resources/data/tconstruct/recipes/gadgets/slimesling/blood.json?ref=0dd2db6f58975bd444cd18e0614d7ea2d5e3ed2f",
    "patch": "@@ -1,23 +0,0 @@\n-{\n-  \"type\": \"minecraft:crafting_shaped\",\n-  \"group\": \"tconstruct:slimesling\",\n-  \"pattern\": [\n-    \"#X#\",\n-    \"L L\",\n-    \" L \"\n-  ],\n-  \"key\": {\n-    \"#\": {\n-      \"item\": \"minecraft:string\"\n-    },\n-    \"X\": {\n-      \"item\": \"tconstruct:blood_congealed_slime\"\n-    },\n-    \"L\": {\n-      \"tag\": \"forge:slimeball/blood\"\n-    }\n-  },\n-  \"result\": {\n-    \"item\": \"tconstruct:blood_slime_sling\"\n-  }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "b6663edb8c287302eda40c06fa4fff208b58a049",
    "filename": "src/main/java/slimeknights/tconstruct/TConstruct.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/SlimeKnights/TinkersConstruct/blob/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/TConstruct.java",
    "raw_url": "https://github.com/SlimeKnights/TinkersConstruct/raw/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/TConstruct.java",
    "contents_url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct/contents/src/main/java/slimeknights/tconstruct/TConstruct.java?ref=6f3e71b27812c33f984f41ae21f2fb8021ca49f8",
    "patch": "@@ -199,6 +199,8 @@ void missingItems(final MissingMappings<Item> event) {\n         case \"mud_brick\": return TinkerCommons.mudBricks.asItem();\n         // hammer more specific name\n         case \"hammer\": return TinkerTools.sledgeHammer.get();\n+        // blood slime tools\n+        case \"blood_slime_sling\": return TinkerGadgets.slimeSling.get(SlimeType.GREEN);\n       }\n       IItemProvider block = missingBlock(name);\n       return block == null ? null : block.asItem();"
  },
  {
    "sha": "5b84094db350dbcec9474c90d4034aa2be9fe2cb",
    "filename": "src/main/java/slimeknights/tconstruct/gadgets/TinkerGadgets.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/SlimeKnights/TinkersConstruct/blob/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/TinkerGadgets.java",
    "raw_url": "https://github.com/SlimeKnights/TinkersConstruct/raw/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/TinkerGadgets.java",
    "contents_url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct/contents/src/main/java/slimeknights/tconstruct/gadgets/TinkerGadgets.java?ref=6f3e71b27812c33f984f41ae21f2fb8021ca49f8",
    "patch": "@@ -45,7 +45,11 @@\n import slimeknights.tconstruct.gadgets.item.PiggyBackPackItem.CarryPotionEffect;\n import slimeknights.tconstruct.gadgets.item.ShurikenItem;\n import slimeknights.tconstruct.gadgets.item.SlimeBootsItem;\n-import slimeknights.tconstruct.gadgets.item.SlimeSlingItem;\n+import slimeknights.tconstruct.gadgets.item.slimesling.BaseSlimeSlingItem;\n+import slimeknights.tconstruct.gadgets.item.slimesling.BlueSlimeSlingItem;\n+import slimeknights.tconstruct.gadgets.item.slimesling.GreenSlimeSlingItem;\n+import slimeknights.tconstruct.gadgets.item.slimesling.MagmaSlimeSlingItem;\n+import slimeknights.tconstruct.gadgets.item.slimesling.PurpleSlimeSlingItem;\n import slimeknights.tconstruct.library.Util;\n import slimeknights.tconstruct.library.capability.piggyback.CapabilityTinkerPiggyback;\n import slimeknights.tconstruct.shared.TinkerFood;\n@@ -93,7 +97,12 @@\n   public static final ItemObject<PiggyBackPackItem> piggyBackpack = ITEMS.register(\"piggy_backpack\", PiggyBackPackItem::new);\n   public static final EnumObject<FrameType,FancyItemFrameItem> itemFrame = ITEMS.registerEnum(FrameType.values(), \"item_frame\", (type) -> new FancyItemFrameItem(((world, pos, dir) -> new FancyItemFrameEntity(world, pos, dir, type.getId()))));\n   // slime tools\n-  public static final EnumObject<SlimeType,SlimeSlingItem> slimeSling = ITEMS.registerEnum(SlimeType.values(), \"slime_sling\", (type) -> new SlimeSlingItem(UNSTACKABLE_PROPS));\n+  public static final EnumObject<SlimeType, BaseSlimeSlingItem> slimeSling = new EnumObject.Builder<SlimeType, BaseSlimeSlingItem>(SlimeType.class)\n+    .put(SlimeType.GREEN, ITEMS.register(\"green_slime_sling\", () -> new GreenSlimeSlingItem(UNSTACKABLE_PROPS)))\n+    .put(SlimeType.BLUE, ITEMS.register(\"blue_slime_sling\", () -> new BlueSlimeSlingItem(UNSTACKABLE_PROPS)))\n+    .put(SlimeType.MAGMA, ITEMS.register(\"magma_slime_sling\", () -> new MagmaSlimeSlingItem(UNSTACKABLE_PROPS)))\n+    .put(SlimeType.PURPLE, ITEMS.register(\"purple_slime_sling\", () -> new PurpleSlimeSlingItem(UNSTACKABLE_PROPS)))\n+    .build();\n   public static final EnumObject<SlimeType,SlimeBootsItem> slimeBoots = ITEMS.registerEnum(SlimeType.values(), \"slime_boots\", (type) -> new SlimeBootsItem(type, UNSTACKABLE_PROPS));\n   // throwballs\n   public static final ItemObject<GlowBallItem> glowBall = ITEMS.register(\"glow_ball\", GlowBallItem::new);"
  },
  {
    "sha": "7ad5832442189889f9a9b41d80ca1e7000a926b3",
    "filename": "src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/BaseSlimeSlingItem.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/SlimeKnights/TinkersConstruct/blob/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/BaseSlimeSlingItem.java",
    "raw_url": "https://github.com/SlimeKnights/TinkersConstruct/raw/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/BaseSlimeSlingItem.java",
    "contents_url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct/contents/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/BaseSlimeSlingItem.java?ref=6f3e71b27812c33f984f41ae21f2fb8021ca49f8",
    "patch": "@@ -0,0 +1,56 @@\n+package slimeknights.tconstruct.gadgets.item.slimesling;\n+\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.item.UseAction;\n+import net.minecraft.util.ActionResult;\n+import net.minecraft.util.ActionResultType;\n+import net.minecraft.util.Hand;\n+import net.minecraft.world.World;\n+import slimeknights.mantle.item.TooltipItem;\n+\n+import javax.annotation.Nonnull;\n+\n+public abstract class BaseSlimeSlingItem extends TooltipItem {\n+\n+  public BaseSlimeSlingItem(Properties props) {\n+    super(props);\n+  }\n+\n+  @Nonnull\n+  @Override\n+  public ActionResult<ItemStack> onItemRightClick(World worldIn, PlayerEntity playerIn, Hand hand) {\n+    ItemStack itemStackIn = playerIn.getHeldItem(hand);\n+    playerIn.setActiveHand(hand);\n+    return new ActionResult<>(ActionResultType.SUCCESS, itemStackIn);\n+  }\n+\n+  /** How long it takes to use or consume an item */\n+  @Override\n+  public int getUseDuration(ItemStack stack) {\n+    return 72000;\n+  }\n+\n+  /** returns the action that specifies what animation to play when the items is being used */\n+  @Override\n+  public UseAction getUseAction(ItemStack stack) {\n+    return UseAction.BOW;\n+  }\n+\n+  /** Determines how much force a charged right click item will release on player letting go\n+   * To be used in conjunction with onPlayerStoppedUsing\n+   * @param stack - Item used (get from onPlayerStoppedUsing)\n+   * @param timeLeft - (get from onPlayerStoppedUsing)\n+   * @return appropriate charge for item */\n+  public float getForce(ItemStack stack, int timeLeft) {\n+    int i = this.getUseDuration(stack) - timeLeft;\n+    float f = i / 20.0F;\n+    f = (f * f + f * 2.0F) / 3.0F;\n+    f *= 4f;\n+\n+    if (f > 6f) {\n+      f = 6f;\n+    }\n+    return f;\n+  }\n+}"
  },
  {
    "sha": "f132908672d8a61a2682d9aa27841905cb85d9b2",
    "filename": "src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/BlueSlimeSlingItem.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/SlimeKnights/TinkersConstruct/blob/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/BlueSlimeSlingItem.java",
    "raw_url": "https://github.com/SlimeKnights/TinkersConstruct/raw/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/BlueSlimeSlingItem.java",
    "contents_url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct/contents/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/BlueSlimeSlingItem.java?ref=6f3e71b27812c33f984f41ae21f2fb8021ca49f8",
    "patch": "@@ -0,0 +1,54 @@\n+package slimeknights.tconstruct.gadgets.item.slimesling;\n+\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.math.MathHelper;\n+import net.minecraft.world.World;\n+import slimeknights.tconstruct.common.Sounds;\n+import slimeknights.tconstruct.library.SlimeBounceHandler;\n+import slimeknights.tconstruct.library.network.TinkerNetwork;\n+import slimeknights.tconstruct.tools.common.network.EntityMovementChangePacket;\n+\n+public class BlueSlimeSlingItem extends BaseSlimeSlingItem {\n+\n+  public BlueSlimeSlingItem(Properties props) {\n+    super(props);\n+  }\n+\n+  /** Called when the player stops using an Item (stops holding the right mouse button). */\n+  @Override\n+  public void onPlayerStoppedUsing(ItemStack stack, World worldIn, LivingEntity entityLiving, int timeLeft) {\n+    if (!(entityLiving instanceof PlayerEntity)) {\n+      return;\n+    }\n+\n+    PlayerEntity player = (PlayerEntity) entityLiving;\n+\n+    // don't allow free flight when using an elytra, should use fireworks\n+    if (player.isElytraFlying()) {\n+      return;\n+    }\n+\n+    float f = getForce(stack, timeLeft);\n+\n+    player.addExhaustion(0.2F);\n+    player.getCooldownTracker().setCooldown(stack.getItem(), 3);\n+    player.setSprinting(true);\n+\n+    float speed = f / 3F;\n+    player.addVelocity(\n+      (-MathHelper.sin(player.rotationYaw / 180.0F * (float) Math.PI) * MathHelper.cos(player.rotationPitch / 180.0F * (float) Math.PI) * speed),\n+      speed,\n+      (MathHelper.cos(player.rotationYaw / 180.0F * (float) Math.PI) * MathHelper.cos(player.rotationPitch / 180.0F * (float) Math.PI) * speed));\n+\n+    if (player instanceof ServerPlayerEntity) {\n+      ServerPlayerEntity playerMP = (ServerPlayerEntity) player;\n+      TinkerNetwork.getInstance().sendTo(new EntityMovementChangePacket(player), playerMP);\n+    }\n+\n+    player.playSound(Sounds.SLIME_SLING.getSound(), 1f, 1f);\n+    SlimeBounceHandler.addBounceHandler(player);\n+  }\n+}"
  },
  {
    "sha": "ff06f7a8f5a538dd40188d85a2e0a27c95451630",
    "filename": "src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/GreenSlimeSlingItem.java",
    "status": "renamed",
    "additions": 7,
    "deletions": 51,
    "changes": 58,
    "blob_url": "https://github.com/SlimeKnights/TinkersConstruct/blob/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/GreenSlimeSlingItem.java",
    "raw_url": "https://github.com/SlimeKnights/TinkersConstruct/raw/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/GreenSlimeSlingItem.java",
    "contents_url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct/contents/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/GreenSlimeSlingItem.java?ref=6f3e71b27812c33f984f41ae21f2fb8021ca49f8",
    "patch": "@@ -1,66 +1,37 @@\n-package slimeknights.tconstruct.gadgets.item;\n+package slimeknights.tconstruct.gadgets.item.slimesling;\n \n import net.minecraft.entity.LivingEntity;\n import net.minecraft.entity.player.PlayerEntity;\n import net.minecraft.entity.player.ServerPlayerEntity;\n import net.minecraft.item.ItemStack;\n-import net.minecraft.item.UseAction;\n-import net.minecraft.util.ActionResult;\n-import net.minecraft.util.ActionResultType;\n-import net.minecraft.util.Hand;\n+import net.minecraft.util.math.BlockRayTraceResult;\n import net.minecraft.util.math.RayTraceContext;\n import net.minecraft.util.math.RayTraceResult;\n import net.minecraft.util.math.vector.Vector3d;\n import net.minecraft.world.World;\n-import slimeknights.mantle.item.TooltipItem;\n import slimeknights.tconstruct.common.Sounds;\n import slimeknights.tconstruct.library.SlimeBounceHandler;\n import slimeknights.tconstruct.library.network.TinkerNetwork;\n import slimeknights.tconstruct.tools.common.network.EntityMovementChangePacket;\n \n-import javax.annotation.Nonnull;\n+public class GreenSlimeSlingItem extends BaseSlimeSlingItem {\n \n-public class SlimeSlingItem extends TooltipItem {\n-\n-  public SlimeSlingItem(Properties props) {\n+  public GreenSlimeSlingItem(Properties props) {\n     super(props);\n   }\n \n-  @Nonnull\n-  @Override\n-  public ActionResult<ItemStack> onItemRightClick(World worldIn, PlayerEntity playerIn, Hand hand) {\n-    ItemStack itemStackIn = playerIn.getHeldItem(hand);\n-    playerIn.setActiveHand(hand);\n-    return new ActionResult<>(ActionResultType.SUCCESS, itemStackIn);\n-  }\n-\n-  /**\n-   * Called when the player stops using an Item (stops holding the right mouse button).\n-   */\n+  /** Called when the player stops using an Item (stops holding the right mouse button). */\n   @Override\n   public void onPlayerStoppedUsing(ItemStack stack, World worldIn, LivingEntity entityLiving, int timeLeft) {\n     if (!(entityLiving instanceof PlayerEntity)) {\n       return;\n     }\n \n     PlayerEntity player = (PlayerEntity) entityLiving;\n-    // has to be on ground to do something\n-    if (!player.isOnGround()) {\n-      return;\n-    }\n-\n-    // copy chargeup code from bow \\o/\n-    int i = this.getUseDuration(stack) - timeLeft;\n-    float f = i / 20.0F;\n-    f = (f * f + f * 2.0F) / 3.0F;\n-    f *= 4f;\n-\n-    if (f > 6f) {\n-      f = 6f;\n-    }\n+    float f = getForce(stack, timeLeft);\n \n     // check if player was targeting a block\n-    RayTraceResult mop = rayTrace(worldIn, player, RayTraceContext.FluidMode.NONE);\n+    BlockRayTraceResult mop = rayTrace(worldIn, player, RayTraceContext.FluidMode.NONE);\n     if (mop.getType() == RayTraceResult.Type.BLOCK) {\n       // we fling the inverted player look vector\n       Vector3d vec = player.getLookVec().normalize();\n@@ -78,19 +49,4 @@ public void onPlayerStoppedUsing(ItemStack stack, World worldIn, LivingEntity en\n     }\n   }\n \n-  /**\n-   * How long it takes to use or consume an item\n-   */\n-  @Override\n-  public int getUseDuration(ItemStack stack) {\n-    return 72000;\n-  }\n-\n-  /**\n-   * returns the action that specifies what animation to play when the items is being used\n-   */\n-  @Override\n-  public UseAction getUseAction(ItemStack stack) {\n-    return UseAction.BOW;\n-  }\n }",
    "previous_filename": "src/main/java/slimeknights/tconstruct/gadgets/item/SlimeSlingItem.java"
  },
  {
    "sha": "56280a63589e7eb65f039e61029b0e08f6289674",
    "filename": "src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/MagmaSlimeSlingItem.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/SlimeKnights/TinkersConstruct/blob/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/MagmaSlimeSlingItem.java",
    "raw_url": "https://github.com/SlimeKnights/TinkersConstruct/raw/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/MagmaSlimeSlingItem.java",
    "contents_url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct/contents/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/MagmaSlimeSlingItem.java?ref=6f3e71b27812c33f984f41ae21f2fb8021ca49f8",
    "patch": "@@ -0,0 +1,79 @@\n+package slimeknights.tconstruct.gadgets.item.slimesling;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.math.AxisAlignedBB;\n+import net.minecraft.util.math.BlockRayTraceResult;\n+import net.minecraft.util.math.RayTraceContext;\n+import net.minecraft.util.math.RayTraceResult;\n+import net.minecraft.util.math.vector.Vector3d;\n+import net.minecraft.world.World;\n+import slimeknights.tconstruct.common.Sounds;\n+import slimeknights.tconstruct.library.network.TinkerNetwork;\n+import slimeknights.tconstruct.tools.common.network.EntityMovementChangePacket;\n+\n+import java.util.List;\n+\n+public class MagmaSlimeSlingItem extends BaseSlimeSlingItem {\n+\n+  public MagmaSlimeSlingItem(Properties props) {\n+    super(props);\n+  }\n+\n+  /** Called when the player stops using an Item (stops holding the right mouse button). */\n+  @Override\n+  public void onPlayerStoppedUsing(ItemStack stack, World worldIn, LivingEntity entityLiving, int timeLeft) {\n+    if (!(entityLiving instanceof PlayerEntity)) {\n+      return;\n+    }\n+\n+    PlayerEntity player = (PlayerEntity) entityLiving;\n+    float f = getForce(stack, timeLeft);\n+\n+    float range = 5F;\n+    Vector3d start = player.getEyePosition(1F);\n+    Vector3d look = player.getLookVec();\n+    Vector3d direction = start.add(look.x * range, look.y * range, look.z * range);\n+    AxisAlignedBB bb = player.getBoundingBox().expand(look.x * range, look.y * range, look.z * range).expand(1, 1, 1);\n+    double minX = Math.min(start.x, direction.x);\n+    double maxX = Math.max(start.x, direction.x);\n+    double minY = Math.min(start.y, direction.y);\n+    double maxY = Math.max(start.y, direction.y);\n+    double minZ = Math.min(start.z, direction.z);\n+    double maxZ = Math.max(start.z, direction.z);\n+    List<Entity> entitiesInArea = player.getEntityWorld().getEntitiesWithinAABBExcludingEntity(player, bb);\n+    double dist = range;\n+    Entity closestEntity = null;\n+    for (Entity entity : entitiesInArea) {\n+      if (entity.getBoundingBox().intersects(minX, minY, minZ, maxX, maxY, maxZ)) {\n+        if (look.distanceTo(entity.getLookVec()) < dist) {\n+          dist = look.distanceTo(entity.getLookVec());\n+          closestEntity = entity;\n+        }\n+      }\n+    }\n+\n+    // cancel if there's a block in the way\n+    BlockRayTraceResult mop = rayTrace(worldIn, player, RayTraceContext.FluidMode.NONE);\n+    if (mop.getType() == RayTraceResult.Type.BLOCK && dist * dist < mop.getPos().distanceSq(player.getPosX(), player.getPosY(), player.getPosZ(), true)) {\n+      return;\n+    }\n+\n+    if (closestEntity != null) {\n+      if (closestEntity instanceof LivingEntity) {\n+        ((LivingEntity) closestEntity).applyKnockback(f , -look.x, -look.z);\n+\n+        // TODO: Test on other players (I wasn't able to figure out setting that up)\n+        if (closestEntity instanceof ServerPlayerEntity) {\n+          ServerPlayerEntity playerMP = (ServerPlayerEntity) closestEntity;\n+          TinkerNetwork.getInstance().sendTo(new EntityMovementChangePacket(closestEntity), playerMP);\n+        }\n+\n+        player.playSound(Sounds.SLIME_SLING.getSound(), 1f, 1f);\n+      }\n+    }\n+  }\n+}"
  },
  {
    "sha": "0dca5e24cb58e4fbc256be6c158890a33b8565a3",
    "filename": "src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/PurpleSlimeSlingItem.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/SlimeKnights/TinkersConstruct/blob/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/PurpleSlimeSlingItem.java",
    "raw_url": "https://github.com/SlimeKnights/TinkersConstruct/raw/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/PurpleSlimeSlingItem.java",
    "contents_url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct/contents/src/main/java/slimeknights/tconstruct/gadgets/item/slimesling/PurpleSlimeSlingItem.java?ref=6f3e71b27812c33f984f41ae21f2fb8021ca49f8",
    "patch": "@@ -0,0 +1,51 @@\n+package slimeknights.tconstruct.gadgets.item.slimesling;\n+\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.particles.ParticleTypes;\n+import net.minecraft.util.SoundEvents;\n+import net.minecraft.util.math.vector.Vector3d;\n+import net.minecraft.world.World;\n+import slimeknights.tconstruct.common.Sounds;\n+import slimeknights.tconstruct.library.network.TinkerNetwork;\n+import slimeknights.tconstruct.tools.common.network.EntityMovementChangePacket;\n+\n+public class PurpleSlimeSlingItem extends BaseSlimeSlingItem {\n+\n+  public PurpleSlimeSlingItem(Properties props) {\n+    super(props);\n+  }\n+\n+  /** Called when the player stops using an Item (stops holding the right mouse button). */\n+  @Override\n+  public void onPlayerStoppedUsing(ItemStack stack, World worldIn, LivingEntity entityLiving, int timeLeft) {\n+    if (!(entityLiving instanceof PlayerEntity)) {\n+      return;\n+    }\n+\n+    PlayerEntity player = (PlayerEntity) entityLiving;\n+    float f = getForce(stack, timeLeft);\n+\n+    Vector3d look = player.getLookVec();\n+    double offX = look.x * f;\n+    double offY = look.y * f + 1;\n+    double offZ = look.z * f;\n+\n+    if (player.attemptTeleport(player.getPosX() + offX, player.getPosY() + offY, player.getPosZ() + offZ, true)) {\n+      if (player instanceof ServerPlayerEntity) {\n+        ServerPlayerEntity playerMP = (ServerPlayerEntity) player;\n+        TinkerNetwork.getInstance().sendTo(new EntityMovementChangePacket(player), playerMP);\n+      }\n+\n+      // particle effect from EnderPearlEntity\n+      for (int i = 0; i < 32; ++i) {\n+        worldIn.addParticle(ParticleTypes.PORTAL, player.getPosX(), player.getPosY() + worldIn.rand.nextDouble() * 2.0D, player.getPosZ(), worldIn.rand.nextGaussian(), 0.0D, worldIn.rand.nextGaussian());\n+      }\n+\n+      player.playSound(Sounds.SLIME_SLING.getSound(), 1f, 1f);\n+      player.playSound(SoundEvents.ENTITY_ENDERMAN_TELEPORT, 1f, 1f);\n+    }\n+  }\n+}"
  },
  {
    "sha": "385e8d1c04562872ebe94d3c413119b04e58457d",
    "filename": "src/main/resources/assets/tconstruct/lang/en_us.json",
    "status": "modified",
    "additions": 7,
    "deletions": 9,
    "changes": 16,
    "blob_url": "https://github.com/SlimeKnights/TinkersConstruct/blob/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/resources/assets/tconstruct/lang/en_us.json",
    "raw_url": "https://github.com/SlimeKnights/TinkersConstruct/raw/6f3e71b27812c33f984f41ae21f2fb8021ca49f8/src/main/resources/assets/tconstruct/lang/en_us.json",
    "contents_url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct/contents/src/main/resources/assets/tconstruct/lang/en_us.json?ref=6f3e71b27812c33f984f41ae21f2fb8021ca49f8",
    "patch": "@@ -628,16 +628,14 @@\n     \"item.tconstruct.flint_shuriken\": \"Flint Shuriken\",\n     \"item.tconstruct.flint_shuriken.tooltip\": \"A throwable weapon with high knockback\",\n \n-    \"item.tconstruct.green_slime_sling\": \"Slimesling\",\n+    \"item.tconstruct.green_slime_sling\": \"Earth Slimesling\",\n     \"item.tconstruct.green_slime_sling.tooltip\": \"Charge up, aim low, get flinging!\\nUse Slime Boots if you value your life!\",\n-    \"item.tconstruct.blue_slime_sling\": \"Slimesling\",\n-    \"item.tconstruct.blue_slime_sling.tooltip\": \"Charge up, aim low, get flinging!\\nUse Slime Boots if you value your life!\",\n-    \"item.tconstruct.purple_slime_sling\": \"Slimesling\",\n-    \"item.tconstruct.purple_slime_sling.tooltip\": \"Charge up, aim low, get flinging!\\nUse Slime Boots if you value your life!\",\n-    \"item.tconstruct.blood_slime_sling\": \"Congealed Slimesling\",\n-    \"item.tconstruct.blood_slime_sling.tooltip\": \"Charge up, aim low, get flinging!\\nUse Slime Boots if you value your life!\",\n-    \"item.tconstruct.magma_slime_sling\": \"Slimesling\",\n-    \"item.tconstruct.magma_slime_sling.tooltip\": \"Charge up, aim low, get flinging!\\nUse Slime Boots if you value your life!\",\n+    \"item.tconstruct.blue_slime_sling\": \"Sky Slimesling\",\n+    \"item.tconstruct.blue_slime_sling.tooltip\": \"Charge up, let go, get back in the air!\\nUse Slime Boots if you value your life!\",\n+    \"item.tconstruct.purple_slime_sling\": \"Ender Slimesling\",\n+    \"item.tconstruct.purple_slime_sling.tooltip\": \"Charge up, point it at a wall, come out the other side!\",\n+    \"item.tconstruct.magma_slime_sling\": \"Magma Slimesling\",\n+    \"item.tconstruct.magma_slime_sling.tooltip\": \"Charge up, point at a creature, and send it flying!\",\n     \"item.tconstruct.pink_slime_sling\": \"Slimesling\",\n     \"item.tconstruct.pink_slime_sling.tooltip\": \"Charge up, aim low, get flinging!\\nUse Slime Boots if you value your life!\",\n "
  },
  {
    "sha": "93e3d0e840af9f078413e0ee1b8165c9bb6e0fd5",
    "filename": "src/main/resources/assets/tconstruct/models/item/blood_slime_sling.json",
    "status": "removed",
    "additions": 0,
    "deletions": 28,
    "changes": 28,
    "blob_url": "https://github.com/SlimeKnights/TinkersConstruct/blob/0dd2db6f58975bd444cd18e0614d7ea2d5e3ed2f/src/main/resources/assets/tconstruct/models/item/blood_slime_sling.json",
    "raw_url": "https://github.com/SlimeKnights/TinkersConstruct/raw/0dd2db6f58975bd444cd18e0614d7ea2d5e3ed2f/src/main/resources/assets/tconstruct/models/item/blood_slime_sling.json",
    "contents_url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct/contents/src/main/resources/assets/tconstruct/models/item/blood_slime_sling.json?ref=0dd2db6f58975bd444cd18e0614d7ea2d5e3ed2f",
    "patch": "@@ -1,28 +0,0 @@\n-{\n-    \"parent\": \"item/generated\",\n-    \"display\": {\n-        \"thirdperson_righthand\": {\n-            \"rotation\": [ 0, 90, 0 ],\n-            \"translation\": [ 0, 4.0, 2.5 ],\n-            \"scale\": [ 0.85, 0.85, 0.85 ]\n-        },\n-        \"thirdperson_lefthand\": {\n-            \"rotation\": [ 0, -90, 0 ],\n-            \"translation\": [ 0, 4.0, 2.5 ],\n-            \"scale\": [ 0.85, 0.85, 0.85 ]\n-        },\n-        \"firstperson_righthand\": {\n-            \"rotation\": [ 0, 90, 0 ],\n-            \"translation\": [ 0, 1.6, 0.8 ],\n-            \"scale\": [ 0.68, 0.68, 0.68 ]\n-        },\n-        \"firstperson_lefthand\": {\n-            \"rotation\": [ 0, -90, 0 ],\n-            \"translation\": [ 0, 1.6, 0.8 ],\n-            \"scale\": [ 0.68, 0.68, 0.68 ]\n-        }\n-    },\n-    \"textures\": {\n-        \"layer0\": \"tconstruct:item/gadgets/blood_slime_sling\"\n-    }\n-}\n\\ No newline at end of file"
  }
]
