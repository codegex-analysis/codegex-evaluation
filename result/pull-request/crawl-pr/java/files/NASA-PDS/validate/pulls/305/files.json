[
  {
    "sha": "be1328bea7a6f3f967ebce7e86c6418ea1a7bbb1",
    "filename": "src/main/java/gov/nasa/pds/tools/util/DOMSourceManager.java",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/util/DOMSourceManager.java",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/util/DOMSourceManager.java",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/main/java/gov/nasa/pds/tools/util/DOMSourceManager.java?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -0,0 +1,63 @@\n+package gov.nasa.pds.tools.util;\n+\n+import java.net.URL;\n+\n+import java.util.HashMap;\n+\n+import javax.xml.transform.dom.DOMSource;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+ /**\n+  * Class that does management of DOMSource objects for reuse.\n+  * \n+  */\n+public class DOMSourceManager {\n+  private static final Logger LOG = LoggerFactory.getLogger(DOMSourceManager.class);\n+  private static final boolean REUSE_SOURCE_FLAG = true;  // Flag to allow turning on/off the reuse capability.\n+  private static HashMap<String,DOMSource> domMAP = new HashMap<String,DOMSource>();\n+\n+  /**\n+   * Save a DOMSource to a map.\n+   * \n+   * @param location The location where the DOMSource came from.\n+   * @param source   The DOMSource object.\n+   */\n+\n+  public static void saveDOM(String location, DOMSource source) {\n+      // If REUSE_SOURCE_FLAG is set to true, save the DOMSource object to the domMAP.\n+      if (REUSE_SOURCE_FLAG) {\n+          // Save the DOMSource from a location for later reuse.\n+          domMAP.put(location,source);\n+      }\n+  }\n+\n+  /**\n+   * Retrieve a saved DOMSource from a map.\n+   * \n+   * @param location The location to retrieve the DOMSource from if available.\n+   */\n+  public static DOMSource reuseDOM(String location) {\n+      // Reuse the DOMSource from domMAP and clear out the list to keep list from growing.\n+      // Can return null if the target has not been parsed before.  Client should check for nullness.\n+      DOMSource source = null;\n+\n+      if (REUSE_SOURCE_FLAG) {\n+          if (!domMAP.isEmpty() && domMAP.containsKey(location)) {\n+              source = domMAP.get(location);\n+              LOG.debug(\"DOMSourceManager:reuseDOM: REUSE_TRUE {}\",location);\n+              if (source != null) {\n+                  LOG.debug(\"DOMSourceManager:reuseDOM: DOM_MAP_SIZE_PRECLEAR {}\",domMAP.size());\n+                  domMAP.clear(); // Not sure if should delete one or clear out all.  Had not observed any adverse reactions from regression tests.\n+                  LOG.debug(\"DOMSourceManager:reuseDOM: DOM_MAP_SIZE_POSTCLEAR {}\",domMAP.size());\n+              }\n+          } else {\n+              LOG.debug(\"DOMSourceManager:reuseDOM: REUSE_FALSE {}\",location);\n+          }\n+      } else {\n+          LOG.debug(\"DOMSourceManager:reuseDOM: REUSE_FALSE {}\",location);\n+      }\n+      return(source);\n+  }\n+}"
  },
  {
    "sha": "80cc9a9cc311e82273747c78449add92ad6389b2",
    "filename": "src/main/java/gov/nasa/pds/tools/util/FileService.java",
    "status": "added",
    "additions": 229,
    "deletions": 0,
    "changes": 229,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/util/FileService.java",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/util/FileService.java",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/main/java/gov/nasa/pds/tools/util/FileService.java?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -0,0 +1,229 @@\n+// Copyright 2006-2013, by the California Institute of Technology.\n+// ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.\n+// Any commercial use must be negotiated with the Office of Technology Transfer\n+// at the California Institute of Technology.\n+//\n+// This software is subject to U. S. export control laws and regulations\n+// (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the extent that the software\n+// is subject to U.S. export control laws and regulations, the recipient has\n+// the responsibility to obtain export licenses or other export authority as\n+// may be required before exporting such information to foreign countries or\n+// providing access to foreign nationals.\n+//\n+// $Id$\n+\n+package gov.nasa.pds.tools.util;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.io.StringWriter;\n+\n+import java.time.format.DateTimeFormatter;  \n+import java.time.LocalDateTime;    \n+\n+import org.apache.commons.io.FileUtils;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import org.w3c.dom.Document;\n+\n+import javax.xml.transform.dom.DOMSource;\n+import javax.xml.transform.stream.StreamResult;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerException;\n+import javax.xml.transform.TransformerFactory;\n+\n+/**\n+ * A class to allow reading and writing text file.\n+ *\n+ */\n+public class FileService {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(FileService.class);\n+\n+\n+    public static void main(String[] args) {\n+        // Helpful to debug if function is working properly.\n+        System.out.println(\"Hello, World\");\n+        String[] textArray = {\"line1\",\"line2\"};\n+        appendTextToOneLine(\"somefile.txt\",textArray);\n+    }\n+\n+    /**\n+     * Open the file for writing and write a text string.\n+     *\n+     * @param filename  Output filename\n+     * @param textArray An array of strings\n+     * @return None \n+     */\n+    public static void appendTextToOneLine(String filename, String textStr) {\n+        String[] textArray = new String [1];\n+        textArray[0] = textStr;\n+        appendTextToOneLine(filename,textArray);\n+    }\n+\n+    /**\n+     * Open the file for writing and write textArray separated by a space to file all in one line.\n+     *\n+     * @param filename  Output filename\n+     * @param textArray An array of strings\n+     * @return None \n+     */\n+    public static void appendTextToOneLine(String filename, String[] textArray) {\n+        try {\n+            FileWriter writer = new FileWriter(filename, false);\n+            for(int i = 0; i< textArray.length; i++){\n+                System.out.println(textArray[i]);\n+                if (i == 0) {\n+                    writer.write(textArray[i]);\n+                } else {\n+                    writer.write(\" \" + textArray[i]);  // Put a space in between each element.\n+                }\n+            }\n+            writer.write(\"\\n\");   // Write new line as last write before closing.\n+            writer.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.exit(1);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            System.exit(1);\n+        }\n+    }\n+\n+    /**\n+     * Print a stack trace to a text file.\n+     *\n+     * @param filename  Output filename.\n+     * @param exception The exception to print stack trace of.\n+     * @return None \n+     */\n+\n+    public static void printStackTraceToFile(String filename, Exception exception) {\n+        //File file = new File(\"validate_stack_traces.log\");\n+\n+        // If a name is not provided, use the hard-code filename.\n+        if (filename == null) {\n+            filename = \"validate_stack_traces.log\";\n+        }\n+        // Do a sanity check that the name should end with .log or .txt so as not to overwrite a source code.\n+        if (!filename.endsWith(\".txt\") && !filename.endsWith(\".log\")) {\n+            System.out.println(\"FileService:printStackTraceToFile:ERROR: This function can only write to file that ends with .txt or .log\");\n+            System.exit(0);\n+        }\n+\n+        // Print the stack strace to a temporary file and then concatenate to an existing file if it exists.\n+        File file = new File(filename + \".temp\");\n+        try {\n+            PrintStream ps = new PrintStream(file);\n+            DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm:ss\");  \n+            LocalDateTime now = LocalDateTime.now();  \n+            ps.print(\"--------------------------------------------------------------------------------\\n\");\n+            ps.print(\"EXCEPTION_TIME \" + dtf.format(now) + \"\\n\");  // Report when the error occurred so it can be found if searched for.\n+            exception.printStackTrace(ps);  // Print the stack from exception from the parameter.\n+            ps.close();\n+\n+            // Concatenate the temporary file if an existing file already exists.\n+            File existingFile = new File(filename);\n+            if (existingFile.exists()) {\n+                // Read the temporary file as string.\n+                String newFileStr = FileUtils.readFileToString(file);\n+                // Concatenate the temporary file to the existing file.\n+                FileUtils.write(existingFile, newFileStr, true); // true for append\n+                // To not overwhelm the log file for a normal user, only print these messages if in debug mode.\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.error(\"A stack trace has been appended to file \" + filename + \" EXCEPTION_TIME \" + dtf.format(now));\n+                    System.out.println(\"FileService:printStackTraceToFile:ERROR: A stack trace has been appended to file \" + filename + \" EXCEPTION_TIME \" + dtf.format(now));\n+                }\n+            } else {\n+                // If existing file does not exist, rename the temporary file to a real file.\n+                file.renameTo(new File(filename));\n+                // To not overwhelm the log file for a normal user, only print these messages if in debug mode.\n+                if (LOG.isDebugEnabled()) {\n+                    LOG.error(\"A stack trace has been written to file \" + filename + \" EXCEPTION_TIME \" + dtf.format(now));\n+                    System.out.println(\"FileService:printStackTraceToFile:ERROR: A stack trace has been written to file \" + filename + \" EXCEPTION_TIME \" + dtf.format(now));\n+                }\n+            }\n+        } catch (Exception tempException) {\n+            System.out.println(\"FileService:printStackTraceToFile: Cannot create PrintStream or write to file \" + filename);\n+            System.exit(0);\n+        }\n+    }\n+\n+    /**\n+     * Print a document to a text file.\n+     *\n+     * @param filename  Output filename.\n+     * @param docSource The document (Document) to be printed\n+     * @return None \n+     */\n+\n+    public static void printDocumentToFile(String filename, Document docSource) {\n+        // Write a document (Document) to external file.  Useful for debugging.\n+\n+        // If a name is not provided, use the hard-code filename.\n+        if (filename == null) {\n+            filename = \"validate_document_dump.log\";\n+        }\n+        // Do a sanity check that the name should end with .log or .txt so as not to overwrite a source code.\n+        if (!filename.endsWith(\".txt\") && !filename.endsWith(\".log\")) {\n+            System.out.println(\"FileService:printStackTraceToFile:ERROR: This function can only write to file that ends with .txt or .log\");\n+            System.exit(0);\n+        }\n+\n+        try {\n+            DOMSource domSource = new DOMSource(docSource);\n+            printDocumentToFile(filename, domSource);\n+        } catch(Exception ex) {\n+            printStackTraceToFile(null,ex);\n+        }\n+    }\n+\n+    /** \n+     * Print a document (DOMSource) to a text file.\n+     *\n+     * @param filename  Output filename.\n+     * @param domSource The DOM source to be printed\n+     * @return None \n+     */\n+\n+    public static void printDocumentToFile(String filename, DOMSource domSource) {\n+        // Write a document (DOMSource) to external file.  Useful for debugging.\n+\n+        // If a name is not provided, use the hard-code filename.\n+        if (filename == null) {\n+            filename = \"validate_document_dump.log\";\n+        }\n+        // Do a sanity check that the name should end with .log or .txt so as not to overwrite a source code.\n+        if (!filename.endsWith(\".txt\") && !filename.endsWith(\".log\")) {\n+            System.out.println(\"FileService:printStackTraceToFile:ERROR: This function can only write to file that ends with .txt or .log\");\n+            System.exit(0);\n+        }\n+\n+        // Print the document to an external file.  Note that this overwrite any existing file.\n+        File file = new File(filename);\n+        try {\n+            StringWriter strWriter = new StringWriter();\n+            StreamResult result = new StreamResult(strWriter);\n+            TransformerFactory tf = TransformerFactory.newInstance();\n+            Transformer transformer = tf.newTransformer();\n+            transformer.transform(domSource, result);\n+\n+            FileWriter fileWriter = new FileWriter(file.getPath());\n+            fileWriter.write(strWriter.toString());\n+            fileWriter.close();\n+        } catch(IOException ex) {\n+            printStackTraceToFile(null,ex);\n+        } catch(TransformerException ex) {\n+            printStackTraceToFile(null,ex);\n+        }\n+    }\n+\n+\n+\n+\n+\n+}"
  },
  {
    "sha": "df790e27719a72f29383607b850b1435e476127c",
    "filename": "src/main/java/gov/nasa/pds/tools/util/TabulatedUtil.java",
    "status": "modified",
    "additions": 252,
    "deletions": 35,
    "changes": 287,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/util/TabulatedUtil.java",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/util/TabulatedUtil.java",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/main/java/gov/nasa/pds/tools/util/TabulatedUtil.java?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -2,62 +2,279 @@\n \n import java.lang.StringBuffer;\n \n-import java.net.MalformedURLException;\n-import java.net.URISyntaxException;\n import java.net.URL;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.List;\n-\n-import javax.xml.transform.sax.SAXSource;\n-\n-import net.sf.saxon.om.DocumentInfo;\n-\n-import gov.nasa.pds.tools.util.LabelParser;\n-import gov.nasa.pds.tools.util.Utility;\n-import gov.nasa.pds.tools.util.XMLExtractor;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class TabulatedUtil {\n-  // Class to inspect a tabulated content from a table file.\n \n+/**\n+ * Class that inspect a tabulated content from a table file for if a field starts with a double quote or not. \n+ * \n+ */\n+\n+public class TabulatedUtil {\n   private static final Logger LOG = LoggerFactory.getLogger(TabulatedUtil.class);\n-  private static URL contextValue      = null;\n+  private static URL contextValue = null;\n+  private static int numFields = 0;\n+  private static String fieldDelimiter = null; // How the fields are separated by.  Possible value 'Comma'\n+  private static final String TEMP_SEPARATOR = \"TEMP_SEPARATOR\"; // Use to separate columns into individual tokens.\n \n   public TabulatedUtil(URL contextValue) {\n-      this.contextValue   = contextValue;\n+      this.contextValue = contextValue;\n+  }\n+\n+  public void setNumFields(int numFields) {\n+      this.numFields = numFields;\n+  }\n+\n+  public void setFieldDelimiter(String fieldDelimiter) {\n+      this.fieldDelimiter = fieldDelimiter;\n   }\n \n   public URL getTarget() {\n     return(this.contextValue); \n   }\n \n-  public String getRecordDelimiter() {\n-      // Get the value of 'record_delimiter' in a label.  The returned value can be null.\n-      // <Table_Character>\n-      //     <record_delimiter>Carriage-Return Line-Feed</record_delimiter>\n+  public String [] smartSplit(String line) {\n+      // Special note: Some fields that starts with a double quote can contain commas inside which makes the logic of splitting using comma more complex.\n+      //\n+      // A normal comma delimited record:\n+      //\n+      //     1998_1187,1998_1187-0,One possible explanation is that bulk densities of soils (perhaps like Scooby Doo) at depth are larger than those at the surface.\n+      //\n+      // A comma delimited with field starts with a double quote record (with comma inside).\n+      //\n+      //     1998_1186,1998_1186-0,\", Scooby Doo) may be an indurated soil, because its composition is similar to soils elsewhere at the site [7].\"\n+\n+      String tokens[] = new String[0];\n+      StringBuffer stringBuffer = new StringBuffer();\n+      // Check to see if a field starts with a double quote.  The double quote can be in the first field or subsequent fields.\n+      // If the double quote is in the first field, the line would starts with '\"' whereas in subsequent field it would have ',\"' in the string.\n+      //\n+      // 1998_1803,1998_1803-3,\"Similar ratios for other ferric oxides such as hematite and maghemite occur in the direction of the \"\"Yogi\"\" soils and the bright soil near \"\"Mermaid\"\", but are far off the scale of Fig.\"^M\n+\n+      // For developer only: Set the value of runSmallSampleTest to true and run for one label only.\n+      boolean runSmallSampleTest = false;\n+      //boolean runSmallSampleTest = true;\n+      if (runSmallSampleTest) {\n+          // Developer test cases:\n+          //line = \"1,0,2021-05-01T00:00:00.000,2459335.5000000,,,FIELD ONE,,FIELD2,\";\n+          //line = \"#             OBT Integer_value\";\n+          // line = \"1998_1803,1998_1803-3,\\\"Similar ratios for other ferric oxides such as hematite and maghemite occur in the direction of the \\\"\\\"Yogi\\\"\\\" soils and the bright soil near \\\"\\\"Mermaid\\\"\\\", but are far off the scale of Fig.\";\n+          //line = \"1998_1803,1998_1803-3,\\\"Similar ratios \\\"\\\"Yogi\\\"\\\" soils and \\\"\\\"Mermaid\\\"\\\", but are far.\\\"\";\n+          //line = \"1998_1803,1998_1803-3,\\\"Similar ratios \\\"\\\"Yogi\\\"\\\" soils and \\\"\\\"Mermaid\\\"\\\", but are far.\\\",Now is the time for all good men\";\n+          //line = \"\\\"Similar ratios \\\"\\\"Yogi\\\"\\\" soils and \\\"\\\"Mermaid\\\"\\\", but are far.,Now is the time for all good men\";\n+          //line = \"\\\"Similar ratios \\\"\\\"Yogi\\\"\\\" soils and \\\"\\\"Mermaid\\\"\\\", but are far.,Now is the time for all good men\";\n+          //line = \"\\\"Similar ratios \\\"\\\"Yogi\\\"\\\" soils and \\\"\\\"Mermaid\\\"\\\", but are far.\\\",Now is the time for all good men\";\n+          //line = \"\\\"Similar ratios \\\"\\\"Yogi\\\"\\\" soils and \\\"\\\"Mermaid\\\"\\\", but are far.\\\",Now is the time for all good men\\\"\";\n+          // 1998_1803,1998_1803-3,\"Similar ratios \"\"Yogi\"\" soils and \"\"Mermaid\"\", but are far.\"\n+          // 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\n+ \n+          // Known test cases:\n+          line = \"\\\"Similar ratios \\\"\\\"Yogi\\\"\\\" soils and \\\"\\\"Mermaid\\\"\\\", but are far.\\\"\";  // Case 01; start with double quote, 2 double quotes inside, with ending quote\n+          //line = \"\\\"Similar ratios \\\"\\\"Yogi\\\"\\\" soils and \\\"\\\"Mermaid\\\"\\\", but are far.\";    // Case 02; start with double quote, 2 double quotes inside, with no ending quote\n+          //line = \"Similar ratios Yogi soils and Mermaid  but are far.\";      // Case 03; No double quotes inside, with no ending quote\n+          //line = \"Similar ratios Yogi soils and Mermaid  but are far.\\\"\";    // Case 04; No double quotes inside, with ending quote\n+          //line = \"Similar ratios Yogi soils and Mermaid  but are far., but are far\";   // Case 05; No double quotes inside, with comma separator\n+          //line = \"\\\"Similar ratios Yogi soils and Mermaid, but are far.\";    // Case 06: no 2 double quotes inside, no ending quote\n+          //line = \"\\\"Similar ratios Yogi soils and Mermaid, but are far.\\\"\";  // Case 07: no 2 double quotes inside, with ending quote\n+          //line = \"\\\"Similar ratios \\\"\\\"Yogi\\\"\\\" soils and \\\"\\\"Mermaid\\\"\\\", but are far.\\\",\\\"More fields\\\"\";    // Case 08; start with double quote, 2 double quotes inside, with ending quote, then more fields\n+      }\n+      //LOG.debug(\"line [{}]\",line);\n+\n+      // Start of with value of line:\n+      int runningPosition = 0;\n+      String reducedLine = line;\n+\n+      boolean doneFlag = false;\n+      int fieldsAdded = 0;\n+      int loopCount = 1;\n+\n+      // Parse the line until get to the end and moving runningPosition to the beginning of next field for each loop.\n+      while (doneFlag == false) {\n+          reducedLine = reducedLine.substring(runningPosition);\n+          // Only add a separator if this is not the first column.\n+          if (fieldsAdded > 0) {\n+              stringBuffer.append(this.TEMP_SEPARATOR);  // Append made up separator.\n+          }\n+          //LOG.debug(\"smartSplit:loopCount,runningPosition,reducedLine.length {},{},{}\",loopCount,runningPosition,reducedLine.length());\n+          //LOG.debug(\"smartSplit:loopCount,runningPosition,reducedLine {},{},{}\",loopCount,runningPosition,reducedLine);\n+\n+          // \"Similar ratios for other ferric oxides such as hematite and maghemite occur in the direction of the \"\"Yogi\"\" soils and the bright soil near \"\"Mermaid\"\", but are far off the scale of Fig.\"\n+          if (reducedLine.startsWith(\"\\\"\")) {\n+              // Check first for false end of field: bright soil near \"\"Mermaid\"\", but are far off the scale of Fig.\"\n+              // The 'Mermaid\"\",' does not end the field because there are still token more.\n+              int posDoubleDoubleQuoteComma = reducedLine.indexOf(\"\\\"\\\",\",1);\n+              int posEndField = -1;\n+              if (posDoubleDoubleQuoteComma > 0) {\n+                  // [bright soil near \"\"Mermaid\"\", but are far off the scale of Fig.\"]\n+                  //                               3\n+                  // Note that the \", after Mermaid is not the end of the field yet.\n+                  posEndField = reducedLine.indexOf(\"\\\",\",posDoubleDoubleQuoteComma + 3);\n+              } else {\n+                  // Look for where the field ends with '\",' if there are more fields or '\"' as the last character.\n+                  posEndField = reducedLine.indexOf(\"\\\",\",1);\n+              }\n+              //LOG.debug(\"smartSplit:loopCount,posEndField {},{}\",loopCount,posEndField);\n+              //LOG.debug(\"smartSplit:loopCount,posEndField,reducedLine {},{},[{}]\",loopCount,posEndField,reducedLine);\n+              if (posEndField > 0) {\n+                  // Extract starting from beginning next double quote and comma.\n+                  stringBuffer.append(reducedLine.substring(0,posEndField+1));  // The posEndField+1 ensure getting the last \" of \\\"Field one\\\"\n+                  // Case 08 [\"Similar ratios \"\"Yogi\"\" soils and \"\"Mermaid\"\", but are far.\",\"More fields\"];  start with double quote, 2 double quotes inside, with ending quote, then more fields\n+                  //LOG.debug(\"TABULATED_FILE_CASE_08\");\n+                  fieldsAdded += 1;\n+                  runningPosition = posEndField + 2;  // Move the pointer to one character after \", which is \"Fields 2\"\n+              } else {\n+                  // There is no double quote and comma, we are at the last field, so just get to the end\n+                  // There may be a case where the field contains two double quotes together.  If that is the case\n+                  // look at the last two double quotes together and then add one to look for the next double quote.\n+                  // 1998_1803,1998_1803-3,\"Similar ratios \"\"Yogi\"\" soils and \"\"Mermaid\"\", but are far.\n+                  // 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\n+                  // \"Similar ratios \"\"Yogi\"\" soils and \"\"Mermaid\"\", but are far.\",Now is the time for all good men\n+                  // 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\n+                  //                                             44\n+                  //                                               46\n+                  // For loopCount at 3, the value of lastIndexOfTwoDoubleQuotes should be 44 and lastIndexOfTwoDoubleQuotes+2 = 46\n+         \n+                  int lastIndexOfTwoDoubleQuotes = reducedLine.lastIndexOf(\"\\\"\\\"\");\n+                  //LOG.debug(\"smartSplit:loopCount,lastIndexOfTwoDoubleQuotes {},{}\",loopCount,lastIndexOfTwoDoubleQuotes);\n+                  //LOG.debug(\"smartSplit:loopCount,MAKE_COPY {},[{}]\",loopCount,reducedLine.substring(0,reducedLine.lastIndexOf(\"\\\"\")));\n+                  if (lastIndexOfTwoDoubleQuotes > 0) {\n+                      // Copy from beginning to the to the first double quote after the last of the two double quote.\n+                      //    \"Similar ratios \"\"Yogi\"\" soils and \"\"Mermaid\"\", but are far.\n+                      // Note that the above string has a starting quote but no ending quote.  Need to check for a double quote\n+                      // after the lastIndexOfTwoDoubleQuotes\n+                      int indexOfLastDoubleQuote = reducedLine.indexOf(\"\\\"\",lastIndexOfTwoDoubleQuotes+2);\n+                      if (indexOfLastDoubleQuote >= 0) {\n+                          //  \"Similar ratios \"\"Yogi\"\" soils and \"\"Mermaid\"\", but are far.\",ZZZ   << Note that this field has an ending quote before [,ZZZ].\n+                          // Case 01 [\"Similar ratios \"\"Yogi\"\" soils and \"\"Mermaid\"\", but are far.\"];  // Case 01; 2 double quotes inside, with ending quote\n+                          stringBuffer.append(reducedLine.substring(0,reducedLine.indexOf(\"\\\"\",lastIndexOfTwoDoubleQuotes+2)));   // Copy from [\"Similar] to the last [far.\"]\n+                          // LOG.debug(\"TABULATED_FILE_CASE_01\");\n+                      } else {\n+                          //  \"Similar ratios \"\"Yogi\"\" soils and \"\"Mermaid\"\", but are far.        << Note that this field has no ending quote.\n+                          // Copy from [\"Similar] to the end since there is no ending quote \n+                          // Case 02 [\"Similar ratios \"\"Yogi\"\" soils and \"\"Mermaid\"\", but are far.];  // Case 02; 2 double quotes inside, with no ending quote\n+                          stringBuffer.append(reducedLine.substring(0));\n+                          //LOG.debug(\"TABULATED_FILE_CASE_02\");\n+                      }\n+                  } else {\n+                      // There is no two double quotes together, just copy from the beginning of the field toward the last double quote.\n+                      int indexOfLastDoubleQuote = reducedLine.indexOf(\"\\\"\",1);\n+                      if (indexOfLastDoubleQuote >= 0) {\n+                          // Case 06 [\"Similar ratios Yogi soils and Mermaid, but are far.]\n+                          stringBuffer.append(reducedLine.substring(0,reducedLine.indexOf(\"\\\"\",1)+1));   // Include the last quote as well.\n+                          //LOG.debug(\"TABULATED_FILE_CASE_06\");\n+                      } else {\n+                          // Case 07 [\"Similar ratios Yogi soils and Mermaid, but are far.\"]\n+                          stringBuffer.append(reducedLine.substring(0));\n+                          //LOG.debug(\"TABULATED_FILE_CASE_07\");\n+                      }\n+                  }\n+                  fieldsAdded += 1;\n+                  runningPosition = reducedLine.length() + 1;\n+              }\n+          } else {\n+              // If there are more comma to see fetch from beginning to comma.\n+              //LOG.debug(\"smartSplit:loopCount,nextComma {},[{}]\",loopCount,reducedLine.indexOf(\",\"));\n+\n+              if (reducedLine.indexOf(\",\") >= 0) {\n+                  stringBuffer.append(reducedLine.substring(0,reducedLine.indexOf(\",\")));\n+                  //LOG.debug(\"TABULATED_FILE_CASE_05\");\n+                  //LOG.debug(\"smartSplit:loopCount,NORMAL_APPEND {},[{}]\",loopCount,reducedLine.substring(0,reducedLine.indexOf(\",\")));\n+                  // Case 05 [Similar ratios Yogi soils and Mermaid  but are far., but are far]; No double quotes inside, with comma separator\n+                  runningPosition = reducedLine.indexOf(\",\") + 1;\n+              } else {\n+                  // There are no more comma, we are at the last field get everything.\n+                  //LOG.debug(\"smartSplit:loopCount,NORMAL_APPEND_LAST {},[{}]\",loopCount,reducedLine.substring(0));\n+                  // Both of these cases acceptable.  There is no rule against a field having a double quote randomly inside if it does not start with a double quote..\n+                  // Case 03 [Similar ratios Yogi soils and Mermaid  but are far.]  No double quotes inside, with no ending quote\n+                  // Case 04 [Similar ratios Yogi soils and Mermaid  but are far.\"] No double quotes inside, with ending quote\n+                  stringBuffer.append(reducedLine.substring(0));\n+                  //LOG.debug(\"TABULATED_FILE_CASE_03_04\");\n+                  runningPosition = reducedLine.length() + 1;\n+              }\n+              fieldsAdded += 1;\n+          }\n+\n+          //LOG.debug(\"smartSplit:loopCount,stringBuffer.toString() {},{}\",loopCount,stringBuffer.toString());\n+          loopCount += 1;\n+\n+          // We are done with this loop if running position is at length or goes pass the length of reducedLine.length()\n+          // It is important not to index pass the length of a string variable in Java otherwise an exception will arise\n+          // during a regression test and it will be difficult to know where the error occurred.\n+          if (runningPosition >= reducedLine.length()) {\n+              doneFlag = true;\n+          }\n+          //LOG.debug(\"smartSplit:loopCount,runningPosition,reducedLine {},{},[{}]\",loopCount,runningPosition,reducedLine);\n+          //LOG.debug(\"smartSplit:loopCount,runningPosition,reducedLine.length {},{},{}\",loopCount,runningPosition,reducedLine.length());\n+      }\n+\n+      // Now that the stringBuffer contains all the fields with TEMP_SEPARATOR as a field separator,\n+      // we can safely split the string into individual tokens.\n+      tokens = stringBuffer.toString().split(TEMP_SEPARATOR);\n+      //LOG.debug(\"smartSplit:loopCount,tokens {},{}\",loopCount,tokens);\n+      //LOG.debug(\"smartSplit:loopCount,tokens.length {},{}\",loopCount,tokens.length);\n+\n+      //runSmallSampleTest = true;\n+      // If running a small sample test, print all the tokens that was split, the number of tokens and exit for review.\n+      if (runSmallSampleTest) {\n+          for (int ii=0; ii < tokens.length; ii++) {\n+              LOG.info(\"smartSplit:ii,token[ii] {},[{}]\",ii,tokens[ii]);\n+          }\n+          LOG.info(\"smartSplit:line [{}]\",line);\n+          LOG.info(\"smartSplit:tokens.length {}\",tokens.length);\n+          System.out.println(\"TabulatedUtil:EARLY_EXIT_BY_DEVELOPER:early#exit#0002\");\n+          System.exit(0);\n+      }\n+\n+      return(tokens);\n+  }\n+\n+  public Boolean[] getListOfBooleanFieldsStartWithQuote(String line) {\n+      // For every record (or line) in the table delimited file, build a list of booleans whether the field starts with a double quote or not.\n+      // If fieldDelimiter is null, there is no way to split the line so the returned length of fieldsStartWithQuoteList is zero.\n+      // An example of lines:\n+      //\n+      // 1998_1018,1998_1018-0,The angle measuring capability  was used to determine that Sojourner could not approach Yogi from the IMP-facing side due to an overhang that is only obvious using the reprojecti on capabilities of Marsmap.\n+       // 1998_1228,1998_1228-1,\"The Yogi images were obtained in four filters (443, 531, 671, and 967 nm) at 0740, 1500, 1640 LST over Sols 55-56 and at 0900 LST on Sol 75.\"\n+       //\n+\n+      Boolean[] fieldsStartWithQuoteList = new Boolean[0]; // Start with zero elements since we don't know how many fields this will be\n+      Arrays.fill(fieldsStartWithQuoteList, Boolean.FALSE);  // Set all values to FALSE and set to TRUE if it starts with a double quote.\n+      //LOG.debug(\"getListOfBooleanFieldsStartWithQuote: this.fieldDelimiter,line.length() {},{}\",this.fieldDelimiter,line.length()); \n+      //LOG.debug(\"TableDataContentValidationRule:getListOfBooleanFieldsStartWithQuote:fieldDelimiter,line {},[{}]\",fieldDelimiter,line);\n \n-      String recordDelimiter = null;\n+      if (this.fieldDelimiter != null && this.fieldDelimiter.equalsIgnoreCase(\"comma\")) {\n+          //String tokens[] = line.split(\",\");  // This is the normal split but may not work if the fields is enclosed in double quotes.\n+          String tokens[] = smartSplit(line);   // This is a better funtion to perform a smart split on the line for fields separated by a comma.\n \n-      try {\n-          SAXSource saxSource = new SAXSource(Utility.openConnection(getTarget()));\n-          DocumentInfo docInfo = LabelParser.parse(saxSource); // Parses a label.\n-          XMLExtractor extractor = new XMLExtractor(docInfo);\n-          String fieldCheck = \"record_delimiter\";\n+          // Do a sanity check to see that the number of tokens should be the same as numFields\n+          // It is just a warning if received more tokens than numFields.\n+          //LOG.debug(\"getListOfBooleanFieldsStartWithQuote:numFields,tokens.length {},{}\",this.numFields,tokens.length);\n+          // Note that some tabulated file may have a Group_Field_Delimited/repetitions that would throw off the num_fields,\n+          /// so a more reliable value to use is tokens.length\n+          if (tokens.length > this.numFields) {\n+              //LOG.debug(\"The number of tokens {} from parsing line is greater than numFields {}\",tokens.length,this.numFields);\n+              //LOG.debug(\"Will instantiate number of Booleans for fieldsStartWithQuoteList {}\",tokens.length);\n+              fieldsStartWithQuoteList = new Boolean[tokens.length]; // Allocate as many elements as the tokens length.\n+              Arrays.fill(fieldsStartWithQuoteList, Boolean.FALSE);  // Set all values to FALSE and set to TRUE if it starts with a double quote.\n+          }\n \n-          // Since 'record_delimiter' does not have to be in Table_Character element, prepend with \"//\" to get to the field's value. \n-          recordDelimiter = extractor.getValueFromDoc(\"//\" + fieldCheck);\n-          // If the tag does not exist, it is returned as an empty string.  Reset to null for later use.\n-          if (recordDelimiter.length() == 0) {\n-             recordDelimiter = null;\n+          //LOG.debug(\"TableDataContentValidationRule:getListOfBooleanFieldsStartWithQuote:tokens.length,line {},[{}]\",tokens.length,line);\n+          for (int i = 0; i < tokens.length; i++) {\n+              // Check for i against tokens.length otherwise may index pass the length of tokens array.\n+              if (tokens[i].startsWith(\"\\\"\")) {\n+                  fieldsStartWithQuoteList[i] = Boolean.TRUE;\n+              }\n           }\n-      } catch (Exception e) {\n-          LOG.error(\"Exception encountered in getFieldDelimiter:getTarget() {},{}\",getTarget());\n-          e.printStackTrace();\n+          //LOG.debug(\"TableDataContentValidationRule:getListOfBooleanFieldsStartWithQuote:fieldsStartWithQuoteList.length,tokens.length {},{}\",fieldsStartWithQuoteList.length,tokens.length);\n       }\n-      return(recordDelimiter);\n+      //LOG.debug(\"TableDataContentValidationRule:getListOfBooleanFieldsStartWithQuote:fieldsStartWithQuoteList.length {}\",fieldsStartWithQuoteList.length);\n+\n+      //LOG.debug(\"TableDataContentValidationRule:getListOfBooleanFieldsStartWithQuote:fieldsStartWithQuoteList.length {}\",fieldsStartWithQuoteList.length);\n+      return(fieldsStartWithQuoteList);\n   }\n }"
  },
  {
    "sha": "349d6e0b680170eda008c723ae0e09404a82f05b",
    "filename": "src/main/java/gov/nasa/pds/tools/validate/content/table/FieldValueValidator.java",
    "status": "modified",
    "additions": 36,
    "deletions": 1,
    "changes": 37,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/validate/content/table/FieldValueValidator.java",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/validate/content/table/FieldValueValidator.java",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/main/java/gov/nasa/pds/tools/validate/content/table/FieldValueValidator.java?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -38,6 +38,7 @@\n import gov.nasa.pds.objectAccess.DelimitedTableRecord;\n import gov.nasa.pds.objectAccess.FixedTableRecord;\n import gov.nasa.pds.tools.label.ExceptionType;\n+import gov.nasa.pds.tools.util.FileService;\n import gov.nasa.pds.tools.validate.ProblemListener;\n import gov.nasa.pds.tools.validate.ProblemType;\n import gov.nasa.pds.tools.validate.rule.pds4.DateTimeValidator;\n@@ -160,8 +161,39 @@ public void validate(TableRecord record, FieldDescription[] fields, boolean chec\n \n     int actualFieldNumber = 1;\n     for (int i = 0; i < fields.length; i++) {\n+      String value = \"dummy_value\";   // Set to a dummy value to allow inspection when the value changed to a legitimate value.\n+      //LOG.info(\"validate:i,fields.length {},{}\",i,fields.length);\n       try {\n-        String value = record.getString(i+1);\n+        //String value = record.getString(i+1);\n+        value = record.getString(i+1);\n+        LOG.debug(\"validate:i,value {},[{}]\",i,value);\n+\n+        //LOG.debug(\"FieldValueValidator:validate:record.getLocation().getRecord(),value {},[{}]\",record.getLocation().getRecord(),value);\n+        //LOG.debug(\"FieldValueValidator:validate:i,getClass().getName() {},{}\",i,fields[i].getClass().getName());\n+        // issue_298: validate misses double quotes within a delimited table\n+        //\n+        // New logic to check if the field starts with a double quote and then also contain a double quote inside.\n+\n+        String sanitizedValue = value;\n+        boolean fieldIsEnclosedByQuotes = false;\n+        // Remove the leading and trailing quotes from value if the field is enclosed by it.\n+        if (value.startsWith(\"\\\"\") && value.endsWith(\"\\\"\")) {\n+            fieldIsEnclosedByQuotes = true;\n+            sanitizedValue = value.substring(1, value.length()-1);\n+        }\n+\n+        LOG.debug(\"fieldIsEnclosedByQuotes,value,sanitizedValue [{}],[{}]\",fieldIsEnclosedByQuotes,value,sanitizedValue);\n+\n+        if (fieldIsEnclosedByQuotes && sanitizedValue.contains(\"\\\"\")) {\n+                String message = \"The field value '\" + value.trim()\n+                  + \"' that starts with double quote should not contain double quote(s)\";\n+                addTableProblem(ExceptionType.ERROR,\n+                    ProblemType.INVALID_FIELD_VALUE,\n+                    message,\n+                    record.getLocation(),\n+                    (i + 1));\n+        }\n+\n         // issue_209: fix for incorrect field number\n         if (i<(fields.length-1) ) {\n            if (fields[i+1].getOffset()!=fields[i].getOffset())\n@@ -328,6 +360,9 @@ public void validate(TableRecord record, FieldDescription[] fields, boolean chec\n             record.getLocation(),\n             (i + 1));\n         fatalError = true;\n+\n+        // Print the stack trace to an external file for inspection.\n+        FileService.printStackTraceToFile(null,e);\n       }\n     }\n     "
  },
  {
    "sha": "3b54db242c6bcc57cd8df8b39ada650ce65484c7",
    "filename": "src/main/java/gov/nasa/pds/tools/validate/content/table/RawTableReader.java",
    "status": "modified",
    "additions": 38,
    "deletions": 2,
    "changes": 40,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/validate/content/table/RawTableReader.java",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/validate/content/table/RawTableReader.java",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/main/java/gov/nasa/pds/tools/validate/content/table/RawTableReader.java?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -21,6 +21,11 @@\n import gov.nasa.pds.objectAccess.FixedTableRecord;\n import gov.nasa.pds.objectAccess.TableReader;\n \n+import com.opencsv.exceptions.CsvValidationException;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n /**\n  * Table reader that provides the capability to read a table\n  * line by line rather than record by record, which is more\n@@ -30,6 +35,8 @@\n  *\n  */\n public class RawTableReader extends TableReader {\n+  private static final Logger LOG = LoggerFactory.getLogger(RawTableReader.class);\n+\n   /** The data file. */\n   private URL dataFile;\n   \n@@ -60,6 +67,25 @@ public RawTableReader(Object table, URL dataFile,\n     this.label = label;\n     this.table = tableIndex;\n   }\n+\n+  /**\n+   * Constructor.\n+   * \n+   * @param table The table object.\n+   * @param dataFile The data file.\n+   * @param label The label.\n+   * @param tableIndex The index of the table.\n+   * @param readEntireFile Set to 'true' to read in entire data file.\n+   * @param keepQuotationsFlag Flag to optionally preserve the leading and trailing quotes. \n+   * @throws Exception If table offset is null.\n+   */\n+  public RawTableReader(Object table, URL dataFile, \n+      URL label, int tableIndex, boolean readEntireFile, boolean keepQuotationsFlag) throws Exception {\n+    super(table, dataFile, false, readEntireFile, keepQuotationsFlag);\n+    this.dataFile = dataFile;\n+    this.label = label;\n+    this.table = tableIndex;\n+  }\n   \n   /**\n    * Previews the next line in the data file.\n@@ -154,11 +180,16 @@ public FixedTableRecord toRecord(String line, int row) {\n    * @return a table record, with the location set.\n    */\n   public TableRecord readNext() throws IOException {\n+   try {\n     TableRecord record = super.readNext();\n     if (record != null) {\n       record.setLocation(getLocation());\n     }\n     return record;\n+   } catch (CsvValidationException ex) {\n+     LOG.error(\"Function readNext() has failed\");\n+     throw new IOException(ex.getMessage());\n+   }\n   }\n   \n   /**\n@@ -168,11 +199,16 @@ public TableRecord readNext() throws IOException {\n    * \n    * @return a table record, with the location set.\n    */\n-  public TableRecord getRecord(int index) \n+  public TableRecord getRecord(int index, boolean keepQuotationsFlag) \n       throws IllegalArgumentException, IOException {\n-    TableRecord record = super.getRecord(index);\n+   try {\n+    TableRecord record = super.getRecord(index,keepQuotationsFlag);\n     record.setLocation(getLocation());\n     return record;\n+   } catch (CsvValidationException ex) {\n+     LOG.error(\"Function getRecord has failed\");\n+     throw new IOException(ex.getMessage());\n+   }\n   }\n   \n   /**"
  },
  {
    "sha": "f5cff864440aa7be3167b221625b9dadc73792f0",
    "filename": "src/main/java/gov/nasa/pds/tools/validate/rule/pds4/TableDataContentValidationRule.java",
    "status": "modified",
    "additions": 67,
    "deletions": 14,
    "changes": 81,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/validate/rule/pds4/TableDataContentValidationRule.java",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/main/java/gov/nasa/pds/tools/validate/rule/pds4/TableDataContentValidationRule.java",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/main/java/gov/nasa/pds/tools/validate/rule/pds4/TableDataContentValidationRule.java?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -35,6 +35,7 @@\n import org.w3c.dom.Document;\n import org.w3c.dom.Node;\n import org.w3c.dom.NodeList;\n+import org.w3c.dom.Element;\n \n import gov.nasa.arc.pds.xml.generated.Array;\n import gov.nasa.arc.pds.xml.generated.FileArea;\n@@ -66,6 +67,8 @@\n import gov.nasa.pds.objectAccess.DataType.NumericDataType;\n import gov.nasa.pds.tools.label.ExceptionType;\n import gov.nasa.pds.tools.label.SourceLocation;\n+import gov.nasa.pds.tools.util.DOMSourceManager;\n+import gov.nasa.pds.tools.util.FileService;\n import gov.nasa.pds.tools.util.Utility;\n import gov.nasa.pds.tools.validate.ProblemDefinition;\n import gov.nasa.pds.tools.validate.ProblemType;\n@@ -121,16 +124,33 @@ public boolean isApplicable(String location) {\n     if (getContext().containsKey(PDS4Context.LABEL_DOCUMENT)) {\n       Document label = getContext().getContextValue(PDS4Context.LABEL_DOCUMENT,\n           Document.class);\n-      \n-      DOMSource source = new DOMSource(label);      \n+\n+      DOMSource source = new DOMSource(label); \n+\n+      // Note that the value of label is [#document: null] if attempt to print using LOG.debug\n+      //FileService.printDocumentToFile(\"validate_document_dump.log\",label);\n+      //FileService.printDocumentToFile(\"validate_dom_source.log\",source);\n+\n+      //LOG.debug(\"isApplicable:getContext): [{}]\",getContext());\n+      //LOG.debug(\"isApplicable:label: [{}]\",label);   The value of label is [#document: null] and not as useful.\n+      //LOG.debug(\"isApplicable:source: [{}]\",source);\n+\n       try {\n+        // Check to see how many tables are contained in the label.\n         NodeList tables = (NodeList) xPathFactory.newXPath().evaluate(\n             XPaths.TABLE_TYPES, source, XPathConstants.NODESET);\n+\n+        // The rule of TableDataContentValidationRule is only applicable if it contains at least 1 table.\n         if (tables.getLength() > 0) {\n           isApplicable = true;\n+\n+          DOMSourceManager.saveDOM(location,source);\n+          LOG.debug(\"TableDataContentValidationRule:isApplicable: location [{}]\",location);\n+          LOG.debug(\"TableDataContentValidationRule:isApplicable: getTarget() [{}][{}]\",getTarget(),getTarget().toString());\n         }\n       } catch (XPathExpressionException e) {\n-        //Ignore\n+        // Print the stack trace to an external file for inspection.\n+        FileService.printStackTraceToFile(null,e);\n       }\n       \n     }\n@@ -143,6 +163,7 @@ public void validateTableDataContents() throws MalformedURLException,\n \t  \n     LOG.debug(\"Entering validateTableDataContents\");\n     LOG.debug(\"validateTableDataContents:getTarget() {}\",getTarget());\n+\n     String recordDelimiter = null;  // Specify how each record ends: null, carriage return line feed or line feed.\n \n     ObjectProvider objectAccess = null;\n@@ -166,10 +187,15 @@ public void validateTableDataContents() throws MalformedURLException,\n     XPath xpath = xPathFactory.newXPath();\n     LOG.debug(\"validateTableDataContents:xpath {}\",xpath);\n     try {\n+      DOMSource source = DOMSourceManager.reuseDOM(getTarget().toString());\n+      if (source == null) {\n+          source = new DOMSource(getContext().getContextValue(\n+                       PDS4Context.LABEL_DOCUMENT, Document.class));\n+      }\n+\n       fileAreaNodes = (NodeList) xpath.evaluate(\n         XPaths.TABLE_FILE_AREAS, \n-        new DOMSource(getContext().getContextValue(\n-            PDS4Context.LABEL_DOCUMENT, Document.class)), \n+        source,\n         XPathConstants.NODESET);\n         LOG.debug(\"validateTableDataContents:fileAreaNodes {}\",fileAreaNodes);\n         LOG.debug(\"validateTableDataContents:fileAreaNodes.getLength() {}\",fileAreaNodes.getLength());\n@@ -261,18 +287,24 @@ public void validateTableDataContents() throws MalformedURLException,\n       }\n       catch (InvalidTableException ex) {\n     \t //ex.printStackTrace();\n+         // Print the stack trace to an external file for inspection.\n+         FileService.printStackTraceToFile(null,ex);\n       }\n       catch (Exception ex) { \n     \t //ex.printStackTrace();\n+         // Print the stack trace to an external file for inspection.\n+         FileService.printStackTraceToFile(null,ex);\n       }\n \n       LOG.debug(\"validateTableDataContents:arraySize,actualTotalRecords {},{}\",arraySize,actualTotalRecords);\n       LOG.debug(\"validateTableDataContents:dataFile,tableObjects.size() {},{}\",dataFile,tableObjects.size());\n+      boolean keepQuotationsFlag = true;  // Flag to optionally ask RawTableReader to preserve the leading and trailing quotes.\n+\n       for (Object table : tableObjects) {\n         RawTableReader reader = null;\n         try {\n           reader = new RawTableReader(table, dataFile, getTarget(), \n-              tableIndex, false);\n+              tableIndex, false, keepQuotationsFlag);\n         } \n         catch (InvalidTableException ex) {\n         \taddTableProblem(ExceptionType.ERROR, \n@@ -281,6 +313,8 @@ public void validateTableDataContents() throws MalformedURLException,\n                     dataFile,\n                     tableIndex,\n                     -1);\n+                // Print the stack trace to an external file for inspection.\n+                FileService.printStackTraceToFile(null,ex);\n                 tableIndex++;\n                 continue;\n         }\n@@ -291,6 +325,8 @@ public void validateTableDataContents() throws MalformedURLException,\n               dataFile,\n               tableIndex,\n               -1);\n+          // Print the stack trace to an external file for inspection.\n+          FileService.printStackTraceToFile(null,ex);\n           tableIndex++;\n           continue;\n         }\n@@ -305,6 +341,7 @@ public void validateTableDataContents() throws MalformedURLException,\n           LOG.debug(\"validateTableDataContents:table instanceof TableDelimited\");\n           TableDelimited td = (TableDelimited) table;\n           recordDelimiter = td.getRecordDelimiter();  // Fetch the record_delimiter here so it can be used to check for CRLF or LF ending.\n+          //tabulatedUtil.setFieldDelimiter(td.getFieldDelimiter());\n           LOG.debug(\"td.getRecordDelimiter() [{}]\",td.getRecordDelimiter());\n \n           if (td.getRecordDelimited() != null &&\n@@ -346,9 +383,12 @@ public void validateTableDataContents() throws MalformedURLException,\n           LOG.debug(\"table instanceof TableCharacter: else\");\n           TableCharacter tc = (TableCharacter) table;\n           recordDelimiter = tc.getRecordDelimiter();  // Fetch the record_delimiter here so it can be used to check for CRLF or LF ending.\n+          // Note that TableCharacter class does not contain a function getFieldDelimiter() because there is not separator between fields since\n+          // they are positional.\n           LOG.debug(\"tc.getRecordCharacter() {}\",tc.getRecordCharacter());\n           LOG.debug(\"tc.getRecordCharacter().getRecordLength() {}\",tc.getRecordCharacter().getRecordLength());\n           LOG.debug(\"tc.getRecordDelimiter() [{}]\",tc.getRecordDelimiter());\n+//System.exit(0);\n           if (tc.getRecordCharacter() != null && \n               tc.getRecordCharacter().getRecordLength() != null) {\n             recordLength = tc.getRecordCharacter().getRecordLength().getValue().intValueExact();\n@@ -358,8 +398,12 @@ public void validateTableDataContents() throws MalformedURLException,\n           try {\n              actualRecordNumber = reader.getRecordSize(dataFile, table);\n           }\n-          catch (Exception e) {}        \n+          catch (Exception e) {\n+              FileService.printStackTraceToFile(null,e);\n+          }\n+           \n           LOG.debug(\"recordLength,definedNumRecords,recordsToRemove,actualRecordNumber {},{},{},{}\",recordLength,definedNumRecords,recordsToRemove,actualRecordNumber);\n+          // Print the stack trace to an external file for inspection.\n         } \n         \n         { // issue_220\n@@ -396,6 +440,9 @@ public void validateTableDataContents() throws MalformedURLException,\n         TableRecord record = null;\n         try {\n           if (table instanceof TableBinary) {\n+            LOG.debug(\"table instanceof TableBinary\");\n+//LOG.info(\"table instanceof TableBinary\");\n+//System.out.println(\"TableDataContentValidationRule:table instanceof TableBinary\");\n             try {\n               record = reader.readNext();\n               while (record != null) {\n@@ -406,11 +453,13 @@ public void validateTableDataContents() throws MalformedURLException,\n                 } catch (FieldContentFatalException e) {\n                     // If we get a fatal error, we can avoid an overflow of error output\n                     // by killing the loop through all the table records\n+                    // Print the stack trace to an external file for inspection.\n+                    FileService.printStackTraceToFile(null,e);\n                     break;\n                 }\n                 if (spotCheckData != -1) {\n                   try {\n-                    record = reader.getRecord(reader.getCurrentRow() + spotCheckData);\n+                    record = reader.getRecord(reader.getCurrentRow() + spotCheckData, keepQuotationsFlag);\n                   } catch (IllegalArgumentException iae) {\n                     record = null;\n                   } catch (IOException io) {\n@@ -443,7 +492,7 @@ public void validateTableDataContents() throws MalformedURLException,\n                   if (recordDelimiter.equalsIgnoreCase(\"Carriage-Return Line-Feed\") && !line.endsWith(\"\\r\\n\")) {\n                     addTableProblem(ExceptionType.ERROR,\n                         ProblemType.MISSING_CRLF,\n-                        \"Unexpected record delimiter. Expected: 'Carriage-Return Line-Feed'\",\n+                        \"Record does not end in carriage-return line feed.\",\n                         dataFile, tableIndex, reader.getCurrentRow());\n                     manuallyParseRecord = true;\n                   } else if (recordDelimiter.equalsIgnoreCase(\"Line-Feed\")) {\n@@ -453,20 +502,20 @@ public void validateTableDataContents() throws MalformedURLException,\n                           // If the delimiter is \"Line-Feed\" then the line should end with a line feed.\n                           addTableProblem(ExceptionType.ERROR,\n                               ProblemType.MISSING_LF,\n-                              \"Unexpected record delimiter. Expected: 'Line-Feed'\",\n+                              \"Record does not end in line feed.\",\n                               dataFile, tableIndex, reader.getCurrentRow());\n                        }\n                        if (line.endsWith(\"\\r\\n\")) {  // If the delimiter is Line-Feed, then the line should not end with \"\\r\\n\"\n                           addTableProblem(ExceptionType.ERROR,\n                               ProblemType.MISSING_LF,\n-                              \"Expected record delimiter: 'Line-Feed'. Actual: 'Carriage-Return Line-Feed'\",\n+                              \"Record delimited with 'Line-Feed' should not end with carriage-return line-feed.\",\n                               dataFile, tableIndex, reader.getCurrentRow());\n                        }\n                     manuallyParseRecord = true;\n                   } else {\n                     addTableProblem(ExceptionType.DEBUG,\n                         ProblemType.CRLF_DETECTED,\n-                        \"Record ends in 'Carriage-Return Line-Feed' (OK)\",\n+                        \"Record ends in carriage-return line feed.\",\n                         dataFile,\n                         tableIndex,\n                         reader.getCurrentRow());\n@@ -545,14 +594,16 @@ public void validateTableDataContents() throws MalformedURLException,\n                   record = reader.toRecord(line, reader.getCurrentRow());\n                 } else {\n                 \t//System.out.println(\"TableDataContentValidationRule...... reader.getCurrentRow() = \" + reader.getCurrentRow());\n-                  record = reader.getRecord(reader.getCurrentRow());\n+                  record = reader.getRecord(reader.getCurrentRow(), keepQuotationsFlag);\n                 }\n                 //Validate fields within the record here\n                 try {\n                     fieldValueValidator.validate(record, reader.getFields());\n                 } catch (FieldContentFatalException e) {\n                     // If we get a fatal error, we can avoid an overflow of error output\n                     // by killing the loop through all the table records\n+                    // Print the stack trace to an external file for inspection.\n+                    FileService.printStackTraceToFile(null,e);\n                     break;\n                 }\n \n@@ -593,7 +644,7 @@ public void validateTableDataContents() throws MalformedURLException,\n                   // If spot checking is turned on, we want to skip to\n                   // the record just before the one we want to read\n                   try {\n-                    record = reader.getRecord(reader.getCurrentRow() + (spotCheckData - 1));\n+                    record = reader.getRecord(reader.getCurrentRow() + (spotCheckData - 1), keepQuotationsFlag);\n                   } catch (IllegalArgumentException iae) {\n                     line = null;\n                     continue;\n@@ -635,6 +686,8 @@ public void validateTableDataContents() throws MalformedURLException,\n               dataFile,\n               -1,\n               -1);\n+           // Print the stack trace to an external file for inspection.\n+           FileService.printStackTraceToFile(null,io);\n         }\n         actualRecordNumber -= recordsToRemove;\n         tableIndex++;"
  },
  {
    "sha": "889604ab8a33c26f8e7fc06e382ee2e18feceea8",
    "filename": "src/test/java/cucumber/StepDefs.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/java/cucumber/StepDefs.java",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/java/cucumber/StepDefs.java",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/test/java/cucumber/StepDefs.java?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -184,6 +184,8 @@ private int getMessageCountBasedOnProblemType(String problemEnum, JsonObject rep\n                 count = this.getMessageCount(reportJson, ProblemType.MISSING_LF.getKey());\n             } else if (strTemp.equals(\"MISSING_CRLF\")) {\n                 count = this.getMessageCount(reportJson, ProblemType.MISSING_CRLF.getKey());\n+            } else if (strTemp.equals(\"INVALID_FIELD_VALUE\")) {\n+                count = this.getMessageCount(reportJson, ProblemType.INVALID_FIELD_VALUE.getKey());\n             } else if (strTemp.equals(\"totalWarnings\")) {\n                 count = reportJson.getAsJsonObject(\"summary\").get(\"totalWarnings\").getAsInt();\n             } else if (strTemp.equals(\"totalErrors\")) {"
  },
  {
    "sha": "a511c2731b7a5ca26e7171af209e6f51392a6c8d",
    "filename": "src/test/resources/features/validate.feature",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/features/validate.feature",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/features/validate.feature",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/test/resources/features/validate.feature?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -122,11 +122,17 @@ Scenario Outline: Execute validate command for tests below.\n  |\"NASA-PDS/validate#281 5\" | \"github281\" | 0 | \"0 errors expected for FILESIZE_MISMATCH.\" | \"FILESIZE_MISMATCH\" | \"src/test/resources\" | \"target/test\" | \"-R pds4.label -r {reportDir}/report_github281_label_valid_2_cucumber.json -s json {resourceDir}/github281/valid/collection_gwe_spk_valid_2_no_filesize.xml\" | \"report_github281_label_valid_2_cucumber.json\" |\n  |\"NASA-PDS/validate#281 6\" | \"github281\" | 0 | \"0 errors expected for FILESIZE_MISMATCH.\" | \"FILESIZE_MISMATCH\" | \"src/test/resources\" | \"target/test\" | \"-R pds4.label -r {reportDir}/report_github281_label_valid_3_cucumber.json -s json {resourceDir}/github281/valid/collection_gwe_spk_valid_3_no_filesize_no_checksum.xml\" | \"report_github281_label_valid_3_cucumber.json\" |\n \n+# https://github.com/NASA-PDS/validate/issues/298 validate misses double quotes within a delimited table\n+\n+ |\"NASA-PDS/validate#298 VALID\" | \"github298\" | 0 | \"0 errors messages expected.\" | \"totalErrors\" | \"src/test/resources\" | \"target/test\" | \"-R pds4.label -r {reportDir}/report_github298_label_valid.json -s json {resourceDir}/github298/valid/sentences.xml\" | \"report_github298_label_valid.json\" |\n+ |\"NASA-PDS/validate#298 INVALID\" | \"github298\" | 43 | \"43 errors expected for INVALID_FIELD_VALUE .\" | \"INVALID_FIELD_VALUE\" | \"src/test/resources\" | \"target/test\" | \"-R pds4.label -r {reportDir}/report_github298_label_invalid.json -s json {resourceDir}/github298/invalid/sentences.xml\" | \"report_github298_label_invalid.json\" |\n+\n+# BIG_NOTE: Add new tests that doesn't involve a catalog above this line.\n # BIG_NOTE: The tests for github6 has to be moved toward the beginning as leave them here results in error in information model.\n # BIG_NOTE: The tests for github240 has to be moved toward the beginning as leave them here results in error in information model.\n \n  |\"NASA-PDS/validate#71 1\" | \"github71\" | 0 | \"0 error message expected\" | \"LABEL_UNRESOLVABLE_RESOURCE\" |  \"src/test/resources\" | \"target/test\" |  \"-r {reportDir}/report_github71_1.json -C {reportDir}/catalog.xml -s json --skip-content-validation -t {resourceDir}/github71/ELE_MOM.xml\" | \"report_github71_1.json\" |\n- |\"NASA-PDS/validate#71 2\" | \"github71\" | 0 | \"0 error message expected\" | \"totalErrors\" |  \"src/test/resources\" | \"target/test\" |  \"-r {reportDir}/report_github71_2.json -s json  -C {reportDir}/catalog.xml -t {resourceDir}/github71/ELE_MOM.xml\" | \"report_github71_2.json\" |\n+ |\"NASA-PDS/validate#71 2\" | \"github71\" | 0 | \"0 error message expected\" | \"totalErrors\" |  \"src/test/resources\" | \"target/test\" |  \"-r {reportDir}/report_github71_2.json -s json  -C {reportDir}/catalog.xml -t {resourceDir}/github71/ELE_MOM_2.xml\" | \"report_github71_2.json\" |\n  |\"NASA-PDS/validate#84 1\" | \"github84\" | 0 | \"No error messages expected\" | \"summary_message_only\" |  \"src/test/resources\" | \"target/test\" |  \"-r {reportDir}/report_github84_1.json -s json --skip-content-validation -c {resourceDir}/github84/config.txt -t {resourceDir}/github71/ELE_MOM.xml\" | \"report_github84_1.json\" |\n \n  |\"NASA-PDS/validate#87 1\" | \"github87\" | 0 | \"0 no errors expected\" | \"LABEL_UNRESOLVABLE_RESOURCE\" | \"src/test/resources\" | \"target/test\" | \"-r {reportDir}/report_github87_1.json -s json -R pds4.label --skip-content-validation -t {resourceDir}/github87/2t126632959btr0200p3002n0a1.xml {resourceDir}/github87/2t126646972btr0200p3001n0a1.xml -C {reportDir}/catalog.xml\" | \"report_github87_1.json\" |"
  },
  {
    "sha": "79a66b5fb4dd66c8661646094c79c399bf3ad98c",
    "filename": "src/test/resources/github298/invalid/sentences.csv",
    "status": "added",
    "additions": 286,
    "deletions": 0,
    "changes": 286,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/invalid/sentences.csv",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/invalid/sentences.csv",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/test/resources/github298/invalid/sentences.csv?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -0,0 +1,286 @@\n+doc_id,sentence_id,sentence\r\n+1998_1018,1998_1018-0,The angle measuring capability  was used to determine that Sojourner could not approach Yogi from the IMP-facing side due to an overhang that is only obvious using the reprojection capabilities of Marsmap.\r\n+1998_1018,1998_1018-1,\"This line should be invalid because it has \"\"double quote inside double quote\"\" and some token\"\r\n+1998_1186,1998_1186-0,\", Scooby Doo) may be an indurated soil, because its composition is similar to soils elsewhere at the site [7].\"\r\n+1998_1187,1998_1187-0,One possible explanation is that bulk densities of soils (perhaps like Scooby Doo) at depth are larger than those at the surface.\r\n+1998_1228,1998_1228-0,\"The data sets consist of (1) three small \"\"photometric spot\"\" sub-framed (64x64 pixel) scenes located approximately north (near the rock \"\"Shaggy\"\"), south (near the \"\"Mermaid Dune\"\"), and west of the lander (\"\"Photometry Flats\"\"), (2) two image strips composed of three sub-framed (96x248 pixel) images each, located along the anti-sunrise and anti-sunset lines (\"\"Photometric equator\"\") extending from near the lander to near the horizon; and (3) full-image scenes of the rock \"\"Yogi.\"\r\n+1998_1228,1998_1228-1,\"The Yogi images were obtained in four filters (443, 531, 671, and 967 nm) at 0740, 1500, 1640 LST over Sols 55-56 and at 0900 LST on Sol 75.\"\r\n+1998_1338,1998_1338-0,\"It was suggested that these drifts, \"\"Roadrunner\"\" and \"\"Jenkins,\"\" might be composed of \"\"light\"\"-colored grains (i.\"\r\n+1998_1348,1998_1348-0,\"The rocks that most closely match this composition are Barnacle Bill and Shark (1), see Table.\"\r\n+1998_1348,1998_1348-1,If all this basaltic material was transferred Element Barnacle Bill soil-free rock soil avg.\r\n+1998_1378,1998_1378-0,\"The rocks are Chimp, Half Dome, Moe, Stimpy, Flat Top, and several smaller rocks.\"\r\n+1998_1378,1998_1378-1,The lander camera shows Chimp as a flat-top prism about 1 m wide and 0.\r\n+1998_1378,1998_1378-2,The side facets of Chimp are close to vertical except the left one which looks stepwise and is semi-rounded.\r\n+1998_1378,1998_1378-3,The close-up stereo views of Chimp taken by rover cameras show this semi-rounded side of the rock.\r\n+1998_1378,1998_1378-4,In the upper partof Chimp the areas having lighter shading and deficit of pits are seen.\r\n+1998_1378,1998_1378-5,These seem similar to the top surface of Chimp covered with bright material.\r\n+1998_1378,1998_1378-6,No concentration of rock fragments at the foot of Chimp is seen.\r\n+1998_1378,1998_1378-7,The lander camera shows Half Dome as semiangular rock about 30 cm high and 60 cm wide.\r\n+1998_1378,1998_1378-8,The close-up stereo view of Half Dome taken by rover cameras shows the side seen by lander but with slightly different geometry of viewing.\r\n+1998_1378,1998_1378-9,On rover camera images a few-cm wide strip of soil is seen at the foot of Half Dome.\r\n+1998_1378,1998_1378-10,The close up stereo view of Moe taken by the rover cameras shows the upper two thirds of the rock made of generally massive material.\r\n+1998_1378,1998_1378-11,If to ignore sculpturing of Moe with the depressions its shape looks semirounded.\r\n+1998_1378,1998_1378-12,A few percent of the Moe surface is occupied by irregular to equidimensional pits typically less than one cm across.\r\n+1998_1378,1998_1378-13,No concentration of small rock fragments at the foot of Stimpy is seen.\r\n+1998_1378,1998_1378-14,The close up stereo view taken by the rover cameras shows NE side of Stimpy.\r\n+1998_1378,1998_1378-15,The general shape of the visible part of Stimpy looks rounded.\r\n+1998_1378,1998_1378-16,The close up stereo view taken by the rover was made when Sojourner was east of rock Flat Top and looked to the west.\r\n+1998_1378,1998_1378-17,These were imaged by rover when it moved behind rock Shark.\r\n+1998_1378,1998_1378-18,The upper part of rock Ovoid is a combination of cm-sized shallow depressions and knobs.\r\n+1998_1378,1998_1378-19,About half a meter northward of rock Ovoid there is a rock about 15 cm high and 35 cm wide.\r\n+1998_1378,1998_1378-20,The visible edge of the overhanging part of Half Anvil looks very sharp down to the limit of resolution.\r\n+1998_1378,1998_1378-21,The visible surface of Half Anvil looks rough with pits and knobs of cm size thus resembling surface of neighboring rock Ovoid.\r\n+1998_1378,1998_1378-22,\"On flat horizontal top of Half Anvil, which looks relatively bright probably due to presence of bright fine material, there are three dark knobs, each about 3#cm across, looking as small rock fragments.\"\r\n+1998_1378,1998_1378-23,\"The described rocks can be ranked in the following ways: In relation to roundness: the most rounded Stimpy and Ovoid, semirounded to semiangular Chimp, Half Dome, and Moe, angular Fat Top and Half Anvil.\"\r\n+1998_1378,1998_1378-24,\"In relation to density of pits: the most pitted Chimp, then Stimpy, Ovoid, and Half Anvil, less pitted Half Dome and side facets of Flat Top; the least pitted Moe.\"\r\n+1998_1378,1998_1378-25,\"In relation to presence of flute-like features: they are abundant on Moe, less abundant on Half Dome; present on upward-looking facet of Flat Top; not reliably identified on Stimpy, Ovoid, Half Anvil, and Chimp.\"\r\n+1998_1413,1998_1413-0,Mermaid is one of two transverse forms.\r\n+1998_1413,1998_1413-1,\"Mermaid was traversed by the rover, and its composition analyzed by the a-p-x spectrometer; results show a similarity to the Viking soils (8).\"\r\n+1998_1413,1998_1413-2,\"The grains could consist of either larger size or higher density than the underlying soils; for example, the dark appearance of the undisturbed surface of Mermaid could result from a lag deposit of basaltic grains.\"\r\n+1998_1413,1998_1413-3,\", RF 21093/LF 21091 for Soufle) obtained by Sojourner suggests that dark deposits in some \"\"moats\"\" contain ~mm-sized grains.\"\r\n+1998_1413,1998_1413-4,\"The rock, Flat-top, and other nearby rocks show a change in albedo 5 to 8 cm above the soil level within which the rocks are set.\"\r\n+1998_1444,1998_1444-0,\"The type location, \"\"Scooby Doo,\"\" was found in APXS data to be soil-like in composition [2].\"\r\n+1998_1444,1998_1444-1,60 400 500 600 700 800 900 1000 1100 Dark Gray (Shark) Bright Red (Broken Wall) Bright Pink (Scooby Doo) Dark Red (Seal) Re fl ect an ce a s I/ FWavelength in NanometersFig.\r\n+1998_1444,1998_1444-2,0 400 500 600 700 800 900 1000 1100 Dark Gray (Shark) Bright Red (Broken Wall) Bright Pink (Scooby Doo) Dark Red (Seal) Mean Normal Drift Re fl ect an ce R ela ti ve t o M ea n  D ri ft Wavelength in NanometersFig.\r\n+1998_1462,1998_1462-0,The rock called Squash may be part of fluvial deposits because it appears to be in the process of being exhumed from the finer fraction of soil-like deposits in Sojourner images.\r\n+1998_1462,1998_1462-1,\"Materials of Mermaid \"\"dune\"\" may  be a third type.\"\r\n+1998_1462,1998_1462-2,\"The Mermaid \"\"dune\"\"  deposit  also may be fluvial because it is poorly sorted with a small cohesion and large friction angle.\"\r\n+1998_1462,1998_1462-3,\"The dark surfaces of Mermaid may result from an eolian lag deposit of sands and granules of rock too large for wind entrainment [2] which is consistent with the modestly larger silica content (50%) of the lag surface (A-15) compared with the three other \"\"soils\"\" above [4].\"\r\n+1998_1462,1998_1462-4,\"Other positive features, such as Ender and Mini-Matterhorn, may be more cohesive phases of fluvial deposits because they also appear to be soil-like.\"\r\n+1998_1462,1998_1462-5,\"Scooby Doo (A-8), which is \"\"bright pink\"\"[2], may be a \"\"soil\"\" or crust that formed in situ because it forms a smooth, planar horizontal surface, similar bright materials coat rocks [2], the rover wheels expose similar bright materials elsewhere, and it has a silica content that is only about 3.\"\r\n+1998_1462,1998_1462-6,\"However, Casper, a meter or so to the north of Scooby, has similar reflectance properties, but Casper has ridged surfaces and resembles a buried rock.\"\r\n+1998_1462,1998_1462-7,\"Thus, Casper and Scooby Doo could be rocks or fragments of indurated soil-like material that weretransported during the Are-Tiu floods rather than a smooth, planar horizontal deposit that formed in situ.\"\r\n+1998_1530,1998_1530-0,\"a) The rock \"\"Moe\"\" as seen by the Sojourner rover's left front camera.\"\r\n+1998_1530,1998_1530-1,\"Open circles are for flutes on the rock \"\"Moe.\"\r\n+1998_1534,1998_1534-0,\"\"\"  In the latter category, four units are unequivocally identified as soils, whereas Mermaid and Scooby Doo, although exhibiting many soil-like attributes, have properties that make them unique.\"\r\n+1998_1534,1998_1534-1,\"The Yogi right eye 440 nm image had missing packets in the area of the APXS spot, so left eye data for this wavelength were used in this one case (the left eye image contained a minor degree of pixel saturation due to over-exposure).\"\r\n+1998_1534,1998_1534-2,\"Under optimal lighting conditions at slightly different times of day, ratios varied by no more than 12% for rocks, 3% for soils, 13% for Mermaid, and 2% for Scooby Doo.\"\r\n+1998_1534,1998_1534-3,\"As the plots illustrate, the soil APXS sites are generally redder than those for rocks, with only Yogi rock having a slightly higher 750/440 ratio than Mermaid, which may be armored with basaltic sand or granules [9] and therefore be bluer than pure soil.\"\r\n+1998_1534,1998_1534-4,\"685 and, except for Half Dome, show a clear trend of increasing redness with increasing sulfur.\"\r\n+1998_1534,1998_1534-5,\"266), with Half Dome again breaking the trend, and there is no discernible relationship between redness and FeO.\"\r\n+1998_1534,1998_1534-6,\"The only exception may be Half Dome, which has an intermediate amount of sulfur and a large amount of Cl for rocks, but is relatively blue.\"\r\n+1998_1536,1998_1536-0,\"For example, in raw, noncompressed IMP images of Wedge, the rock's texture was not well resolved and appeared to be bumpy; it could have been interpreted to be a coarse, sedimentary rock.\"\r\n+1998_1536,1998_1536-1,\"The super-resolved images on Sol 20 made it clear that the bumps are actually pits — perhaps vesicles or sockets. Wedge was chosen specifically because we anticipated ground truth from Sojourner images, and indeed, when the rover first approached Wedge on Sol 35 and took closeups from centimeters away, the pitted texture was confirmed.\"\r\n+1998_1536,1998_1536-2,\"Wedge was chosen specifically because we anticipated ground truth from Sojourner images, and indeed, when the rover first approached Wedge on Sol 35 and took closeups from centimeters away, the pitted texture was confirmed.\"\r\n+1998_1536,1998_1536-3,\"For certain targets, such as Mini Matterhorn, higher radius values were used, and the unsharp mask filtering was sometimes run twice on certain colors, to bring out detail within a rock.\"\r\n+1998_1607,1998_1607-0,\"Note that the coverage is not uniform over the landing site: A high fractional coverage in the \"\"Rock Garden\"\" is contrasted by a low one near Yogi (cf.\"\r\n+1998_1711,1998_1711-0,Si background Mg K 0 1 2 3 4 5 6 7 8 10 100 1000 10000 Energy (keV) In te nsi ty Scooby Doo -Sol 14 APXS X-ray spectrum Fe Al S Cl Ar Ca Ti Mn Na PK Mg Cr A total of seven soil and 8 rock samples were measured during the three months of the Pathfinder operation on the surface of Mars.\r\n+1998_1711,1998_1711-1,1 shows the decomposition of the X-ray spectrum from the Scooby Doo sample into individual elemental contributions.\r\n+1998_1711,1998_1711-2,\"1 The X-ray spectrum of A-10 site - Scooby Doo The appearance looks like a rock, but the analysis is more soil-like.\"\r\n+1998_1711,1998_1711-3,5 10 100 1000 10000 Energy (keV) In te si ty Wedge Mermaid Dunes Comparison of Wedge rock and Mermaid Dark Soil APXS X-ray spectra FeCa Cl Al Ti SMg Na Cr Ni Ar KMn Si Fig.\r\n+1998_1711,1998_1711-4,2 Comparison of X-ray spectra from a typical soil and a rock  Wedge.\r\n+1998_1711,1998_1711-5,2  is a comparison of the raw X-ray spectra from the rock Wedge and the dark soil Mermaid Dune.\r\n+1998_1711,1998_1711-6,6 ± 1.7 A-4 Next to Yogi 3.\r\n+1998_1711,1998_1711-7,4 ± 1.\r\n+1998_1711,1998_1711-8,5 ± 1.0 0.\r\n+1998_1711,1998_1711-9,5 ± 1.0 0.9 ± 0.\r\n+1998_1711,1998_1711-10,3 ± 1.\r\n+1998_1711,1998_1711-11,7 ± 0.2 0.2 ± 0.\r\n+1998_1711,1998_1711-12,0 0.6 ± 0.2 0.5 ± 0.\r\n+1998_1711,1998_1711-13,6 ± 2.9 2.\r\n+1998_1711,1998_1711-14,9 55.5 ± 2.\r\n+1998_1711,1998_1711-15,7 10.0±1.\r\n+1998_1711,1998_1711-16,8 3.0 ± 0.5 9.\r\n+1998_1723,1998_1723-0,\"There is evidence for a weak absorption centered near 900 nm in a small fraction of the soils classified at the landing site, primarily near and apparently associated with the rock called Lamb.\"\r\n+1998_1723,1998_1723-1,\"13 < 5% Coarser-grained, compacted, or higher Fe2+ content Bright Red soil, and/or a mixture of Bright Red, Dark Gray Lamb Soil > 20% > 4.\"\r\n+1998_1776,1998_1776-0,\"The dark rocks such as Barnacle Bill are more silica-rich, while the Bright Rocks such as Yogi and Wedge are more sulfurrich and probably more weathered.\"\r\n+1998_1776,1998_1776-1,\"The local bedrock is represented by samples brought up by the \"\"Big Crater\"\" impact event in rocks like Barnacle Bill and Shark.\"\r\n+1998_1776,1998_1776-2,The type hardpan material are represented by the Scooby-Doo and Baker's Bench material.\r\n+1998_1776,1998_1776-3,\"1 Wavelength in Microns Re la ti ve R efl ec ta nc e* Pink Rock Bright Rock Dark Rock Mars Bright Region Mars Dark Region Terrestrial Basalt Figure 2:  Preliminary Stratigraphic Column for the Pathfinder Landing Site Aeolian deposits of Drift, Dark, and Lamb-like Soil:  Global and local weathering products.\"\r\n+1998_1803,1998_1803-0,\"The IMP soils shown here are (in order of decreasing brightness) bright soil 2 near \"\"Mermaid\"\" rock, an average of all IMP soil spectra, an average of 3 soils near \"\"Lamb\"\" rock, dark soil near \"\"Mermaid\"\" rock.\"\r\n+1998_1803,1998_1803-1,\"Variations in the angularity of the 600 nm shoulder are shown here, where the dark soils near \"\"Mermaid\"\" and \"\"Cradle\"\" exhibit a more angular shoulder like that observed for schwertmannitebearing soils, whereas soils near \"\"Lamb\"\" and \"\"Souffle\"\" exhibit a more rounded curvature from 600-670-750 nm similar to the spectral character of ferrihydrite-bearing soils.\"\r\n+1998_1803,1998_1803-2,8 400 600 800 1000 Ref le ct an ce Wavelength (nm) Fe-monts FS-monts Maghemite Merm-br Ave Lamb Mermaid-dk Hm-Mg-soil Figure 1          Spectra of IMP Soils and Model Soils Spectral analyses.\r\n+1998_1803,1998_1803-3,\"Similar ratios for other ferric oxides such as hematite and maghemite occur in the direction of the \"\"Yogi\"\" soils and the bright soil near \"\"Mermaid\"\", but are far off the scale of Fig.\"\r\n+1998_1803,1998_1803-4,74 Rat io : 67 1/ 75 2 n m b an ds Ratio: 600/752 nm bands Figure 3    Spectral ratios of IMP soils and model soils Cradle-brYogi-ave Cradle-dk Lamb-ave Souffle-ave Average Soils Tracks-ave Wedge FS-mont (118) FS-mont (121) Fe-mont (11) Fe-mont (35) Mermaid Mermaid Ave Mermaid Br-2 Applications to Mars.\r\n+1998_1829,1998_1829-0,\"On some rocks, such as Souffle' and the Dice, the pits resemble volcanic vesicles, although a nonvolcanic origin cannot be ruled out and aeolian processes probably have enlarged the original vesicles and changed their shapes.\"\r\n+1998_1829,1998_1829-1,\"On the surface of the rock Stimpy, it is not clear whether original volcanic vesicles have exerted control on wind abrasion or whether all of the pit formation could be due to weathering.\"\r\n+1998_1829,1998_1829-2,\"One rock, Squash, exhibits an unusual knobby shape with lobes and protrusions roughly 10 cm in size, extending as far out as 12 cm.\"\r\n+1998_1829,1998_1829-3,\"The other side of Squash facing IMP does not have these protrusions, and has a near-vertical fairly dust-free face and a dust-covered top.\"\r\n+1998_1829,1998_1829-4,The most striking examples are Chimp (Fig.\r\n+1998_1829,1998_1829-5,1) and Zebra.\r\n+1998_1829,1998_1829-6,\"Other rocks with these linear features include Mini-Matterhorn, Yogi, Half Dome, Ender, Squid, Flat Top, Stack, and Booboo.\"\r\n+1998_1829,1998_1829-7,\"For example, the same lineations seen on the front face of Flat Top in rover images also shows up in super-resolution IMP images, at an orientation of about 40 degrees to its flat top.\"\r\n+1998_1829,1998_1829-8,\"In some rocks, such as Barnacle Bill, multiple orientations of lineations may appear so faint and nonpervasive that the rock may not be layered at all.\"\r\n+1998_1829,1998_1829-9,\"Alignment of pits in this size range is not common on rocks at the Pathfinder landing site, although Chimp (Fig.\"\r\n+1998_1829,1998_1829-10,\"Only one rock at the landing site, Chimp, has been identified as having a texture resembling exfoliation (top left side of rock in Fig.\"\r\n+1998_1829,1998_1829-11,\"Rocks with this texture include Wedge, Barnacle Bill, and Shark.\"\r\n+1998_1829,1998_1829-12,\"Larger (2-4 cm) rounded lumps, like those seen on the base of Barnacle Bill and Bambam could be the surface expression of rounded cobbles in a conglomerate, rounded lithic fragments in a volcanic rock, or concretions.\"\r\n+1998_1829,1998_1829-13,Prince Charming and Shark are examples of several of the rocks that exhibit a bumpy texture with rounded pits and bumps.\r\n+1998_1829,1998_1829-14,Figure 1:  Rover forward camera stereo image of Chimp.\r\n+1998_1829,1998_1829-15,\"The difference between the deep pits on most of Stimpy's surface and the curved, slotted grooves at the top of the rock could be due to the relationship between the impact angle of saltating particles and susceptibility to abrasion (4), and the less-affected zone at the very top could be a more resistant part of the rock.\"\r\n+1998_1829,1998_1829-16,\"If chemical weathering is indicated, then Wedge's bumpy texture may be the most intensely altered surface of this type.\"\r\n+1998_1888,1998_1888-0,\"The mechanical properties of crusts and clods were similar, but materials like Scooby Doo exhibited a brighter reflectance.\"\r\n+1998_1938,1998_1938-0,\"4: Massive basalt boulder similar in shape to \"\"sedimentary F\"\r\n+1998_1962,1998_1962-0,\"Two of the five Pathfinder rock analyses reported in [2] are andesitic in composition with 59-61% SiO2 (Shark and Barnacle Bill), and sulfur contents of 0.\"\r\n+1998_1962,1998_1962-1,\"The other three (Half Dome, Wedge, and Yogi) are higher in sulfur (1-1.\"\r\n+1998_1962,1998_1962-2,\"An extrapolation of the linear trends to zero sulfur suggested the underlying rock has an andesitic composition with 62% SiO2 [2], similar to Shark.\"\r\n+1998_1962,1998_1962-3,\"For instance, assuming a dust coating similar to the A-5 soil in which the contribution of dust to the bulk composition varies from 48% (Na) to 10% (Fe), the underlying rock for Wedge could have a normal sulfur content (0.\"\r\n+1998_1962,1998_1962-4,\"An example of a higher silica substrate is provided by a dust coating of A-10 composition on Yogi, in which the contribution of dust varies from 65 (Na) to 50% (Fe).\"\r\n+1999_1068,1999_1068-0,\"Pathfinder image of a rock nearby \"\"Half Dome\"\".\"\r\n+1999_1068,1999_1068-1,\"\"\"Half Dome\"\" was suggested to be one of conglomerate rocks [1].\"\r\n+1999_1068,1999_1068-2,\"28 \"\"Half Dome\"\" [7] 55.\"\r\n+1999_1068,1999_1068-3,\"54 \"\"Half Dome\"\" [7] 4.\"\r\n+1999_1068,1999_1068-4,\"34 \"\"Half Dome\"\" [7] 0.\"\r\n+1999_1083,1999_1083-0,\"The dark surface of Mermaid dune (sample A-15) may have an armor of winnowed rock granules [4], and its sulfur content is next lowest.\"\r\n+1999_1250,1999_1250-0,\"���� ��� � �� 0DUV��61& V� 3DWKILQGHU�5RFN 3DWKILQGHU�6RLO (DUWK 0RRQ 0Q2�>�@ )H2�>�@ �� ��� �� �� ��� ��� ��� ���� ���� ���� 0DUV (DUWK 0RRQ ��� ��� � $O�>�@ 7L�>�@ Chassigny ALHA 84001 Lafayette Nakhla ALHA 77005 DaG 476 Zagami B EETA A Shergotty 03)�6RLO��DY� EEETA B QUE &, 03)�5RFN��VI� Zagami A Fig.\"\r\n+1999_1273,1999_1273-0,\"The Sojourner measurements of the boulders Barnacle Bill and Yogi while interpretable as andesites or more specifically icelandites, may also be considered in terms of their sedimentary equivalents.\"\r\n+1999_1273,1999_1273-1,\"Lithic arenites/wackes, and mudrocks from Earth overlap completely the andesite and basaltic andesite fields and share this composition space with the bulk compositions of Barnacle Bill, Yogi and Wedge.\"\r\n+1999_1273,1999_1273-2,A notable feature of the composition of Barnacle Bill is its similarity to terrestrial lithic arenites and shales/mudstones.\r\n+1999_1273,1999_1273-3,\"From the imaging results of Pathfinder, planar features, pits and pronounced relief on Half Dome, as well as \"\"bump and socket\"\" textures 12 on individual boulders suggests that layering is present that may be of sedimentary origin.\"\r\n+1999_1273,1999_1273-4,Sediments can be formed Figure 1: Compositions of Barnacle Bill and Yogi from Sagan.\r\n+1999_1313,1999_1313-0,\"The APX spectrometer of the Sojourner rover has analyzed eight rocks: Barnacle Bill, Yogi, Wedge, Shark, Half Dome (two analyses), Moe, Stimpy and Chimp [5].\"\r\n+1999_1313,1999_1313-1,Shape of the rocks under study varies from highly irregular (Barnacle Bill) through transitional varieties to prismatic with planar facets (Wedge).\r\n+1999_1313,1999_1313-2,\"Despite this variability, two characteristics of the rocks' shape are found to be typical: 1) Most of the rocks (Wedge, Shark, Half Dome, Stimpy, Chimp) have at least one planar facet (Fig.\"\r\n+1999_1313,1999_1313-3,\"1, prismatic rock Wedge, 40x60cm.\"\r\n+1999_1313,1999_1313-4,\"2) Most of the rocks (Yogi, Shark, Half Dome, Moe, Stimpy, Chimp) have some part(s) looking rounded while other part(s) of the same rock look angular.\"\r\n+1999_1313,1999_1313-5,\"2, Stimpy, hemisphere with three planar           facets, 30x50 cm.\"\r\n+1999_1313,1999_1313-6,\"In some cases pits occupy only 20-30% of the surface area (Half Dome, Moe).\"\r\n+1999_1313,1999_1313-7,\"Other rocks have surfaces saturated with pits and separating them knobs, so pits occupy at least 50-60% of the rock surface (Wedge, Chimp).\"\r\n+1999_1313,1999_1313-8,\"3, pitted surface of Wedge, 10x20 cm.\"\r\n+1999_1313,1999_1313-9,\"Because close up images of at least some of these rocks (Wedge, Chimp ) show high density of the pits and these given rocks have planar facets (Fig.\"\r\n+1999_1313,1999_1313-10,\"Taking in mind that chemical composition of these rocks is beleived to be the same as of those which do not show planar facets (Barnacle Bill, Yogi) or have less density of pits (Half Dome, Moe) it seems probable that most pits on Pathfinder and Viking rocks, are resulted from some sort of weathering although some presence of gas bubbles can not be excluded.\"\r\n+1999_1387,1999_1387-0,\"Ripplelike features at the site and at least some of the dunes, such as Mermaid Dune, appear to be composed of poorly sorted material beneath an armoring veneer of dark gray granules in rover trenches, and are thus interpreted to be lag deposits [7] indicative of net erosion or deflation of the landing site.\"\r\n+1999_1641,1999_1641-0,\"Martian boulder \"\"Stimpy\"\" exhibiting an impact crater on its surface.\"\r\n+1999_1641,1999_1641-1,\", \"\"Frog\"\" and \"\"Shark\"\").\"\r\n+1999_1641,1999_1641-2,\"Many small rocks at the Pathfinder site could be considered collisionally produced fragments of large, rounded parents; an example (\"\"Mouse\"\") is illustrated in Figure 6.\"\r\n+1999_1641,1999_1641-3,\", \"\"Chimp\"\"), akin to those of numerous collisionally split boulders on the Moon.\"\r\n+1999_1641,1999_1641-4,\"Martian surface rock \"\"Mouse\"\" that has a fairly rounded top which contrasts with the ragged and sharp-edged surface on which it came to rest; we view this rock as a fragment of a rounded parent.\"\r\n+1999_1641,1999_1641-5,\"Surface Craters:  In Figure 1, we present our first evidence for small-scale cratering in the form of a close-up image of the martian boulder \"\"Stimpy.\"\r\n+1999_1641,1999_1641-6,\"A prime example is \"\"Yogi,\"\" illustrated in Figure 4.\"\r\n+1999_1641,1999_1641-7,\"Obviously a very crisp, fresh, fracture surface dominates the top of Yogi in this view and abruptly truncates the otherwise rounded rock.\"\r\n+1999_1641,1999_1641-8,\"A circular depression occupies ~ 30% of Stimpy's top surface, whose shallow nature is typical for craters in competent rock that are governed by spallation processes.\"\r\n+1999_1700,1999_1700-0,\"Thus, rounded nodular features on rocks A-17 (Shark) and A-18 (Half Dome) may represent pebbles within a conglomerate [7] and accordingly these (and other Pathfinder rocks) may be true sedimentary rocks.\"\r\n+1999_1700,1999_1700-1,These relationships were interpreted as two component mixing between rock and soil with rock A-17 (Shark) and soil A-4 being closest to the end-member compositions [6].\r\n+1999_1700,1999_1700-2,The rock A-3 (Barnacle Bill) and soil A-2 most commonly fall well off mixing curves calculated between A-17 and A-4.\r\n+1999_1700,1999_1700-3,Pathfinder sample A-8 (Scooby Doo) has the physical appearance of rock but its chemical composition is closer to soils and has been interpreted as an indurated soil [6].\r\n+1999_1700,1999_1700-4,\"SiO2/SO3 most Pathfinder soils, Viking soils and Pathfinder rock A-16 (Wedge) fall above a mixing line between rock A-17 and soil A-4, consistent with addition of an iron-rich component.\"\r\n+1999_1907,1999_1907-0,\"At least one rock, Yogi, lies on a soil pedestal, which could have formed from aeolion scour.\"\r\n+1999_1907,1999_1907-1,\"There is evidence for sand-sized particles at the Pathfinder landing site in the form of barchan dunes [3], a possible basaltic sand or granule armor on Mermaid Dune [7], and larger-scale dunes visible in MOC images of the landing site.\"\r\n+1999_1907,1999_1907-2,\"Flutes are apparent on 19 rocks, including multiple flutes on Geordi (at least 3), Half Dome (� 8), Ga rrak (� 3), Mohawk (� 2), Grommit (� 9), and an unnamed rock (� 4).\"\r\n+1999_1907,1999_1907-3,are also apparent on Flat Top and Flute Top.\r\n+1999_1907,1999_1907-4,030 60 90 120 150 240 300 330 Ender Flute Top Garrak Geordi Grommit Half Dome Jedi Moe Mohawk Mouse Pancake Pumpkin Ren Shark Stump Wallace unnamed 8 unnamed 9 unnamed 10 Ventifact Orientations (IMP Images) Figure 1: Orientations of flutes seen in IMP images.\r\n+1999_1912,1999_1912-0,Method:  We have analyzed images surrounding Mini-Matterhorn (MM) as a sample region.\r\n+1999_1912,1999_1912-1,General Setting and Mineralogy:  The MM scene covers ~4 m2 of the imaged landing site.\r\n+1999_1912,1999_1912-2,\"It contains one large rock (MM) and several small rocks which display an angular, pitted texture.\"\r\n+1999_1912,1999_1912-3,\"Spectra from three cobbles, referred to here as Abu, Gerbil and Peesh, are different from those of other rocks in the scene.\"\r\n+1999_1912,1999_1912-4,\"Spectra from three cobbles, referred to here as Abu, Gerbil and Peesh, are different from those of other rocks in the scene. Abu and Peesh have spectra characterized by a steep slope from 443-752 nm, a lower reflectance than soil and a downturn around 1000 nm typical of rock spectra.\"\r\n+1999_1912,1999_1912-5,\"Abu and Peesh have spectra characterized by a steep slope from 443-752 nm, a lower reflectance than soil and a downturn around 1000 nm typical of rock spectra.\"\r\n+1999_1912,1999_1912-6,\"Areas of Abu and Gerbil have spectra similar in reflectance and shape to typical rock spectra except at shorter wavelengths, where a distinct upturn is noted at 443 nm.\"\r\n+1999_1912,1999_1912-7,\"Specifically, the flattening of the spectra at 530 nm, especially in Abu, may be indicative of the 530 nm shoulder of the absorption band associated with iron oxides.\"\r\n+1999_1912,1999_1912-8,\"Thus, although Abu and Gerbil are generally similar to Bright and Dark Rocks respectively, portions of the rocks have a composition whose current best interpretation is a hematite-like iron oxide.\"\r\n+1999_1912,1999_1912-9,\"Discussion:  Two general rock types are revealed by analysis of the MM scene, similar in spectral signature to the Dark and Bright Rocks analyzed at other locations [9].\"\r\n+1999_1912,1999_1912-10,3 400 500 600 700 800 900 1000 MM1 Ba\r\n+1999_1912,1999_1912-11,3 400 500 600 700 800 900 1000 MM1 Bambi Soil1 Soil2 Pe\r\n+1999_1912,1999_1912-12,3 400 500 600 700 800 900 1000 MM1 Bambi Soil1 Soil2 Peesh Abu1 Abu2 Ger\r\n+1999_1912,1999_1912-13,3 400 500 600 700 800 900 1000 MM1 Bambi Soil1 Soil2 Peesh\r\n+1999_1912,1999_1912-14,3 400 500 600 700 800 900 1000 MM1 Bambi Soil1 Soil2 Peesh Abu1\r\n+1999_1912,1999_1912-15,3 400 500 600 700 800 900 1000 MM1 Bambi Soil1 Soil2 Peesh Abu1 Abu2 Gerbil\r\n+1999_1927,1999_1927-0,\"The dark color of Mermaid Dune, upon which A-15 is located, indicates it may contain an armor of basaltic particles [12,13].\"\r\n+1999_2063,1999_2063-0,\"Rock Garden Imbricated rocks are visible throughout the landing site but the type location for this sedimentary fabric is in the Rock Garden (rocks: Wedge, Shark, Moe, Half Dome, Frog, Pumpkin).\"\r\n+1999_2063,1999_2063-1,\"Pebble clusters are observed around the above mentioned imbricated rocks plus the following rounded rocks; Barnacle Bill, Bambam, Grommit, and Stimpy.\"\r\n+1999_2063,1999_2063-2,Stimpy also has a percussion mark on its upper right edge.\r\n+1999_2063,1999_2063-3,\"The tabular rocks (Flat Top, Garak, Pancake) do not display pebble clusters or imbrication.\"\r\n+1999_2063,1999_2063-4,\", Flat Top, Yogi) yet no residual sediment caps are visible.\"\r\n+2000_1127,2000_1127-0,The recently obtained TES (Thermal Emission Spectrometer) data of the -3 03 10 20 30 40 50 60 70 Res id uu m[s ig ma] Channel 10 100 1000 10000 Na      Mg      Al      Si      P       S       Cl      Ar      Mermaid      Fit Cou nt s [1 ]M gA lS iC lA rP SN aFig.\r\n+2000_1127,2000_1127-1,\"1 Fit of APXS x-ray spectrum 'Soil Mermaid Dune' by using shape and position of element standards of Na, Mg, Al, Si, P, S, and Cl.\"\r\n+2000_1127,2000_1127-2,\"3 Excluding a few data points because of large errors (spectral background) and detection limit (Scooby Doo A8) the remaining points show identical P concentrations for soils (A10, A15) and rocks.\"\r\n+2000_1127,2000_1127-3,\"Bottom: Martian spectra of the rocks Barnacle Bill, Wedge, and Half Dome (atmospheric signals removed); there is no significant C signal above counting statistics (horizontal line shows average detection limit).\"\r\n+2000_1127,2000_1127-4,Bill Wedge Hlf.\r\n+2000_1133,2000_1133-0,\"The general NW-SE trend of elongated bright patches in the MOC image is similar to the alignment of many such features in the Pathfinder panoramas [1], including the well-known Mermaid 'dune' feature (Mermaid itself is too small to be resolved in MOC images).\"\r\n+2000_1262,2000_1262-0,Right: Region of Scooby Doo (in foreground at left) 0.\r\n+2000_1267,2000_1267-0,35 400 500 600 700 800 900 1000 Re fl ec ta nc eWavelength in Nanometers Maroon coating (Lamb) Gray (Shark) Orange Black Fig.\r\n+2000_1269,2000_1269-0,\"The Pathfinder rock trend, from the 'soil-free' andesite end-member to the soil covered sample A8 (Scooby Doo), intersects the soil trend at a composition of approximately 50% basaltic shergottite and 40% andesite.\"\r\n+2000_1269,2000_1269-1,98 A2  (after deployment) A7 (Yogi) A16  (Wedge) A18 (H.\r\n+2000_1269,2000_1269-2,Dome) A17 (Shark) A3 (B.\r\n+2000_1269,2000_1269-3,97 2 A8 (Scooby Doo) Figure 1.\r\n+2000_1269,2000_1269-4,98 A2  (after deployment) A7 (Yogi) A16  (Wedge) A18 (H. Dome) A17 (Shark) A3 (B.\r\n+2000_1269,2000_1269-5,\"Dome) A17 (Shark) A3 (B. Bill)C9 (bulk) C5, C13 duricrust C6 deep fines Viking 1 Pathfinder (P/F) soils P/F rock + soil Linear (P/F rock + soil) Linear (P/F soils) 2 R   = 0.\"\r\n+2000_1422,2000_1422-0,4 400 500 600 700 800 900 1000 1100 Stimpy (side) 3 Moe 1 Bright Soil 1 Dark Soil 1 Disturbed soil F Ref le ct an ce Wavelength (nm) Figure 1.\r\n+2000_1422,2000_1422-1,\"To test this hypothesis, we have examined an area around the rock Stimpy that includes a number of rocks classified as either grey/dark or bright/red [1,2].\"\r\n+2000_1422,2000_1422-2,\"Choosing endpoints of grey/dark rock (Stimpy) and bright soil from the same scene, we calculated a linear mixing model from these endpoints.\"\r\n+2000_1422,2000_1422-3,\"Specifically, we examined spectra from the rock Frog, determined to be a grey/dark rock [1,2], and compared these with spectra for similar normals from the rock Moe, similar in spectral signature to rocks classified as red/bright rocks [1,2].\"\r\n+2000_1422,2000_1422-4,Results: Figure 2 shows two spectral samples from different rocks (Frog in green and Moe in red) that Lunar and Planetary Science XXXI  SPECTRAL ROCK TYPES AT MPF:  R.\r\n+2000_1422,2000_1422-5,4 400 500 600 700 800 900 1000 1100 Stimpy Bright Soil 10% rock 20% rock 30% rock 40% rock 50% rock 60% rock 70% rock 80% rock 90% rock Frog Best Fit Frog Moe Best Fit Moe Ref le ct an ce Wavelength (nm) Figure 2.\r\n+2000_1422,2000_1422-6,Best fits for spectral samples Moe and Frog.\r\n+2000_1422,2000_1422-7,1 400 500 600 700 800 900 1000 1100 data-model (Frog) data-model (Moe) Ref le ct an ce e rr or Wavelength (nm) Figure 3.\r\n+2000_1422,2000_1422-8,-30 -20 -10 010 20 30 400 500 600 700 800 900 1000 1100 %error (Frog) %error (Moe) % R ef le ct an ce e rr or Wavelength (nm) Figure 4.\r\n+2000_1422,2000_1422-9,\"These results imply that, to a first order, the various spectral differences between rocks around Stimpy can be plausibly attributed to variations in illumination, coupled with the amount of airfall dust mantling the rock, rather than a variety of petrologies.\"\r\n+2000_1753,2000_1753-0,Figure 2 shows the Superresolution of Yogi prepared from 7 left-eye input images (b) along with the 670 nm input image for comparison (a).\r\n+2000_1753,2000_1753-1,Fine scale pits in Yogi are visible in the Superresolved result that are not visible in the input image.\r\n+2000_1846,2000_1846-0,\"Yogi, the largest rock in the near field data set (1.\"\r\n+2000_1846,2000_1846-1,\"The far field data, which encompasses a much larger area (and so is less subject to the problem of having one large rock, such as Yogi, in a small counting area) shows that the cumulative number of Lunar and Planetary Science XXXI  MARS PATHFINDER ROCKS:  M.\"\r\n+2000_1846,2000_1846-2,\"The area covered by 1-2 m diameter boulders is 1-2% and is dominated by Yogi (a large rock in a small counting area), which covers 1.\"\r\n+2000_1853,2000_1853-0,\"How much wind might be required to deflate a fineparticle mantle at the Pathfinder landing site, or to reactivate duneforms such as Jenkins and Mermaid seen by IMP or the barchan-like features seen by Sojourner? The answer must depend strongly on the size, cohesion, and availability of particles, but we can begin to address the overall question with knowledge of aerodynamic roughness.\"\r\n+2000_1931,2000_1931-0,An example of a possible exfoliating rind or crust was observed on the rock Chimp during the Pathfinder mission.\r\n+2000_1938,2000_1938-0,\"This reversal is puzzling especially in the case of a rock like \"\"flat top\"\" which, true to its name, acts as a collector of falling dust.\"\r\n+2000_1938,2000_1938-1,\"Mars Seen in Blue Light:  Figure 1 shows a single image of \"\"flat top\"\" and \"\"half dome\"\" in blue, true color, and enhanced color.\"\r\n+2000_1938,2000_1938-2,\"Notice the front face of \"\"flat top.\"\r\n+2000_1938,2000_1938-3,\"The rock in the top center is \"\"half dome\"\" and the one in the lower right is \"\"flat top.\"\r\n+2000_1938,2000_1938-4,\"\"\" same is true for \"\"half dome\"\" and the interesting plate-like structure that appears like elephant skin on the left side of the rock.\"\r\n+2000_1952,2000_1952-0,\"Figure 1: Atmospheric Contribution to Alpha Mode              12x10 3 10 86 42 0In te ns it y ( Co un ts /1 00 ,0 00 s ec )16014012010080604020 Channel Raw Spectrum for Barnacle Bill Barnacle Bill Modeled Atmospheric Peaks Barnacle Bill minus Atmospheric Peaks Raw Spectrum for AGV1 in Martian Conditions  AGV1 minus Atmospheric Peaks AGV1 in Vacuum Example of endpoint shift Vacuum vs CO2 oxygen endpoint (~5 channel shift left due to lower incoming alpha energy) Lunar and Planetary Science XXXI  Pathfinder APXS Calibration:  C.\"\r\n+2000_1952,2000_1952-1,3 mb Sol 22(Infinite Distance over Rock)-Approximate Rock Barnacle Bi\r\n+2000_2025,2000_2025-0,[12] for  soils at the Mars Pathfinder landing site (e.\r\n+2000_2066,2000_2066-0,\"This is very similar in appearance to Chimp, Stimpy, and other rocks at the Pathfinder landing site.\"\r\n+2000_2066,2000_2066-1,\"A similar process may explain the putative conglomeritic texture seen on some rocks at the Pathfinder landing site [1,7,8], such as the rock Squash (bottom picture above) [3].\"\r\n+2000_2073,2000_2073-0,The flat rocky surface called Scooby Doo is also a feature of interest in the scene.\r\n+2000_2073,2000_2073-1,The flat rock-like surface of Scooby Doo is representative of this unit.\r\n+2000_2095,2000_2095-0,\"This report will examine bedforms in the material found behind the rock \"\"Barnacle Bill\"\", as seen in a superresolution image product [3].\"\r\n+2000_2095,2000_2095-1,\"The wind tail behind the rock \"\"Barnacle Bill\"\" was well imaged by the Imager for Mars Pathfinder (IMP) on several dozen occasions.\"\r\n+2000_2095,2000_2095-2,Figure 3 - Roller Vortex Forming the Deflationary  Trough in Front of Barnacle Bill This idealized diagram explains why material is eroded from the upwind and lateral surfaces of the Barnacle Bill rock and wind tail feature.\r\n+2000_2095,2000_2095-3,\"The tail behind Barnacle Bill extends approximately 30 cm, starting with an upwind width of 23 cm.\"\r\n+2000_2095,2000_2095-4,(1) Barnacle Bill rested on a pre-existing surface essentially devoid of unconsolidated material and/or stabilized against wind erosion.\r\n+2000_2095,2000_2095-5,(2) Sustained upwind delivery of fine dust or dust aggregates from the northeast resulted in steep slip face deposits sheltered behind Barnacle Bill.\r\n+2000_2095,2000_2095-6,The present flank orientation is directly downwind of the deflationary trough immediately upwind of Barnacle Bill.\r\n+2000_2095,2000_2095-7,Figure 1 - Super-resolution of Barnacle Bill and Wind Tail  (image courtesy of T.\r\n+2001_1021,2001_1021-0,\"For example, the rock called Yogi appeared consistently bluer on whichever side was facing the sun in any given image [2,1].\"\r\n+2001_1021,2001_1021-1,We will show results for a radiometric target and for mulispectral images of  the rock Yogi as they would appear if there were no dust scattering in the atmosphere.\r\n+2001_1099,2001_1099-0,\"g. Wedge, Shark, Chimp), it was concluded [2] that pits (at least most of them) are not gas bubbles in lavas, but have been resulted from the surface abrasion.\"\r\n+2001_1099,2001_1099-1,We apply this approach to our study through a comparison of the considered objects with the red drift deposit of the Barnacle Bill wind tail.\r\n+2001_1099,2001_1099-2,\"So we suggest to use as the measure of reddeness the parameter D: Dx y I nm x y R nm I nm x y R nm I nm x y R nm ,( ) , ( ) ( ) , ( ) ( ) , ( ) =− 440 440 670 670 670 670 where I nm x y( ) ,440 is a brightness of pixel x,y at 440 nm channel, R nm( )440  is a brightness of the reference spot (wind tail behind Barnacle Bill) at 440 nm channel, I nm x y( ) ,670 is a brightness of pixel x,y at 670 nm channel, R nm( )670  is a brightness of the reference spot at 670 nm channel.\"\r\n+2001_1099,2001_1099-3,\"So for places which have ratio of brightnesses in 440 and 670 nm the same as the Barnacle Bill wind tail has, the parameter D = 0.\"\r\n+2001_1099,2001_1099-4,\"When we see upwind and downwind parts of the rock (Barnacle Bill, Yogi) the first are on average less red than the latter.\"\r\n+2001_1099,2001_1099-5,\"Wedge, Shark, Chimp), it was concluded [2] that pits (at least most of them) are not gas bubbles in lavas, but have been resulted from the surface abrasion.\"\r\n+2001_1099,2001_1099-6,\"of contamination with dust is evidently the smallest for analysis of Shark, and the largest for Yogi.\"\r\n+2001_1099,2001_1099-7,\"The exception is rock Wedge, one facet of which (unfortunately not APXS analyzed) shows rather large high-D area.\"\r\n+2001_1099,2001_1099-8,\"Flat, close to horizontal top surfaces of some rocks (Barnacle Bill, Flat Top, Chimp) have very low values of parameter D.\"\r\n+2001_1099,2001_1099-9,\"The exception is ~5 cm wide brighter band at the base of Stimpy and some neighboring rocks interpreted by [3] as a remnant of a former, now deflated soil horizon.\"\r\n+2001_1099,2001_1099-10,\"Figure 1. Barnacle Bill, 20 cm high and 45 cm wide rock sitting about 2.\"\r\n+2001_1116,2001_1116-0,\"The large size fraction in the measurement of the annulus 3-6 m from the lander is slightly skewed due to the presence of one large rock, Yogi, in a small counting area.\"\r\n+2001_1293,2001_1293-0,\"6 Cemented soil                           A-8, Scooby Doo 1.\"\r\n+2001_1293,2001_1293-1,\"1 Rocks                         Fe2+ A-3, Barnacle Bill 1.\"\r\n+2001_1293,2001_1293-2,\"6 A-7, Yogi 0.\"\r\n+2001_1293,2001_1293-3,\"0 A-16, Wedge 1.\"\r\n+2001_1293,2001_1293-4,\"7 A-17, Shark 1.\"\r\n+2001_1293,2001_1293-5,\"5 A-18, Half Dome 1.\"\r\n+2001_1656,2001_1656-0,Bright patch that is circled is a spectrally anomalous fresh black rock near Flat Top rock.\r\n+2001_1874,2001_1874-0,We use a Hapke surface model with parameters estimated from Mars Pathfinder observations of Mermaid [13] except for the macroscopic roughness [1].\r\n+2001_1979,2001_1979-0,\"A-8** = Scooby Doo, which may be a soil.\"\r\n+2002_1771,2002_1771-0,\"For example, Figure 1 shows the rock Yogi taken at two times of day.\"\r\n+2002_1771,2002_1771-1,\"1) in the morning image were interpreted [2] to be evidence that the East face of Yogi, which faces the mean wind, was relatively free of an oxidized coating.\"\r\n+2002_1771,2002_1771-2,\"However, Thomas and others [1] argued that the apparent color of Yogi can be fully explained by variations in the relative amounts of direct and diffuse light on the different faces of the rock.\"\r\n+2002_1771,2002_1771-3,Images of Yogi taken at 9:00 (left) and 15:00 (right) showing the change in appearance at different illumination conditions.\r\n+2002_1771,2002_1771-4,\"Results: To study the effect of varying illumination conditions on Yogi, and to illustrate our method for retrieving true color, we constructed a geometric model which roughly approximates the shape and position of Yogi rock by a truncated dodecahedron, placed at an azimuth of 330 o from an observer.\"\r\n+2002_1771,2002_1771-5,Geometric model  of Yogi as it would appear at three times of day illuminated by the sun with no dust in the atmosphere.\r\n+2002_1771,2002_1771-6,We used our radiative transfer code to investigate whether the color differences between points A and B on Yogi are true color or illumination effects.\r\n+2002_1771,2002_1771-7,Using 3D models deduced from a stereo pair of Yogi acquired Lunar and Planetary Science XXXIII (2002)  THE TRUE COLOR OF YOGI  C.\r\n+2002_1771,2002_1771-8,We analyzed a multispectral sequence of Yogi acquired at four times of day.\r\n+2002_1771,2002_1771-9,We determined an equivalent Lambert Albedo for Yogi at these two points by dividing the calibrated image radiance by the radiance of a Lambert surface with unity Albedo tangent to the rock surface at these points and illuminated by our Mars lighting model.\r\n+2002_1771,2002_1771-10,Synthetic model of Yogi Time Face sky (I/F)red    (I/F)blue sun (I/F)red    (I/F)blue total (I/F)red    (I/F)blue 9:00 1 1.\r\n+2002_1771,2002_1771-11,Equivalent Lambert Albedo and red/blue Albedo ratio for Yogi at points A and B Time Wave Point A Point A Point B Point B Length (nm) Albedo Ared/Ablue Albedo Ared/Ablue 7:41 440 0.\r\n+2002_1771,2002_1771-12,\"327 Conclusions: We conclude that the Eastern facet of Yogi, which faces into the mean wind direction, is substantially more blue (less red) than the orthogonal (Southern) facet.\"\r\n+2002_1771,2002_1771-13,The method we applied to Yogi can be performed quickly and provides an efficient way to produce spectral products which are independent of illumination conditions.\r\n+2002_1771,2002_1771-14,Plans:  The method we used to interpret the color of Yogi still has the simplification of not accounting for the wavelength-dependant scattering phase function of the surface.\r\n+2002_1771,2002_1771-15,THE TRUE COLOR OF YOGI: AN ACCURATE METHOD FOR REMOVING DIFFUSE ILLUMINATION FROM MULTISPECTRAL IMAGES OF MARS Carol Stoker and  Kathy Rages M.\r\n+2002_1775,2002_1775-0,\"These materials included \"\"Black Rock\"\" cobbles and pebbles similar to those first identified by [13] and having 1000 nm band minima at a wavelength longer than that of the IMP bandpass, \"\"Intermediate Soil\"\" of a possibly indurated or compacted nature, exhibiting a deeper 900 nm absorption band than normal Bright Soil [14], and \"\"Spotted\"\" patches on the rock called Desert Princess, exhibiting a distinct 900 nm band and higher reflectances at 671 through 802 nm than other units [14].\"\r\n+2002_1775,2002_1775-1,\"The \"\"spotted\"\" patches on Desert Princess could be vesicles filled with altered soil or dust, cobbles in a conglomerate rock, or perhaps even phenocrysts of differing composition.\"\r\n+2002_1775,2002_1775-2,(Left) Black Rock; (Center) Intermediate Soil; (Right) Spotted Patches on Desert Princess.\r\n+2002_1947,2002_1947-0,\"We already know that the effect of the illumination can, under some conditions, be quite large: for example the side of Yogi that appeared overly red under noon illumination in the Gallery Pan [3].\"\r\n+2003_1081,2003_1081-0,We use four highly diverse IMP images centered on Mini-Matterhorn and the Rock Garden because they are suited to demonstrate the wide morphologic variation of rocks at the site.\r\n+2004_2179,2004_2179-0,Reflectivity spectra for the rock outcrop and the rock Scooby Doo at the Mars Pathfinder site are similar [e.\r\n+2004_2179,2004_2179-1,\"Because of its soil-like bulk composition, Scooby Doo is considered to be indurated soil [e.\"\r\n+2005_2122,2005_2122-0,\"Observed vesicularity of Martian rocks Soufflé (Pathfinder) and Dagwood (Spirit, sol142) and estimated initial depths within corresponding lava flows are shown by blue and red boxes.\"\r\n+2005_2122,2005_2122-1,\"Sub-angular block (\"\"Dagwood\"\") several decimeters across with vesicle layers.\"\r\n+2006_2296,2006_2296-0,\"The tail behind rock \"\"Barnacle Bill\"\" extends approximately 30 cm, starting with an upwind width of 23 cm.\"\r\n+2006_2296,2006_2296-1,\"Figure 6 - Increasingly close-up views of the flank of the windtail behind the rock \"\"Barnacle Bill\"\" at the MPF Ares Vallis site, based on contrast enhancement of a super-resolution composite image (via Tim Parker, JPL, 1999 personal communication).\"\r\n+2006_2296,2006_2296-2,\"The present flank orientation, however, is directly downwind of the deflationary trough immediately upwind of Barnacle Bill.\"\r\n+2013_2219,2013_2219-0,\", features Mermaid and Jenkins have morphology consistent with coarse-grained ripples; cf.\"\r"
  },
  {
    "sha": "fce8ba2431896b5c370d566ec3047e3f47d38931",
    "filename": "src/test/resources/github298/invalid/sentences.xml",
    "status": "added",
    "additions": 137,
    "deletions": 0,
    "changes": 137,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/invalid/sentences.xml",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/invalid/sentences.xml",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/test/resources/github298/invalid/sentences.xml?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<?xml-model href=\"http://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1E00.sch\" schematypens=\"http://purl.oclc.org/dsdl/schematron\"?>\n+\n+<Product_Observational xmlns=\"http://pds.nasa.gov/pds4/pds/v1\" \n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n+    xsi:schemaLocation=\"http://pds.nasa.gov/pds4/pds/v1 http://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1E00.xsd\">\n+    <Identification_Area>\n+        <logical_identifier>urn:nasa:pds:mars_target_encyclopedia:mpf:sentences</logical_identifier>\n+        <version_id>1.0</version_id>\n+        <title>MTE Mars Pathfinder Sentences Table</title>\n+        <information_model_version>1.14.0.0</information_model_version>\n+        <product_class>Product_Observational</product_class>\n+        <Citation_Information>\n+            <author_list>Wagstaff, K.; Francis, R.; Golombek, M.; Lu,\n+            S.; Riloff, E.; Tamppari, L.</author_list>\n+            <editor_list>VanBommel, S.</editor_list>\n+            <publication_year>2021</publication_year>\n+            <description>\n+                This is MTE MPF components table\n+            </description>\n+        </Citation_Information>\n+        <Modification_History>\n+            <Modification_Detail>\n+                <modification_date>2021-01-13</modification_date>\n+                <version_id>1.0</version_id>\n+                <description>Initial version.</description>\n+            </Modification_Detail>\n+        </Modification_History>\n+    </Identification_Area>\n+    <Observation_Area>\n+        <Time_Coordinates>\n+            <start_date_time>1997-07-04Z</start_date_time>\n+            <stop_date_time>2020-03-16Z</stop_date_time>\n+        </Time_Coordinates>\n+        <Primary_Result_Summary>\n+            <purpose>Science</purpose>\n+            <processing_level>Derived</processing_level>\n+        </Primary_Result_Summary>\n+        <Investigation_Area>\n+            <name>Mars Pathfinder</name>\n+            <type>Mission</type>\n+            <Internal_Reference>\n+                <lid_reference>urn:nasa:pds:context:investigation:mission.mars_pathfinder</lid_reference>\n+                <reference_type>data_to_investigation</reference_type>\n+            </Internal_Reference>\n+        </Investigation_Area>\n+        <Observing_System>\n+            <Observing_System_Component>\n+                <name>Mars Pathfinder Lander</name>\n+                <type>Host</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument_host:spacecraft.mpfl</lid_reference>\n+                    <reference_type>is_instrument_host</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+            <Observing_System_Component>\n+                <name>Imager for Mars Pathfinder</name>\n+                <type>Instrument</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument:imp.mpfl</lid_reference>\n+                    <reference_type>is_instrument</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+            <Observing_System_Component>\n+                <name>Mars Pathfinder Rover</name>\n+                <type>Host</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument_host:spacecraft.mpfr</lid_reference>\n+                    <reference_type>is_instrument_host</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+            <Observing_System_Component>\n+                <name>Alpha Proton X-ray Spectrometer</name>\n+                <type>Instrument</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument:apxs.mpfr</lid_reference>\n+                    <reference_type>is_instrument</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+        </Observing_System>\n+        <Target_Identification>\n+            <name>Mars</name>\n+            <type>Planet</type>\n+            <Internal_Reference>\n+                <lid_reference>urn:nasa:pds:context:target:planet.mars</lid_reference>\n+                <reference_type>data_to_target</reference_type>\n+            </Internal_Reference>\n+        </Target_Identification>\n+    </Observation_Area>\n+    <File_Area_Observational>\n+        <File>\n+            <file_name>sentences.csv</file_name>\n+            <file_size unit=\"byte\">46426</file_size>\n+            <records>285</records>\n+        </File>\n+        <Header>\n+            <name>Header</name>\n+            <offset unit=\"byte\">0</offset>\n+            <object_length unit=\"byte\">29</object_length>\n+            <parsing_standard_id>UTF-8 Text</parsing_standard_id>\n+        </Header>\n+        <Table_Delimited>\n+            <name>sentences</name>\n+            <offset unit=\"byte\">29</offset>\n+            <parsing_standard_id>PDS DSV 1</parsing_standard_id>\n+            <records>285</records>\n+            <record_delimiter>Carriage-Return Line-Feed</record_delimiter>\n+            <field_delimiter>Comma</field_delimiter>\n+            <Record_Delimited>\n+                <fields>3</fields>\n+                <groups>0</groups>\n+                <maximum_record_length unit=\"byte\">557</maximum_record_length>\n+                <Field_Delimited>\n+                    <name>doc_id</name>\n+                    <field_number>1</field_number>\n+                    <data_type>UTF8_String</data_type>\n+                    <maximum_field_length unit=\"byte\">9</maximum_field_length>\n+                    <description>id of source document: consists of year + '_' + abstract id</description>\n+                </Field_Delimited>\n+                <Field_Delimited>\n+                    <name>sentence_id</name>\n+                    <field_number>2</field_number>\n+                    <data_type>UTF8_String</data_type>\n+                    <maximum_field_length unit=\"byte\">12</maximum_field_length>\n+                    <description>sentence identifier: consists of doc_id + '-' + sentence_number</description>\n+                </Field_Delimited>\n+                <Field_Delimited>\n+                    <name>sentence</name>\n+                    <field_number>3</field_number>\n+                    <data_type>UTF8_String</data_type>\n+                    <maximum_field_length unit=\"byte\">531</maximum_field_length>\n+                    <description>text of the sentence</description>\n+                </Field_Delimited>\n+            </Record_Delimited>\n+        </Table_Delimited>\n+    </File_Area_Observational>\n+</Product_Observational>"
  },
  {
    "sha": "4a2d38977f50665b74fbdb9c2955673b583000ea",
    "filename": "src/test/resources/github298/valid/sentences.csv",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/valid/sentences.csv",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/valid/sentences.csv",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/test/resources/github298/valid/sentences.csv?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -0,0 +1,5 @@\n+doc_id,sentence_id,sentence\r\n+1998_1018,1998_1018-0,The angle measuring capability  was used to determine that Sojourner could not approach Yogi from the IMP-facing side due to an overhang that is only obvious using the reprojection capabilities of Marsmap.\r\n+1998_1186,1998_1186-0,\", Scooby Doo) may be an indurated soil, because its composition is similar to soils elsewhere at the site [7].\"\r\n+1998_1187,1998_1187-0,One possible explanation is that bulk densities of soils (perhaps like Scooby Doo) at depth are larger than those at the surface.\r\n+1998_1228,1998_1228-1,\"The Yogi images were obtained in four filters (443, 531, 671, and 967 nm) at 0740, 1500, 1640 LST over Sols 55-56 and at 0900 LST on Sol 75.\"\r"
  },
  {
    "sha": "30c4715fe6e85ca80edcdf43d1a6dab556151dfc",
    "filename": "src/test/resources/github298/valid/sentences.xml",
    "status": "added",
    "additions": 137,
    "deletions": 0,
    "changes": 137,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/valid/sentences.xml",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/valid/sentences.xml",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/test/resources/github298/valid/sentences.xml?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<?xml-model href=\"http://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1E00.sch\" schematypens=\"http://purl.oclc.org/dsdl/schematron\"?>\n+\n+<Product_Observational xmlns=\"http://pds.nasa.gov/pds4/pds/v1\" \n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n+    xsi:schemaLocation=\"http://pds.nasa.gov/pds4/pds/v1 http://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1E00.xsd\">\n+    <Identification_Area>\n+        <logical_identifier>urn:nasa:pds:mars_target_encyclopedia:mpf:sentences</logical_identifier>\n+        <version_id>1.0</version_id>\n+        <title>MTE Mars Pathfinder Sentences Table</title>\n+        <information_model_version>1.14.0.0</information_model_version>\n+        <product_class>Product_Observational</product_class>\n+        <Citation_Information>\n+            <author_list>Wagstaff, K.; Francis, R.; Golombek, M.; Lu,\n+            S.; Riloff, E.; Tamppari, L.</author_list>\n+            <editor_list>VanBommel, S.</editor_list>\n+            <publication_year>2021</publication_year>\n+            <description>\n+                This is MTE MPF components table\n+            </description>\n+        </Citation_Information>\n+        <Modification_History>\n+            <Modification_Detail>\n+                <modification_date>2021-01-13</modification_date>\n+                <version_id>1.0</version_id>\n+                <description>Initial version.</description>\n+            </Modification_Detail>\n+        </Modification_History>\n+    </Identification_Area>\n+    <Observation_Area>\n+        <Time_Coordinates>\n+            <start_date_time>1997-07-04Z</start_date_time>\n+            <stop_date_time>2020-03-16Z</stop_date_time>\n+        </Time_Coordinates>\n+        <Primary_Result_Summary>\n+            <purpose>Science</purpose>\n+            <processing_level>Derived</processing_level>\n+        </Primary_Result_Summary>\n+        <Investigation_Area>\n+            <name>Mars Pathfinder</name>\n+            <type>Mission</type>\n+            <Internal_Reference>\n+                <lid_reference>urn:nasa:pds:context:investigation:mission.mars_pathfinder</lid_reference>\n+                <reference_type>data_to_investigation</reference_type>\n+            </Internal_Reference>\n+        </Investigation_Area>\n+        <Observing_System>\n+            <Observing_System_Component>\n+                <name>Mars Pathfinder Lander</name>\n+                <type>Host</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument_host:spacecraft.mpfl</lid_reference>\n+                    <reference_type>is_instrument_host</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+            <Observing_System_Component>\n+                <name>Imager for Mars Pathfinder</name>\n+                <type>Instrument</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument:imp.mpfl</lid_reference>\n+                    <reference_type>is_instrument</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+            <Observing_System_Component>\n+                <name>Mars Pathfinder Rover</name>\n+                <type>Host</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument_host:spacecraft.mpfr</lid_reference>\n+                    <reference_type>is_instrument_host</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+            <Observing_System_Component>\n+                <name>Alpha Proton X-ray Spectrometer</name>\n+                <type>Instrument</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument:apxs.mpfr</lid_reference>\n+                    <reference_type>is_instrument</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+        </Observing_System>\n+        <Target_Identification>\n+            <name>Mars</name>\n+            <type>Planet</type>\n+            <Internal_Reference>\n+                <lid_reference>urn:nasa:pds:context:target:planet.mars</lid_reference>\n+                <reference_type>data_to_target</reference_type>\n+            </Internal_Reference>\n+        </Target_Identification>\n+    </Observation_Area>\n+    <File_Area_Observational>\n+        <File>\n+            <file_name>sentences.csv</file_name>\n+            <file_size unit=\"byte\">713</file_size>\n+            <records>4</records>\n+        </File>\n+        <Header>\n+            <name>Header</name>\n+            <offset unit=\"byte\">0</offset>\n+            <object_length unit=\"byte\">29</object_length>\n+            <parsing_standard_id>UTF-8 Text</parsing_standard_id>\n+        </Header>\n+        <Table_Delimited>\n+            <name>sentences</name>\n+            <offset unit=\"byte\">29</offset>\n+            <parsing_standard_id>PDS DSV 1</parsing_standard_id>\n+            <records>4</records>\n+            <record_delimiter>Carriage-Return Line-Feed</record_delimiter>\n+            <field_delimiter>Comma</field_delimiter>\n+            <Record_Delimited>\n+                <fields>3</fields>\n+                <groups>0</groups>\n+                <maximum_record_length unit=\"byte\">557</maximum_record_length>\n+                <Field_Delimited>\n+                    <name>doc_id</name>\n+                    <field_number>1</field_number>\n+                    <data_type>UTF8_String</data_type>\n+                    <maximum_field_length unit=\"byte\">9</maximum_field_length>\n+                    <description>id of source document: consists of year + '_' + abstract id</description>\n+                </Field_Delimited>\n+                <Field_Delimited>\n+                    <name>sentence_id</name>\n+                    <field_number>2</field_number>\n+                    <data_type>UTF8_String</data_type>\n+                    <maximum_field_length unit=\"byte\">12</maximum_field_length>\n+                    <description>sentence identifier: consists of doc_id + '-' + sentence_number</description>\n+                </Field_Delimited>\n+                <Field_Delimited>\n+                    <name>sentence</name>\n+                    <field_number>3</field_number>\n+                    <data_type>UTF8_String</data_type>\n+                    <maximum_field_length unit=\"byte\">531</maximum_field_length>\n+                    <description>text of the sentence</description>\n+                </Field_Delimited>\n+            </Record_Delimited>\n+        </Table_Delimited>\n+    </File_Area_Observational>\n+</Product_Observational>"
  },
  {
    "sha": "3b9c466c8115e33ba36a523a7f95d77229912639",
    "filename": "src/test/resources/github298/valid/sentences_2_rows.csv",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/valid/sentences_2_rows.csv",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/valid/sentences_2_rows.csv",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/test/resources/github298/valid/sentences_2_rows.csv?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -0,0 +1,3 @@\n+doc_id,sentence_id,sentence\r\n+1998_1018,1998_1018-0,The angle measuring capability  was used to determine that Sojourner could not approach Yogi from the IMP-facing side due to an overhang that is only obvious using the reprojection capabilities of Marsmap.\r\n+1998_1228,1998_1228-1,\"The Yogi images were obtained in four filters (443, 531, 671, and 967 nm) at 0740, 1500, 1640 LST over Sols 55-56 and at 0900 LST on Sol 75.\"\r"
  },
  {
    "sha": "34fedf1b7a19505f05751def5292fac940ecbe8a",
    "filename": "src/test/resources/github298/valid/sentences_2_rows.xml",
    "status": "added",
    "additions": 137,
    "deletions": 0,
    "changes": 137,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/valid/sentences_2_rows.xml",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github298/valid/sentences_2_rows.xml",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/test/resources/github298/valid/sentences_2_rows.xml?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<?xml-model href=\"http://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1E00.sch\" schematypens=\"http://purl.oclc.org/dsdl/schematron\"?>\n+\n+<Product_Observational xmlns=\"http://pds.nasa.gov/pds4/pds/v1\" \n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n+    xsi:schemaLocation=\"http://pds.nasa.gov/pds4/pds/v1 http://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1E00.xsd\">\n+    <Identification_Area>\n+        <logical_identifier>urn:nasa:pds:mars_target_encyclopedia:mpf:sentences</logical_identifier>\n+        <version_id>1.0</version_id>\n+        <title>MTE Mars Pathfinder Sentences Table</title>\n+        <information_model_version>1.14.0.0</information_model_version>\n+        <product_class>Product_Observational</product_class>\n+        <Citation_Information>\n+            <author_list>Wagstaff, K.; Francis, R.; Golombek, M.; Lu,\n+            S.; Riloff, E.; Tamppari, L.</author_list>\n+            <editor_list>VanBommel, S.</editor_list>\n+            <publication_year>2021</publication_year>\n+            <description>\n+                This is MTE MPF components table\n+            </description>\n+        </Citation_Information>\n+        <Modification_History>\n+            <Modification_Detail>\n+                <modification_date>2021-01-13</modification_date>\n+                <version_id>1.0</version_id>\n+                <description>Initial version.</description>\n+            </Modification_Detail>\n+        </Modification_History>\n+    </Identification_Area>\n+    <Observation_Area>\n+        <Time_Coordinates>\n+            <start_date_time>1997-07-04Z</start_date_time>\n+            <stop_date_time>2020-03-16Z</stop_date_time>\n+        </Time_Coordinates>\n+        <Primary_Result_Summary>\n+            <purpose>Science</purpose>\n+            <processing_level>Derived</processing_level>\n+        </Primary_Result_Summary>\n+        <Investigation_Area>\n+            <name>Mars Pathfinder</name>\n+            <type>Mission</type>\n+            <Internal_Reference>\n+                <lid_reference>urn:nasa:pds:context:investigation:mission.mars_pathfinder</lid_reference>\n+                <reference_type>data_to_investigation</reference_type>\n+            </Internal_Reference>\n+        </Investigation_Area>\n+        <Observing_System>\n+            <Observing_System_Component>\n+                <name>Mars Pathfinder Lander</name>\n+                <type>Host</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument_host:spacecraft.mpfl</lid_reference>\n+                    <reference_type>is_instrument_host</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+            <Observing_System_Component>\n+                <name>Imager for Mars Pathfinder</name>\n+                <type>Instrument</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument:imp.mpfl</lid_reference>\n+                    <reference_type>is_instrument</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+            <Observing_System_Component>\n+                <name>Mars Pathfinder Rover</name>\n+                <type>Host</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument_host:spacecraft.mpfr</lid_reference>\n+                    <reference_type>is_instrument_host</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+            <Observing_System_Component>\n+                <name>Alpha Proton X-ray Spectrometer</name>\n+                <type>Instrument</type>\n+                <Internal_Reference>\n+                    <lid_reference>urn:nasa:pds:context:instrument:apxs.mpfr</lid_reference>\n+                    <reference_type>is_instrument</reference_type>\n+                </Internal_Reference>\n+            </Observing_System_Component>\n+        </Observing_System>\n+        <Target_Identification>\n+            <name>Mars</name>\n+            <type>Planet</type>\n+            <Internal_Reference>\n+                <lid_reference>urn:nasa:pds:context:target:planet.mars</lid_reference>\n+                <reference_type>data_to_target</reference_type>\n+            </Internal_Reference>\n+        </Target_Identification>\n+    </Observation_Area>\n+    <File_Area_Observational>\n+        <File>\n+            <file_name>sentences_2_rows.csv</file_name>\n+            <file_size unit=\"byte\">424</file_size>\n+            <records>2</records>\n+        </File>\n+        <Header>\n+            <name>Header</name>\n+            <offset unit=\"byte\">0</offset>\n+            <object_length unit=\"byte\">29</object_length>\n+            <parsing_standard_id>UTF-8 Text</parsing_standard_id>\n+        </Header>\n+        <Table_Delimited>\n+            <name>sentences</name>\n+            <offset unit=\"byte\">29</offset>\n+            <parsing_standard_id>PDS DSV 1</parsing_standard_id>\n+            <records>2</records>\n+            <record_delimiter>Carriage-Return Line-Feed</record_delimiter>\n+            <field_delimiter>Comma</field_delimiter>\n+            <Record_Delimited>\n+                <fields>3</fields>\n+                <groups>0</groups>\n+                <maximum_record_length unit=\"byte\">557</maximum_record_length>\n+                <Field_Delimited>\n+                    <name>doc_id</name>\n+                    <field_number>1</field_number>\n+                    <data_type>UTF8_String</data_type>\n+                    <maximum_field_length unit=\"byte\">9</maximum_field_length>\n+                    <description>id of source document: consists of year + '_' + abstract id</description>\n+                </Field_Delimited>\n+                <Field_Delimited>\n+                    <name>sentence_id</name>\n+                    <field_number>2</field_number>\n+                    <data_type>UTF8_String</data_type>\n+                    <maximum_field_length unit=\"byte\">12</maximum_field_length>\n+                    <description>sentence identifier: consists of doc_id + '-' + sentence_number</description>\n+                </Field_Delimited>\n+                <Field_Delimited>\n+                    <name>sentence</name>\n+                    <field_number>3</field_number>\n+                    <data_type>UTF8_String</data_type>\n+                    <maximum_field_length unit=\"byte\">531</maximum_field_length>\n+                    <description>text of the sentence</description>\n+                </Field_Delimited>\n+            </Record_Delimited>\n+        </Table_Delimited>\n+    </File_Area_Observational>\n+</Product_Observational>"
  },
  {
    "sha": "a7d373196fc0cf8e212042bad68dd84ec6631b35",
    "filename": "src/test/resources/github71/ELE_MOM_2.xml",
    "status": "added",
    "additions": 172,
    "deletions": 0,
    "changes": 172,
    "blob_url": "https://github.com/NASA-PDS/validate/blob/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github71/ELE_MOM_2.xml",
    "raw_url": "https://github.com/NASA-PDS/validate/raw/70cbcbc577013d8b6b6a1191fc59d5e356a98d17/src/test/resources/github71/ELE_MOM_2.xml",
    "contents_url": "https://api.github.com/repos/NASA-PDS/validate/contents/src/test/resources/github71/ELE_MOM_2.xml?ref=70cbcbc577013d8b6b6a1191fc59d5e356a98d17",
    "patch": "@@ -0,0 +1,172 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<?xml-model href=\"https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1700.sch\"\r\n+  schematypens=\"http://purl.oclc.org/dsdl/schematron\"?>\r\n+\r\n+<Product_Observational xmlns=\"http://pds.nasa.gov/pds4/pds/v1\"\r\n+    xmlns:pds=\"http://pds.nasa.gov/pds4/pds/v1\"\r\n+    xmlns:test=\"http://pds.nasa.gov/pds4/test/v1\"\r\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+    xsi:schemaLocation=\"http://pds.nasa.gov/pds4/pds/v1 https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1700.xsd\r\n+    http://pds.nasa.gov/pds4/test/v1 https://pds.nasa.gov/pds4/test/v1/PDS4_TEST_1700.xsd\">\r\n+\r\n+    <Identification_Area>\r\n+        <logical_identifier>urn:nasa:pds:example.dph.sample_archive_bundle:data:tablechar.vg2-j-pls-5-summ-ele-mom-96.0sec-v1.0</logical_identifier>\r\n+        <version_id>1.0</version_id>\r\n+        <title>Voyager Electron density and moment temperature Plasma Experiment</title>\r\n+        <information_model_version>1.7.0.0</information_model_version>\r\n+        <product_class>Product_Observational</product_class>\r\n+        <Modification_History>\r\n+            <Modification_Detail>\r\n+                <modification_date>2012-01-10</modification_date>\r\n+                <version_id>1.0</version_id>\r\n+                <description>\r\n+                    conversion of PDS3 PPI archive to comply with PDS4 Information Model\r\n+                </description>\r\n+            </Modification_Detail>\r\n+        </Modification_History>\r\n+    </Identification_Area>\r\n+    \r\n+    <Observation_Area>\r\n+        <comment>Observational Intent</comment>\r\n+        <Time_Coordinates>\r\n+            <start_date_time>1979-07-06T00:00:42.687Z</start_date_time>\r\n+            <stop_date_time>1979-07-09T23:59:06.436Z</stop_date_time>\r\n+        </Time_Coordinates>\r\n+       \r\n+        <Primary_Result_Summary>\r\n+            <purpose>Science</purpose>\r\n+            <processing_level>Raw</processing_level>\r\n+            <description>\r\n+                This is where a generic description of the product goes.\r\n+            </description>\r\n+            <Science_Facets>\r\n+                <wavelength_range>Gamma Ray</wavelength_range>\r\n+                <domain>Magnetosphere</domain>\r\n+                <discipline_name>Particles</discipline_name>\r\n+            </Science_Facets>\r\n+        </Primary_Result_Summary>\r\n+        \r\n+        <Investigation_Area>\r\n+            <name>VOYAGER</name>\r\n+            <type>Mission</type>\r\n+            <Internal_Reference>\r\n+                <lid_reference>urn:nasa:pds:context:investigation:mission.voyager</lid_reference>\r\n+                <reference_type>data_to_investigation</reference_type>\r\n+            </Internal_Reference>\r\n+        </Investigation_Area>\r\n+        <Observing_System>\r\n+            <name>Observing System for VG+PLS</name>\r\n+            <Observing_System_Component>\r\n+                <name>VG2</name>\r\n+                <type>Spacecraft</type>\r\n+                <description>instrument_host VG2</description>\r\n+                <Internal_Reference>\r\n+                    <lid_reference>urn:nasa:pds:context:instrument_host:spacecraft.vg2</lid_reference>\r\n+                    <reference_type>is_instrument_host</reference_type>\r\n+                </Internal_Reference>\r\n+            </Observing_System_Component>\r\n+            <Observing_System_Component>\r\n+                <name>PLS</name>\r\n+                <type>Instrument</type>\r\n+                <description>instrument PLS</description>\r\n+                <Internal_Reference>\r\n+                    <lid_reference>urn:nasa:pds:context:instrument:pls.vg2</lid_reference>\r\n+                    <reference_type>is_instrument</reference_type>\r\n+                </Internal_Reference>\r\n+            </Observing_System_Component>\r\n+        </Observing_System>       \r\n+        <Target_Identification>\r\n+            <name>JUPITER</name>\r\n+            <type>Planet</type>\r\n+            <description>description of JUPITER goes here</description>\r\n+            <Internal_Reference>\r\n+                <lid_reference>urn:nasa:pds:context:target:planet.jupiter</lid_reference>\r\n+                <reference_type>data_to_target</reference_type>\r\n+            </Internal_Reference>\r\n+        </Target_Identification>\r\n+        \r\n+        <!-- ============================================================ -->\r\n+        <!-- Reference the attributes that were imported from the         -->\r\n+        <!-- local dictionary (using the local namespace (test)            -->\r\n+        <!-- ============================================================ -->                   \r\n+        <Mission_Area>\r\n+            <test:spacecraft_clock_start_count>2/20541:22:726</test:spacecraft_clock_start_count>\r\n+            <test:spacecraft_clock_stop_count>2/20661:20:726</test:spacecraft_clock_stop_count>            \r\n+        </Mission_Area>\r\n+        <Discipline_Area>\r\n+        </Discipline_Area>\r\n+    </Observation_Area>\r\n+        \r\n+    <Reference_List>\r\n+        <Internal_Reference>\r\n+            <lid_reference>urn:nasa:pds:context:node:node.ppi-ucla</lid_reference>\r\n+            <reference_type>data_curated_by_node</reference_type>\r\n+        </Internal_Reference>\r\n+    </Reference_List>\r\n+    \r\n+     <File_Area_Observational>\r\n+        <File>\r\n+            <file_name>ELE_MOM.TAB</file_name>\r\n+            <local_identifier>ELE_MOM.TAB</local_identifier>\r\n+            <creation_date_time>1999-02-26T10:55</creation_date_time>\r\n+            <file_size unit=\"byte\">104788</file_size>\r\n+            <records>2278</records>\r\n+            <md5_checksum>2b555c42a7e7b4981407c9a824237f4a</md5_checksum>\r\n+        </File>\r\n+        <Table_Character>\r\n+            <local_identifier>VG2-J-PLS-5-SUMM-ELE-MOM_TABLE_CHAR</local_identifier>\r\n+            <offset unit=\"byte\">0</offset>\r\n+            <records>2278</records>\r\n+            <record_delimiter>Carriage-Return Line-Feed</record_delimiter>\r\n+            \r\n+            <Record_Character>\r\n+                <fields>3</fields>\r\n+                <groups>0</groups>\r\n+                <record_length unit=\"byte\">46</record_length>\r\n+                \r\n+                <Field_Character>\r\n+                    <name>TIME</name>\r\n+                    <field_number>1</field_number>\r\n+                    <field_location unit=\"byte\">1</field_location>\r\n+                    <data_type>ASCII_Date_Time_YMD_UTC</data_type>\r\n+                    <field_length unit=\"byte\">24</field_length>\r\n+                    <description>\r\n+                        Time column. This field contains time in PDS format     \r\n+                        yyyy-mm-ddThh:mm:ss.sssZ. The individual elements of the         \r\n+                        time field can be read using the format                          \r\n+                        (i4,4(1x,i2),1x,f6.3) yr, mon, day, hr, min, sec.\r\n+                    </description>\r\n+                </Field_Character>\r\n+                <Field_Character>\r\n+                    <name>ELE_DEN</name>\r\n+                    <field_number>2</field_number>\r\n+                    <field_location unit=\"byte\">25</field_location>\r\n+                    <data_type>ASCII_Real</data_type>\r\n+                    <field_length unit=\"byte\">10</field_length>\r\n+                    <unit>count/cm**3</unit>\r\n+                    <description>\r\n+                        Column contains total electron moment density in counts/cm^3.    \r\n+                    </description>\r\n+                    <Special_Constants>\r\n+                       <missing_constant>-9.99e+10</missing_constant>\r\n+                    </Special_Constants>\r\n+                </Field_Character>\r\n+                <Field_Character>\r\n+                    <name>ELE_TEMP</name>\r\n+                    <field_number>3</field_number>\r\n+                    <field_location unit=\"byte\">35</field_location>\r\n+                    <data_type>ASCII_Real</data_type>\r\n+                    <field_length unit=\"byte\">10</field_length>\r\n+                    <unit>electronvolt</unit>\r\n+                    <description>\r\n+                        Column contains total electron moment temperature in units of\r\n+                        electron volts.                   \r\n+                    </description>\r\n+                    <Special_Constants>\r\n+                       <missing_constant>-9.99e+10</missing_constant>\r\n+                    </Special_Constants>\r\n+                </Field_Character>\r\n+            </Record_Character>\r\n+        </Table_Character>\r\n+    </File_Area_Observational>\r\n+</Product_Observational>\r"
  }
]
