[
  {
    "sha": "6267a225bdece2fa4052d7f75893bfb3dd7fb009",
    "filename": "web/html/src/components/FormulaForm.tsx",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/components/FormulaForm.tsx",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/components/FormulaForm.tsx",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/components/FormulaForm.tsx?ref=81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22",
    "patch": "@@ -44,7 +44,7 @@ type Props = {\n   /** current active scope (system or group) */\n   scope: \"system\" | \"group\";\n \n-  messageTexts: string[];\n+  messageTexts: any;\n };\n \n type State = {"
  },
  {
    "sha": "5d6715fc2f6bddfa8f23d5a6ec1badbe2753a924",
    "filename": "web/html/src/manager/minion/config-channels/minion-config-channels.js",
    "status": "removed",
    "additions": 0,
    "deletions": 51,
    "changes": 51,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/config-channels/minion-config-channels.js",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/config-channels/minion-config-channels.js",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/config-channels/minion-config-channels.js?ref=a47023b7ca9950ec0c17163c0a56b66ea589fa8e",
    "patch": "@@ -1,51 +0,0 @@\n-/* eslint-disable */\n-'use strict';\n-\n-import * as React from 'react';\n-import ReactDOM from 'react-dom';\n-import { ConfigChannels } from 'components/config-channels';\n-import { Utils as MessagesUtils } from 'components/messages';\n-import Network from 'utils/network';\n-import SpaRenderer from 'core/spa/spa-renderer';\n-\n-function matchUrl(target) {\n-    return \"/rhn/manager/api/states/match?id=\" + serverId + \"&type=SERVER\"\n-             + (target ? \"&target=\" + target : \"\");\n-}\n-\n-function applyRequest(component) {\n-    return Network.post(\n-        \"/rhn/manager/api/states/apply\",\n-        JSON.stringify({\n-            id: serverId,\n-            type: \"SERVER\",\n-            states: [\"custom\"]\n-        }),\n-        \"application/json\"\n-        )\n-        .promise.then(data => {\n-              console.log(\"apply action queued:\" + data);\n-              component.setState({\n-                  messages: MessagesUtils.info(<span>{t(\"Applying the config channels has been \")}\n-                      <a href={\"/rhn/systems/details/history/Event.do?sid=\" + serverId + \"&aid=\" + data}>{t(\"scheduled\")}</a>\n-                  </span>)\n-              });\n-        });\n-}\n-\n-function saveRequest(states) {\n-    return Network.post(\n-        \"/rhn/manager/api/states/save\",\n-        JSON.stringify({\n-            id: serverId,\n-            type: \"SERVER\",\n-            channels: states\n-        }),\n-        \"application/json\"\n-    );\n-}\n-\n-export const renderer = () => SpaRenderer.renderNavigationReact(\n-  <ConfigChannels matchUrl={matchUrl} saveRequest={saveRequest} applyRequest={applyRequest}/>,\n-  document.getElementById('config-channels')\n-);"
  },
  {
    "sha": "75ba434667d744e0e875ddbbfe4f782d7698505c",
    "filename": "web/html/src/manager/minion/config-channels/minion-config-channels.tsx",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/config-channels/minion-config-channels.tsx",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/config-channels/minion-config-channels.tsx",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/config-channels/minion-config-channels.tsx?ref=81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22",
    "patch": "@@ -0,0 +1,56 @@\n+import * as React from \"react\";\n+import { ConfigChannels } from \"components/config-channels\";\n+import { Utils as MessagesUtils } from \"components/messages\";\n+import Network from \"utils/network\";\n+import SpaRenderer from \"core/spa/spa-renderer\";\n+\n+// See java/code/src/com/suse/manager/webui/templates/minion/custom.jade\n+declare global {\n+  interface Window {\n+    serverId?: any;\n+  }\n+}\n+\n+function matchUrl(target?: string) {\n+  return \"/rhn/manager/api/states/match?id=\" + window.serverId + \"&type=SERVER\" + (target ? \"&target=\" + target : \"\");\n+}\n+\n+function applyRequest(component) {\n+  return Network.post(\n+    \"/rhn/manager/api/states/apply\",\n+    JSON.stringify({\n+      id: window.serverId,\n+      type: \"SERVER\",\n+      states: [\"custom\"],\n+    }),\n+    \"application/json\"\n+  ).promise.then(data => {\n+    console.log(\"apply action queued:\" + data);\n+    component.setState({\n+      messages: MessagesUtils.info(\n+        <span>\n+          {t(\"Applying the config channels has been \")}\n+          <a href={\"/rhn/systems/details/history/Event.do?sid=\" + window.serverId + \"&aid=\" + data}>{t(\"scheduled\")}</a>\n+        </span>\n+      ),\n+    });\n+  });\n+}\n+\n+function saveRequest(states) {\n+  return Network.post(\n+    \"/rhn/manager/api/states/save\",\n+    JSON.stringify({\n+      id: window.serverId,\n+      type: \"SERVER\",\n+      channels: states,\n+    }),\n+    \"application/json\"\n+  );\n+}\n+\n+export const renderer = () =>\n+  SpaRenderer.renderNavigationReact(\n+    <ConfigChannels matchUrl={matchUrl} saveRequest={saveRequest} applyRequest={applyRequest} />,\n+    document.getElementById(\"config-channels\")\n+  );"
  },
  {
    "sha": "51451eb50bf82061d43e89c6fcf5a1b76d6348c5",
    "filename": "web/html/src/manager/minion/formula/minion-formula-selection.renderer.js",
    "status": "removed",
    "additions": 0,
    "deletions": 78,
    "changes": 78,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/formula/minion-formula-selection.renderer.js",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/formula/minion-formula-selection.renderer.js",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/formula/minion-formula-selection.renderer.js?ref=a47023b7ca9950ec0c17163c0a56b66ea589fa8e",
    "patch": "@@ -1,78 +0,0 @@\n-/* eslint-disable */\n-'use strict';\n-\n-import * as React from 'react';\n-import ReactDOM from 'react-dom';\n-import Network from 'utils/network';\n-import { FormulaSelection } from 'components/formula-selection';\n-import {Utils} from 'utils/functions';\n-import SpaRenderer from 'core/spa/spa-renderer';\n-\n-const capitalize = Utils.capitalize;\n-\n-export const renderer = (renderId, {serverId, warningMessage}) => {\n-\n-\n-  const messageTexts = {\n-    \"formulas_saved\" : <p>{t(\"Formula saved. Edit configuration options \" +\n-      \"in the enabled formulas and apply the \")}<a\n-      href={'/rhn/manager/systems/details/highstate?sid=' +\n-        serverId}>{t(\"Highstate\")}</a>{t(\" for the changes to take effect.\")}\n-    </p>,\n-    \"error_invalid_target\" : t(\"Invalid target type.\")\n-  }\n-\n-  function getMessageText(msg) {\n-    return messageTexts[msg] ? t(messageTexts[msg]) : msg;\n-  }\n-\n-  function saveRequest(component, selectedFormulas) {\n-    const formData = {};\n-    formData.type = \"SERVER\";\n-    formData.id = serverId;\n-    formData.selected = selectedFormulas;\n-\n-    return Network.post(\n-      \"/rhn/manager/api/formulas/select\",\n-      JSON.stringify(formData),\n-      \"application/json\"\n-    ).promise.then(data => {\n-        component.setState({\n-          messages: data.map(msg => getMessageText(msg))\n-        });\n-      },\n-      (xhr) => {\n-        try {\n-          component.setState({\n-            errors: [JSON.parse(xhr.responseText)]\n-          })\n-        } catch (err) {\n-          component.setState({\n-            errors: [Network.errorMessageByStatus(xhr.status)]\n-          })\n-        }\n-      });\n-  }\n-\n-  function addFormulaNavBar(formulaList) {\n-    jQuery(\"#formula-nav-bar\").remove();\n-\n-    var navBar = \"<ul class='nav nav-tabs nav-tabs-pf' id='formula-nav-bar'>\\n\"\n-    navBar += \"<li class='active'><a href='/rhn/manager/systems/details/formulas?sid=\" + serverId + \"'><i class='fa fa-pencil-square-o'></i>\" + t(\"Configuration\") + \"</a></li>\\n\";\n-    for (var i in formulaList)\n-      navBar += \"<li><a href='/rhn/manager/systems/details/formula/\" + i + \"?sid=\" + serverId + \"'>\" + capitalize(formulaList[i]) + \"</a></li>\\n\";\n-    navBar += \"</ul>\"\n-    jQuery(\".spacewalk-content-nav\").append(navBar);\n-  }\n-\n-  SpaRenderer.renderNavigationReact(\n-    <FormulaSelection\n-      dataUrl={\"/rhn/manager/api/formulas/list/SERVER/\" + serverId}\n-      saveRequest={saveRequest}\n-      systemId={serverId}\n-      addFormulaNavBar={addFormulaNavBar}\n-      warningMessage={warningMessage}\n-    />,\n-    document.getElementById(renderId)\n-  );\n-};"
  },
  {
    "sha": "f386110499d2cc79f053782ea621d59f457e917e",
    "filename": "web/html/src/manager/minion/formula/minion-formula-selection.renderer.tsx",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/formula/minion-formula-selection.renderer.tsx",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/formula/minion-formula-selection.renderer.tsx",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/formula/minion-formula-selection.renderer.tsx?ref=81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22",
    "patch": "@@ -0,0 +1,83 @@\n+import * as React from \"react\";\n+import Network from \"utils/network\";\n+import { FormulaSelection } from \"components/formula-selection\";\n+import { Utils } from \"utils/functions\";\n+import SpaRenderer from \"core/spa/spa-renderer\";\n+\n+const capitalize = Utils.capitalize;\n+\n+export const renderer = (renderId, { serverId, warningMessage }) => {\n+  const messageTexts = {\n+    formulas_saved: (\n+      <p>\n+        {t(\"Formula saved. Edit configuration options \" + \"in the enabled formulas and apply the \")}\n+        <a href={\"/rhn/manager/systems/details/highstate?sid=\" + serverId}>{t(\"Highstate\")}</a>\n+        {t(\" for the changes to take effect.\")}\n+      </p>\n+    ),\n+    error_invalid_target: t(\"Invalid target type.\"),\n+  };\n+\n+  function getMessageText(msg) {\n+    return messageTexts[msg] ? t(messageTexts[msg]) : msg;\n+  }\n+\n+  function saveRequest(component, selectedFormulas) {\n+    const formData: any = {};\n+    formData.type = \"SERVER\";\n+    formData.id = serverId;\n+    formData.selected = selectedFormulas;\n+\n+    return Network.post(\"/rhn/manager/api/formulas/select\", JSON.stringify(formData), \"application/json\").promise.then(\n+      data => {\n+        component.setState({\n+          messages: data.map(msg => getMessageText(msg)),\n+        });\n+      },\n+      xhr => {\n+        try {\n+          component.setState({\n+            errors: [JSON.parse(xhr.responseText)],\n+          });\n+        } catch (err) {\n+          component.setState({\n+            errors: [Network.errorMessageByStatus(xhr.status)],\n+          });\n+        }\n+      }\n+    );\n+  }\n+\n+  function addFormulaNavBar(formulaList) {\n+    jQuery(\"#formula-nav-bar\").remove();\n+\n+    var navBar = \"<ul class='nav nav-tabs nav-tabs-pf' id='formula-nav-bar'>\\n\";\n+    navBar +=\n+      \"<li class='active'><a href='/rhn/manager/systems/details/formulas?sid=\" +\n+      serverId +\n+      \"'><i class='fa fa-pencil-square-o'></i>\" +\n+      t(\"Configuration\") +\n+      \"</a></li>\\n\";\n+    for (var i in formulaList)\n+      navBar +=\n+        \"<li><a href='/rhn/manager/systems/details/formula/\" +\n+        i +\n+        \"?sid=\" +\n+        serverId +\n+        \"'>\" +\n+        capitalize(formulaList[i]) +\n+        \"</a></li>\\n\";\n+    navBar += \"</ul>\";\n+    jQuery(\".spacewalk-content-nav\").append(navBar);\n+  }\n+\n+  SpaRenderer.renderNavigationReact(\n+    <FormulaSelection\n+      dataUrl={\"/rhn/manager/api/formulas/list/SERVER/\" + serverId}\n+      saveRequest={saveRequest}\n+      addFormulaNavBar={addFormulaNavBar}\n+      warningMessage={warningMessage}\n+    />,\n+    document.getElementById(renderId)\n+  );\n+};"
  },
  {
    "sha": "6cf19fc60f0e2bf73a13a2fd041f5f665f40cc2b",
    "filename": "web/html/src/manager/minion/formula/minion-formula.renderer.js",
    "status": "removed",
    "additions": 0,
    "deletions": 49,
    "changes": 49,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/formula/minion-formula.renderer.js",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/formula/minion-formula.renderer.js",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/formula/minion-formula.renderer.js?ref=a47023b7ca9950ec0c17163c0a56b66ea589fa8e",
    "patch": "@@ -1,49 +0,0 @@\n-/* eslint-disable */\n-'use strict';\n-\n-import * as React from 'react';\n-import ReactDOM from 'react-dom';\n-\n-import Network from 'utils/network';\n-import FormulaForm from \"components/FormulaForm\";\n-import {Utils} from 'utils/functions';\n-import SpaRenderer from \"core/spa/spa-renderer\";\n-\n-const capitalize = Utils.capitalize;\n-\n-export const renderer = (renderId, {serverId, formulaId}) => {\n-\n-  const msgMap = {\n-    \"formula_saved\": <p>{t(\"Formula saved. Apply the \")}<a\n-      href={'/rhn/manager/systems/details/highstate?sid=' + serverId}>\n-        {t(\"Highstate\")}</a>{t(\" for the changes to take effect.\")}\n-    </p>,\n-    \"error_invalid_target\": t(\"Invalid target type.\")\n-  }\n-\n-  function addFormulaNavBar(formulaList, activeId) {\n-    jQuery(\"#formula-nav-bar\").remove();\n-\n-    var navBar = \"<ul class='nav nav-tabs nav-tabs-pf' id='formula-nav-bar'>\\n\"\n-    navBar += \"<li><a href='/rhn/manager/systems/details/formulas?sid=\" + serverId + \"'><i class='fa fa-pencil-square-o'></i>\" + t(\"Configuration\") + \"</a></li>\\n\";\n-    for (var i in formulaList)\n-      navBar += \"<li\" + (i == activeId ? \" class='active'>\" : \">\") + \"<a href='/rhn/manager/systems/details/formula/\" + i + \"?sid=\" + serverId + \"'>\" + capitalize(formulaList[i]) + \"</a></li>\\n\";\n-    navBar += \"</ul>\"\n-    jQuery(\".spacewalk-content-nav\").append(navBar);\n-  }\n-\n-  SpaRenderer.renderNavigationReact(\n-    <FormulaForm\n-      dataUrl={\"/rhn/manager/api/formulas/form/SERVER/\" + serverId + \"/\" + formulaId}\n-      saveUrl=\"/rhn/manager/api/formulas/save\"\n-      addFormulaNavBar={addFormulaNavBar}\n-      formulaId={formulaId}\n-      systemId={serverId}\n-      getFormulaUrl={function (id) {\n-        return \"/rhn/manager/systems/details/formula/\" + id + \"?sid=\" + serverId;\n-      }}\n-      scope=\"system\"\n-      messageTexts={msgMap}/>,\n-    document.getElementById(renderId)\n-  );\n-}"
  },
  {
    "sha": "21bedbad4ddffb069f143fe6a4442336bb3cc6c7",
    "filename": "web/html/src/manager/minion/formula/minion-formula.renderer.tsx",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/formula/minion-formula.renderer.tsx",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/formula/minion-formula.renderer.tsx",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/formula/minion-formula.renderer.tsx?ref=81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22",
    "patch": "@@ -0,0 +1,62 @@\n+import * as React from \"react\";\n+\n+import FormulaForm from \"components/FormulaForm\";\n+import { Utils } from \"utils/functions\";\n+import SpaRenderer from \"core/spa/spa-renderer\";\n+import { DEPRECATED_unsafeEquals } from \"utils/legacy\";\n+\n+const capitalize = Utils.capitalize;\n+\n+export const renderer = (renderId, { serverId, formulaId }) => {\n+  const msgMap = {\n+    formula_saved: (\n+      <p>\n+        {t(\"Formula saved. Apply the \")}\n+        <a href={\"/rhn/manager/systems/details/highstate?sid=\" + serverId}>{t(\"Highstate\")}</a>\n+        {t(\" for the changes to take effect.\")}\n+      </p>\n+    ),\n+    error_invalid_target: t(\"Invalid target type.\"),\n+  };\n+\n+  function addFormulaNavBar(formulaList, activeId) {\n+    jQuery(\"#formula-nav-bar\").remove();\n+\n+    var navBar = \"<ul class='nav nav-tabs nav-tabs-pf' id='formula-nav-bar'>\\n\";\n+    navBar +=\n+      \"<li><a href='/rhn/manager/systems/details/formulas?sid=\" +\n+      serverId +\n+      \"'><i class='fa fa-pencil-square-o'></i>\" +\n+      t(\"Configuration\") +\n+      \"</a></li>\\n\";\n+    for (var i in formulaList)\n+      navBar +=\n+        \"<li\" +\n+        (DEPRECATED_unsafeEquals(i, activeId) ? \" class='active'>\" : \">\") +\n+        \"<a href='/rhn/manager/systems/details/formula/\" +\n+        i +\n+        \"?sid=\" +\n+        serverId +\n+        \"'>\" +\n+        capitalize(formulaList[i]) +\n+        \"</a></li>\\n\";\n+    navBar += \"</ul>\";\n+    jQuery(\".spacewalk-content-nav\").append(navBar);\n+  }\n+\n+  SpaRenderer.renderNavigationReact(\n+    <FormulaForm\n+      dataUrl={\"/rhn/manager/api/formulas/form/SERVER/\" + serverId + \"/\" + formulaId}\n+      saveUrl=\"/rhn/manager/api/formulas/save\"\n+      addFormulaNavBar={addFormulaNavBar}\n+      formulaId={formulaId}\n+      systemId={serverId}\n+      getFormulaUrl={function(id) {\n+        return \"/rhn/manager/systems/details/formula/\" + id + \"?sid=\" + serverId;\n+      }}\n+      scope=\"system\"\n+      messageTexts={msgMap}\n+    />,\n+    document.getElementById(renderId)\n+  );\n+};"
  },
  {
    "sha": "5996fa750ee4ee25324e029b57fb2670574d79ec",
    "filename": "web/html/src/manager/minion/index.js",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/index.js",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/index.js",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/index.js?ref=a47023b7ca9950ec0c17163c0a56b66ea589fa8e",
    "patch": "@@ -1,6 +0,0 @@\n-export default {\n-  'minion/config-channels/minion-config-channels': () => import('./config-channels/minion-config-channels'),\n-  'minion/formula/minion-formula': () => import('./formula/minion-formula.renderer'),\n-  'minion/formula/minion-formula-selection': () => import('./formula/minion-formula-selection.renderer'),\n-  'minion/packages/package-states': () => import('./packages/package-states.renderer')\n-}"
  },
  {
    "sha": "5a7b09ae087ecd2140db0a508066bb56a619529e",
    "filename": "web/html/src/manager/minion/index.ts",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/index.ts",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/index.ts",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/index.ts?ref=81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22",
    "patch": "@@ -0,0 +1,6 @@\n+export default {\n+  \"minion/config-channels/minion-config-channels\": () => import(\"./config-channels/minion-config-channels\"),\n+  \"minion/formula/minion-formula\": () => import(\"./formula/minion-formula.renderer\"),\n+  \"minion/formula/minion-formula-selection\": () => import(\"./formula/minion-formula-selection.renderer\"),\n+  \"minion/packages/package-states\": () => import(\"./packages/package-states.renderer\"),\n+};"
  },
  {
    "sha": "535a3f2265005da82a23157ebf55497c3250b23e",
    "filename": "web/html/src/manager/minion/packages/package-states.renderer.js",
    "status": "removed",
    "additions": 0,
    "deletions": 16,
    "changes": 16,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/packages/package-states.renderer.js",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/packages/package-states.renderer.js",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/packages/package-states.renderer.js?ref=a47023b7ca9950ec0c17163c0a56b66ea589fa8e",
    "patch": "@@ -1,16 +0,0 @@\n-import * as React from 'react';\n-import PackageStates from './package-states';\n-import SpaRenderer from \"core/spa/spa-renderer\";\n-import {MessagesContainer} from \"components/toastr/toastr\";\n-\n-export const renderer = (id, {serverId}) => {\n-  SpaRenderer.renderNavigationReact(\n-    <>\n-      <MessagesContainer/>\n-      <PackageStates\n-        serverId={serverId}\n-      />\n-    </>,\n-    document.getElementById(id)\n-  );\n-};"
  },
  {
    "sha": "fc0eb0654152f2eeedaa86a56ca76636ee4eb725",
    "filename": "web/html/src/manager/minion/packages/package-states.renderer.tsx",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/packages/package-states.renderer.tsx",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/packages/package-states.renderer.tsx",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/packages/package-states.renderer.tsx?ref=81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22",
    "patch": "@@ -0,0 +1,18 @@\n+import * as React from \"react\";\n+import PackageStates from \"./package-states\";\n+import SpaRenderer from \"core/spa/spa-renderer\";\n+import { MessagesContainer } from \"components/toastr/toastr\";\n+\n+type RendererProps = {\n+  serverId?: any;\n+};\n+\n+export const renderer = (id: string, { serverId }: RendererProps = {}) => {\n+  SpaRenderer.renderNavigationReact(\n+    <>\n+      <MessagesContainer />\n+      <PackageStates serverId={serverId} />\n+    </>,\n+    document.getElementById(id)\n+  );\n+};"
  },
  {
    "sha": "dd398041e6b1c51b2b83a2c3112eb82316ee62a0",
    "filename": "web/html/src/manager/minion/packages/package-states.tsx",
    "status": "renamed",
    "additions": 136,
    "deletions": 128,
    "changes": 264,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/packages/package-states.tsx",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/packages/package-states.tsx",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/packages/package-states.tsx?ref=81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22",
    "patch": "@@ -1,42 +1,33 @@\n-// @flow\n-import { hot } from 'react-hot-loader/root';\n-import * as React from 'react';\n-import {useEffect, useState, useRef} from \"react\";\n-import {useImmer} from 'use-immer';\n-import {AsyncButton} from \"components/buttons\";\n-import {InnerPanel} from 'components/panels/InnerPanel';\n-import {TextField} from \"components/fields\";\n-import {Messages} from \"components/messages\";\n+import { hot } from \"react-hot-loader/root\";\n+import * as React from \"react\";\n+import { useEffect, useState, useRef } from \"react\";\n+import { useImmer } from \"use-immer\";\n+import { AsyncButton } from \"components/buttons\";\n+import { InnerPanel } from \"components/panels/InnerPanel\";\n+import { TextField } from \"components/fields\";\n+import { Messages } from \"components/messages\";\n import withPageWrapper from \"components/general/with-page-wrapper\";\n-import {showErrorToastr} from \"components/toastr/toastr\";\n+import { showErrorToastr } from \"components/toastr/toastr\";\n import usePackageStatesApi from \"./use-package-states.api\";\n-import type {\n-  ChangesMapObject,\n-  PackagesObject,\n-  Package,\n-  OptionalValue\n-} from \"./package.type\";\n+import { ChangesMapObject, PackagesObject, Package, OptionalValue } from \"./package.type\";\n import * as packageHelpers from \"./package-utils\";\n \n type PropsType = { serverId: string };\n type ViewType = \"search\" | \"system\" | \"changes\";\n \n-const PackageStates = ({serverId}: PropsType) => {\n+const PackageStates = ({ serverId }: PropsType) => {\n   const [filter, setFilter] = useState<string>(\"\");\n-  const [view, setView] = useState<ViewType>(\"system\");\n+  const [view, setView] = useState<ViewType | \"\">(\"system\");\n   const [tableRows, setTableRows] = useState<Array<PackagesObject>>([]);\n   const [changed, setChanged] = useImmer<ChangesMapObject>({});\n-  const searchRef = useRef<AsyncButton>();\n+  const searchRef = useRef<AsyncButton | null>(null);\n \n-  const {\n-    messages, onActionPackageStatesApi, packageStates, searchResults\n-  } = usePackageStatesApi();\n+  const { messages, onActionPackageStatesApi, packageStates, searchResults } = usePackageStatesApi();\n \n   useEffect(() => {\n-    onActionPackageStatesApi({type: \"GetServerPackages\", serverId})\n-      .catch((error => {\n-        showErrorToastr(error, {autoHide: false});\n-      }));\n+    onActionPackageStatesApi({ type: \"GetServerPackages\", serverId }).catch(error => {\n+      showErrorToastr(error, { autoHide: false });\n+    });\n   }, []);\n \n   useEffect(() => {\n@@ -47,14 +38,20 @@ const PackageStates = ({serverId}: PropsType) => {\n     if (view === \"search\") {\n       triggerSearch();\n     }\n-  }, [view])\n+  }, [view]);\n \n-  function addChanged(original: Package, newPackageStateId: OptionalValue, newVersionConstraintId: OptionalValue): void {\n+  function addChanged(\n+    original: Package,\n+    newPackageStateId: OptionalValue,\n+    newVersionConstraintId: OptionalValue\n+  ): void {\n     const key = packageHelpers.packageStateKey(original);\n     const currentState = changed[key];\n-    if (currentState !== undefined\n-      && newPackageStateId === currentState.original.packageStateId\n-      && newVersionConstraintId === currentState.original.versionConstraintId) {\n+    if (\n+      currentState !== undefined &&\n+      newPackageStateId === currentState.original.packageStateId &&\n+      newVersionConstraintId === currentState.original.versionConstraintId\n+    ) {\n       setChanged((draft: ChangesMapObject) => {\n         delete draft[key];\n       });\n@@ -69,90 +66,88 @@ const PackageStates = ({serverId}: PropsType) => {\n             release: original.release,\n             name: original.name,\n             packageStateId: newPackageStateId,\n-            versionConstraintId: newVersionConstraintId\n-          }\n+            versionConstraintId: newVersionConstraintId,\n+          },\n         };\n       });\n     }\n   }\n \n   const applyPackageState = () => {\n-    onActionPackageStatesApi({type: \"Apply\", serverId})\n+    onActionPackageStatesApi({ type: \"Apply\", serverId })\n       .then(data => {\n         console.log(\"apply action queued:\" + data);\n-      }).catch(error => {\n-      showErrorToastr(error, {autoHide: false});\n-    });\n+      })\n+      .catch(error => {\n+        showErrorToastr(error, { autoHide: false });\n+      });\n   };\n \n   const save = (): Promise<any> => {\n-    return onActionPackageStatesApi({type: \"Save\", serverId, changed})\n+    return onActionPackageStatesApi({ type: \"Save\", serverId, changed })\n       .then(() => {\n         setView(\"system\");\n         setChanged(() => {\n           return {};\n         });\n-      }).catch(error => {\n-        showErrorToastr(error, {autoHide: false});\n+      })\n+      .catch(error => {\n+        showErrorToastr(error, { autoHide: false });\n       });\n   };\n \n-  const handleUndo = (packageState) => {\n+  const handleUndo = packageState => {\n     return (): void => {\n       setChanged((draft: ChangesMapObject) => {\n         const key = packageHelpers.packageStateKey(packageState);\n         delete draft[key];\n       });\n-    }\n+    };\n   };\n \n-  const handleStateChangeEvent = (original) => {\n+  const handleStateChangeEvent = original => {\n     return (event): void => {\n       const newPackageStateId: OptionalValue = packageHelpers.selectValue2PackageState(parseInt(event.target.value));\n       const newPackageConstraintId: OptionalValue =\n-        (newPackageStateId === packageHelpers.INSTALLED ? packageHelpers.LATEST : original.versionConstraintId);\n-      addChanged(\n-        original,\n-        newPackageStateId,\n-        newPackageConstraintId\n-      );\n-    }\n+        newPackageStateId === packageHelpers.INSTALLED ? packageHelpers.LATEST : original.versionConstraintId;\n+      addChanged(original, newPackageStateId, newPackageConstraintId);\n+    };\n   };\n \n-  const handleConstraintChangeEvent = (original) => {\n+  const handleConstraintChangeEvent = original => {\n     return (event): void => {\n-      const newPackageConstraintId: OptionalValue = packageHelpers.selectValue2VersionConstraints(parseInt(event.target.value));\n+      const newPackageConstraintId: OptionalValue = packageHelpers.selectValue2VersionConstraints(\n+        parseInt(event.target.value)\n+      );\n       const key = packageHelpers.packageStateKey(original);\n       const currentState: PackagesObject = changed[key];\n       const currentPackageStateId: OptionalValue =\n-        (currentState !== undefined && typeof currentState.value === 'object') ? currentState.value.packageStateId : original.packageStateId;\n-      addChanged(\n-        original,\n-        currentPackageStateId,\n-        newPackageConstraintId\n-      );\n-    }\n+        currentState !== undefined && typeof currentState.value === \"object\"\n+          ? currentState.value.packageStateId\n+          : original.packageStateId;\n+      addChanged(original, currentPackageStateId, newPackageConstraintId);\n+    };\n   };\n \n   const onSearchChange = (event): void => {\n     setFilter(event.target.value);\n   };\n \n   const triggerSearch = (): void => {\n-    searchRef.current.trigger()\n+    searchRef.current?.trigger();\n   };\n \n   const search = (): Promise<any> => {\n-    return onActionPackageStatesApi({type: \"Search\", serverId, filter})\n+    return onActionPackageStatesApi({ type: \"Search\", serverId, filter })\n       .then(() => {\n         setView(\"search\");\n       })\n       .catch(error => {\n-        showErrorToastr(error, {autoHide: false});\n+        showErrorToastr(error, { autoHide: false });\n       });\n   };\n \n-  const changeTabUrl = (currentTab) => {\n+  const changeTabUrl = currentTab => {\n     setView(currentTab);\n   };\n \n@@ -185,9 +180,9 @@ const PackageStates = ({serverId}: PropsType) => {\n     } else if (view === \"changes\") {\n       for (const state in changed) {\n         if (changed.hasOwnProperty(state)) {\n-          rows.push(changed[state])\n+          rows.push(changed[state]);\n         } else {\n-          console.log(\"Cannot display emtpy object.\")\n+          console.log(\"Cannot display emtpy object.\");\n         }\n       }\n     }\n@@ -196,145 +191,158 @@ const PackageStates = ({serverId}: PropsType) => {\n \n   const isApplyButtonDisabled = Object.keys(changed).length > 0;\n   const buttons = [\n-    <AsyncButton id=\"save\" action={save} text={t(\"Save\")} disabled={!isApplyButtonDisabled}\n-                 key={\"save\"}/>,\n-    <span {...(isApplyButtonDisabled) ? {title: t(\"Please save all your changes before applying!\")} : {}} key=\"apply\">\n+    <AsyncButton id=\"save\" action={save} text={t(\"Save\")} disabled={!isApplyButtonDisabled} key={\"save\"} />,\n+    <span {...(isApplyButtonDisabled ? { title: t(\"Please save all your changes before applying!\") } : {})} key=\"apply\">\n       <AsyncButton id=\"apply\" action={applyPackageState} text={t(\"Apply changes\")} disabled={isApplyButtonDisabled} />\n-    </span>\n+    </span>,\n   ];\n \n   const headerTabs = () => {\n     const length = Object.keys(changed).length;\n-    let changesText = t('Changes');\n+    let changesText = t(\"Changes\");\n     if (length === 1) {\n-      changesText = t('1 Change');\n+      changesText = t(\"1 Change\");\n     } else if (length > 1) {\n-      changesText = length + ' ' + t('Changes');\n+      changesText = length + \" \" + t(\"Changes\");\n     }\n \n     return (\n       <div className=\"spacewalk-content-nav\" id=\"package-states-tabs\">\n         <ul className=\"nav nav-tabs\">\n-          <li className={view === 'search' || view === '' ? 'active' : ''}>\n-            <a href='#search' onClick={() => changeTabUrl('search')}>{t('Search')}</a>\n+          <li className={view === \"search\" || view === \"\" ? \"active\" : \"\"}>\n+            <a href=\"#search\" onClick={() => changeTabUrl(\"search\")}>\n+              {t(\"Search\")}\n+            </a>\n           </li>\n-          <li className={view === 'changes' ? 'active' : ''}>\n-            <a href='#changes' onClick={() => changeTabUrl('changes')}>{changesText}</a>\n+          <li className={view === \"changes\" ? \"active\" : \"\"}>\n+            <a href=\"#changes\" onClick={() => changeTabUrl(\"changes\")}>\n+              {changesText}\n+            </a>\n           </li>\n-          <li className={view === 'system' ? 'active' : ''}>\n-            <a href='#system' onClick={() => changeTabUrl('system')}>{t('System')}</a>\n+          <li className={view === \"system\" ? \"active\" : \"\"}>\n+            <a href=\"#system\" onClick={() => changeTabUrl(\"system\")}>\n+              {t(\"System\")}\n+            </a>\n           </li>\n         </ul>\n-      </div>)\n+      </div>\n+    );\n   };\n \n   const renderSearchBar = () => {\n     return (\n       <div className={\"row\"} id={\"search-row\"}>\n         <div className={\"col-md-5\"}>\n-          <div style={{paddingBottom: 0.7 + 'em'}}>\n+          <div style={{ paddingBottom: 0.7 + \"em\" }}>\n             <div className=\"input-group\">\n-              <TextField id=\"package-search\" value={filter} placeholder={t(\"Search package\")}\n-                         onChange={onSearchChange} onPressEnter={triggerSearch} className=\"form-control\"/>\n+              <TextField\n+                id=\"package-search\"\n+                value={filter}\n+                placeholder={t(\"Search package\")}\n+                onChange={onSearchChange}\n+                onPressEnter={triggerSearch}\n+                className=\"form-control\"\n+              />\n               <span className=\"input-group-btn\">\n-                <AsyncButton id=\"search\" text={t(\"Search\")} action={search} ref={searchRef} key={\"searchButton\"}/>\n+                <AsyncButton id=\"search\" text={t(\"Search\")} action={search} ref={searchRef} key={\"searchButton\"} />\n               </span>\n             </div>\n           </div>\n         </div>\n       </div>\n-    )\n+    );\n   };\n \n   const tableBody = () => {\n-    const elements = [];\n+    const elements: React.ReactNode[] = [];\n     for (const row of tableRows) {\n       const currentState = row.value !== undefined ? row.value : row.original;\n \n       elements.push(\n-        <tr key={currentState.name} id={currentState.name + \"-row\"}\n-            className={row.value !== undefined ? \"warning\" : \"\"}>\n+        <tr\n+          key={currentState.name}\n+          id={currentState.name + \"-row\"}\n+          className={row.value !== undefined ? \"warning\" : \"\"}\n+        >\n           <td key={currentState.name}>{t(currentState.name)}</td>\n-          <td>\n-            {renderState(row, currentState)}\n-          </td>\n+          <td>{renderState(row, currentState)}</td>\n         </tr>\n       );\n     }\n     return (\n       <tbody className=\"table-content\">\n-      {elements.length > 0 ? elements :\n-        <tr>\n-          <td colSpan=\"2\">\n-            {\n-              view === \"changes\"\n-                ? t(\"No current changes.\")\n-                : t(\"No package states.\")\n-            }\n-          </td>\n-        </tr>\n-      }\n+        {elements.length > 0 ? (\n+          elements\n+        ) : (\n+          <tr>\n+            <td colSpan={2}>{view === \"changes\" ? t(\"No current changes.\") : t(\"No package states.\")}</td>\n+          </tr>\n+        )}\n       </tbody>\n     );\n   };\n \n   const renderState = (row, currentState) => {\n-    let versionConstraintSelect = null;\n-    let undoButton = null;\n+    let versionConstraintSelect: React.ReactNode = null;\n+    let undoButton: React.ReactNode = null;\n \n     if (currentState.packageStateId === packageHelpers.INSTALLED) {\n-      versionConstraintSelect =\n-        <select id={currentState.name + \"-version-constraint\"}\n-                className=\"form-control\"\n-                value={packageHelpers.versionConstraints2selectValue(currentState.versionConstraintId)}\n-                onChange={handleConstraintChangeEvent(row.original)}>\n+      versionConstraintSelect = (\n+        <select\n+          id={currentState.name + \"-version-constraint\"}\n+          className=\"form-control\"\n+          value={packageHelpers.versionConstraints2selectValue(currentState.versionConstraintId)}\n+          onChange={handleConstraintChangeEvent(row.original)}\n+        >\n           <option value=\"0\">{t(\"Latest\")}</option>\n           <option value=\"1\">{t(\"Any\")}</option>\n-        </select>;\n+        </select>\n+      );\n     }\n \n     const key = packageHelpers.packageStateKey(currentState);\n     if (changed[key] !== undefined) {\n-      undoButton = <button id={currentState.name + \"-undo\"} className=\"btn btn-default\"\n-                           onClick={handleUndo(row.original)}>{t(\"Undo\")}</button>\n+      undoButton = (\n+        <button id={currentState.name + \"-undo\"} className=\"btn btn-default\" onClick={handleUndo(row.original)}>\n+          {t(\"Undo\")}\n+        </button>\n+      );\n     }\n \n     return (\n       <div className=\"row\">\n         <div className={\"col-md-3\"}>\n-          <select key={currentState.name}\n-                  id={currentState.name + \"-pkg-state\"}\n-                  className=\"form-control\"\n-                  value={packageHelpers.packageState2selectValue(currentState.packageStateId)}\n-                  onChange={handleStateChangeEvent(row.original)}>\n+          <select\n+            key={currentState.name}\n+            id={currentState.name + \"-pkg-state\"}\n+            className=\"form-control\"\n+            value={packageHelpers.packageState2selectValue(currentState.packageStateId)}\n+            onChange={handleStateChangeEvent(row.original)}\n+          >\n             <option value=\"-1\">{t(\"Unmanaged\")}</option>\n             <option value=\"0\">{t(\"Installed\")}</option>\n             <option value=\"1\">{t(\"Removed\")}</option>\n           </select>\n         </div>\n-        <div className={\"col-md-3\"}>\n-          {versionConstraintSelect}\n-        </div>\n-        <div className={\"col-md-3\"}>\n-          {undoButton}\n-        </div>\n+        <div className={\"col-md-3\"}>{versionConstraintSelect}</div>\n+        <div className={\"col-md-3\"}>{undoButton}</div>\n       </div>\n-    )\n+    );\n   };\n \n   return (\n     <div>\n-      {messages ? <Messages items={messages}/> : null}\n+      {messages ? <Messages items={messages} /> : null}\n       <InnerPanel title={t(\"Package States\")} icon=\"spacewalk-icon-package-add\" buttons={buttons}>\n         {headerTabs()}\n         {view === \"search\" ? renderSearchBar() : null}\n         <div className=\"row\">\n           <table className=\"table table-striped\">\n             <thead>\n-            <tr>\n-              <th>{t(\"Package Name\")}</th>\n-              <th>{t(\"State\")}</th>\n-            </tr>\n+              <tr>\n+                <th>{t(\"Package Name\")}</th>\n+                <th>{t(\"State\")}</th>\n+              </tr>\n             </thead>\n             {tableBody()}\n           </table>",
    "previous_filename": "web/html/src/manager/minion/packages/package-states.js"
  },
  {
    "sha": "4d4c8f88017c92e3cfc1b029762aa3571b9d42ca",
    "filename": "web/html/src/manager/minion/packages/package-utils.ts",
    "status": "renamed",
    "additions": 12,
    "deletions": 12,
    "changes": 24,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/packages/package-utils.ts",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/packages/package-utils.ts",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/packages/package-utils.ts?ref=81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22",
    "patch": "@@ -1,13 +1,12 @@\n-//@flow\n-import type {Package, OptionalValue} from \"./package.type\";\n+import { Package, OptionalValue } from \"./package.type\";\n \n-export const UNMANAGED = {};\n-export const INSTALLED: OptionalValue = {value: 0};\n-export const REMOVED: OptionalValue = {value: 1};\n-export const PURGED: OptionalValue = {value: 2};\n+export const UNMANAGED: any = {};\n+export const INSTALLED: OptionalValue = { value: 0 };\n+export const REMOVED: OptionalValue = { value: 1 };\n+export const PURGED: OptionalValue = { value: 2 };\n \n-export const LATEST: OptionalValue = {value: 0};\n-export const ANY: OptionalValue = {value: 1};\n+export const LATEST: OptionalValue = { value: 0 };\n+export const ANY: OptionalValue = { value: 1 };\n \n export function selectValue2PackageState(value: number): OptionalValue {\n   switch (value) {\n@@ -37,7 +36,7 @@ export function normalizePackageState(ps: OptionalValue): OptionalValue {\n }\n \n export function normalizePackageVersionConstraint(vc: OptionalValue): OptionalValue {\n-  return selectValue2VersionConstraints(versionConstraints2selectValue(vc))\n+  return selectValue2VersionConstraints(versionConstraints2selectValue(vc));\n }\n \n export function selectValue2VersionConstraints(value: number): OptionalValue {\n@@ -52,8 +51,9 @@ export function selectValue2VersionConstraints(value: number): OptionalValue {\n }\n \n export function packageStateKey(packageState: Package): string {\n-  const version: string = (typeof packageState.version === \"string\") ? packageState.version : \"null\";\n-  const epoch: string = (typeof packageState.epoch === \"string\") ? packageState.epoch : \"null\";\n-  const release: string = (typeof packageState.release === \"string\" && packageState.release) ? packageState.release : \"null\";\n+  const version: string = typeof packageState.version === \"string\" ? packageState.version : \"null\";\n+  const epoch: string = typeof packageState.epoch === \"string\" ? packageState.epoch : \"null\";\n+  const release: string =\n+    typeof packageState.release === \"string\" && packageState.release ? packageState.release : \"null\";\n   return packageState.name + version + release + epoch + packageState.arch;\n }",
    "previous_filename": "web/html/src/manager/minion/packages/package-utils.js"
  },
  {
    "sha": "a11f2fc0bbe28a0c8d57f0b52f9fa79ab12d7097",
    "filename": "web/html/src/manager/minion/packages/package.type.js",
    "status": "removed",
    "additions": 0,
    "deletions": 24,
    "changes": 24,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/packages/package.type.js",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/a47023b7ca9950ec0c17163c0a56b66ea589fa8e/web/html/src/manager/minion/packages/package.type.js",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/packages/package.type.js?ref=a47023b7ca9950ec0c17163c0a56b66ea589fa8e",
    "patch": "@@ -1,24 +0,0 @@\n-// @flow\n-\n-export type OptionalValue = {\n-  value?: number,\n-}\n-\n-export type Package = {\n-  arch: string,\n-  name: string,\n-  packageStateId: OptionalValue,\n-  versionConstraintId: OptionalValue,\n-  epoch?: string,\n-  release?: string,\n-  version?: string,\n-}\n-\n-export type PackagesObject = {\n-  original: Package,\n-  value?: Package,\n-}\n-\n-export type ChangesMapObject = {\n-  [key: string]: PackagesObject\n-}"
  },
  {
    "sha": "a07cc4c96e582eb5d1dd44ab63accb607343fa92",
    "filename": "web/html/src/manager/minion/packages/package.type.ts",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/packages/package.type.ts",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/packages/package.type.ts",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/packages/package.type.ts?ref=81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22",
    "patch": "@@ -0,0 +1,22 @@\n+export type OptionalValue = {\n+  value?: number;\n+};\n+\n+export type Package = {\n+  arch: string;\n+  name: string;\n+  packageStateId: OptionalValue;\n+  versionConstraintId: OptionalValue;\n+  epoch?: string;\n+  release?: string;\n+  version?: string;\n+};\n+\n+export type PackagesObject = {\n+  original: Package;\n+  value?: Package;\n+};\n+\n+export type ChangesMapObject = {\n+  [key: string]: PackagesObject;\n+};"
  },
  {
    "sha": "1ae9f96fbbecafcd9d785d60e7d4078c8a0a7f15",
    "filename": "web/html/src/manager/minion/packages/use-package-states.api.tsx",
    "status": "renamed",
    "additions": 58,
    "deletions": 59,
    "changes": 117,
    "blob_url": "https://github.com/uyuni-project/uyuni/blob/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/packages/use-package-states.api.tsx",
    "raw_url": "https://github.com/uyuni-project/uyuni/raw/81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22/web/html/src/manager/minion/packages/use-package-states.api.tsx",
    "contents_url": "https://api.github.com/repos/uyuni-project/uyuni/contents/web/html/src/manager/minion/packages/use-package-states.api.tsx?ref=81c7c39e2a2bd577ec6e9737cbd25f5d68ed2d22",
    "patch": "@@ -1,91 +1,89 @@\n-//@flow\n-import Network from 'utils/network';\n-import * as React from 'react';\n-import {useState} from \"react\";\n-import {Utils as MessagesUtils} from \"components/messages\";\n-import type {\n-  ChangesMapObject,\n-  Package,\n-} from \"./package.type\";\n+import Network from \"utils/network\";\n+import * as React from \"react\";\n+import { useState } from \"react\";\n+import { MessageType, Utils as MessagesUtils } from \"components/messages\";\n+import { ChangesMapObject, Package } from \"./package.type\";\n import * as packageHelpers from \"./package-utils\";\n \n type ActionType =\n-  | {type: \"Save\", serverId: string, changed: ChangesMapObject}\n-  | {type: \"Apply\", serverId: string}\n-  | {type: \"GetServerPackages\", serverId: string}\n-  | {type: \"Search\", serverId: string, filter: string}\n+  | { type: \"Save\"; serverId: string; changed: ChangesMapObject }\n+  | { type: \"Apply\"; serverId: string }\n+  | { type: \"GetServerPackages\"; serverId: string }\n+  | { type: \"Search\"; serverId: string; filter: string };\n \n const usePackageStatesApi = () => {\n-  const [messages, setMessages] = useState(\"\");\n+  const [messages, setMessages] = useState<MessageType[]>([]);\n   const [packageStates, setPackageStates] = useState<Array<Package>>([]);\n   const [searchResults, setSearchResults] = useState<Array<Package>>([]);\n \n   function onActionPackageStatesApi(action: ActionType): Promise<any> {\n     switch (action.type) {\n-      case 'Save': {\n-        const toSave = [];\n+      case \"Save\": {\n+        const toSave: any[] = [];\n         const changed = action.changed;\n         for (const state in changed) {\n-          if (changed.hasOwnProperty(state) && typeof changed[state].value === 'object') {\n+          if (changed.hasOwnProperty(state) && typeof changed[state].value === \"object\") {\n             toSave.push(changed[state].value);\n           } else {\n-            console.log(\"Cannot save empty object.\")\n+            console.log(\"Cannot save empty object.\");\n           }\n         }\n         return Network.post(\n           \"/rhn/manager/api/states/packages/save\",\n           JSON.stringify({\n             sid: action.serverId,\n-            packageStates: toSave\n+            packageStates: toSave,\n           }),\n           \"application/json\"\n-        ).promise\n-          .then((data: Array<Package>) => {\n-              updateAfterSave(data, changed);\n-              setMessages(MessagesUtils.info(t('Package states have been saved.')));\n-            }\n-          )\n+        ).promise.then((data: Array<Package>) => {\n+          updateAfterSave(data, changed);\n+          setMessages(MessagesUtils.info(t(\"Package states have been saved.\")));\n+        });\n       }\n-      case 'Apply': {\n+      case \"Apply\": {\n         return Network.post(\n           \"/rhn/manager/api/states/apply\",\n           JSON.stringify({\n             id: action.serverId,\n             type: \"SERVER\",\n-            states: [\"packages\"]\n+            states: [\"packages\"],\n           }),\n           \"application/json\"\n-        ).promise\n-          .then((data) => {\n-            setMessages(MessagesUtils.info(<span>{t(\"Applying the packages states has been \")}\n-              <a href={\"/rhn/systems/details/history/Event.do?sid=\" + action.serverId + \"&aid=\" + data}>{t(\"scheduled\")}</a>\n-              </span>));\n-          });\n+        ).promise.then(data => {\n+          setMessages(\n+            MessagesUtils.info(\n+              <span>\n+                {t(\"Applying the packages states has been \")}\n+                <a href={\"/rhn/systems/details/history/Event.do?sid=\" + action.serverId + \"&aid=\" + data}>\n+                  {t(\"scheduled\")}\n+                </a>\n+              </span>\n+            )\n+          );\n+        });\n       }\n-      case 'GetServerPackages': {\n-        return Network.get(\n-          \"/rhn/manager/api/states/packages?sid=\" + action.serverId\n-        ).promise\n-          .then((data: Array<Package>) => {\n+      case \"GetServerPackages\": {\n+        return Network.get(\"/rhn/manager/api/states/packages?sid=\" + action.serverId).promise.then(\n+          (data: Array<Package>) => {\n             updateAfterServerGetPackages(data);\n-          });\n+          }\n+        );\n       }\n-      case 'Search': {\n+      case \"Search\": {\n         return Network.get(\n           \"/rhn/manager/api/states/packages/match?sid=\" + action.serverId + \"&target=\" + action.filter\n-        ).promise\n-          .then((data: Array<Package>) => {\n-            updateAfterSearch(data);\n-            return null;\n-          })\n+        ).promise.then((data: Array<Package>) => {\n+          updateAfterSearch(data);\n+          return null;\n+        });\n       }\n       default:\n         return Promise.reject();\n     }\n   }\n \n   function updateAfterSearch(serverSearchResults: Array<Package>): void {\n-    const newSearchResults = serverSearchResults.map((state) => {\n+    const newSearchResults = serverSearchResults.map(state => {\n       state.packageStateId = packageHelpers.normalizePackageState(state.packageStateId);\n       state.versionConstraintId = packageHelpers.normalizePackageVersionConstraint(state.versionConstraintId);\n       return state;\n@@ -107,24 +105,25 @@ const usePackageStatesApi = () => {\n       state.packageStateId = packageHelpers.normalizePackageState(state.packageStateId);\n       return state;\n     });\n-    const newSearchResults =\n-      searchResults.map<Package>((state: Package) => {\n-        const key = packageHelpers.packageStateKey(state);\n-        const tempchanged = changed[key];\n-        if (tempchanged !== undefined && typeof tempchanged.value === 'object') {\n-          return tempchanged.value;\n-        } else {\n-          return state;\n-        }\n-      });\n+    const newSearchResults = searchResults.map<Package>((state: Package) => {\n+      const key = packageHelpers.packageStateKey(state);\n+      const tempchanged = changed[key];\n+      if (tempchanged !== undefined && typeof tempchanged.value === \"object\") {\n+        return tempchanged.value;\n+      } else {\n+        return state;\n+      }\n+    });\n     setPackageStates(newPackageStates);\n     setSearchResults(newSearchResults);\n   }\n \n   return {\n-    messages: messages, packageStates, searchResults, onActionPackageStatesApi\n-  }\n-\n+    messages: messages,\n+    packageStates,\n+    searchResults,\n+    onActionPackageStatesApi,\n+  };\n };\n \n export default usePackageStatesApi;",
    "previous_filename": "web/html/src/manager/minion/packages/use-package-states.api.js"
  }
]
