[
  {
    "sha": "ae57b89263705a734d1c89e33caf4d859a2aa85e",
    "filename": "app/src/main/java/it/niedermann/owncloud/notes/accountswitcher/AccountSwitcherViewHolder.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/accountswitcher/AccountSwitcherViewHolder.java",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/accountswitcher/AccountSwitcherViewHolder.java",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/java/it/niedermann/owncloud/notes/accountswitcher/AccountSwitcherViewHolder.java?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -34,6 +34,6 @@ public void bind(@NonNull LocalAccount localAccount, @NonNull Consumer<LocalAcco\n                 .apply(RequestOptions.circleCropTransform())\n                 .into(binding.accountItemAvatar);\n         itemView.setOnClickListener((v) -> onAccountClick.accept(localAccount));\n-        binding.delete.setVisibility(View.GONE);\n+        binding.accountContextMenu.setVisibility(View.GONE);\n     }\n }"
  },
  {
    "sha": "8d04e34ea1fa6f9a807f08d185fbe588e32087a2",
    "filename": "app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountAdapter.java",
    "status": "modified",
    "additions": 20,
    "deletions": 11,
    "changes": 31,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountAdapter.java",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountAdapter.java",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountAdapter.java?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -1,6 +1,7 @@\n package it.niedermann.owncloud.notes.manageaccounts;\n \n import android.view.LayoutInflater;\n+import android.view.MenuInflater;\n import android.view.ViewGroup;\n \n import androidx.annotation.NonNull;\n@@ -12,6 +13,7 @@\n import java.util.List;\n \n import it.niedermann.owncloud.notes.R;\n+import it.niedermann.owncloud.notes.persistence.NotesDatabase;\n import it.niedermann.owncloud.notes.shared.model.LocalAccount;\n \n public class ManageAccountAdapter extends RecyclerView.Adapter<ManageAccountViewHolder> {\n@@ -22,12 +24,21 @@\n     private final List<LocalAccount> localAccounts = new ArrayList<>();\n     @NonNull\n     private final Consumer<LocalAccount> onAccountClick;\n-    @Nullable\n+    @NonNull\n     private final Consumer<LocalAccount> onAccountDelete;\n+    @NonNull\n+    Consumer<LocalAccount> onChangeNotesPath;\n+    @NonNull\n+    Consumer<LocalAccount> onChangeFileSuffix;\n \n-    public ManageAccountAdapter(@NonNull Consumer<LocalAccount> onAccountClick, @Nullable Consumer<LocalAccount> onAccountDelete) {\n+    public ManageAccountAdapter(@NonNull Consumer<LocalAccount> onAccountClick,\n+                                @NonNull Consumer<LocalAccount> onAccountDelete,\n+                                @NonNull Consumer<LocalAccount> onChangeNotesPath,\n+                                @NonNull Consumer<LocalAccount> onChangeFileSuffix) {\n         this.onAccountClick = onAccountClick;\n         this.onAccountDelete = onAccountDelete;\n+        this.onChangeNotesPath = onChangeNotesPath;\n+        this.onChangeFileSuffix = onChangeFileSuffix;\n         setHasStableIds(true);\n     }\n \n@@ -49,17 +60,15 @@ public void onBindViewHolder(@NonNull ManageAccountViewHolder holder, int positi\n             setCurrentLocalAccount(localAccountClicked);\n             onAccountClick.accept(localAccountClicked);\n         }, (localAccountToDelete -> {\n-            if (onAccountDelete != null) {\n-                for (int i = 0; i < localAccounts.size(); i++) {\n-                    if (localAccounts.get(i).getId() == localAccountToDelete.getId()) {\n-                        localAccounts.remove(i);\n-                        notifyItemRemoved(i);\n-                        break;\n-                    }\n+            for (int i = 0; i < localAccounts.size(); i++) {\n+                if (localAccounts.get(i).getId() == localAccountToDelete.getId()) {\n+                    localAccounts.remove(i);\n+                    notifyItemRemoved(i);\n+                    break;\n                 }\n-                onAccountDelete.accept(localAccountToDelete);\n             }\n-        }), currentLocalAccount != null && currentLocalAccount.getId() == localAccount.getId());\n+            onAccountDelete.accept(localAccountToDelete);\n+        }), onChangeNotesPath, onChangeFileSuffix, currentLocalAccount != null && currentLocalAccount.getId() == localAccount.getId());\n     }\n \n     @Override"
  },
  {
    "sha": "910dccc0e8bef413f3ba0af10bd803a3e270cb1e",
    "filename": "app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountViewHolder.java",
    "status": "modified",
    "additions": 42,
    "deletions": 8,
    "changes": 50,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountViewHolder.java",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountViewHolder.java",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountViewHolder.java?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -2,16 +2,23 @@\n \n import android.graphics.drawable.LayerDrawable;\n import android.net.Uri;\n+import android.view.LayoutInflater;\n+import android.view.Menu;\n+import android.view.MenuInflater;\n import android.view.View;\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.appcompat.widget.PopupMenu;\n import androidx.core.util.Consumer;\n import androidx.recyclerview.widget.RecyclerView;\n \n import com.bumptech.glide.Glide;\n import com.bumptech.glide.request.RequestOptions;\n \n+import java.util.Arrays;\n+import java.util.stream.Stream;\n+\n import it.niedermann.nextcloud.sso.glide.SingleSignOnUrl;\n import it.niedermann.owncloud.notes.R;\n import it.niedermann.owncloud.notes.databinding.ItemAccountChooseBinding;\n@@ -23,14 +30,21 @@\n \n public class ManageAccountViewHolder extends RecyclerView.ViewHolder {\n \n-    private ItemAccountChooseBinding binding;\n+    private final ItemAccountChooseBinding binding;\n \n     public ManageAccountViewHolder(@NonNull View itemView) {\n         super(itemView);\n         binding = ItemAccountChooseBinding.bind(itemView);\n     }\n \n-    public void bind(@NonNull LocalAccount localAccount, @NonNull Consumer<LocalAccount> onAccountClick, @Nullable Consumer<LocalAccount> onAccountDelete, boolean isCurrentAccount) {\n+    public void bind(\n+            @NonNull LocalAccount localAccount,\n+            @NonNull Consumer<LocalAccount> onAccountClick,\n+            @NonNull Consumer<LocalAccount> onAccountDelete,\n+            @NonNull Consumer<LocalAccount> onChangeNotesPath,\n+            @NonNull Consumer<LocalAccount> onChangeFileSuffix,\n+            boolean isCurrentAccount\n+    ) {\n         binding.accountName.setText(localAccount.getUserName());\n         binding.accountHost.setText(Uri.parse(localAccount.getUrl()).getHost());\n         Glide.with(itemView.getContext())\n@@ -39,12 +53,32 @@ public void bind(@NonNull LocalAccount localAccount, @NonNull Consumer<LocalAcco\n                 .apply(RequestOptions.circleCropTransform())\n                 .into(binding.accountItemAvatar);\n         itemView.setOnClickListener((v) -> onAccountClick.accept(localAccount));\n-        if (onAccountDelete == null) {\n-            binding.delete.setVisibility(GONE);\n-        } else {\n-            binding.delete.setVisibility(VISIBLE);\n-            binding.delete.setOnClickListener((v) -> onAccountDelete.accept(localAccount));\n-        }\n+        binding.accountContextMenu.setVisibility(VISIBLE);\n+        binding.accountContextMenu.setOnClickListener((v) -> {\n+            final PopupMenu popup = new PopupMenu(itemView.getContext(), v);\n+            popup.inflate(R.menu.menu_account);\n+            if (!localAccount.getPreferredApiVersion().supportsSettings()) {\n+                final Menu menu = popup.getMenu();\n+                Stream.of(\n+                        R.id.notes_path,\n+                        R.id.file_suffix\n+                ).forEach((i) -> menu.removeItem(menu.findItem(i).getItemId()));\n+            }\n+            popup.setOnMenuItemClickListener(item -> {\n+                if (item.getItemId() == R.id.notes_path) {\n+                    onChangeNotesPath.accept(localAccount);\n+                    return true;\n+                } else if (item.getItemId() == R.id.file_suffix) {\n+                    onChangeFileSuffix.accept(localAccount);\n+                    return true;\n+                } else if (item.getItemId() == R.id.delete) {\n+                    onAccountDelete.accept(localAccount);\n+                    return true;\n+                }\n+                return false;\n+            });\n+            popup.show();\n+        });\n         if (isCurrentAccount) {\n             binding.currentAccountIndicator.setVisibility(VISIBLE);\n             applyBrandToLayerDrawable((LayerDrawable) binding.currentAccountIndicator.getDrawable(), R.id.area, localAccount.getColor());"
  },
  {
    "sha": "b6950c85aff3e68bd3fd121549c574d4ca637f6c",
    "filename": "app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountsActivity.java",
    "status": "modified",
    "additions": 141,
    "deletions": 19,
    "changes": 160,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountsActivity.java",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountsActivity.java",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/java/it/niedermann/owncloud/notes/manageaccounts/ManageAccountsActivity.java?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -1,27 +1,49 @@\n package it.niedermann.owncloud.notes.manageaccounts;\n \n import android.os.Bundle;\n+import android.util.TypedValue;\n+import android.view.View;\n+import android.widget.ArrayAdapter;\n+import android.widget.EditText;\n+import android.widget.FrameLayout;\n+import android.widget.Spinner;\n+import android.widget.Toast;\n \n+import androidx.annotation.AttrRes;\n+import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.annotation.Px;\n+import androidx.appcompat.app.AlertDialog;\n import androidx.appcompat.app.AppCompatActivity;\n \n+import com.nextcloud.android.sso.AccountImporter;\n import com.nextcloud.android.sso.exceptions.NextcloudFilesAppAccountNotFoundException;\n import com.nextcloud.android.sso.exceptions.NoCurrentAccountSelectedException;\n import com.nextcloud.android.sso.helper.SingleAccountHelper;\n import com.nextcloud.android.sso.model.SingleSignOnAccount;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n import it.niedermann.owncloud.notes.LockedActivity;\n+import it.niedermann.owncloud.notes.R;\n+import it.niedermann.owncloud.notes.branding.BrandedAlertDialogBuilder;\n import it.niedermann.owncloud.notes.databinding.ActivityManageAccountsBinding;\n-import it.niedermann.owncloud.notes.shared.model.LocalAccount;\n+import it.niedermann.owncloud.notes.exception.ExceptionDialogFragment;\n+import it.niedermann.owncloud.notes.persistence.NotesClient;\n import it.niedermann.owncloud.notes.persistence.NotesDatabase;\n+import it.niedermann.owncloud.notes.shared.model.LocalAccount;\n+import it.niedermann.owncloud.notes.shared.model.ServerSettings;\n+\n+import static android.os.Build.VERSION.SDK_INT;\n+import static android.os.Build.VERSION_CODES.LOLLIPOP_MR1;\n \n public class ManageAccountsActivity extends LockedActivity {\n \n     private ActivityManageAccountsBinding binding;\n     private ManageAccountAdapter adapter;\n     private NotesDatabase db = null;\n+    private final List<LocalAccount> localAccounts = new ArrayList<>();\n \n     @Override\n     public void onCreate(@Nullable Bundle savedInstanceState) {\n@@ -34,27 +56,18 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n \n         db = NotesDatabase.getInstance(this);\n \n-        List<LocalAccount> localAccounts = db.getAccounts();\n+        localAccounts.clear();\n+        localAccounts.addAll(db.getAccounts());\n \n-        adapter = new ManageAccountAdapter((localAccount) -> SingleAccountHelper.setCurrentAccount(getApplicationContext(), localAccount.getAccountName()), (localAccount) -> {\n-            db.deleteAccount(localAccount);\n-            for (LocalAccount temp : localAccounts) {\n-                if (temp.getId() == localAccount.getId()) {\n-                    localAccounts.remove(temp);\n-                    break;\n-                }\n-            }\n-            if (localAccounts.size() > 0) {\n-                SingleAccountHelper.setCurrentAccount(getApplicationContext(), localAccounts.get(0).getAccountName());\n-                adapter.setCurrentLocalAccount(localAccounts.get(0));\n-            } else {\n-                setResult(AppCompatActivity.RESULT_FIRST_USER);\n-                finish();\n-            }\n-        });\n+        adapter = new ManageAccountAdapter(\n+                (localAccount) -> SingleAccountHelper.setCurrentAccount(getApplicationContext(), localAccount.getAccountName()),\n+                this::onAccountDelete,\n+                this::onChangeNotesPath,\n+                this::onChangeFileSuffix\n+        );\n         adapter.setLocalAccounts(localAccounts);\n         try {\n-            SingleSignOnAccount ssoAccount = SingleAccountHelper.getCurrentSingleSignOnAccount(this);\n+            final SingleSignOnAccount ssoAccount = SingleAccountHelper.getCurrentSingleSignOnAccount(this);\n             if (ssoAccount != null) {\n                 adapter.setCurrentLocalAccount(db.getLocalAccountByAccountName(ssoAccount.name));\n             }\n@@ -64,6 +77,115 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n         binding.accounts.setAdapter(adapter);\n     }\n \n+    private void onAccountDelete(@NonNull LocalAccount localAccount) {\n+        db.deleteAccount(localAccount);\n+        for (LocalAccount temp : localAccounts) {\n+            if (temp.getId() == localAccount.getId()) {\n+                localAccounts.remove(temp);\n+                break;\n+            }\n+        }\n+        if (localAccounts.size() > 0) {\n+            SingleAccountHelper.setCurrentAccount(getApplicationContext(), localAccounts.get(0).getAccountName());\n+            adapter.setCurrentLocalAccount(localAccounts.get(0));\n+        } else {\n+            setResult(AppCompatActivity.RESULT_FIRST_USER);\n+            finish();\n+        }\n+    }\n+\n+    private void onChangeNotesPath(@NonNull LocalAccount localAccount) {\n+        final NotesClient client = NotesClient.newInstance(localAccount.getPreferredApiVersion(), getApplicationContext());\n+        final EditText editText = new EditText(this);\n+        editText.setEnabled(false);\n+        final View wrapper = createDialogViewWrapper(editText);\n+        final AlertDialog dialog = new BrandedAlertDialogBuilder(this)\n+                .setTitle(R.string.settings_notes_path)\n+                .setMessage(\"Folder to store your notes in your  Nextcloud\")\n+                .setView(wrapper)\n+                .setNeutralButton(android.R.string.cancel, null)\n+                .setPositiveButton(R.string.action_edit_save, (v, d) -> new Thread(() -> {\n+                    try {\n+                        final ServerSettings newSettings = client.putServerSettings(AccountImporter.getSingleSignOnAccount(this, localAccount.getAccountName()), new ServerSettings(editText.getText().toString(), null));\n+                        Toast.makeText(this, \"New notes path: \" + newSettings.getNotesPath(), Toast.LENGTH_LONG).show();\n+                    } catch (Exception e) {\n+                        ExceptionDialogFragment.newInstance(e).show(getSupportFragmentManager(), ExceptionDialogFragment.class.getSimpleName());\n+                    }\n+                }).start())\n+                .show();\n+        new Thread(() -> {\n+            try {\n+                final ServerSettings oldSettings = client.getServerSettings(AccountImporter.getSingleSignOnAccount(this, localAccount.getAccountName()));\n+                editText.setText(oldSettings.getNotesPath());\n+                editText.setEnabled(true);\n+            } catch (Exception e) {\n+                dialog.dismiss();\n+                ExceptionDialogFragment.newInstance(e).show(getSupportFragmentManager(), ExceptionDialogFragment.class.getSimpleName());\n+            }\n+        }).start();\n+    }\n+\n+    private void onChangeFileSuffix(@NonNull LocalAccount localAccount) {\n+        final NotesClient client = NotesClient.newInstance(localAccount.getPreferredApiVersion(), getApplicationContext());\n+        final Spinner spinner = new Spinner(this);\n+        spinner.setEnabled(false);\n+        final View wrapper = createDialogViewWrapper(spinner);\n+        final ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this, R.array.settings_file_suffixes, android.R.layout.simple_spinner_item);\n+        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n+        spinner.setAdapter(adapter);\n+        final AlertDialog dialog = new BrandedAlertDialogBuilder(this)\n+                .setTitle(R.string.settings_file_suffix)\n+                .setMessage(\"File extension for new notes in your Nextcloud\")\n+                .setView(wrapper)\n+                .setNeutralButton(android.R.string.cancel, null)\n+                .setPositiveButton(\"Save\", (v, d) -> new Thread(() -> {\n+                    try {\n+                        final ServerSettings newSettings = client.putServerSettings(AccountImporter.getSingleSignOnAccount(this, localAccount.getAccountName()), new ServerSettings(null, spinner.getSelectedItem().toString()));\n+                        Toast.makeText(this, \"New file suffix: \" + newSettings.getNotesPath(), Toast.LENGTH_LONG).show();\n+                    } catch (Exception e) {\n+                        ExceptionDialogFragment.newInstance(e).show(getSupportFragmentManager(), ExceptionDialogFragment.class.getSimpleName());\n+                    }\n+                }).start())\n+                .show();\n+        new Thread(() -> {\n+            try {\n+                final ServerSettings oldSettings = client.getServerSettings(AccountImporter.getSingleSignOnAccount(this, localAccount.getAccountName()));\n+                for (int i = 0; i < adapter.getCount(); i++) {\n+                    if (adapter.getItem(i).equals(oldSettings.getFileSuffix())) {\n+                        spinner.setSelection(i);\n+                        break;\n+                    }\n+                }\n+                spinner.setEnabled(true);\n+            } catch (Exception e) {\n+                dialog.dismiss();\n+                ExceptionDialogFragment.newInstance(e).show(getSupportFragmentManager(), ExceptionDialogFragment.class.getSimpleName());\n+            }\n+        }).start();\n+    }\n+\n+    @NonNull\n+    private View createDialogViewWrapper(@NonNull View view) {\n+        final FrameLayout wrapper = new FrameLayout(this);\n+        final int paddingVertical = getResources().getDimensionPixelSize(R.dimen.spacer_1x);\n+        final int paddingHorizontal = SDK_INT >= LOLLIPOP_MR1\n+                ? getDimensionFromAttribute(android.R.attr.dialogPreferredPadding)\n+                : getResources().getDimensionPixelSize(R.dimen.spacer_2x);\n+        wrapper.setPadding(paddingHorizontal, paddingVertical, paddingHorizontal, paddingVertical);\n+        wrapper.addView(view);\n+        return wrapper;\n+    }\n+\n+    @Px\n+    private int getDimensionFromAttribute(@SuppressWarnings(\"SameParameterValue\") @AttrRes int attr) {\n+        final TypedValue typedValue = new TypedValue();\n+        if (getTheme().resolveAttribute(attr, typedValue, true))\n+            return TypedValue.complexToDimensionPixelSize(typedValue.data, getResources().getDisplayMetrics());\n+        else {\n+            return 0;\n+        }\n+    }\n+\n     @Override\n     public void applyBrand(int mainColor, int textColor) {\n         applyBrandToPrimaryToolbar(binding.appBar, binding.toolbar);"
  },
  {
    "sha": "cffce6c912973c128dccc7929d0972d6310648e6",
    "filename": "app/src/main/java/it/niedermann/owncloud/notes/persistence/NotesClient.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/persistence/NotesClient.java",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/persistence/NotesClient.java",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/java/it/niedermann/owncloud/notes/persistence/NotesClient.java?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -29,6 +29,7 @@\n import it.niedermann.owncloud.notes.shared.model.CloudNote;\n import it.niedermann.owncloud.notes.shared.model.ServerResponse.NoteResponse;\n import it.niedermann.owncloud.notes.shared.model.ServerResponse.NotesResponse;\n+import it.niedermann.owncloud.notes.shared.model.ServerSettings;\n \n @SuppressWarnings(\"WeakerAccess\")\n @WorkerThread\n@@ -61,6 +62,8 @@\n     public static final String JSON_CATEGORY = \"category\";\n     public static final String JSON_ETAG = \"etag\";\n     public static final String JSON_MODIFIED = \"modified\";\n+    public static final String JSON_SETTINGS_NOTES_PATH = \"notesPath\";\n+    public static final String JSON_SETTINGS_FILE_SUFFIX = \"fileSuffix\";\n \n     public static final ApiVersion[] SUPPORTED_API_VERSIONS = new ApiVersion[]{\n             new ApiVersion(1, 0),\n@@ -96,6 +99,14 @@ public NotesClient(@NonNull Context appContext) {\n \n     abstract void deleteNote(SingleSignOnAccount ssoAccount, long noteId) throws Exception;\n \n+    public ServerSettings getServerSettings(SingleSignOnAccount ssoAccount) throws Exception {\n+        throw new UnsupportedOperationException(\"Not available in this API version\");\n+    }\n+\n+    public ServerSettings putServerSettings(SingleSignOnAccount ssoAccount, @NonNull ServerSettings settings) throws Exception {\n+        throw new UnsupportedOperationException(\"Not available in this API version\");\n+    }\n+\n     /**\n      * This entity class is used to return relevant data of the HTTP reponse.\n      */"
  },
  {
    "sha": "c9150f6c2ae3476889b2ce9290c1ab61382f46cd",
    "filename": "app/src/main/java/it/niedermann/owncloud/notes/persistence/NotesClientV1.java",
    "status": "modified",
    "additions": 15,
    "deletions": 1,
    "changes": 16,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/persistence/NotesClientV1.java",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/persistence/NotesClientV1.java",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/java/it/niedermann/owncloud/notes/persistence/NotesClientV1.java?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -15,6 +15,7 @@\n import it.niedermann.owncloud.notes.shared.model.CloudNote;\n import it.niedermann.owncloud.notes.shared.model.ServerResponse.NoteResponse;\n import it.niedermann.owncloud.notes.shared.model.ServerResponse.NotesResponse;\n+import it.niedermann.owncloud.notes.shared.model.ServerSettings;\n \n @WorkerThread\n public class NotesClientV1 extends NotesClient {\n@@ -32,7 +33,7 @@ NotesResponse getNotes(SingleSignOnAccount ssoAccount, long lastModified, String\n     }\n \n     private NoteResponse putNote(SingleSignOnAccount ssoAccount, CloudNote note, String path, String method) throws Exception {\n-        JSONObject paramObject = new JSONObject();\n+        final JSONObject paramObject = new JSONObject();\n         paramObject.accumulate(JSON_TITLE, note.getTitle());\n         paramObject.accumulate(JSON_CONTENT, note.getContent());\n         paramObject.accumulate(JSON_MODIFIED, note.getModified().getTimeInMillis() / 1000);\n@@ -57,4 +58,17 @@ void deleteNote(SingleSignOnAccount ssoAccount, long noteId) throws Exception {\n     protected String getApiPath() {\n         return API_PATH;\n     }\n+\n+    @Override\n+    public ServerSettings getServerSettings(SingleSignOnAccount ssoAccount) throws Exception {\n+        return ServerSettings.from(new JSONObject(this.requestServer(ssoAccount, \"settings\", METHOD_GET, null, null, null).getContent()));\n+    }\n+\n+    @Override\n+    public ServerSettings putServerSettings(SingleSignOnAccount ssoAccount, @NonNull ServerSettings settings) throws Exception {\n+        final JSONObject paramObject = new JSONObject();\n+        paramObject.accumulate(JSON_SETTINGS_NOTES_PATH, settings.getNotesPath());\n+        paramObject.accumulate(JSON_SETTINGS_FILE_SUFFIX, settings.getFileSuffix());\n+        return ServerSettings.from(new JSONObject(this.requestServer(ssoAccount, \"settings\", METHOD_PUT, null, paramObject, null).getContent()));\n+    }\n }"
  },
  {
    "sha": "b4c62f5b647af6dae4d4ee6384817df1ac5753ec",
    "filename": "app/src/main/java/it/niedermann/owncloud/notes/shared/model/ApiVersion.java",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/shared/model/ApiVersion.java",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/shared/model/ApiVersion.java",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/java/it/niedermann/owncloud/notes/shared/model/ApiVersion.java?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -9,10 +9,11 @@\n @SuppressWarnings(\"WeakerAccess\")\n public class ApiVersion implements Comparable<ApiVersion> {\n     private static final Pattern NUMBER_EXTRACTION_PATTERN = Pattern.compile(\"[0-9]+\");\n+    private static final ApiVersion VERSION_1_2 = new ApiVersion(\"1.2\", 1, 2);\n \n     private String originalVersion = \"?\";\n-    private int major;\n-    private int minor;\n+    private final int major;\n+    private final int minor;\n \n     public ApiVersion(String originalVersion, int major, int minor) {\n         this(major, minor);\n@@ -74,6 +75,11 @@ public int compareTo(ApiVersion compare) {\n         return 0;\n     }\n \n+    public boolean supportsSettings() {\n+        // TODO\n+        return true;//getMajor() >= VERSION_1_2.getMajor() && getMinor() >= VERSION_1_2.getMinor();\n+    }\n+\n     @NonNull\n     @Override\n     public String toString() {"
  },
  {
    "sha": "e977b6972241dee5f99a6d81689c1d2bab305770",
    "filename": "app/src/main/java/it/niedermann/owncloud/notes/shared/model/ServerSettings.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/shared/model/ServerSettings.java",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/java/it/niedermann/owncloud/notes/shared/model/ServerSettings.java",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/java/it/niedermann/owncloud/notes/shared/model/ServerSettings.java?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -0,0 +1,47 @@\n+package it.niedermann.owncloud.notes.shared.model;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.Serializable;\n+\n+import static it.niedermann.owncloud.notes.persistence.NotesClient.JSON_SETTINGS_FILE_SUFFIX;\n+import static it.niedermann.owncloud.notes.persistence.NotesClient.JSON_SETTINGS_NOTES_PATH;\n+\n+public class ServerSettings implements Serializable {\n+    private String notesPath = \"\";\n+    private String fileSuffix = \"\";\n+\n+    public ServerSettings(String notesPath, String fileSuffix) {\n+        setNotesPath(notesPath);\n+        setFileSuffix(fileSuffix);\n+    }\n+\n+    public static ServerSettings from(JSONObject settings) throws JSONException {\n+        String notesPath = \"\";\n+        if (settings.has(JSON_SETTINGS_NOTES_PATH)) {\n+            notesPath = settings.getString(JSON_SETTINGS_NOTES_PATH);\n+        }\n+        String fileSuffix = \"\";\n+        if (settings.has(JSON_SETTINGS_FILE_SUFFIX)) {\n+            fileSuffix = settings.getString(JSON_SETTINGS_FILE_SUFFIX);\n+        }\n+        return new ServerSettings(notesPath, fileSuffix);\n+    }\n+\n+    public String getNotesPath() {\n+        return notesPath;\n+    }\n+\n+    public void setNotesPath(String notesPath) {\n+        this.notesPath = notesPath;\n+    }\n+\n+    public String getFileSuffix() {\n+        return fileSuffix;\n+    }\n+\n+    public void setFileSuffix(String fileSuffix) {\n+        this.fileSuffix = fileSuffix;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "8cfbd4beb040695ee64a6e5dddf1c6d5bcb8a1ba",
    "filename": "app/src/main/res/layout/item_account_choose.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/res/layout/item_account_choose.xml",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/res/layout/item_account_choose.xml",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/res/layout/item_account_choose.xml?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -64,15 +64,15 @@\n     </LinearLayout>\n \n     <androidx.appcompat.widget.AppCompatImageView\n-        android:id=\"@+id/delete\"\n+        android:id=\"@+id/account_context_menu\"\n         android:layout_width=\"36dp\"\n         android:layout_height=\"36dp\"\n         android:background=\"?attr/selectableItemBackgroundBorderless\"\n         android:contentDescription=\"@null\"\n         android:focusable=\"false\"\n         android:scaleType=\"center\"\n         android:visibility=\"gone\"\n-        app:srcCompat=\"@drawable/ic_delete_grey600_24dp\"\n+        app:srcCompat=\"@drawable/ic_settings_grey600_24dp\"\n         tools:visibility=\"visible\" />\n \n     <View"
  },
  {
    "sha": "95cb00d7b572a276146e27faa03da883c588c7e6",
    "filename": "app/src/main/res/menu/menu_account.xml",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/res/menu/menu_account.xml",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/res/menu/menu_account.xml",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/res/menu/menu_account.xml?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n+\n+    <item\n+        android:id=\"@+id/notes_path\"\n+        android:orderInCategory=\"10\"\n+        android:title=\"@string/settings_notes_path\"\n+        app:showAsAction=\"never\" />\n+\n+    <item\n+        android:id=\"@+id/file_suffix\"\n+        android:orderInCategory=\"20\"\n+        android:title=\"@string/settings_file_suffix\"\n+        app:showAsAction=\"never\" />\n+\n+    <item\n+        android:id=\"@+id/delete\"\n+        android:orderInCategory=\"30\"\n+        android:title=\"@string/remove_account\"\n+        app:showAsAction=\"never\" />\n+\n+</menu>\n\\ No newline at end of file"
  },
  {
    "sha": "9dde766ab3881e592f9134dde8943bf93704c873",
    "filename": "app/src/main/res/values/strings.xml",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/stefan-niedermann/nextcloud-notes/blob/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/res/values/strings.xml",
    "raw_url": "https://github.com/stefan-niedermann/nextcloud-notes/raw/a5a84360bea5a9d4d7c755200ce87a8888cfbb2d/app/src/main/res/values/strings.xml",
    "contents_url": "https://api.github.com/repos/stefan-niedermann/nextcloud-notes/contents/app/src/main/res/values/strings.xml?ref=a5a84360bea5a9d4d7c755200ce87a8888cfbb2d",
    "patch": "@@ -295,4 +295,14 @@\n     <string name=\"no_account_configured_yet\">No account configured yet</string>\n     <string name=\"no_other_accounts\">You don\\'t have configured any other accounts yet.</string>\n     <string name=\"context_based_formatting\">Context based formatting popover</string>\n+    <string name=\"settings_notes_path\">Set folder</string>\n+    <string name=\"settings_file_suffix\">File extension</string>\n+    <string name=\"remove_account\">Remove account</string>\n+\n+\n+    <string-array name=\"settings_file_suffixes\">\n+        <item>.txt</item>\n+        <item>.md</item>\n+    </string-array>\n+\n </resources>"
  }
]
