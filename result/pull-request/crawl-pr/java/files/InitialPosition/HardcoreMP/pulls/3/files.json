[
  {
    "sha": "bbf19d79eea62798f89e96d2e662edced3ce412f",
    "filename": "README.md",
    "status": "modified",
    "additions": 9,
    "deletions": 6,
    "changes": 15,
    "blob_url": "https://github.com/InitialPosition/HardcoreMP/blob/241fdd3947818f36565d269ca47ac3b6c07d049f/README.md",
    "raw_url": "https://github.com/InitialPosition/HardcoreMP/raw/241fdd3947818f36565d269ca47ac3b6c07d049f/README.md",
    "contents_url": "https://api.github.com/repos/InitialPosition/HardcoreMP/contents/README.md?ref=241fdd3947818f36565d269ca47ac3b6c07d049f",
    "patch": "@@ -24,12 +24,15 @@ The plugin will generate a config file on first startup. It is recommended to ed\n ## Config\n The following parameters exist in the config file and can be changed.\n \n-| Parameter | Usage | Accepted input |\n-| :-------- | ----- | -------------- |\n-| DELETE_INVENTORIES_ON_DEATH | If set to `true`, all players' inventories will be deleted on any players' death. | `true` or `false` |\n-| ONE_HIT_KILL | If set to `true`, any damage is lethal to players. | `true` or `false` |\n-| DYING_PLAYER_DROPS_INVENTORY | If set to `true`, the dying player drops his inventory on death (default Minecraft behavior). | `true` or `false` |\n-| DYING_PLAYER_DROPS_EXP | If set to `true`, the dying player drops experience on death (default Minecraft behavior). | `true` or `false` |\n+| Parameter | Usage | Accepted input | Default\n+| :-------- | ----- | -------------- | :-----: |\n+| DELETE_INVENTORIES_ON_DEATH | If set to `true`, all players' inventories will be deleted on any players' death. | `true` or `false` | `true` |\n+| ONE_HIT_KILL | If set to `true`, any damage is lethal to players. | `true` or `false` | `false` | \n+| DYING_PLAYER_DROPS_INVENTORY | If set to `true`, the dying player drops his inventory on death (default Minecraft behavior). | `true` or `false` | `false` |\n+| DYING_PLAYER_DROPS_EXP | If set to `true`, the dying player drops experience on death (default Minecraft behavior). | `true` or `false` | `false` |\n+| HANDLE_CURSE_OF_BINDING | If `keep`, items with Curse of Binding will be kept (but dropped).  If `disenchant`, the curse will be removed from items with it.  If `delete`, items will be deleted. | `delete`, `disenchant`, or `keep` | `delete` |\n+| CLEAR_ENDER_CHESTS | If `all`, all Ender Chests are cleared on any player's death.  If `player`, the dying player has their Ender Chest cleared.  If `keep`, Ender Chests are kept. | `default`, `player`, or `all` | `keep` |\n+| RANDOM_CURSE_OF_VANISHING | Items with Curse of Vanishing have an `x`% chance of vanishing when switched to. | `0` - `100` | `0` |\n \n All other config entries are used internally and should not be changed.\n "
  },
  {
    "sha": "801145bcbf0089956b92467d8f5c6153439c07c8",
    "filename": "src/net/initialposition/hardcoremp/CommandHandler.java",
    "status": "added",
    "additions": 97,
    "deletions": 0,
    "changes": 97,
    "blob_url": "https://github.com/InitialPosition/HardcoreMP/blob/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/CommandHandler.java",
    "raw_url": "https://github.com/InitialPosition/HardcoreMP/raw/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/CommandHandler.java",
    "contents_url": "https://api.github.com/repos/InitialPosition/HardcoreMP/contents/src/net/initialposition/hardcoremp/CommandHandler.java?ref=241fdd3947818f36565d269ca47ac3b6c07d049f",
    "patch": "@@ -0,0 +1,97 @@\n+package net.initialposition.hardcoremp;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.CommandExecutor;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.plugin.java.JavaPlugin;\n+\n+import static net.initialposition.hardcoremp.util.ConfigOperations.ConfigKeys;\n+\n+public class CommandHandler implements CommandExecutor {\n+\n+    JavaPlugin plugin;\n+\n+    public CommandHandler(JavaPlugin plugin) {\n+        this.plugin = plugin;\n+    }\n+\n+    private void getValue(CommandSender commandSender, String[] arguments) {\n+        if (arguments.length != 2) return;\n+        Object value = plugin.getConfig().get(String.valueOf(arguments[1]));\n+        if (value == null) {\n+            commandSender.sendMessage(\"Value \" + arguments[1] + \" is not valid\");\n+        }\n+        else {\n+            commandSender.sendMessage(arguments[1] + \": \" + value.toString());\n+        }\n+    }\n+\n+    private void setValue(CommandSender commandSender, String[] arguments) {\n+        if (arguments.length != 3) return;\n+        Object value = plugin.getConfig().get(String.valueOf(arguments[1]));\n+        if (value == null) {\n+            commandSender.sendMessage(\"Value \" + arguments[1] + \" is not valid\");\n+        }\n+        else {\n+            // Try to set it as a boolean\n+            if (arguments[2].equalsIgnoreCase(\"true\")) {\n+                plugin.getConfig().set(String.valueOf((arguments[1])), true);\n+            }\n+            else if (arguments[2].equalsIgnoreCase(\"false\")) {\n+                plugin.getConfig().set(String.valueOf((arguments[1])), false);\n+            }\n+            else {\n+                try {\n+                    // Try to set it as an integer\n+                    int v = Integer.parseInt(arguments[2]);\n+                    plugin.getConfig().set(String.valueOf((arguments[1])), v);\n+                }\n+                catch(NumberFormatException ignored) {\n+                    // Not a number so treat it as a string\n+                    plugin.getConfig().set(String.valueOf((arguments[1])), arguments[2]);\n+                }\n+            }\n+        }\n+        commandSender.sendMessage(arguments[1] + \": \" + plugin.getConfig().get(String.valueOf(arguments[1])));\n+    }\n+\n+    private void listValues(CommandSender commandSender) {\n+        for (ConfigKeys key : ConfigKeys.values()) {\n+            Object value = plugin.getConfig().get(String.valueOf(key));\n+            if (value != null)\n+                commandSender.sendMessage(key.name() + \": \" + value.toString());\n+        }\n+    }\n+\n+    private void printHelpMessage(CommandSender commandSender) {\n+        commandSender.sendMessage(\"Description: HardcoreMP config command\");\n+        commandSender.sendMessage(\"Usage: hardcoremp\");\n+    }\n+\n+    @Override\n+    public boolean onCommand(CommandSender commandSender, Command command, String label, String[] arguments) {\n+        // If no arguments are provided, print a help message\n+        if (arguments.length == 0) {\n+            printHelpMessage(commandSender);\n+            return false;\n+        }\n+\n+        String firstArgument = arguments[0];\n+        switch (firstArgument) {\n+            case \"help\":\n+                printHelpMessage(commandSender);\n+                break;\n+            case \"list\":\n+                listValues(commandSender);\n+                break;\n+            case \"set\":\n+                setValue(commandSender, arguments);\n+                break;\n+            case \"get\":\n+                getValue(commandSender, arguments);\n+                break;\n+        }\n+\n+        return true;\n+    }\n+}"
  },
  {
    "sha": "04942df235e27a3675142cfea853abf769bd8ae5",
    "filename": "src/net/initialposition/hardcoremp/HardcoreMP.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/InitialPosition/HardcoreMP/blob/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/HardcoreMP.java",
    "raw_url": "https://github.com/InitialPosition/HardcoreMP/raw/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/HardcoreMP.java",
    "contents_url": "https://api.github.com/repos/InitialPosition/HardcoreMP/contents/src/net/initialposition/hardcoremp/HardcoreMP.java?ref=241fdd3947818f36565d269ca47ac3b6c07d049f",
    "patch": "@@ -1,6 +1,7 @@\n package net.initialposition.hardcoremp;\n \n import net.initialposition.hardcoremp.listeners.PlayerDeathListener;\n+import net.initialposition.hardcoremp.listeners.PlayerItemHeldListener;\n import net.initialposition.hardcoremp.listeners.PlayerLoginOutListener;\n import net.initialposition.hardcoremp.util.ConfigOperations;\n import net.initialposition.hardcoremp.util.ConsoleLogger;\n@@ -30,12 +31,18 @@ public void onEnable() {\n         PlayerDeathListener deathListener = new PlayerDeathListener(this);\n         getServer().getPluginManager().registerEvents(deathListener, this);\n \n+        // Add on item held listener\n+        PlayerItemHeldListener itemHeldListener = new PlayerItemHeldListener(this);\n+        getServer().getPluginManager().registerEvents(itemHeldListener, this);\n+\n         // add login/logout listener\n         playerLoginOutListener = new PlayerLoginOutListener(this);\n         if (this.getConfig().contains(String.valueOf(OFFLINE_PLAYERS))) {\n             playerLoginOutListener.loadPlayerOfflineList();\n         }\n         getServer().getPluginManager().registerEvents(playerLoginOutListener, this);\n+\n+        getCommand(\"hardcoremp\").setExecutor(new CommandHandler(this));\n     }\n \n     @Override"
  },
  {
    "sha": "0b72ea7f69b732b59c25a5d392eed59236aaaabd",
    "filename": "src/net/initialposition/hardcoremp/listeners/PlayerDeathListener.java",
    "status": "modified",
    "additions": 84,
    "deletions": 6,
    "changes": 90,
    "blob_url": "https://github.com/InitialPosition/HardcoreMP/blob/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/listeners/PlayerDeathListener.java",
    "raw_url": "https://github.com/InitialPosition/HardcoreMP/raw/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/listeners/PlayerDeathListener.java",
    "contents_url": "https://api.github.com/repos/InitialPosition/HardcoreMP/contents/src/net/initialposition/hardcoremp/listeners/PlayerDeathListener.java?ref=241fdd3947818f36565d269ca47ac3b6c07d049f",
    "patch": "@@ -2,13 +2,17 @@\n \n import net.initialposition.hardcoremp.util.ConsoleLogger;\n import org.bukkit.Material;\n+import org.bukkit.enchantments.Enchantment;\n import org.bukkit.entity.Player;\n import org.bukkit.event.EventHandler;\n import org.bukkit.event.Listener;\n import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.Inventory;\n+import org.bukkit.inventory.ItemStack;\n import org.bukkit.plugin.java.JavaPlugin;\n \n import java.sql.Timestamp;\n+import java.util.function.Consumer;\n \n import static net.initialposition.hardcoremp.util.ConfigOperations.ConfigKeys.*;\n \n@@ -20,6 +24,67 @@ public PlayerDeathListener(JavaPlugin plugin) {\n         this.plugin = plugin;\n     }\n \n+    /**\n+     * Clears a player's inventory, but skips or disenchants items with Curse of Binding\n+     *\n+     * @param inventory The inventory to clear\n+     */\n+    private void clearInventoryExcludingBindingCurse(Inventory inventory) {\n+        // Iterate over all items in the inventory\n+        for (int i = 0; i < inventory.getSize(); ++i) {\n+            // Get the current item stack\n+            ItemStack itemStack = inventory.getItem(i);\n+            // If the stack doesn't exist, continue\n+            if (itemStack == null) continue;\n+            // If the item doesn't have curse of binding, clear the stack\n+            if (!itemStack.containsEnchantment(Enchantment.BINDING_CURSE)) {\n+                inventory.clear(i);\n+            } else {\n+                if (this.plugin.getConfig().getString(String.valueOf(HANDLE_CURSE_OF_BINDING)).equals(\"disenchant\")) {\n+                    itemStack.removeEnchantment(Enchantment.BINDING_CURSE);\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Clears a player's Ender chest using the provided clearing function\n+     *\n+     * @param p             The player whose Ender chest should be cleared\n+     * @param clearFunction The function to clear the inventory with\n+     */\n+    private void clearEnderChest(Player p, Consumer<Inventory> clearFunction) {\n+        Inventory ec = p.getEnderChest();\n+        clearFunction.accept(ec);\n+    }\n+\n+    /**\n+     * Clears a player's inventory using the provided clearing function\n+     *\n+     * @param p             The player to clear the inventory of\n+     * @param clearFunction The function to clear the inventory with\n+     */\n+    private void clearInventory(Player p, Consumer<Inventory> clearFunction) {\n+        Inventory i = p.getInventory();\n+        clearFunction.accept(i);\n+    }\n+\n+    /**\n+     * Gets the function to clear inventories with\n+     */\n+    private Consumer<Inventory> getClearFunction() {\n+        // Create a consumer (takes 1 parameter, returns nothing) to hold our clear function\n+        Consumer<Inventory> clearFunction;\n+\n+        // If we're deleting Curse of Binding items, use the regular clear function, otherwise don't\n+        if (this.plugin.getConfig().getString(String.valueOf(HANDLE_CURSE_OF_BINDING)).equals(\"delete\"))\n+            clearFunction = Inventory::clear;\n+        else\n+            clearFunction = this::clearInventoryExcludingBindingCurse;\n+\n+        return clearFunction;\n+    }\n+\n     @EventHandler\n     public void handleDeath(EntityDamageEvent event) {\n \n@@ -40,16 +105,23 @@ public void handleDeath(EntityDamageEvent event) {\n \n         // cancel if player is holding a totem of undying\n         if (p.getInventory().getItemInMainHand().getType() == Material.TOTEM_OF_UNDYING ||\n-        p.getInventory().getItemInOffHand().getType() == Material.TOTEM_OF_UNDYING) {\n+                p.getInventory().getItemInOffHand().getType() == Material.TOTEM_OF_UNDYING) {\n             return;\n         }\n \n         // cancel death since we want to implement our own functionality\n         event.setCancelled(true);\n \n-        // clear players inventory and xp if flags are set, then kill player\n+        // Get the clear function\n+        Consumer<Inventory> clearFunction = getClearFunction();\n+\n+        // clear players inventory, ender chest, and xp if flags are set, then kill player\n         if (!this.plugin.getConfig().getBoolean(String.valueOf(DYING_PLAYER_DROPS_INVENTORY))) {\n-            p.getInventory().clear();\n+            clearInventory(p, clearFunction);\n+        }\n+\n+        if (this.plugin.getConfig().getString(String.valueOf(CLEAR_ENDER_CHESTS)).equals(\"player\") || this.plugin.getConfig().getString(String.valueOf(CLEAR_ENDER_CHESTS)).equals(\"all\")) {\n+            clearEnderChest(p, clearFunction);\n         }\n \n         if (!this.plugin.getConfig().getBoolean(String.valueOf(DYING_PLAYER_DROPS_EXP))) {\n@@ -65,15 +137,21 @@ public void handleDeath(EntityDamageEvent event) {\n                 .getBoolean(String.valueOf(DELETE_INVENTORIES_ON_DEATH))) {\n             ConsoleLogger.consoleLog(\"Resetting player inventories...\");\n \n-            // delete inventories of online players\n+            // Clear the inventories using the selected function\n             for (Player currentPlayer : this.plugin.getServer().getOnlinePlayers()) {\n-                currentPlayer.getInventory().clear();\n+                // Make sure the player inventory isn't cleared twice\n+                if (!currentPlayer.equals(p)) {\n+                    clearInventory(currentPlayer, clearFunction);\n+                    // If we're supposed to clear Ender Chests, do that\n+                    if (this.plugin.getConfig().getString(String.valueOf(CLEAR_ENDER_CHESTS)).equals(\"all\")) {\n+                        clearEnderChest(currentPlayer, clearFunction);\n+                    }\n+                }\n             }\n \n             // set last death name and timestamp\n             Timestamp timestamp = new Timestamp(System.currentTimeMillis());\n             this.plugin.getConfig().set(String.valueOf(LAST_DEATH_TIME), timestamp.getTime());\n-\n             this.plugin.getConfig().set(String.valueOf(LAST_DEATH_NAME), p.getDisplayName());\n         }\n "
  },
  {
    "sha": "f35390cdaf068a1c1310123d476d94fabd666dba",
    "filename": "src/net/initialposition/hardcoremp/listeners/PlayerItemHeldListener.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/InitialPosition/HardcoreMP/blob/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/listeners/PlayerItemHeldListener.java",
    "raw_url": "https://github.com/InitialPosition/HardcoreMP/raw/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/listeners/PlayerItemHeldListener.java",
    "contents_url": "https://api.github.com/repos/InitialPosition/HardcoreMP/contents/src/net/initialposition/hardcoremp/listeners/PlayerItemHeldListener.java?ref=241fdd3947818f36565d269ca47ac3b6c07d049f",
    "patch": "@@ -0,0 +1,43 @@\n+package net.initialposition.hardcoremp.listeners;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.player.PlayerItemHeldEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.plugin.java.JavaPlugin;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import static net.initialposition.hardcoremp.util.ConfigOperations.ConfigKeys.RANDOM_CURSE_OF_VANISHING;\n+\n+public class PlayerItemHeldListener implements Listener {\n+\n+    JavaPlugin plugin;\n+\n+    public PlayerItemHeldListener(JavaPlugin plugin) {\n+        this.plugin = plugin;\n+    }\n+\n+    @EventHandler\n+    public void handleEvent(PlayerItemHeldEvent playerItemHeldEvent) {\n+        int slot = playerItemHeldEvent.getNewSlot();\n+        ItemStack itemStack = playerItemHeldEvent.getPlayer().getInventory().getItem(slot);\n+\n+        // Return if the player isn't holding anything\n+        if (itemStack == null) return;\n+\n+        // If the item has the curse...\n+        if (itemStack.containsEnchantment(Enchantment.VANISHING_CURSE)) {\n+            // Generate a random number 0 - 100\n+            int randomNumber = ThreadLocalRandom.current().nextInt(0, 101);\n+            // Get the number to beat\n+            int vanishChance = this.plugin.getConfig().getInt(String.valueOf(RANDOM_CURSE_OF_VANISHING));\n+            // Check if we've beaten that number\n+            if (randomNumber < vanishChance) {\n+                playerItemHeldEvent.getPlayer().getInventory().clear(slot);\n+            }\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "5dd74129335becae6003fe271257266daa5f62a3",
    "filename": "src/net/initialposition/hardcoremp/listeners/PlayerLoginOutListener.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/InitialPosition/HardcoreMP/blob/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/listeners/PlayerLoginOutListener.java",
    "raw_url": "https://github.com/InitialPosition/HardcoreMP/raw/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/listeners/PlayerLoginOutListener.java",
    "contents_url": "https://api.github.com/repos/InitialPosition/HardcoreMP/contents/src/net/initialposition/hardcoremp/listeners/PlayerLoginOutListener.java?ref=241fdd3947818f36565d269ca47ac3b6c07d049f",
    "patch": "@@ -13,7 +13,6 @@\n import org.bukkit.plugin.java.JavaPlugin;\n \n import java.util.ArrayList;\n-import java.util.Random;\n \n import static net.initialposition.hardcoremp.util.ConfigOperations.ConfigKeys.*;\n "
  },
  {
    "sha": "b082545eb030d4a998f7c2a0d4c719edf4e3db46",
    "filename": "src/net/initialposition/hardcoremp/plugin.yml",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/InitialPosition/HardcoreMP/blob/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/plugin.yml",
    "raw_url": "https://github.com/InitialPosition/HardcoreMP/raw/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/plugin.yml",
    "contents_url": "https://api.github.com/repos/InitialPosition/HardcoreMP/contents/src/net/initialposition/hardcoremp/plugin.yml?ref=241fdd3947818f36565d269ca47ac3b6c07d049f",
    "patch": "@@ -4,4 +4,10 @@ version: 1.0.2\n description: A plugin to spice up a non hardcore minecraft server\n api-version: 1.16\n author: InitialPosition\n-website: www.initialposition.net\n\\ No newline at end of file\n+website: www.initialposition.net\n+\n+commands:\n+  hardcoremp:\n+    description: Shows help for HardcoreMP commands\n+    usage: /hardcoremp\n+    permission: hardcoremp.hardcoremp\n\\ No newline at end of file"
  },
  {
    "sha": "753bc45a51e47e6dab1e49ede2a1588a04df20de",
    "filename": "src/net/initialposition/hardcoremp/util/ConfigOperations.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/InitialPosition/HardcoreMP/blob/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/util/ConfigOperations.java",
    "raw_url": "https://github.com/InitialPosition/HardcoreMP/raw/241fdd3947818f36565d269ca47ac3b6c07d049f/src/net/initialposition/hardcoremp/util/ConfigOperations.java",
    "contents_url": "https://api.github.com/repos/InitialPosition/HardcoreMP/contents/src/net/initialposition/hardcoremp/util/ConfigOperations.java?ref=241fdd3947818f36565d269ca47ac3b6c07d049f",
    "patch": "@@ -11,7 +11,10 @@\n         DYING_PLAYER_DROPS_EXP,\n         LAST_DEATH_TIME,\n         LAST_DEATH_NAME,\n-        OFFLINE_PLAYERS\n+        OFFLINE_PLAYERS,\n+        HANDLE_CURSE_OF_BINDING,\n+        CLEAR_ENDER_CHESTS,\n+        RANDOM_CURSE_OF_VANISHING\n     }\n \n     public static void initializeNewConfig(JavaPlugin plugin) {\n@@ -24,6 +27,10 @@ public static void initializeNewConfig(JavaPlugin plugin) {\n         plugin.getConfig().set(String.valueOf(ConfigKeys.LAST_DEATH_TIME), -1);\n         plugin.getConfig().set(String.valueOf(ConfigKeys.LAST_DEATH_NAME), \"missingno.\");\n \n+        plugin.getConfig().set(String.valueOf(ConfigKeys.HANDLE_CURSE_OF_BINDING), \"delete\");\n+        plugin.getConfig().set(String.valueOf(ConfigKeys.CLEAR_ENDER_CHESTS), \"keep\");\n+        plugin.getConfig().set(String.valueOf(ConfigKeys.RANDOM_CURSE_OF_VANISHING), 0);\n+\n         // save config\n         plugin.saveConfig();\n     }"
  }
]
