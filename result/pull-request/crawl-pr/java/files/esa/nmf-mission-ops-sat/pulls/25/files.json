[
  {
    "sha": "dd8e5125e474b73aaf3aef57e860f582df0a785f",
    "filename": "ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/GroundMOProxyOPSSATImpl.java",
    "status": "modified",
    "additions": 44,
    "deletions": 50,
    "changes": 94,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/GroundMOProxyOPSSATImpl.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/GroundMOProxyOPSSATImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/GroundMOProxyOPSSATImpl.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -106,15 +106,15 @@ public GroundMOProxyOPSSATImpl() {\n             final URI uri = super.getDirectoryServiceURI();\n             Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.INFO,\n                     \"Ground MO Proxy initialized! URI: \" + uri + \"\\n\");\n-        } catch (Exception ex) {\n+        } catch (final Exception ex) {\n             Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.SEVERE,\n                     \"The SPP Protocol Bridge could not be initialized!\", ex);\n         }\n     }\n \n     @Override\n     public synchronized void additionalHandling() {\n-        IdentifierList domain = new IdentifierList();\n+        final IdentifierList domain = new IdentifierList();\n         domain.add(new Identifier(\"*\"));\n \n         // Add the Action service rerouting stuff\n@@ -130,7 +130,7 @@ public synchronized void additionalHandling() {\n \n             // Cycle through the NMF Apps and sync them!\n             for (int i = 0; i < actionsCD.size(); i++) {\n-                ProviderSummaryList psl = new ProviderSummaryList();\n+                final ProviderSummaryList psl = new ProviderSummaryList();\n                 psl.add(actionsCD.get(i));\n                 // Needs some work!\n \n@@ -142,27 +142,25 @@ public synchronized void additionalHandling() {\n \n                             if (localActionURI == null) {\n                                 // This only needs to be done in case it still does not exist:\n-                                ActionConsumerServiceImpl actionConsumer = new ActionConsumerServiceImpl(connectionDetails, null);\n-                                ActionProxyServiceImpl actionProxyService = new ActionProxyServiceImpl();\n+                                final ActionConsumerServiceImpl actionConsumer = new ActionConsumerServiceImpl(connectionDetails, null);\n+                                final ActionProxyServiceImpl actionProxyService = new ActionProxyServiceImpl();\n                                 actionProxyService.init(localCOMServices, actionConsumer);\n                                 localActionURI = actionProxyService.getConnectionProvider().getConnectionDetails().getProviderURI();\n                                 actionURIs.put(connectionDetails.getDomain(), localActionURI);\n                             }\n \n                             super.localDirectoryService.rerouteActionServiceURI(connectionDetails.getDomain(), localActionURI);\n                         }\n-                    } catch (MalformedURLException ex) {\n+                    } catch (final MalformedURLException ex) {\n                         Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.SEVERE, null, ex);\n                     }\n-                } catch (IOException ex) {\n+                } catch (final IOException ex) {\n                     // The Action service does not exist on this provider...\n                     // Do nothing!\n                 }\n \n             }\n-        } catch (MALInteractionException ex) {\n-            Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.SEVERE, null, ex);\n-        } catch (MALException ex) {\n+        } catch (final MALInteractionException | MALException ex) {\n             Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.SEVERE, null, ex);\n         }\n \n@@ -178,62 +176,60 @@ public synchronized void additionalHandling() {\n \n         try {\n             final ProviderSummaryList archiveSyncsCD = localDirectoryService.lookupProvider(sf, null);\n-            ArrayList<ArchiveSyncConsumerServiceImpl> archiveSyncs = new ArrayList<ArchiveSyncConsumerServiceImpl>();\n+            final ArrayList<ArchiveSyncConsumerServiceImpl> archiveSyncs = new ArrayList<ArchiveSyncConsumerServiceImpl>();\n \n             // Cycle through the NMF Apps and sync them!\n             for (int i = 0; i < archiveSyncsCD.size(); i++) {\n-                ProviderSummaryList psl = new ProviderSummaryList();\n+                final ProviderSummaryList psl = new ProviderSummaryList();\n                 psl.add(archiveSyncsCD.get(i));\n \n                 try {\n                     final SingleConnectionDetails connectionDetails = AppsLauncherManager.getSingleConnectionDetailsFromProviderSummaryList(psl);\n                     try {\n-                        ArchiveSyncConsumerServiceImpl archSync = new ArchiveSyncConsumerServiceImpl(connectionDetails);\n+                        final ArchiveSyncConsumerServiceImpl archSync = new ArchiveSyncConsumerServiceImpl(connectionDetails);\n                         archiveSyncs.add(archSync);\n-                    } catch (MalformedURLException ex) {\n+                    } catch (final MalformedURLException ex) {\n                         Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.SEVERE, null, ex);\n                     }\n-                } catch (IOException ex) {\n+                } catch (final IOException ex) {\n                     // The ArchiveSync service does not exist on this provider...\n                     // Do nothing!\n                 }\n             }\n \n             this.syncRemoteArchiveWithLocalArchive(archiveSyncs);\n-        } catch (MALInteractionException ex) {\n-            Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.SEVERE, null, ex);\n-        } catch (MALException ex) {\n+        } catch (final MALInteractionException | MALException ex) {\n             Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.SEVERE, null, ex);\n         }\n     }\n \n-    public final void syncRemoteArchiveWithLocalArchive(ArrayList<ArchiveSyncConsumerServiceImpl> archiveSyncs) throws MALInteractionException, MALException {\n+    public final void syncRemoteArchiveWithLocalArchive(final ArrayList<ArchiveSyncConsumerServiceImpl> archiveSyncs) throws MALInteractionException, MALException {\n         // Select Parameter Definitions by default\n-        ObjectTypeList objTypes = new ObjectTypeList();\n-        UShort shorty = new UShort((short) 0);\n+        final ObjectTypeList objTypes = new ObjectTypeList();\n+        final UShort shorty = new UShort((short) 0);\n         objTypes.add(new ObjectType(shorty, shorty, new UOctet((short) 0), shorty));\n \n         for (int i = 0; i < archiveSyncs.size(); i++) {\n-            ArchiveSyncConsumerServiceImpl archiveSync = archiveSyncs.get(i);\n+            final ArchiveSyncConsumerServiceImpl archiveSync = archiveSyncs.get(i);\n \n-            GetTimeResponse response = archiveSync.getArchiveSyncStub().getTime();\n+            final GetTimeResponse response = archiveSync.getArchiveSyncStub().getTime();\n             FineTime lastSyncTime = response.getBodyElement1();\n \n             if (lastSyncTime.getValue() == 0) {\n                 lastSyncTime = latestTimestampForProvider(archiveSync);\n             }\n \n-            FineTime until = response.getBodyElement0();\n+            final FineTime until = response.getBodyElement0();\n \n             Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(\n                     Level.INFO,\n                     \"Synchronizing provider: {0}, From: {1}, Until: {2}\",\n                     new Object[] {archiveSync.getConnectionDetails().getDomain(), lastSyncTime, until});\n             // This value should be obtained from the getCurrent timestamp!\n-            ArrayList<COMObjectStructure> comObjects = archiveSync.retrieveCOMObjects(lastSyncTime, until, objTypes);\n+            final ArrayList<COMObjectStructure> comObjects = archiveSync.retrieveCOMObjects(lastSyncTime, until, objTypes);\n \n-            for (COMObjectStructure comObject : comObjects) {\n-                ArchiveDetailsList detailsList = new ArchiveDetailsList();\n+            for (final COMObjectStructure comObject : comObjects) {\n+                final ArchiveDetailsList detailsList = new ArchiveDetailsList();\n                 detailsList.add(comObject.getArchiveDetails());\n \n                 try {\n@@ -245,10 +241,10 @@ public final void syncRemoteArchiveWithLocalArchive(ArrayList<ArchiveSyncConsume\n                             comObject.getObjects(),\n                             null\n                     );\n-                } catch (MALException ex) {\n+                } catch (final MALException ex) {\n                     Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(\n                             Level.SEVERE, null, ex);\n-                } catch (MALInteractionException ex) {\n+                } catch (final MALInteractionException ex) {\n                     if (COMHelper.DUPLICATE_ERROR_NUMBER.equals(ex.getStandardError().getErrorNumber())) {\n                         Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(\n                                 Level.SEVERE, \"The object already exists!\");\n@@ -259,8 +255,8 @@ public final void syncRemoteArchiveWithLocalArchive(ArrayList<ArchiveSyncConsume\n                 }\n             }\n             // Change the Archive URI to be the one of the local COM Archive service\n-            IdentifierList providerDomain = archiveSync.getConnectionDetails().getDomain();\n-            URI localCOMArchiveURI = super.getCOMArchiveServiceURI();\n+            final IdentifierList providerDomain = archiveSync.getConnectionDetails().getDomain();\n+            final URI localCOMArchiveURI = super.getCOMArchiveServiceURI();\n             //super.localDirectoryService.rerouteArchiveServiceURI(providerDomain, localCOMArchiveURI);\n             Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(\n                     Level.INFO,\n@@ -276,51 +272,49 @@ public final void syncRemoteArchiveWithLocalArchive(ArrayList<ArchiveSyncConsume\n      * @throws java.lang.Exception If there is an error\n      */\n     public static void main(final String args[]) throws Exception {\n-        GroundMOProxyOPSSATImpl proxy = new GroundMOProxyOPSSATImpl();\n+        final GroundMOProxyOPSSATImpl proxy = new GroundMOProxyOPSSATImpl();\n     }\n \n-    private FineTime latestTimestampForProvider(ArchiveSyncConsumerServiceImpl archiveSync) {\n+    private FineTime latestTimestampForProvider(final ArchiveSyncConsumerServiceImpl archiveSync) {\n         // We have to return the value as the most recent COM Object timestamp!\n \n         // Do a query on the COM Objects for the latest one!\n-        FineTime timeInFarFuture = new FineTime(Long.MAX_VALUE);\n-        String text = HelperTime.time2readableString(timeInFarFuture);\n+        final FineTime timeInFarFuture = new FineTime(Long.MAX_VALUE);\n+        final String text = HelperTime.time2readableString(timeInFarFuture);\n         Logger.getLogger(GroundMOProxy.class.getName()).log(Level.FINE,\n                 \"The time in the future is: \" + text);\n \n-        ArchiveQuery archiveQuery = new ArchiveQuery(\n+        final ArchiveQuery archiveQuery = new ArchiveQuery(\n                 archiveSync.getConnectionDetails().getDomain(),\n                 null,\n                 null,\n-                new Long(0),\n+                0L,\n                 null,\n                 null,\n                 timeInFarFuture,\n                 true,\n                 null\n         );\n \n-        ArchiveQueryList archiveQueryList = new ArchiveQueryList();\n+        final ArchiveQueryList archiveQueryList = new ArchiveQueryList();\n         archiveQueryList.add(archiveQuery);\n \n         final Semaphore semaphore = new Semaphore(0);\n         final ArchiveDetails arch = new ArchiveDetails();\n \n-        ObjectType objType = new ObjectType(new UShort(0), new UShort(0), new UOctet((short) 0), new UShort(0));\n+        final ObjectType objType = new ObjectType(new UShort(0), new UShort(0), new UOctet((short) 0), new UShort(0));\n \n         try {\n             super.localCOMServices.getArchiveService().query(false, objType,\n                     archiveQueryList, null, new QueryInteractionImpl(arch, semaphore));\n-        } catch (MALException ex) {\n-            Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.SEVERE, null, ex);\n-        } catch (MALInteractionException ex) {\n+        } catch (final MALException | MALInteractionException ex) {\n             Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.SEVERE, null, ex);\n         }\n \n         try {\n             semaphore.acquire();\n             return arch.getTimestamp();\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n             Logger.getLogger(GroundMOProxyOPSSATImpl.class.getName()).log(Level.SEVERE, null, ex);\n         }\n \n@@ -332,7 +326,7 @@ private FineTime latestTimestampForProvider(ArchiveSyncConsumerServiceImpl archi\n         private final ArchiveDetails arch;\n         private final Semaphore semaphore;\n \n-        public QueryInteractionImpl(ArchiveDetails arch, Semaphore semaphore) {\n+        public QueryInteractionImpl(final ArchiveDetails arch, final Semaphore semaphore) {\n             super(null);\n             this.arch = arch;\n             this.semaphore = semaphore;\n@@ -344,8 +338,8 @@ public MALMessage sendAcknowledgement() throws MALInteractionException, MALExcep\n         }\n \n         @Override\n-        public MALMessage sendUpdate(ObjectType objType, IdentifierList domain,\n-                ArchiveDetailsList objDetails, ElementList objBodies)\n+        public MALMessage sendUpdate(final ObjectType objType, final IdentifierList domain,\n+                                     final ArchiveDetailsList objDetails, final ElementList objBodies)\n                 throws MALInteractionException, MALException {\n             // Should never reach this because we asked for one single object, the latest!\n             Logger.getLogger(GroundMOProxy.class.getName()).log(Level.WARNING,\n@@ -354,8 +348,8 @@ public MALMessage sendUpdate(ObjectType objType, IdentifierList domain,\n         }\n \n         @Override\n-        public MALMessage sendResponse(ObjectType objType, IdentifierList domain,\n-                ArchiveDetailsList objDetails, ElementList objBodies)\n+        public MALMessage sendResponse(final ObjectType objType, final IdentifierList domain,\n+                                       final ArchiveDetailsList objDetails, final ElementList objBodies)\n                 throws MALInteractionException, MALException {\n             if (objDetails != null && !objDetails.isEmpty()) {\n                 arch.setTimestamp(objDetails.get(0).getTimestamp());\n@@ -367,14 +361,14 @@ public MALMessage sendResponse(ObjectType objType, IdentifierList domain,\n         }\n \n         @Override\n-        public MALMessage sendError(MALStandardError error) throws MALInteractionException, MALException {\n+        public MALMessage sendError(final MALStandardError error) throws MALInteractionException, MALException {\n             Logger.getLogger(GroundMOProxy.class.getName()).log(Level.INFO, \"Error! (1)\");\n             semaphore.release();\n             return null;\n         }\n \n         @Override\n-        public MALMessage sendUpdateError(MALStandardError error) throws MALInteractionException, MALException {\n+        public MALMessage sendUpdateError(final MALStandardError error) throws MALInteractionException, MALException {\n             Logger.getLogger(GroundMOProxy.class.getName()).log(Level.INFO, \"Error! (2)\");\n             semaphore.release();\n             return null;"
  },
  {
    "sha": "f165e8214f11729a8fc19cbca26dc794171cc8c3",
    "filename": "nanomind-connector/mo-apis/nanomind-api-com/src/main/java/esa/opssat/nanomind/com/COMObject.java",
    "status": "modified",
    "additions": 19,
    "deletions": 19,
    "changes": 38,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-apis/nanomind-api-com/src/main/java/esa/opssat/nanomind/com/COMObject.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-apis/nanomind-api-com/src/main/java/esa/opssat/nanomind/com/COMObject.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/nanomind-connector/mo-apis/nanomind-api-com/src/main/java/esa/opssat/nanomind/com/COMObject.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -37,17 +37,17 @@\n   private final ObjectType sourceType;\n   private final boolean event;\n \n-  public COMObject(org.ccsds.moims.mo.mal.structures.UShort area,\n-          org.ccsds.moims.mo.mal.structures.UShort service,\n-          org.ccsds.moims.mo.mal.structures.UOctet version,\n-          org.ccsds.moims.mo.mal.structures.UShort number,\n-          Identifier name,\n-          Object bodyShortForm,\n-          boolean hasRelated,\n-          ObjectType relatedType,\n-          boolean hasSource,\n-          ObjectType sourceType,\n-          boolean isEvent)\n+  public COMObject(final org.ccsds.moims.mo.mal.structures.UShort area,\n+                   final org.ccsds.moims.mo.mal.structures.UShort service,\n+                   final org.ccsds.moims.mo.mal.structures.UOctet version,\n+                   final org.ccsds.moims.mo.mal.structures.UShort number,\n+                   final Identifier name,\n+                   final Object bodyShortForm,\n+                   final boolean hasRelated,\n+                   final ObjectType relatedType,\n+                   final boolean hasSource,\n+                   final ObjectType sourceType,\n+                   final boolean isEvent)\n   {\n     this.objectType = new ObjectType(area, service, version, number);\n     this.objectName = name;\n@@ -59,14 +59,14 @@ public COMObject(org.ccsds.moims.mo.mal.structures.UShort area,\n     this.event = isEvent;\n   }\n \n-  public COMObject(ObjectType objectType,\n-          Identifier name,\n-          Object bodyShortForm,\n-          boolean hasRelated,\n-          ObjectType relatedType,\n-          boolean hasSource,\n-          ObjectType sourceType,\n-          boolean isEvent)\n+  public COMObject(final ObjectType objectType,\n+                   final Identifier name,\n+                   final Object bodyShortForm,\n+                   final boolean hasRelated,\n+                   final ObjectType relatedType,\n+                   final boolean hasSource,\n+                   final ObjectType sourceType,\n+                   final boolean isEvent)\n   {\n     this.objectType = objectType;\n     this.objectName = name;"
  },
  {
    "sha": "fff38002fa5aba05ad9149c4f24b26fdeb539b06",
    "filename": "nanomind-connector/mo-apis/nanomind-api-com/src/main/java/esa/opssat/nanomind/com/COMService.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-apis/nanomind-api-com/src/main/java/esa/opssat/nanomind/com/COMService.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-apis/nanomind-api-com/src/main/java/esa/opssat/nanomind/com/COMService.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/nanomind-connector/mo-apis/nanomind-api-com/src/main/java/esa/opssat/nanomind/com/COMService.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -33,10 +33,10 @@\n  */\n public class COMService extends MALService\n {\n-  private final Map<Integer, COMObject> objectsByNumber = new HashMap<Integer, COMObject>();\n-  private final Map<String, COMObject> objectsByName = new HashMap<String, COMObject>();\n+  private final Map<Integer, COMObject> objectsByNumber = new HashMap<>();\n+  private final Map<String, COMObject> objectsByName = new HashMap<>();\n   \n-  public COMService(UShort number, Identifier name)\n+  public COMService(final UShort number, final Identifier name)\n   {\n     super(number, name);\n   }\n@@ -48,7 +48,7 @@ public COMService(UShort number, Identifier name)\n    * @throws java.lang.IllegalArgumentException If the argument is null.\n    */\n   @Proposed\n-  public void addCOMObject(COMObject object) throws java.lang.IllegalArgumentException\n+  public void addCOMObject(final COMObject object) throws java.lang.IllegalArgumentException\n   {\n     objectsByNumber.put(object.getObjectType().getNumber().getValue(), object);\n     objectsByName.put(object.getObjectName().getValue(), object);"
  },
  {
    "sha": "2a2b310d8aff0401f3509deeec0f4a42cee9c8c5",
    "filename": "nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/AggregationNanomindConsumerServiceImpl.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/AggregationNanomindConsumerServiceImpl.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/AggregationNanomindConsumerServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/AggregationNanomindConsumerServiceImpl.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -41,10 +41,10 @@\n  */\n public class AggregationNanomindConsumerServiceImpl extends ConsumerServiceImpl {\n \n-    private AggregationStub aggregationService = null;\n+    private final AggregationStub aggregationService;\n \n     @Override\n-    public Object generateServiceStub(MALConsumer tmConsumer) {\n+    public Object generateServiceStub(final MALConsumer tmConsumer) {\n         return new AggregationStub(tmConsumer);\n     }\n \n@@ -57,7 +57,7 @@ public Object getStub() {\n         return getAggregationNanomindStub();\n     }\n \n-    public AggregationNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetails) throws MALException, MalformedURLException {\n+    public AggregationNanomindConsumerServiceImpl(final SingleConnectionDetails connectionDetails) throws MALException, MalformedURLException {\n \n         if (MALContextFactory.lookupArea(MALHelper.MAL_AREA_NAME, MALHelper.MAL_AREA_VERSION) == null) {\n             MALHelper.init(MALContextFactory.getElementFactoryRegistry());\n@@ -73,7 +73,7 @@ public AggregationNanomindConsumerServiceImpl(SingleConnectionDetails connection\n \n         try {\n             AggregationHelper.init(MALContextFactory.getElementFactoryRegistry());\n-        } catch (MALException ex) {\n+        } catch (final MALException ex) {\n         }\n \n         connection = new ConnectionConsumer();\n@@ -83,7 +83,7 @@ public AggregationNanomindConsumerServiceImpl(SingleConnectionDetails connection\n         if (tmConsumer != null) {\n             try {\n                 tmConsumer.close();\n-            } catch (MALException ex) {\n+            } catch (final MALException ex) {\n                 Logger.getLogger(AggregationNanomindConsumerServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n             }\n         }"
  },
  {
    "sha": "5a8ce77690b770ae94be06824e3dc7968d3639c8",
    "filename": "nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/EventNanomindConsumerServiceImpl.java",
    "status": "modified",
    "additions": 20,
    "deletions": 21,
    "changes": 41,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/EventNanomindConsumerServiceImpl.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/EventNanomindConsumerServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/EventNanomindConsumerServiceImpl.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -20,7 +20,6 @@\n  */\n package esa.mo.nanomind.impl.consumer;\n \n-import esa.mo.helpertools.connections.ConnectionConsumer;\n import esa.mo.helpertools.connections.SingleConnectionDetails;\n import esa.mo.helpertools.helpers.HelperAttributes;\n import esa.mo.helpertools.misc.ConsumerServiceImpl;\n@@ -61,11 +60,11 @@\n   private static final Logger LOGGER\n       = Logger.getLogger(EventNanomindConsumerServiceImpl.class.getName());\n \n-  private EventStub eventService = null;\n-  private SubscriptionList subs = new SubscriptionList();\n+  private final EventStub eventService;\n+  private final SubscriptionList subs = new SubscriptionList();\n \n   @Override\n-  public Object generateServiceStub(MALConsumer tmConsumer)\n+  public Object generateServiceStub(final MALConsumer tmConsumer)\n   {\n     return new EventStub(tmConsumer);\n   }\n@@ -81,7 +80,7 @@ public EventStub getEventStub()\n     return eventService;\n   }\n \n-  public EventNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetails) throws\n+  public EventNanomindConsumerServiceImpl(final SingleConnectionDetails connectionDetails) throws\n       MALException, MalformedURLException\n   {\n     if (MALContextFactory.lookupArea(MALHelper.MAL_AREA_NAME, MALHelper.MAL_AREA_VERSION) == null) {\n@@ -94,7 +93,7 @@ public EventNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetail\n \n     try {\n       EventHelper.init(MALContextFactory.getElementFactoryRegistry());\n-    } catch (MALException ex) {\n+    } catch (final MALException ex) {\n       // nothing to be done..\n     }\n \n@@ -104,7 +103,7 @@ public EventNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetail\n     if (tmConsumer != null) {\n       try {\n         tmConsumer.close();\n-      } catch (MALException ex) {\n+      } catch (final MALException ex) {\n         LOGGER.log(Level.SEVERE, null, ex);\n       }\n     }\n@@ -127,28 +126,28 @@ public void registerDefaultEventHandler() throws MALInteractionException, MALExc\n \n       @Override\n       public void monitorEventNotifyReceived(final MALMessageHeader msgHeader,\n-          final Identifier lIdentifier, final UpdateHeaderList lUpdateHeaderList,\n-          final ObjectDetailsList objectDetailsList, final ElementList elementList,\n-          Map qosProperties)\n+                                             final Identifier lIdentifier, final UpdateHeaderList lUpdateHeaderList,\n+                                             final ObjectDetailsList objectDetailsList, final ElementList elementList,\n+                                             final Map qosProperties)\n       {\n         if (objectDetailsList.size() == lUpdateHeaderList.size()) {\n           for (int i = 0; i < lUpdateHeaderList.size(); i++) {\n \n-            Identifier entityKey1 = lUpdateHeaderList.get(i).getKey().getFirstSubKey();\n-            Long entityKey2 = lUpdateHeaderList.get(i).getKey().getSecondSubKey();\n-            Long entityKey3 = lUpdateHeaderList.get(i).getKey().getThirdSubKey();\n-            Long entityKey4 = lUpdateHeaderList.get(i).getKey().getFourthSubKey(); // ObjType of the source\n+            final Identifier entityKey1 = lUpdateHeaderList.get(i).getKey().getFirstSubKey();\n+            final Long entityKey2 = lUpdateHeaderList.get(i).getKey().getSecondSubKey();\n+            final Long entityKey3 = lUpdateHeaderList.get(i).getKey().getThirdSubKey();\n+            final Long entityKey4 = lUpdateHeaderList.get(i).getKey().getFourthSubKey(); // ObjType of the source\n \n             // (UShort area, UShort service, UOctet version, UShort number)\n             // (UShort area, UShort service, UOctet version, 0)\n-            ObjectType objType = HelperCOM.objectTypeId2objectType(entityKey2);\n+            final ObjectType objType = HelperCOM.objectTypeId2objectType(entityKey2);\n             objType.setNumber(new UShort(Integer.parseInt(entityKey1.toString())));\n \n-            Object nativeBody = ((elementList == null) ? null : elementList.get(i));\n-            Element body = (Element) HelperAttributes.javaType2Attribute(nativeBody);\n+            final Object nativeBody = ((elementList == null) ? null : elementList.get(i));\n+            final Element body = (Element) HelperAttributes.javaType2Attribute(nativeBody);\n \n             // ----\n-            EventCOMObject newEvent = new EventCOMObject();\n+            final EventCOMObject newEvent = new EventCOMObject();\n //                        newEvent.setDomain(msgHeader.getDomain());\n             newEvent.setDomain(connectionDetails.getDomain());\n             newEvent.setObjType(objType);\n@@ -184,21 +183,21 @@ public void closeConnection()\n       try {\n         final IdentifierList subLst = new IdentifierList();\n \n-        for (Subscription sub : subs) {\n+        for (final Subscription sub : subs) {\n           subLst.add(sub.getSubscriptionId());\n         }\n \n         if (eventService != null) {\n           try {\n             eventService.monitorEventDeregister(subLst);\n-          } catch (MALInteractionException ex) {\n+          } catch (final MALInteractionException ex) {\n             LOGGER.log(Level.SEVERE,\n                 null, ex);\n           }\n         }\n \n         tmConsumer.close();\n-      } catch (MALException ex) {\n+      } catch (final MALException ex) {\n         Logger.getLogger(ConsumerServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n       }\n     }"
  },
  {
    "sha": "d882f80b32ec0b35c80b993e0b829ea418d92f12",
    "filename": "nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/ExperimentWDNanomindConsumerServiceImpl.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/ExperimentWDNanomindConsumerServiceImpl.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/ExperimentWDNanomindConsumerServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/ExperimentWDNanomindConsumerServiceImpl.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -41,10 +41,10 @@\n  */\n public class ExperimentWDNanomindConsumerServiceImpl extends ConsumerServiceImpl {\n \n-    private ExperimentWDStub experimentWDNanomindService = null;\n+    private final ExperimentWDStub experimentWDNanomindService;\n \n     @Override\n-    public Object generateServiceStub(MALConsumer tmConsumer) {\n+    public Object generateServiceStub(final MALConsumer tmConsumer) {\n         return new ExperimentWDStub(tmConsumer);\n     }\n \n@@ -57,7 +57,7 @@ public Object getStub() {\n         return getExperimentWDNanomindStub();\n     }\n \n-    public ExperimentWDNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetails) throws MALException, MalformedURLException {\n+    public ExperimentWDNanomindConsumerServiceImpl(final SingleConnectionDetails connectionDetails) throws MALException, MalformedURLException {\n \n         if (MALContextFactory.lookupArea(MALHelper.MAL_AREA_NAME, MALHelper.MAL_AREA_VERSION) == null) {\n             MALHelper.init(MALContextFactory.getElementFactoryRegistry());\n@@ -73,7 +73,7 @@ public ExperimentWDNanomindConsumerServiceImpl(SingleConnectionDetails connectio\n \n         try {\n             ExperimentWDHelper.init(MALContextFactory.getElementFactoryRegistry());\n-        } catch (MALException ex) {\n+        } catch (final MALException ex) {\n         }\n \n         connection = new ConnectionConsumer();\n@@ -83,7 +83,7 @@ public ExperimentWDNanomindConsumerServiceImpl(SingleConnectionDetails connectio\n         if (tmConsumer != null) {\n             try {\n                 tmConsumer.close();\n-            } catch (MALException ex) {\n+            } catch (final MALException ex) {\n                 Logger.getLogger(ExperimentWDNanomindConsumerServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n             }\n         }"
  },
  {
    "sha": "65db5d82712d83850dd851b1a33939ea4a42a603",
    "filename": "nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/GPSNanomindConsumerServiceImpl.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/GPSNanomindConsumerServiceImpl.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/GPSNanomindConsumerServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/GPSNanomindConsumerServiceImpl.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -41,10 +41,10 @@\n  */\n public class GPSNanomindConsumerServiceImpl extends ConsumerServiceImpl {\n \n-    private GPSStub gpsNanomindService = null;\n+    private final GPSStub gpsNanomindService;\n \n     @Override\n-    public Object generateServiceStub(MALConsumer tmConsumer) {\n+    public Object generateServiceStub(final MALConsumer tmConsumer) {\n         return new GPSStub(tmConsumer);\n     }\n \n@@ -57,7 +57,7 @@ public Object getStub() {\n         return getGPSNanomindStub();\n     }\n \n-    public GPSNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetails) throws MALException, MalformedURLException {\n+    public GPSNanomindConsumerServiceImpl(final SingleConnectionDetails connectionDetails) throws MALException, MalformedURLException {\n \n         if (MALContextFactory.lookupArea(MALHelper.MAL_AREA_NAME, MALHelper.MAL_AREA_VERSION) == null) {\n             MALHelper.init(MALContextFactory.getElementFactoryRegistry());\n@@ -73,7 +73,7 @@ public GPSNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetails)\n \n         try {\n             GPSHelper.init(MALContextFactory.getElementFactoryRegistry());\n-        } catch (MALException ex) {\n+        } catch (final MALException ex) {\n         }\n         \n         connection = new ConnectionConsumer();\n@@ -83,7 +83,7 @@ public GPSNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetails)\n         if (tmConsumer != null) {\n             try {\n                 tmConsumer.close();\n-            } catch (MALException ex) {\n+            } catch (final MALException ex) {\n                 Logger.getLogger(GPSNanomindConsumerServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n             }\n         }"
  },
  {
    "sha": "731df36a26408750348a6dfdde9b00469e397777",
    "filename": "nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/PowerNanomindConsumerServiceImpl.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/PowerNanomindConsumerServiceImpl.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/PowerNanomindConsumerServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/consumer/PowerNanomindConsumerServiceImpl.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -41,10 +41,10 @@\n  */\n public class PowerNanomindConsumerServiceImpl extends ConsumerServiceImpl {\n \n-    private PowerStub powerNanomindService = null;\n+    private final PowerStub powerNanomindService;\n \n     @Override\n-    public Object generateServiceStub(MALConsumer tmConsumer) {\n+    public Object generateServiceStub(final MALConsumer tmConsumer) {\n         return new PowerStub(tmConsumer);\n     }\n \n@@ -57,7 +57,7 @@ public Object getStub() {\n         return getPowerNanomindStub();\n     }\n \n-    public PowerNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetails) throws MALException, MalformedURLException {\n+    public PowerNanomindConsumerServiceImpl(final SingleConnectionDetails connectionDetails) throws MALException, MalformedURLException {\n \n         if (MALContextFactory.lookupArea(MALHelper.MAL_AREA_NAME, MALHelper.MAL_AREA_VERSION) == null) {\n             MALHelper.init(MALContextFactory.getElementFactoryRegistry());\n@@ -73,7 +73,7 @@ public PowerNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetail\n \n         try {\n             PowerHelper.init(MALContextFactory.getElementFactoryRegistry());\n-        } catch (MALException ex) {\n+        } catch (final MALException ex) {\n         }\n \n         connection = new ConnectionConsumer();\n@@ -83,7 +83,7 @@ public PowerNanomindConsumerServiceImpl(SingleConnectionDetails connectionDetail\n         if (tmConsumer != null) {\n             try {\n                 tmConsumer.close();\n-            } catch (MALException ex) {\n+            } catch (final MALException ex) {\n                 Logger.getLogger(PowerNanomindConsumerServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n             }\n         }"
  },
  {
    "sha": "0d9055d0c6a3661775de17bf385ac8197ed189dc",
    "filename": "nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/EventCOMObject.java",
    "status": "modified",
    "additions": 9,
    "deletions": 9,
    "changes": 18,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/EventCOMObject.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/EventCOMObject.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/EventCOMObject.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -117,47 +117,47 @@ public URI getSourceURI()\n     return sourceURI;\n   }\n \n-  public void setDomain(IdentifierList domain)\n+  public void setDomain(final IdentifierList domain)\n   {\n     this.domain = domain;\n   }\n \n-  public void setObjType(ObjectType objType)\n+  public void setObjType(final ObjectType objType)\n   {\n     this.objType = objType;\n   }\n \n-  public void setObjId(Long objId)\n+  public void setObjId(final Long objId)\n   {\n     this.objId = objId;\n   }\n \n-  public void setSource(ObjectId source)\n+  public void setSource(final ObjectId source)\n   {\n     this.source = source;\n   }\n \n-  public void setRelated(Long related)\n+  public void setRelated(final Long related)\n   {\n     this.related = related;\n   }\n \n-  public void setBody(Element body)\n+  public void setBody(final Element body)\n   {\n     this.body = body;\n   }\n \n-  public void setTimestamp(Time timestamp)\n+  public void setTimestamp(final Time timestamp)\n   {\n     this.timestamp = timestamp;\n   }\n \n-  public void setNetworkZone(Identifier networkZone)\n+  public void setNetworkZone(final Identifier networkZone)\n   {\n     this.networkZone = networkZone;\n   }\n \n-  public void setSourceURI(URI sourceURI)\n+  public void setSourceURI(final URI sourceURI)\n   {\n     this.sourceURI = sourceURI;\n   }"
  },
  {
    "sha": "381fc71db654315dfbb493ea0d9e4db03ba908c1",
    "filename": "nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/HelperCOM.java",
    "status": "modified",
    "additions": 26,
    "deletions": 28,
    "changes": 54,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/HelperCOM.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/HelperCOM.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/HelperCOM.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -56,7 +56,7 @@\n      * @param rightHandSide The right hand side value of the expression\n      * @return The boolean value of the evaluation. Null if not evaluated.\n      */\n-    public static Boolean evaluateExpression(Element leftHandSide, ExpressionOperator operator, Attribute rightHandSide) {\n+    public static Boolean evaluateExpression(Element leftHandSide, final ExpressionOperator operator, Attribute rightHandSide) {\n \n         if (operator == null) {\n             return null; // Operator cannot be null\n@@ -94,7 +94,7 @@ public static Boolean evaluateExpression(Element leftHandSide, ExpressionOperato\n         }\n \n         // if one of the sides is string, then we shall do a comparison between strings:\n-        boolean stringComparison = HelperMisc.isStringAttribute(rightHandSide)\n+        final boolean stringComparison = HelperMisc.isStringAttribute(rightHandSide)\n                 || HelperMisc.isStringAttribute(rightHandSide);\n \n         String rightHandSideString = null;\n@@ -180,7 +180,7 @@ public static Boolean evaluateExpression(Element leftHandSide, ExpressionOperato\n      * @param objType COM Object Type\n      * @return COMObject object\n      */\n-    public static COMObject objType2COMObject(ObjectType objType) {\n+    public static COMObject objType2COMObject(final ObjectType objType) {\n \n         if (objType == null) {\n             return null;\n@@ -190,7 +190,7 @@ public static COMObject objType2COMObject(ObjectType objType) {\n             return null;\n         }\n \n-        COMService service = (COMService) MALContextFactory.lookupArea(\n+        final COMService service = (COMService) MALContextFactory.lookupArea(\n                 objType.getArea(),\n                 objType.getAreaVersion()\n         ).getServiceByNumber(objType.getService());\n@@ -210,7 +210,7 @@ public static COMObject objType2COMObject(ObjectType objType) {\n      * @param serviceNumber Service number\n      * @return COMService\n      */\n-    public static COMService findCOMService(UShort area, UOctet areaVersion, UShort serviceNumber) {\n+    public static COMService findCOMService(final UShort area, final UOctet areaVersion, final UShort serviceNumber) {\n         return (COMService) MALContextFactory.lookupArea(\n                 area,\n                 areaVersion\n@@ -255,7 +255,7 @@ public static Boolean domainContainsWildcard(final IdentifierList receivedDomain\n             return true;\n         }\n \n-        for (Identifier part : receivedDomain) {\n+        for (final Identifier part : receivedDomain) {\n             if (\"*\".equals(part.getValue())) {\n                 return true;\n             }\n@@ -270,21 +270,21 @@ public static Boolean domainContainsWildcard(final IdentifierList receivedDomain\n      * @param wilcardDomain Domain with wildcard\n      * @return True if the domain matches the domain with the wildcard\n      */\n-    public static boolean domainMatchesWildcardDomain(IdentifierList domain, IdentifierList wilcardDomain) {\n+    public static boolean domainMatchesWildcardDomain(final IdentifierList domain, final IdentifierList wilcardDomain) {\n         // The domain of the wildcard can never be greater than the real domain\n         if (wilcardDomain.size() > domain.size() + 1) {\n             return false;\n         }\n \n         // cycle through the parts of the domains\n         for (int i = 0; i < wilcardDomain.size(); i++) {\n-            Identifier domainPart1 = wilcardDomain.get(i);\n+            final Identifier domainPart1 = wilcardDomain.get(i);\n \n             if (\"*\".equals(domainPart1.toString())) {\n                 return true;  // Wildcard found!\n             }\n \n-            Identifier domainPart2 = domain.get(i);\n+            final Identifier domainPart2 = domain.get(i);\n \n             // The parts are different, return false\n             if (!domainPart1.toString().equals(domainPart2.toString())) {\n@@ -302,7 +302,7 @@ public static boolean domainMatchesWildcardDomain(IdentifierList domain, Identif\n      * @param objNumber Object number\n      * @return The ObjectType object\n      */\n-    public static ObjectType generateCOMObjectType(MALService service, UShort objNumber) {\n+    public static ObjectType generateCOMObjectType(final MALService service, final UShort objNumber) {\n \n         if (service == null || objNumber == null) {\n             return null;\n@@ -329,7 +329,7 @@ public static ObjectType generateCOMObjectType(MALService service, UShort objNum\n      * @return The ObjectType object\n      */\n     @Deprecated\n-    public static ObjectType generateCOMObjectType(int area, int service, int version, int number) {\n+    public static ObjectType generateCOMObjectType(final int area, final int service, final int version, final int number) {\n         return new ObjectType(\n                 new UShort(area),\n                 new UShort(service),\n@@ -344,15 +344,15 @@ public static ObjectType generateCOMObjectType(int area, int service, int versio\n      * @param objectType Object type object\n      * @return Subkey\n      */\n-    public static Long generateSubKey(ObjectType objectType) {\n+    public static Long generateSubKey(final ObjectType objectType) {\n         if (objectType == null) {\n             return null;\n         }\n \n-        long areaVal = (long) objectType.getArea().getValue();\n-        long serviceVal = (long) objectType.getService().getValue();\n-        long versionVal = (long) objectType.getVersion().getValue();\n-        long numberVal = (long) objectType.getNumber().getValue();\n+        final long areaVal = (long) objectType.getArea().getValue();\n+        final long serviceVal = (long) objectType.getService().getValue();\n+        final long versionVal = (long) objectType.getVersion().getValue();\n+        final long numberVal = (long) objectType.getNumber().getValue();\n \n         return (numberVal\n                 | (versionVal << 24)\n@@ -367,8 +367,8 @@ public static Long generateSubKey(ObjectType objectType) {\n      * @param subkey Subkey of the COM object\n      * @return ObjectType object\n      */\n-    public static ObjectType objectTypeId2objectType(Long subkey) {\n-        final long unwrap = (long) subkey;\n+    public static ObjectType objectTypeId2objectType(final Long subkey) {\n+        final long unwrap = subkey;\n \n         return new ObjectType(new UShort((short) (unwrap >> 48)),\n                 new UShort((short) (unwrap >> 32)),\n@@ -384,7 +384,7 @@ public static ObjectType objectTypeId2objectType(Long subkey) {\n      * if exactly one argument is null, false is returned.\n      * Otherwise, equality is determined by using the equals method of the first argument.\n      */\n-    private static boolean objectEquals(Object a, Object b) {\n+    private static boolean objectEquals(final Object a, final Object b) {\n         if (a == null && b == null) {\n             return true;\n         }\n@@ -394,22 +394,20 @@ private static boolean objectEquals(Object a, Object b) {\n         return a.equals(b);\n     }\n \n-    public static Object getNestedObject(Object in, String fieldName) throws NoSuchFieldException {\n+    public static Object getNestedObject(final Object in, final String fieldName) throws NoSuchFieldException {\n         Object obj = in;\n-        String[] parts = fieldName.split(\"\\\\.\");\n+        final String[] parts = fieldName.split(\"\\\\.\");\n \n         try {\n-            for (String part : parts) {\n+            for (final String part : parts) {\n                 if (!part.equals(\"\")) {\n                     obj = HelperCOM.getObjectInsideObject(part, obj);\n                 } else {\n                     // Then it is a Enumeration\n //                            obj = ((Enumeration) obj).getNumericValue();\n                 }\n             }\n-        } catch (IllegalArgumentException ex) {\n-            throw new NoSuchFieldException();\n-        } catch (IllegalAccessException ex) {\n+        } catch (final IllegalArgumentException | IllegalAccessException ex) {\n             throw new NoSuchFieldException();\n         }\n \n@@ -426,7 +424,7 @@ private static Object getObjectInsideObject(final String fieldName, final Object\n             throw new NoSuchFieldException();\n         }\n \n-        Field field = obj.getClass().getDeclaredField(fieldName);\n+        final Field field = obj.getClass().getDeclaredField(fieldName);\n         field.setAccessible(true);\n         return field.get(obj);\n     }\n@@ -440,11 +438,11 @@ private static Object getObjectInsideObject(final String fieldName, final Object\n      * of the service to be selected.\n      * @return\n      */\n-    public static Subscription generateSubscriptionCOMEvent(String identifier, ObjectType objType) {\n+    public static Subscription generateSubscriptionCOMEvent(final String identifier, final ObjectType objType) {\n         final Long secondEntityKey = 0xFFFFFFFFFF000000L & HelperCOM.generateSubKey(objType);\n         final Random random = new Random();\n         return ConnectionConsumer.subscriptionKeys(\n                 new Identifier(identifier + random.nextInt()),\n-                new Identifier(\"*\"), secondEntityKey, new Long(0), new Long(0));\n+                new Identifier(\"*\"), secondEntityKey, 0L, 0L);\n     }\n }"
  },
  {
    "sha": "3318cd0cd7833739c296ca7acf0c537f38ad8777",
    "filename": "nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/NanomindServicesConsumer.java",
    "status": "modified",
    "additions": 10,
    "deletions": 10,
    "changes": 20,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/NanomindServicesConsumer.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/NanomindServicesConsumer.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/nanomind-connector/mo-consumers/src/main/java/esa/mo/nanomind/impl/util/NanomindServicesConsumer.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -71,14 +71,14 @@ public void init(){\n         System.setProperty(\"org.ccsds.moims.mo.malspp.sessionNameFlag\", \"false\");\n         System.setProperty(\"org.ccsds.moims.mo.malspp.timestampFlag\", \"false\");\n \n-        SingleConnectionDetails details;\n+        final SingleConnectionDetails details;\n \n         try {\n             // Connection settings to the GPS Nanomind service\n             details = new SingleConnectionDetails();\n-            IdentifierList domain = new IdentifierList();\n+            final IdentifierList domain = new IdentifierList();\n             domain.add(new Identifier(\"OPSSAT\"));\n-            URI brokerURI = null;\n+            final URI brokerURI = null;\n             details.setBrokerURI(brokerURI);\n             details.setProviderURI(MAL_SPP_BINDINDING + \":247/\" + NANOMIND_APID + \"/\" + SOURCE_ID);\n             details.setDomain(domain);\n@@ -92,7 +92,7 @@ public void init(){\n \n             // Add the other services!!\n             \n-        } catch (MALException | MalformedURLException |\n+        } catch (final MALException | MalformedURLException |\n             MALInteractionException ex) {\n             LOGGER.log(Level.SEVERE, null, ex);\n         }\n@@ -115,24 +115,24 @@ public AggregationNanomindConsumerServiceImpl getAggregationNanomindService() {\n     }\n \n     public void setServices(\n-            GPSNanomindConsumerServiceImpl gpsNanomindService,\n-            PowerNanomindConsumerServiceImpl powerNanomindService,\n-            ExperimentWDNanomindConsumerServiceImpl experimentWDNanomindService\n+            final GPSNanomindConsumerServiceImpl gpsNanomindService,\n+            final PowerNanomindConsumerServiceImpl powerNanomindService,\n+            final ExperimentWDNanomindConsumerServiceImpl experimentWDNanomindService\n     ) {\n         this.gpsNanomindService = gpsNanomindService;\n         this.powerNanomindService = powerNanomindService;\n         this.experimentWDNanomindService = experimentWDNanomindService;\n     }\n \n-    public void setGPSNanomindService(GPSNanomindConsumerServiceImpl gpsNanomindService) {\n+    public void setGPSNanomindService(final GPSNanomindConsumerServiceImpl gpsNanomindService) {\n         this.gpsNanomindService = gpsNanomindService;\n     }\n \n-    public void setPowerNanomindService(PowerNanomindConsumerServiceImpl powerNanomindService) {\n+    public void setPowerNanomindService(final PowerNanomindConsumerServiceImpl powerNanomindService) {\n         this.powerNanomindService = powerNanomindService;\n     }\n \n-    public void setExperimentWDNanomindService(ExperimentWDNanomindConsumerServiceImpl experimentWDNanomindService) {\n+    public void setExperimentWDNanomindService(final ExperimentWDNanomindConsumerServiceImpl experimentWDNanomindService) {\n         this.experimentWDNanomindService = experimentWDNanomindService;\n     }\n "
  },
  {
    "sha": "d687bbd726cec52e5e8f7805ddb16d5e3aa17c70",
    "filename": "platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/AutonomousADCSOPSSATAdapter.java",
    "status": "modified",
    "additions": 81,
    "deletions": 86,
    "changes": 167,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/AutonomousADCSOPSSATAdapter.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/AutonomousADCSOPSSATAdapter.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/AutonomousADCSOPSSATAdapter.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -59,7 +59,7 @@\n \n   private AttitudeMode activeAttitudeMode;\n   private SEPP_IADCS_API adcsApi;\n-  private boolean initialized = false;\n+  private final boolean initialized;\n \n   // Additional parameters which need to be used for attitude mode changes.\n   private SEPP_IADCS_API_VECTOR3_XYZ_FLOAT losVector;\n@@ -74,7 +74,7 @@ public AutonomousADCSOPSSATAdapter()\n     LOGGER.log(Level.INFO, \"Initialisation\");\n     try {\n       System.loadLibrary(\"iadcs_api_jni\");\n-    } catch (Exception ex) {\n+    } catch (final Exception ex) {\n       LOGGER.log(Level.SEVERE, \"iADCS library could not be loaded!\", ex);\n       initialized = false;\n       return;\n@@ -84,14 +84,14 @@ public AutonomousADCSOPSSATAdapter()\n     try {\n       // Try running a short command as a ping\n       adcsApi.Get_Epoch_Time();\n-    } catch (Exception e) {\n+    } catch (final Exception e) {\n       LOGGER.log(Level.SEVERE, \"Failed to initialize iADCS\", e);\n       initialized = false;\n       return;\n     }\n     try {\n       dumpHKTelemetry();\n-    } catch (Exception e) {\n+    } catch (final Exception e) {\n       LOGGER.log(Level.WARNING, \"Failed to dump iADCS TM\", e);\n     }\n     initialized = true;\n@@ -114,11 +114,11 @@ public AutonomousADCSOPSSATAdapter()\n     private final float margin;\n     private boolean isHoldingPosition;\n     private boolean isX = true;\n-    private boolean isY = false;\n-    private boolean isZ = false;\n+    private boolean isY;\n+    private boolean isZ;\n     private boolean isFinshed;\n \n-    public PositionHolder(Vector3D targetVec, float margin)\n+    public PositionHolder(final Vector3D targetVec, final float margin)\n     {\n       this.targetVec = targetVec;\n       this.margin = margin;\n@@ -135,7 +135,7 @@ public void stop()\n       while (!isFinshed) {\n         try {\n           wait(1);\n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n           Logger.getLogger(AutonomousADCSOPSSATAdapter.class.getName()).log(Level.SEVERE, null, ex);\n         }\n       }\n@@ -148,16 +148,16 @@ public void run()\n           wait(1);\n \n           // get current attitude telemetry\n-          SEPP_IADCS_API_QUATERNION_FLOAT telemetry =\n+          final SEPP_IADCS_API_QUATERNION_FLOAT telemetry =\n               adcsApi.Get_Attitude_Telemetry().getATTITUDE_QUATERNION_BF();\n-          Rotation currentRotation = new Rotation(telemetry.getQ(), telemetry.getQ_I(),\n+          final Rotation currentRotation = new Rotation(telemetry.getQ(), telemetry.getQ_I(),\n               telemetry.getQ_J(), telemetry.getQ_K(), true);\n \n           /* calculate rotation angles\n              by creating a rotation from the camera vector (in spacecraft frame)\n              to the target vector\n              (which has to be transformed into spacecraft frame from ICRF, hence the applyInverse)*/\n-          Vector3D diff = new Vector3D(\n+          final Vector3D diff = new Vector3D(\n               new Rotation(new Vector3D(0, 0, -1), currentRotation.applyInverseTo(targetVec))\n                   .getAngles(RotationOrder.XYZ, RotationConvention.VECTOR_OPERATOR));\n \n@@ -226,7 +226,7 @@ by creating a rotation from the camera vector (in spacecraft frame)\n                 SEPP_IADCS_API_SINGLEAXIS_CONTROL_TARGET_AXIS.IADCS_SINGLEAXIS_CONTROL_TARGET_Z);\n           }\n \n-        } catch (InterruptedException ex) {\n+        } catch (final InterruptedException ex) {\n           Logger.getLogger(AutonomousADCSOPSSATAdapter.class.getName()).log(Level.SEVERE, null,\n               ex);\n         }\n@@ -252,22 +252,21 @@ by creating a rotation from the camera vector (in spacecraft frame)\n     }\n   }\n \n-  private SEPP_IADCS_API_ORBIT_TLE_DATA readTLEFile() throws IOException, FileNotFoundException\n-  {\n-    File f = new File(\"/etc/tle\");\n-    BufferedReader br = new BufferedReader(new FileReader(f));\n+  private SEPP_IADCS_API_ORBIT_TLE_DATA readTLEFile() throws IOException {\n+    final File f = new File(\"/etc/tle\");\n+    final BufferedReader br = new BufferedReader(new FileReader(f));\n     String s;\n-    List<String> lines = new ArrayList<String>();\n+    final List<String> lines = new ArrayList<>();\n     while ((s = br.readLine()) != null) {\n-      String l = new String(s);\n+      final String l = new String(s);\n       lines.add(l);\n     }\n     if (lines.size() == 3) {\n       lines.remove(0);\n     }\n-    SEPP_IADCS_API_ORBIT_TLE_DATA tle = new SEPP_IADCS_API_ORBIT_TLE_DATA();\n-    byte[] l1 = lines.get(0).getBytes();\n-    byte[] l2 = lines.get(1).getBytes();\n+    final SEPP_IADCS_API_ORBIT_TLE_DATA tle = new SEPP_IADCS_API_ORBIT_TLE_DATA();\n+    final byte[] l1 = lines.get(0).getBytes();\n+    final byte[] l2 = lines.get(1).getBytes();\n \n     LOGGER.log(Level.INFO,\n         \"Successfully loaded \" + l1.length + \" bytes of line 1.\");\n@@ -284,11 +283,11 @@ private SEPP_IADCS_API_ORBIT_TLE_DATA readTLEFile() throws IOException, FileNotF\n    * @param los Line of sight unit vector in body frame of the satellite.\n    * @throws IllegalArgumentException Thrown when the vector does not have length 1.\n    */\n-  public void setLOSVector(VectorF3D los) throws IllegalArgumentException\n+  public void setLOSVector(final VectorF3D los) throws IllegalArgumentException\n   {\n-    double x2 = (double) los.getX() * (double) los.getX();\n-    double y2 = (double) los.getY() * (double) los.getY();\n-    double z2 = (double) los.getZ() * (double) los.getZ();\n+    final double x2 = (double) los.getX() * (double) los.getX();\n+    final double y2 = (double) los.getY() * (double) los.getY();\n+    final double z2 = (double) los.getZ() * (double) los.getZ();\n     if (!isUnity(los)) {\n       throw new IllegalArgumentException(\"The provided line of sight vector needs to have length 1.\");\n     }\n@@ -301,7 +300,7 @@ public void setLOSVector(VectorF3D los) throws IllegalArgumentException\n    * @param flight Flight vector as unit vector in body frame of the satellite.\n    * @throws IllegalArgumentException Thrown when the vector does not have length 1.\n    */\n-  public void setFlightVector(VectorF3D flight) throws IllegalArgumentException\n+  public void setFlightVector(final VectorF3D flight) throws IllegalArgumentException\n   {\n     if (!isUnity(flight)) {\n       throw new IllegalArgumentException(\"The provided flight vector needs to have length 1.\");\n@@ -315,7 +314,7 @@ public void setFlightVector(VectorF3D flight) throws IllegalArgumentException\n    * @param target Target vector as unit vector in body frame of the satellite.\n    * @throws IllegalArgumentException Thrown when the vector is not a unit vector.\n    */\n-  public void setTargetVector(VectorF3D target) throws IllegalArgumentException\n+  public void setTargetVector(final VectorF3D target) throws IllegalArgumentException\n   {\n     if (!isUnity(target)) {\n       throw new IllegalArgumentException(\"The provided target vector needs to have length 1.\");\n@@ -329,19 +328,19 @@ public void setTargetVector(VectorF3D target) throws IllegalArgumentException\n    * @param vec The vector to be checked.\n    * @return True iff length is 1.\n    */\n-  private boolean isUnity(VectorF3D vec)\n+  private boolean isUnity(final VectorF3D vec)\n   {\n-    double x2 = (double) vec.getX() * (double) vec.getX();\n-    double y2 = (double) vec.getY() * (double) vec.getY();\n-    double z2 = (double) vec.getZ() * (double) vec.getZ();\n+    final double x2 = (double) vec.getX() * (double) vec.getX();\n+    final double y2 = (double) vec.getY() * (double) vec.getY();\n+    final double z2 = (double) vec.getZ() * (double) vec.getZ();\n     return Math.sqrt(x2 + y2 + z2) == 1.0;\n   }\n \n   private void dumpHKTelemetry()\n   {\n     LOGGER.log(Level.INFO, \"Dumping HK Telemetry...\");\n     //SEPP_IADCS_API_STANDARD_TELEMETRY stdTM = adcsApi.Get_Standard_Telemetry();\n-    SEPP_IADCS_API_POWER_STATUS_TELEMETRY powerTM = adcsApi.Get_Power_Status_Telemetry();\n+    final SEPP_IADCS_API_POWER_STATUS_TELEMETRY powerTM = adcsApi.Get_Power_Status_Telemetry();\n     //SEPP_IADCS_API_INFO_TELEMETRY infoTM = adcsApi.Get_Info_Telemetry();\n     /*Logger.getLogger(AutonomousADCSOPSSATAdapter.class.getName()).log(Level.INFO,\n         String.format(\"Standard TM:\\n\"\n@@ -412,14 +411,14 @@ private void dumpHKTelemetry()\n             infoTM.getCOMPILER_VERSION()));*/\n   }\n \n-  static private Quaternion convertAdcsApiQuaternion(SEPP_IADCS_API_QUATERNION_FLOAT in)\n+  static private Quaternion convertAdcsApiQuaternion(final SEPP_IADCS_API_QUATERNION_FLOAT in)\n   {\n     return new Quaternion(in.getQ(), in.getQ_I(), in.getQ_J(), in.getQ_K());\n   }\n \n-  static private MagnetorquersState convertAdcsApiMtqState(long in)\n+  static private MagnetorquersState convertAdcsApiMtqState(final long in)\n   {\n-    int mappedOrdinal;\n+    final int mappedOrdinal;\n     switch ((int) in) {\n       case 1:\n         mappedOrdinal = MagnetorquersState._ACTIVE_INDEX;\n@@ -435,30 +434,30 @@ static private MagnetorquersState convertAdcsApiMtqState(long in)\n     return MagnetorquersState.fromOrdinal(mappedOrdinal);\n   }\n \n-  static private SEPP_IADCS_API_VECTOR3_XYZ_FLOAT convertToAdcsApiVector(VectorF3D vec)\n+  static private SEPP_IADCS_API_VECTOR3_XYZ_FLOAT convertToAdcsApiVector(final VectorF3D vec)\n   {\n-    SEPP_IADCS_API_VECTOR3_XYZ_FLOAT sepp = new SEPP_IADCS_API_VECTOR3_XYZ_FLOAT();\n+    final SEPP_IADCS_API_VECTOR3_XYZ_FLOAT sepp = new SEPP_IADCS_API_VECTOR3_XYZ_FLOAT();\n     sepp.setX(vec.getX());\n     sepp.setY(vec.getY());\n     sepp.setZ(vec.getZ());\n     return sepp;\n   }\n \n-  static private VectorF3D convertAdcsApiVector(SEPP_IADCS_API_VECTOR3_XYZ_FLOAT in)\n+  static private VectorF3D convertAdcsApiVector(final SEPP_IADCS_API_VECTOR3_XYZ_FLOAT in)\n   {\n     return new VectorF3D(in.getX(), in.getY(), in.getZ());\n   }\n \n-  static private VectorF3D convertAdcsApiMagMoment(SEPP_IADCS_API_VECTOR3_XYZ_FLOAT in)\n+  static private VectorF3D convertAdcsApiMagMoment(final SEPP_IADCS_API_VECTOR3_XYZ_FLOAT in)\n   {\n     // Moment is provided in A*m^2\n     return new VectorF3D((float) in.getX(), (float) in.getY(), (float) in.getZ());\n   }\n \n-  static private WheelsSpeed convertAdcsApiWheelSpeed(SEPP_IADCS_API_VECTOR3_XYZ_FLOAT in1,\n-      SEPP_IADCS_API_VECTOR3_UVW_FLOAT in2)\n+  static private WheelsSpeed convertAdcsApiWheelSpeed(final SEPP_IADCS_API_VECTOR3_XYZ_FLOAT in1,\n+                                                      final SEPP_IADCS_API_VECTOR3_UVW_FLOAT in2)\n   {\n-    FloatList list = new FloatList(6);\n+    final FloatList list = new FloatList(6);\n     list.add((float) in1.getX());\n     list.add((float) in1.getY());\n     list.add((float) in1.getZ());\n@@ -469,12 +468,12 @@ static private WheelsSpeed convertAdcsApiWheelSpeed(SEPP_IADCS_API_VECTOR3_XYZ_F\n   }\n \n   @Override\n-  public void setDesiredAttitude(AttitudeMode attitude) throws IOException,\n+  public void setDesiredAttitude(final AttitudeMode attitude) throws IOException,\n       UnsupportedOperationException\n   {\n     if (attitude instanceof AttitudeModeBDot) {\n-      AttitudeModeBDot a = (AttitudeModeBDot) attitude;\n-      SEPP_IADCS_API_DETUMBLING_MODE_PARAMETERS params =\n+      final AttitudeModeBDot a = (AttitudeModeBDot) attitude;\n+      final SEPP_IADCS_API_DETUMBLING_MODE_PARAMETERS params =\n           new SEPP_IADCS_API_DETUMBLING_MODE_PARAMETERS();\n       adcsApi.Set_Epoch_Time(BigInteger.valueOf(System.currentTimeMillis()));\n       params.setSTART_EPOCH_TIME_MSEC(BigInteger.valueOf(System.currentTimeMillis()));\n@@ -486,8 +485,8 @@ public void setDesiredAttitude(AttitudeMode attitude) throws IOException,\n         throw new IOException(\n             \"LOS vector or flight vector not set. Call setLOSVector and setFlightVector before calling setDesiredAttitudeMode.\");\n       }\n-      AttitudeModeNadirPointing a = (AttitudeModeNadirPointing) attitude;\n-      SEPP_IADCS_API_TARGET_POINTING_NADIR_MODE_PARAMETERS params =\n+      final AttitudeModeNadirPointing a = (AttitudeModeNadirPointing) attitude;\n+      final SEPP_IADCS_API_TARGET_POINTING_NADIR_MODE_PARAMETERS params =\n           new SEPP_IADCS_API_TARGET_POINTING_NADIR_MODE_PARAMETERS();\n       // Set parameters\n       params.setLOS_VECTOR_BF(losVector);\n@@ -503,9 +502,9 @@ public void setDesiredAttitude(AttitudeMode attitude) throws IOException,\n       adcsApi.Start_Target_Pointing_Nadir_Mode(params);\n       activeAttitudeMode = a;\n     } else if (attitude instanceof AttitudeModeSingleSpinning) {\n-      AttitudeModeSingleSpinning a = (AttitudeModeSingleSpinning) attitude;\n-      VectorF3D target = a.getBodyAxis();\n-      SEPP_IADCS_API_SINGLEAXIS_CONTROL_TARGET_AXIS vec;\n+      final AttitudeModeSingleSpinning a = (AttitudeModeSingleSpinning) attitude;\n+      final VectorF3D target = a.getBodyAxis();\n+      final SEPP_IADCS_API_SINGLEAXIS_CONTROL_TARGET_AXIS vec;\n       if (target.equals(new VectorF3D(1.0f, 0f, 0f))) {\n         vec = SEPP_IADCS_API_SINGLEAXIS_CONTROL_TARGET_AXIS.IADCS_SINGLEAXIS_CONTROL_TARGET_X;\n       } else if (target.equals(new VectorF3D(0f, 1.0f, 0f))) {\n@@ -522,8 +521,8 @@ public void setDesiredAttitude(AttitudeMode attitude) throws IOException,\n         throw new IOException(\n             \"Target vector is not set. Call setTargetVector before calling setDesiredAttitudeMode.\");\n       }\n-      AttitudeModeSunPointing sunPointing = (AttitudeModeSunPointing) attitude;\n-      SEPP_IADCS_API_SUN_POINTING_MODE_PARAMETERS params =\n+      final AttitudeModeSunPointing sunPointing = (AttitudeModeSunPointing) attitude;\n+      final SEPP_IADCS_API_SUN_POINTING_MODE_PARAMETERS params =\n           new SEPP_IADCS_API_SUN_POINTING_MODE_PARAMETERS();\n       params.setSTART_EPOCH_TIME_MSEC(BigInteger.valueOf(0));\n       params.setSTOP_EPOCH_TIME_MSEC(BigInteger.valueOf(Long.MAX_VALUE));\n@@ -537,7 +536,7 @@ public void setDesiredAttitude(AttitudeMode attitude) throws IOException,\n         throw new IOException(\"LOS or flight vector not set.\");\n       }\n \n-      SEPP_IADCS_API_TARGET_POINTING_FIXED_MODE_PARAMETERS params =\n+      final SEPP_IADCS_API_TARGET_POINTING_FIXED_MODE_PARAMETERS params =\n           new SEPP_IADCS_API_TARGET_POINTING_FIXED_MODE_PARAMETERS();\n \n       params.setDETERMINATION_MODE(\n@@ -546,7 +545,7 @@ public void setDesiredAttitude(AttitudeMode attitude) throws IOException,\n       params.setFLIGHT_VECTOR_BF(flightVector);\n       params.setLOS_VECTOR_BF(losVector);\n       params.setUPDATE_INTERVAL_MSEC(BigInteger.valueOf(500));\n-      AttitudeModeTargetTracking a = (AttitudeModeTargetTracking) attitude;\n+      final AttitudeModeTargetTracking a = (AttitudeModeTargetTracking) attitude;\n       params.setTARGET_LATITUDE_RAD((float)FastMath.toRadians(a.getLatitude()));\n       params.setTARGET_LONGITUDE_RAD((float)FastMath.toRadians(a.getLongitude()));\n       adcsApi.Set_Epoch_Time(BigInteger.valueOf(System.currentTimeMillis()));\n@@ -558,14 +557,14 @@ public void setDesiredAttitude(AttitudeMode attitude) throws IOException,\n         throw new IOException(\"LOS or flight vector not set.\");\n       }\n \n-      SEPP_IADCS_API_TARGET_POINTING_CONST_VELOCITY_MODE_PARAMETERS params =\n+      final SEPP_IADCS_API_TARGET_POINTING_CONST_VELOCITY_MODE_PARAMETERS params =\n           new SEPP_IADCS_API_TARGET_POINTING_CONST_VELOCITY_MODE_PARAMETERS();\n       params.setFLIGHT_VECTOR_BF(flightVector);\n       params.setLOS_VECTOR_BF(losVector);\n       params.setDETERMINATION_MODE(\n           SEPP_IADCS_API_TARGET_POINTING_ATTITUDE_DETERMINATION_MODES.IADCS_ATTITUDE_DETERMINATION_STARTRACKER_ONLY);\n       params.setOFFSET_TIME_MSEC(BigInteger.valueOf(0));\n-      AttitudeModeTargetTrackingLinear a = (AttitudeModeTargetTrackingLinear) attitude;\n+      final AttitudeModeTargetTrackingLinear a = (AttitudeModeTargetTrackingLinear) attitude;\n       params.setSTART_EPOCH_TIME_MSEC(BigInteger.valueOf(a.getStartEpoch()));\n       params.setSTOP_EPOCH_TIME_MSEC(BigInteger.valueOf(a.getEndEpoch()));\n       params.setSTART_LATITUDE_RAD((float)FastMath.toRadians(a.getLatitudeStart()));\n@@ -580,30 +579,30 @@ public void setDesiredAttitude(AttitudeMode attitude) throws IOException,\n       activeAttitudeMode = a;\n     } else if (attitude instanceof AttitudeModeVectorPointing) {\n \n-      AttitudeModeVectorPointing a = (AttitudeModeVectorPointing) attitude;\n+      final AttitudeModeVectorPointing a = (AttitudeModeVectorPointing) attitude;\n \n       holder = new PositionHolder(new Vector3D(a.getTarget().getX(), a.getTarget().getY(),\n           a.getTarget().getZ()), a.getMargin());\n-      Thread runner = new Thread(holder);\n+      final Thread runner = new Thread(holder);\n       runner.start();\n     } else {\n       throw new UnsupportedOperationException(\"Not supported yet.\");\n     }\n   }\n \n   @Override\n-  public void setAllReactionWheelSpeeds(float wheelX, float wheelY, float wheelZ, float wheelU,\n-      float wheelV, float wheelW)\n+  public void setAllReactionWheelSpeeds(final float wheelX, final float wheelY, final float wheelZ, final float wheelU,\n+                                        final float wheelV, final float wheelW)\n   {\n-    SEPP_IADCS_API_REACTIONWHEEL_SPEEDS speeds = new SEPP_IADCS_API_REACTIONWHEEL_SPEEDS();\n+    final SEPP_IADCS_API_REACTIONWHEEL_SPEEDS speeds = new SEPP_IADCS_API_REACTIONWHEEL_SPEEDS();\n \n-    SEPP_IADCS_API_VECTOR3_XYZ_FLOAT xyz = new SEPP_IADCS_API_VECTOR3_XYZ_FLOAT();\n+    final SEPP_IADCS_API_VECTOR3_XYZ_FLOAT xyz = new SEPP_IADCS_API_VECTOR3_XYZ_FLOAT();\n     xyz.setX(wheelX);\n     xyz.setY(wheelY);\n     xyz.setZ(wheelZ);\n     speeds.setINTERNAL(xyz);\n \n-    SEPP_IADCS_API_VECTOR3_UVW_FLOAT uvw = new SEPP_IADCS_API_VECTOR3_UVW_FLOAT();\n+    final SEPP_IADCS_API_VECTOR3_UVW_FLOAT uvw = new SEPP_IADCS_API_VECTOR3_UVW_FLOAT();\n     uvw.setU(wheelU);\n     uvw.setV(wheelV);\n     uvw.setW(wheelW);\n@@ -613,7 +612,7 @@ public void setAllReactionWheelSpeeds(float wheelX, float wheelY, float wheelZ,\n   }\n \n   @Override\n-  public void setReactionWheelSpeed(ReactionWheelIdentifier wheel, float Speed)\n+  public void setReactionWheelSpeed(final ReactionWheelIdentifier wheel, final float Speed)\n   {\n     if (wheel.getOrdinal() == ReactionWheelIdentifier.WHEEL_X.getOrdinal()) {\n       adcsApi.Set_ReactionWheel_Speed(SEPP_IADCS_API_REACTIONWHEELS.IADCS_REACTIONWHEEL_X, Speed);\n@@ -631,11 +630,11 @@ public void setReactionWheelSpeed(ReactionWheelIdentifier wheel, float Speed)\n   }\n \n   @Override\n-  public void setAllReactionWheelParameters(ReactionWheelParameters parameters)\n+  public void setAllReactionWheelParameters(final ReactionWheelParameters parameters)\n   {\n \n-    ReactionWheelParameters oldParams = getAllReactionWheelParameters();\n-    SEPP_IADCS_API_REACTIONWHEEL_ARRAY_PARAMETERS params =\n+    final ReactionWheelParameters oldParams = getAllReactionWheelParameters();\n+    final SEPP_IADCS_API_REACTIONWHEEL_ARRAY_PARAMETERS params =\n         new SEPP_IADCS_API_REACTIONWHEEL_ARRAY_PARAMETERS();\n \n     if (parameters.getControlMode() >= 0 && parameters.getControlMode() <= 2) {\n@@ -681,9 +680,9 @@ public void setAllReactionWheelParameters(ReactionWheelParameters parameters)\n   }\n \n   @Override\n-  public void setAllMagnetorquersDipoleMoments(Float dipoleX, Float dipoleY, Float dipoleZ)\n+  public void setAllMagnetorquersDipoleMoments(final Float dipoleX, final Float dipoleY, final Float dipoleZ)\n   {\n-    SEPP_IADCS_API_VECTOR3_XYZ_FLOAT moments = new SEPP_IADCS_API_VECTOR3_XYZ_FLOAT();\n+    final SEPP_IADCS_API_VECTOR3_XYZ_FLOAT moments = new SEPP_IADCS_API_VECTOR3_XYZ_FLOAT();\n \n     moments.setX(dipoleX);\n     moments.setY(dipoleY);\n@@ -695,7 +694,7 @@ public void setAllMagnetorquersDipoleMoments(Float dipoleX, Float dipoleY, Float\n   @Override\n   public ReactionWheelParameters getAllReactionWheelParameters()\n   {\n-    SEPP_IADCS_API_REACTIONWHEEL_ARRAY_PARAMETERS param = adcsApi.Get_ReactionWheel_All_Parameters();\n+    final SEPP_IADCS_API_REACTIONWHEEL_ARRAY_PARAMETERS param = adcsApi.Get_ReactionWheel_All_Parameters();\n     return new ReactionWheelParameters((int) param.getCONTROL_MODE(), param.getMAX_SPEED_RADPS(),\n         param.getMAX_TORQUE_NM(),\n         param.getMOMENT_OF_INERTIA_KGM2(), param.getMOTOR_CONSTANT());\n@@ -738,40 +737,36 @@ public boolean isUnitAvailable()\n   public AttitudeTelemetry getAttitudeTelemetry() throws IOException\n   {\n     boolean stateTarget = true;\n-    if (adcsApi.Get_Target_Pointing_Operation_Data_Telemetry().getSTATE_TARGET() == (short) 1){\n-      stateTarget = true;\n-    } else {\n-      stateTarget = false;\n-    }\n-    SEPP_IADCS_API_ATTITUDE_TELEMETRY attitudeTm = adcsApi.Get_Attitude_Telemetry();\n+    stateTarget = adcsApi.Get_Target_Pointing_Operation_Data_Telemetry().getSTATE_TARGET() == (short) 1;\n+    final SEPP_IADCS_API_ATTITUDE_TELEMETRY attitudeTm = adcsApi.Get_Attitude_Telemetry();\n     attitudeTm.getATTITUDE_QUATERNION_BF();\n-    Quaternion attitude = convertAdcsApiQuaternion(attitudeTm.getATTITUDE_QUATERNION_BF());\n-    VectorF3D angularVel = convertAdcsApiVector(attitudeTm.getANGULAR_VELOCITY_VECTOR_RADPS());\n-    VectorF3D magneticField = convertAdcsApiVector(\n+    final Quaternion attitude = convertAdcsApiQuaternion(attitudeTm.getATTITUDE_QUATERNION_BF());\n+    final VectorF3D angularVel = convertAdcsApiVector(attitudeTm.getANGULAR_VELOCITY_VECTOR_RADPS());\n+    final VectorF3D magneticField = convertAdcsApiVector(\n         attitudeTm.getMEASURED_MAGNETIC_FIELD_VECTOR_BF_T());\n-    VectorF3D sunVector = convertAdcsApiVector(attitudeTm.getMEASURED_SUN_VECTOR_BF());\n+    final VectorF3D sunVector = convertAdcsApiVector(attitudeTm.getMEASURED_SUN_VECTOR_BF());\n     return new AttitudeTelemetry(attitude, angularVel, sunVector, magneticField, stateTarget);\n   }\n \n   @Override\n   public ActuatorsTelemetry getActuatorsTelemetry() throws IOException\n   {\n-    SEPP_IADCS_API_ACTUATOR_TELEMETRY actuatorTm = adcsApi.Get_Actuator_Telemetry();\n-    WheelsSpeed targetSpeed = convertAdcsApiWheelSpeed(\n+    final SEPP_IADCS_API_ACTUATOR_TELEMETRY actuatorTm = adcsApi.Get_Actuator_Telemetry();\n+    final WheelsSpeed targetSpeed = convertAdcsApiWheelSpeed(\n         actuatorTm.getREACTIONWHEEL_TARGET_SPEED_VECTOR_XYZ_RADPS(),\n         actuatorTm.getREACTIONWHEEL_TARGET_SPEED_VECTOR_UVW_RADPS());\n-    WheelsSpeed currentSpeed = convertAdcsApiWheelSpeed(\n+    final WheelsSpeed currentSpeed = convertAdcsApiWheelSpeed(\n         actuatorTm.getREACTIONWHEEL_CURRENT_SPEED_VECTOR_XYZ_RADPS(),\n         actuatorTm.getREACTIONWHEEL_CURRENT_SPEED_VECTOR_UVW_RADPS());\n-    VectorF3D mtqDipoleMoment = convertAdcsApiMagMoment(\n+    final VectorF3D mtqDipoleMoment = convertAdcsApiMagMoment(\n         actuatorTm.getMAGNETORQUERS_TARGET_DIPOLE_MOMENT_VECTOR_AM2());\n-    MagnetorquersState mtqState =\n+    final MagnetorquersState mtqState =\n         convertAdcsApiMtqState(actuatorTm.getMAGNETORQUERS_CURRENT_STATE());\n     return new ActuatorsTelemetry(targetSpeed, currentSpeed, mtqDipoleMoment, mtqState);\n   }\n \n   @Override\n-  public String validateAttitudeDescriptor(AttitudeMode attitude)\n+  public String validateAttitudeDescriptor(final AttitudeMode attitude)\n   {\n     return \"\"; //Return no error for now\n   }"
  },
  {
    "sha": "149a5156dc97befff6f49028c7233f8d4b6138e5",
    "filename": "platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/CameraOPSSATAdapter.java",
    "status": "modified",
    "additions": 35,
    "deletions": 36,
    "changes": 71,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/CameraOPSSATAdapter.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/CameraOPSSATAdapter.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/CameraOPSSATAdapter.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -70,7 +70,7 @@\n   private int nativeImageWidth;\n   private bst_ims100_img_config_t imageConfig;\n   private final PictureFormatList supportedFormats = new PictureFormatList();\n-  private boolean unitAvailable = false;\n+  private final boolean unitAvailable;\n \n   private static final Logger LOGGER = Logger.getLogger(CameraOPSSATAdapter.class.getName());\n \n@@ -84,7 +84,7 @@ public CameraOPSSATAdapter()\n     LOGGER.log(Level.INFO, \"Initialisation\");\n     try {\n       System.loadLibrary(\"ims100_api_jni\");\n-    } catch (Exception ex) {\n+    } catch (final Exception ex) {\n       LOGGER.log(Level.SEVERE,\n           \"Camera library could not be loaded!\", ex);\n       unitAvailable = false;\n@@ -93,7 +93,7 @@ public CameraOPSSATAdapter()\n     imageConfig = new bst_ims100_img_config_t();\n     try {\n       this.initBSTCamera();\n-    } catch (IOException ex) {\n+    } catch (final IOException ex) {\n       LOGGER.log(Level.SEVERE,\n           \"BST Camera adapter could not be initialized!\", ex);\n       unitAvailable = false;\n@@ -115,7 +115,7 @@ private void initBSTCamera() throws IOException\n     blockDevice = System.getProperty(BLOCK_DEVICE_ATTRIBUTE, BLOCK_DEVICE_DEFAULT);\n     useWatchdog = Boolean.parseBoolean(System.getProperty(USE_WATCHDOG_ATTRIBUTE,\n         USE_WATCHDOG_DEFAULT));\n-    bst_ret_t ret = ims100_api.bst_ims100_init(serialPort, blockDevice, useWatchdog ? 1 : 0);\n+    final bst_ret_t ret = ims100_api.bst_ims100_init(serialPort, blockDevice, useWatchdog ? 1 : 0);\n     // FIXME: For now it always returns false?!?!?\n     /*if (ret != bst_ret_t.BST_RETURN_SUCCESS) {\n       throw new IOException(\"Failed to initialise BST camera (return: \" + ret.toString() + \")\");\n@@ -129,7 +129,7 @@ private void initBSTCamera() throws IOException\n \n   private synchronized void dumpHKTelemetry()\n   {\n-    bst_ims100_tele_std_t stdTM = new bst_ims100_tele_std_t();\n+    final bst_ims100_tele_std_t stdTM = new bst_ims100_tele_std_t();\n     ims100_api.bst_ims100_get_tele_std(stdTM);\n     LOGGER.log(Level.INFO,\n         String.format(\"Dumping HK Telemetry...\\n\"\n@@ -151,7 +151,7 @@ public String getExtraInfo()\n   @Override\n   public PixelResolutionList getAvailableResolutions()\n   {\n-    PixelResolutionList availableResolutions = new PixelResolutionList();\n+    final PixelResolutionList availableResolutions = new PixelResolutionList();\n     availableResolutions.add(new PixelResolution(new UInteger(nativeImageWidth), new UInteger(\n         nativeImageLength)));\n \n@@ -169,30 +169,30 @@ public synchronized Picture getPicturePreview() throws IOException\n   }\n \n   @Override\n-  public synchronized Picture takeAutoExposedPicture(CameraSettings settings) throws IOException,\n+  public synchronized Picture takeAutoExposedPicture(final CameraSettings settings) throws IOException,\n       MALException\n   {\n-    Duration defaultExposure = new Duration(0.1);\n+    final Duration defaultExposure = new Duration(0.1);\n     final double F = 4;// f^2 value of ops-sat camera\n-    double EV = Math.log(F / defaultExposure.getValue()) / Math.log(2);\n+    final double EV = Math.log(F / defaultExposure.getValue()) / Math.log(2);\n \n-    CameraSettings tmpSettings = new CameraSettings(settings.getResolution(), PictureFormat.RAW,\n+    final CameraSettings tmpSettings = new CameraSettings(settings.getResolution(), PictureFormat.RAW,\n         defaultExposure, 1.0f, 1.0f, 1.0f);\n     LOGGER.log(Level.INFO, \"take sample picture\");\n-    Picture initialPicture = takePicture(tmpSettings);\n+    final Picture initialPicture = takePicture(tmpSettings);\n \n-    BufferedImage image = OPSSATCameraDebayering.getDebayeredImage(\n+    final BufferedImage image = OPSSATCameraDebayering.getDebayeredImage(\n         initialPicture.getContent().getValue());\n \n-    int w = (int) settings.getResolution().getWidth().getValue();\n-    int h = (int) settings.getResolution().getHeight().getValue();\n-    int[] rgb = image.getRGB(0, 0, w, h, null, 0, w);\n+    final int w = (int) settings.getResolution().getWidth().getValue();\n+    final int h = (int) settings.getResolution().getHeight().getValue();\n+    final int[] rgb = image.getRGB(0, 0, w, h, null, 0, w);\n \n     double luminanceSum = 0;\n-    for (int color : rgb) {\n-      int red = (color >>> 16) & 0xFF;\n-      int green = (color >>> 8) & 0xFF;\n-      int blue = color & 0xFF; // shift by 0\n+    for (final int color : rgb) {\n+      final int red = (color >>> 16) & 0xFF;\n+      final int green = (color >>> 8) & 0xFF;\n+      final int blue = color & 0xFF; // shift by 0\n \n       //calc luminance using sRGB luminance constants\n       luminanceSum += (red * 0.2126 + green * 0.7152 + blue * 0.0722) / 255;\n@@ -201,12 +201,12 @@ public synchronized Picture takeAutoExposedPicture(CameraSettings settings) thro\n     LOGGER.log(Level.INFO, \"Luminance = {0}\", luminanceSum);\n     luminanceSum /= w * h;\n \n-    double optimal_EV =\n+    final double optimal_EV =\n         EV\n         + (Math.log(luminanceSum) / Math.log(2))\n         - (Math.log(0.5) / Math.log(2));\n \n-    double optimalExposureTime = F * Math.pow(2, -optimal_EV);\n+    final double optimalExposureTime = F * Math.pow(2, -optimal_EV);\n     LOGGER.log(Level.INFO, \"normalised Luminance = {0}\", luminanceSum);\n     LOGGER.log(Level.INFO, \"Exposure = {0}\", optimalExposureTime);\n \n@@ -216,9 +216,9 @@ public synchronized Picture takeAutoExposedPicture(CameraSettings settings) thro\n   }\n \n   @Override\n-  public synchronized Picture takePicture(CameraSettings settings) throws IOException\n+  public synchronized Picture takePicture(final CameraSettings settings) throws IOException\n   {\n-    bst_ims100_img_t image = new bst_ims100_img_t();\n+    final bst_ims100_img_t image = new bst_ims100_img_t();\n     ims100_api.bst_ims100_img_config_default(imageConfig);\n     // TODO this is not scaling but cropping the picture\n     imageConfig.setCol_start(0);\n@@ -233,10 +233,10 @@ public synchronized Picture takePicture(CameraSettings settings) throws IOExcept\n     ims100_api.bst_ims100_set_img_config(imageConfig);\n     // Each pixel of raw image is encoded as uint16\n     LOGGER.log(Level.INFO, String.format(\"Allocating native buffer\"));\n-    int dataN\n+    final int dataN\n         = (int) (settings.getResolution().getHeight().getValue() * settings.getResolution().getWidth().getValue());\n-    ByteBuffer imageData = ByteBuffer.allocateDirect(\n-        (int) (dataN * 2));\n+    final ByteBuffer imageData = ByteBuffer.allocateDirect(\n+            dataN * 2);\n     image.setData(imageData);\n     image.setData_n(dataN);\n \n@@ -248,8 +248,8 @@ public synchronized Picture takePicture(CameraSettings settings) throws IOExcept\n     byte[] rawData = new byte[imageData.capacity()];\n \n     LOGGER.log(Level.INFO, String.format(\"Copying from native buffer\"));\n-    ((ByteBuffer) (imageData.duplicate().clear())).get(rawData);\n-    CameraSettings replySettings = new CameraSettings();\n+    imageData.duplicate().clear().get(rawData);\n+    final CameraSettings replySettings = new CameraSettings();\n     replySettings.setResolution(settings.getResolution());\n     replySettings.setExposureTime(settings.getExposureTime());\n     replySettings.setGainRed(settings.getGainRed());\n@@ -263,8 +263,7 @@ public synchronized Picture takePicture(CameraSettings settings) throws IOExcept\n       rawData = convertImage(rawData, settings.getFormat());\n     }\n     replySettings.setFormat(settings.getFormat());\n-    Picture picture = new Picture(timestamp, replySettings, new Blob(rawData));\n-    return picture;\n+    return new Picture(timestamp, replySettings, new Blob(rawData));\n   }\n \n   @Override\n@@ -279,18 +278,18 @@ public PictureFormatList getAvailableFormats()\n     return supportedFormats;\n   }\n \n-  private byte[] convertImage(byte[] rawImage, final PictureFormat targetFormat) throws\n+  private byte[] convertImage(final byte[] rawImage, final PictureFormat targetFormat) throws\n       IOException\n   {\n-    BufferedImage image = OPSSATCameraDebayering.getDebayeredImage(rawImage);\n+    final BufferedImage image = OPSSATCameraDebayering.getDebayeredImage(rawImage);\n     byte[] ret = null;\n \n-    ByteArrayOutputStream stream = new ByteArrayOutputStream();\n+    final ByteArrayOutputStream stream = new ByteArrayOutputStream();\n \n     if (targetFormat.equals(PictureFormat.RGB24)) {\n-      int w = image.getWidth();\n-      int h = image.getHeight();\n-      int[] rgba = image.getRGB(0, 0, w, h, null, 0, w);\n+      final int w = image.getWidth();\n+      final int h = image.getHeight();\n+      final int[] rgba = image.getRGB(0, 0, w, h, null, 0, w);\n       ret = new byte[rgba.length * 3];\n       for (int i = 0; i < rgba.length; ++i) {\n         final int pixelval = rgba[i];"
  },
  {
    "sha": "cc1b397288b72d08f4e6364b42e6b56bb9450389",
    "filename": "platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/GPSOPSSATAdapter.java",
    "status": "modified",
    "additions": 16,
    "deletions": 16,
    "changes": 32,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/GPSOPSSATAdapter.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/GPSOPSSATAdapter.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/GPSOPSSATAdapter.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -50,21 +50,21 @@\n   private String currentTleSentence = \"\";\n   private long tleLastModified = -1;\n \n-  public GPSOPSSATAdapter(NanomindServicesConsumer obcServicesConsumer) {\n+  public GPSOPSSATAdapter(final NanomindServicesConsumer obcServicesConsumer) {\n     this.obcServicesConsumer = obcServicesConsumer;\n   }\n \n   @Override\n-  public synchronized String getNMEASentence(String identifier) throws IOException {\n+  public synchronized String getNMEASentence(final String identifier) throws IOException {\n     Logger.getLogger(GPSOPSSATAdapter.class.getName()).log(Level.FINE, \"run getNMEASentence with \\\"{0}\\\"\", identifier);\n-    GPSHandler gpsHandler = new GPSHandler();\n+    final GPSHandler gpsHandler = new GPSHandler();\n     try {\n       obcServicesConsumer.getGPSNanomindService().getGPSNanomindStub().getGPSData(new Blob(identifier.getBytes()),\n           gpsHandler);\n-    } catch (MALInteractionException ex) {\n+    } catch (final MALInteractionException ex) {\n       Logger.getLogger(GPSOPSSATAdapter.class.getName()).log(Level.SEVERE, \"MALInteractionException {0}\", ex);\n       throw new IOException(\"Error when retrieving GPS NMEA response from Nanomind\", ex);\n-    } catch (MALException ex) {\n+    } catch (final MALException ex) {\n       Logger.getLogger(GPSOPSSATAdapter.class.getName()).log(Level.SEVERE, \"MALException {0}\", ex.getMessage());\n       throw new IOException(\"Error when retrieving GPS NMEA response from Nanomind\", ex);\n     }\n@@ -74,7 +74,7 @@ public synchronized String getNMEASentence(String identifier) throws IOException\n       } else {\n         throw new IOException(\"Internal timeout when retrieving GPS NMEA response from Nanomind\");\n       }\n-    } catch (InterruptedException e) {\n+    } catch (final InterruptedException e) {\n       throw new IOException(\"Error when retrieving GPS NMEA response from Nanomind\", e);\n     }\n   }\n@@ -88,7 +88,7 @@ public boolean isUnitAvailable()\n   public String getTLESentence() throws IOException\n   {\n     // read TLE from file\n-    File file = new File(this.TLE_LOCATION);\n+    final File file = new File(this.TLE_LOCATION);\n \n     // check if cached version is still accurate\n     if (file.lastModified() == this.tleLastModified) {\n@@ -107,12 +107,12 @@ public TwoLineElementSet getTLE()\n     String content = \"\";\n     try {\n       content = this.getTLESentence();\n-    } catch (IOException ex) {\n+    } catch (final IOException ex) {\n       Logger.getLogger(GPSOPSSATAdapter.class.getName()).log(Level.SEVERE, null, ex);\n     }\n-    String[] lines = content.split(System.lineSeparator());\n-    String line1;\n-    String line2;\n+    final String[] lines = content.split(System.lineSeparator());\n+    final String line1;\n+    final String line2;\n \n     //split TLE into two main lines\n     switch (lines.length) {\n@@ -132,7 +132,7 @@ public TwoLineElementSet getTLE()\n         return null;\n     }\n \n-    TLE tle = new TLE(line1, line2);\n+    final TLE tle = new TLE(line1, line2);\n \n     return new TwoLineElementSet(tle.getSatelliteNumber(), \"\" + tle.getClassification(),\n         tle.getLaunchYear(), tle.getLaunchNumber(), tle.getLaunchPiece(),\n@@ -148,17 +148,17 @@ public TwoLineElementSet getTLE()\n \n   private class GPSHandler extends GPSAdapter\n   {\n-    Semaphore lock = new Semaphore(0);\n+    final Semaphore lock = new Semaphore(0);\n     String response = \"\";\n \n     @Override\n     public void getGPSDataResponseReceived(\n-        org.ccsds.moims.mo.mal.transport.MALMessageHeader msgHeader,\n-        org.ccsds.moims.mo.mal.structures.Blob data, java.util.Map qosProperties)\n+            final org.ccsds.moims.mo.mal.transport.MALMessageHeader msgHeader,\n+            final org.ccsds.moims.mo.mal.structures.Blob data, final java.util.Map qosProperties)\n     {\n       try {\n         response = new String(data.getValue());\n-      } catch (MALException ex) {\n+      } catch (final MALException ex) {\n         Logger.getLogger(GPSHandler.class.getName()).log(Level.SEVERE, null, ex);\n       }\n       lock.release();"
  },
  {
    "sha": "cd05235ecad137cdc5d862d3696eb4f0340a5b94",
    "filename": "platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/OpticalRxOPSSATAdapter.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/OpticalRxOPSSATAdapter.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/OpticalRxOPSSATAdapter.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/OpticalRxOPSSATAdapter.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -31,15 +31,15 @@\n \n   private static final Logger LOGGER = Logger.getLogger(OpticalRxOPSSATAdapter.class.getName());\n   private SEPP_OPT_RX_API optRxApi;\n-  private boolean initalized = false;\n+  private final boolean initalized;\n \n   public OpticalRxOPSSATAdapter()\n   {\n     LOGGER.log(Level.INFO, \"Initialisation\");\n     try {\n       System.loadLibrary(\"opt_rx_api_jni\");\n       optRxApi = new SEPP_OPT_RX_API();\n-    } catch (Exception ex) {\n+    } catch (final Exception ex) {\n       LOGGER.log(Level.SEVERE,\n           \"OPT RX API could not be initialized!\", ex);\n       initalized = false;\n@@ -50,7 +50,7 @@ public OpticalRxOPSSATAdapter()\n   }\n \n   @Override\n-  public byte[] recordOpticalReceiverData(Duration duration)\n+  public byte[] recordOpticalReceiverData(final Duration duration)\n   {\n     if (duration == null) {\n       return null;\n@@ -62,7 +62,7 @@ public OpticalRxOPSSATAdapter()\n     optRxApi.Set_SharedMemory_IF_Switch(1);\n     try {\n       Thread.sleep((long) (duration.getValue() * 1000));\n-    } catch (InterruptedException e) {\n+    } catch (final InterruptedException e) {\n       return null;\n     }\n     optRxApi.Set_SharedMemory_IF_Switch(0);"
  },
  {
    "sha": "68d0a0642aa5c4b4125c3e3de6aa1b0239c99626",
    "filename": "platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/PowerControlOPSSATAdapter.java",
    "status": "modified",
    "additions": 19,
    "deletions": 19,
    "changes": 38,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/PowerControlOPSSATAdapter.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/PowerControlOPSSATAdapter.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/PowerControlOPSSATAdapter.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -50,7 +50,7 @@\n   private final Map<Long, PayloadDevice> payloadIdByObjInstId;\n   private static final Logger LOGGER = Logger.getLogger(PowerControlOPSSATAdapter.class.getName());\n \n-  public PowerControlOPSSATAdapter(NanomindServicesConsumer obcServicesConsumer)\n+  public PowerControlOPSSATAdapter(final NanomindServicesConsumer obcServicesConsumer)\n   {\n     this.obcServicesConsumer = obcServicesConsumer;\n     LOGGER.log(Level.INFO, \"Initialisation\");\n@@ -63,25 +63,25 @@ public PowerControlOPSSATAdapter(NanomindServicesConsumer obcServicesConsumer)\n \n   private void initDevices()\n   {\n-    addDevice(new Device(true, new Long(0), new Identifier(\n+    addDevice(new Device(true, 0L, new Identifier(\n         \"Attitude Determination and Control System\"), DeviceType.ADCS), PayloadDevice.FineADCS);\n-    addDevice(new Device(true, new Long(10), new Identifier(\n+    addDevice(new Device(true, 10L, new Identifier(\n         \"Satellite Experimental Processing Platform 1\"), DeviceType.OBC), PayloadDevice.SEPP1);\n-    addDevice(new Device(true, new Long(11), new Identifier(\n+    addDevice(new Device(true, 11L, new Identifier(\n         \"Satellite Experimental Processing Platform 2\"), DeviceType.OBC), PayloadDevice.SEPP2);\n-    addDevice(new Device(false, new Long(2), new Identifier(\"S-Band Transceiver\"), DeviceType.SBAND),\n+    addDevice(new Device(false, 2L, new Identifier(\"S-Band Transceiver\"), DeviceType.SBAND),\n         PayloadDevice.SBandTRX);\n-    addDevice(new Device(false, new Long(3), new Identifier(\"X-Band Transmitter\"), DeviceType.XBAND),\n+    addDevice(new Device(false, 3L, new Identifier(\"X-Band Transmitter\"), DeviceType.XBAND),\n         PayloadDevice.XBandTRX);\n-    addDevice(new Device(false, new Long(4), new Identifier(\"Software Defined Radio\"),\n+    addDevice(new Device(false, 4L, new Identifier(\"Software Defined Radio\"),\n         DeviceType.SDR), PayloadDevice.SDR);\n-    addDevice(new Device(false, new Long(5), new Identifier(\"Optical Receiver\"), DeviceType.OPTRX),\n+    addDevice(new Device(false, 5L, new Identifier(\"Optical Receiver\"), DeviceType.OPTRX),\n         PayloadDevice.OpticalRX);\n-    addDevice(new Device(false, new Long(6), new Identifier(\"HD Camera\"), DeviceType.CAMERA),\n+    addDevice(new Device(false, 6L, new Identifier(\"HD Camera\"), DeviceType.CAMERA),\n         PayloadDevice.HDCamera);\n   }\n \n-  private void addDevice(Device device, PayloadDevice payloadId)\n+  private void addDevice(final Device device, final PayloadDevice payloadId)\n   {\n     devices.add(device);\n     deviceByName.put(device.getName(), device);\n@@ -95,9 +95,9 @@ private void addDevice(Device device, PayloadDevice payloadId)\n     return Collections.unmodifiableMap(deviceByName);\n   }\n \n-  private Device findByType(DeviceType type)\n+  private Device findByType(final DeviceType type)\n   {\n-    for (Device device : devices) {\n+    for (final Device device : devices) {\n       if (device.getDeviceType() == type) {\n         return device;\n       }\n@@ -106,15 +106,15 @@ private Device findByType(DeviceType type)\n   }\n \n   @Override\n-  public void enableDevices(DeviceList inputList) throws IOException\n+  public void enableDevices(final DeviceList inputList) throws IOException\n   {\n-    for (Device device : inputList) {\n+    for (final Device device : inputList) {\n       LOGGER.log(Level.INFO, \"Looking up Device {0}\", new Object[]{device});\n       PayloadDevice payloadId = payloadIdByObjInstId.get(device.getUnitObjInstId());\n       if (device.getUnitObjInstId() != null) {\n         payloadId = payloadIdByObjInstId.get(device.getUnitObjInstId());\n       } else {\n-        Device found = findByType(device.getDeviceType());\n+        final Device found = findByType(device.getDeviceType());\n         if (found != null) {\n           payloadId = payloadIdByObjInstId.get(found.getUnitObjInstId());\n         } else {\n@@ -129,18 +129,18 @@ public void enableDevices(DeviceList inputList) throws IOException\n     }\n   }\n \n-  private void switchDevice(PayloadDevice device, Boolean enabled) throws IOException\n+  private void switchDevice(final PayloadDevice device, final Boolean enabled) throws IOException\n   {\n     // TODO: Track status of the device in the device list\n-    PayloadDeviceList deviceList = new PayloadDeviceList();\n-    BooleanList powerStates = new BooleanList();\n+    final PayloadDeviceList deviceList = new PayloadDeviceList();\n+    final BooleanList powerStates = new BooleanList();\n     deviceList.add(device);\n     powerStates.add(enabled);\n     LOGGER.log(Level.INFO, \"Switching device {0} to enabled: {1}\", new Object[]{device, enabled});\n     try {\n       obcServicesConsumer.getPowerNanomindService().getPowerNanomindStub().setPowerState(deviceList,\n           powerStates);\n-    } catch (MALInteractionException | MALException ex) {\n+    } catch (final MALInteractionException | MALException ex) {\n       throw new IOException(\"Cannot switch device through OBC\", ex);\n     }\n   }"
  },
  {
    "sha": "339d07366ec5d4536635227da39c3f20e5de573b",
    "filename": "platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/SDROPSSATAdapter.java",
    "status": "modified",
    "additions": 20,
    "deletions": 20,
    "changes": 40,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/SDROPSSATAdapter.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/SDROPSSATAdapter.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/platform-service-impl/src/main/java/esa/mo/platform/impl/provider/opssat/SDROPSSATAdapter.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -47,8 +47,8 @@\n   private ByteBuffer sampleBuffer;\n   private int bufferSize, bufferLength;\n \n-  private boolean initialized = false;\n-  private boolean configured = false;\n+  private final boolean initialized;\n+  private boolean configured;\n \n   public SDROPSSATAdapter()\n   {\n@@ -99,7 +99,7 @@ public SDROPSSATAdapter()\n       sdrApi.Print_Info();\n       sdrApi.Set_RF_Frontend_Input(eSDR_RFFE_INPUT.RFFE_INPUT_1);\n       sdrApi.Enable_Receiver();\n-    } catch (Exception ex) {\n+    } catch (final Exception ex) {\n       LOGGER.log(Level.SEVERE, \"SDR API could not be initialized!\", ex);\n       this.initialized = false;\n       return;\n@@ -113,23 +113,23 @@ public boolean isUnitAvailable()\n     return initialized;\n   }\n \n-  private eSDR_RFFE_RX_SAMPLING_FREQ getSamplingFreqFromFloat(float input)\n+  private eSDR_RFFE_RX_SAMPLING_FREQ getSamplingFreqFromFloat(final float input)\n   {\n-    Iterator it = samplingFreqsMap.entrySet().iterator();\n+    final Iterator it = samplingFreqsMap.entrySet().iterator();\n     while (it.hasNext()) {\n-      Map.Entry<Float, eSDR_RFFE_RX_SAMPLING_FREQ> pair = (Map.Entry) it.next();\n+      final Map.Entry<Float, eSDR_RFFE_RX_SAMPLING_FREQ> pair = (Map.Entry) it.next();\n       if (Math.abs(pair.getKey() - input) < FREQ_MATCH_EPSILON) {\n         return pair.getValue();\n       }\n     }\n     return null;\n   }\n \n-  private eSDR_RFFE_RX_LPF_BW getLPFFreqFromFloat(float input)\n+  private eSDR_RFFE_RX_LPF_BW getLPFFreqFromFloat(final float input)\n   {\n-    Iterator it = lpfFreqsMap.entrySet().iterator();\n+    final Iterator it = lpfFreqsMap.entrySet().iterator();\n     while (it.hasNext()) {\n-      Map.Entry<Float, eSDR_RFFE_RX_LPF_BW> pair = (Map.Entry) it.next();\n+      final Map.Entry<Float, eSDR_RFFE_RX_LPF_BW> pair = (Map.Entry) it.next();\n       if (Math.abs(pair.getKey() - input) < FREQ_MATCH_EPSILON) {\n         return pair.getValue();\n       }\n@@ -138,12 +138,12 @@ private eSDR_RFFE_RX_LPF_BW getLPFFreqFromFloat(float input)\n   }\n \n   @Override\n-  public boolean setConfiguration(SDRConfiguration configuration)\n+  public boolean setConfiguration(final SDRConfiguration configuration)\n   {\n     LOGGER.log(Level.INFO, \"Setting SDR configuration: {0}\", configuration);\n-    eSDR_RFFE_RX_SAMPLING_FREQ samplingFreq = getSamplingFreqFromFloat(\n+    final eSDR_RFFE_RX_SAMPLING_FREQ samplingFreq = getSamplingFreqFromFloat(\n         configuration.getRxSamplingFrequency());\n-    eSDR_RFFE_RX_LPF_BW lpfBw = getLPFFreqFromFloat(configuration.getRxLowPassBW());\n+    final eSDR_RFFE_RX_LPF_BW lpfBw = getLPFFreqFromFloat(configuration.getRxLowPassBW());\n     if (samplingFreq == null) {\n       LOGGER.log(Level.WARNING, \"Unsupported sampling frequency provided: {0} MHz\",\n           configuration.getRxSamplingFrequency());\n@@ -157,9 +157,9 @@ public boolean setConfiguration(SDRConfiguration configuration)\n       sdrApi.Calibrate_RF_Frontend();\n       // This will allocate plenty of memory, allowing to store samples from 0.1 second. Each sample pair is 2 x uint32\n       bufferLength = (int) (configuration.getRxSamplingFrequency() * 100000);\n-      bufferSize = (int) (bufferLength * 8);\n+      bufferSize = bufferLength * 8;\n       sampleBuffer = ByteBuffer.allocateDirect(bufferSize);\n-    } catch (Exception ex) {\n+    } catch (final Exception ex) {\n       LOGGER.log(Level.WARNING, \"Setting SDR configuration \" + configuration + \" failed\", ex);\n       return false;\n     }\n@@ -168,15 +168,15 @@ public boolean setConfiguration(SDRConfiguration configuration)\n   }\n \n   @Override\n-  public boolean enableSDR(Boolean enable)\n+  public boolean enableSDR(final Boolean enable)\n   {\n     LOGGER.log(Level.INFO, \"EnableSDR: {0}\", enable);\n     if (!configured) {\n       return false;\n     }\n     try {\n       sdrApi.Enable_RX_Sampling_Clock();\n-    } catch (Exception ex) {\n+    } catch (final Exception ex) {\n       LOGGER.log(Level.SEVERE, \"Enabling the SDR failed\", ex);\n       return false;\n     }\n@@ -189,12 +189,12 @@ public IQComponents getIQComponents()\n     if (!configured) {\n       return null;\n     }\n-    FloatList iList = new FloatList(bufferLength);\n-    FloatList qList = new FloatList(bufferLength);\n+    final FloatList iList = new FloatList(bufferLength);\n+    final FloatList qList = new FloatList(bufferLength);\n \n-    int[] ints = new int[bufferLength];\n+    final int[] ints = new int[bufferLength];\n     sdrApi.Receive_IQ_Samples(ints, bufferSize);\n-    IntBuffer tempBuffer = sampleBuffer.asIntBuffer();\n+    final IntBuffer tempBuffer = sampleBuffer.asIntBuffer();\n     tempBuffer.put(ints);\n     for (int i = 0; i < bufferLength; ++i) {\n       iList.add((float) (sampleBuffer.getInt() & 0xFFFFFFFFL)); // remove sign extension"
  },
  {
    "sha": "9211300813987954d68187a638655276d5a157dd",
    "filename": "platform-service-impl/src/main/java/esa/mo/platform/impl/util/PlatformServicesProviderOPSSAT.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/util/PlatformServicesProviderOPSSAT.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/platform-service-impl/src/main/java/esa/mo/platform/impl/util/PlatformServicesProviderOPSSAT.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/platform-service-impl/src/main/java/esa/mo/platform/impl/util/PlatformServicesProviderOPSSAT.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -58,19 +58,19 @@\n       = new SoftwareDefinedRadioProviderServiceImpl();\n \n   @Override\n-  public void init(COMServicesProvider comServices) throws\n+  public void init(final COMServicesProvider comServices) throws\n       MALException\n   {\n     try {\n-      NanomindServicesConsumer obcServicesConsumer = new NanomindServicesConsumer();\n+      final NanomindServicesConsumer obcServicesConsumer = new NanomindServicesConsumer();\n         obcServicesConsumer.init();\n       powerService.init(new PowerControlOPSSATAdapter(obcServicesConsumer));\n       gpsService.init(comServices, new GPSOPSSATAdapter(obcServicesConsumer));\n       adcsService.init(comServices, new AutonomousADCSOPSSATAdapter());\n       cameraService.init(comServices, new CameraOPSSATAdapter());\n       optrxService.init(new OpticalRxOPSSATAdapter());\n       sdrService.init(new SDROPSSATAdapter());\n-    } catch (UnsatisfiedLinkError | NoClassDefFoundError | NoSuchMethodError error) {\n+    } catch (final UnsatisfiedLinkError | NoClassDefFoundError | NoSuchMethodError error) {\n       LOGGER.log(Level.SEVERE,\n           \"Could not load platform adapters (check for missing JARs and libraries)\", error);\n     }"
  },
  {
    "sha": "327515ce4c71dcedacf4828efa7217477205ec4f",
    "filename": "transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/CCSDSTime.java",
    "status": "modified",
    "additions": 37,
    "deletions": 37,
    "changes": 74,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/CCSDSTime.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/CCSDSTime.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/CCSDSTime.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -46,18 +46,18 @@\n \tprivate AbsoluteDate epoch;\n \tprivate int nOctets;\n \tprivate TimeCode timeCode;\n-\tprivate int unitMultiplier;\n-\tprivate Map<String, Object> properties;\n+\tprivate final int unitMultiplier;\n+\tprivate final Map<String, Object> properties;\n \n-\tpublic static enum TimeCode {\n+\tpublic enum TimeCode {\n \n \t\tCUC, CDS, CCS\n-\t};\n+\t}\n \n \tstatic {\n \t\ttry {\n \t\t\torg.orekit.data.DataProvidersManager.getInstance().addProvider(new org.orekit.data.ClasspathCrawler(OREKIT_UTC_TAI_FILE));\n-\t\t} catch (OrekitException ex) {\n+\t\t} catch (final OrekitException ex) {\n \t\t\tthrow new java.lang.ExceptionInInitializerError(ex.getMessage());\n \t\t}\n \t}\n@@ -194,8 +194,8 @@ private void parsePField(final byte[] pField) throws MALException {\n \t\t\t\tnOctets = nBasicOctets + nFractionalOctets;\n \t\t\t\tbreak;\n \t\t\tcase CDS:\n-\t\t\t\tint nDayOctets = ((pField[0] & 0b00000100) >>> 2) == 0 ? 2 : 3;\n-\t\t\t\tint nSubMilliOctets = (pField[0] & 0b00000011) << 1;\n+\t\t\t\tfinal int nDayOctets = ((pField[0] & 0b00000100) >>> 2) == 0 ? 2 : 3;\n+\t\t\t\tfinal int nSubMilliOctets = (pField[0] & 0b00000011) << 1;\n \t\t\t\tif (nSubMilliOctets == 6) {\n \t\t\t\t\t// reserved for future use\n \t\t\t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n@@ -205,8 +205,8 @@ private void parsePField(final byte[] pField) throws MALException {\n \t\t\t\tnOctets = nDayOctets + nSubMilliOctets + 4;\n \t\t\t\tbreak;\n \t\t\tcase CCS:\n-\t\t\t\tboolean isDOY = ((pField[0] & 0b00001000) >>> 3) == 1;\n-\t\t\t\tint nResOctets = pField[0] & 0b00000111;\n+\t\t\t\tfinal boolean isDOY = ((pField[0] & 0b00001000) >>> 3) == 1;\n+\t\t\t\tfinal int nResOctets = pField[0] & 0b00000111;\n \t\t\t\tif (nResOctets == 7) {\n \t\t\t\t\t// not used\n \t\t\t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n@@ -231,10 +231,10 @@ private void parsePField(final byte[] pField) throws MALException {\n \t * @throws MALException\n \t */\n \tprivate void parseEpoch(final String epoch, final String timeScale) throws MALException {\n-\t\tAbsoluteDate parsedEpoch;\n+\t\tfinal AbsoluteDate parsedEpoch;\n \t\ttry {\n \t\t\tparsedEpoch = new AbsoluteDate(epoch, getTimeScale(timeScale));\n-\t\t} catch (IllegalArgumentException ex) {\n+\t\t} catch (final IllegalArgumentException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t\tif (this.epoch != null && !this.epoch.equals(parsedEpoch)) {\n@@ -259,21 +259,21 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \t\t\t\t\t// TODO: A bit dirty because time unit first is taken to be one second and\n \t\t\t\t\t// afterwards corrected for the real time unit used. This can be made prettier\n \t\t\t\t\t// by implementing parseCCSDSUnsegmentedTimeCode that respechts the time unit.\n-\t\t\t\t\tAbsoluteDate possiblyWrongTime = AbsoluteDate.parseCCSDSUnsegmentedTimeCode(pField[0], pField.length == 2 ? pField[1] : 0, tField, epoch);\n+\t\t\t\t\tfinal AbsoluteDate possiblyWrongTime = AbsoluteDate.parseCCSDSUnsegmentedTimeCode(pField[0], pField.length == 2 ? pField[1] : 0, tField, epoch);\n \t\t\t\t\tif (1 == unitMultiplier) {\n \t\t\t\t\t\t// time unit is one second, i.e. no correction necessary\n \t\t\t\t\t\treturn possiblyWrongTime;\n \t\t\t\t\t}\n \t\t\t\t\treturn new AbsoluteDate(epoch, possiblyWrongTime.durationFrom(epoch) / unitMultiplier);\n \t\t\t\tcase CDS:\n-\t\t\t\t\tDateComponents dEpoch = epoch.getComponents(TimeScalesFactory.getUTC()).getDate(); // CDS is a UTC-based timecode\n+\t\t\t\t\tfinal DateComponents dEpoch = epoch.getComponents(TimeScalesFactory.getUTC()).getDate(); // CDS is a UTC-based timecode\n \t\t\t\t\treturn AbsoluteDate.parseCCSDSDaySegmentedTimeCode(pField[0], tField, dEpoch);\n \t\t\t\tcase CCS:\n \t\t\t\t\treturn AbsoluteDate.parseCCSDSCalendarSegmentedTimeCode(pField[0], tField);\n \t\t\t\tdefault:\n \t\t\t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n \t\t\t}\n-\t\t} catch (OrekitException ex) {\n+\t\t} catch (final OrekitException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -292,7 +292,7 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \t * @return T-field as byte array with encoded time value.\n \t * @throws MALException\n \t */\n-\tpublic byte[] getEncodedTime(final AbsoluteDate coarseTime, final AbsoluteDate fineTime, boolean mayBeNegative) throws MALException {\n+\tpublic byte[] getEncodedTime(final AbsoluteDate coarseTime, final AbsoluteDate fineTime, final boolean mayBeNegative) throws MALException {\n \t\tif (!mayBeNegative && fineTime.compareTo(epoch) < 0) {\n \t\t\tthrow new MALException(NEGATIVE_TIME);\n \t\t}\n@@ -319,10 +319,10 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \tprivate byte[] encodeCUC(final AbsoluteDate coarseTime, final AbsoluteDate fineTime) throws MALException {\n \t\tfinal int nBasicOctets = (Integer) properties.get(\"nBasicOctets\");\n \t\tfinal int nFractionalOctets = (Integer) properties.get(\"nFractionalOctets\");\n-\t\tByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n+\t\tfinal ByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n \n-\t\tlong coarseSeconds = (long) coarseTime.durationFrom(epoch) * unitMultiplier;\n-\t\tlong fineSeconds = Math.round(fineTime.durationFrom(coarseTime) * unitMultiplier * (1L << (8 * nFractionalOctets)));\n+\t\tfinal long coarseSeconds = (long) coarseTime.durationFrom(epoch) * unitMultiplier;\n+\t\tfinal long fineSeconds = Math.round(fineTime.durationFrom(coarseTime) * unitMultiplier * (1L << (8 * nFractionalOctets)));\n \t\tfor (int i = nBasicOctets; i > 0; i--) {\n \t\t\ttField.write((byte) (coarseSeconds >> (8 * (i - 1))));\n \t\t}\n@@ -343,23 +343,23 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \tprivate byte[] encodeCDS(final AbsoluteDate time) throws MALException {\n \t\tfinal int nDayOctets = (Integer) properties.get(\"nDayOctets\");\n \t\tfinal int nSubMilliOctets = (Integer) properties.get(\"nSubMilliOctets\");\n-\t\tByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n+\t\tfinal ByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n \n-\t\tTimeScale utc;\n+\t\tfinal TimeScale utc;\n \t\ttry {\n \t\t\tutc = TimeScalesFactory.getUTC();\n-\t\t} catch (OrekitException ex) {\n+\t\t} catch (final OrekitException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n-\t\tDateTimeComponents dateTime = time.getComponents(utc);\n+\t\tfinal DateTimeComponents dateTime = time.getComponents(utc);\n \n-\t\tint days = dateTime.getDate().getJ2000Day() - epoch.getComponents(utc).getDate().getJ2000Day();\n+\t\tfinal int days = dateTime.getDate().getJ2000Day() - epoch.getComponents(utc).getDate().getJ2000Day();\n \t\tfor (int i = nDayOctets; i > 0; i--) {\n \t\t\ttField.write((byte) (days >> (8 * (i - 1))));\n \t\t}\n \n-\t\tdouble seconds = dateTime.getTime().getSecondsInUTCDay();\n-\t\tlong millisecs = (long) (seconds * 1000);\n+\t\tfinal double seconds = dateTime.getTime().getSecondsInUTCDay();\n+\t\tfinal long millisecs = (long) (seconds * 1000);\n \t\tfor (int i = 4; i > 0; i--) {\n \t\t\ttField.write((byte) (millisecs >> (8 * (i - 1))));\n \t\t}\n@@ -378,7 +378,7 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \t\t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n \t\t}\n \t\t// Don't calculate subMilliSecs from seconds in day due to possible loss of precision.\n-\t\tlong subMilliSecs = (long) ((dateTime.getTime().getSecond() * 1000 % 1) * resFactor);\n+\t\tfinal long subMilliSecs = (long) ((dateTime.getTime().getSecond() * 1000 % 1) * resFactor);\n \t\tfor (int i = nSubMilliOctets; i > 0; i--) {\n \t\t\ttField.write((byte) (subMilliSecs >> (8 * (i - 1))));\n \t\t}\n@@ -395,23 +395,23 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \tprivate byte[] encodeCCS(final AbsoluteDate time) throws MALException {\n \t\tfinal boolean isDOY = (Boolean) properties.get(\"isDOY\");\n \t\tfinal int nResOctets = (Integer) properties.get(\"nResOctets\");\n-\t\tByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n+\t\tfinal ByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n \n-\t\tTimeScale utc;\n+\t\tfinal TimeScale utc;\n \t\ttry {\n \t\t\tutc = TimeScalesFactory.getUTC();\n-\t\t} catch (OrekitException ex) {\n+\t\t} catch (final OrekitException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n-\t\tDateTimeComponents dateTime = time.getComponents(utc);\n-\t\tDateComponents date = dateTime.getDate();\n-\t\tTimeComponents t = dateTime.getTime();\n+\t\tfinal DateTimeComponents dateTime = time.getComponents(utc);\n+\t\tfinal DateComponents date = dateTime.getDate();\n+\t\tfinal TimeComponents t = dateTime.getTime();\n \n-\t\tint year = date.getYear();\n+\t\tfinal int year = date.getYear();\n \t\ttField.write(year >> 8);\n \t\ttField.write(year);\n \t\tif (isDOY) {\n-\t\t\tint doy = date.getDayOfYear();\n+\t\t\tfinal int doy = date.getDayOfYear();\n \t\t\ttField.write(doy >> 8);\n \t\t\ttField.write(doy);\n \t\t} else {\n@@ -420,7 +420,7 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \t\t}\n \t\ttField.write(t.getHour());\n \t\ttField.write(t.getMinute());\n-\t\tdouble second = t.getSecond();\n+\t\tfinal double second = t.getSecond();\n \t\ttField.write((byte) second);\n \t\t// Convert to long value here to preserve picosecond accuracy.\n \t\tlong picoSecond = (long) (second * 1000000000000L) % 1000000000000L;\n@@ -494,7 +494,7 @@ private static TimeScale getTimeScale(final String timeScale) throws MALExceptio\n \t\t\t\t\treturn TimeScalesFactory.getTT();\n \t\t\t}\n \t\t\treturn TimeScalesFactory.getUTC();\n-\t\t} catch (OrekitException ex) {\n+\t\t} catch (final OrekitException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -506,7 +506,7 @@ private static TimeScale getTimeScale(final String timeScale) throws MALExceptio\n \t * @return Byte array converted from the binary number in the String.\n \t */\n \tprivate static byte[] binaryStringToByteArray(final String s) {\n-\t\tbyte[] ba = new byte[s.length() / 8];\n+\t\tfinal byte[] ba = new byte[s.length() / 8];\n \t\tfor (int i = 0; i < s.length() / 8; i++) {\n \t\t\tba[i] = (byte) Short.parseShort(s.substring(i * 8, (i + 1) * 8), 2);\n \t\t}"
  },
  {
    "sha": "89f33d8cf15281d8686748b9cd1fa52cc2fab12b",
    "filename": "transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/Configuration.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/Configuration.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/Configuration.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/Configuration.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -73,8 +73,8 @@ public String timeEpochTimescale() {\n \t * @return Multiplier which denotes the number of time units that make up a second. Defaults to\n \t * 1.\n \t */\n-\tprivate int getUnit(String propertyName) {\n-\t\tString unitProperty = (String) properties.get(propertyName);\n+\tprivate int getUnit(final String propertyName) {\n+\t\tfinal String unitProperty = (String) properties.get(propertyName);\n \t\tif (null == unitProperty) {\n \t\t\t// time unit standard is one second if not specified otherwise\n \t\t\treturn 1;\n@@ -117,6 +117,6 @@ public String durationCodeFormat() {\n \t}\n \n \tpublic boolean varintSupported() {\n-\t\treturn Boolean.valueOf((String) properties.get(PROPERTY_VARINT_SUPPORTED));\n+\t\treturn Boolean.parseBoolean((String) properties.get(PROPERTY_VARINT_SUPPORTED));\n \t}\n }"
  },
  {
    "sha": "98d12e1c9139b661a1173fd474181e02ab6390f1",
    "filename": "transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPDecoder.java",
    "status": "modified",
    "additions": 36,
    "deletions": 41,
    "changes": 77,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPDecoder.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPDecoder.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPDecoder.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -21,8 +21,9 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n-import java.io.UnsupportedEncodingException;\n import java.math.BigInteger;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Arrays;\n import java.util.List;\n import java.util.Map;\n import org.ccsds.moims.mo.mal.MALDecoder;\n@@ -65,7 +66,7 @@ public SPPDecoder(final InputStream inputStream, final Map properties) {\n \n \t@Override\n \tpublic Boolean decodeBoolean() throws MALException {\n-\t\tbyte b = read();\n+\t\tfinal byte b = read();\n \t\tswitch (b) {\n \t\t\tcase 0:\n \t\t\t\treturn Boolean.FALSE;\n@@ -84,7 +85,7 @@ public Boolean decodeNullableBoolean() throws MALException {\n \n \t@Override\n \tpublic Float decodeFloat() throws MALException {\n-\t\tbyte[] b = read(4);\n+\t\tfinal byte[] b = read(4);\n \t\tint ret = 0;\n \t\tfor (int i = 0; i < 4; i++) {\n \t\t\tret <<= 8;\n@@ -100,7 +101,7 @@ public Float decodeNullableFloat() throws MALException {\n \n \t@Override\n \tpublic Double decodeDouble() throws MALException {\n-\t\tbyte[] b = read(8);\n+\t\tfinal byte[] b = read(8);\n \t\tlong ret = 0;\n \t\tfor (int i = 0; i < 8; i++) {\n \t\t\tret <<= 8;\n@@ -196,16 +197,12 @@ public ULong decodeNullableULong() throws MALException {\n \n \t@Override\n \tpublic String decodeString() throws MALException {\n-\t\tint length = decodeUShort().getValue();\n+\t\tfinal int length = decodeUShort().getValue();\n \t\tif (length > 65535) {\n \t\t\tthrow new MALException(LENGTH_NOT_SUPPORTED);\n \t\t}\n \t\tString ret = null;\n-\t\ttry {\n-\t\t\tret = new String(read((int) length), \"UTF-8\");\n-\t\t} catch (UnsupportedEncodingException ex) {\n-\t\t\t// UTF-8 is required by the Java Standard, this exception cannot be thrown\n-\t\t}\n+\t\tret = new String(read(length), StandardCharsets.UTF_8);\n \t\treturn ret;\n \t}\n \n@@ -216,7 +213,7 @@ public String decodeNullableString() throws MALException {\n \n \t@Override\n \tpublic Blob decodeBlob() throws MALException {\n-\t\tint length = decodeUShort().getValue();\n+\t\tfinal int length = decodeUShort().getValue();\n \t\tif (length > 65535) {\n \t\t\tthrow new MALException(LENGTH_NOT_SUPPORTED);\n \t\t}\n@@ -230,24 +227,22 @@ public Blob decodeNullableBlob() throws MALException {\n \n \t@Override\n \tpublic Duration decodeDuration() throws MALException {\n-\t\tCCSDSTime tf = getDurationFormatter();\n+\t\tfinal CCSDSTime tf = getDurationFormatter();\n \t\tif (tf.getTimeCode() != CCSDSTime.TimeCode.CUC) {\n \t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n \t\t}\n-\t\tbyte[] tField = read(tf.getDataLength());\n-\t\tAbsoluteDate time = tf.getDecodedTime(tField);\n-\t\tAbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.DURATION_EPOCH, Configuration.DURATION_EPOCH_TIMESCALE);\n+\t\tfinal byte[] tField = read(tf.getDataLength());\n+\t\tfinal AbsoluteDate time = tf.getDecodedTime(tField);\n+\t\tfinal AbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.DURATION_EPOCH, Configuration.DURATION_EPOCH_TIMESCALE);\n \t\tdouble seconds = time.durationFrom(epoch);\n \n \t\t// check sign bit of tField\n \t\tif ((tField[0] & 0x80) != 0) {\n \t\t\t// negative duration, undo 2's complement by constructing T field with every bit set\n-\t\t\tbyte[] minNegativeTimeField = new byte[tf.getDataLength()];\n-\t\t\tfor (int i = 0; i < minNegativeTimeField.length; i++) {\n-\t\t\t\tminNegativeTimeField[i] = -1;\n-\t\t\t}\n-\t\t\tAbsoluteDate minNegativeTime = tf.getDecodedTime(minNegativeTimeField);\n-\t\t\tdouble minNegativeSeconds = minNegativeTime.durationFrom(epoch);\n+\t\t\tfinal byte[] minNegativeTimeField = new byte[tf.getDataLength()];\n+\t\t\tArrays.fill(minNegativeTimeField, (byte) -1);\n+\t\t\tfinal AbsoluteDate minNegativeTime = tf.getDecodedTime(minNegativeTimeField);\n+\t\t\tfinal double minNegativeSeconds = minNegativeTime.durationFrom(epoch);\n \t\t\tseconds -= minNegativeSeconds + 1;\n \t\t}\n \n@@ -266,13 +261,13 @@ public Duration decodeNullableDuration() throws MALException {\n \n \t@Override\n \tpublic FineTime decodeFineTime() throws MALException {\n-\t\tCCSDSTime tf = getFineTimeFormatter();\n-\t\tbyte[] tField = read(tf.getDataLength());\n-\t\tAbsoluteDate time = tf.getDecodedTime(tField);\n-\t\tAbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.MAL_FINE_TIME_EPOCH, Configuration.MAL_FINE_TIME_EPOCH_TIMESCALE);\n-\t\tlong coarseSeconds = (long) time.durationFrom(epoch);\n-\t\tAbsoluteDate coarseTime = epoch.shiftedBy(coarseSeconds);\n-\t\tlong picoSeconds = coarseSeconds * 1000000000000L + Math.round(time.durationFrom(coarseTime) * 1000000000000L);\n+\t\tfinal CCSDSTime tf = getFineTimeFormatter();\n+\t\tfinal byte[] tField = read(tf.getDataLength());\n+\t\tfinal AbsoluteDate time = tf.getDecodedTime(tField);\n+\t\tfinal AbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.MAL_FINE_TIME_EPOCH, Configuration.MAL_FINE_TIME_EPOCH_TIMESCALE);\n+\t\tfinal long coarseSeconds = (long) time.durationFrom(epoch);\n+\t\tfinal AbsoluteDate coarseTime = epoch.shiftedBy(coarseSeconds);\n+\t\tfinal long picoSeconds = coarseSeconds * 1000000000000L + Math.round(time.durationFrom(coarseTime) * 1000000000000L);\n \t\treturn new FineTime(picoSeconds);\n \t}\n \n@@ -293,13 +288,13 @@ public Identifier decodeNullableIdentifier() throws MALException {\n \n \t@Override\n \tpublic Time decodeTime() throws MALException {\n-\t\tCCSDSTime tf = getTimeFormatter();\n-\t\tbyte[] tField = read(tf.getDataLength());\n-\t\tAbsoluteDate time = tf.getDecodedTime(tField);\n+\t\tfinal CCSDSTime tf = getTimeFormatter();\n+\t\tfinal byte[] tField = read(tf.getDataLength());\n+\t\tfinal AbsoluteDate time = tf.getDecodedTime(tField);\n \t\t// PENDING: Epoch for Time in MAL Java API unclear. Here: Use Java epoch.\n \t\t// Construct our own Java epoch due to bug in Orekit library (https://www.orekit.org/forge/issues/142).\n-\t\tAbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.JAVA_EPOCH, Configuration.JAVA_EPOCH_TIMESCALE);\n-\t\tdouble seconds = time.durationFrom(epoch);\n+\t\tfinal AbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.JAVA_EPOCH, Configuration.JAVA_EPOCH_TIMESCALE);\n+\t\tfinal double seconds = time.durationFrom(epoch);\n \t\treturn new Time(Math.round(seconds * 1000));\n \t}\n \n@@ -333,7 +328,7 @@ public Element decodeNullableElement(final Element element) throws IllegalArgume\n \n \t@Override\n \tpublic Attribute decodeAttribute() throws MALException {\n-\t\tint shortForm = decodeUOctet().getValue() + 1;\n+\t\tfinal int shortForm = decodeUOctet().getValue() + 1;\n \t\tswitch (shortForm) {\n \t\t\tcase Attribute._BLOB_TYPE_SHORT_FORM:\n \t\t\t\treturn decodeBlob();\n@@ -422,13 +417,13 @@ private byte read() throws MALException {\n \tprotected byte[] read(final int n) throws MALException {\n \t\ttry {\n \t\t\tif (inputStream.available() >= n) {\n-\t\t\t\tbyte[] bytes = new byte[n];\n+\t\t\t\tfinal byte[] bytes = new byte[n];\n \t\t\t\tif (n == 0 || inputStream.read(bytes, 0, n) == n) {\n \t\t\t\t\treturn bytes;\n \t\t\t\t}\n \t\t\t}\n \t\t\tthrow new MALException(INSUFFICIENT_DATA);\n-\t\t} catch (IOException ex) {\n+\t\t} catch (final IOException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -446,15 +441,15 @@ private byte read() throws MALException {\n \t */\n \tprivate BigInteger decodeVarint(final int nOctets, final boolean signed) throws MALException {\n \t\tif (!varintSupported) {\n-\t\t\tbyte[] b = read(nOctets);\n+\t\t\tfinal byte[] b = read(nOctets);\n \t\t\tif (signed) {\n \t\t\t\treturn new BigInteger(b);\n \t\t\t}\n \t\t\treturn new BigInteger(1, b);\n \t\t}\n \n \t\tBigInteger ret = BigInteger.ZERO;\n-\t\tint maxOctets = (int) Math.ceil(nOctets * 8.0 / 7.0);\n+\t\tfinal int maxOctets = (int) Math.ceil(nOctets * 8.0 / 7.0);\n \t\tint i = 0;\n \t\tbyte b;\n \t\tdo {\n@@ -485,7 +480,7 @@ private BigInteger decodeVarint(final int nOctets, final boolean signed) throws\n \t */\n \tprivate CCSDSTime getTimeFormatter() throws MALException {\n \t\tif (timeFormatter == null) {\n-\t\t\tConfiguration config = new Configuration(properties);\n+\t\t\tfinal Configuration config = new Configuration(properties);\n \t\t\ttimeFormatter = new CCSDSTime(config.timeCodeFormat(), config.timeEpoch(), config.timeEpochTimescale(), config.timeUnit());\n \t\t}\n \t\treturn timeFormatter;\n@@ -499,7 +494,7 @@ private CCSDSTime getTimeFormatter() throws MALException {\n \t */\n \tprivate CCSDSTime getFineTimeFormatter() throws MALException {\n \t\tif (fineTimeFormatter == null) {\n-\t\t\tConfiguration config = new Configuration(properties);\n+\t\t\tfinal Configuration config = new Configuration(properties);\n \t\t\tfineTimeFormatter = new CCSDSTime(config.fineTimeCodeFormat(), config.fineTimeEpoch(), config.fineTimeEpochTimescale(), config.fineTimeUnit());\n \t\t}\n \t\treturn fineTimeFormatter;\n@@ -516,7 +511,7 @@ private CCSDSTime getFineTimeFormatter() throws MALException {\n \t */\n \tprivate CCSDSTime getDurationFormatter() throws MALException {\n \t\tif (durationFormatter == null) {\n-\t\t\tConfiguration config = new Configuration(properties);\n+\t\t\tfinal Configuration config = new Configuration(properties);\n \t\t\tdurationFormatter = new CCSDSTime(config.durationCodeFormat(), Configuration.DURATION_EPOCH, Configuration.DURATION_EPOCH_TIMESCALE, config.durationUnit());\n \t\t}\n \t\treturn durationFormatter;"
  },
  {
    "sha": "067090ef476cce55e451abf77038f862a0d7e9a6",
    "filename": "transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementInputStream.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementInputStream.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementInputStream.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementInputStream.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -53,7 +53,7 @@ public Object readElement(final Object element, final MALEncodingContext ctx) th\n \t\t\treturn decoder.decodeElement(getUnionizedElement(element));\n \t\t}\n \n-\t\tServiceInfo service = new ServiceInfo(ctx);\n+\t\tfinal ServiceInfo service = new ServiceInfo(ctx);\n \t\tfinal boolean isPubSub = service.getInteraction().equals(InteractionType.PUBSUB);\n \n \t\t// Element of type List< <<Update Value Type>> > means it is not of type Identifier or\n@@ -99,8 +99,8 @@ private Object readElementPubSubPublishUpdate(final Object element, final Servic\n \t\t// flipped. Exchange the last 24 bits of the absolute short form with the sign flipped type.\n \t\tfinal Long updateValueShortForm = (updateListShortForm & ~0xFFFFFF)\n \t\t\t\t| (-(updateListShortForm & 0xFFFFFF) & 0xFFFFFF);\n-\t\tMALEncodedElementList encElemList = new MALEncodedElementList(updateValueShortForm, 10); // initial list size set arbitrarily\n-\t\tMALListDecoder listDecoder = decoder.createListDecoder(encElemList);\n+\t\tfinal MALEncodedElementList encElemList = new MALEncodedElementList(updateValueShortForm, 10); // initial list size set arbitrarily\n+\t\tfinal MALListDecoder listDecoder = decoder.createListDecoder(encElemList);\n \t\t// Treat each list element as nullable Blob. This is compatible with 3.5.3.5.1 MALSPP.\n \t\tBlob b;\n \t\twhile (listDecoder.hasNext()) {\n@@ -114,7 +114,7 @@ private Object readElementStandard(final Object element, final ServiceInfo servi\n \t\tif (service.isDeclaredAttribute()) {\n \t\t\treturn decoder.decodeAttribute();\n \t\t}\n-\t\tElement e = getPrototype(element);\n+\t\tfinal Element e = getPrototype(element);\n \t\treturn decoder.decodeElement(e);\n \t}\n \n@@ -129,7 +129,7 @@ private Object readNullableElementStandard(final Object element, final ServiceIn\n \tpublic void close() throws MALException {\n \t\ttry {\n \t\t\tis.close();\n-\t\t} catch (IOException ex) {\n+\t\t} catch (final IOException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -150,7 +150,7 @@ private static Element getUnionizedElement(final Object element) throws MALExcep\n \t\t}\n \t\ttry {\n \t\t\treturn (Element) element;\n-\t\t} catch (ClassCastException ex) {\n+\t\t} catch (final ClassCastException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -171,7 +171,7 @@ private Element getPrototype(final Object element) throws MALException {\n \t\t// Absolute short form can be read directly from input stream because encoding defined in\n \t\t// MALSPP Book (5.2.3) coincides with absolute short form definition in MAL Java API\n \t\t// (4.5.5.2.1).\n-\t\tbyte[] b = decoder.read(8);\n+\t\tfinal byte[] b = decoder.read(8);\n \t\tlong shortForm = 0;\n \t\tfor (int i = 0; i < 8; i++) {\n \t\t\tshortForm <<= 8;\n@@ -180,7 +180,7 @@ private Element getPrototype(final Object element) throws MALException {\n \t\ttry {\n \t\t\treturn getUnionizedElement(MALContextFactory.getElementFactoryRegistry()\n \t\t\t\t\t.lookupElementFactory(shortForm).createElement());\n-\t\t} catch (NullPointerException ex) {\n+\t\t} catch (final NullPointerException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}"
  },
  {
    "sha": "d752afcf26936c1be74deb590ab476f647f44ea2",
    "filename": "transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementOutputStream.java",
    "status": "modified",
    "additions": 15,
    "deletions": 15,
    "changes": 30,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementOutputStream.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementOutputStream.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementOutputStream.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -45,7 +45,7 @@\n \tprivate final SPPEncoder encoder;\n \tprotected static final String INVALID_ELEMENT_TYPE = \"Supplied element type cannot be handled by the transport layer.\";\n \n-\tprivate static enum ElementType {\n+\tprivate enum ElementType {\n \n \t\tELEMENT, JAVA_MAPPED, ENCODED_ELEMENT, ENCODED_LIST, NULL\n \t}\n@@ -62,7 +62,7 @@ public void writeElement(final Object element, final MALEncodingContext ctx) thr\n \t\t\treturn;\n \t\t}\n \n-\t\tServiceInfo service = new ServiceInfo(ctx);\n+\t\tfinal ServiceInfo service = new ServiceInfo(ctx);\n \t\tfinal boolean isPubSub = service.getInteraction().equals(InteractionType.PUBSUB);\n \n \t\t// Element of type List< <<Update Value Type>> > means it is not of type Identifier or\n@@ -107,10 +107,10 @@ private void writeElementNullContext(Object element) throws MALException {\n \t\t\t\tencoder.write(((MALEncodedElement) element).getEncodedElement().getValue());\n \t\t\t\tbreak;\n \t\t\tcase ENCODED_LIST:\n-\t\t\t\tMALEncodedElementList encodedList = (MALEncodedElementList) element;\n+\t\t\t\tfinal MALEncodedElementList encodedList = (MALEncodedElementList) element;\n \t\t\t\t// listEncoder only needed for implicitly encoding the list size\n-\t\t\t\tMALListEncoder listEncoder = encoder.createListEncoder(encodedList);\n-\t\t\t\tfor (MALEncodedElement encodedElement : encodedList) {\n+\t\t\t\tfinal MALListEncoder listEncoder = encoder.createListEncoder(encodedList);\n+\t\t\t\tfor (final MALEncodedElement encodedElement : encodedList) {\n \t\t\t\t\tencoder.encodeNulltag(encodedElement);\n \t\t\t\t\tif (encodedElement != null) {\n \t\t\t\t\t\tencoder.write(encodedElement.getEncodedElement().getValue());\n@@ -131,14 +131,14 @@ private void writeElementPubSubPublishUpdate(final Object element, final Service\n \t\t\t\tbreak;\n \t\t\tcase ELEMENT:\n \t\t\t\t// the element in question here is the update list \n-\t\t\t\tElementList<Element> updateList = (ElementList<Element>) element;\n+\t\t\t\tfinal ElementList<Element> updateList = (ElementList<Element>) element;\n \t\t\t\tif (service.isDeclaredAbstract()) {\n \t\t\t\t\tencodeShortForm(updateList.getShortForm());\n \t\t\t\t}\n \t\t\t\t// listEncoder only needed for implicitly encoding the list size\n-\t\t\t\tMALListEncoder listEncoder = encoder.createListEncoder(updateList);\n-\t\t\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n-\t\t\t\tSPPEncoder updateEncoder = new SPPEncoder(baos, encoder.getProperties());\n+\t\t\t\tfinal MALListEncoder listEncoder = encoder.createListEncoder(updateList);\n+\t\t\t\tfinal ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+\t\t\t\tfinal SPPEncoder updateEncoder = new SPPEncoder(baos, encoder.getProperties());\n \t\t\t\tfor (Object e : updateList) {\n \t\t\t\t\tencoder.encodeNulltag(e);\n \t\t\t\t\tswitch (getElementType(e)) {\n@@ -177,19 +177,19 @@ private void writeElementPubSubNotifyUpdate(final Object element, final ServiceI\n \t\t\tcase NULL:\n \t\t\t\tbreak;\n \t\t\tcase ENCODED_LIST:\n-\t\t\t\tMALEncodedElementList encodedList = (MALEncodedElementList) element;\n+\t\t\t\tfinal MALEncodedElementList encodedList = (MALEncodedElementList) element;\n \t\t\t\tfinal Long updateValueShortForm = (Long) encodedList.getShortForm();\n \t\t\t\t// updateValueShortForm denotes the element type, the corresponding list type is\n \t\t\t\t// sign flipped. Exchange the last 24 bits of the absolute short form with the sign\n \t\t\t\t// flipped type.\n-\t\t\t\tfinal Long updateListShortForm = (updateValueShortForm & ~0xFFFFFF)\n+\t\t\t\tfinal long updateListShortForm = (updateValueShortForm & ~0xFFFFFF)\n \t\t\t\t\t\t| (-(updateValueShortForm & 0xFFFFFF) & 0xFFFFFF);\n \t\t\t\tif (service.isDeclaredAbstract()) {\n \t\t\t\t\tencodeShortForm(updateListShortForm);\n \t\t\t\t}\n \t\t\t\t// listEncoder only needed for implicitly encoding the list size\n-\t\t\t\tMALListEncoder listEncoder = encoder.createListEncoder(encodedList);\n-\t\t\t\tfor (MALEncodedElement encodedElement : encodedList) {\n+\t\t\t\tfinal MALListEncoder listEncoder = encoder.createListEncoder(encodedList);\n+\t\t\t\tfor (final MALEncodedElement encodedElement : encodedList) {\n \t\t\t\t\tencoder.encodeNulltag(encodedElement);\n \t\t\t\t\tif (encodedElement != null) {\n \t\t\t\t\t\tencoder.write(encodedElement.getEncodedElement().getValue());\n@@ -278,7 +278,7 @@ private void encodeShortForm(final long shortForm) throws MALException {\n \tpublic void flush() throws MALException {\n \t\ttry {\n \t\t\tos.flush();\n-\t\t} catch (IOException ex) {\n+\t\t} catch (final IOException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -287,7 +287,7 @@ public void flush() throws MALException {\n \tpublic void close() throws MALException {\n \t\ttry {\n \t\t\tos.close();\n-\t\t} catch (IOException ex) {\n+\t\t} catch (final IOException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}"
  },
  {
    "sha": "1267695bedd6cd6bcda0eba9325712f5f5df70dd",
    "filename": "transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementStreamFactory.java",
    "status": "modified",
    "additions": 4,
    "deletions": 7,
    "changes": 11,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementStreamFactory.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementStreamFactory.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPElementStreamFactory.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -78,25 +78,22 @@ public Blob encode(final Object[] elements, final MALEncodingContext ctx) throws\n \t\t\tthrow new IllegalArgumentException(ILLEGAL_NULL_ARGUMENT);\n \t\t}\n \n-                ByteArrayOutputStream os = new ByteArrayOutputStream();\n-\t\tMALElementOutputStream eos = createOutputStream(os);\n+                final ByteArrayOutputStream os = new ByteArrayOutputStream();\n+\t\tfinal MALElementOutputStream eos = createOutputStream(os);\n \n \t\tfor (int i = 0; i < elements.length; i++) {\n \t\t\tctx.setBodyElementIndex(i);\n                     try {\n                         eos.writeElement(elements[i], ctx);\n-                    } catch (IllegalArgumentException ex) {\n+                    } catch (final IllegalArgumentException | MALException ex) {\n                         Logger.getLogger(SPPElementStreamFactory.class.getName()).log(Level.SEVERE, \"The Element is type: \" + elements[i].getClass().getName() + \" - \" + elements[i].toString(), ex);\n                         throw ex;\n-                    } catch (MALException ex1) {\n-                        Logger.getLogger(SPPElementStreamFactory.class.getName()).log(Level.SEVERE, \"The Element is type: \" + elements[i].getClass().getName() + \" - \" + elements[i].toString(), ex1);\n-                        throw ex1;\n                     }\n \t\t}\n \n \t\ttry {\n \t\t\tos.flush();\n-\t\t} catch (IOException ex) {\n+\t\t} catch (final IOException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t\treturn new Blob(os.toByteArray());"
  },
  {
    "sha": "b4b3234e1e47ca214da2517368f0b87ae2d4313c",
    "filename": "transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPEncoder.java",
    "status": "modified",
    "additions": 31,
    "deletions": 35,
    "changes": 66,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPEncoder.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPEncoder.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPEncoder.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -21,8 +21,8 @@\n \n import java.io.IOException;\n import java.io.OutputStream;\n-import java.io.UnsupportedEncodingException;\n import java.math.BigInteger;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n import java.util.Map;\n import org.ccsds.moims.mo.mal.MALEncoder;\n@@ -88,7 +88,7 @@ public void encodeFloat(final Float att) throws IllegalArgumentException, MALExc\n \t\t\tthrow new IllegalArgumentException(ILLEGAL_NULL_ARGUMENT);\n \t\t}\n \n-\t\tint b = Float.floatToRawIntBits(att);\n+\t\tfinal int b = Float.floatToRawIntBits(att);\n \t\tfor (int i = 3; i >= 0; i--) {\n \t\t\twrite(b >> (8 * i));\n \t\t}\n@@ -108,7 +108,7 @@ public void encodeDouble(final Double att) throws IllegalArgumentException, MALE\n \t\t\tthrow new IllegalArgumentException(ILLEGAL_NULL_ARGUMENT);\n \t\t}\n \n-\t\tlong b = Double.doubleToRawLongBits(att);\n+\t\tfinal long b = Double.doubleToRawLongBits(att);\n \t\tfor (int i = 7; i >= 0; i--) {\n \t\t\t// casting long to int and losing information is explicitly wanted here\n \t\t\twrite((int) (b >> (8 * i)));\n@@ -256,14 +256,10 @@ public void encodeString(final String att) throws IllegalArgumentException, MALE\n \t\tif (att == null) {\n \t\t\tthrow new IllegalArgumentException(ILLEGAL_NULL_ARGUMENT);\n \t\t}\n-\t\ttry {\n-\t\t\tbyte[] bytes = att.getBytes(\"UTF-8\");\n+\t\tfinal byte[] bytes = att.getBytes(StandardCharsets.UTF_8);\n //\t\t\tencodeUInteger(new UInteger(bytes.length));\n-\t\t\tencodeUShort(new UShort(bytes.length));\n-\t\t\twrite(bytes);\n-\t\t} catch (UnsupportedEncodingException ex) {\n-\t\t\t// UTF-8 is required by the Java Standard, this exception cannot be thrown\n-\t\t}\n+\t\tencodeUShort(new UShort(bytes.length));\n+\t\twrite(bytes);\n \t}\n \n \t@Override\n@@ -281,9 +277,9 @@ public void encodeBlob(final Blob att) throws IllegalArgumentException, MALExcep\n \t\t}\n \t\t// PENDING: Bug in MAL Java API: If the Blob is URL based, getLength() returns 0. Here:\n \t\t// Workaround by directly querying the length of the value byte array in this case.\n-\t\tint length = att.isURLBased() ? att.getValue().length : att.getLength();\n+\t\tfinal int length = att.isURLBased() ? att.getValue().length : att.getLength();\n \t\tencodeUShort(new UShort(length));\n-\t\tbyte[] value = att.getValue();\n+\t\tfinal byte[] value = att.getValue();\n \t\tif (null != value) {\n \t\t\twrite(value);\n \t\t}\n@@ -302,20 +298,20 @@ public void encodeDuration(final Duration att) throws IllegalArgumentException,\n \t\tif (att == null) {\n \t\t\tthrow new IllegalArgumentException(ILLEGAL_NULL_ARGUMENT);\n \t\t}\n-\t\tAbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.DURATION_EPOCH, Configuration.DURATION_EPOCH_TIMESCALE);\n+\t\tfinal AbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.DURATION_EPOCH, Configuration.DURATION_EPOCH_TIMESCALE);\n \t\t// PENDING: Error in MAL Java API Magenta Book, Duration should contain fractional seconds,\n \t\t// but contains integer seconds. There is nothing we can do except to wait for an updated\n \t\t// book and implementation.\n //\t\tlong ct = att.getValue();\n-\t\tdouble ct = att.getValue();\n-\t\tCCSDSTime tf = getDurationFormatter();\n+\t\tfinal double ct = att.getValue();\n+\t\tfinal CCSDSTime tf = getDurationFormatter();\n \t\tif (tf.getTimeCode() != CCSDSTime.TimeCode.CUC) {\n \t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n \t\t}\n \t\t// Split into coarseTime and fineTime in order to minimize rounding errors.\n-\t\tAbsoluteDate coarseTime = new AbsoluteDate(epoch, ct);\n-\t\tAbsoluteDate fineTime = coarseTime.shiftedBy(0);\n-\t\tbyte[] tField = tf.getEncodedTime(coarseTime, fineTime, true);\n+\t\tfinal AbsoluteDate coarseTime = new AbsoluteDate(epoch, ct);\n+\t\tfinal AbsoluteDate fineTime = coarseTime.shiftedBy(0);\n+\t\tfinal byte[] tField = tf.getEncodedTime(coarseTime, fineTime, true);\n \t\twrite(tField);\n \t}\n \n@@ -332,13 +328,13 @@ public void encodeFineTime(final FineTime att) throws IllegalArgumentException,\n \t\tif (att == null) {\n \t\t\tthrow new IllegalArgumentException(ILLEGAL_NULL_ARGUMENT);\n \t\t}\n-\t\tAbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.MAL_FINE_TIME_EPOCH, Configuration.MAL_FINE_TIME_EPOCH_TIMESCALE);\n+\t\tfinal AbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.MAL_FINE_TIME_EPOCH, Configuration.MAL_FINE_TIME_EPOCH_TIMESCALE);\n \t\t// Split into coarseTime and fineTime in order to minimize rounding errors.\n-\t\tlong ct = att.getValue() / 1000000000000L;\n-\t\tdouble ft = (att.getValue() - ct * 1000000000000L) / 1000000000000.0;\n-\t\tAbsoluteDate coarseTime = new AbsoluteDate(epoch, ct);\n-\t\tAbsoluteDate fineTime = coarseTime.shiftedBy(ft);\n-\t\tbyte[] tField = getFineTimeFormatter().getEncodedTime(coarseTime, fineTime, false);\n+\t\tfinal long ct = att.getValue() / 1000000000000L;\n+\t\tfinal double ft = (att.getValue() - ct * 1000000000000L) / 1000000000000.0;\n+\t\tfinal AbsoluteDate coarseTime = new AbsoluteDate(epoch, ct);\n+\t\tfinal AbsoluteDate fineTime = coarseTime.shiftedBy(ft);\n+\t\tfinal byte[] tField = getFineTimeFormatter().getEncodedTime(coarseTime, fineTime, false);\n \t\twrite(tField);\n \t}\n \n@@ -393,13 +389,13 @@ public void encodeTime(final Time att) throws IllegalArgumentException, MALExcep\n \t\t}\n \t\t// PENDING: Epoch for Time in MAL Java API unclear. Here: Use Java epoch.\n \t\t// Construct our own Java epoch due to bug in Orekit library (https://www.orekit.org/forge/issues/142).\n-\t\tAbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.JAVA_EPOCH, Configuration.JAVA_EPOCH_TIMESCALE);\n+\t\tfinal AbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.JAVA_EPOCH, Configuration.JAVA_EPOCH_TIMESCALE);\n \t\t// Split into coarseTime and fineTime in order to minimize rounding errors.\n-\t\tlong ct = att.getValue() / 1000;\n-\t\tdouble ft = (att.getValue() - ct * 1000) / 1000.0;\n-\t\tAbsoluteDate coarseTime = new AbsoluteDate(epoch, ct);\n-\t\tAbsoluteDate fineTime = coarseTime.shiftedBy(ft);\n-\t\tbyte[] tField = getTimeFormatter().getEncodedTime(coarseTime, fineTime, false);\n+\t\tfinal long ct = att.getValue() / 1000;\n+\t\tfinal double ft = (att.getValue() - ct * 1000) / 1000.0;\n+\t\tfinal AbsoluteDate coarseTime = new AbsoluteDate(epoch, ct);\n+\t\tfinal AbsoluteDate fineTime = coarseTime.shiftedBy(ft);\n+\t\tfinal byte[] tField = getTimeFormatter().getEncodedTime(coarseTime, fineTime, false);\n \t\twrite(tField);\n \t}\n \n@@ -483,7 +479,7 @@ public void close() {\n \tprotected void write(final byte[] b) throws MALException {\n \t\ttry {\n \t\t\toutputStream.write(b);\n-\t\t} catch (IOException ex) {\n+\t\t} catch (final IOException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -497,7 +493,7 @@ protected void write(final byte[] b) throws MALException {\n \tprotected void write(final int b) throws MALException {\n \t\ttry {\n \t\t\toutputStream.write(b);\n-\t\t} catch (IOException ex) {\n+\t\t} catch (final IOException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -562,7 +558,7 @@ private void writeVarint(BigInteger value, final int nOctets, final boolean sign\n \t */\n \tprivate CCSDSTime getTimeFormatter() throws MALException {\n \t\tif (timeFormatter == null) {\n-\t\t\tConfiguration config = new Configuration(properties);\n+\t\t\tfinal Configuration config = new Configuration(properties);\n \t\t\ttimeFormatter = new CCSDSTime(config.timeCodeFormat(), config.timeEpoch(), config.timeEpochTimescale(), config.timeUnit());\n \t\t}\n \t\treturn timeFormatter;\n@@ -576,7 +572,7 @@ private CCSDSTime getTimeFormatter() throws MALException {\n \t */\n \tprivate CCSDSTime getFineTimeFormatter() throws MALException {\n \t\tif (fineTimeFormatter == null) {\n-\t\t\tConfiguration config = new Configuration(properties);\n+\t\t\tfinal Configuration config = new Configuration(properties);\n \t\t\tfineTimeFormatter = new CCSDSTime(config.fineTimeCodeFormat(), config.fineTimeEpoch(), config.fineTimeEpochTimescale(), config.fineTimeUnit());\n \t\t}\n \t\treturn fineTimeFormatter;\n@@ -593,7 +589,7 @@ private CCSDSTime getFineTimeFormatter() throws MALException {\n \t */\n \tprivate CCSDSTime getDurationFormatter() throws MALException {\n \t\tif (durationFormatter == null) {\n-\t\t\tConfiguration config = new Configuration(properties);\n+\t\t\tfinal Configuration config = new Configuration(properties);\n \t\t\tdurationFormatter = new CCSDSTime(config.durationCodeFormat(), Configuration.DURATION_EPOCH, Configuration.DURATION_EPOCH_TIMESCALE, config.durationUnit());\n \t\t}\n \t\treturn durationFormatter;"
  },
  {
    "sha": "6acf24a0f743de32198a55396d5d901649894c29",
    "filename": "transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPListDecoder.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPListDecoder.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPListDecoder.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPListDecoder.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -32,7 +32,7 @@\n \n     public SPPListDecoder(final InputStream inputStream, final List list, final Map properties) throws MALException {\n         super(inputStream, properties);\n-\t\tint listSize = decodeUShort().getValue();\n+\t\tfinal int listSize = decodeUShort().getValue();\n         if (listSize > 65535) {\n             throw new MALException(LENGTH_NOT_SUPPORTED);\n         }"
  },
  {
    "sha": "0db0770db46f7ce7e0188cbf15890f6211be6f70",
    "filename": "transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/ServiceInfo.java",
    "status": "modified",
    "additions": 21,
    "deletions": 23,
    "changes": 44,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/ServiceInfo.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/ServiceInfo.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding-opssat/src/main/java/de/dlr/gsoc/mo/malspp/encoding/ServiceInfo.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -40,33 +40,31 @@\n \tprivate final Boolean isError;\n \tprivate final Boolean isDeclaredAbstract;\n \tprivate Boolean isDeclaredAttribute;\n-\tprivate static final Collection<Long> attributeShortForms = Arrays.asList(new Long[]{\n-\t\tAttribute.BOOLEAN_SHORT_FORM,\n-\t\tAttribute.FLOAT_SHORT_FORM,\n-\t\tAttribute.DOUBLE_SHORT_FORM,\n-\t\tAttribute.OCTET_SHORT_FORM,\n-\t\tAttribute.SHORT_SHORT_FORM,\n-\t\tAttribute.INTEGER_SHORT_FORM,\n-\t\tAttribute.LONG_SHORT_FORM,\n-\t\tAttribute.STRING_SHORT_FORM,\n-\t\tAttribute.BLOB_SHORT_FORM,\n-\t\tAttribute.DURATION_SHORT_FORM,\n-\t\tAttribute.IDENTIFIER_SHORT_FORM,\n-\t\tAttribute.TIME_SHORT_FORM,\n-\t\tAttribute.FINETIME_SHORT_FORM,\n-\t\tAttribute.UINTEGER_SHORT_FORM,\n-\t\tAttribute.ULONG_SHORT_FORM,\n-\t\tAttribute.UOCTET_SHORT_FORM,\n-\t\tAttribute.USHORT_SHORT_FORM,\n-\t\tAttribute.URI_SHORT_FORM\n-\t});\n+\tprivate static final Collection<Long> attributeShortForms = Arrays.asList(Attribute.BOOLEAN_SHORT_FORM,\n+\t\t\tAttribute.FLOAT_SHORT_FORM,\n+\t\t\tAttribute.DOUBLE_SHORT_FORM,\n+\t\t\tAttribute.OCTET_SHORT_FORM,\n+\t\t\tAttribute.SHORT_SHORT_FORM,\n+\t\t\tAttribute.INTEGER_SHORT_FORM,\n+\t\t\tAttribute.LONG_SHORT_FORM,\n+\t\t\tAttribute.STRING_SHORT_FORM,\n+\t\t\tAttribute.BLOB_SHORT_FORM,\n+\t\t\tAttribute.DURATION_SHORT_FORM,\n+\t\t\tAttribute.IDENTIFIER_SHORT_FORM,\n+\t\t\tAttribute.TIME_SHORT_FORM,\n+\t\t\tAttribute.FINETIME_SHORT_FORM,\n+\t\t\tAttribute.UINTEGER_SHORT_FORM,\n+\t\t\tAttribute.ULONG_SHORT_FORM,\n+\t\t\tAttribute.UOCTET_SHORT_FORM,\n+\t\t\tAttribute.USHORT_SHORT_FORM,\n+\t\t\tAttribute.URI_SHORT_FORM);\n \n \t/**\n \t * Retrieve service information by evaluating the encoding context.\n \t *\n \t * @param ctx The encoding context, which holds all relevant service information.\n \t */\n-\tprotected ServiceInfo(MALEncodingContext ctx) {\n+\tprotected ServiceInfo(final MALEncodingContext ctx) {\n \t\t// How to find out, if we are about to encode an element declared abstract by the service:\n \t\t// 1. Check, if we are at the last body element, because only the last one is allowed to be\n \t\t//    declared abstract.\n@@ -92,7 +90,7 @@ protected ServiceInfo(MALEncodingContext ctx) {\n \t\tif (isDeclaredAbstract && !isError) {\n \t\t\t// Declared type is abstract. Now check, if an Attribute was declared or some other\n \t\t\t// abstract type (like Element, Composite or an abstract composite).\n-\t\t\tObject[] allowedShortForms = operationStage.getLastElementShortForms();\n+\t\t\tfinal Object[] allowedShortForms = operationStage.getLastElementShortForms();\n \t\t\tif (onlyAttributeTypesAllowed(allowedShortForms)) {\n \t\t\t\tisDeclaredAttribute = true;\n \t\t\t}\n@@ -105,7 +103,7 @@ protected ServiceInfo(MALEncodingContext ctx) {\n \t * @param allowedShortForms Array of short forms to be checked.\n \t * @return (True, if all elements in the array are attribute short forms, false if not.)\n \t */\n-\tprivate static boolean onlyAttributeTypesAllowed(Object[] allowedShortForms) {\n+\tprivate static boolean onlyAttributeTypesAllowed(final Object[] allowedShortForms) {\n \t\treturn attributeShortForms.size() == allowedShortForms.length\n \t\t\t\t&& attributeShortForms.containsAll(Arrays.asList(allowedShortForms));\n \t}"
  },
  {
    "sha": "3d7225308798d5faefc62c8b3ff8872e12ba6e50",
    "filename": "transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/CCSDSTime.java",
    "status": "modified",
    "additions": 37,
    "deletions": 37,
    "changes": 74,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/CCSDSTime.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/CCSDSTime.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/CCSDSTime.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -46,18 +46,18 @@\n \tprivate AbsoluteDate epoch;\n \tprivate int nOctets;\n \tprivate TimeCode timeCode;\n-\tprivate int unitMultiplier;\n-\tprivate Map<String, Object> properties;\n+\tprivate final int unitMultiplier;\n+\tprivate final Map<String, Object> properties;\n \n-\tpublic static enum TimeCode {\n+\tpublic enum TimeCode {\n \n \t\tCUC, CDS, CCS\n-\t};\n+\t}\n \n \tstatic {\n \t\ttry {\n \t\t\torg.orekit.data.DataProvidersManager.getInstance().addProvider(new org.orekit.data.ClasspathCrawler(OREKIT_UTC_TAI_FILE));\n-\t\t} catch (OrekitException ex) {\n+\t\t} catch (final OrekitException ex) {\n \t\t\tthrow new java.lang.ExceptionInInitializerError(ex.getMessage());\n \t\t}\n \t}\n@@ -194,8 +194,8 @@ private void parsePField(final byte[] pField) throws MALException {\n \t\t\t\tnOctets = nBasicOctets + nFractionalOctets;\n \t\t\t\tbreak;\n \t\t\tcase CDS:\n-\t\t\t\tint nDayOctets = ((pField[0] & 0b00000100) >>> 2) == 0 ? 2 : 3;\n-\t\t\t\tint nSubMilliOctets = (pField[0] & 0b00000011) << 1;\n+\t\t\t\tfinal int nDayOctets = ((pField[0] & 0b00000100) >>> 2) == 0 ? 2 : 3;\n+\t\t\t\tfinal int nSubMilliOctets = (pField[0] & 0b00000011) << 1;\n \t\t\t\tif (nSubMilliOctets == 6) {\n \t\t\t\t\t// reserved for future use\n \t\t\t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n@@ -205,8 +205,8 @@ private void parsePField(final byte[] pField) throws MALException {\n \t\t\t\tnOctets = nDayOctets + nSubMilliOctets + 4;\n \t\t\t\tbreak;\n \t\t\tcase CCS:\n-\t\t\t\tboolean isDOY = ((pField[0] & 0b00001000) >>> 3) == 1;\n-\t\t\t\tint nResOctets = pField[0] & 0b00000111;\n+\t\t\t\tfinal boolean isDOY = ((pField[0] & 0b00001000) >>> 3) == 1;\n+\t\t\t\tfinal int nResOctets = pField[0] & 0b00000111;\n \t\t\t\tif (nResOctets == 7) {\n \t\t\t\t\t// not used\n \t\t\t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n@@ -231,10 +231,10 @@ private void parsePField(final byte[] pField) throws MALException {\n \t * @throws MALException\n \t */\n \tprivate void parseEpoch(final String epoch, final String timeScale) throws MALException {\n-\t\tAbsoluteDate parsedEpoch;\n+\t\tfinal AbsoluteDate parsedEpoch;\n \t\ttry {\n \t\t\tparsedEpoch = new AbsoluteDate(epoch, getTimeScale(timeScale));\n-\t\t} catch (IllegalArgumentException ex) {\n+\t\t} catch (final IllegalArgumentException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t\tif (this.epoch != null && !this.epoch.equals(parsedEpoch)) {\n@@ -259,21 +259,21 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \t\t\t\t\t// TODO: A bit dirty because time unit first is taken to be one second and\n \t\t\t\t\t// afterwards corrected for the real time unit used. This can be made prettier\n \t\t\t\t\t// by implementing parseCCSDSUnsegmentedTimeCode that respechts the time unit.\n-\t\t\t\t\tAbsoluteDate possiblyWrongTime = AbsoluteDate.parseCCSDSUnsegmentedTimeCode(pField[0], pField.length == 2 ? pField[1] : 0, tField, epoch);\n+\t\t\t\t\tfinal AbsoluteDate possiblyWrongTime = AbsoluteDate.parseCCSDSUnsegmentedTimeCode(pField[0], pField.length == 2 ? pField[1] : 0, tField, epoch);\n \t\t\t\t\tif (1 == unitMultiplier) {\n \t\t\t\t\t\t// time unit is one second, i.e. no correction necessary\n \t\t\t\t\t\treturn possiblyWrongTime;\n \t\t\t\t\t}\n \t\t\t\t\treturn new AbsoluteDate(epoch, possiblyWrongTime.durationFrom(epoch) / unitMultiplier);\n \t\t\t\tcase CDS:\n-\t\t\t\t\tDateComponents dEpoch = epoch.getComponents(TimeScalesFactory.getUTC()).getDate(); // CDS is a UTC-based timecode\n+\t\t\t\t\tfinal DateComponents dEpoch = epoch.getComponents(TimeScalesFactory.getUTC()).getDate(); // CDS is a UTC-based timecode\n \t\t\t\t\treturn AbsoluteDate.parseCCSDSDaySegmentedTimeCode(pField[0], tField, dEpoch);\n \t\t\t\tcase CCS:\n \t\t\t\t\treturn AbsoluteDate.parseCCSDSCalendarSegmentedTimeCode(pField[0], tField);\n \t\t\t\tdefault:\n \t\t\t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n \t\t\t}\n-\t\t} catch (OrekitException ex) {\n+\t\t} catch (final OrekitException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -292,7 +292,7 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \t * @return T-field as byte array with encoded time value.\n \t * @throws MALException\n \t */\n-\tpublic byte[] getEncodedTime(final AbsoluteDate coarseTime, final AbsoluteDate fineTime, boolean mayBeNegative) throws MALException {\n+\tpublic byte[] getEncodedTime(final AbsoluteDate coarseTime, final AbsoluteDate fineTime, final boolean mayBeNegative) throws MALException {\n \t\tif (!mayBeNegative && fineTime.compareTo(epoch) < 0) {\n \t\t\tthrow new MALException(NEGATIVE_TIME);\n \t\t}\n@@ -319,10 +319,10 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \tprivate byte[] encodeCUC(final AbsoluteDate coarseTime, final AbsoluteDate fineTime) throws MALException {\n \t\tfinal int nBasicOctets = (Integer) properties.get(\"nBasicOctets\");\n \t\tfinal int nFractionalOctets = (Integer) properties.get(\"nFractionalOctets\");\n-\t\tByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n+\t\tfinal ByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n \n-\t\tlong coarseSeconds = (long) coarseTime.durationFrom(epoch) * unitMultiplier;\n-\t\tlong fineSeconds = Math.round(fineTime.durationFrom(coarseTime) * unitMultiplier * (1L << (8 * nFractionalOctets)));\n+\t\tfinal long coarseSeconds = (long) coarseTime.durationFrom(epoch) * unitMultiplier;\n+\t\tfinal long fineSeconds = Math.round(fineTime.durationFrom(coarseTime) * unitMultiplier * (1L << (8 * nFractionalOctets)));\n \t\tfor (int i = nBasicOctets; i > 0; i--) {\n \t\t\ttField.write((byte) (coarseSeconds >> (8 * (i - 1))));\n \t\t}\n@@ -343,23 +343,23 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \tprivate byte[] encodeCDS(final AbsoluteDate time) throws MALException {\n \t\tfinal int nDayOctets = (Integer) properties.get(\"nDayOctets\");\n \t\tfinal int nSubMilliOctets = (Integer) properties.get(\"nSubMilliOctets\");\n-\t\tByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n+\t\tfinal ByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n \n-\t\tTimeScale utc;\n+\t\tfinal TimeScale utc;\n \t\ttry {\n \t\t\tutc = TimeScalesFactory.getUTC();\n-\t\t} catch (OrekitException ex) {\n+\t\t} catch (final OrekitException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n-\t\tDateTimeComponents dateTime = time.getComponents(utc);\n+\t\tfinal DateTimeComponents dateTime = time.getComponents(utc);\n \n-\t\tint days = dateTime.getDate().getJ2000Day() - epoch.getComponents(utc).getDate().getJ2000Day();\n+\t\tfinal int days = dateTime.getDate().getJ2000Day() - epoch.getComponents(utc).getDate().getJ2000Day();\n \t\tfor (int i = nDayOctets; i > 0; i--) {\n \t\t\ttField.write((byte) (days >> (8 * (i - 1))));\n \t\t}\n \n-\t\tdouble seconds = dateTime.getTime().getSecondsInUTCDay();\n-\t\tlong millisecs = (long) (seconds * 1000);\n+\t\tfinal double seconds = dateTime.getTime().getSecondsInUTCDay();\n+\t\tfinal long millisecs = (long) (seconds * 1000);\n \t\tfor (int i = 4; i > 0; i--) {\n \t\t\ttField.write((byte) (millisecs >> (8 * (i - 1))));\n \t\t}\n@@ -378,7 +378,7 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \t\t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n \t\t}\n \t\t// Don't calculate subMilliSecs from seconds in day due to possible loss of precision.\n-\t\tlong subMilliSecs = (long) ((dateTime.getTime().getSecond() * 1000 % 1) * resFactor);\n+\t\tfinal long subMilliSecs = (long) ((dateTime.getTime().getSecond() * 1000 % 1) * resFactor);\n \t\tfor (int i = nSubMilliOctets; i > 0; i--) {\n \t\t\ttField.write((byte) (subMilliSecs >> (8 * (i - 1))));\n \t\t}\n@@ -395,23 +395,23 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \tprivate byte[] encodeCCS(final AbsoluteDate time) throws MALException {\n \t\tfinal boolean isDOY = (Boolean) properties.get(\"isDOY\");\n \t\tfinal int nResOctets = (Integer) properties.get(\"nResOctets\");\n-\t\tByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n+\t\tfinal ByteArrayOutputStream tField = new ByteArrayOutputStream(nOctets);\n \n-\t\tTimeScale utc;\n+\t\tfinal TimeScale utc;\n \t\ttry {\n \t\t\tutc = TimeScalesFactory.getUTC();\n-\t\t} catch (OrekitException ex) {\n+\t\t} catch (final OrekitException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n-\t\tDateTimeComponents dateTime = time.getComponents(utc);\n-\t\tDateComponents date = dateTime.getDate();\n-\t\tTimeComponents t = dateTime.getTime();\n+\t\tfinal DateTimeComponents dateTime = time.getComponents(utc);\n+\t\tfinal DateComponents date = dateTime.getDate();\n+\t\tfinal TimeComponents t = dateTime.getTime();\n \n-\t\tint year = date.getYear();\n+\t\tfinal int year = date.getYear();\n \t\ttField.write(year >> 8);\n \t\ttField.write(year);\n \t\tif (isDOY) {\n-\t\t\tint doy = date.getDayOfYear();\n+\t\t\tfinal int doy = date.getDayOfYear();\n \t\t\ttField.write(doy >> 8);\n \t\t\ttField.write(doy);\n \t\t} else {\n@@ -420,7 +420,7 @@ public AbsoluteDate getDecodedTime(final byte[] tField) throws MALException {\n \t\t}\n \t\ttField.write(t.getHour());\n \t\ttField.write(t.getMinute());\n-\t\tdouble second = t.getSecond();\n+\t\tfinal double second = t.getSecond();\n \t\ttField.write((byte) second);\n \t\t// Convert to long value here to preserve picosecond accuracy.\n \t\tlong picoSecond = (long) (second * 1000000000000L) % 1000000000000L;\n@@ -494,7 +494,7 @@ private static TimeScale getTimeScale(final String timeScale) throws MALExceptio\n \t\t\t\t\treturn TimeScalesFactory.getTT();\n \t\t\t}\n \t\t\treturn TimeScalesFactory.getUTC();\n-\t\t} catch (OrekitException ex) {\n+\t\t} catch (final OrekitException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -506,7 +506,7 @@ private static TimeScale getTimeScale(final String timeScale) throws MALExceptio\n \t * @return Byte array converted from the binary number in the String.\n \t */\n \tprivate static byte[] binaryStringToByteArray(final String s) {\n-\t\tbyte[] ba = new byte[s.length() / 8];\n+\t\tfinal byte[] ba = new byte[s.length() / 8];\n \t\tfor (int i = 0; i < s.length() / 8; i++) {\n \t\t\tba[i] = (byte) Short.parseShort(s.substring(i * 8, (i + 1) * 8), 2);\n \t\t}"
  },
  {
    "sha": "89f33d8cf15281d8686748b9cd1fa52cc2fab12b",
    "filename": "transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/Configuration.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/Configuration.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/Configuration.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/Configuration.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -73,8 +73,8 @@ public String timeEpochTimescale() {\n \t * @return Multiplier which denotes the number of time units that make up a second. Defaults to\n \t * 1.\n \t */\n-\tprivate int getUnit(String propertyName) {\n-\t\tString unitProperty = (String) properties.get(propertyName);\n+\tprivate int getUnit(final String propertyName) {\n+\t\tfinal String unitProperty = (String) properties.get(propertyName);\n \t\tif (null == unitProperty) {\n \t\t\t// time unit standard is one second if not specified otherwise\n \t\t\treturn 1;\n@@ -117,6 +117,6 @@ public String durationCodeFormat() {\n \t}\n \n \tpublic boolean varintSupported() {\n-\t\treturn Boolean.valueOf((String) properties.get(PROPERTY_VARINT_SUPPORTED));\n+\t\treturn Boolean.parseBoolean((String) properties.get(PROPERTY_VARINT_SUPPORTED));\n \t}\n }"
  },
  {
    "sha": "ea4c9af7eba6ae2bec6371e6c0e1535517834434",
    "filename": "transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPDecoder.java",
    "status": "modified",
    "additions": 36,
    "deletions": 41,
    "changes": 77,
    "blob_url": "https://github.com/esa/nmf-mission-ops-sat/blob/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPDecoder.java",
    "raw_url": "https://github.com/esa/nmf-mission-ops-sat/raw/8263a3d3ba4af301448545d9b08200918e064093/transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPDecoder.java",
    "contents_url": "https://api.github.com/repos/esa/nmf-mission-ops-sat/contents/transport/dlr-malspp/encoding/src/main/java/de/dlr/gsoc/mo/malspp/encoding/SPPDecoder.java?ref=8263a3d3ba4af301448545d9b08200918e064093",
    "patch": "@@ -21,8 +21,9 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n-import java.io.UnsupportedEncodingException;\n import java.math.BigInteger;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Arrays;\n import java.util.List;\n import java.util.Map;\n import org.ccsds.moims.mo.mal.MALDecoder;\n@@ -65,7 +66,7 @@ public SPPDecoder(final InputStream inputStream, final Map properties) {\n \n \t@Override\n \tpublic Boolean decodeBoolean() throws MALException {\n-\t\tbyte b = read();\n+\t\tfinal byte b = read();\n \t\tswitch (b) {\n \t\t\tcase 0:\n \t\t\t\treturn Boolean.FALSE;\n@@ -84,7 +85,7 @@ public Boolean decodeNullableBoolean() throws MALException {\n \n \t@Override\n \tpublic Float decodeFloat() throws MALException {\n-\t\tbyte[] b = read(4);\n+\t\tfinal byte[] b = read(4);\n \t\tint ret = 0;\n \t\tfor (int i = 0; i < 4; i++) {\n \t\t\tret <<= 8;\n@@ -100,7 +101,7 @@ public Float decodeNullableFloat() throws MALException {\n \n \t@Override\n \tpublic Double decodeDouble() throws MALException {\n-\t\tbyte[] b = read(8);\n+\t\tfinal byte[] b = read(8);\n \t\tlong ret = 0;\n \t\tfor (int i = 0; i < 8; i++) {\n \t\t\tret <<= 8;\n@@ -196,16 +197,12 @@ public ULong decodeNullableULong() throws MALException {\n \n \t@Override\n \tpublic String decodeString() throws MALException {\n-\t\tlong length = decodeUInteger().getValue();\n+\t\tfinal long length = decodeUInteger().getValue();\n \t\tif (length > Integer.MAX_VALUE) {\n \t\t\tthrow new MALException(LENGTH_NOT_SUPPORTED);\n \t\t}\n \t\tString ret = null;\n-\t\ttry {\n-\t\t\tret = new String(read((int) length), \"UTF-8\");\n-\t\t} catch (UnsupportedEncodingException ex) {\n-\t\t\t// UTF-8 is required by the Java Standard, this exception cannot be thrown\n-\t\t}\n+\t\tret = new String(read((int) length), StandardCharsets.UTF_8);\n \t\treturn ret;\n \t}\n \n@@ -216,7 +213,7 @@ public String decodeNullableString() throws MALException {\n \n \t@Override\n \tpublic Blob decodeBlob() throws MALException {\n-\t\tlong length = decodeUInteger().getValue();\n+\t\tfinal long length = decodeUInteger().getValue();\n \t\tif (length > Integer.MAX_VALUE) {\n \t\t\tthrow new MALException(LENGTH_NOT_SUPPORTED);\n \t\t}\n@@ -230,24 +227,22 @@ public Blob decodeNullableBlob() throws MALException {\n \n \t@Override\n \tpublic Duration decodeDuration() throws MALException {\n-\t\tCCSDSTime tf = getDurationFormatter();\n+\t\tfinal CCSDSTime tf = getDurationFormatter();\n \t\tif (tf.getTimeCode() != CCSDSTime.TimeCode.CUC) {\n \t\t\tthrow new MALException(WRONG_TIME_FORMAT);\n \t\t}\n-\t\tbyte[] tField = read(tf.getDataLength());\n-\t\tAbsoluteDate time = tf.getDecodedTime(tField);\n-\t\tAbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.DURATION_EPOCH, Configuration.DURATION_EPOCH_TIMESCALE);\n+\t\tfinal byte[] tField = read(tf.getDataLength());\n+\t\tfinal AbsoluteDate time = tf.getDecodedTime(tField);\n+\t\tfinal AbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.DURATION_EPOCH, Configuration.DURATION_EPOCH_TIMESCALE);\n \t\tdouble seconds = time.durationFrom(epoch);\n \n \t\t// check sign bit of tField\n \t\tif ((tField[0] & 0x80) != 0) {\n \t\t\t// negative duration, undo 2's complement by constructing T field with every bit set\n-\t\t\tbyte[] minNegativeTimeField = new byte[tf.getDataLength()];\n-\t\t\tfor (int i = 0; i < minNegativeTimeField.length; i++) {\n-\t\t\t\tminNegativeTimeField[i] = -1;\n-\t\t\t}\n-\t\t\tAbsoluteDate minNegativeTime = tf.getDecodedTime(minNegativeTimeField);\n-\t\t\tdouble minNegativeSeconds = minNegativeTime.durationFrom(epoch);\n+\t\t\tfinal byte[] minNegativeTimeField = new byte[tf.getDataLength()];\n+\t\t\tArrays.fill(minNegativeTimeField, (byte) -1);\n+\t\t\tfinal AbsoluteDate minNegativeTime = tf.getDecodedTime(minNegativeTimeField);\n+\t\t\tfinal double minNegativeSeconds = minNegativeTime.durationFrom(epoch);\n \t\t\tseconds -= minNegativeSeconds + 1;\n \t\t}\n \n@@ -266,13 +261,13 @@ public Duration decodeNullableDuration() throws MALException {\n \n \t@Override\n \tpublic FineTime decodeFineTime() throws MALException {\n-\t\tCCSDSTime tf = getFineTimeFormatter();\n-\t\tbyte[] tField = read(tf.getDataLength());\n-\t\tAbsoluteDate time = tf.getDecodedTime(tField);\n-\t\tAbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.MAL_FINE_TIME_EPOCH, Configuration.MAL_FINE_TIME_EPOCH_TIMESCALE);\n-\t\tlong coarseSeconds = (long) time.durationFrom(epoch);\n-\t\tAbsoluteDate coarseTime = epoch.shiftedBy(coarseSeconds);\n-\t\tlong picoSeconds = coarseSeconds * 1000000000000L + Math.round(time.durationFrom(coarseTime) * 1000000000000L);\n+\t\tfinal CCSDSTime tf = getFineTimeFormatter();\n+\t\tfinal byte[] tField = read(tf.getDataLength());\n+\t\tfinal AbsoluteDate time = tf.getDecodedTime(tField);\n+\t\tfinal AbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.MAL_FINE_TIME_EPOCH, Configuration.MAL_FINE_TIME_EPOCH_TIMESCALE);\n+\t\tfinal long coarseSeconds = (long) time.durationFrom(epoch);\n+\t\tfinal AbsoluteDate coarseTime = epoch.shiftedBy(coarseSeconds);\n+\t\tfinal long picoSeconds = coarseSeconds * 1000000000000L + Math.round(time.durationFrom(coarseTime) * 1000000000000L);\n \t\treturn new FineTime(picoSeconds);\n \t}\n \n@@ -293,13 +288,13 @@ public Identifier decodeNullableIdentifier() throws MALException {\n \n \t@Override\n \tpublic Time decodeTime() throws MALException {\n-\t\tCCSDSTime tf = getTimeFormatter();\n-\t\tbyte[] tField = read(tf.getDataLength());\n-\t\tAbsoluteDate time = tf.getDecodedTime(tField);\n+\t\tfinal CCSDSTime tf = getTimeFormatter();\n+\t\tfinal byte[] tField = read(tf.getDataLength());\n+\t\tfinal AbsoluteDate time = tf.getDecodedTime(tField);\n \t\t// PENDING: Epoch for Time in MAL Java API unclear. Here: Use Java epoch.\n \t\t// Construct our own Java epoch due to bug in Orekit library (https://www.orekit.org/forge/issues/142).\n-\t\tAbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.JAVA_EPOCH, Configuration.JAVA_EPOCH_TIMESCALE);\n-\t\tdouble seconds = time.durationFrom(epoch);\n+\t\tfinal AbsoluteDate epoch = CCSDSTime.createEpoch(Configuration.JAVA_EPOCH, Configuration.JAVA_EPOCH_TIMESCALE);\n+\t\tfinal double seconds = time.durationFrom(epoch);\n \t\treturn new Time(Math.round(seconds * 1000));\n \t}\n \n@@ -333,7 +328,7 @@ public Element decodeNullableElement(final Element element) throws IllegalArgume\n \n \t@Override\n \tpublic Attribute decodeAttribute() throws MALException {\n-\t\tint shortForm = decodeUOctet().getValue() + 1;\n+\t\tfinal int shortForm = decodeUOctet().getValue() + 1;\n \t\tswitch (shortForm) {\n \t\t\tcase Attribute._BLOB_TYPE_SHORT_FORM:\n \t\t\t\treturn decodeBlob();\n@@ -422,13 +417,13 @@ private byte read() throws MALException {\n \tprotected byte[] read(final int n) throws MALException {\n \t\ttry {\n \t\t\tif (inputStream.available() >= n) {\n-\t\t\t\tbyte[] bytes = new byte[n];\n+\t\t\t\tfinal byte[] bytes = new byte[n];\n \t\t\t\tif (n == 0 || inputStream.read(bytes, 0, n) == n) {\n \t\t\t\t\treturn bytes;\n \t\t\t\t}\n \t\t\t}\n \t\t\tthrow new MALException(INSUFFICIENT_DATA);\n-\t\t} catch (IOException ex) {\n+\t\t} catch (final IOException ex) {\n \t\t\tthrow new MALException(ex.getMessage(), ex);\n \t\t}\n \t}\n@@ -446,15 +441,15 @@ private byte read() throws MALException {\n \t */\n \tprivate BigInteger decodeVarint(final int nOctets, final boolean signed) throws MALException {\n \t\tif (!varintSupported) {\n-\t\t\tbyte[] b = read(nOctets);\n+\t\t\tfinal byte[] b = read(nOctets);\n \t\t\tif (signed) {\n \t\t\t\treturn new BigInteger(b);\n \t\t\t}\n \t\t\treturn new BigInteger(1, b);\n \t\t}\n \n \t\tBigInteger ret = BigInteger.ZERO;\n-\t\tint maxOctets = (int) Math.ceil(nOctets * 8.0 / 7.0);\n+\t\tfinal int maxOctets = (int) Math.ceil(nOctets * 8.0 / 7.0);\n \t\tint i = 0;\n \t\tbyte b;\n \t\tdo {\n@@ -485,7 +480,7 @@ private BigInteger decodeVarint(final int nOctets, final boolean signed) throws\n \t */\n \tprivate CCSDSTime getTimeFormatter() throws MALException {\n \t\tif (timeFormatter == null) {\n-\t\t\tConfiguration config = new Configuration(properties);\n+\t\t\tfinal Configuration config = new Configuration(properties);\n \t\t\ttimeFormatter = new CCSDSTime(config.timeCodeFormat(), config.timeEpoch(), config.timeEpochTimescale(), config.timeUnit());\n \t\t}\n \t\treturn timeFormatter;\n@@ -499,7 +494,7 @@ private CCSDSTime getTimeFormatter() throws MALException {\n \t */\n \tprivate CCSDSTime getFineTimeFormatter() throws MALException {\n \t\tif (fineTimeFormatter == null) {\n-\t\t\tConfiguration config = new Configuration(properties);\n+\t\t\tfinal Configuration config = new Configuration(properties);\n \t\t\tfineTimeFormatter = new CCSDSTime(config.fineTimeCodeFormat(), config.fineTimeEpoch(), config.fineTimeEpochTimescale(), config.fineTimeUnit());\n \t\t}\n \t\treturn fineTimeFormatter;\n@@ -516,7 +511,7 @@ private CCSDSTime getFineTimeFormatter() throws MALException {\n \t */\n \tprivate CCSDSTime getDurationFormatter() throws MALException {\n \t\tif (durationFormatter == null) {\n-\t\t\tConfiguration config = new Configuration(properties);\n+\t\t\tfinal Configuration config = new Configuration(properties);\n \t\t\tdurationFormatter = new CCSDSTime(config.durationCodeFormat(), Configuration.DURATION_EPOCH, Configuration.DURATION_EPOCH_TIMESCALE, config.durationUnit());\n \t\t}\n \t\treturn durationFormatter;"
  }
]
