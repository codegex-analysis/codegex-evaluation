[
  {
    "sha": "aa86743e56b213167568775f5aa23d2f644c73bf",
    "filename": "core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperAttributes.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperAttributes.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperAttributes.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperAttributes.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -371,7 +371,7 @@ public static Object attributeName2object(String attributeName) throws IllegalAr\n    * @throws java.lang.IllegalArgumentException If value == null\n    */\n   public static Object string2attribute(Object in, String value)\n-      throws NumberFormatException, IllegalArgumentException {\n+      throws IllegalArgumentException {\n     if (value == null) {\n       throw new IllegalArgumentException(\"The value must not be null.\");\n     }"
  },
  {
    "sha": "44ac25b804d8376ddf02467a50bc4e037e0bc2f4",
    "filename": "core/helper-tools/src/main/java/esa/mo/helpertools/misc/FileDataSerialization.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/helper-tools/src/main/java/esa/mo/helpertools/misc/FileDataSerialization.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/helper-tools/src/main/java/esa/mo/helpertools/misc/FileDataSerialization.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/helper-tools/src/main/java/esa/mo/helpertools/misc/FileDataSerialization.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -63,7 +63,7 @@ public static void serializeDataOut(String filename, Object ish) throws IOExcept\n    * @throws java.lang.IllegalArgumentException If filename == null\n    */\n   public static Object serializeDataIn(String filename)\n-      throws FileNotFoundException, IOException, ClassNotFoundException, IllegalArgumentException {\n+      throws IOException, ClassNotFoundException, IllegalArgumentException {\n     if (filename == null) {\n       throw new IllegalArgumentException(\"Filename must not be null for deserialization.\");\n     }"
  },
  {
    "sha": "f4dafb72fd2d6d4fdee18d4b430b39eb6e25b3c7",
    "filename": "core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOWindow.java",
    "status": "modified",
    "additions": 2,
    "deletions": 11,
    "changes": 13,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOWindow.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOWindow.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOWindow.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -130,12 +130,7 @@ private void interpretReceivedObj(Object obj, boolean editable) {\n \n             }\n \n-            java.awt.event.ActionListener actionListener = new java.awt.event.ActionListener() {\n-                @Override\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    buttonAddActionPerformed(evt);\n-                }\n-            };\n+            java.awt.event.ActionListener actionListener = evt -> buttonAddActionPerformed(evt);\n \n             MOelementListBlank moElementListBlank = new MOelementListBlank(actionListener, editable);\n             componentsPanel.add(moElementListBlank);\n@@ -295,11 +290,7 @@ public void windowDeactivated(java.awt.event.WindowEvent evt) {\n         bottomPanel.setPreferredSize(new java.awt.Dimension(452, 40));\n \n         button.setText(\"Submit\");\n-        button.addActionListener(new java.awt.event.ActionListener() {\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                buttonActionPerformed(evt);\n-            }\n-        });\n+        button.addActionListener(evt -> buttonActionPerformed(evt));\n \n         javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);\n         bottomPanel.setLayout(bottomPanelLayout);"
  },
  {
    "sha": "dc88a6e0b34110ab8613eaa4eacf54ecc00dcb35",
    "filename": "core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOcomposite.java",
    "status": "modified",
    "additions": 1,
    "deletions": 6,
    "changes": 7,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOcomposite.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOcomposite.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOcomposite.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -36,12 +36,7 @@ public MOcomposite(String fieldNameIn, Element obj, boolean editable, boolean ob\n         \n         // Make a button and put it in the middle Panel\n         button = new javax.swing.JToggleButton();\n-        button.addActionListener(new java.awt.event.ActionListener() {\n-            @Override\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                buttonActionPerformed(evt);\n-            }\n-        });\n+        button.addActionListener(evt -> buttonActionPerformed(evt));\n         \n         super.middlePanel.add(button);\n "
  },
  {
    "sha": "52d6b723e71133dfe12ed8abb99c9012e1aa3270",
    "filename": "core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOelement.java",
    "status": "modified",
    "additions": 2,
    "deletions": 10,
    "changes": 12,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOelement.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOelement.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOelement.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -127,22 +127,14 @@ private void initComponents() {\n         mainPanel.add(fieldType);\n \n         fieldSelectableAttribute.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\" }));\n-        fieldSelectableAttribute.addActionListener(new java.awt.event.ActionListener() {\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                fieldSelectableAttributeActionPerformed(evt);\n-            }\n-        });\n+        fieldSelectableAttribute.addActionListener(evt -> fieldSelectableAttributeActionPerformed(evt));\n         mainPanel.add(fieldSelectableAttribute);\n \n         middlePanel.setLayout(new java.awt.GridLayout(1, 0));\n         mainPanel.add(middlePanel);\n \n         nullCB.setText(\"null\");\n-        nullCB.addActionListener(new java.awt.event.ActionListener() {\n-            public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                nullCBActionPerformed(evt);\n-            }\n-        });\n+        nullCB.addActionListener(evt -> nullCBActionPerformed(evt));\n         mainPanel.add(nullCB);\n \n         javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);"
  },
  {
    "sha": "0f9a7c011e5ec5ee06a0cc040943f72b96960c27",
    "filename": "core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOelementList.java",
    "status": "modified",
    "additions": 11,
    "deletions": 19,
    "changes": 30,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOelementList.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOelementList.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/misc/mal-elements-window/src/main/java/esa/mo/tools/mowindow/MOelementList.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -43,19 +43,16 @@ public MOelementList(final MOWindow previousWindow, String fieldNameIn, Object o\n         buttonRemove = new javax.swing.JToggleButton();\n         buttonRemove.setText(\"Remove\");\n         final MOelementList temp = this;\n-        java.awt.event.ActionListener actionListenerRemove = new java.awt.event.ActionListener() {\n-                @Override\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    previousWindow.getComponentsPanel().remove(temp);\n-                    \n-                    // Fix the indexes\n-                    for (int i = 0; i < previousWindow.getComponentsPanel().getComponentCount()-1; i++){\n-                        ( (MOelement) previousWindow.getComponentsPanel().getComponent(i)).getFieldNameLabel().setText(String.valueOf(i));\n-                    }\n-                    \n-                    previousWindow.refreshVerticalSize();\n-                }\n-            };\n+        java.awt.event.ActionListener actionListenerRemove = evt -> {\n+            previousWindow.getComponentsPanel().remove(temp);\n+\n+            // Fix the indexes\n+            for (int i = 0; i < previousWindow.getComponentsPanel().getComponentCount()-1; i++){\n+                ( (MOelement) previousWindow.getComponentsPanel().getComponent(i)).getFieldNameLabel().setText(String.valueOf(i));\n+            }\n+\n+            previousWindow.refreshVerticalSize();\n+        };\n         buttonRemove.addActionListener(actionListenerRemove);\n \n         // Is it an Attribute?\n@@ -77,12 +74,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {\n         }else{\n             // Make a button and put it in the middle Panel\n             buttonEdit = new javax.swing.JToggleButton();\n-            buttonEdit.addActionListener(new java.awt.event.ActionListener() {\n-                @Override\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    buttonEditActionPerformed(evt);\n-                }\n-            });\n+            buttonEdit.addActionListener(evt -> buttonEditActionPerformed(evt));\n         \n             super.middlePanel.add(buttonEdit);\n "
  },
  {
    "sha": "95eae6e8dee61764f07db24073f436bd51c45409",
    "filename": "core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/db/DatabaseBackend.java",
    "status": "modified",
    "additions": 5,
    "deletions": 8,
    "changes": 13,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/db/DatabaseBackend.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/db/DatabaseBackend.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/db/DatabaseBackend.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -74,14 +74,11 @@ public Semaphore getEmAvailability() {\n      */\n     public void startBackendDatabase(final TransactionsProcessor dbProcessor) {\n         if (OPTIMIZED_STARTUP) {\n-            dbProcessor.submitExternalTask(new Runnable() {\n-                @Override\n-                public void run() {\n-                    createEMFactory();\n-                    emAvailability.release();\n-                    Logger.getLogger(DatabaseBackend.class.getName()).log(Level.INFO,\n-                            \"The EntityManagerFactory was created.\");\n-                }\n+            dbProcessor.submitExternalTask(() -> {\n+                createEMFactory();\n+                emAvailability.release();\n+                Logger.getLogger(DatabaseBackend.class.getName()).log(Level.INFO,\n+                        \"The EntityManagerFactory was created.\");\n             });\n         } else {\n             createEMFactory();"
  },
  {
    "sha": "c6561deda58a0786be4a299dcf2b1c5671d2834b",
    "filename": "core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/db/TransactionsProcessor.java",
    "status": "modified",
    "additions": 68,
    "deletions": 86,
    "changes": 154,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/db/TransactionsProcessor.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/db/TransactionsProcessor.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/db/TransactionsProcessor.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -90,15 +90,12 @@ public void submitExternalTask2(final Runnable task) {\n     public COMObjectEntity getCOMObject(final Integer objTypeId, final Integer domain, final Long objId) {\n         this.sequencialStoring.set(false); // Sequential stores can no longer happen otherwise we break order\n \n-        Future<COMObjectEntity> future = dbTransactionsExecutor.submit(new Callable() {\n-            @Override\n-            public COMObjectEntity call() {\n-                dbBackend.createEntityManager();\n-                final COMObjectEntity perObj = dbBackend.getEM().find(CLASS_ENTITY,\n-                        COMObjectEntity.generatePK(objTypeId, domain, objId));\n-                dbBackend.closeEntityManager();\n-                return perObj;\n-            }\n+        Future<COMObjectEntity> future = dbTransactionsExecutor.submit((Callable) () -> {\n+            dbBackend.createEntityManager();\n+            final COMObjectEntity perObj = dbBackend.getEM().find(CLASS_ENTITY,\n+                    COMObjectEntity.generatePK(objTypeId, domain, objId));\n+            dbBackend.closeEntityManager();\n+            return perObj;\n         });\n \n         try {\n@@ -113,15 +110,12 @@ public COMObjectEntity call() {\n     }\n \n     public boolean existsCOMObject(final Integer objTypeId, final Integer domain, final Long objId) {\n-        Future<Boolean> future = dbTransactionsExecutor.submit(new Callable() {\n-            @Override\n-            public Boolean call() {\n-                dbBackend.createEntityManager();\n-                final COMObjectEntity perObj = dbBackend.getEM().find(CLASS_ENTITY,\n-                        COMObjectEntity.generatePK(objTypeId, domain, objId));\n-                dbBackend.closeEntityManager();\n-                return (perObj != null);\n-            }\n+        Future<Boolean> future = dbTransactionsExecutor.submit((Callable) () -> {\n+            dbBackend.createEntityManager();\n+            final COMObjectEntity perObj = dbBackend.getEM().find(CLASS_ENTITY,\n+                    COMObjectEntity.generatePK(objTypeId, domain, objId));\n+            dbBackend.closeEntityManager();\n+            return (perObj != null);\n         });\n \n         try {\n@@ -138,19 +132,16 @@ public Boolean call() {\n     public LongList getAllCOMObjects(final Integer objTypeId, final Integer domainId) {\n         this.sequencialStoring.set(false); // Sequential stores can no longer happen otherwise we break order\n \n-        Future<LongList> future = dbTransactionsExecutor.submit(new Callable() {\n-            @Override\n-            public LongList call() {\n-                dbBackend.createEntityManager();\n-                Query query = dbBackend.getEM().createQuery(QUERY_SELECT_ALL);\n-                query.setParameter(\"objectTypeId\", objTypeId);\n-                query.setParameter(\"domainId\", domainId);\n-                LongList objIds = new LongList();\n-                objIds.addAll(query.getResultList());\n-                dbBackend.closeEntityManager();\n-\n-                return objIds;\n-            }\n+        Future<LongList> future = dbTransactionsExecutor.submit((Callable) () -> {\n+            dbBackend.createEntityManager();\n+            Query query = dbBackend.getEM().createQuery(QUERY_SELECT_ALL);\n+            query.setParameter(\"objectTypeId\", objTypeId);\n+            query.setParameter(\"domainId\", domainId);\n+            LongList objIds = new LongList();\n+            objIds.addAll(query.getResultList());\n+            dbBackend.closeEntityManager();\n+\n+            return objIds;\n         });\n \n         try {\n@@ -204,86 +195,77 @@ public void insert(final ArrayList<COMObjectEntity> perObjs, final Runnable publ\n             Logger.getLogger(ArchiveManager.class.getName()).log(Level.SEVERE, null, ex);\n         }\n \n-        dbTransactionsExecutor.execute(new Runnable() {\n-            @Override\n-            public void run() {\n-                StoreCOMObjectsContainer container = storeQueue.poll();\n-\n-                if (container != null) {\n-                    dbBackend.createEntityManager();  // 0.166 ms\n-                    dbBackend.getEM().getTransaction().begin(); // 0.480 ms\n-                    persistObjects(container.getPerObjs()); // store\n-\n-                    while (true) {\n-                        container = storeQueue.peek(); // get next if there is one available\n-                        if (container != null && container.isContinuous()) {\n-                            container = storeQueue.poll();\n-                            persistObjects(container.getPerObjs()); // store\n-                        } else {\n-                            break;\n-                        }\n-                    }\n+        dbTransactionsExecutor.execute(() -> {\n+            StoreCOMObjectsContainer container1 = storeQueue.poll();\n \n-                    dbBackend.safeCommit();\n-                    dbBackend.closeEntityManager(); // 0.410 ms\n+            if (container1 != null) {\n+                dbBackend.createEntityManager();  // 0.166 ms\n+                dbBackend.getEM().getTransaction().begin(); // 0.480 ms\n+                persistObjects(container1.getPerObjs()); // store\n+\n+                while (true) {\n+                    container1 = storeQueue.peek(); // get next if there is one available\n+                    if (container1 != null && container1.isContinuous()) {\n+                        container1 = storeQueue.poll();\n+                        persistObjects(container1.getPerObjs()); // store\n+                    } else {\n+                        break;\n+                    }\n                 }\n \n-                generalExecutor.submit(publishEvents);\n+                dbBackend.safeCommit();\n+                dbBackend.closeEntityManager(); // 0.410 ms\n             }\n+\n+            generalExecutor.submit(publishEvents);\n         });\n     }\n \n     public void remove(final Integer objTypeId, final Integer domainId,\n             final LongList objIds, final Runnable publishEvents) {\n         this.sequencialStoring.set(false); // Sequential stores can no longer happen otherwise we break order\n \n-        dbTransactionsExecutor.execute(new Runnable() {\n-            @Override\n-            public void run() {\n-                dbBackend.createEntityManager();  // 0.166 ms\n+        dbTransactionsExecutor.execute(() -> {\n+            dbBackend.createEntityManager();  // 0.166 ms\n \n-                // Generate the object Ids if needed and the persistence objects to be removed\n-                for (int i = 0; i < objIds.size(); i++) {\n-                    final COMObjectEntityPK id = COMObjectEntity.generatePK(objTypeId, domainId, objIds.get(i));\n-                    COMObjectEntity perObj = dbBackend.getEM().find(CLASS_ENTITY, id);\n-                    dbBackend.getEM().getTransaction().begin();\n-                    dbBackend.getEM().remove(perObj);\n-                    dbBackend.getEM().getTransaction().commit();\n-                }\n+            // Generate the object Ids if needed and the persistence objects to be removed\n+            for (int i = 0; i < objIds.size(); i++) {\n+                final COMObjectEntityPK id = COMObjectEntity.generatePK(objTypeId, domainId, objIds.get(i));\n+                COMObjectEntity perObj = dbBackend.getEM().find(CLASS_ENTITY, id);\n+                dbBackend.getEM().getTransaction().begin();\n+                dbBackend.getEM().remove(perObj);\n+                dbBackend.getEM().getTransaction().commit();\n+            }\n \n-                dbBackend.closeEntityManager(); // 0.410 ms\n+            dbBackend.closeEntityManager(); // 0.410 ms\n \n-                generalExecutor.submit(publishEvents);\n-            }\n+            generalExecutor.submit(publishEvents);\n         });\n     }\n \n     public void update(final ArrayList<COMObjectEntity> newObjs, final Runnable publishEvents) {\n         this.sequencialStoring.set(false); // Sequential stores can no longer happen otherwise we break order\n \n-        dbTransactionsExecutor.execute(new Runnable() {\n-            @Override\n-            public void run() {\n-                dbBackend.createEntityManager();  // 0.166 ms\n+        dbTransactionsExecutor.execute(() -> {\n+            dbBackend.createEntityManager();  // 0.166 ms\n \n-                for (int i = 0; i < newObjs.size(); i++) {\n-                    final COMObjectEntityPK id = newObjs.get(i).getPrimaryKey();\n-                    COMObjectEntity previousObj = dbBackend.getEM().find(CLASS_ENTITY, id);\n+            for (int i = 0; i < newObjs.size(); i++) {\n+                final COMObjectEntityPK id = newObjs.get(i).getPrimaryKey();\n+                COMObjectEntity previousObj = dbBackend.getEM().find(CLASS_ENTITY, id);\n \n-                    dbBackend.getEM().getTransaction().begin();\n-                    dbBackend.getEM().remove(previousObj);\n-                    dbBackend.getEM().getTransaction().commit();\n+                dbBackend.getEM().getTransaction().begin();\n+                dbBackend.getEM().remove(previousObj);\n+                dbBackend.getEM().getTransaction().commit();\n \n-                    // Maybe we can replace the 3 lines below with a persistObjects(newObjs) after the for loop\n-                    dbBackend.getEM().getTransaction().begin();\n-                    dbBackend.getEM().persist(newObjs.get(i));\n-                    dbBackend.getEM().getTransaction().commit();\n-                }\n+                // Maybe we can replace the 3 lines below with a persistObjects(newObjs) after the for loop\n+                dbBackend.getEM().getTransaction().begin();\n+                dbBackend.getEM().persist(newObjs.get(i));\n+                dbBackend.getEM().getTransaction().commit();\n+            }\n \n-                dbBackend.closeEntityManager(); // 0.410 ms\n+            dbBackend.closeEntityManager(); // 0.410 ms\n \n-                generalExecutor.submit(publishEvents);\n-            }\n+            generalExecutor.submit(publishEvents);\n         });\n     }\n "
  },
  {
    "sha": "4e15e2187bb84ca775d90af6466db6b91471c3c6",
    "filename": "core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ActivityTrackingProviderServiceImpl.java",
    "status": "modified",
    "additions": 16,
    "deletions": 19,
    "changes": 35,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ActivityTrackingProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ActivityTrackingProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ActivityTrackingProviderServiceImpl.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -326,26 +326,23 @@ public ObjectId storeCOMOperationActivity(final MALInteraction interaction, fina\n         archiveDetails.get(0).setNetwork(interaction.getMessageHeader().getNetworkZone());  // RID raised to create this requirement!\n         archiveDetails.get(0).setProvider(interaction.getMessageHeader().getURIFrom());     // RID raised to create this requirement!\n \n-        executor.execute(new Runnable() {\n-            @Override\n-            public void run() {\n-                try {\n-                    archiveService.store(\n-                            false,\n-                            ActivityTrackingHelper.OPERATIONACTIVITY_OBJECT_TYPE,\n-                            interaction.getMessageHeader().getDomain(),\n-                            archiveDetails,\n-                            opActivityList,\n-                            interaction); // requirement: 3.5.2.3 & 3.5.2.5\n-                } catch (MALException ex) {\n+        executor.execute(() -> {\n+            try {\n+                archiveService.store(\n+                        false,\n+                        ActivityTrackingHelper.OPERATIONACTIVITY_OBJECT_TYPE,\n+                        interaction.getMessageHeader().getDomain(),\n+                        archiveDetails,\n+                        opActivityList,\n+                        interaction); // requirement: 3.5.2.3 & 3.5.2.5\n+            } catch (MALException ex) {\n+                Logger.getLogger(ActivityTrackingProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n+            } catch (MALInteractionException ex) {\n+                // A duplicate might happen if the the consumer stored the Operation Activity object\n+                if(ex.getStandardError().getErrorNumber().getValue() != COMHelper.DUPLICATE_ERROR_NUMBER.getValue()){\n                     Logger.getLogger(ActivityTrackingProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n-                } catch (MALInteractionException ex) {\n-                    // A duplicate might happen if the the consumer stored the Operation Activity object\n-                    if(ex.getStandardError().getErrorNumber().getValue() != COMHelper.DUPLICATE_ERROR_NUMBER.getValue()){\n-                        Logger.getLogger(ActivityTrackingProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n-                    }else{\n-                        // It's a Duplicate error, the object already exists... Do nothing!\n-                    }\n+                }else{\n+                    // It's a Duplicate error, the object already exists... Do nothing!\n                 }\n             }\n         });"
  },
  {
    "sha": "7531c173a5aaa101f3c823c7393fbdd9d1daeaf4",
    "filename": "core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveManager.java",
    "status": "modified",
    "additions": 31,
    "deletions": 43,
    "changes": 74,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveManager.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveManager.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveManager.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -115,19 +115,16 @@ public synchronized void init() {\n \n         final ArchiveManager manager = this;\n \n-        this.dbProcessor.submitExternalTask2(new Runnable() {\n-            @Override\n-            public void run() {\n-                synchronized (manager) {\n-                    Logger.getLogger(ArchiveManager.class.getName()).log(Level.FINE,\n-                            \"Initializing Fast classes!\");\n-                    fastDomain.init();\n-                    fastObjectType.init();\n-                    fastNetwork.init();\n-                    fastProviderURI.init();\n-                    Logger.getLogger(ArchiveManager.class.getName()).log(Level.FINE,\n-                            \"The Fast classes are initialized!\");\n-                }\n+        this.dbProcessor.submitExternalTask2(() -> {\n+            synchronized (manager) {\n+                Logger.getLogger(ArchiveManager.class.getName()).log(Level.FINE,\n+                        \"Initializing Fast classes!\");\n+                fastDomain.init();\n+                fastObjectType.init();\n+                fastNetwork.init();\n+                fastProviderURI.init();\n+                Logger.getLogger(ArchiveManager.class.getName()).log(Level.FINE,\n+                        \"The Fast classes are initialized!\");\n             }\n         });\n     }\n@@ -143,13 +140,10 @@ protected void setEventService(EventProviderServiceImpl eventService) {\n \n     void close() {\n         // Forces the code to wait until all the stores are flushed\n-        this.dbProcessor.stopInteractions(new Callable() {\n-            @Override\n-            public Integer call() {\n-                dbBackend.createEntityManager();\n-                dbBackend.closeEntityManager();\n-                return null;\n-            }\n+        this.dbProcessor.stopInteractions(() -> {\n+            dbBackend.createEntityManager();\n+            dbBackend.closeEntityManager();\n+            return null;\n         });\n \n         this.eventService = null; // Remove the pointer to avoid publishing more stuff\n@@ -164,24 +158,21 @@ public Integer call() {\n     protected synchronized void resetTable() {\n         Logger.getLogger(ArchiveManager.class.getName()).info(\"Reset table triggered!\");\n \n-        this.dbProcessor.resetMainTable(new Callable() {\n-            @Override\n-            public Integer call() {\n-                dbBackend.createEntityManager();\n-                dbBackend.getEM().getTransaction().begin();\n-                dbBackend.getEM().createQuery(\"DELETE FROM COMObjectEntity\").executeUpdate();\n-                dbBackend.getEM().getTransaction().commit();\n+        this.dbProcessor.resetMainTable(() -> {\n+            dbBackend.createEntityManager();\n+            dbBackend.getEM().getTransaction().begin();\n+            dbBackend.getEM().createQuery(\"DELETE FROM COMObjectEntity\").executeUpdate();\n+            dbBackend.getEM().getTransaction().commit();\n \n-                fastObjId.resetFastIDs();\n-                fastDomain.resetFastDomain();\n-                fastNetwork.resetFastNetwork();\n-                fastProviderURI.resetFastProviderURI();\n+            fastObjId.resetFastIDs();\n+            fastDomain.resetFastDomain();\n+            fastNetwork.resetFastNetwork();\n+            fastProviderURI.resetFastProviderURI();\n \n-                dbBackend.getEM().close();\n-                dbBackend.restartEMF();\n+            dbBackend.getEM().close();\n+            dbBackend.restartEMF();\n \n-                return null;\n-            }\n+            return null;\n         });\n     }\n \n@@ -606,14 +597,11 @@ public static boolean isCompositeFilterValid(CompositeFilter compositeFilter, Ob\n \n     private Runnable generatePublishEventsThread(final ObjectType comObject, final ObjectType objType,\n             final IdentifierList domain, final LongList objIds, final MALInteraction interaction) {\n-        return new Runnable() {\n-            @Override\n-            public void run() {\n-                // Generate and Publish the Events - requirement: 3.4.2.1\n-                generateAndPublishEvents(comObject,\n-                        ArchiveManager.generateSources(objType, domain, objIds),\n-                        interaction);\n-            }\n+        return () -> {\n+            // Generate and Publish the Events - requirement: 3.4.2.1\n+            generateAndPublishEvents(comObject,\n+                    ArchiveManager.generateSources(objType, domain, objIds),\n+                    interaction);\n         };\n     }\n "
  },
  {
    "sha": "4383295f2bea7b15d771edd622d1c745927801cd",
    "filename": "core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveSyncProviderServiceImpl.java",
    "status": "modified",
    "additions": 68,
    "deletions": 74,
    "changes": 142,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveSyncProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveSyncProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveSyncProviderServiceImpl.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -290,39 +290,36 @@ public void setQueriesAreDone(final boolean done) {\n         }\n \n         public Runnable getProcessingRunnable() {\n-            return new Runnable() {\n-                @Override\n-                public void run() {\n-                    int counter = 0;\n-                    \n-                    try {\n-                        boolean exit = false;\n-\n-                        while (!exit) {\n-                            boolean done = queriesAreDone;\n-                            COMObjectEntity entity = tempQueue.poll(1, TimeUnit.SECONDS);\n-\n-                            if (entity != null) {\n-                                byte[] objAsByteArray = EncodeDecode.encodeToByteArray(entity, manager, dictionary);\n-                                // Compress here?\n-                                // compression algorithm can go here!\n-                                dataToFlush.add(objAsByteArray);\n-                                counter++;\n-                            } else {\n-                                if (done) {\n-                                    exit = true;\n-                                }\n+            return () -> {\n+                int counter = 0;\n+\n+                try {\n+                    boolean exit = false;\n+\n+                    while (!exit) {\n+                        boolean done = queriesAreDone;\n+                        COMObjectEntity entity = tempQueue.poll(1, TimeUnit.SECONDS);\n+\n+                        if (entity != null) {\n+                            byte[] objAsByteArray = EncodeDecode.encodeToByteArray(entity, manager, dictionary);\n+                            // Compress here?\n+                            // compression algorithm can go here!\n+                            dataToFlush.add(objAsByteArray);\n+                            counter++;\n+                        } else {\n+                            if (done) {\n+                                exit = true;\n                             }\n                         }\n-                    } catch (InterruptedException ex) {\n-                        Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n                     }\n-\n-                    processingIsDone = true;\n-                    Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(Level.INFO,\n-                            \"Stage 2: The objects were all successfully processed! \" + \n-                                    counter + \" objects in total!\");\n+                } catch (InterruptedException ex) {\n+                    Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n                 }\n+\n+                processingIsDone = true;\n+                Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(Level.INFO,\n+                        \"Stage 2: The objects were all successfully processed! \" +\n+                                counter + \" objects in total!\");\n             };\n         }\n \n@@ -338,60 +335,57 @@ public void sendUpdateToConsumer(int index, byte[] aChunk) {\n         }\n \n         public Runnable getFlushingRunnable() {\n-            return new Runnable() {\n-                @Override\n-                public void run() {\n-                    try {\n-                        boolean exit = false;\n-                        int index = 0;\n-                        byte[] aChunk = new byte[CHUNK_SIZE];\n-                        int pos = 0;\n-\n-                        while (!exit) {\n-                            boolean done = processingIsDone;\n-                            byte[] data = dataToFlush.poll(1, TimeUnit.SECONDS);\n-\n-                            if (data != null) {\n-                                for (int i = 0; i < data.length; i++) {\n-                                    aChunk[pos] = data[i];\n-                                    pos++;\n-\n-                                    if (pos == CHUNK_SIZE) {\n-                                        sendUpdateToConsumer(index, aChunk);\n-                                        index++;\n-                                        pos = 0;\n-                                    }\n+            return () -> {\n+                try {\n+                    boolean exit = false;\n+                    int index = 0;\n+                    byte[] aChunk = new byte[CHUNK_SIZE];\n+                    int pos = 0;\n+\n+                    while (!exit) {\n+                        boolean done = processingIsDone;\n+                        byte[] data = dataToFlush.poll(1, TimeUnit.SECONDS);\n+\n+                        if (data != null) {\n+                            for (int i = 0; i < data.length; i++) {\n+                                aChunk[pos] = data[i];\n+                                pos++;\n+\n+                                if (pos == CHUNK_SIZE) {\n+                                    sendUpdateToConsumer(index, aChunk);\n+                                    index++;\n+                                    pos = 0;\n                                 }\n-                            } else {\n-                                if (done) {\n-                                    exit = true;\n+                            }\n+                        } else {\n+                            if (done) {\n+                                exit = true;\n \n-                                    // Flush the last byte array!\n-                                    byte[] lastChunk = new byte[pos]; // We need to trim to fit!\n-                                    System.arraycopy(aChunk, 0, lastChunk, 0, pos);\n+                                // Flush the last byte array!\n+                                byte[] lastChunk = new byte[pos]; // We need to trim to fit!\n+                                System.arraycopy(aChunk, 0, lastChunk, 0, pos);\n \n-                                    sendUpdateToConsumer(index, lastChunk);\n-                                    index++;\n-                                }\n+                                sendUpdateToConsumer(index, lastChunk);\n+                                index++;\n                             }\n                         }\n+                    }\n \n-                        try {\n-                            interaction.sendResponse(new UInteger(index));\n-                            numberOfChunks = index;\n-                        } catch (MALInteractionException ex) {\n-                            Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n-                        } catch (MALException ex) {\n-                            Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n-                        }\n-                    } catch (InterruptedException ex) {\n+                    try {\n+                        interaction.sendResponse(new UInteger(index));\n+                        numberOfChunks = index;\n+                    } catch (MALInteractionException ex) {\n+                        Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n+                    } catch (MALException ex) {\n                         Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n                     }\n-\n-                    Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(\n-                            Level.INFO, \"Stage 3: The objects were all successfully flushed! \" + \n-                                    numberOfChunks + \" chunks in total!\");\n+                } catch (InterruptedException ex) {\n+                    Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n                 }\n+\n+                Logger.getLogger(ArchiveSyncProviderServiceImpl.class.getName()).log(\n+                        Level.INFO, \"Stage 3: The objects were all successfully flushed! \" +\n+                                numberOfChunks + \" chunks in total!\");\n             };\n         }\n     }"
  },
  {
    "sha": "7d3c27eb5cc41795444c5a3f5dd0832e4a06a58a",
    "filename": "core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/reconfigurable/service/PersistLatestServiceConfigurationAdapter.java",
    "status": "modified",
    "additions": 36,
    "deletions": 39,
    "changes": 75,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/reconfigurable/service/PersistLatestServiceConfigurationAdapter.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/reconfigurable/service/PersistLatestServiceConfigurationAdapter.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/reconfigurable/service/PersistLatestServiceConfigurationAdapter.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -79,48 +79,45 @@ public Long getConfigurationObjectInstId() {\n     @Override\n     public void onConfigurationChanged(final ReconfigurableService serviceImpl) {\n         // Submit the task to update the configuration in the COM Archive\n-        executor.execute(new Runnable() {\n-            @Override\n-            public void run() {\n-                if (configObjectsObjId == null) {\n-                    // Retrieve the COM object of the service\n-                    ArchivePersistenceObject comObject = HelperArchive.getArchiveCOMObject(archiveService,\n-                            ConfigurationHelper.SERVICECONFIGURATION_OBJECT_TYPE,\n-                            ConfigurationProviderSingleton.getDomain(), serviceConfigObjId);\n-\n-                    if (comObject == null) {\n-                        Logger.getLogger(PersistLatestServiceConfigurationAdapter.class.getName()).log(Level.SEVERE,\n-                                serviceImpl.getCOMService().getName()\n-                                + \" service: The service configuration object could not be found! objectId: \"\n-                                + serviceConfigObjId);\n-\n-                        // Todo: Maybe we can use storeDefaultServiceConfiguration() here!? To handle better the error...\n-                        return;\n-                    }\n-\n-                    configObjectsObjId = comObject.getArchiveDetails().getDetails().getRelated();\n-                }\n-\n-                // Stuff to feed the update operation from the Archive...\n-                ArchiveDetailsList details = HelperArchive.generateArchiveDetailsList(null, null,\n-                        ConfigurationProviderSingleton.getNetwork(), new URI(\"\"), configObjectsObjId);\n-                ConfigurationObjectDetailsList confObjsList = new ConfigurationObjectDetailsList();\n-                confObjsList.add(serviceImpl.getCurrentConfiguration());\n-\n-                try {\n-                    archiveService.update(\n-                            ConfigurationHelper.CONFIGURATIONOBJECTS_OBJECT_TYPE,\n-                            ConfigurationProviderSingleton.getDomain(),\n-                            details,\n-                            confObjsList,\n-                            null);\n-                } catch (MALException ex) {\n-                    Logger.getLogger(PersistLatestServiceConfigurationAdapter.class.getName()).log(Level.SEVERE, null, ex);\n-                } catch (MALInteractionException ex) {\n+        executor.execute(() -> {\n+            if (configObjectsObjId == null) {\n+                // Retrieve the COM object of the service\n+                ArchivePersistenceObject comObject = HelperArchive.getArchiveCOMObject(archiveService,\n+                        ConfigurationHelper.SERVICECONFIGURATION_OBJECT_TYPE,\n+                        ConfigurationProviderSingleton.getDomain(), serviceConfigObjId);\n+\n+                if (comObject == null) {\n                     Logger.getLogger(PersistLatestServiceConfigurationAdapter.class.getName()).log(Level.SEVERE,\n                             serviceImpl.getCOMService().getName()\n-                            + \" service: The configuration could not be updated! objectId: \" + serviceConfigObjId, ex);\n+                            + \" service: The service configuration object could not be found! objectId: \"\n+                            + serviceConfigObjId);\n+\n+                    // Todo: Maybe we can use storeDefaultServiceConfiguration() here!? To handle better the error...\n+                    return;\n                 }\n+\n+                configObjectsObjId = comObject.getArchiveDetails().getDetails().getRelated();\n+            }\n+\n+            // Stuff to feed the update operation from the Archive...\n+            ArchiveDetailsList details = HelperArchive.generateArchiveDetailsList(null, null,\n+                    ConfigurationProviderSingleton.getNetwork(), new URI(\"\"), configObjectsObjId);\n+            ConfigurationObjectDetailsList confObjsList = new ConfigurationObjectDetailsList();\n+            confObjsList.add(serviceImpl.getCurrentConfiguration());\n+\n+            try {\n+                archiveService.update(\n+                        ConfigurationHelper.CONFIGURATIONOBJECTS_OBJECT_TYPE,\n+                        ConfigurationProviderSingleton.getDomain(),\n+                        details,\n+                        confObjsList,\n+                        null);\n+            } catch (MALException ex) {\n+                Logger.getLogger(PersistLatestServiceConfigurationAdapter.class.getName()).log(Level.SEVERE, null, ex);\n+            } catch (MALInteractionException ex) {\n+                Logger.getLogger(PersistLatestServiceConfigurationAdapter.class.getName()).log(Level.SEVERE,\n+                        serviceImpl.getCOMService().getName()\n+                        + \" service: The configuration could not be updated! objectId: \" + serviceConfigObjId, ex);\n             }\n         });\n     }"
  },
  {
    "sha": "909e5d06955b2abbc752dfaf303de24176a024db",
    "filename": "core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ActionManager.java",
    "status": "modified",
    "additions": 57,
    "deletions": 63,
    "changes": 120,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ActionManager.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ActionManager.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ActionManager.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -389,45 +389,42 @@ protected void forward(final Long actionInstId, final ActionInstanceDetails acti\n         //TODO: after issue I expect to get the identity-id here -> issue #179\n         final Identifier name = getName(actionDetails.getDefInstId());\n \n-        actionsExecutor.execute(new Runnable() {\n-            @Override\n-            public void run() {\n-                try {\n-                    final ObjectKey key = new ObjectKey(ConfigurationProviderSingleton.getDomain(), actionInstId);\n+        actionsExecutor.execute(() -> {\n+            try {\n+                final ObjectKey key = new ObjectKey(ConfigurationProviderSingleton.getDomain(), actionInstId);\n \n-                    URI uriTo = interaction.getMessageHeader().getURITo();\n-                    URI uriNextDestination = null;\n-                    String[] nodes = uriTo.toString().split(\"@\");\n+                URI uriTo = interaction.getMessageHeader().getURITo();\n+                URI uriNextDestination = null;\n+                String[] nodes = uriTo.toString().split(\"@\");\n \n-                    if (nodes.length > 1) { // Remove the first characters until the '@'; +1 below for the '@'\n-                        uriNextDestination = new URI(uriTo.toString().substring(nodes[0].length() + 1));\n-                    }\n-\n-                    // Reception\n-                    ObjectId sourceRec = new ObjectId(ActionHelper.ACTIONINSTANCE_OBJECT_TYPE, key);\n-                    getActivityTrackingService().publishReceptionEvent(new URI(nodes[0]),\n-                            interaction.getMessageHeader().getNetworkZone(), true, null, uriNextDestination, sourceRec);\n+                if (nodes.length > 1) { // Remove the first characters until the '@'; +1 below for the '@'\n+                    uriNextDestination = new URI(uriTo.toString().substring(nodes[0].length() + 1));\n+                }\n \n-                    UInteger errorNumber;\n+                // Reception\n+                ObjectId sourceRec = new ObjectId(ActionHelper.ACTIONINSTANCE_OBJECT_TYPE, key);\n+                getActivityTrackingService().publishReceptionEvent(new URI(nodes[0]),\n+                        interaction.getMessageHeader().getNetworkZone(), true, null, uriNextDestination, sourceRec);\n \n-                    // Call the Action\n-                    if (actions != null) {\n-                        errorNumber = actions.actionArrived(name, actionDetails.getArgumentValues(),\n-                                actionInstId, actionDetails.getStageProgressRequired(), interaction);\n-                    } else {\n-                        errorNumber = new UInteger(0);\n-                    }\n+                UInteger errorNumber;\n \n-                    // Publish forward success\n-                    ObjectId sourceFor = new ObjectId(ActionHelper.ACTIONINSTANCE_OBJECT_TYPE, key);\n-                    getActivityTrackingService().publishForwardEvent(new URI(nodes[0]),\n-                            interaction.getMessageHeader().getNetworkZone(), (errorNumber == null),\n-                            null, uriNextDestination, sourceFor);\n-                } catch (MALInteractionException ex) {\n-                    Logger.getLogger(ActionManager.class.getName()).log(Level.SEVERE, null, ex);\n-                } catch (MALException ex) {\n-                    Logger.getLogger(ActionManager.class.getName()).log(Level.SEVERE, null, ex);\n+                // Call the Action\n+                if (actions != null) {\n+                    errorNumber = actions.actionArrived(name, actionDetails.getArgumentValues(),\n+                            actionInstId, actionDetails.getStageProgressRequired(), interaction);\n+                } else {\n+                    errorNumber = new UInteger(0);\n                 }\n+\n+                // Publish forward success\n+                ObjectId sourceFor = new ObjectId(ActionHelper.ACTIONINSTANCE_OBJECT_TYPE, key);\n+                getActivityTrackingService().publishForwardEvent(new URI(nodes[0]),\n+                        interaction.getMessageHeader().getNetworkZone(), (errorNumber == null),\n+                        null, uriNextDestination, sourceFor);\n+            } catch (MALInteractionException ex) {\n+                Logger.getLogger(ActionManager.class.getName()).log(Level.SEVERE, null, ex);\n+            } catch (MALException ex) {\n+                Logger.getLogger(ActionManager.class.getName()).log(Level.SEVERE, null, ex);\n             }\n         });\n     }\n@@ -438,47 +435,44 @@ protected void execute(final Long actionInstId, final ActionInstanceDetails acti\n         actionInstances.put(actionInstId, actionDetails);\n         final Identifier name = this.getName(actionDetails.getDefInstId());\n \n-        actionsExecutor.execute(new Runnable() {\n-            @Override\n-            public void run() {\n-                final ActionDefinitionDetails actionDefinition = getActionDefinitionFromDefId(actionDetails.getDefInstId());\n+        actionsExecutor.execute(() -> {\n+            final ActionDefinitionDetails actionDefinition = getActionDefinitionFromDefId(actionDetails.getDefInstId());\n \n-                //from here on: requirement 3.2.8.b\n-                // Publish Event stating that the execution was initialized\n-                if (actionDetails.getStageStartedRequired()) {  // ActionInstanceDetails field requirement\n-                    reportExecutionStart(true, null, actionDefinition.getProgressStepCount().getValue(),\n-                            actionInstId, interaction, connectionDetails);\n-                }\n+            //from here on: requirement 3.2.8.b\n+            // Publish Event stating that the execution was initialized\n+            if (actionDetails.getStageStartedRequired()) {  // ActionInstanceDetails field requirement\n+                reportExecutionStart(true, null, actionDefinition.getProgressStepCount().getValue(),\n+                        actionInstId, interaction, connectionDetails);\n+            }\n \n-                UInteger errorNumber;\n+            UInteger errorNumber;\n \n-                // Call the Action\n-                if (actions != null) {\n-                    //requirement: 3.2.8.j, 3.2.5.a -> actionArrived will send the progress-events\n-                    errorNumber = actions.actionArrived(name, actionDetails.getArgumentValues(),\n-                            actionInstId, actionDetails.getStageProgressRequired(), interaction);\n-                } else {\n-                    errorNumber = new UInteger(0);\n-                }\n+            // Call the Action\n+            if (actions != null) {\n+                //requirement: 3.2.8.j, 3.2.5.a -> actionArrived will send the progress-events\n+                errorNumber = actions.actionArrived(name, actionDetails.getArgumentValues(),\n+                        actionInstId, actionDetails.getStageProgressRequired(), interaction);\n+            } else {\n+                errorNumber = new UInteger(0);\n+            }\n \n-                // Publish Event stating that the execution was finished\n-                if (actionDetails.getStageCompletedRequired()) {  // ActionInstanceDetails field requirement\n-                    reportExecutionComplete((errorNumber == null), errorNumber,\n-                            actionDefinition.getProgressStepCount().getValue(),\n-                            actionInstId, interaction, connectionDetails);\n-                }\n+            // Publish Event stating that the execution was finished\n+            if (actionDetails.getStageCompletedRequired()) {  // ActionInstanceDetails field requirement\n+                reportExecutionComplete((errorNumber == null), errorNumber,\n+                        actionDefinition.getProgressStepCount().getValue(),\n+                        actionInstId, interaction, connectionDetails);\n+            }\n \n-                actionInstances.remove(actionInstId);\n+            actionInstances.remove(actionInstId);\n \n-//                //TODO: i think the failure was published in actionArrived method and only if it wasnt, \n-                //the following completion event shall be published -> issue\n+//                //TODO: i think the failure was published in actionArrived method and only if it wasnt,\n+            //the following completion event shall be published -> issue\n //                // Publish Event stating that the execution was finished\n //\t\t\t\tsuccess = actions.getFailureStage() != actionDefinition.getProgressStepCount().getValue() + 2;\n //                if (actionDetails.getStageCompletedRequired()) {  // ActionInstanceDetails field requirement\n-//                    reportExecutionComplete(success, success ? null : actions.getFailureCode(), \n+//                    reportExecutionComplete(success, success ? null : actions.getFailureCode(),\n //                        actionDefinition.getProgressStepCount().getValue(), actionInstId, interaction, connectionDetails);\n //                }\n-            }\n         });\n \n     }"
  },
  {
    "sha": "0b7ec27742f1bd96f8a2af4da3f89b244f1d6e7b",
    "filename": "core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/AggregationProviderServiceImpl.java",
    "status": "modified",
    "additions": 37,
    "deletions": 46,
    "changes": 83,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/AggregationProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/AggregationProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/AggregationProviderServiceImpl.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -1033,32 +1033,29 @@ private void removeFilteredTimeoutReporting(Long identityId) {\n         }\n \n         private void startUpdatesTimer(final Long identityId, final Duration interval) {\n-            updateTimerList.get(identityId).scheduleTask(new Thread() {\n-\n-                @Override\n-                public void run() {  // requirement: 3.7.3.c\n-                    if (active) {\n-                        AggregationDefinitionDetails def = manager.getAggregationDefinition(identityId);\n-                        checkSampleIntervalAndSampleParam(identityId, true);\n-                        \n-                        // To prevent race conditions with the other timer\n-                        synchronized (lock) {\n-                            if (!def.getFilterEnabled()) { // The Filter is not enabled? // requirement: 3.7.2.a.a, \n-                                publishPeriodicAggregationUpdate(identityId, \n+            // the time is being converted to milliseconds by multiplying by 1000\n+            updateTimerList.get(identityId).scheduleTask(new Thread(() -> {  // requirement: 3.7.3.c\n+                if (active) {\n+                    AggregationDefinitionDetails def = manager.getAggregationDefinition(identityId);\n+                    checkSampleIntervalAndSampleParam(identityId, true);\n+\n+                    // To prevent race conditions with the other timer\n+                    synchronized (lock) {\n+                        if (!def.getFilterEnabled()) { // The Filter is not enabled? // requirement: 3.7.2.a.a,\n+                            publishPeriodicAggregationUpdate(identityId,\n+                                    manager.getAggregationValue(identityId, GenerationMode.PERIODIC)); //requirement: 3.7.3.h\n+                            manager.resetAggregationSampleHelperVariables(identityId);\n+                        } else {  // requirement: 3.7.2.a.c,\n+                            if (manager.isFilterTriggered(identityId) == true) { // The Filter is on and triggered? requirement: 3.7.2.6\n+                                publishPeriodicAggregationUpdate(identityId,\n                                         manager.getAggregationValue(identityId, GenerationMode.PERIODIC)); //requirement: 3.7.3.h\n                                 manager.resetAggregationSampleHelperVariables(identityId);\n-                            } else {  // requirement: 3.7.2.a.c, \n-                                if (manager.isFilterTriggered(identityId) == true) { // The Filter is on and triggered? requirement: 3.7.2.6\n-                                    publishPeriodicAggregationUpdate(identityId, \n-                                            manager.getAggregationValue(identityId, GenerationMode.PERIODIC)); //requirement: 3.7.3.h\n-                                    manager.resetAggregationSampleHelperVariables(identityId);\n-                                    resetFilterTimeoutTimer(identityId);        // Reset the timer\n-                                }\n+                                resetFilterTimeoutTimer(identityId);        // Reset the timer\n                             }\n                         }\n                     }\n-                } // the time is being converted to milliseconds by multiplying by 1000 \n-            }, (int) (interval.getValue() * 1000), (int) (interval.getValue() * 1000),\n+                }\n+            }), (int) (interval.getValue() * 1000), (int) (interval.getValue() * 1000),\n             TimeUnit.MILLISECONDS, true); // requirement: 3.7.3.g\n         }\n \n@@ -1081,22 +1078,19 @@ private void resetFilterTimeoutTimer(Long objId) {\n         }\n \n         private void startFilterTimeoutTimer(final Long identityId, final Duration interval) {\n-            filterTimeoutTimerList.get(identityId).scheduleTask(new Thread() {\n-\n-                @Override\n-                public void run() {  // requirement: 3.7.2.a.c, 3.7.3.n\n-                    if (active) {\n-                        manager.setFilterTriggered(identityId, true);\n-                        //get the new samples and update the aggregation in the internal list\n-                        for (int index = 0; index < manager.getAggregationDefinition(identityId).getParameterSets().size(); index++) {\n-                            manager.sampleParam(identityId, index);\n-                        }\n-                        //publish the values in the internal list\n-                        publishPeriodicAggregationUpdate(identityId, manager.getAggregationValue(identityId, GenerationMode.FILTERED_TIMEOUT));\n-                        manager.resetAggregationSampleHelperVariables(identityId);\n+            // the time is being converted to milliseconds by multiplying by 1000\n+            filterTimeoutTimerList.get(identityId).scheduleTask(new Thread(() -> {  // requirement: 3.7.2.a.c, 3.7.3.n\n+                if (active) {\n+                    manager.setFilterTriggered(identityId, true);\n+                    //get the new samples and update the aggregation in the internal list\n+                    for (int index = 0; index < manager.getAggregationDefinition(identityId).getParameterSets().size(); index++) {\n+                        manager.sampleParam(identityId, index);\n                     }\n-                } // the time is being converted to milliseconds by multiplying by 1000\n-            }, 0, (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS, true);\n+                    //publish the values in the internal list\n+                    publishPeriodicAggregationUpdate(identityId, manager.getAggregationValue(identityId, GenerationMode.FILTERED_TIMEOUT));\n+                    manager.resetAggregationSampleHelperVariables(identityId);\n+                }\n+            }), 0, (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS, true);\n         }\n \n         private void stopFilterTimeoutTimer(final Long objId) {\n@@ -1215,18 +1209,15 @@ private void startTimer(final int index, Duration interval) {  // requirement: 3\n             final Long identityId = aggregationObjIdList.get(index);\n             final int indexOfparameterSet = parameterSetIndexList.get(index);\n \n-            sampleTimerList.get(index).scheduleTask(new Thread() {\n-                @Override\n-                public void run() {\n-                    if (active) {\n-                        // To prevent race conditions with the other timer\n-                        synchronized (lock) {\n-                            //create the new paraemtersamples and set them if filter triggered or not enabled\n-                            manager.sampleAndFilterParam(identityId, indexOfparameterSet);\n-                        }\n+            sampleTimerList.get(index).scheduleTask(new Thread(() -> {\n+                if (active) {\n+                    // To prevent race conditions with the other timer\n+                    synchronized (lock) {\n+                        //create the new paraemtersamples and set them if filter triggered or not enabled\n+                        manager.sampleAndFilterParam(identityId, indexOfparameterSet);\n                     }\n                 }\n-            }, 0, (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS, true); // the time has to be converted to milliseconds by multiplying by 1000\n+            }), 0, (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS, true); // the time has to be converted to milliseconds by multiplying by 1000\n         }\n \n         private void stopTimer(int index) {"
  },
  {
    "sha": "6af10b3ed8cd5a680bf0e601a4d9f4a5d6bcc95c",
    "filename": "core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/CheckProviderServiceImpl.java",
    "status": "modified",
    "additions": 24,
    "deletions": 29,
    "changes": 53,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/CheckProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/CheckProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/CheckProviderServiceImpl.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -1025,22 +1025,20 @@ private void removePeriodicChecking(Long objId) {\n \n         private void startTimer(final Long checkLinkId, Duration interval) {  // requirement: 3.7.2.11\n \n-            sampleTimerList.get(checkLinkId).scheduleTask(new Thread() {\n-                @Override\n-                public void run() { // Periodic Checking\n-                    if (active) {\n-                        try {\n-                            final ObjectId paramId = manager.getCheckLinkLinks(checkLinkId).getSource();\n-                            //todo: the source link should be the ObjectId-of the parameterValue\n-                            manager.executeCheck(checkLinkId,\n-                                    paramId == null ? null : parameterManager.getParameterValue(manager.getCheckLinkLinks(checkLinkId).getSource().getKey().getInstId()),\n-                                    false, false, null);\n-                        } catch (MALInteractionException ex) {\n-                            Logger.getLogger(CheckProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n-                        }\n+            // the time has to be converted to milliseconds by multiplying by 1000\n+            sampleTimerList.get(checkLinkId).scheduleTask(new Thread(() -> { // Periodic Checking\n+                if (active) {\n+                    try {\n+                        final ObjectId paramId = manager.getCheckLinkLinks(checkLinkId).getSource();\n+                        //todo: the source link should be the ObjectId-of the parameterValue\n+                        manager.executeCheck(checkLinkId,\n+                                paramId == null ? null : parameterManager.getParameterValue(manager.getCheckLinkLinks(checkLinkId).getSource().getKey().getInstId()),\n+                                false, false, null);\n+                    } catch (MALInteractionException ex) {\n+                        Logger.getLogger(CheckProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n                     }\n-                } // the time has to be converted to milliseconds by multiplying by 1000\n-            }, 0, (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS, true); // requirement: 3.6.2.g\n+                }\n+            }), 0, (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS, true); // requirement: 3.6.2.g\n         }\n \n         private void stopTimer(Long objId) {\n@@ -1117,20 +1115,17 @@ private void removePeriodicReportingMax(Long objId) {\n         }\n \n         private void startUpdatesTimer(final Long checkLinkId, final Duration interval) {\n-            updateTimerList.get(checkLinkId).scheduleTask(new Thread() {\n-\n-                @Override\n-                public void run() {\n-                    try {\n-                        //paramId is null for compound check\n-                        final ObjectId paramSource = manager.getCheckLinkLinks(checkLinkId).getSource();\n-                        //requirement: 3.5.4.m -> Source Object = null\n-                        manager.executeCheck(checkLinkId, paramSource == null ? null : parameterManager.getParameterValue(paramSource.getKey().getInstId()), false, true, null);\n-                    } catch (MALInteractionException ex) {\n-                        Logger.getLogger(CheckProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n-                    }\n-                } // the time is being converted to milliseconds by multiplying by 1000  (starting delay included)\n-            }, (int) (interval.getValue() * 1000), (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS,\n+            // the time is being converted to milliseconds by multiplying by 1000  (starting delay included)\n+            updateTimerList.get(checkLinkId).scheduleTask(new Thread(() -> {\n+                try {\n+                    //paramId is null for compound check\n+                    final ObjectId paramSource = manager.getCheckLinkLinks(checkLinkId).getSource();\n+                    //requirement: 3.5.4.m -> Source Object = null\n+                    manager.executeCheck(checkLinkId, paramSource == null ? null : parameterManager.getParameterValue(paramSource.getKey().getInstId()), false, true, null);\n+                } catch (MALInteractionException ex) {\n+                    Logger.getLogger(CheckProviderServiceImpl.class.getName()).log(Level.SEVERE, null, ex);\n+                }\n+            }), (int) (interval.getValue() * 1000), (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS,\n             true); // requirement: 3.5.3.ff\n         }\n "
  },
  {
    "sha": "71c856adb39346c74d6b86f706fa1f94fee87362",
    "filename": "core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ParameterProviderServiceImpl.java",
    "status": "modified",
    "additions": 8,
    "deletions": 11,
    "changes": 19,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ParameterProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ParameterProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ParameterProviderServiceImpl.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -844,19 +844,16 @@ private void removePeriodicReporting(Long identityId) {\n          * @param interval\n          */\n         private void startTimer(final Long identityId, final Duration interval) {  // requirement: 3.3.3.c\n-            timerList.get(identityId).scheduleTask(new Thread() {\n-                @Override\n-                public void run() {\n-                    if (active) {\n-                        if (identityId == -1) {\n-                            return;\n-                        }\n-                        if (manager.getParameterDefinition(identityId).getGenerationEnabled()) {\n-                            publishPeriodicParameterUpdate(identityId);\n-                        }\n+            timerList.get(identityId).scheduleTask(new Thread(() -> {\n+                if (active) {\n+                    if (identityId == -1) {\n+                        return;\n+                    }\n+                    if (manager.getParameterDefinition(identityId).getGenerationEnabled()) {\n+                        publishPeriodicParameterUpdate(identityId);\n                     }\n                 }\n-            }, 0, (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS, true); // the time has to be converted to milliseconds by multiplying by 1000\n+            }), 0, (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS, true); // the time has to be converted to milliseconds by multiplying by 1000\n         }\n \n         private void stopTimer(final Long identityId) {"
  },
  {
    "sha": "4f26bcc496e953efdb48a1fcad0ced15e7bfd6bd",
    "filename": "core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/StatisticProviderServiceImpl.java",
    "status": "modified",
    "additions": 10,
    "deletions": 15,
    "changes": 25,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/StatisticProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/StatisticProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/StatisticProviderServiceImpl.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -1067,14 +1067,12 @@ private void addPeriodicSampling(Long identityId) {\n         }\n \n         private void startTimer(final Long identityId, final Duration interval, final boolean useConverted) {  // requirement: 3.6.2.g\n-            sampleTimerList.get(identityId).scheduleTask(new Thread() {\n-                @Override\n-                public void run() { // Periodic sampling\n-                    if (active) {\n-                        sampleParamValue(identityId, useConverted);\n-                    }\n-                } // the time has to be converted to milliseconds by multiplying by 1000\n-            }, 0, (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS, true); // requirement: 3.6.2.g\n+            // the time has to be converted to milliseconds by multiplying by 1000\n+            sampleTimerList.get(identityId).scheduleTask(new Thread(() -> { // Periodic sampling\n+                if (active) {\n+                    sampleParamValue(identityId, useConverted);\n+                }\n+            }), 0, (int) (interval.getValue() * 1000), TimeUnit.MILLISECONDS, true); // requirement: 3.6.2.g\n         }\n \n         private void sampleParamValue(final Long identityId, final boolean useConverted) {\n@@ -1291,14 +1289,11 @@ private void removePeriodicReporting(Long objId) {\n         }\n \n         private void startReportingTimer(final Long statLinkId, final Duration interval, boolean immediateReport) {\n-            updateTimerList.get(statLinkId).scheduleTask(new Thread() {\n-                @Override\n-                public void run() {  //requirement: 3.6.2.h, 3.6.3.b\n-                    if (active) {\n-                        reportStatistic(statLinkId);\n-                    }\n+            updateTimerList.get(statLinkId).scheduleTask(new Thread(() -> {  //requirement: 3.6.2.h, 3.6.3.b\n+                if (active) {\n+                    reportStatistic(statLinkId);\n                 }\n-            }, immediateReport ? 0 : (int) (interval.getValue() * 1000), (int) (interval.getValue() * 1000),\n+            }), immediateReport ? 0 : (int) (interval.getValue() * 1000), (int) (interval.getValue() * 1000),\n             TimeUnit.MILLISECONDS, true); //requirement: 3.6.2.h, 3.6.3.b\n         }\n "
  },
  {
    "sha": "1a2b6edfc5846e4c2f414de545a2b43c1a2335ab",
    "filename": "core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/AutonomousADCSProviderServiceImpl.java",
    "status": "modified",
    "additions": 13,
    "deletions": 23,
    "changes": 36,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/AutonomousADCSProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/AutonomousADCSProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/AutonomousADCSProviderServiceImpl.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -329,16 +329,11 @@ private void startGeneration()\n     publishTimer.stopLast(); // is this really necessary?\n     //publishTimer = new TaskScheduler(1);\n     generationEnabled = true;\n-    publishTimer.scheduleTask(new Thread()\n-    {\n-      @Override\n-      public void run()\n-      {\n-        if (generationEnabled) {\n-          publishCurrentAttitude();\n-        }\n+    publishTimer.scheduleTask(new Thread(() -> {\n+      if (generationEnabled) {\n+        publishCurrentAttitude();\n       }\n-    }, monitoringPeriod, monitoringPeriod, TimeUnit.MILLISECONDS, true);\n+    }), monitoringPeriod, monitoringPeriod, TimeUnit.MILLISECONDS, true);\n   }\n \n   private void stopGeneration()\n@@ -362,21 +357,16 @@ public synchronized void setAttitudeControlDuration(final Duration duration)\n     final long remainingMillis = (long) (duration.getValue() * 1000);\n     attitudeControlEndTime = System.currentTimeMillis() + remainingMillis;\n     // Start auto-timer to unset\n-    autoUnsetThread = new Thread()\n-    {\n-      @Override\n-      public void run()\n-      {\n-        try {\n-          Thread.sleep(remainingMillis);\n-          attitudeControlEndTime = 0;\n-          unsetAttitude();\n-        } catch (InterruptedException ex) {\n-          // The unset operation was called manually, nothing wrong here, the automatic unset is disabled! :)\n-        }\n-\n+    autoUnsetThread = new Thread(() -> {\n+      try {\n+        Thread.sleep(remainingMillis);\n+        attitudeControlEndTime = 0;\n+        unsetAttitude();\n+      } catch (InterruptedException ex) {\n+        // The unset operation was called manually, nothing wrong here, the automatic unset is disabled! :)\n       }\n-    };\n+\n+    });\n     autoUnsetThread.start();\n \n   }"
  },
  {
    "sha": "1396a4b5436a6db35e4394067f372012cff7efc8",
    "filename": "core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/CameraProviderServiceImpl.java",
    "status": "modified",
    "additions": 5,
    "deletions": 10,
    "changes": 15,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/CameraProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/CameraProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/CameraProviderServiceImpl.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -284,18 +284,13 @@ public void enableStream(Boolean enable, final Duration streamingRate,\n       int period = (int) (streamingRate.getValue() * 1000); // In milliseconds\n \n       //publishTimer = new TaskScheduler(1);\n-      publishTimer.scheduleTask(new Thread()\n-      {\n-        @Override\n-        public void run()\n-        {\n-          if (running) {\n-            if (cameraInUse) {\n-              streamPicturesUpdate(firstEntityKey, settings);\n-            }\n+      publishTimer.scheduleTask(new Thread(() -> {\n+        if (running) {\n+          if (cameraInUse) {\n+            streamPicturesUpdate(firstEntityKey, settings);\n           }\n         }\n-      }, period, period, TimeUnit.MILLISECONDS, true);\n+      }), period, period, TimeUnit.MILLISECONDS, true);\n     }\n   }\n "
  },
  {
    "sha": "69a3056a0dd0a261f9a286857a7e9c095bc935ba",
    "filename": "core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/GPSProviderServiceImpl.java",
    "status": "modified",
    "additions": 37,
    "deletions": 40,
    "changes": 77,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/GPSProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/GPSProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/GPSProviderServiceImpl.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -545,53 +545,50 @@ public void pause() {\n     }\n \n     public void init() {\n-      timer.scheduleTask(new Thread() {\n-        @Override\n-        public void run() {\n-          if (active) {\n-            if (!adapter.isUnitAvailable()) { // Is the unit available?\n-              return;\n-            }\n+      timer.scheduleTask(new Thread(() -> {\n+        if (active) {\n+          if (!adapter.isUnitAvailable()) { // Is the unit available?\n+            return;\n+          }\n \n-            final Position pos = adapter.getCurrentPosition(); // Current Position\n+          final Position pos = adapter.getCurrentPosition(); // Current Position\n \n-            synchronized (MUTEX) {\n-              currentPosition = pos;\n-              timeOfCurrentPosition = System.currentTimeMillis();\n-            }\n+          synchronized (MUTEX) {\n+            currentPosition = pos;\n+            timeOfCurrentPosition = System.currentTimeMillis();\n+          }\n+\n+          // Compare with all the available definitions and raise\n+          // NearbyPositionAlerts in case something has changed\n+          LongList ids = manager.listAll();\n+\n+          for (int i = 0; i < ids.size(); i++) {\n+            Long objId = ids.get(i);\n+            NearbyPositionDefinition def = manager.get(objId);\n+            Boolean previousState = manager.getPreviousStatus(objId);\n+\n+            try {\n+              double distance = PositionsCalculator.deltaDistanceFrom2Points(def.getPosition(),\n+                  pos);\n+              boolean isInside = (distance < def.getDistanceBoundary());\n+\n+              if (previousState == null) { // Maybe it's the first run...\n+                manager.setPreviousStatus(objId, isInside);\n+                continue;\n+              }\n \n-            // Compare with all the available definitions and raise\n-            // NearbyPositionAlerts in case something has changed\n-            LongList ids = manager.listAll();\n-\n-            for (int i = 0; i < ids.size(); i++) {\n-              Long objId = ids.get(i);\n-              NearbyPositionDefinition def = manager.get(objId);\n-              Boolean previousState = manager.getPreviousStatus(objId);\n-\n-              try {\n-                double distance = PositionsCalculator.deltaDistanceFrom2Points(def.getPosition(),\n-                    pos);\n-                boolean isInside = (distance < def.getDistanceBoundary());\n-\n-                if (previousState == null) { // Maybe it's the first run...\n-                  manager.setPreviousStatus(objId, isInside);\n-                  continue;\n-                }\n-\n-                // If the status changed, then publish a Nearby Event\n-                if (previousState != isInside) {\n-                  publishNearbyPositionUpdate(objId, isInside);\n-                  manager.setPreviousStatus(objId, isInside);\n-                }\n-              } catch (IOException ex) {\n-                Logger.getLogger(GPSProviderServiceImpl.class.getName()).log(Level.SEVERE, null,\n-                    ex);\n+              // If the status changed, then publish a Nearby Event\n+              if (previousState != isInside) {\n+                publishNearbyPositionUpdate(objId, isInside);\n+                manager.setPreviousStatus(objId, isInside);\n               }\n+            } catch (IOException ex) {\n+              Logger.getLogger(GPSProviderServiceImpl.class.getName()).log(Level.SEVERE, null,\n+                  ex);\n             }\n           }\n         }\n-      }, 0, PERIOD, TimeUnit.MILLISECONDS, true);\n+      }), 0, PERIOD, TimeUnit.MILLISECONDS, true);\n     }\n   }\n "
  },
  {
    "sha": "84f13afe157244ad802c24f3217a27a4e0da7ba3",
    "filename": "core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/AppsLauncherManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/AppsLauncherManager.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/AppsLauncherManager.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/AppsLauncherManager.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -431,7 +431,7 @@ protected void startAppProcess(final ProcessExecutionHandler handler,\n           appLauncherCommand), Arrays.toString(EnvironmentUtils.toStrings(env))});\n     final Process proc = pb.start();\n     handler.monitorProcess(proc);\n-    Runtime.getRuntime().addShutdownHook(new Thread(() -> proc.destroy()));\n+    Runtime.getRuntime().addShutdownHook(new Thread(proc::destroy));\n     handlers.put(handler.getObjId(), handler);\n     this.setRunning(handler.getObjId(), true, interaction); // Update the Archive\n   }"
  },
  {
    "sha": "cf025265b10ada709d199a9c6cbb78b58058e4af",
    "filename": "core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/CommandExecutorProviderServiceImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/CommandExecutorProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/CommandExecutorProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/CommandExecutorProviderServiceImpl.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -213,7 +213,7 @@ public Long runCommand(CommandDetails command, MALInteraction interaction) throw\n       ProcessExecutionHandler handler = new ProcessExecutionHandler(new CallbacksImpl(),\n           storedCommandObject);\n       handler.monitorProcess(proc);\n-      Runtime.getRuntime().addShutdownHook(new Thread(() -> proc.destroy()));\n+      Runtime.getRuntime().addShutdownHook(new Thread(proc::destroy));\n     } catch (IOException ex) {\n       LOGGER.log(Level.SEVERE, null, ex);\n       throw new MALException(\"Cannot start the process!\", ex);"
  },
  {
    "sha": "86856f3eb6e86c1da52ee3ea2cc97ff8837328f7",
    "filename": "core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/ProcessExecutionHandler.java",
    "status": "modified",
    "additions": 8,
    "deletions": 13,
    "changes": 21,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/ProcessExecutionHandler.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/ProcessExecutionHandler.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/ProcessExecutionHandler.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -105,20 +105,15 @@ public void monitorProcess(final Process process)\n         process.getErrorStream())));\n     stdoutReader.start();\n     stderrReader.start();\n-    new Thread()\n-    {\n-      @Override\n-      public void run()\n-      {\n-        try {\n-          int exitCode = process.waitFor();\n-          cb.processStopped(objId, exitCode);\n-        } catch (InterruptedException ex) {\n-          // Thread interrupted, pretend the application exited succesfully\n-          cb.processStopped(objId, 0);\n-        }\n+    new Thread(() -> {\n+      try {\n+        int exitCode = process.waitFor();\n+        cb.processStopped(objId, exitCode);\n+      } catch (InterruptedException ex) {\n+        // Thread interrupted, pretend the application exited succesfully\n+        cb.processStopped(objId, 0);\n       }\n-    }.start();\n+    }).start();\n   }\n \n   private Thread createReaderThread(final StringBuffer buf, final BufferedReader br)"
  },
  {
    "sha": "33e6b90289f7f70885d135b14cd7e3ab6c7d464a",
    "filename": "core/nmf-composites/generic-ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/ProtocolBridge.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/nmf-composites/generic-ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/ProtocolBridge.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/nmf-composites/generic-ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/ProtocolBridge.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/nmf-composites/generic-ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/ProtocolBridge.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -45,7 +45,7 @@\n     private MALEndpoint epA;\n     private MALEndpoint epB;\n \n-    public void init(final String protocolA, final String protocolB, final Map properties) throws MALException, Exception {\n+    public void init(final String protocolA, final String protocolB, final Map properties) throws Exception {\n         transportA = createTransport(protocolA, properties);\n         transportB = createTransport(protocolB, properties);\n         epA = createEndpoint(protocolA, transportA);"
  },
  {
    "sha": "cb8af1cf5b26599c416642a728a47c90615d7616",
    "filename": "core/nmf-composites/generic-ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/ProtocolBridgeSPP.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/nmf-composites/generic-ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/ProtocolBridgeSPP.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/nmf-composites/generic-ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/ProtocolBridgeSPP.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/nmf-composites/generic-ground-mo-proxy/src/main/java/esa/mo/nmf/groundmoproxy/ProtocolBridgeSPP.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -49,7 +49,7 @@\n     private MALEndpoint epB;\n     private VirtualSPPURIsManager virtualSPPURI;\n \n-    public void init(final String protocol, final Map properties) throws MALException, Exception {\n+    public void init(final String protocol, final Map properties) throws Exception {\n         transportA = createTransport(PROTOCOL_SPP, properties);\n         transportB = createTransport(protocol, properties);\n "
  },
  {
    "sha": "d62f913d42afc1005280a9c183800447f5e0692c",
    "filename": "core/nmf-package-lib/src/main/java/esa/mo/nmf/nmfpackage/NMFPackageManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/nmf-package-lib/src/main/java/esa/mo/nmf/nmfpackage/NMFPackageManager.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/core/nmf-package-lib/src/main/java/esa/mo/nmf/nmfpackage/NMFPackageManager.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/nmf-package-lib/src/main/java/esa/mo/nmf/nmfpackage/NMFPackageManager.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -45,7 +45,7 @@\n     private static final String INSTALLED_RECEIPTS_FOLDER_PROPERTY = \"esa.mo.nmf.nmfpackage.receipts\";\n     private static final String RECEIPT_ENDING = \".receipt\";\n \n-    public static void install(final String packageLocation) throws FileNotFoundException, IOException {\n+    public static void install(final String packageLocation) throws IOException {\n         // Get the File to be installed\n         ZipFile zipFile = new ZipFile(packageLocation);\n         ZipEntry receipt = zipFile.getEntry(HelperNMFPackage.RECEIPT_FILENAME);"
  },
  {
    "sha": "9a9b23f17115fe804c84c0e45b8f5b501070c5f9",
    "filename": "mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/GuiMainWindow.java",
    "status": "modified",
    "additions": 272,
    "deletions": 393,
    "changes": 665,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/GuiMainWindow.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/GuiMainWindow.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/GuiMainWindow.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -175,16 +175,13 @@ public GuiMainWindow(final GuiApp parent, String targetURL, int targetPort) {\n     this.targetPort = targetPort;\n     window = this;\n \n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        createAndShowGUI();\n-        parent.startSocket();\n-        try {\n-          Thread.sleep(2000);\n-        } catch (InterruptedException e) {\n-          e.printStackTrace();\n-        }\n+    javax.swing.SwingUtilities.invokeLater(() -> {\n+      createAndShowGUI();\n+      parent.startSocket();\n+      try {\n+        Thread.sleep(2000);\n+      } catch (InterruptedException e) {\n+        e.printStackTrace();\n       }\n     });\n   }\n@@ -269,23 +266,17 @@ private void createTabsBasedOnDeviceList(LinkedList<SimulatorDeviceData> deviceL\n             new WholeTextAreaObject(wholeField, true));\n         final Boolean updateValues = true;\n         final String targetDevice = simulatorDeviceData.getName();\n-        checkBox.addItemListener(new ItemListener() {\n-          @Override\n-          public void itemStateChanged(ItemEvent e) {\n-            hashTableDataOutAgregate.get(targetDevice)\n-                .setUpdateValues(e.getStateChange() == ItemEvent.SELECTED);\n-            // updateValues = (e.getStateChange() == ItemEvent.SELECTED);\n-          }\n+        checkBox.addItemListener(e -> {\n+          hashTableDataOutAgregate.get(targetDevice)\n+              .setUpdateValues(e.getStateChange() == ItemEvent.SELECTED);\n+          // updateValues = (e.getStateChange() == ItemEvent.SELECTED);\n         });\n \n-        copyToClipBoard.addActionListener(new ActionListener() {\n-          @Override\n-          public void actionPerformed(ActionEvent e) {\n-            Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();\n-            StringSelection stringSelection = new StringSelection(\n-                hashTableDataOutAgregate.get(targetDevice).getTextArea().getText());\n-            clpbrd.setContents(stringSelection, null);\n-          }\n+        copyToClipBoard.addActionListener(e -> {\n+          Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();\n+          StringSelection stringSelection = new StringSelection(\n+              hashTableDataOutAgregate.get(targetDevice).getTextArea().getText());\n+          clpbrd.setContents(stringSelection, null);\n         });\n \n         JPanel linePanel = new JPanel();\n@@ -386,159 +377,112 @@ private void createAndShowGUI() {\n     this.frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n \n     txtTimeFactor.setPreferredSize(new Dimension(35, 20));\n-    txtTimeFactor.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent e) {\n-        String newFactor = txtTimeFactor.getText();\n-        int newTimeFactor = Integer.parseInt(newFactor);\n-        if (newTimeFactor < 1) {\n-          newTimeFactor = 1;\n-        }\n-        if (newTimeFactor > 1000) {\n-          newTimeFactor = 1000;\n-        }\n-        parent.addGUIInteraction(\"TimeFactor:\" + String.valueOf(newTimeFactor));\n-      }\n-    });\n-    chkBoxShowAll.addItemListener(new ItemListener() {\n-      @Override\n-      public void itemStateChanged(ItemEvent e) {\n-        putManualCommandsInCombo(e.getStateChange() == ItemEvent.SELECTED);\n-      }\n-    });\n-    chkBoxPeriodicSending.addItemListener(new ItemListener() {\n-      @Override\n-      public void itemStateChanged(ItemEvent e) {\n-        isEnduranceTest = (e.getStateChange() == ItemEvent.SELECTED);\n+    txtTimeFactor.addActionListener(e -> {\n+      String newFactor = txtTimeFactor.getText();\n+      int newTimeFactor = Integer.parseInt(newFactor);\n+      if (newTimeFactor < 1) {\n+        newTimeFactor = 1;\n       }\n-    });\n-    startStopButton.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent e) {\n-        parent.addGUIInteraction(\"ToggleStartStop\");\n-      }\n-    });\n-    editHeaderButton.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent e) {\n-        editForm = new GuiSimulatorHeaderEdit(simulatorHeader, GuiMainWindow.this);\n+      if (newTimeFactor > 1000) {\n+        newTimeFactor = 1000;\n       }\n+      parent.addGUIInteraction(\"TimeFactor:\" + String.valueOf(newTimeFactor));\n     });\n+    chkBoxShowAll.addItemListener(e -> putManualCommandsInCombo(e.getStateChange() == ItemEvent.SELECTED));\n+    chkBoxPeriodicSending.addItemListener(e -> isEnduranceTest = (e.getStateChange() == ItemEvent.SELECTED));\n+    startStopButton.addActionListener(e -> parent.addGUIInteraction(\"ToggleStartStop\"));\n+    editHeaderButton.addActionListener(e -> editForm = new GuiSimulatorHeaderEdit(simulatorHeader, GuiMainWindow.this));\n \n-    pauseResumeButton.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent e) {\n-        parent.addGUIInteraction(\"TogglePauseResume\");\n-      }\n-    });\n+    pauseResumeButton.addActionListener(e -> parent.addGUIInteraction(\"TogglePauseResume\"));\n \n-    sendManualButton.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent e) {\n-        Object c = comboCommands.getSelectedItem();\n-        if (c instanceof CommandDescriptor) {\n-          sendManualCommand((CommandDescriptor) c, true);\n-        }\n+    sendManualButton.addActionListener(e -> {\n+      Object c = comboCommands.getSelectedItem();\n+      if (c instanceof CommandDescriptor) {\n+        sendManualCommand((CommandDescriptor) c, true);\n       }\n     });\n-    resetInputArgsButton.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent e) {\n-        Object c = comboCommands.getSelectedItem();\n-        if (c instanceof CommandDescriptor) {\n-          ((CommandDescriptor) c).resetInputArgs();\n-          displayManualMethod(((CommandDescriptor) c));\n-        }\n+    resetInputArgsButton.addActionListener(e -> {\n+      Object c = comboCommands.getSelectedItem();\n+      if (c instanceof CommandDescriptor) {\n+        ((CommandDescriptor) c).resetInputArgs();\n+        displayManualMethod(((CommandDescriptor) c));\n       }\n     });\n \n-    btnNewTemplate.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent e) {\n-        String test1 = JOptionPane.showInputDialog(\"Input description for new template: \");\n-        Object c = comboCommands.getSelectedItem();\n-        if (test1 != null && c instanceof CommandDescriptor) {\n-          if (test1.length() == 0) {\n-            JOptionPane.showMessageDialog(frame, \"The description cannot be empty\");\n-          } else if (!test1.matches(\"^[a-zA-Z0-9]*$\")) {\n-            JOptionPane.showMessageDialog(frame, \"Template name must be alphanumeric.\");\n-          } else if (((CommandDescriptor) c).addNewEmptyTemplate(test1)) {\n-            displayManualMethod(((CommandDescriptor) c));\n-            showMessageConsole(\"User;Local;AddNewTemplate;\"\n-                + ((CommandDescriptor) c).getMethodBody() + \"\" + test1);\n-          } else {\n-            JOptionPane.showMessageDialog(frame, \"The description entered is not unique\");\n-          }\n+    btnNewTemplate.addActionListener(e -> {\n+      String test1 = JOptionPane.showInputDialog(\"Input description for new template: \");\n+      Object c = comboCommands.getSelectedItem();\n+      if (test1 != null && c instanceof CommandDescriptor) {\n+        if (test1.length() == 0) {\n+          JOptionPane.showMessageDialog(frame, \"The description cannot be empty\");\n+        } else if (!test1.matches(\"^[a-zA-Z0-9]*$\")) {\n+          JOptionPane.showMessageDialog(frame, \"Template name must be alphanumeric.\");\n+        } else if (((CommandDescriptor) c).addNewEmptyTemplate(test1)) {\n+          displayManualMethod(((CommandDescriptor) c));\n+          showMessageConsole(\"User;Local;AddNewTemplate;\"\n+              + ((CommandDescriptor) c).getMethodBody() + \"\" + test1);\n+        } else {\n+          JOptionPane.showMessageDialog(frame, \"The description entered is not unique\");\n         }\n       }\n     });\n-    btnSaveTemplate.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent e) {\n-        // String test1= JOptionPane.showInputDialog(\"Input description for new\n-        // template: \");\n-        Object c = comboCommands.getSelectedItem();\n-        String cTemplateDescription = (String) comboTemplates.getSelectedItem();\n-        if (c instanceof CommandDescriptor) {\n-          boolean dataOk = sendManualCommand((CommandDescriptor) c, false);\n-          if (dataOk) {\n-            if (cTemplateDescription.equals(CommandDescriptor.KEYWORD_DEFAULT)) {\n-              JOptionPane.showMessageDialog(frame,\n-                  \"Default template edit cannot be saved, create a new one or edit another one.\");\n-            } else if (((CommandDescriptor) c).updateTemplate(cTemplateDescription,\n-                txtInputArguments.getText())) {\n-              templateChanged = false;\n-            } else {\n-              JOptionPane.showMessageDialog(frame,\n-                  \"Could not find template [\" + cTemplateDescription + \"] in command [\"\n-                      + ((CommandDescriptor) c).getMethodBody() + \"]!\");\n-            }\n+    btnSaveTemplate.addActionListener(e -> {\n+      // String test1= JOptionPane.showInputDialog(\"Input description for new\n+      // template: \");\n+      Object c = comboCommands.getSelectedItem();\n+      String cTemplateDescription = (String) comboTemplates.getSelectedItem();\n+      if (c instanceof CommandDescriptor) {\n+        boolean dataOk = sendManualCommand((CommandDescriptor) c, false);\n+        if (dataOk) {\n+          if (cTemplateDescription.equals(CommandDescriptor.KEYWORD_DEFAULT)) {\n+            JOptionPane.showMessageDialog(frame,\n+                \"Default template edit cannot be saved, create a new one or edit another one.\");\n+          } else if (((CommandDescriptor) c).updateTemplate(cTemplateDescription,\n+              txtInputArguments.getText())) {\n+            templateChanged = false;\n+          } else {\n+            JOptionPane.showMessageDialog(frame,\n+                \"Could not find template [\" + cTemplateDescription + \"] in command [\"\n+                    + ((CommandDescriptor) c).getMethodBody() + \"]!\");\n           }\n         }\n       }\n     });\n-    btnUpdateServer.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent e) {\n-        int resultConfirm = JOptionPane.showConfirmDialog(frame,\n-            \"Server will be updated with local copy of commands & templates. Do you want to continue?\",\n-            \"Update server\", JOptionPane.YES_NO_OPTION);\n-        if (resultConfirm == JOptionPane.YES_OPTION) {\n-          showMessageConsole(\"User;Local;UpdateServer;\");\n-          LinkedList<CommandDescriptor> newCommandsList = new LinkedList<CommandDescriptor>();\n-          for (int i = 0; i < commandsList.size(); i++) {\n-            newCommandsList.add(commandsList.get(i));\n-          }\n-          parent.addGUIInteraction(newCommandsList);\n-        } else {\n-          ;\n+    btnUpdateServer.addActionListener(e -> {\n+      int resultConfirm = JOptionPane.showConfirmDialog(frame,\n+          \"Server will be updated with local copy of commands & templates. Do you want to continue?\",\n+          \"Update server\", JOptionPane.YES_NO_OPTION);\n+      if (resultConfirm == JOptionPane.YES_OPTION) {\n+        showMessageConsole(\"User;Local;UpdateServer;\");\n+        LinkedList<CommandDescriptor> newCommandsList = new LinkedList<CommandDescriptor>();\n+        for (int i = 0; i < commandsList.size(); i++) {\n+          newCommandsList.add(commandsList.get(i));\n         }\n+        parent.addGUIInteraction(newCommandsList);\n+      } else {\n+        ;\n       }\n     });\n \n     txtLoaderPrompt.setBackground(Color.orange);\n \n-    txtLoaderPrompt.addActionListener(new ActionListener() {\n-\n-      @Override\n-      public void actionPerformed(ActionEvent e) {\n-        String targetConnection = txtLoaderPrompt.getText();\n-        List<String> items = Arrays.asList(targetConnection.split(\":\"));\n-        boolean dataOk = items.size() == 2;\n-        if (dataOk) {\n-          targetURL = items.get(0);\n-          targetPort = Integer.parseInt(items.get(1));\n-          parent.setTargetConnection(targetURL, targetPort);\n-          // SFTP\n-          SFTPInformation ui = new SFTPInformation(GuiMainWindow.this);\n-          ui.setBounds(100, 100, 496, 145);\n-          ui.setVisible(true);\n-          GuiMainWindow.this.frame.setEnabled(false);\n-        } else {\n-          txtLoaderPrompt.setText(targetURL + \":\" + targetPort);\n-        }\n-\n+    txtLoaderPrompt.addActionListener(e -> {\n+      String targetConnection = txtLoaderPrompt.getText();\n+      List<String> items = Arrays.asList(targetConnection.split(\":\"));\n+      boolean dataOk = items.size() == 2;\n+      if (dataOk) {\n+        targetURL = items.get(0);\n+        targetPort = Integer.parseInt(items.get(1));\n+        parent.setTargetConnection(targetURL, targetPort);\n+        // SFTP\n+        SFTPInformation ui = new SFTPInformation(GuiMainWindow.this);\n+        ui.setBounds(100, 100, 496, 145);\n+        ui.setVisible(true);\n+        GuiMainWindow.this.frame.setEnabled(false);\n+      } else {\n+        txtLoaderPrompt.setText(targetURL + \":\" + targetPort);\n       }\n+\n     });\n \n     this.panelLoader.setLayout(new BoxLayout(panelLoader, BoxLayout.Y_AXIS));\n@@ -561,30 +505,24 @@ public void actionPerformed(ActionEvent e) {\n     comboCommands.setMaximumSize(new Dimension(Integer.MAX_VALUE, 10));\n     // chkCommands.setPrototypeDisplayValue(\" \");\n     comboCommands.addItem(\"Select\");\n-    comboCommands.addItemListener(new ItemListener() {\n-      @Override\n-      public void itemStateChanged(ItemEvent arg0) {\n-        if (arg0.getStateChange() == ItemEvent.SELECTED) {\n-          Object item = arg0.getItem();\n-          if (item instanceof CommandDescriptor) {\n-            displayManualMethod(((CommandDescriptor) item));\n-          }\n+    comboCommands.addItemListener(arg0 -> {\n+      if (arg0.getStateChange() == ItemEvent.SELECTED) {\n+        Object item = arg0.getItem();\n+        if (item instanceof CommandDescriptor) {\n+          displayManualMethod(((CommandDescriptor) item));\n         }\n       }\n     });\n-    comboTemplates.addItemListener(new ItemListener() {\n-      @Override\n-      public void itemStateChanged(ItemEvent arg0) {\n-        if (arg0.getStateChange() == ItemEvent.SELECTED) {\n-          Object item = arg0.getItem();\n-          Object commandDescriptorItem = comboCommands.getItemAt(comboCommands.getSelectedIndex());\n-          if (item instanceof String && commandDescriptorItem instanceof CommandDescriptor) {\n-            logger.log(Level.FINE, \"Looking up \" + ((String) item));\n-            if (((CommandDescriptor) commandDescriptorItem).templateSelected((String) item)) {\n-              displayManualMethodTemplate(((CommandDescriptor) commandDescriptorItem));\n-            } else {\n-              JOptionPane.showMessageDialog(frame, \"Unable to select input template\");\n-            }\n+    comboTemplates.addItemListener(arg0 -> {\n+      if (arg0.getStateChange() == ItemEvent.SELECTED) {\n+        Object item = arg0.getItem();\n+        Object commandDescriptorItem = comboCommands.getItemAt(comboCommands.getSelectedIndex());\n+        if (item instanceof String && commandDescriptorItem instanceof CommandDescriptor) {\n+          logger.log(Level.FINE, \"Looking up \" + ((String) item));\n+          if (((CommandDescriptor) commandDescriptorItem).templateSelected((String) item)) {\n+            displayManualMethodTemplate(((CommandDescriptor) commandDescriptorItem));\n+          } else {\n+            JOptionPane.showMessageDialog(frame, \"Unable to select input template\");\n           }\n         }\n       }\n@@ -663,12 +601,7 @@ public void itemStateChanged(ItemEvent arg0) {\n \n     final JComboBox<String> selectMode = new JComboBox<String>();\n     selectMode.setModel(new DefaultComboBoxModel<String>(new String[] { \"Fixed\", \"Random\" }));\n-    selectMode.addItemListener(new ItemListener() {\n-      @Override\n-      public void itemStateChanged(ItemEvent arg0) {\n-        textFieldPath.setText(\"\");\n-      }\n-    });\n+    selectMode.addItemListener(arg0 -> textFieldPath.setText(\"\"));\n     SpringLayout sl_panelCameraSettings = new SpringLayout();\n     sl_panelCameraSettings.putConstraint(SpringLayout.NORTH, lblMode, 10, SpringLayout.NORTH,\n         panelCameraSettings);\n@@ -695,31 +628,28 @@ public void itemStateChanged(ItemEvent arg0) {\n     textFieldPath.setColumns(10);\n \n     JButton btnOpenTargetSelect = new JButton(\"Browse\");\n-    btnOpenTargetSelect.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent arg0) {\n-        if (targetURL.equals(\"127.0.0.1\")) { // browse locally\n-          JFileChooser fc = new JFileChooser(System.getProperty(\"user.dir\"));\n-          if (selectMode.getSelectedItem().equals(\"Fixed\")) {\n-            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);\n-            fc.removeChoosableFileFilter(fc.getChoosableFileFilters()[0]);\n-            fc.setFileFilter(\n-                new FileNameExtensionFilter(\"Image files\", \"jpg\", \"jpeg\", \"png\", \"bmp\", \"raw\"));\n-          } else {\n-            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n-          }\n-          int res = fc.showOpenDialog(panelCameraSettings);\n-          if (res == JFileChooser.APPROVE_OPTION) {\n-            String chosenName = fc.getSelectedFile().getAbsolutePath();\n-            textFieldPath.setText(chosenName);\n-          }\n-        } else { // use SFTP browser\n-          SFTPBrowser browser = new SFTPBrowser(sftpChannel, (String) selectMode.getSelectedItem(),\n-              window);\n-          browser.setBounds(100, 100, 400, 300);\n-          browser.setVisible(true);\n-          frame.setEnabled(false);\n+    btnOpenTargetSelect.addActionListener(arg0 -> {\n+      if (targetURL.equals(\"127.0.0.1\")) { // browse locally\n+        JFileChooser fc = new JFileChooser(System.getProperty(\"user.dir\"));\n+        if (selectMode.getSelectedItem().equals(\"Fixed\")) {\n+          fc.setFileSelectionMode(JFileChooser.FILES_ONLY);\n+          fc.removeChoosableFileFilter(fc.getChoosableFileFilters()[0]);\n+          fc.setFileFilter(\n+              new FileNameExtensionFilter(\"Image files\", \"jpg\", \"jpeg\", \"png\", \"bmp\", \"raw\"));\n+        } else {\n+          fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n+        }\n+        int res = fc.showOpenDialog(panelCameraSettings);\n+        if (res == JFileChooser.APPROVE_OPTION) {\n+          String chosenName = fc.getSelectedFile().getAbsolutePath();\n+          textFieldPath.setText(chosenName);\n         }\n+      } else { // use SFTP browser\n+        SFTPBrowser browser = new SFTPBrowser(sftpChannel, (String) selectMode.getSelectedItem(),\n+            window);\n+        browser.setBounds(100, 100, 400, 300);\n+        browser.setVisible(true);\n+        frame.setEnabled(false);\n       }\n     });\n     sl_panelCameraSettings.putConstraint(SpringLayout.NORTH, btnOpenTargetSelect, 0,\n@@ -731,28 +661,25 @@ public void actionPerformed(ActionEvent arg0) {\n     panelCameraSettings.add(btnOpenTargetSelect);\n \n     JButton btnApplyCamSettings = new JButton(\"Apply\");\n-    btnApplyCamSettings.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent arg0) {\n-        ArrayList<PlatformMessage> updates = new ArrayList<PlatformMessage>();\n-        String path = textFieldPath.getText();\n-        String mode = (String) selectMode.getSelectedItem();\n-        updates.add(new PlatformMessage(\"camerasim.imagemode\", mode));\n-        if (!path.equals(\"\")) {\n-          if (mode.equals(\"Fixed\")) {\n-            updates.add(new PlatformMessage(\"camerasim.imagefile\", path));\n-          } else if (mode.equals(\"Random\")) {\n-            updates.add(new PlatformMessage(\"camerasim.imagedirectory\", path));\n-          }\n+    btnApplyCamSettings.addActionListener(arg0 -> {\n+      ArrayList<PlatformMessage> updates = new ArrayList<PlatformMessage>();\n+      String path = textFieldPath.getText();\n+      String mode = (String) selectMode.getSelectedItem();\n+      updates.add(new PlatformMessage(\"camerasim.imagemode\", mode));\n+      if (!path.equals(\"\")) {\n+        if (mode.equals(\"Fixed\")) {\n+          updates.add(new PlatformMessage(\"camerasim.imagefile\", path));\n+        } else if (mode.equals(\"Random\")) {\n+          updates.add(new PlatformMessage(\"camerasim.imagedirectory\", path));\n         }\n-        // Send updates to server\n-        for (PlatformMessage p : updates) {\n-          parent.addGUIInteraction(p);\n-        }\n-\n-        parent.getToServerQueue().add(\"refreshConfig\");\n-        GuiMainWindow.this.refreshPlatformProperties();\n       }\n+      // Send updates to server\n+      for (PlatformMessage p : updates) {\n+        parent.addGUIInteraction(p);\n+      }\n+\n+      parent.getToServerQueue().add(\"refreshConfig\");\n+      GuiMainWindow.this.refreshPlatformProperties();\n     });\n     sl_panelCameraSettings.putConstraint(SpringLayout.NORTH, btnApplyCamSettings, 5,\n         SpringLayout.SOUTH, textFieldPath);\n@@ -907,69 +834,57 @@ public boolean sendManualCommand(CommandDescriptor c, boolean doRun) {\n     if (dataOk.equals(\"ParseOk\")) {\n       if (doRun) {\n         parent.addGUIInteraction(c);\n-        javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-          @Override\n-          public void run() {\n-            txtInputArguments.setBackground(colorCommandsSent);\n-            txtInputArguments.setForeground(Color.BLACK);\n-            txtInputArguments.setCaretColor(Color.BLACK);\n-            txtOutputArguments.setText(\"Waiting for result..\");\n-            lblCommandResult.setText(\"\");\n-            txtOutputArguments.setBackground(Color.LIGHT_GRAY);\n-          }\n+        javax.swing.SwingUtilities.invokeLater(() -> {\n+          txtInputArguments.setBackground(colorCommandsSent);\n+          txtInputArguments.setForeground(Color.BLACK);\n+          txtInputArguments.setCaretColor(Color.BLACK);\n+          txtOutputArguments.setText(\"Waiting for result..\");\n+          lblCommandResult.setText(\"\");\n+          txtOutputArguments.setBackground(Color.LIGHT_GRAY);\n         });\n       }\n       return true;\n     } else {\n-      javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-        @Override\n-        public void run() {\n-          txtInputArguments.setBackground(Color.RED);\n-          txtInputArguments.setForeground(Color.WHITE);\n-          txtInputArguments.setCaretColor(Color.WHITE);\n-          lblCommandResult.setText(dataOk);\n-          txtOutputArguments.setText(\"\");\n-          txtOutputArguments.setBackground(Color.LIGHT_GRAY);\n-        }\n+      javax.swing.SwingUtilities.invokeLater(() -> {\n+        txtInputArguments.setBackground(Color.RED);\n+        txtInputArguments.setForeground(Color.WHITE);\n+        txtInputArguments.setCaretColor(Color.WHITE);\n+        lblCommandResult.setText(dataOk);\n+        txtOutputArguments.setText(\"\");\n+        txtOutputArguments.setBackground(Color.LIGHT_GRAY);\n       });\n       return false;\n     }\n   }\n \n   private void handleSchedulerList(final LinkedList<SimulatorSchedulerPiece> data) {\n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        txtScheduler.setText(\"\");\n-        String schedulerDataStr = \"\";\n-        for (SimulatorSchedulerPiece piece : data) {\n-          CommandDescriptor c = getCommandDescriptorForID(piece.getInternalID());\n-          ArgumentTemplate t = getArgTemplateForString(c, piece.getArgumentTemplateDescription());\n-          schedulerDataStr = schedulerDataStr + piece.getSchedulerOutput() + c.getMethodBody()\n-              + CommandDescriptor.SEPARATOR_DATAFILES + t.getArgContent() + \"\\n\";\n-        }\n-        txtScheduler.setText(schedulerDataStr);\n+    javax.swing.SwingUtilities.invokeLater(() -> {\n+      txtScheduler.setText(\"\");\n+      String schedulerDataStr = \"\";\n+      for (SimulatorSchedulerPiece piece : data) {\n+        CommandDescriptor c = getCommandDescriptorForID(piece.getInternalID());\n+        ArgumentTemplate t = getArgTemplateForString(c, piece.getArgumentTemplateDescription());\n+        schedulerDataStr = schedulerDataStr + piece.getSchedulerOutput() + c.getMethodBody()\n+            + CommandDescriptor.SEPARATOR_DATAFILES + t.getArgContent() + \"\\n\";\n       }\n+      txtScheduler.setText(schedulerDataStr);\n     });\n   }\n \n   public void showMessageConsole(final String data) {\n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        DateFormat dateFormat = new SimpleDateFormat(\"yyyy/MM/dd;HH:mm:ss\");\n-        Date date = new Date();\n-        txtConsole.append(dateFormat.format(date) + \";\" + data + \"\\n\");\n-        while (txtConsole.getLineCount() > 500) {\n-          try {\n-            int end = txtConsole.getLineEndOffset(0);\n-            txtConsole.replaceRange(\"\", 0, end);\n-          } catch (BadLocationException ex) {\n-            Logger.getLogger(GuiMainWindow.class.getName()).log(Level.SEVERE, null, ex);\n-          }\n+    javax.swing.SwingUtilities.invokeLater(() -> {\n+      DateFormat dateFormat = new SimpleDateFormat(\"yyyy/MM/dd;HH:mm:ss\");\n+      Date date = new Date();\n+      txtConsole.append(dateFormat.format(date) + \";\" + data + \"\\n\");\n+      while (txtConsole.getLineCount() > 500) {\n+        try {\n+          int end = txtConsole.getLineEndOffset(0);\n+          txtConsole.replaceRange(\"\", 0, end);\n+        } catch (BadLocationException ex) {\n+          Logger.getLogger(GuiMainWindow.class.getName()).log(Level.SEVERE, null, ex);\n         }\n-\n       }\n+\n     });\n \n   }\n@@ -983,58 +898,49 @@ public void showSimulatorDeviceData(\n       final LinkedList<SimulatorDeviceData> linkedSimulatorDeviceData) {\n     this.logger.log(Level.ALL, \"Received list of SimulatorDeviceData with [\"\n         + linkedSimulatorDeviceData.size() + \"] items\");\n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        for (SimulatorDeviceData simulatorDeviceData : linkedSimulatorDeviceData) {\n-          if (hashTableDataOutAgregate.get(simulatorDeviceData.getName()).isUpdateValues()) {\n-            String composite = \"\";\n-            for (ArgumentDescriptor simulatorDeviceDataPiece : simulatorDeviceData.getDataList()) {\n-              composite = composite + simulatorDeviceDataPiece.toString() + \"\\n\\n\";\n-            }\n-            hashTableDataOutAgregate.get(simulatorDeviceData.getName()).getTextArea()\n-                .setText(composite);\n+    javax.swing.SwingUtilities.invokeLater(() -> {\n+      for (SimulatorDeviceData simulatorDeviceData : linkedSimulatorDeviceData) {\n+        if (hashTableDataOutAgregate.get(simulatorDeviceData.getName()).isUpdateValues()) {\n+          String composite = \"\";\n+          for (ArgumentDescriptor simulatorDeviceDataPiece : simulatorDeviceData.getDataList()) {\n+            composite = composite + simulatorDeviceDataPiece.toString() + \"\\n\\n\";\n           }\n+          hashTableDataOutAgregate.get(simulatorDeviceData.getName()).getTextArea()\n+              .setText(composite);\n         }\n       }\n     });\n   }\n \n   public void showCommandResult(final CommandResult data) {\n \n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        lblCommandResult.setText(data.toExtString());\n-        Object obj = data.getOutput();\n-        txtOutputArguments.setText(data.getOutputAsString());\n-        txtOutputArguments.setBackground(data.isCommandFailed() ? colorOutputKO : colorOutputOK);\n-        txtInputArguments.setBackground(colorInputCommand);\n-        txtInputArguments.setForeground(Color.WHITE);\n-        txtInputArguments.setCaretColor(Color.WHITE);\n-      }\n+    javax.swing.SwingUtilities.invokeLater(() -> {\n+      lblCommandResult.setText(data.toExtString());\n+      Object obj = data.getOutput();\n+      txtOutputArguments.setText(data.getOutputAsString());\n+      txtOutputArguments.setBackground(data.isCommandFailed() ? colorOutputKO : colorOutputOK);\n+      txtInputArguments.setBackground(colorInputCommand);\n+      txtInputArguments.setForeground(Color.WHITE);\n+      txtInputArguments.setCaretColor(Color.WHITE);\n     });\n \n   }\n \n   public void displayManualMethod(final CommandDescriptor data) {\n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        lblMethodDescriptor.setText(data.getComment());\n-        displayManualMethodTemplate(data);\n-        lblCommandResult.setText(\"[Output]\");\n-        txtOutputArguments.setText(\"[Result]\");\n-        txtInputArguments.setBackground(colorInputCommand);\n-        txtInputArguments.setCaretColor(Color.WHITE);\n-        txtOutputArguments.setBackground(Color.LIGHT_GRAY);\n-        comboTemplates.removeAllItems();\n-        for (ArgumentTemplate t : data.getTemplateList()) {\n-          comboTemplates.addItem(t.getDescription());\n-        }\n-        if (isEnduranceTest) {\n-          sendManualCommand(data, true);\n-        }\n+    javax.swing.SwingUtilities.invokeLater(() -> {\n+      lblMethodDescriptor.setText(data.getComment());\n+      displayManualMethodTemplate(data);\n+      lblCommandResult.setText(\"[Output]\");\n+      txtOutputArguments.setText(\"[Result]\");\n+      txtInputArguments.setBackground(colorInputCommand);\n+      txtInputArguments.setCaretColor(Color.WHITE);\n+      txtOutputArguments.setBackground(Color.LIGHT_GRAY);\n+      comboTemplates.removeAllItems();\n+      for (ArgumentTemplate t : data.getTemplateList()) {\n+        comboTemplates.addItem(t.getDescription());\n+      }\n+      if (isEnduranceTest) {\n+        sendManualCommand(data, true);\n       }\n     });\n \n@@ -1046,24 +952,12 @@ public void displayManualMethodTemplate(final CommandDescriptor data) {\n   }\n \n   private void clearManualCommands() {\n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        comboCommands.removeAllItems();\n-      }\n-    });\n+    javax.swing.SwingUtilities.invokeLater(() -> comboCommands.removeAllItems());\n   }\n \n   private void addManualCommandsItem(final CommandDescriptor data) {\n \n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-\n-        comboCommands.addItem(data);\n-\n-      }\n-    });\n+    javax.swing.SwingUtilities.invokeLater(() -> comboCommands.addItem(data));\n   }\n \n   public void editHeaderReady() {\n@@ -1078,94 +972,79 @@ private void fixScrollPaneForMain(JScrollPane pane) {\n   }\n \n   public void processSimulatorData(final SimulatorData data) {\n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        lblSimulatorData.setText(data.toString());\n-        Map<TimeUnit, Long> computedDiff;\n-        if (simulatorHeader != null) {\n-          computedDiff = SimulatorData.computeDiff(simulatorHeader.getStartDate(),\n-              data.getCurrentTime());\n-          String localMinutes = String.format(simulatorHeader.FROM_START_FORMAT,\n-              computedDiff.get(TimeUnit.DAYS), computedDiff.get(TimeUnit.HOURS),\n-              computedDiff.get(TimeUnit.MINUTES), computedDiff.get(TimeUnit.SECONDS),\n-              computedDiff.get(TimeUnit.MILLISECONDS));\n-          lblSimulatorTimeRunning.setText(localMinutes.toString());\n-        }\n-        if (!txtTimeFactor.isFocusOwner()\n-            && !txtTimeFactor.getText().equals(String.valueOf(data.getTimeFactor()))) {\n-          txtTimeFactor.setText(String.valueOf(data.getTimeFactor()));\n-        }\n-        if (data.isTimeRunning()) {\n-          pauseResumeButton.setText(\"Time\");\n-          pauseResumeButton.setBackground(Color.GREEN);\n-        } else {\n-          pauseResumeButton.setText(\"Time\");\n-          pauseResumeButton.setBackground(Color.RED);\n-        }\n-        if (data.isSimulatorRunning()) {\n-          startStopButton.setText(\"Enable\");\n-          startStopButton.setBackground(Color.GREEN);\n+    javax.swing.SwingUtilities.invokeLater(() -> {\n+      lblSimulatorData.setText(data.toString());\n+      Map<TimeUnit, Long> computedDiff;\n+      if (simulatorHeader != null) {\n+        computedDiff = SimulatorData.computeDiff(simulatorHeader.getStartDate(),\n+            data.getCurrentTime());\n+        String localMinutes = String.format(simulatorHeader.FROM_START_FORMAT,\n+            computedDiff.get(TimeUnit.DAYS), computedDiff.get(TimeUnit.HOURS),\n+            computedDiff.get(TimeUnit.MINUTES), computedDiff.get(TimeUnit.SECONDS),\n+            computedDiff.get(TimeUnit.MILLISECONDS));\n+        lblSimulatorTimeRunning.setText(localMinutes.toString());\n+      }\n+      if (!txtTimeFactor.isFocusOwner()\n+          && !txtTimeFactor.getText().equals(String.valueOf(data.getTimeFactor()))) {\n+        txtTimeFactor.setText(String.valueOf(data.getTimeFactor()));\n+      }\n+      if (data.isTimeRunning()) {\n+        pauseResumeButton.setText(\"Time\");\n+        pauseResumeButton.setBackground(Color.GREEN);\n+      } else {\n+        pauseResumeButton.setText(\"Time\");\n+        pauseResumeButton.setBackground(Color.RED);\n+      }\n+      if (data.isSimulatorRunning()) {\n+        startStopButton.setText(\"Enable\");\n+        startStopButton.setBackground(Color.GREEN);\n \n-        } else {\n-          startStopButton.setText(\"Enable\");\n-          startStopButton.setBackground(Color.RED);\n-        }\n+      } else {\n+        startStopButton.setText(\"Enable\");\n+        startStopButton.setBackground(Color.RED);\n       }\n     });\n \n   }\n \n   public void makeEnduranceTest() {\n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        int newIndex = comboCommands.getSelectedIndex();\n-        newIndex++;\n-        if (newIndex >= comboCommands.getItemCount()) {\n-          newIndex = 0;\n-        }\n-        if (comboCommands.getItemCount() == 1) {\n-          sendManualCommand((CommandDescriptor) comboCommands.getSelectedItem(), true);\n-        } else {\n-          comboCommands.setSelectedIndex(newIndex);\n-        }\n+    javax.swing.SwingUtilities.invokeLater(() -> {\n+      int newIndex = comboCommands.getSelectedIndex();\n+      newIndex++;\n+      if (newIndex >= comboCommands.getItemCount()) {\n+        newIndex = 0;\n+      }\n+      if (comboCommands.getItemCount() == 1) {\n+        sendManualCommand((CommandDescriptor) comboCommands.getSelectedItem(), true);\n+      } else {\n+        comboCommands.setSelectedIndex(newIndex);\n       }\n     });\n   }\n \n   public void showConnectedInfo(final boolean isConnected) {\n     this.isConnected = isConnected;\n     this.showMessageConsole(\"showConnectedInfo [\" + isConnected + \"].\");\n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        frame.getContentPane().removeAll();\n-        frame.getContentPane().repaint();\n-        if (!isConnected) {\n-          clearManualCommands();\n-          frame.getContentPane().add(panelLoader);\n-        } else {\n-          frame.getContentPane().add(panelTop, BorderLayout.NORTH);\n-          ;\n-          frame.getContentPane().add(panelTabbed);\n-          GuiMainWindow.this.refreshPlatformProperties();\n-        }\n-        frame.getContentPane().add(panelBottom, BorderLayout.PAGE_END);\n-        frame.getContentPane().validate();\n-\n+    javax.swing.SwingUtilities.invokeLater(() -> {\n+      frame.getContentPane().removeAll();\n+      frame.getContentPane().repaint();\n+      if (!isConnected) {\n+        clearManualCommands();\n+        frame.getContentPane().add(panelLoader);\n+      } else {\n+        frame.getContentPane().add(panelTop, BorderLayout.NORTH);\n+        ;\n+        frame.getContentPane().add(panelTabbed);\n+        GuiMainWindow.this.refreshPlatformProperties();\n       }\n+      frame.getContentPane().add(panelBottom, BorderLayout.PAGE_END);\n+      frame.getContentPane().validate();\n+\n     });\n   }\n \n   public void putManualCommandsInCombo(final boolean showAll) {\n-    javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-      @Override\n-      public void run() {\n-        chkBoxShowAll.setSelected(showAll);\n-\n-      }\n-    });\n+    javax.swing.SwingUtilities.invokeLater(() -> chkBoxShowAll.setSelected(showAll));\n     clearManualCommands();\n     for (CommandDescriptor c : commandsList) {\n       if (c.isVisible() || showAll) {"
  },
  {
    "sha": "5ee65e8025b4d679af1ff2c173d203cc61b9207c",
    "filename": "mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/GuiSimulatorHeaderEdit.java",
    "status": "modified",
    "additions": 29,
    "deletions": 50,
    "changes": 79,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/GuiSimulatorHeaderEdit.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/GuiSimulatorHeaderEdit.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/GuiSimulatorHeaderEdit.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -71,16 +71,14 @@ public JFrame getFrame() {\n     }\n \n     public void dispose() {\n-        javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-            public void run() {\n-                try {\n-                    Thread.sleep(1000);\n+        javax.swing.SwingUtilities.invokeLater(() -> {\n+            try {\n+                Thread.sleep(1000);\n \n-                } catch (InterruptedException ex) {\n-                    Logger.getLogger(GuiSimulatorHeaderEdit.class.getName()).log(Level.SEVERE, null, ex);\n-                }\n-                frame.dispose();\n+            } catch (InterruptedException ex) {\n+                Logger.getLogger(GuiSimulatorHeaderEdit.class.getName()).log(Level.SEVERE, null, ex);\n             }\n+            frame.dispose();\n         });\n     }\n \n@@ -253,33 +251,22 @@ private void createAndShowGUI() {\n             localPanel.add(l);\n             if (i == 0) {\n                 chkSystemEnableDefault = new JCheckBox(\"\", simulatorHeader.isAutoStartSystem());\n-                chkSystemEnableDefault.addItemListener(new ItemListener() {\n-                    public void itemStateChanged(ItemEvent e) {\n-                        GuiSimulatorHeaderEdit.this.simulatorHeader.setAutoStartSystem(e.getStateChange() == ItemEvent.SELECTED);\n-                        submitButton.setEnabled(true);\n-                    }\n-\n+                chkSystemEnableDefault.addItemListener(e -> {\n+                    GuiSimulatorHeaderEdit.this.simulatorHeader.setAutoStartSystem(e.getStateChange() == ItemEvent.SELECTED);\n+                    submitButton.setEnabled(true);\n                 });\n                 localPanel.add(chkSystemEnableDefault);\n             } else if (i == 1) {\n                 chkTimeRunDefault = new JCheckBox(\"\", simulatorHeader.isAutoStartTime());\n-                chkTimeRunDefault.addItemListener(new ItemListener() {\n-                    public void itemStateChanged(ItemEvent e) {\n-                        GuiSimulatorHeaderEdit.this.simulatorHeader.setAutoStartTime(e.getStateChange() == ItemEvent.SELECTED);\n-                        submitButton.setEnabled(true);\n-                    }\n-\n+                chkTimeRunDefault.addItemListener(e -> {\n+                    GuiSimulatorHeaderEdit.this.simulatorHeader.setAutoStartTime(e.getStateChange() == ItemEvent.SELECTED);\n+                    submitButton.setEnabled(true);\n                 });\n                 localPanel.add(chkTimeRunDefault);\n             } else if (i == 2) {\n                 txtTimeFactor = new JTextField(String.valueOf(simulatorHeader.getTimeFactor()));\n                 txtTimeFactor.setPreferredSize(new Dimension(35, 20));\n-                txtTimeFactor.addActionListener(new ActionListener() {\n-                    public void actionPerformed(ActionEvent e) {\n-                        processTextFieldTimeFactorInput(txtTimeFactor);\n-                    }\n-\n-                });\n+                txtTimeFactor.addActionListener(e -> processTextFieldTimeFactorInput(txtTimeFactor));\n                 txtTimeFactor.addFocusListener(new FocusListener() {\n                     public void focusGained(FocusEvent e) {\n                         processTextFieldFocusGained(txtTimeFactor);\n@@ -295,14 +282,11 @@ public void focusLost(FocusEvent e) {\n             } else if (i == 3) {\n                 txtStartDate = new JTextField(simulatorHeader.getStartDateString());\n                 txtStartDate.setPreferredSize(new Dimension(265, 20));\n-                txtStartDate.addActionListener(new ActionListener() {\n-                    public void actionPerformed(ActionEvent e) {\n-                        Date newDateStart = processTextFieldDateInput(txtStartDate, txtEndDate, 1);\n-                        if (newDateStart != null) {\n-                            GuiSimulatorHeaderEdit.this.simulatorHeader.setStartDate(newDateStart);\n-                        }\n+                txtStartDate.addActionListener(e -> {\n+                    Date newDateStart = processTextFieldDateInput(txtStartDate, txtEndDate, 1);\n+                    if (newDateStart != null) {\n+                        GuiSimulatorHeaderEdit.this.simulatorHeader.setStartDate(newDateStart);\n                     }\n-\n                 });\n                 txtStartDate.addFocusListener(new FocusListener() {\n                     public void focusGained(FocusEvent e) {\n@@ -322,14 +306,11 @@ public void focusLost(FocusEvent e) {\n             } else if (i == 4) {\n                 txtEndDate = new JTextField(simulatorHeader.getEndDateString());\n                 txtEndDate.setPreferredSize(new Dimension(265, 20));\n-                txtEndDate.addActionListener(new ActionListener() {\n-                    public void actionPerformed(ActionEvent e) {\n-                        Date newDate = processTextFieldDateInput(txtStartDate, txtEndDate, 2);\n-                        if (newDate != null) {\n-                            GuiSimulatorHeaderEdit.this.simulatorHeader.setEndDate(newDate);\n-                        }\n+                txtEndDate.addActionListener(e -> {\n+                    Date newDate = processTextFieldDateInput(txtStartDate, txtEndDate, 2);\n+                    if (newDate != null) {\n+                        GuiSimulatorHeaderEdit.this.simulatorHeader.setEndDate(newDate);\n                     }\n-\n                 });\n                 txtEndDate.addFocusListener(new FocusListener() {\n                     public void focusGained(FocusEvent e) {\n@@ -354,18 +335,16 @@ public void focusLost(FocusEvent e) {\n         p.add(submitButton);\n         p.setBorder(new TitledBorder(new EtchedBorder(), \"Default values\"));\n \n-        submitButton.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent e) {\n-                if (validateForm()) {\n+        submitButton.addActionListener(e -> {\n+            if (validateForm()) {\n \n-                    submitButtonPressed();\n+                submitButtonPressed();\n \n-                } else {\n-                    JOptionPane.showMessageDialog(frame, \"Data not ok!\"\n-                        + \"\\nTime factor:\" + timeFactorOK\n-                        + \"\\nStart date:\" + startDateOK\n-                        + \"\\nEnd date: \" + endDateOK + \".\");\n-                }\n+            } else {\n+                JOptionPane.showMessageDialog(frame, \"Data not ok!\"\n+                    + \"\\nTime factor:\" + timeFactorOK\n+                    + \"\\nStart date:\" + startDateOK\n+                    + \"\\nEnd date: \" + endDateOK + \".\");\n             }\n         });\n "
  },
  {
    "sha": "2ed54c63825f6aee693512d42b38a7ce43592afd",
    "filename": "mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/SFTPBrowser.java",
    "status": "modified",
    "additions": 7,
    "deletions": 13,
    "changes": 20,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/SFTPBrowser.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/SFTPBrowser.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/SFTPBrowser.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -117,13 +117,10 @@ public void mousePressed(MouseEvent mouseEvent) {\n           String folder = (String) table.getValueAt(row, 0);\n           sb.append(\"/\").append(folder);\n           tfName.setText(sb.toString());\n-          Timer timer = new Timer(timerinterval.intValue(), new ActionListener() {\n-            @Override\n-            public void actionPerformed(ActionEvent evt) {\n-              if (doubleClick) {\n-                doubleClick = false; // reset flag\n-                updateFileTable();\n-              }\n+          Timer timer = new Timer(timerinterval.intValue(), evt -> {\n+            if (doubleClick) {\n+              doubleClick = false; // reset flag\n+              updateFileTable();\n             }\n           });\n           timer.setRepeats(false);\n@@ -145,12 +142,9 @@ public void actionPerformed(ActionEvent evt) {\n     tfName.setColumns(10);\n \n     JButton btnSubmit = new JButton(\"Select\");\n-    btnSubmit.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent arg0) {\n-        mainGui.setPathFromSFTP(sb.toString());\n-        SFTPBrowser.this.dispose();\n-      }\n+    btnSubmit.addActionListener(arg0 -> {\n+      mainGui.setPathFromSFTP(sb.toString());\n+      SFTPBrowser.this.dispose();\n     });\n     springLayout.putConstraint(SpringLayout.NORTH, btnSubmit, 5, SpringLayout.SOUTH, tfName);\n     springLayout.putConstraint(SpringLayout.EAST, btnSubmit, 0, SpringLayout.EAST, scrollPane);"
  },
  {
    "sha": "4ab89497ce9e2d0aaac3c1b2a8056f1d14a8b09b",
    "filename": "mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/SFTPInformation.java",
    "status": "modified",
    "additions": 13,
    "deletions": 19,
    "changes": 32,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/63f0df1d7581f385c5717bf5ff12b346bfc47866/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/SFTPInformation.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/63f0df1d7581f385c5717bf5ff12b346bfc47866/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/SFTPInformation.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/gui/SFTPInformation.java?ref=63f0df1d7581f385c5717bf5ff12b346bfc47866",
    "patch": "@@ -63,15 +63,12 @@ public SFTPInformation(GuiMainWindow parent) {\n     springLayout.putConstraint(SpringLayout.NORTH, btnSubmit, 6, SpringLayout.SOUTH, passwordField);\n     springLayout.putConstraint(SpringLayout.EAST, btnSubmit, -189, SpringLayout.EAST,\n         getContentPane());\n-    btnSubmit.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent arg0) {\n-        username = tfUsername.getText();\n-        password = new String(passwordField.getPassword());\n-        knownHosts = tfKnownHosts.getText();\n-        parent.connectStfp(window);\n-        window.dispose();\n-      }\n+    btnSubmit.addActionListener(arg0 -> {\n+      username = tfUsername.getText();\n+      password = new String(passwordField.getPassword());\n+      knownHosts = tfKnownHosts.getText();\n+      parent.connectStfp(window);\n+      window.dispose();\n     });\n     getContentPane().add(btnSubmit);\n     this.getRootPane().setDefaultButton(btnSubmit);\n@@ -96,16 +93,13 @@ public void actionPerformed(ActionEvent arg0) {\n     getContentPane().add(tfKnownHosts);\n \n     JButton btnBrowse = new JButton(\"Browse\");\n-    btnBrowse.addActionListener(new ActionListener() {\n-      @Override\n-      public void actionPerformed(ActionEvent arg0) {\n-        JFileChooser fc = new JFileChooser(System.getProperty(\"user.dir\"));\n-        fc.setFileHidingEnabled(false);\n-        int res = fc.showOpenDialog(SFTPInformation.this);\n-        if (res == JFileChooser.APPROVE_OPTION) {\n-          String chosenName = fc.getSelectedFile().getAbsolutePath();\n-          tfKnownHosts.setText(chosenName);\n-        }\n+    btnBrowse.addActionListener(arg0 -> {\n+      JFileChooser fc = new JFileChooser(System.getProperty(\"user.dir\"));\n+      fc.setFileHidingEnabled(false);\n+      int res = fc.showOpenDialog(SFTPInformation.this);\n+      if (res == JFileChooser.APPROVE_OPTION) {\n+        String chosenName = fc.getSelectedFile().getAbsolutePath();\n+        tfKnownHosts.setText(chosenName);\n       }\n     });\n     springLayout.putConstraint(SpringLayout.NORTH, btnBrowse, 0, SpringLayout.NORTH, tfKnownHosts);"
  }
]
