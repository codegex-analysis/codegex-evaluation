[
  {
    "sha": "7fbb43fa480b3cc4ad385622d69d03a5f70395f1",
    "filename": "core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperAttributes.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperAttributes.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperAttributes.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperAttributes.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -105,7 +105,7 @@ public static Double attribute2double(Attribute in) {\n       }\n \n       if (((Union) in).getTypeShortForm().equals(Union.STRING_TYPE_SHORT_FORM)) { // 15\n-        Double dou;\n+        double dou;\n         try {\n           dou = Double.parseDouble(((Union) in).getStringValue());\n         } catch (NumberFormatException ex) {"
  },
  {
    "sha": "a816376e4db3502ca71cd0dfe349faa282c5f308",
    "filename": "core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperMisc.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperMisc.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperMisc.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/helper-tools/src/main/java/esa/mo/helpertools/helpers/HelperMisc.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -438,9 +438,9 @@ public static String domain2domainId(final IdentifierList domain) {\n     if (domain.isEmpty()) {\n       return \"\";\n     }\n-    String domainId = \"\";\n+    StringBuilder domainId = new StringBuilder();\n     for (Identifier subdomain : domain) {\n-      domainId += subdomain.getValue() + \".\";\n+      domainId.append(subdomain.getValue()).append(\".\");\n     }\n \n     // Remove the last dot and return the string"
  },
  {
    "sha": "0a2efc803e2bf9ada1eaa02c4606ef9068c87c82",
    "filename": "core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/encoding/BinaryDecoder.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/encoding/BinaryDecoder.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/encoding/BinaryDecoder.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/encoding/BinaryDecoder.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -23,6 +23,7 @@\n import java.io.IOException;\n import java.math.BigInteger;\n import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n import java.util.Arrays;\n import java.util.List;\n import java.util.logging.Level;\n@@ -38,7 +39,7 @@\n public class BinaryDecoder extends GENDecoder\n {\n   protected static final java.util.logging.Logger LOGGER = Logger.getLogger(BinaryDecoder.class.getName());\n-  protected static final Charset UTF8_CHARSET = Charset.forName(\"UTF-8\");\n+  protected static final Charset UTF8_CHARSET = StandardCharsets.UTF_8;\n   protected static final int BLOCK_SIZE = 65536;\n \n   /**"
  },
  {
    "sha": "e1848cf97c3ff2bd8e0d618987474c48d2851e31",
    "filename": "core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/encoding/GENEncoder.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/encoding/GENEncoder.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/encoding/GENEncoder.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/archive/encoding/GENEncoder.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -24,6 +24,7 @@\n import java.io.OutputStream;\n import java.math.BigInteger;\n import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n import org.ccsds.moims.mo.mal.MALException;\n@@ -46,7 +47,7 @@\n  */\n public abstract class GENEncoder implements MALListEncoder\n {\n-  protected static final Charset UTF8_CHARSET = Charset.forName(\"UTF-8\");\n+  protected static final Charset UTF8_CHARSET = StandardCharsets.UTF_8;\n   protected static final String ENCODING_EXCEPTION_STR = \"Bad encoding\";\n   protected final StreamHolder outputStream;\n "
  },
  {
    "sha": "3272fce4bd1f7ee8f716e34985425bd16ba3cc77",
    "filename": "core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveSyncProviderServiceImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveSyncProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveSyncProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-com-impl/src/main/java/esa/mo/com/impl/provider/ArchiveSyncProviderServiceImpl.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -280,9 +280,7 @@ public int numberOfChunks() throws IOException {\n \n         public void addObjects(final ArrayList<COMObjectEntity> list) {\n             // \"addAll()\" might not be thread-safe. \"add\" is for sure!\n-            for (COMObjectEntity entity : list) {\n-                tempQueue.add(entity);\n-            }\n+            tempQueue.addAll(list);\n         }\n \n         public void setQueriesAreDone(final boolean done) {"
  },
  {
    "sha": "c709616a3ae00a1b0310476ccba3c2751a0eb60d",
    "filename": "core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/AggregationManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/AggregationManager.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/AggregationManager.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/AggregationManager.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -270,7 +270,7 @@ private Boolean triggeredFilter(Attribute previousValue, Attribute currentValue,\n         }\n         final Double previousValueDouble = Double.parseDouble(previousValue.toString());\n         final Double currentValueDouble = Double.parseDouble(currentValue.toString());\n-        final Double thresholdValue = Double.parseDouble(filter.getThresholdValue().toString());\n+        final double thresholdValue = Double.parseDouble(filter.getThresholdValue().toString());\n \n         if (filter.getThresholdType() == ThresholdType.DELTA) // requirement: 3.7.3.l\n         {\n@@ -645,7 +645,7 @@ private boolean checkFilterIsTriggered(final AggregationParameterSet aggregation\n                         || // Are the parameters valid?\n                         (current.getValidityState().getValue() == 2 && previous.getValidityState().getValue() == 2)) { // 2 stands for the INVALID_RAW state\n \n-                    Boolean filterisTriggered = false;\n+                    boolean filterisTriggered = false;\n                     if (current.getValidityState().getValue() == 0 && previous.getValidityState().getValue() == 0\n                             && current.getConvertedValue() != null && previous.getConvertedValue() != null) // requirement: 3.7.2.6\n                     {"
  },
  {
    "sha": "2bb83b40fe510ace511de30e3a14772dd3c2e282",
    "filename": "core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/CheckLinksManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/CheckLinksManager.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/CheckLinksManager.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/CheckLinksManager.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -61,9 +61,7 @@ public CheckLinksManager(COMServicesProvider comServices) {\n //    }\n     public LongList listAllCheckLinkIds() {\n         LongList checkLinkIdList = new LongList();\n-        for (Long key : checkLinkIds.keySet()) {\n-            checkLinkIdList.add(key);\n-        }\n+        checkLinkIdList.addAll(checkLinkIds.keySet());\n         return checkLinkIdList;\n     }\n "
  },
  {
    "sha": "810556b11e83bd042c22ceb31b2341f80a73ab94",
    "filename": "core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ConversionServiceImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ConversionServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ConversionServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/ConversionServiceImpl.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -251,7 +251,7 @@ private Element getDefinitionDetailsFromIdentityIdFromArchive(ObjectType objType\n         final ArchiveDetailsList defarchiveDetailsListFromArchive = HelperArchive.getArchiveDetailsListFromArchive(archiveService, objType, domain, defIds);\n         //look if there are conversionDetails, which reference the identity\n         Long defId = null;\n-        Long maxTimeStamp = 0L;\n+        long maxTimeStamp = 0L;\n         if (defarchiveDetailsListFromArchive == null)\n             return null;\n         //iterate through all entries to check for the given identity as the source object"
  },
  {
    "sha": "0dae65dd10d9d91fe0220e798f0920b12388a151",
    "filename": "core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/StatisticProviderServiceImpl.java",
    "status": "modified",
    "additions": 2,
    "deletions": 4,
    "changes": 6,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/StatisticProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/StatisticProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/StatisticProviderServiceImpl.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -502,9 +502,7 @@ public StatisticEvaluationReportList resetEvaluation(Boolean isGroupIds, LongLis\n                 //TODO: sure? groupddefintion or identity-ids? -> issue #135, #179\n                 //in the next for loop, ignore the other group definitions, they will be checked in other iterations.\n                 LongList ignoreList = new LongList();\n-                for (Long instance : resetInstances) {\n-                    ignoreList.add(instance);\n-                }\n+                ignoreList.addAll(resetInstances);\n                 //add all instances referenced in all groups to list of values to be enabled\n                 for (int index = 0; index < resetInstances.size(); index++) {\n                     //these are Group-Definition-ids req: 3.9.4.g,h\n@@ -735,7 +733,7 @@ public ObjectInstancePairList addParameterEvaluation(StatisticCreationRequestLis\n             }\n \n             // Check that statistical function can be applied to type of parameter\n-            Integer paramType;\n+            int paramType;\n             if (statDefDetail.getLinkDetails().getUseConverted()) {\n                 if (parameterDef.getConversion() == null) {\n                     invIndexList.add(new UInteger(index));"
  },
  {
    "sha": "e5c29b619f3471dd0d4e2d1b781b6e2e25bed560",
    "filename": "core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/check/CheckEvaluation.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/check/CheckEvaluation.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/check/CheckEvaluation.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/ccsds-mc-impl/src/main/java/esa/mo/mc/impl/provider/check/CheckEvaluation.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -210,7 +210,7 @@ public static EvaluationResult evaluateCompoundCheck(CompoundCheckDefinition com\n                 countChecksViolate++;\n             }\n         }\n-        Boolean result;\n+        boolean result;\n         //wildcard check\n         if (minChecksViolate.getValue() == 0) //requirement: 3.5.3.ee - true if any check is not currently in violation\n         {"
  },
  {
    "sha": "2b8cb15dd990380f7bf6a1378def59ff20139868",
    "filename": "core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/SoftwareDefinedRadioProviderServiceImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/SoftwareDefinedRadioProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/SoftwareDefinedRadioProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/provider/gen/SoftwareDefinedRadioProviderServiceImpl.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -150,7 +150,7 @@ public void close()\n   private void streamRadioUpdate()\n   {\n     try {\n-      final Long objId;\n+      final long objId;\n       final IQComponentsList iqComponentsList = new IQComponentsList(1);\n \n       synchronized (lock) {"
  },
  {
    "sha": "3c4ff12c4ce6a3a251d20005f69ee07759abfc09",
    "filename": "core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/util/HelperIADCS100.java",
    "status": "modified",
    "additions": 4,
    "deletions": 16,
    "changes": 20,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/util/HelperIADCS100.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/util/HelperIADCS100.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/nmf-platform-generic-impl/src/main/java/esa/mo/platform/impl/util/HelperIADCS100.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -169,10 +169,7 @@\n         public static void putFloatInByteArray(float value, int byteOffset, byte[] target)\n         {\n             byte [] tempByte=float2ByteArray(value);\n-            for (int i=0;i<=4-1;i++)\n-            {\n-                target[byteOffset+i]=tempByte[i];\n-            }\n+            System.arraycopy(tempByte, 0, target, byteOffset + 0, 4 - 1 + 1);\n         }\n         public static float getFloatFromByteArray(byte[] source, int byteOffset)\n         {\n@@ -181,10 +178,7 @@ public static float getFloatFromByteArray(byte[] source, int byteOffset)\n         public static void putDoubleInByteArray(double value, int byteOffset, byte[] target)\n         {\n             byte [] tempByte=double2ByteArray(value);\n-            for (int i=0;i<=8-1;i++)\n-            {\n-                target[byteOffset+i]=tempByte[i];\n-            }\n+            System.arraycopy(tempByte, 0, target, byteOffset + 0, 8 - 1 + 1);\n         }\n         public static double getDoubleFromByteArray(byte[] source, int byteOffset)\n         {\n@@ -193,10 +187,7 @@ public static double getDoubleFromByteArray(byte[] source, int byteOffset)\n         public static void putIntInByteArray(int value, int byteOffset, byte[] target)\n         {\n             byte [] tempByte=int2ByteArray(value);\n-            for (int i=0;i<=4-1;i++)\n-            {\n-                target[byteOffset+i]=tempByte[i];\n-            }\n+            System.arraycopy(tempByte, 0, target, byteOffset + 0, 4 - 1 + 1);\n         }\n         public static int getIntFromByteArray(byte[] source, int byteOffset)\n         {\n@@ -209,10 +200,7 @@ public static short getInt16FromByteArray(byte[] source, int byteOffset)\n         public static void putLongInByteArray(long value, int byteOffset, byte[] target)\n         {\n             byte [] tempByte=long2ByteArray(value);\n-            for (int i=0;i<=8-1;i++)\n-            {\n-                target[byteOffset+i]=tempByte[i];\n-            }\n+            System.arraycopy(tempByte, 0, target, byteOffset + 0, 8 - 1 + 1);\n         }\n         public static long getLongFromByteArray(byte[] source, int byteOffset)\n         {"
  },
  {
    "sha": "993ec5860f529af86d4e745393d9fe6e16f49c02",
    "filename": "core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/AppsLauncherManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/AppsLauncherManager.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/AppsLauncherManager.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/mo-services-impl/nmf-software-management-impl/src/main/java/esa/mo/sm/impl/provider/AppsLauncherManager.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -216,7 +216,7 @@ protected Long add(final AppDetails definition, final ObjectId source, final URI\n   protected boolean update(final Long objId, final AppDetails definition,\n       final MALInteraction interaction)\n   { // requirement: 3.3.2.5\n-    Boolean success = this.updateDef(objId, definition);\n+    boolean success = this.updateDef(objId, definition);\n \n     if (super.getArchiveService() != null) {  // It should also update on the COM Archive\n       try {"
  },
  {
    "sha": "3bf742dbbf9101f220c98ee3bcba94a81939498b",
    "filename": "core/nmf-composites/generic-composite-model/src/main/java/esa/mo/nmf/NMFProvider.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/nmf-composites/generic-composite-model/src/main/java/esa/mo/nmf/NMFProvider.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/nmf-composites/generic-composite-model/src/main/java/esa/mo/nmf/NMFProvider.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/nmf-composites/generic-composite-model/src/main/java/esa/mo/nmf/NMFProvider.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -38,6 +38,7 @@\n import java.io.InputStreamReader;\n import java.io.Serializable;\n import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n@@ -258,7 +259,7 @@ public final URI readCentralDirectoryServiceURI() {\n \n             try {\n                 // Get the text out of that file...\n-                InputStreamReader isr = new InputStreamReader(new FileInputStream(file), Charset.forName(\"UTF-8\"));\n+                InputStreamReader isr = new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8);\n                 BufferedReader br = new BufferedReader(isr);\n \n                 try {"
  },
  {
    "sha": "9e6814147c0ec90863aeec7806fab739682e4cfe",
    "filename": "core/nmf-composites/generic-composite-model/src/main/java/esa/mo/nmf/SimpleMonitorAndControlAdapter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/nmf-composites/generic-composite-model/src/main/java/esa/mo/nmf/SimpleMonitorAndControlAdapter.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/nmf-composites/generic-composite-model/src/main/java/esa/mo/nmf/SimpleMonitorAndControlAdapter.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/nmf-composites/generic-composite-model/src/main/java/esa/mo/nmf/SimpleMonitorAndControlAdapter.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -65,7 +65,7 @@ public UInteger actionArrived(Identifier identifier, AttributeValueList attribut\n             }\n         }\n \n-        final Boolean success = this.actionArrivedSimple(identifier.getValue(), values, actionInstanceObjId);\n+        final boolean success = this.actionArrivedSimple(identifier.getValue(), values, actionInstanceObjId);\n \n         if (success) {\n             return new UInteger(0);"
  },
  {
    "sha": "1f8030537a5ea1a2ce4099fbaeabe9a5d43f3ab2",
    "filename": "core/nmf-package-lib/src/main/java/esa/mo/nmf/nmfpackage/descriptor/NMFPackageDescriptor.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/nmf-package-lib/src/main/java/esa/mo/nmf/nmfpackage/descriptor/NMFPackageDescriptor.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/core/nmf-package-lib/src/main/java/esa/mo/nmf/nmfpackage/descriptor/NMFPackageDescriptor.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/core/nmf-package-lib/src/main/java/esa/mo/nmf/nmfpackage/descriptor/NMFPackageDescriptor.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -26,6 +26,7 @@\n import java.io.InputStream;\n import java.io.InputStreamReader;\n import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n@@ -64,7 +65,7 @@ public void addFile(final NMFPackageFile file) {\n      */\n     public static NMFPackageDescriptor parseInputStream(final InputStream stream) {\n         NMFPackageDescriptor newDescriptor = null;\n-        InputStreamReader isr = new InputStreamReader(stream, Charset.forName(\"UTF-8\"));\n+        InputStreamReader isr = new InputStreamReader(stream, StandardCharsets.UTF_8);\n         BufferedReader br = new BufferedReader(isr);\n \n         try {"
  },
  {
    "sha": "8bc6c03478fed5315182777e9135d4790a6d9c79",
    "filename": "mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/celestia/CelestiaIf.java",
    "status": "modified",
    "additions": 37,
    "deletions": 44,
    "changes": 81,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/celestia/CelestiaIf.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/celestia/CelestiaIf.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/celestia/CelestiaIf.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -251,10 +251,10 @@ public void putDataInBuffer(Object obj) {\n      */\n     String buildMessage(CelestiaData data) {\n \n-        String dataStringSc = \"\";\n-        String dataStringParam = \"\";\n-        String dataStringValue = \"\";\n-        String dataStringUnit = \"\";\n+        StringBuilder dataStringSc = new StringBuilder();\n+        StringBuilder dataStringParam = new StringBuilder();\n+        StringBuilder dataStringValue = new StringBuilder();\n+        StringBuilder dataStringUnit = new StringBuilder();\n         String outMsg = \"\";\n         String scId = \"\";\n \n@@ -285,8 +285,8 @@ String buildMessage(CelestiaData data) {\n             scId = iter.next();\n \n             // epoch        \n-            dataStringSc = dataStringSc + \" \" + scId;\n-            dataStringParam = dataStringParam + \" \" + \"SIM_EPOCH_TIME\";\n+            dataStringSc.append(\" \").append(scId);\n+            dataStringParam.append(\" \").append(\"SIM_EPOCH_TIME\");\n             /*\n             dataStringValue = dataStringValue + \" \" + dateTime.getYear() + \"/\"\n                     + dateTime.getMonthValue() + \"/\"\n@@ -295,60 +295,53 @@ String buildMessage(CelestiaData data) {\n                     + dateTime.getMinute() + \":\"\n                     + dateTime.getSecond();\n             */\n-            dataStringValue = dataStringValue + \" \" + data.getYears() + \"/\"\n-                    + data.getMonths() + \"/\"\n-                    + data.getDays() + \"-\"\n-                    + data.getHours() + \":\"\n-                    + data.getMinutes() + \":\"\n-                    + data.getSeconds();\n+            dataStringValue.append(\" \").append(data.getYears()).append(\"/\").append(data.getMonths()).append(\"/\").append(data.getDays()).append(\"-\").append(data.getHours()).append(\":\").append(data.getMinutes()).append(\":\").append(data.getSeconds());\n             \n-            dataStringUnit = dataStringUnit + \" \" + \"UTC\";\n+            dataStringUnit.append(\" \").append(\"UTC\");\n \n             // ICF position and velocity        \n-            dataStringSc = dataStringSc + \" \" + scId + \" \" + scId + \" \" + scId + \" \" + scId + \" \" + scId + \" \" + scId;\n-            dataStringParam = dataStringParam + \" \" + \"X_ICF Y_ICF Z_ICF VX_ICF VY_ICF VZ_ICF\";\n-            dataStringValue = dataStringValue + \" \" + rv[0] + \" \" + rv[1] + \" \" + rv[2] + \" \" + rv[3] + \" \" + rv[4] + \" \" + rv[5];\n-            dataStringUnit = dataStringUnit + \" \" + \"km km km km/s km/s km/s\";\n+            dataStringSc.append(\" \").append(scId).append(\" \").append(scId).append(\" \").append(scId).append(\" \").append(scId).append(\" \").append(scId).append(\" \").append(scId);\n+            dataStringParam.append(\" \").append(\"X_ICF Y_ICF Z_ICF VX_ICF VY_ICF VZ_ICF\");\n+            dataStringValue.append(\" \").append(rv[0]).append(\" \").append(rv[1]).append(\" \").append(rv[2]).append(\" \").append(rv[3]).append(\" \").append(rv[4]).append(\" \").append(rv[5]);\n+            dataStringUnit.append(\" \").append(\"km km km km/s km/s km/s\");\n \n             // attitude        \n-            dataStringSc = dataStringSc + \" \" + scId + \" \" + scId + \" \" + scId + \" \" + scId;\n-            dataStringParam = dataStringParam + \" \" + \"QS_ICF QX_ICF QY_ICF QZ_ICF\";\n-            dataStringValue = dataStringValue + \" \" + q[0] + \" \" // scalar part  --> order to be checked with MO message\n-                    + q[1] + \" \"\n-                    + q[2] + \" \"\n-                    + q[3];\n-            dataStringUnit = dataStringUnit + \" \" + \"- - - -\";\n+            dataStringSc.append(\" \").append(scId).append(\" \").append(scId).append(\" \").append(scId).append(\" \").append(scId);\n+            dataStringParam.append(\" \").append(\"QS_ICF QX_ICF QY_ICF QZ_ICF\");\n+            dataStringValue.append(\" \").append(q[0]).append(\" \" // scalar part  --> order to be checked with MO message\n+            ).append(q[1]).append(\" \").append(q[2]).append(\" \").append(q[3]);\n+            dataStringUnit.append(\" \").append(\"- - - -\");\n \n             if (this.PRINT_EVENTS) {\n                 // INFO        \n-                dataStringSc = dataStringSc + \" \" + scId;\n-                dataStringParam = dataStringParam + \" \" + \"INFO\";\n-                dataStringValue = dataStringValue + \" \" + data.getInfo();\n-                dataStringUnit = dataStringUnit + \" \" + \"UTC\";\n+                dataStringSc.append(\" \").append(scId);\n+                dataStringParam.append(\" \").append(\"INFO\");\n+                dataStringValue.append(\" \").append(data.getInfo());\n+                dataStringUnit.append(\" \").append(\"UTC\");\n \n                 // ANX        \n-                dataStringSc = dataStringSc + \" \" + scId;\n-                dataStringParam = dataStringParam + \" \" + \"ANX\";\n-                dataStringValue = dataStringValue + \" \" + data.getAnx();\n-                dataStringUnit = dataStringUnit + \" \" + \"UTC\";\n+                dataStringSc.append(\" \").append(scId);\n+                dataStringParam.append(\" \").append(\"ANX\");\n+                dataStringValue.append(\" \").append(data.getAnx());\n+                dataStringUnit.append(\" \").append(\"UTC\");\n \n                 // DNX        \n-                dataStringSc = dataStringSc + \" \" + scId;\n-                dataStringParam = dataStringParam + \" \" + \"DNX\";\n-                dataStringValue = dataStringValue + \" \" + data.getDnx();\n-                dataStringUnit = dataStringUnit + \" \" + \"UTC\";\n+                dataStringSc.append(\" \").append(scId);\n+                dataStringParam.append(\" \").append(\"DNX\");\n+                dataStringValue.append(\" \").append(data.getDnx());\n+                dataStringUnit.append(\" \").append(\"UTC\");\n \n                 // AOS_KIRUNA\n-                dataStringSc = dataStringSc + \" \" + scId;\n-                dataStringParam = dataStringParam + \" \" + \"AOS_ESOC\";\n-                dataStringValue = dataStringValue + \" \" + data.getAos();\n-                dataStringUnit = dataStringUnit + \" \" + \"UTC\";\n+                dataStringSc.append(\" \").append(scId);\n+                dataStringParam.append(\" \").append(\"AOS_ESOC\");\n+                dataStringValue.append(\" \").append(data.getAos());\n+                dataStringUnit.append(\" \").append(\"UTC\");\n \n                 // LOS_KIRUNA\n-                dataStringSc = dataStringSc + \" \" + scId;\n-                dataStringParam = dataStringParam + \" \" + \"LOS_ESOC\";\n-                dataStringValue = dataStringValue + \" \" + data.getLos();\n-                dataStringUnit = dataStringUnit + \" \" + \"UTC\";\n+                dataStringSc.append(\" \").append(scId);\n+                dataStringParam.append(\" \").append(\"LOS_ESOC\");\n+                dataStringValue.append(\" \").append(data.getLos());\n+                dataStringUnit.append(\" \").append(\"UTC\");\n             }\n \n         }"
  },
  {
    "sha": "2c702ade6ede44b714ca05017b1c744adbe357c1",
    "filename": "mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/peripherals/PFineADCS.java",
    "status": "modified",
    "additions": 5,
    "deletions": 20,
    "changes": 25,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/peripherals/PFineADCS.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/peripherals/PFineADCS.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/peripherals/PFineADCS.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -199,10 +199,7 @@\n         public static void putFloatInByteArray(float value, int byteOffset, byte[] target)\n         {\n             byte [] tempByte=float2ByteArray(value);\n-            for (int i=0;i<=FLOAT_BYTES-1;i++)\n-            {\n-                target[byteOffset+i]=tempByte[i];\n-            }\n+            System.arraycopy(tempByte, 0, target, byteOffset + 0, FLOAT_BYTES - 1 + 1);\n         }\n         public static float getFloatFromByteArray(byte[] source, int byteOffset)\n         {\n@@ -211,10 +208,7 @@ public static float getFloatFromByteArray(byte[] source, int byteOffset)\n         public static void putDoubleInByteArray(double value, int byteOffset, byte[] target)\n         {\n             byte [] tempByte=double2ByteArray(value);\n-            for (int i=0;i<=DOUBLE_BYTES-1;i++)\n-            {\n-                target[byteOffset+i]=tempByte[i];\n-            }\n+            System.arraycopy(tempByte, 0, target, byteOffset + 0, DOUBLE_BYTES - 1 + 1);\n         }\n         public static double getDoubleFromByteArray(byte[] source, int byteOffset)\n         {\n@@ -223,10 +217,7 @@ public static double getDoubleFromByteArray(byte[] source, int byteOffset)\n         public static void putIntInByteArray(int value, int byteOffset, byte[] target)\n         {\n             byte [] tempByte=int2ByteArray(value);\n-            for (int i=0;i<=INTEGER_BYTES-1;i++)\n-            {\n-                target[byteOffset+i]=tempByte[i];\n-            }\n+            System.arraycopy(tempByte, 0, target, byteOffset + 0, INTEGER_BYTES - 1 + 1);\n         }\n         /**\n         Inserts a 16-bit integer into a byte array\n@@ -237,10 +228,7 @@ public static void putIntInByteArray(int value, int byteOffset, byte[] target)\n         public static void putInt16InByteArray(int value, int byteOffset, byte[] target)\n         {\n             byte [] tempByte=int2ByteArray(value);\n-            for (int i=0;i<=INTEGER_BYTES-1-2;i++)\n-            {\n-                target[byteOffset+i]=tempByte[i+2];\n-            }\n+            System.arraycopy(tempByte, 2, target, byteOffset + 0, INTEGER_BYTES - 1 - 2 + 1);\n         }\n         public static int getIntFromByteArray(byte[] source, int byteOffset)\n         {\n@@ -256,10 +244,7 @@ public static int getInt16FromByteArray(byte[] source, int byteOffset)\n         public static void putLongInByteArray(long value, int byteOffset, byte[] target)\n         {\n             byte [] tempByte=long2ByteArray(value);\n-            for (int i=0;i<=LONG_BYTES-1;i++)\n-            {\n-                target[byteOffset+i]=tempByte[i];\n-            }\n+            System.arraycopy(tempByte, 0, target, byteOffset + 0, LONG_BYTES - 1 + 1);\n         }\n         public static long getLongFromByteArray(byte[] source, int byteOffset)\n         {"
  },
  {
    "sha": "b253e7e0747dd6ef11adbc6395958d88283d511a",
    "filename": "mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/threading/SimulatorNode.java",
    "status": "modified",
    "additions": 205,
    "deletions": 208,
    "changes": 413,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/threading/SimulatorNode.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/threading/SimulatorNode.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/threading/SimulatorNode.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -708,38 +708,38 @@ private void reflectObjectGetMethods(Object targetObject) {\n             // Disregard the method, it is internal to java language\n             foundData = false;\n           } else {\n-            String arguments = \"\";\n+            StringBuilder arguments = new StringBuilder();\n             String[] argumentsBody = functionWords[1].split(\"\\\\,\");\n             InternalData internalData = m.getAnnotation(InternalData.class);\n             int indexArg = 0;\n             for (String singleArg : argumentsBody) {\n               this.logger.log(Level.FINE, \"Checking singleArg [\" + singleArg + \"]\");\n               if (singleArg.equals(\"java.lang.String)\") || singleArg.equals(\"java.lang.String\")) {\n-                arguments = arguments + \"String \" + internalData.argNames()[indexArg];\n+                arguments.append(\"String \").append(internalData.argNames()[indexArg]);\n               } else if (singleArg.contains(\"int[]\")) {\n-                arguments = arguments + \"int[] \" + internalData.argNames()[indexArg];\n+                arguments.append(\"int[] \").append(internalData.argNames()[indexArg]);\n               } else if (singleArg.contains(\"int\")) {\n-                arguments = arguments + \"int \" + internalData.argNames()[indexArg];\n+                arguments.append(\"int \").append(internalData.argNames()[indexArg]);\n               } else if (singleArg.contains(\"byte[]\")) {\n-                arguments = arguments + \"byte[] \" + internalData.argNames()[indexArg];\n+                arguments.append(\"byte[] \").append(internalData.argNames()[indexArg]);\n               } else if (singleArg.contains(\"byte\")) {\n-                arguments = arguments + \"byte \" + internalData.argNames()[indexArg];\n+                arguments.append(\"byte \").append(internalData.argNames()[indexArg]);\n               } else if (singleArg.contains(\"long[]\")) {\n-                arguments = arguments + \"long[] \" + internalData.argNames()[indexArg];\n+                arguments.append(\"long[] \").append(internalData.argNames()[indexArg]);\n               } else if (singleArg.contains(\"long\")) {\n-                arguments = arguments + \"long \" + internalData.argNames()[indexArg];\n+                arguments.append(\"long \").append(internalData.argNames()[indexArg]);\n               } else if (singleArg.contains(\"float[]\")) {\n-                arguments = arguments + \"float[] \" + internalData.argNames()[indexArg];\n+                arguments.append(\"float[] \").append(internalData.argNames()[indexArg]);\n               } else if (singleArg.contains(\"float\")) {\n-                arguments = arguments + \"float \" + internalData.argNames()[indexArg];\n+                arguments.append(\"float \").append(internalData.argNames()[indexArg]);\n               } else if (singleArg.contains(\"double\")) {\n-                arguments = arguments + \"double \" + internalData.argNames()[indexArg];\n+                arguments.append(\"double \").append(internalData.argNames()[indexArg]);\n               } else if (!singleArg.equals(\")\")) {\n                 this.logger.log(Level.INFO, \"Unknown argument type [\" + singleArg + \"]\");\n               }\n               indexArg = indexArg + 1;\n               if (indexArg < argumentsBody.length) {\n-                arguments = arguments + \",\";\n+                arguments.append(\",\");\n               }\n             }\n             body = returnString + \" \" + functionName + \"(\" + arguments + \")\";\n@@ -749,14 +749,14 @@ private void reflectObjectGetMethods(Object targetObject) {\n \n       }\n       if (foundData) {\n-        String argNames = \"\";\n+        StringBuilder argNames = new StringBuilder();\n         InternalData internalData = m.getAnnotation(InternalData.class);\n         String annotation = \"\";\n \n         if (internalData != null) {\n           annotation = String.valueOf(internalData.internalID());\n           for (String str : internalData.argNames()) {\n-            argNames += str;\n+            argNames.append(str);\n           }\n \n           CommandDescriptor commandDescriptor = new CommandDescriptor(name, body,\n@@ -3218,7 +3218,7 @@ public CommandResult runGenericMethodForCommand(CommandDescriptor c) {\n         case 2001: {// Origin [IGPS] Method [String getNMEASentence(String\n                     // inputSentence);//201//Obtain a NMEA response for a given NMEA sentence]\n           String inputSentence = (String) argObject.get(0);\n-          String result = \"\";\n+          StringBuilder result = new StringBuilder();\n           if (inputSentence.equals(\"GLMLA\")) {\n             String separator = \",\";\n             String separatorNewLine = \"\\r\\n\";\n@@ -3227,100 +3227,100 @@ public CommandResult runGenericMethodForCommand(CommandDescriptor c) {\n             for (int iSat = 1; iSat <= numberInSet; iSat++) {\n               for (int i = PGPS.FirmwareReferenceOEM16.GLMLA_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GLMLA_COL.CHECKSUM; i++) {\n                 if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.HEADER) {\n-                  result += \"$GLMLA\" + separator;\n+                  result.append(\"$GLMLA\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.NUMBER_IN_SET) {\n-                  result += numberInSet + separator;\n+                  result.append(numberInSet).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.NUMBER_CURRENT) {\n-                  result += iSat + separator;\n+                  result.append(iSat).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.SLOT) {\n-                  result += tempResult.get(iSat - 1).getName() + separator;\n+                  result.append(tempResult.get(iSat - 1).getName()).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.CALDAY_LEAP_YEAR) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.HEALTH_FREQ) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.ECC) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.DELTAT_DOT) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.ARG_PER) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.CLK_OFFSET) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.DELTA_T_DRACONIAN) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.GLONASSTIME_ASC_NODE_EQ) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.LONG_ASC_NODE_CROSS) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.DELTA_NOMINAL_I) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.CLK_OFFSET_LSB12) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.CLK_SHIFT_COARSE) {\n-                  result += \"0\";\n+                  result.append(\"0\");\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GLMLA_COL.CHECKSUM) {\n-                  result += calcNMEAChecksum(result);\n+                  result.append(calcNMEAChecksum(result.toString()));\n                 }\n               }\n-              result += separatorNewLine;\n+              result.append(separatorNewLine);\n             }\n           } else if (inputSentence.equals(\"GPGRS\")) {\n             String separator = \",\";\n             String separatorNewLine = \"\\r\\n\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPGRS_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPGRS_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPGRS_COL.HEADER) {\n-                result += \"$GPGRS\" + separator;\n+                result.append(\"$GPGRS\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGRS_COL.UTC) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGRS_COL.MODE) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i >= PGPS.FirmwareReferenceOEM16.GPGRS_COL.RES1\n                   && i <= PGPS.FirmwareReferenceOEM16.GPGRS_COL.RES12) {\n-                result += \"0\";\n+                result.append(\"0\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGRS_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n           } else if (inputSentence.equals(\"GPGRS\")) {\n             String separator = \",\";\n             String separatorNewLine = \"\\r\\n\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPGRS_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPGRS_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPGRS_COL.HEADER) {\n-                result += \"$GPGRS\" + separator;\n+                result.append(\"$GPGRS\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGRS_COL.UTC) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGRS_COL.MODE) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i >= PGPS.FirmwareReferenceOEM16.GPGRS_COL.RES1\n                   && i <= PGPS.FirmwareReferenceOEM16.GPGRS_COL.RES12) {\n-                result += \"0\";\n+                result.append(\"0\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGRS_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n           } else if (inputSentence.equals(\"GPGST\")) {\n             String separator = \",\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPGST_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPGST_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPGST_COL.HEADER) {\n-                result += \"$GPGST\" + separator;\n+                result.append(\"$GPGST\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGST_COL.UTC) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGST_COL.RMS_STD) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGST_COL.SMJR_STD) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGST_COL.SMNR_STD) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGST_COL.ORIENT_SMJR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGST_COL.LAT_STD) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGST_COL.LON_STD) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGST_COL.ALT_STD) {\n-                result += \"0\";\n+                result.append(\"0\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGST_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n           } else if (inputSentence.equals(\"GPGSV\")) {\n@@ -3342,180 +3342,180 @@ public CommandResult runGenericMethodForCommand(CommandDescriptor c) {\n               }\n               for (int i = PGPS.FirmwareReferenceOEM16.GPGSV_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPGSV_COL.CHECKSUM; i++) {\n                 if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.HEADER) {\n-                  result += \"$GPGSV\" + separator;\n+                  result.append(\"$GPGSV\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.NUMBER_MSGS) {\n-                  result += numberMessages + separator;\n+                  result.append(numberMessages).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.CURRENT_MSG) {\n-                  result += iSat + separator;\n+                  result.append(iSat).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.NUMBER_SATS) {\n-                  result += numberInSet + separator;\n+                  result.append(numberInSet).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT1_PRN) {\n-                  result += tempPRN[0] + separator;\n+                  result.append(tempPRN[0]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT1_ELEV) {\n-                  result += tempElevation[0] + separator;\n+                  result.append(tempElevation[0]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT1_AZ) {\n-                  result += tempAzimuth[0] + separator;\n+                  result.append(tempAzimuth[0]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT1_SNR) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT2_PRN) {\n-                  result += tempPRN[1] + separator;\n+                  result.append(tempPRN[1]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT2_ELEV) {\n-                  result += tempElevation[1] + separator;\n+                  result.append(tempElevation[1]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT2_AZ) {\n-                  result += tempAzimuth[1] + separator;\n+                  result.append(tempAzimuth[1]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT2_SNR) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT3_PRN) {\n-                  result += tempPRN[2] + separator;\n+                  result.append(tempPRN[2]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT3_ELEV) {\n-                  result += tempElevation[2] + separator;\n+                  result.append(tempElevation[2]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT3_AZ) {\n-                  result += tempAzimuth[2] + separator;\n+                  result.append(tempAzimuth[2]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT3_SNR) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT4_PRN) {\n-                  result += tempPRN[3] + separator;\n+                  result.append(tempPRN[3]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT4_ELEV) {\n-                  result += tempElevation[3] + separator;\n+                  result.append(tempElevation[3]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT4_AZ) {\n-                  result += tempAzimuth[3] + separator;\n+                  result.append(tempAzimuth[3]).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.SAT4_SNR) {\n-                  result += \"0\";\n+                  result.append(\"0\");\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPGSV_COL.CHECKSUM) {\n-                  result += calcNMEAChecksum(result);\n+                  result.append(calcNMEAChecksum(result.toString()));\n                 }\n               }\n-              result += \"\\n\";\n+              result.append(\"\\n\");\n             }\n           } else if (inputSentence.equals(\"GPHDT\")) {\n             String separator = \",\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPHDT_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPHDT_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPHDT_COL.HEADER) {\n-                result += \"$GPHDT\" + separator;\n+                result.append(\"$GPHDT\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPHDT_COL.HEADING) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPHDT_COL.DEGREES_TRUE) {\n-                result += \"T\";\n+                result.append(\"T\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPHDT_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n           } else if (inputSentence.equals(\"GPRMB\")) {\n             String separator = \",\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPRMB_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPRMB_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.HEADER) {\n-                result += \"$GPRMB\" + separator;\n+                result.append(\"$GPRMB\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.DATA_STATUS) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.XTRACK_ERR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.DIR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.ORIGIN_ID) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.DEST_ID) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.DEST_LAT) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.LAT_DIR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.DEST_LON) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.LON_DIR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.RANGE) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.BEARING) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.VEL) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.ARR_STATUS) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.MODE_IND) {\n-                result += \"0\";\n+                result.append(\"0\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMB_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n           } else if (inputSentence.equals(\"GPRMC\")) {\n             String separator = \",\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPRMC_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPRMC_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.HEADER) {\n-                result += \"$GPRMC\" + separator;\n+                result.append(\"$GPRMC\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.UTC) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.POS_STATUS) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.LAT) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.LAT_DIR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.LON) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.LON_DIR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.SPEED_KN) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.TRACK_TRUE) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.DATE) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.MAG_VAR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.VAR_DIR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.MODE_IND) {\n-                result += \"0\";\n+                result.append(\"0\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPRMC_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n           } else if (inputSentence.equals(\"GPVTG\")) {\n             String separator = \",\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPVTG_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPVTG_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.HEADER) {\n-                result += \"$GPVTG\" + separator;\n+                result.append(\"$GPVTG\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.TRACK_TRUE) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.T_INDICATOR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.TRACK_GOOD_DEG_MAGNETIC) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.MAGNETIC_TRACK) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.SPEED_KN) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.NAUTICAL_SPEED_IND) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.SPEED_KMH) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.SPEED_INDICATOR) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.POS_MODE) {\n-                result += \"0\";\n+                result.append(\"0\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPVTG_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n           } else if (inputSentence.equals(\"GPZDA\")) {\n             String separator = \",\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPZDA_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPZDA_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPZDA_COL.HEADER) {\n-                result += \"$GPZDA\" + separator;\n+                result.append(\"$GPZDA\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPZDA_COL.UTC) {\n-                result += simulatorData.getUTCCurrentTime() + separator;\n+                result.append(simulatorData.getUTCCurrentTime()).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPZDA_COL.DAY) {\n-                result += simulatorData.getCurrentDay() + separator;\n+                result.append(simulatorData.getCurrentDay()).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPZDA_COL.MONTH) {\n-                result += simulatorData.getCurrentMonth() + separator;\n+                result.append(simulatorData.getCurrentMonth()).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPZDA_COL.YEAR) {\n-                result += simulatorData.getCurrentYear() + separator;\n+                result.append(simulatorData.getCurrentYear()).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPZDA_COL.NULL1) {\n-                result += \"\" + separator;\n+                result.append(\"\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPZDA_COL.NULL2) {\n-                result += \"\";\n+                result.append(\"\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPZDA_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n           } else if (inputSentence.equals(\"GPALM\")) {\n@@ -3526,82 +3526,81 @@ public CommandResult runGenericMethodForCommand(CommandDescriptor c) {\n             for (int iSat = 1; iSat <= numberInSet; iSat++) {\n               for (int i = PGPS.FirmwareReferenceOEM16.GPALM_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPALM_COL.CHECKSUM; i++) {\n                 if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.HEADER) {\n-                  result += \"$GPALM\" + separator;\n+                  result.append(\"$GPALM\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.NUMBER_MSG_LOG) {\n-                  result += numberInSet + separator;\n+                  result.append(numberInSet).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.NUMBER_CURRENT) {\n-                  result += iSat + separator;\n+                  result.append(iSat).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.PRN) {\n-                  result += tempResult.get(iSat - 1).getPrn() + separator;\n+                  result.append(tempResult.get(iSat - 1).getPrn()).append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.REF_WEEK_NO) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.SV_HEALTH) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.ECC) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.ALM_REF_TIME) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.INC_ANGLE) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.OMEGA_DOT) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.RT_AXIS) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.OMEGA) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.LONG_ASC_NODE) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.MO_MEAN_ANOMALY) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.AF0_CLK_PAR) {\n-                  result += \"0\" + separator;\n+                  result.append(\"0\").append(separator);\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.AF1_CLK_PAR) {\n-                  result += \"0\";\n+                  result.append(\"0\");\n                 } else if (i == PGPS.FirmwareReferenceOEM16.GPALM_COL.CHECKSUM) {\n-                  result += calcNMEAChecksum(result);\n+                  result.append(calcNMEAChecksum(result.toString()));\n                 }\n               }\n-              result += separatorNewLine;\n+              result.append(separatorNewLine);\n             }\n           } else if (inputSentence.equals(\"GPGGA\")) {\n             SimulatorSpacecraftState simulatorSpacecraftState = getSpacecraftState();\n             String separator = \",\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPGGA_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPGGA_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.HEADER) {\n-                result += \"$GPGGA\" + separator;\n+                result.append(\"$GPGGA\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.UTC) {\n-                result += simulatorData.getUTCCurrentTime() + separator;\n+                result.append(simulatorData.getUTCCurrentTime()).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.LAT) {\n-                result += PGPS.FirmwareReferenceOEM16.degrees2DDMMpMMMM(\n-                    Math.abs(simulatorSpacecraftState.getLatitude())) + separator;\n+                result.append(PGPS.FirmwareReferenceOEM16.degrees2DDMMpMMMM(\n+                        Math.abs(simulatorSpacecraftState.getLatitude()))).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.LAT_DIR) {\n-                result += (simulatorSpacecraftState.getLatitude() >= 0 ? \"N\" : \"S\") + separator;\n+                result.append(simulatorSpacecraftState.getLatitude() >= 0 ? \"N\" : \"S\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.LONG) {\n-                result += PGPS.FirmwareReferenceOEM16.degrees2DDDMMpMMMM(\n-                    Math.abs(simulatorSpacecraftState.getLongitude())) + separator;\n+                result.append(PGPS.FirmwareReferenceOEM16.degrees2DDDMMpMMMM(\n+                        Math.abs(simulatorSpacecraftState.getLongitude()))).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.LONG_DIR) {\n-                result += (simulatorSpacecraftState.getLongitude() >= 0 ? \"E\" : \"W\") + separator;\n+                result.append(simulatorSpacecraftState.getLongitude() >= 0 ? \"E\" : \"W\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.QUAL) {\n-                result += \"1\" + separator;\n+                result.append(\"1\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.SATS_IN_USE) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.HDOP) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.ALTITUDE) {\n-                result += String.format(Locale.ROOT, \"%.2f\", simulatorSpacecraftState.getAltitude())\n-                    + separator;\n+                result.append(String.format(Locale.ROOT, \"%.2f\", simulatorSpacecraftState.getAltitude())).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.ALTITUDE_UNITS) {\n-                result += \"M\" + separator;\n+                result.append(\"M\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.UNDULATION) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.UNDULATION_UNITS) {\n-                result += \"M\" + separator;\n+                result.append(\"M\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.AGE_CORR_DATA) {\n-                result += \"\" + separator;\n+                result.append(\"\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.DIFF_BASESID) {\n-                result += \"\";\n+                result.append(\"\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGA_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n             /*\n@@ -3624,88 +3623,86 @@ public CommandResult runGenericMethodForCommand(CommandDescriptor c) {\n             String separator = \",\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.HEADER) {\n-                result += \"$GPGGALONG\" + separator;\n+                result.append(\"$GPGGALONG\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.UTC) {\n-                result += simulatorData.getUTCCurrentTime() + separator;\n+                result.append(simulatorData.getUTCCurrentTime()).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.LAT) {\n-                result += PGPS.FirmwareReferenceOEM16.degrees2DDMMpMMMMMMM(\n-                    Math.abs(simulatorSpacecraftState.getLatitude())) + separator;\n+                result.append(PGPS.FirmwareReferenceOEM16.degrees2DDMMpMMMMMMM(\n+                        Math.abs(simulatorSpacecraftState.getLatitude()))).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.LAT_DIR) {\n-                result += (simulatorSpacecraftState.getLatitude() >= 0 ? \"N\" : \"S\") + separator;\n+                result.append(simulatorSpacecraftState.getLatitude() >= 0 ? \"N\" : \"S\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.LONG) {\n-                result += PGPS.FirmwareReferenceOEM16.degrees2DDDMMpMMMMMMM(\n-                    Math.abs(simulatorSpacecraftState.getLongitude())) + separator;\n+                result.append(PGPS.FirmwareReferenceOEM16.degrees2DDDMMpMMMMMMM(\n+                        Math.abs(simulatorSpacecraftState.getLongitude()))).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.LONG_DIR) {\n-                result += (simulatorSpacecraftState.getLongitude() >= 0 ? \"E\" : \"W\") + separator;\n+                result.append(simulatorSpacecraftState.getLongitude() >= 0 ? \"E\" : \"W\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.QUAL) {\n-                result += \"1\" + separator;\n+                result.append(\"1\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.SATS_IN_USE) {\n-                result += simulatorSpacecraftState.getSatsInView() + separator;\n+                result.append(simulatorSpacecraftState.getSatsInView()).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.HDOP) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.ALTITUDE) {\n-                result += String.format(Locale.ROOT, \"%.3f\", simulatorSpacecraftState.getAltitude())\n-                    + separator;\n+                result.append(String.format(Locale.ROOT, \"%.3f\", simulatorSpacecraftState.getAltitude())).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.ALTITUDE_UNITS) {\n-                result += \"M\" + separator;\n+                result.append(\"M\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.UNDULATION) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.UNDULATION_UNITS) {\n-                result += \"M\" + separator;\n+                result.append(\"M\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.AGE_CORR_DATA) {\n-                result += \"\" + separator;\n+                result.append(\"\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.DIFF_BASESID) {\n-                result += \"\";\n+                result.append(\"\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGALONG_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n           } else if (inputSentence.equals(\"GPGGARTK\")) {\n             SimulatorSpacecraftState simulatorSpacecraftState = getSpacecraftState();\n             String separator = \",\";\n             for (int i = PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.HEADER; i <= PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.CHECKSUM; i++) {\n               if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.HEADER) {\n-                result += \"$GPGGARTK\" + separator;\n+                result.append(\"$GPGGARTK\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.UTC) {\n-                result += simulatorData.getUTCCurrentTime() + separator;\n+                result.append(simulatorData.getUTCCurrentTime()).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.LAT) {\n-                result += PGPS.FirmwareReferenceOEM16.degrees2DDMMpMMMMMMM(\n-                    Math.abs(simulatorSpacecraftState.getLatitude())) + separator;\n+                result.append(PGPS.FirmwareReferenceOEM16.degrees2DDMMpMMMMMMM(\n+                        Math.abs(simulatorSpacecraftState.getLatitude()))).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.LAT_DIR) {\n-                result += (simulatorSpacecraftState.getLatitude() >= 0 ? \"N\" : \"S\") + separator;\n+                result.append(simulatorSpacecraftState.getLatitude() >= 0 ? \"N\" : \"S\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.LONG) {\n-                result += PGPS.FirmwareReferenceOEM16.degrees2DDDMMpMMMMMMM(\n-                    Math.abs(simulatorSpacecraftState.getLongitude())) + separator;\n+                result.append(PGPS.FirmwareReferenceOEM16.degrees2DDDMMpMMMMMMM(\n+                        Math.abs(simulatorSpacecraftState.getLongitude()))).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.LONG_DIR) {\n-                result += (simulatorSpacecraftState.getLongitude() >= 0 ? \"E\" : \"W\") + separator;\n+                result.append(simulatorSpacecraftState.getLongitude() >= 0 ? \"E\" : \"W\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.QUAL) {\n-                result += \"1\" + separator;\n+                result.append(\"1\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.SATS_IN_USE) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.HDOP) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.ALTITUDE) {\n-                result += String.format(Locale.ROOT, \"%.3f\", simulatorSpacecraftState.getAltitude())\n-                    + separator;\n+                result.append(String.format(Locale.ROOT, \"%.3f\", simulatorSpacecraftState.getAltitude())).append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.ALTITUDE_UNITS) {\n-                result += \"M\" + separator;\n+                result.append(\"M\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.NULL1) {\n-                result += \"0\" + separator;\n+                result.append(\"0\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.NULL2) {\n-                result += \"M\" + separator;\n+                result.append(\"M\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.AGE_DIFF_DATA) {\n-                result += \"\" + separator;\n+                result.append(\"\").append(separator);\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.DIFF_BASESID) {\n-                result += \"\";\n+                result.append(\"\");\n               } else if (i == PGPS.FirmwareReferenceOEM16.GPGGARTK_COL.CHECKSUM) {\n-                result += calcNMEAChecksum(result);\n+                result.append(calcNMEAChecksum(result.toString()));\n               }\n             }\n           } else {\n-            result = \"Sentence identifier [\" + inputSentence + \"] unknown\";\n+            result = new StringBuilder(\"Sentence identifier [\" + inputSentence + \"] unknown\");\n             commandResult.setCommandFailed(true);\n           }\n-          globalResult = result;\n+          globalResult = result.toString();\n           break;\n         }\n         case 2002: {// Origin [IGPS] Method [String getLastKnownPosition();//2002//Obtain the last\n@@ -3717,9 +3714,9 @@ public CommandResult runGenericMethodForCommand(CommandDescriptor c) {\n         case 2003: {// Origin [IGPS] Method [String getBestXYZSentence();//2003//Obtain current\n                     // position in xyz coordinates]\n           SimulatorSpacecraftState simulatorSpacecraftState = getSpacecraftState();\n-          Double lat = Math.toRadians(simulatorSpacecraftState.getLatitude());\n-          Double lon = Math.toRadians(simulatorSpacecraftState.getLongitude());\n-          Double alt = simulatorSpacecraftState.getAltitude() / 1000.0;\n+          double lat = Math.toRadians(simulatorSpacecraftState.getLatitude());\n+          double lon = Math.toRadians(simulatorSpacecraftState.getLongitude());\n+          double alt = simulatorSpacecraftState.getAltitude() / 1000.0;\n           double e = Math.sqrt(1.0 - (EARTH_RADIUS_POLAR * EARTH_RADIUS_POLAR)\n               / (EARTH_RADIUS_EQUATOR * EARTH_RADIUS_EQUATOR));\n           double e_sqr = e * e;"
  },
  {
    "sha": "132e78577e0dea2155032c628edac233d3b40dd8",
    "filename": "mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/util/ArgumentDescriptor.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/util/ArgumentDescriptor.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/util/ArgumentDescriptor.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/util/ArgumentDescriptor.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -46,7 +46,7 @@ public ArgumentDescriptor(String type, String name) {\n         \n         this.name = name;\n         if (type.equals(\"Boolean\")) {\n-            Boolean newData = false;\n+            boolean newData = false;\n             this.type = newData;\n         } else if (type.equals(\"Integer\") || type.equals(\"int\")) {\n             int newData = 0;"
  },
  {
    "sha": "f9276b093296ef86bf816ef92e486441871a79c9",
    "filename": "mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/util/CommandDescriptor.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/util/CommandDescriptor.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/util/CommandDescriptor.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/mission/simulator/opssat-spacecraft-simulator/src/main/java/opssat/simulator/util/CommandDescriptor.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -588,20 +588,20 @@ public String setInputArgsFromString(String inputArgListString) {\n \n   public String getInputArgs() {\n     // Direct kinematics (ArrayList<ArgumentDescriptor> -> String)\n-    String formattedArgs = \"inputArgs=[\";\n+    StringBuilder formattedArgs = new StringBuilder(\"inputArgs=[\");\n     int argsCount = 0;\n     if (this.logger != null)\n       this.logger.log(Level.ALL, \"inputArgList count is [\" + inputArgList.size() + \"]\");\n     for (ArgumentDescriptor obj : inputArgList) {\n       if (this.logger != null)\n         this.logger.log(Level.ALL, \"Trying to read from [\" + obj.getName() + \"]\");\n-      formattedArgs = formattedArgs + obj.toString();\n+      formattedArgs.append(obj.toString());\n       if (++argsCount < inputArgList.size()) {\n-        formattedArgs = formattedArgs + \";\";\n+        formattedArgs.append(\";\");\n       }\n     }\n-    formattedArgs = formattedArgs + \"]\";\n-    return formattedArgs;\n+    formattedArgs.append(\"]\");\n+    return formattedArgs.toString();\n   }\n \n   public int getInternalID() {"
  },
  {
    "sha": "dd770bd1076d36bb09ab9fa6c0e2e57fabe11972",
    "filename": "sdk/examples/ground/directory-consumer/src/main/java/esa/mo/ground/directory/AlertTest2.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/examples/ground/directory-consumer/src/main/java/esa/mo/ground/directory/AlertTest2.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/examples/ground/directory-consumer/src/main/java/esa/mo/ground/directory/AlertTest2.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/sdk/examples/ground/directory-consumer/src/main/java/esa/mo/ground/directory/AlertTest2.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -125,18 +125,18 @@ public void onDataReceived(EventCOMObject eventCOMObject) {\n                 AlertDefinitionDetails details = null;  // TBD - look this up in list of \n                 //Severity severity = details.getSeverity();\n                 //String messageToDisplay = details.getName().getValue() + \" \";\n-                String messageToDisplay = \"<TEST-MSG>\" + \" \";\n+                StringBuilder messageToDisplay = new StringBuilder(\"<TEST-MSG>\" + \" \");\n \n                 AttributeValueList attValues = receivedAlert.getArgumentValues();\n \n                 if (attValues != null) {\n                     if (attValues.size() == 1) {\n-                        messageToDisplay += attValues.get(0).getValue().toString();\n+                        messageToDisplay.append(attValues.get(0).getValue().toString());\n                     }\n                     if (attValues.size() > 1) {\n                         for (int i = 0; i < attValues.size(); i++) {\n                             AttributeValue attValue = attValues.get(i);\n-                            messageToDisplay += \"[\" + i + \"] \" + attValue.getValue().toString() + \"\\n\";\n+                            messageToDisplay.append(\"[\").append(i).append(\"] \").append(attValue.getValue().toString()).append(\"\\n\");\n                         }\n                     }\n                 }"
  },
  {
    "sha": "cb9a7eb53a0200769a9f3ea09f108e7ebd264177",
    "filename": "sdk/examples/ground/set-and-command/src/main/java/esa/mo/ground/setandcommand/DemoSetAndCommand.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/examples/ground/set-and-command/src/main/java/esa/mo/ground/setandcommand/DemoSetAndCommand.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/examples/ground/set-and-command/src/main/java/esa/mo/ground/setandcommand/DemoSetAndCommand.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/sdk/examples/ground/set-and-command/src/main/java/esa/mo/ground/setandcommand/DemoSetAndCommand.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -54,7 +54,7 @@ public DemoSetAndCommand()\n     gma.setParameter(\"A_Parameter\", parameterValue);\n \n     // Send a command with a Double argument\n-    Double value = 1.35565;\n+    double value = 1.35565;\n     Double[] values = new Double[1];\n     values[0] = value;\n     gma.invokeAction(\"Go\", values);"
  },
  {
    "sha": "1f167f25b1a25aefc842fd8cce5720a446ee3ea2",
    "filename": "sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ActionConsumerPanel.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ActionConsumerPanel.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ActionConsumerPanel.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ActionConsumerPanel.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -314,15 +314,14 @@ private void listDefinitionButtonActionPerformed(java.awt.event.ActionEvent evt)\n                 return;\n             }\n \n-            String str = \"Object instance identifiers on the provider: \\n\";\n+            StringBuilder str = new StringBuilder(\"Object instance identifiers on the provider: \\n\");\n             if (objIds != null) {\n                 for (ObjectInstancePair objId : objIds) {\n-                    str += \"ObjId Def: \" + objId.getObjDefInstanceId().toString()\n-                            + \" Identity: \" + objId.getObjIdentityInstanceId().toString() + \"\\n\";\n+                    str.append(\"ObjId Def: \").append(objId.getObjDefInstanceId().toString()).append(\" Identity: \").append(objId.getObjIdentityInstanceId().toString()).append(\"\\n\");\n                 }\n             }\n \n-            JOptionPane.showMessageDialog(null, str, \"Returned List from the Provider\", JOptionPane.PLAIN_MESSAGE);\n+            JOptionPane.showMessageDialog(null, str.toString(), \"Returned List from the Provider\", JOptionPane.PLAIN_MESSAGE);\n \n         } catch (MALInteractionException ex) {\n             Logger.getLogger(ActionConsumerPanel.class.getName()).log(Level.SEVERE, null, ex);"
  },
  {
    "sha": "f183b2243bf754434fd64df66aa2800e9174d5ee",
    "filename": "sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AggregationAddModify.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AggregationAddModify.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AggregationAddModify.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AggregationAddModify.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -155,7 +155,7 @@ public void setUpdateParameterForm(javax.swing.JTable aggregationTable) {\n \n         filterEnabledCB.setSelected(false);\n \n-        Boolean curState = (aggregationTable.getValueAt(aggregationTable.getSelectedRow(), 4).toString().equals(\"true\")); // String to Boolean conversion\n+        boolean curState = (aggregationTable.getValueAt(aggregationTable.getSelectedRow(), 4).toString().equals(\"true\")); // String to Boolean conversion\n         generationEnabledCB.setSelected(curState);\n         generationEnabledCB.setEnabled(true);\n \n@@ -566,8 +566,8 @@ private void submitButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN\n             JOptionPane.showMessageDialog(null, \"Please fill-in all the necessary fields!\", \"Warning!\", JOptionPane.PLAIN_MESSAGE);\n             return;\n         }\n-        Float updateInterval;\n-        Float filteredTimeout;\n+        float updateInterval;\n+        float filteredTimeout;\n         try {\n             updateInterval = Float.parseFloat(updateIntervalTF.getText());  // Check if it is a number\n             filteredTimeout = Float.parseFloat(filteredTimeoutTF.getText());  // Check if it is a number"
  },
  {
    "sha": "fe4fbf6cd90fcd61a818d5d9376023d6931587be",
    "filename": "sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AggregationConsumerPanel.java",
    "status": "modified",
    "additions": 32,
    "deletions": 36,
    "changes": 68,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AggregationConsumerPanel.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AggregationConsumerPanel.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AggregationConsumerPanel.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -306,13 +306,12 @@ private void listDefinitionButtonActionPerformed(java.awt.event.ActionEvent evt)\n \n             ObjectInstancePairList objIds = this.serviceMCAggregation.getAggregationStub().listDefinition(list);\n \n-            String str = \"Object instance identifiers on the provider: \\n\";\n+            StringBuilder str = new StringBuilder(\"Object instance identifiers on the provider: \\n\");\n             for (ObjectInstancePair objId : objIds) {\n-                str += \"ObjId Def: \" + objId.getObjDefInstanceId().toString()\n-                        + \" Identity: \" + objId.getObjIdentityInstanceId().toString() + \"\\n\";\n+                str.append(\"ObjId Def: \").append(objId.getObjDefInstanceId().toString()).append(\" Identity: \").append(objId.getObjIdentityInstanceId().toString()).append(\"\\n\");\n             }\n \n-            JOptionPane.showMessageDialog(null, str, \"Returned List from the Provider\", JOptionPane.PLAIN_MESSAGE);\n+            JOptionPane.showMessageDialog(null, str.toString(), \"Returned List from the Provider\", JOptionPane.PLAIN_MESSAGE);\n         } catch (MALInteractionException ex) {\n             Logger.getLogger(AggregationConsumerPanel.class.getName()).log(Level.SEVERE, null, ex);\n         } catch (MALException ex) {\n@@ -549,34 +548,33 @@ private void getValueAllButtonAggActionPerformed(java.awt.event.ActionEvent evt)\n         try {\n             AggregationValueDetailsList values = serviceMCAggregation.getAggregationStub().getValue(longlist);\n \n-            String str = \"\";\n+            StringBuilder str = new StringBuilder();\n             for (int h = 0; h < values.size(); h++) {\n                 AggregationValueDetails value = values.get(h);\n \n-                str += \"The value for objId \" + value.getAggId().toString() + \" (AggregationValue index: \" + h + \") is:\" + \"\\n\";\n+                str.append(\"The value for objId \").append(value.getAggId().toString()).append(\" (AggregationValue index: \").append(h).append(\") is:\").append(\"\\n\");\n                 for (int i = 0; i < value.getValue().getParameterSetValues().size(); i++) {\n                     for (int j = 0; j < value.getValue().getParameterSetValues().get(i).getValues().size(); j++) {\n                         if (value.getValue().getParameterSetValues().get(i).getValues().get(j) == null) {\n                             continue;\n                         }\n \n                         ParameterValue paramValue = value.getValue().getParameterSetValues().get(i).getValues().get(j).getValue();\n-                        str += \"(parameterSetValue index: \" + i + \") \" + \"validityState: \"\n-                                + paramValue.getValidityState().toString() + \"\\n\";\n+                        str.append(\"(parameterSetValue index: \").append(i).append(\") \").append(\"validityState: \").append(paramValue.getValidityState().toString()).append(\"\\n\");\n \n                         if (paramValue.getRawValue() != null) {\n-                            str += \"(parameterSetValue index: \" + i + \") \" + \"rawValue: \" + paramValue.getRawValue().toString() + \"\\n\";\n+                            str.append(\"(parameterSetValue index: \").append(i).append(\") \").append(\"rawValue: \").append(paramValue.getRawValue().toString()).append(\"\\n\");\n                         }\n                         if (paramValue.getConvertedValue() != null) {\n-                            str += \"(parameterSetValue index: \" + i + \") \" + \"convertedValue: \" + paramValue.getConvertedValue().toString() + \"\\n\";\n+                            str.append(\"(parameterSetValue index: \").append(i).append(\") \").append(\"convertedValue: \").append(paramValue.getConvertedValue().toString()).append(\"\\n\");\n                         }\n-                        str += \"\\n\";\n+                        str.append(\"\\n\");\n                     }\n                 }\n-                str += \"---------------------------------------\\n\";\n+                str.append(\"---------------------------------------\\n\");\n             }\n \n-            JOptionPane.showMessageDialog(null, str, \"Returned List from the Provider\", JOptionPane.PLAIN_MESSAGE);\n+            JOptionPane.showMessageDialog(null, str.toString(), \"Returned List from the Provider\", JOptionPane.PLAIN_MESSAGE);\n \n         } catch (MALInteractionException ex) {\n             Logger.getLogger(AggregationConsumerPanel.class.getName()).log(Level.SEVERE, null, ex);\n@@ -593,7 +591,7 @@ private void enableFilterAllAggActionPerformed(java.awt.event.ActionEvent evt) {\n         } else {\n             str = \"true\";\n         }\n-        Boolean curState = (str.equals(\"true\")); // String to Boolean conversion\n+        boolean curState = (str.equals(\"true\")); // String to Boolean conversion\n         InstanceBooleanPairList boolPairList = new InstanceBooleanPairList();\n         boolPairList.add(new InstanceBooleanPair((long) 0, !curState));  // Zero is the wildcard\n         try {\n@@ -640,34 +638,33 @@ private void getValueButtonAgg1ActionPerformed(java.awt.event.ActionEvent evt) {\n         try {\n             AggregationValueDetailsList values = serviceMCAggregation.getAggregationStub().getValue(longlist);\n \n-            String str = \"\";\n+            StringBuilder str = new StringBuilder();\n             for (int h = 0; h < values.size(); h++) {\n                 AggregationValueDetails value = values.get(h);\n \n-                str += \"The value for objId \" + value.getAggId().toString() + \" (AggregationValue index: \" + h + \") is:\" + \"\\n\";\n+                str.append(\"The value for objId \").append(value.getAggId().toString()).append(\" (AggregationValue index: \").append(h).append(\") is:\").append(\"\\n\");\n                 for (int i = 0; i < value.getValue().getParameterSetValues().size(); i++) {\n                     for (int j = 0; j < value.getValue().getParameterSetValues().get(i).getValues().size(); j++) {\n                         if (value.getValue().getParameterSetValues().get(i).getValues().get(j) == null) {\n                             continue;\n                         }\n \n                         ParameterValue paramValue = value.getValue().getParameterSetValues().get(i).getValues().get(j).getValue();\n-                        str += \"(parameterSetValue index: \" + i + \") \" + \"validityState: \"\n-                                + paramValue.getValidityState().toString() + \"\\n\";\n+                        str.append(\"(parameterSetValue index: \").append(i).append(\") \").append(\"validityState: \").append(paramValue.getValidityState().toString()).append(\"\\n\");\n \n                         if (paramValue.getRawValue() != null) {\n-                            str += \"(parameterSetValue index: \" + i + \") \" + \"rawValue: \" + paramValue.getRawValue().toString() + \"\\n\";\n+                            str.append(\"(parameterSetValue index: \").append(i).append(\") \").append(\"rawValue: \").append(paramValue.getRawValue().toString()).append(\"\\n\");\n                         }\n                         if (paramValue.getConvertedValue() != null) {\n-                            str += \"(parameterSetValue index: \" + i + \") \" + \"convertedValue: \" + paramValue.getConvertedValue().toString() + \"\\n\";\n+                            str.append(\"(parameterSetValue index: \").append(i).append(\") \").append(\"convertedValue: \").append(paramValue.getConvertedValue().toString()).append(\"\\n\");\n                         }\n-                        str += \"\\n\";\n+                        str.append(\"\\n\");\n                     }\n                 }\n-                str += \"---------------------------------------\\n\";\n+                str.append(\"---------------------------------------\\n\");\n             }\n \n-            JOptionPane.showMessageDialog(null, str, \"Returned List from the Provider\", JOptionPane.PLAIN_MESSAGE);\n+            JOptionPane.showMessageDialog(null, str.toString(), \"Returned List from the Provider\", JOptionPane.PLAIN_MESSAGE);\n \n         } catch (MALInteractionException ex) {\n             Logger.getLogger(AggregationConsumerPanel.class.getName()).log(Level.SEVERE, null, ex);\n@@ -694,17 +691,16 @@ public void monitorValueNotifyReceived(org.ccsds.moims.mo.mal.transport.MALMessa\n \n             try {\n                 if (msgBoxOn.isSelected() && !lUpdateHeaderList.isEmpty() && lAggregationValueList.size() != 0) {\n-                    String str = \"\";\n+                    StringBuilder str = new StringBuilder();\n                     final AggregationValue aggregationValue = lAggregationValueList.get(0);\n-                    str += \"AggregationValue generationMode: \" + aggregationValue.getGenerationMode().toString()\n-                            + \" (filtered: \" + aggregationValue.getFiltered().toString() + \")\" + \"\\n\";\n+                    str.append(\"AggregationValue generationMode: \").append(aggregationValue.getGenerationMode().toString()).append(\" (filtered: \").append(aggregationValue.getFiltered().toString()).append(\")\").append(\"\\n\");\n \n-                    str += \"Aggregation objId \" + objId + \" (name: \" + Aggname + \"):\" + \"\\n\";\n+                    str.append(\"Aggregation objId \").append(objId).append(\" (name: \").append(Aggname).append(\"):\").append(\"\\n\");\n \n                     for (int i = 0; i < aggregationValue.getParameterSetValues().size(); i++) {  // Cycle through parameterSetValues\n-                        str += \"- AggregationParameterSet values index: \" + i + \"\\n\";\n-                        str += \"deltaTime: \" + aggregationValue.getParameterSetValues().get(i).getDeltaTime();\n-                        str += \" and intervalTime: \" + aggregationValue.getParameterSetValues().get(i).getIntervalTime() + \"\\n\";\n+                        str.append(\"- AggregationParameterSet values index: \").append(i).append(\"\\n\");\n+                        str.append(\"deltaTime: \").append(aggregationValue.getParameterSetValues().get(i).getDeltaTime());\n+                        str.append(\" and intervalTime: \").append(aggregationValue.getParameterSetValues().get(i).getIntervalTime()).append(\"\\n\");\n                         AggregationSetValue parameterSetsValue = aggregationValue.getParameterSetValues().get(i);\n \n                         for (int j = 0; j < parameterSetsValue.getValues().size(); j++) { // Cycle through the values\n@@ -714,19 +710,19 @@ public void monitorValueNotifyReceived(org.ccsds.moims.mo.mal.transport.MALMessa\n \n                             ParameterValue paramValue = parameterSetsValue.getValues().get(j).getValue();\n \n-                            str += \"values index: \" + j + \"\\n\";\n-                            str += \"validityState: \" + paramValue.getValidityState().toString() + \"\\n\";\n+                            str.append(\"values index: \").append(j).append(\"\\n\");\n+                            str.append(\"validityState: \").append(paramValue.getValidityState().toString()).append(\"\\n\");\n                             if (paramValue.getRawValue() != null) {\n-                                str += \"rawValue: \" + paramValue.getRawValue().toString() + \"\\n\";\n+                                str.append(\"rawValue: \").append(paramValue.getRawValue().toString()).append(\"\\n\");\n                             }\n                             if (paramValue.getConvertedValue() != null) {\n-                                str += \"convertedValue: \" + paramValue.getConvertedValue().toString() + \"\\n\";\n+                                str.append(\"convertedValue: \").append(paramValue.getConvertedValue().toString()).append(\"\\n\");\n                             }\n-                            str += \"\\n\";\n+                            str.append(\"\\n\");\n                         }\n                     }\n \n-                    JOptionPane.showMessageDialog(null, str, \"Returned Values from the Provider\", JOptionPane.PLAIN_MESSAGE);\n+                    JOptionPane.showMessageDialog(null, str.toString(), \"Returned Values from the Provider\", JOptionPane.PLAIN_MESSAGE);\n                 }\n \n             } catch (NumberFormatException ex) {"
  },
  {
    "sha": "5afaf67cd81d44249b033e5ff87fbe6c5c61b754",
    "filename": "sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AlertConsumerPanel.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AlertConsumerPanel.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AlertConsumerPanel.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/AlertConsumerPanel.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -240,13 +240,12 @@ private void listDefinitionButtonActionPerformed(java.awt.event.ActionEvent evt)\n                 return;\n             }\n \n-            String str = \"Object instance identifiers on the provider: \\n\";\n+            StringBuilder str = new StringBuilder(\"Object instance identifiers on the provider: \\n\");\n             for (ObjectInstancePair objId : objIds) {\n-                    str += \"ObjId Def: \" + objId.getObjDefInstanceId().toString() \n-                            + \" Identity: \" + objId.getObjIdentityInstanceId().toString() + \"\\n\";\n+                    str.append(\"ObjId Def: \").append(objId.getObjDefInstanceId().toString()).append(\" Identity: \").append(objId.getObjIdentityInstanceId().toString()).append(\"\\n\");\n             }\n \n-            JOptionPane.showMessageDialog(null, str, \"Returned List from the Provider\", JOptionPane.PLAIN_MESSAGE);\n+            JOptionPane.showMessageDialog(null, str.toString(), \"Returned List from the Provider\", JOptionPane.PLAIN_MESSAGE);\n         } catch (MALInteractionException ex) {\n             Logger.getLogger(AlertConsumerPanel.class.getName()).log(Level.SEVERE, null, ex);\n         } catch (MALException ex) {"
  },
  {
    "sha": "62a178e4b28b280d12905ba95d4263daeba486a5",
    "filename": "sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ParameterAddModify.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ParameterAddModify.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ParameterAddModify.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ParameterAddModify.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -161,7 +161,7 @@ public void setUpdateParameterForm(javax.swing.JTable parameterTable) {\n         validityExpressionCBActionPerformed(null);\n \n         String str = parameterTable.getValueAt(parameterTable.getSelectedRow(), 5).toString();\n-        Boolean curState = (str.equals(\"true\")); // String to Boolean conversion\n+        boolean curState = (str.equals(\"true\")); // String to Boolean conversion\n         generationEnabledCB.setSelected(curState);\n         generationEnabledCB.setEnabled(true);\n         isAddDef = false;"
  },
  {
    "sha": "6e6dd6cb20c7cb62c99927de11ed7d80dd68420b",
    "filename": "sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ParameterConsumerPanel.java",
    "status": "modified",
    "additions": 5,
    "deletions": 6,
    "changes": 11,
    "blob_url": "https://github.com/esa/nanosat-mo-framework/blob/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ParameterConsumerPanel.java",
    "raw_url": "https://github.com/esa/nanosat-mo-framework/raw/01d80568b97fdec8ba027cf12b41c1ecccbf54aa/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ParameterConsumerPanel.java",
    "contents_url": "https://api.github.com/repos/esa/nanosat-mo-framework/contents/sdk/tools/consumer-test-tool/src/main/java/esa/mo/nmf/ctt/services/mc/ParameterConsumerPanel.java?ref=01d80568b97fdec8ba027cf12b41c1ecccbf54aa",
    "patch": "@@ -476,25 +476,24 @@ private void getValueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GE\n         try {\n             values = this.serviceMCParameter.getParameterStub().getValue(longlist);\n             \n-            String str = \"\";\n+            StringBuilder str = new StringBuilder();\n             for (int i = 0; i < values.size(); i++) {\n-                str += \"The value for objId \" + values.get(i).getParamId().toString() \n-                        + \" is:\" + \"\\n\" + values.get(i).getValue().toString() + \"\\n\";\n+                str.append(\"The value for objId \").append(values.get(i).getParamId().toString()).append(\" is:\").append(\"\\n\").append(values.get(i).getValue().toString()).append(\"\\n\");\n \n                 Attribute attribute = values.get(i).getValue().getRawValue();\n                 if (attribute instanceof Blob){\n                     try {\n                         // Try to get a serial Object...\n                         Object obj = HelperAttributes.blobAttribute2serialObject((Blob) attribute);\n-                        str += obj.toString();\n+                        str.append(obj.toString());\n                     } catch (IOException ex) {\n                         // If it fails, then just pring the byte array...\n-                        str += Arrays.toString(((Blob) attribute).getValue()) + \"\\n\";\n+                        str.append(Arrays.toString(((Blob) attribute).getValue())).append(\"\\n\");\n                     }\n                 }\n             }\n \n-            JOptionPane.showMessageDialog(null, str, \"Returned Values from the Provider\", JOptionPane.PLAIN_MESSAGE);            \n+            JOptionPane.showMessageDialog(null, str.toString(), \"Returned Values from the Provider\", JOptionPane.PLAIN_MESSAGE);\n         } catch (MALInteractionException ex) {\n             Logger.getLogger(ParameterConsumerPanel.class.getName()).log(Level.SEVERE, null, ex);\n         } catch (MALException ex) {"
  }
]
