[
  {
    "sha": "a7ec1d4f155130f7567185f7b580113fd43d1f04",
    "filename": "apis/api-mal/src/main/java/org/ccsds/moims/mo/mal/MALService.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/apis/api-mal/src/main/java/org/ccsds/moims/mo/mal/MALService.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/apis/api-mal/src/main/java/org/ccsds/moims/mo/mal/MALService.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/apis/api-mal/src/main/java/org/ccsds/moims/mo/mal/MALService.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -180,7 +180,7 @@ public MALOperation getOperationByName(final Identifier opName) {\n      * @return The set of operations or an empty array if not found.\n      */\n     public MALOperation[] getOperationsByCapabilitySet(final int capabilitySet) {\n-        final MALOperation[] rv = (MALOperation[]) operationsBySet.get(Integer.valueOf(capabilitySet));\n+        final MALOperation[] rv = (MALOperation[]) operationsBySet.get(capabilitySet);\n         return ((null == rv) ? EMPTY_SET : rv);\n     }\n "
  },
  {
    "sha": "cc2459e6e1c5d641910b9276cdee1a46a22108c0",
    "filename": "bindings/encoding-binary/src/main/java/esa/mo/mal/encoder/binary/fixed/FixedBinaryDecoder.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/encoding-binary/src/main/java/esa/mo/mal/encoder/binary/fixed/FixedBinaryDecoder.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/encoding-binary/src/main/java/esa/mo/mal/encoder/binary/fixed/FixedBinaryDecoder.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/encoding-binary/src/main/java/esa/mo/mal/encoder/binary/fixed/FixedBinaryDecoder.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -196,9 +196,8 @@ public String getString() throws MALException {\n \n             if (len >= 0) {\n                 buf.checkBuffer(len);\n-                final String s = new String(buf.getBuf(),\n+                return new String(buf.getBuf(),\n                         buf.shiftOffsetAndReturnPrevious(len), len, UTF8_CHARSET);\n-                return s;\n             }\n             return null;\n         }"
  },
  {
    "sha": "6c0268ae5a273ef4f52ab07ecfe807fa13422189",
    "filename": "bindings/encoding-string/src/main/java/esa/mo/mal/encoder/string/StringDecoder.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/encoding-string/src/main/java/esa/mo/mal/encoder/string/StringDecoder.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/encoding-string/src/main/java/esa/mo/mal/encoder/string/StringDecoder.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/encoding-string/src/main/java/esa/mo/mal/encoder/string/StringDecoder.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -140,7 +140,7 @@ public String getString() throws MALException {\n         @Override\n         public float getFloat() throws MALException {\n             try {\n-                return Float.valueOf(removeFirst());\n+                return Float.parseFloat(removeFirst());\n             } catch (NumberFormatException ex) {\n                 throw new MALException(ex.getLocalizedMessage(), ex);\n             }\n@@ -149,7 +149,7 @@ public float getFloat() throws MALException {\n         @Override\n         public double getDouble() throws MALException {\n             try {\n-                return Double.valueOf(removeFirst());\n+                return Double.parseDouble(removeFirst());\n             } catch (NumberFormatException ex) {\n                 throw new MALException(ex.getLocalizedMessage(), ex);\n             }\n@@ -167,7 +167,7 @@ public BigInteger getBigInteger() throws MALException {\n         @Override\n         public long getSignedLong() throws MALException {\n             try {\n-                return Long.valueOf(removeFirst());\n+                return Long.parseLong(removeFirst());\n             } catch (NumberFormatException ex) {\n                 throw new MALException(ex.getLocalizedMessage(), ex);\n             }\n@@ -176,7 +176,7 @@ public long getSignedLong() throws MALException {\n         @Override\n         public int getSignedInt() throws MALException {\n             try {\n-                return Integer.valueOf(removeFirst());\n+                return Integer.parseInt(removeFirst());\n             } catch (NumberFormatException ex) {\n                 throw new MALException(ex.getLocalizedMessage(), ex);\n             }\n@@ -185,7 +185,7 @@ public int getSignedInt() throws MALException {\n         @Override\n         public short getSignedShort() throws MALException {\n             try {\n-                return Short.valueOf(removeFirst());\n+                return Short.parseShort(removeFirst());\n             } catch (NumberFormatException ex) {\n                 throw new MALException(ex.getLocalizedMessage(), ex);\n             }\n@@ -229,7 +229,7 @@ public short getUnsignedShort8() throws MALException {\n         @Override\n         public boolean getBool() throws MALException {\n             try {\n-                return Boolean.valueOf(removeFirst());\n+                return Boolean.parseBoolean(removeFirst());\n             } catch (NumberFormatException ex) {\n                 throw new MALException(ex.getLocalizedMessage(), ex);\n             }\n@@ -238,7 +238,7 @@ public boolean getBool() throws MALException {\n         @Override\n         public byte get8() throws MALException {\n             try {\n-                return Byte.valueOf(removeFirst());\n+                return Byte.parseByte(removeFirst());\n             } catch (NumberFormatException ex) {\n                 throw new MALException(ex.getLocalizedMessage(), ex);\n             }"
  },
  {
    "sha": "025454ab4b9a461cc18f73caf7517341eb93c1c6",
    "filename": "bindings/transport-file/src/main/java/esa/mo/mal/transport/file/FileTransceiver.java",
    "status": "modified",
    "additions": 1,
    "deletions": 4,
    "changes": 5,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-file/src/main/java/esa/mo/mal/transport/file/FileTransceiver.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-file/src/main/java/esa/mo/mal/transport/file/FileTransceiver.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/transport-file/src/main/java/esa/mo/mal/transport/file/FileTransceiver.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -87,12 +87,9 @@ public void sendEncodedMessage(GENOutgoingMessageHolder packetData) throws IOExc\n \n         java.io.File tmpFile = new File(outgoingDirectory.toFile(), tmpname + \".tmp\");\n \n-        java.io.FileOutputStream fos = new FileOutputStream(tmpFile);\n-        try {\n+        try (FileOutputStream fos = new FileOutputStream(tmpFile)) {\n             fos.write((byte[]) packetData.getEncodedMessage());\n             fos.flush();\n-        } finally {\n-            fos.close();\n         }\n \n         // rename file to correct file name"
  },
  {
    "sha": "c7321f8d40c29d1d209cdf33b2ebcae86a350e11",
    "filename": "bindings/transport-generic/src/main/java/esa/mo/mal/transport/gen/GENTransport.java",
    "status": "modified",
    "additions": 5,
    "deletions": 6,
    "changes": 11,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-generic/src/main/java/esa/mo/mal/transport/gen/GENTransport.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-generic/src/main/java/esa/mo/mal/transport/gen/GENTransport.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/transport-generic/src/main/java/esa/mo/mal/transport/gen/GENTransport.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -810,15 +810,14 @@ public String getRoutingPart(String uriValue) {\n         String routingPart = cachedRoutingParts.get(uriValue);\n \n         if (routingPart == null) {\n-            String endpointUriPart = uriValue;\n-            final int iFirst = nthIndexOf(endpointUriPart, serviceDelim, serviceDelimCounter);\n-            int iSecond = supportsRouting ? endpointUriPart.indexOf(routingDelim)\n-                    : endpointUriPart.length();\n+            final int iFirst = nthIndexOf(uriValue, serviceDelim, serviceDelimCounter);\n+            int iSecond = supportsRouting ? uriValue.indexOf(routingDelim)\n+                    : uriValue.length();\n             if (0 > iSecond) {\n-                iSecond = endpointUriPart.length();\n+                iSecond = uriValue.length();\n             }\n \n-            routingPart = endpointUriPart.substring(iFirst + 1, iSecond);\n+            routingPart = uriValue.substring(iFirst + 1, iSecond);\n             cachedRoutingParts.put(uriValue, routingPart);\n         }\n "
  },
  {
    "sha": "f85a48204f6770fdb83ef25a4e4a5616691033ab",
    "filename": "bindings/transport-jms/src/main/java/esa/mo/mal/transport/jms/JMSConsumeHandler.java",
    "status": "modified",
    "additions": 10,
    "deletions": 12,
    "changes": 22,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-jms/src/main/java/esa/mo/mal/transport/jms/JMSConsumeHandler.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-jms/src/main/java/esa/mo/mal/transport/jms/JMSConsumeHandler.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/transport-jms/src/main/java/esa/mo/mal/transport/jms/JMSConsumeHandler.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -86,12 +86,11 @@ public void register(JMSTransport transport, final String providerExchangeName,\n         String sdomain = StructureHelper.domainToString(msg.getHeader().getDomain());\n \n         for (EntityRequest entitie : entities) {\n-            EntityRequest rqst = (EntityRequest) entitie;\n             buf.append('(');\n             // insert request specific filters\n             StringBuilder pbuf = new StringBuilder();\n             boolean pvalueSet;\n-            IdentifierList sdl = rqst.getSubDomain();\n+            IdentifierList sdl = ((EntityRequest) entitie).getSubDomain();\n             if ((null != sdl) && (0 < sdl.size())) {\n                 boolean wildcard = false;\n                 int trunc = 0;\n@@ -114,35 +113,34 @@ public void register(JMSTransport transport, final String providerExchangeName,\n                 pvalueSet = createRoutingKeyString(pbuf,\n                         JMSEndpoint.DOM_PROPERTY, sdomain, false, false);\n             }\n-            if (!rqst.getAllAreas()) {\n+            if (!((EntityRequest) entitie).getAllAreas()) {\n                 pvalueSet = createRoutingKeyLong(pbuf, JMSEndpoint.ARR_PROPERTY,\n                         (long) msg.getHeader().getServiceArea().getValue(), pvalueSet);\n             }\n-            if (!rqst.getAllServices()) {\n+            if (!((EntityRequest) entitie).getAllServices()) {\n                 pvalueSet = createRoutingKeyLong(pbuf, JMSEndpoint.SVC_PROPERTY,\n                         (long) msg.getHeader().getService().getValue(), pvalueSet);\n             }\n-            if (!rqst.getAllOperations()) {\n+            if (!((EntityRequest) entitie).getAllOperations()) {\n                 pvalueSet = createRoutingKeyLong(pbuf, JMSEndpoint.OPN_PROPERTY,\n                         (long) msg.getHeader().getOperation().getValue(), pvalueSet);\n             }\n-            if (rqst.getOnlyOnChange()) {\n+            if (((EntityRequest) entitie).getOnlyOnChange()) {\n                 createRoutingKeyBoolean(pbuf, JMSEndpoint.MOD_PROPERTY, true, pvalueSet);\n             }\n             buf.append(pbuf);\n             StringBuilder ebuf = new StringBuilder();\n-            EntityKeyList entityKeys = rqst.getEntityKeys();\n+            EntityKeyList entityKeys = ((EntityRequest) entitie).getEntityKeys();\n             for (EntityKey entityKey : entityKeys) {\n-                EntityKey id = (EntityKey) entityKey;\n                 StringBuilder lbuf = new StringBuilder();\n                 boolean valueSet = createRoutingKeyIdentifier(lbuf,\n-                        JMSEndpoint.EID_PROPERTY, id.getFirstSubKey());\n+                        JMSEndpoint.EID_PROPERTY, ((EntityKey) entityKey).getFirstSubKey());\n                 valueSet = createRoutingKeyLong(lbuf, JMSEndpoint.DID_PROPERTY,\n-                        id.getSecondSubKey(), valueSet);\n+                        ((EntityKey) entityKey).getSecondSubKey(), valueSet);\n                 valueSet = createRoutingKeyLong(lbuf, JMSEndpoint.OID_PROPERTY,\n-                        id.getThirdSubKey(), valueSet);\n+                        ((EntityKey) entityKey).getThirdSubKey(), valueSet);\n                 createRoutingKeyLong(lbuf, JMSEndpoint.SID_PROPERTY,\n-                        id.getFourthSubKey(), valueSet);\n+                        ((EntityKey) entityKey).getFourthSubKey(), valueSet);\n                 if (lbuf.length() > 0) {\n                     if (notFirst) {\n                         ebuf.append(\" OR \");"
  },
  {
    "sha": "086f67c14b6c90f3a45a575d4ad16397d77d2ea2",
    "filename": "bindings/transport-jms/src/main/java/esa/mo/mal/transport/jms/JMSPublishHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-jms/src/main/java/esa/mo/mal/transport/jms/JMSPublishHandler.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-jms/src/main/java/esa/mo/mal/transport/jms/JMSPublishHandler.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/transport-jms/src/main/java/esa/mo/mal/transport/jms/JMSPublishHandler.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -163,8 +163,7 @@ protected void preCheckAllowedToPublish(MALMessageHeader hdr,\n         if (StructureHelper.isSubDomainOf(domain, hdr.getDomain())) {\n             EntityKeyList lst = new EntityKeyList();\n             for (UpdateHeader updateList1 : updateList) {\n-                UpdateHeader update = (UpdateHeader) updateList1;\n-                EntityKey updateKey = update.getKey();\n+                EntityKey updateKey = ((UpdateHeader) updateList1).getKey();\n                 boolean matched = false;\n                 for (JMSPublisherKey key : keySet) {\n                     if (key.matches(updateKey)) {"
  },
  {
    "sha": "ebf482ac35abb1ef398a5ecd32829cfbb3197dd2",
    "filename": "bindings/transport-spp/src/main/java/esa/mo/mal/transport/spp/SPPBaseTransport.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-spp/src/main/java/esa/mo/mal/transport/spp/SPPBaseTransport.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-spp/src/main/java/esa/mo/mal/transport/spp/SPPBaseTransport.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/transport-spp/src/main/java/esa/mo/mal/transport/spp/SPPBaseTransport.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -198,10 +198,9 @@ private int getNextSubId(long qualifier, int apid) {\n \n     @Override\n     public String getRoutingPart(String uriValue) {\n-        String endpointUriPart = uriValue;\n-        int iFirst = endpointUriPart.indexOf(protocolDelim) + 1;\n+        int iFirst = uriValue.indexOf(protocolDelim) + 1;\n \n-        return endpointUriPart.substring(iFirst);\n+        return uriValue.substring(iFirst);\n     }\n \n     @Override"
  },
  {
    "sha": "2701966b39b42b889348de1069a1de46f32b2edc",
    "filename": "bindings/transport-spp/src/main/java/esa/mo/mal/transport/spp/SPPURIRepresentationSimple.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-spp/src/main/java/esa/mo/mal/transport/spp/SPPURIRepresentationSimple.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-spp/src/main/java/esa/mo/mal/transport/spp/SPPURIRepresentationSimple.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/transport-spp/src/main/java/esa/mo/mal/transport/spp/SPPURIRepresentationSimple.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -40,7 +40,7 @@ public short getApid(URI uri) {\n         if (-1 == j) {\n             j = val.length();\n         }\n-        return Short.valueOf(val.substring(i, j));\n+        return Short.parseShort(val.substring(i, j));\n     }\n \n     @Override\n@@ -62,7 +62,7 @@ public int getQualifier(URI uri) {\n         if (-1 == j) {\n             j = val.length();\n         }\n-        return Integer.valueOf(val.substring(i, j));\n+        return Integer.parseInt(val.substring(i, j));\n     }\n \n     @Override\n@@ -80,7 +80,7 @@ public short getSubId(URI uri) {\n         int i = val.indexOf('/') + 1;\n         int j = val.indexOf('/', i) + 1;\n \n-        return Short.valueOf(val.substring(j, val.length()));\n+        return Short.parseShort(val.substring(j, val.length()));\n     }\n \n     @Override"
  },
  {
    "sha": "0c90d253fa95c5d2d9a74f1ff2142a5e8840e869",
    "filename": "bindings/transport-tcpip/src/main/java/esa/mo/mal/transport/tcpip/TCPIPTransport.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-tcpip/src/main/java/esa/mo/mal/transport/tcpip/TCPIPTransport.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-tcpip/src/main/java/esa/mo/mal/transport/tcpip/TCPIPTransport.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/transport-tcpip/src/main/java/esa/mo/mal/transport/tcpip/TCPIPTransport.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -527,11 +527,10 @@ public GENMessage createMessage(final TCPIPPacketInfoHolder packetInfo) throws M\n         System.arraycopy(packetData, decodedHeaderBytes, bodyPacketData, 0, bodySize);\n \n         // decode the body\n-        TCPIPMessage messageWithBody = new TCPIPMessage(wrapBodyParts,\n+\n+        return new TCPIPMessage(wrapBodyParts,\n                 (TCPIPMessageHeader) msg.getHeader(), qosProperties,\n                 bodyPacketData, getStreamFactory());\n-\n-        return messageWithBody;\n     }\n \n     /**"
  },
  {
    "sha": "bb9270b6012626aadfa5323e10cfc1875b2b6ca1",
    "filename": "bindings/transport-zmtp/src/main/java/esa/mo/mal/transport/zmtp/ZMTPTransport.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-zmtp/src/main/java/esa/mo/mal/transport/zmtp/ZMTPTransport.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-zmtp/src/main/java/esa/mo/mal/transport/zmtp/ZMTPTransport.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/transport-zmtp/src/main/java/esa/mo/mal/transport/zmtp/ZMTPTransport.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -356,8 +356,7 @@ public synchronized ZMTPChannelSource createMessageSender(\n             String mappedRemoteURI = uriMapping.getRemotePtpZmtpUri(remoteRootURI);\n             ZMQ.Socket socket = openSocket(getZmqContext(),\n                     ZMTP_COMMUNICATION_PATTERN_P2P, mappedRemoteURI, false);\n-            ZMTPChannelSource channelSource = new ZMTPChannelSource(socket);\n-            return channelSource;\n+            return new ZMTPChannelSource(socket);\n         } catch (IllegalArgumentException e) {\n             RLOGGER.log(Level.WARNING,\n                     \"Malformed parameters when creating sender to : {0}\", remoteRootURI);"
  },
  {
    "sha": "449128b6fc5329245d74f46c955a3590fe6789d5",
    "filename": "bindings/transport-zmtp/src/main/java/esa/mo/mal/transport/zmtp/ZMTPURIMapping.java",
    "status": "modified",
    "additions": 4,
    "deletions": 8,
    "changes": 12,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-zmtp/src/main/java/esa/mo/mal/transport/zmtp/ZMTPURIMapping.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/bindings/transport-zmtp/src/main/java/esa/mo/mal/transport/zmtp/ZMTPURIMapping.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/bindings/transport-zmtp/src/main/java/esa/mo/mal/transport/zmtp/ZMTPURIMapping.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -67,8 +67,7 @@ public String getLocalPtpZmtpUri(String MalUri) throws MALException {\n                 throw new MALException(\"Malformed URI (missing port): \" + MalUri);\n             }\n             // The URI that ZMTP binds to\n-            String localURI = \"tcp://*:\" + Integer.toString(uri.getPort());\n-            return localURI;\n+            return \"tcp://*:\" + Integer.toString(uri.getPort());\n         } catch (URISyntaxException e) {\n             throw new MALException(\"Malformed URI: \" + MalUri);\n         }\n@@ -92,8 +91,7 @@ public String getLocalMcastZmtpUri(String MalUri) throws MALException {\n                     throw new MALException(\"Malformed URI (missing port): \" + MalUri);\n                 }\n                 // The URI that ZMTP binds to\n-                String localURI = \"tcp://*:\" + Integer.toString(uri.getPort() + 1);\n-                return localURI;\n+                return \"tcp://*:\" + Integer.toString(uri.getPort() + 1);\n             } catch (URISyntaxException e) {\n                 throw new MALException(\"Malformed URI: \" + MalUri);\n             }\n@@ -114,8 +112,7 @@ public String getRemotePtpZmtpUri(String MalUri) throws MALException {\n                 throw new MALException(\"Malformed URI (missing port): \" + MalUri);\n             }\n             // The URI that ZMTP connects to\n-            String remoteURI = \"tcp://\" + uri.getHost() + \":\" + Integer.toString(uri.getPort());\n-            return remoteURI;\n+            return \"tcp://\" + uri.getHost() + \":\" + Integer.toString(uri.getPort());\n         } catch (URISyntaxException e) {\n             throw new MALException(\"Malformed URI: \" + MalUri);\n         }\n@@ -139,9 +136,8 @@ public String getRemoteMcastZmtpUri(String MalUri) throws MALException {\n                     throw new MALException(\"Malformed URI (missing port): \" + MalUri);\n                 }\n                 // The URI that ZMTP connects to\n-                String remoteURI = \"tcp://\" + uri.getHost() + \":\"\n+                return \"tcp://\" + uri.getHost() + \":\"\n                         + Integer.toString(uri.getPort() + 1);\n-                return remoteURI;\n             } catch (URISyntaxException e) {\n                 throw new MALException(\"Malformed URI: \" + MalUri);\n             }"
  },
  {
    "sha": "a99b0c341f203b048af3de51be65201f2f36b00b",
    "filename": "mal-impl/src/main/java/esa/mo/mal/impl/InteractionTimeout.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/mal-impl/src/main/java/esa/mo/mal/impl/InteractionTimeout.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/mal-impl/src/main/java/esa/mo/mal/impl/InteractionTimeout.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/mal-impl/src/main/java/esa/mo/mal/impl/InteractionTimeout.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -67,7 +67,7 @@ private void initialize() {\n \n             if (prop != null) {\n                 try {\n-                    timeout = Long.valueOf(prop);\n+                    timeout = Long.parseLong(prop);\n                     // \n                     if (timeout > 0) {\n                         enabled = true;"
  },
  {
    "sha": "14eb059bf16acea5af000404eff9e353a46223cc",
    "filename": "providers-consumers/basic-demo/src/main/java/esa/mo/mal/demo/provider/DemoProviderServiceImpl.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/providers-consumers/basic-demo/src/main/java/esa/mo/mal/demo/provider/DemoProviderServiceImpl.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/providers-consumers/basic-demo/src/main/java/esa/mo/mal/demo/provider/DemoProviderServiceImpl.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/providers-consumers/basic-demo/src/main/java/esa/mo/mal/demo/provider/DemoProviderServiceImpl.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -176,9 +176,9 @@ public void startServices(final String protocol) throws MALException, MALInterac\n             final FileOutputStream fos = new FileOutputStream(file);\n             final OutputStreamWriter osw = new OutputStreamWriter(fos);\n             final BufferedWriter wrt = new BufferedWriter(osw);\n-            wrt.append(\"uri=\" + demoServiceProvider.getURI());\n+            wrt.append(\"uri=\").append(String.valueOf(demoServiceProvider.getURI()));\n             wrt.newLine();\n-            wrt.append(\"broker=\" + demoServiceProvider.getBrokerURI());\n+            wrt.append(\"broker=\").append(String.valueOf(demoServiceProvider.getBrokerURI()));\n             wrt.newLine();\n             wrt.close();\n         } catch (IOException ex) {"
  },
  {
    "sha": "46cc8bf77e59f4dab77b4a5c45cf35a5e0ffc0c8",
    "filename": "providers-consumers/transport-bridge/src/main/java/esa/mo/mal/transport/bridge/Main.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/providers-consumers/transport-bridge/src/main/java/esa/mo/mal/transport/bridge/Main.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/providers-consumers/transport-bridge/src/main/java/esa/mo/mal/transport/bridge/Main.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/providers-consumers/transport-bridge/src/main/java/esa/mo/mal/transport/bridge/Main.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -114,9 +114,9 @@ protected static void storeURIs(String filename, URI uri) throws Exception {\n \n     protected static void storeURIs(String filename, String uri, String buri) throws Exception {\n         java.io.BufferedWriter wrt = new BufferedWriter(new java.io.FileWriter(new java.io.File(filename)));\n-        wrt.append(\"uri=\" + uri);\n+        wrt.append(\"uri=\").append(uri);\n         wrt.newLine();\n-        wrt.append(\"broker=\" + buri);\n+        wrt.append(\"broker=\").append(buri);\n         wrt.newLine();\n         wrt.close();\n     }"
  },
  {
    "sha": "c8fd590b53bdcfa09eb792d2018f5a563dec2687",
    "filename": "stub-generator/generator-docs/src/main/java/esa/mo/tools/stubgen/GeneratorDocument.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/stub-generator/generator-docs/src/main/java/esa/mo/tools/stubgen/GeneratorDocument.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/stub-generator/generator-docs/src/main/java/esa/mo/tools/stubgen/GeneratorDocument.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/stub-generator/generator-docs/src/main/java/esa/mo/tools/stubgen/GeneratorDocument.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -89,8 +89,7 @@ protected CompositeField createCompositeElementsDetails(TargetWriter file,\n                     fieldName, elementType.isList(), canBeNull, false, \n                     StdStrings.MAL, \"\", \"\", false, \"\", comment);\n         } else {\n-            String fqTypeName = typeName;\n-            ele = new CompositeField(fqTypeName, elementType, fieldName, \n+            ele = new CompositeField(typeName, elementType, fieldName,\n                     elementType.isList(), canBeNull, false, elementType.getArea(), \n                     \"\", elementType.getService(), false, \"\", comment);\n         }\n@@ -115,8 +114,8 @@ protected CompositeField createCompositeElementsDetails(TargetWriter file,\n         String svgNS = SVGDOMImplementation.SVG_NAMESPACE_URI;\n         Document document = impl.createDocument(svgNS, \"svg\", null);\n         Element root = document.getDocumentElement();\n-        rv[0] = Integer.valueOf(svg.getAttribute(\"width\"));\n-        rv[1] = Integer.valueOf(svg.getAttribute(\"height\"));\n+        rv[0] = Integer.parseInt(svg.getAttribute(\"width\"));\n+        rv[1] = Integer.parseInt(svg.getAttribute(\"height\"));\n         root.setAttributeNS(null, \"width\", svg.getAttribute(\"width\"));\n         root.setAttributeNS(null, \"height\", svg.getAttribute(\"height\"));\n         // Create a duplicate node and transfer ownership of the"
  },
  {
    "sha": "386900aecbd7525734d4de758c3a77041b509913",
    "filename": "stub-generator/generator-java/src/main/java/esa/mo/tools/stubgen/GeneratorJava.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/stub-generator/generator-java/src/main/java/esa/mo/tools/stubgen/GeneratorJava.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/stub-generator/generator-java/src/main/java/esa/mo/tools/stubgen/GeneratorJava.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/stub-generator/generator-java/src/main/java/esa/mo/tools/stubgen/GeneratorJava.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -94,8 +94,8 @@ public void init(String destinationFolderName,\n             Map<String, String> extraProperties) throws IOException {\n         super.init(destinationFolderName, generateStructures, generateCOM, packageBindings, extraProperties);\n \n-        setRequiresDefaultConstructors(Boolean.valueOf(extraProperties.get(\"java.requiresDefaultConstructors\")));\n-        setSupportFullyPolymorphicTypes(Boolean.valueOf(extraProperties.get(\"java.supportFullyPolymorphicTypes\")));\n+        setRequiresDefaultConstructors(Boolean.parseBoolean(extraProperties.get(\"java.requiresDefaultConstructors\")));\n+        setSupportFullyPolymorphicTypes(Boolean.parseBoolean(extraProperties.get(\"java.supportFullyPolymorphicTypes\")));\n \n         addAttributeType(StdStrings.MAL, StdStrings.BLOB, false, \"Blob\", \"\");\n         addAttributeType(StdStrings.MAL, StdStrings.BOOLEAN, true, \"Boolean\", \"Boolean.FALSE\");\n@@ -684,12 +684,12 @@ public void addClassOpenStatement(String className, boolean finalClass, boolean\n             if (abstractClass) {\n                 file.append(\"abstract \");\n             }\n-            file.append(\"class \" + className);\n+            file.append(\"class \").append(className);\n             if (null != extendsClass) {\n-                file.append(\" extends \" + extendsClass);\n+                file.append(\" extends \").append(extendsClass);\n             }\n             if (null != implementsInterface) {\n-                file.append(\" implements \" + implementsInterface);\n+                file.append(\" implements \").append(implementsInterface);\n             }\n             file.append(getLineSeparator());\n             file.append(addFileStatement(0, \"{\", false));\n@@ -918,7 +918,7 @@ public void addInterfaceOpenStatement(String interfaceName, String extendsInterf\n             file.append(\"public interface \");\n             file.append(interfaceName);\n             if (null != extendsInterface) {\n-                file.append(\" extends \" + extendsInterface);\n+                file.append(\" extends \").append(extendsInterface);\n             }\n             file.append(getLineSeparator());\n             file.append(addFileStatement(0, \"{\", false));"
  },
  {
    "sha": "e751a819353a31cb8e340ca019d9b1af2a76deb0",
    "filename": "support-libs/support-com/src/main/java/esa/mo/com/support/ActivityTrackingPublisher.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/support-libs/support-com/src/main/java/esa/mo/com/support/ActivityTrackingPublisher.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/support-libs/support-com/src/main/java/esa/mo/com/support/ActivityTrackingPublisher.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/support-libs/support-com/src/main/java/esa/mo/com/support/ActivityTrackingPublisher.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -166,7 +166,7 @@ public void publishAcceptanceEvent(final MALInteraction interaction,\n                         ActivityTrackingHelper._ACTIVITYTRACKING_SERVICE_NUMBER,\n                         COMHelper._COM_AREA_VERSION,\n                         0),\n-                new Long(instanceIdentifier++),\n+                (long) instanceIdentifier++,\n                 ComStructureHelper.generateSubKey(source.getType()));\n         BaseMalServer.LOGGER.log(Level.FINE, \"ActivityTracking:eKey = {0}\", ekey);\n \n@@ -314,7 +314,7 @@ public void publishExecutionEvent(final URI eventSourceURI, final boolean succes\n                         ActivityTrackingHelper._ACTIVITYTRACKING_SERVICE_NUMBER,\n                         COMHelper._COM_AREA_VERSION,\n                         0),\n-                new Long(instanceIdentifier++),\n+                (long) instanceIdentifier++,\n                 ComStructureHelper.generateSubKey(source.getType()));\n \n         BaseMalServer.LOGGER.log(Level.FINE,"
  },
  {
    "sha": "f54fe31bd23c28ff00bb7b4664a0c14f460e4285",
    "filename": "support-libs/support-common/src/main/java/esa/mo/common/support/DirectoryServiceWrapper.java",
    "status": "modified",
    "additions": 3,
    "deletions": 5,
    "changes": 8,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/support-libs/support-common/src/main/java/esa/mo/common/support/DirectoryServiceWrapper.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/support-libs/support-common/src/main/java/esa/mo/common/support/DirectoryServiceWrapper.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/support-libs/support-common/src/main/java/esa/mo/common/support/DirectoryServiceWrapper.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -156,7 +156,7 @@ public void withdrawProvider(Identifier providerName,\n         }\n \n         // To be updated correctly...\n-        directoryService.withdrawProvider(new Long(1));\n+        directoryService.withdrawProvider(1L);\n \n         /*\n         directoryService.withdrawProvider(createNodeDetailsList(providerName,\n@@ -258,17 +258,15 @@ public static PublishDetails createNodeDetailsList(Identifier providerName,\n          */\n         ProviderDetails providerDetails = new ProviderDetails();\n \n-        PublishDetails ndl = new PublishDetails(\n+        // ndl.add(nd);\n+        return new PublishDetails(\n                 providerName,\n                 domain,\n                 SessionType.LIVE,\n                 new Identifier(\"LIVE\"),\n                 network,\n                 providerDetails,\n                 null);\n-\n-        // ndl.add(nd);\n-        return ndl;\n     }\n \n }"
  },
  {
    "sha": "df9570b55bc712a7b8022f4d7d34297617139af7",
    "filename": "support-libs/support-mal/src/main/java/esa/mo/mal/support/StructureHelper.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/esa/mo-services-java/blob/7631c96f2c910875ca539ae99b365423ac80bcff/support-libs/support-mal/src/main/java/esa/mo/mal/support/StructureHelper.java",
    "raw_url": "https://github.com/esa/mo-services-java/raw/7631c96f2c910875ca539ae99b365423ac80bcff/support-libs/support-mal/src/main/java/esa/mo/mal/support/StructureHelper.java",
    "contents_url": "https://api.github.com/repos/esa/mo-services-java/contents/support-libs/support-mal/src/main/java/esa/mo/mal/support/StructureHelper.java?ref=7631c96f2c910875ca539ae99b365423ac80bcff",
    "patch": "@@ -184,13 +184,13 @@ public static void storeURIs(String filename, String propertyPrefix, URI service\n \n                 if ((null != serviceUri) && (null != serviceUri.getValue())) {\n                     wrt.append(propertyPrefix);\n-                    wrt.append(\"uri=\" + serviceUri);\n+                    wrt.append(\"uri=\").append(String.valueOf(serviceUri));\n                     wrt.newLine();\n                 }\n \n                 if ((null != brokerUri) && (null != brokerUri.getValue())) {\n                     wrt.append(propertyPrefix);\n-                    wrt.append(\"broker=\" + brokerUri);\n+                    wrt.append(\"broker=\").append(String.valueOf(brokerUri));\n                     wrt.newLine();\n                 }\n "
  }
]
