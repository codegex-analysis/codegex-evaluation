[
  {
    "sha": "c879e14362a3bccf0cb21df1692a3b03f9879708",
    "filename": "homework/pom.xml",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/pom.xml",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/pom.xml",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/pom.xml?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -20,6 +20,18 @@\n         <artifactId>okhttp</artifactId>\n         <version>4.9.0</version>\n     </dependency>\n+    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->\n+    <dependency>\n+        <groupId>com.fasterxml.jackson.core</groupId>\n+        <artifactId>jackson-databind</artifactId>\n+        <version>2.11.2</version>\n+    </dependency>\n+    <!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->\n+    <dependency>\n+        <groupId>org.xerial</groupId>\n+        <artifactId>sqlite-jdbc</artifactId>\n+        <version>3.34.0</version>\n+    </dependency>\n </dependencies>\n \n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "99c3ccb52b8724208414759a3d88321f32118732",
    "filename": "homework/src/main/java/lesson8/AccuWeatherProvider.java",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/AccuWeatherProvider.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/AccuWeatherProvider.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/AccuWeatherProvider.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,124 @@\n+package lesson8;\n+\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import okhttp3.HttpUrl;\n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+\n+\n+public class AccuWeatherProvider implements WeatherProvider {\n+\n+\n+    public static final String BASE_HOST = \"dataservice.accuweather.com\";\n+    public static final String FORECASTS = \"forecasts\";\n+    public static final String API_VERSION = \"v1\";\n+    public static final String PERIOD = \"daily\";\n+    public static final String TOP_CITIES = \"topcities\";\n+    public static final String CITIES_NUMBER = \"150\";\n+    public static final String LOCATIONS = \"locations\";\n+    public static final String API_KEY = ApplicationGlobalState.getInstance().getAPIKey();\n+    private static final OkHttpClient client = new OkHttpClient();\n+\n+    //узнаем погоду в указанном городе за указанный период\n+    public static void getWeather(Periods periods, String city) throws IOException {\n+\n+        //код города\n+        String cityKey = setGlobalCity(city);\n+        System.out.println(\"Код города: \" + cityKey);\n+        if (periods.equals(Periods.IN5DAYS)) {\n+            HttpUrl url = new HttpUrl.Builder()\n+                    .scheme(\"http\")\n+                    .host(BASE_HOST)\n+                    .addPathSegment(FORECASTS)\n+                    .addPathSegment(API_VERSION)\n+                    .addPathSegment(PERIOD)\n+                    .addPathSegment(\"5day\")\n+                    .addPathSegment(cityKey)\n+                    .addQueryParameter(\"apikey\", API_KEY)\n+                    .addQueryParameter(\"language\", \"ru-ru\") //русский язык\n+                    .addQueryParameter(\"metric\", \"true\") //градусы Цельсия\n+                    .build();\n+\n+            Request request = new Request.Builder()\n+               .addHeader(\"accept\", \"application/json\")\n+                   .url(url)\n+                    .build();\n+            String jsonResponse = client.newCall(request).execute().body().string();\n+            //выводим в файл результат прогноза\n+            File file = new File(\"./forecast5.json\");\n+            if (!file.exists()) {\n+               file.createNewFile();\n+            }\n+            try (PrintWriter out = new PrintWriter(file)) {\n+              out.print(jsonResponse);\n+                System.out.println(\"Погода за 5 дней записана в файл \" + file.getName());\n+            }\n+        }\n+\n+        //десериализация и печать полученных результатов в консоль\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n+        WeatherResponse weatherResponse = objectMapper.readValue(new File(\"forecast5.json\"), WeatherResponse.class);\n+        DatabaseRepositorySQLite.writeData(weatherResponse,city);\n+        DatabaseRepositorySQLite.printData(city);\n+        }\n+\n+    //узнаем id города\n+    public static String setGlobalCity(String mycity) throws IOException {\n+        HttpUrl url = new HttpUrl.Builder()\n+                .scheme(\"http\")\n+                .host(BASE_HOST)\n+                .addPathSegment(LOCATIONS)\n+                .addPathSegment(API_VERSION)\n+                .addPathSegment(TOP_CITIES)\n+                .addPathSegment(CITIES_NUMBER)\n+                .addQueryParameter(\"apikey\", API_KEY)\n+                .addQueryParameter(\"language\", \"ru-ru\")\n+                .build();\n+\n+        Request request = new Request.Builder()\n+        .addHeader(\"accept\", \"application/json\")\n+              .url(url)\n+              .build();\n+        String jsonResponse = client.newCall(request).execute().body().string();\n+\n+       File file = new File(\"./top150.json\");\n+        if (!file.exists()) {\n+         file.createNewFile();\n+       }\n+       try (PrintWriter out = new PrintWriter(file)) {\n+           out.print(jsonResponse);\n+            //из этого файла найдем id города\n+         System.out.println(\"Информация по 150 городам записана в файл \" + file.getName());\n+        }\n+        //ищем в файле код города\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        System.out.println(\"Введенный город: \" + mycity);\n+        String cityKey = \" \";\n+        String cityName = \" \";\n+        int i = 0;\n+        try {\n+            while (!(cityName.equals(mycity))) {\n+                //код города\n+                JsonNode key1 = objectMapper.readTree(new File(\"top150.json\"))\n+                        .get(i).at(\"/Key\");\n+                cityKey = key1.asText();\n+                //имя города\n+                JsonNode key2 = objectMapper.readTree(new File(\"top150.json\"))\n+                        .get(i).at(\"/EnglishName\");\n+                cityName = key2.asText();\n+                i = i + 1;\n+            }\n+        } catch (NullPointerException e) {\n+            System.out.println(\"Город \"+mycity+ \" не найден\");\n+            System.exit(-1);\n+        }\n+        return cityKey;\n+    }\n+}"
  },
  {
    "sha": "71d03b65b698ca0c21b40b072e51d2064b0d65ba",
    "filename": "homework/src/main/java/lesson8/ApplicationGlobalState.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/ApplicationGlobalState.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/ApplicationGlobalState.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/ApplicationGlobalState.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,19 @@\n+package lesson8;\n+//класс хранит все переменные\n+public class ApplicationGlobalState {\n+    private static ApplicationGlobalState INSTANCE;\n+    private String selectedCity=null;\n+    private final String API_KEY=\"0E2atmhXpOan3HqdvRFaAkTx0ceEJITT\";\n+    //private final String API_KEY=\"iEYEv0tyBZG0SySqCRYuiAhHjUS5pNJb\";\n+    public static ApplicationGlobalState getInstance(){\n+       if(INSTANCE ==null) {\n+           INSTANCE =new ApplicationGlobalState();\n+       }\n+       return INSTANCE;\n+    }\n+\n+public String getAPIKey()\n+{\n+    return API_KEY;\n+}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "58fb2c161cdf9374265eeb63aa13ea67adfbcd7c",
    "filename": "homework/src/main/java/lesson8/Controller.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Controller.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Controller.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/Controller.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,30 @@\n+package lesson8;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static lesson8.Periods.IN5DAYS;\n+\n+public class Controller {\n+    WeatherProvider weatherProvider = new AccuWeatherProvider();\n+    Map<Integer, Functionality> variantResult = new HashMap();\n+\n+    public Controller() {\n+        variantResult.put(1, Functionality.GET_WEATHER_IN_NEXT_5_DAYS);\n+    }\n+\n+    public void onUserInput(String input) throws IOException {\n+        int command = Integer.parseInt(input);\n+        if (!variantResult.containsKey(command)) {\n+            throw new IOException(\"There is no command for command-key \" + command);\n+        }\n+        switch (variantResult.get(command)) {\n+            case GET_WEATHER_IN_NEXT_5_DAYS:\n+                WeatherProvider.getWeather(IN5DAYS);\n+                break;\n+        }\n+\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5d2cb4f6611f9c828ca91ac16215461de75491f4",
    "filename": "homework/src/main/java/lesson8/DailyForecasts.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/DailyForecasts.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/DailyForecasts.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/DailyForecasts.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,20 @@\n+package lesson8;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.io.Serializable;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+    public class DailyForecasts  implements Serializable {\n+    @JsonProperty(value = \"Date\")\n+    public String date;\n+    @JsonProperty(value = \"Temperature\")\n+    public Temperature temperature;\n+    @JsonProperty(value = \"Day\")\n+    public Day day;\n+    @Override\n+    public String toString() {\n+        return \"Прогноз на \"+date+\"\\r\\n\";\n+    }\n+}"
  },
  {
    "sha": "dabf113b5a08451c2ea337c85bc7ff9b811d44e0",
    "filename": "homework/src/main/java/lesson8/DatabaseRepositorySQLite.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/DatabaseRepositorySQLite.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/DatabaseRepositorySQLite.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/DatabaseRepositorySQLite.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,61 @@\n+package lesson8;\n+//Задание 8 Синеокая Марина\n+import java.sql.*;\n+\n+public class DatabaseRepositorySQLite {\n+    public static Connection conn;\n+    public static Statement statmt;\n+    public static ResultSet resSet;\n+//пишем данные в базу\n+    public static void writeData(WeatherResponse weatherResponse, String city) {\n+        try {\n+            conn = null;\n+            Class.forName(\"org.sqlite.JDBC\");\n+            conn = DriverManager.getConnection(\"jdbc:sqlite:lesson8.db\");\n+            System.out.println(\"База Подключена!\");\n+            statmt = conn.createStatement();\n+        } catch (ClassNotFoundException | SQLException e) {\n+            e.printStackTrace();\n+        }\n+\n+        try {\n+            statmt.execute(\"CREATE TABLE if not exists 'weather' ('id' INTEGER PRIMARY KEY AUTOINCREMENT, 'city' text, 'localDate' text, 'weatherText' text, 'temperature' real);\");\n+        } catch (SQLException throwables) {\n+            throwables.printStackTrace();\n+        }\n+        System.out.println(\"Таблица создана или уже существует.\");\n+        for (int i = 0; i < weatherResponse.dailyForecasts.size(); i++) {\n+            String localDate = weatherResponse.dailyForecasts.get(i).date.toString();\n+            String weatherText = weatherResponse.dailyForecasts.get(i).day.value.toString();\n+            Double temperature = weatherResponse.dailyForecasts.get(i).temperature.minimum.value;\n+\n+            try {\n+                statmt.execute(\"INSERT INTO 'weather' ('city', 'localDate', 'weatherText', 'temperature') VALUES ('\" + city + \"', '\" + localDate + \"', '\" + weatherText + \"', '\" + temperature + \"');\");\n+            } catch (SQLException throwables) {\n+                throwables.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    //выводим данные из базы в консоль\n+    public static void printData(String city) {\n+        try {\n+            resSet = statmt.executeQuery(\"SELECT * FROM weather\");\n+            while(resSet.next()) {\n+                String city2 = resSet.getString(\"city\");\n+                String localDate2 = resSet.getString(\"localDate\");\n+                String weatherText2 = resSet.getString(\"weatherText\");\n+                String temperature2 = resSet.getString(\"temperature\");\n+                System.out.println(\"В городе \" + city2 + \" на дату \" + localDate2 + \" ожидается \" + weatherText2 + \", температура: \" + temperature2 + \"C\");\n+            }\n+            statmt.executeUpdate(\"DROP TABLE weather\"); //удаляем базу\n+        } catch (SQLException e) {\n+            e.printStackTrace();\n+        }\n+        }\n+\n+    }\n+\n+\n+\n+"
  },
  {
    "sha": "0e5cbced657a4d416051faa4d502a4b1fcd06d09",
    "filename": "homework/src/main/java/lesson8/Day.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Day.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Day.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/Day.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,12 @@\n+package lesson8;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.io.Serializable;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class Day implements Serializable {\n+    @JsonProperty(value = \"IconPhrase\")\n+    public String value;\n+}"
  },
  {
    "sha": "e89616d355e3445022f7b11df82d24f4c09f8753",
    "filename": "homework/src/main/java/lesson8/Functionality.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Functionality.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Functionality.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/Functionality.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,6 @@\n+package lesson8;\n+\n+public enum Functionality {\n+    GET_CURRENT_WEATHER,\n+    GET_WEATHER_IN_NEXT_5_DAYS\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "81b5d7d1c4593f3a09b27235fcf2d26730315896",
    "filename": "homework/src/main/java/lesson8/Headline.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Headline.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Headline.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/Headline.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,9 @@\n+package lesson8;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import java.io.Serializable;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class Headline implements Serializable {\n+}"
  },
  {
    "sha": "00520a5aeb38978a137663a28980157b1c501913",
    "filename": "homework/src/main/java/lesson8/MainApp.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/MainApp.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/MainApp.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/MainApp.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,9 @@\n+package lesson8;\n+\n+public class MainApp {\n+\n+    public static void main(String[] args) {\n+        UserInterface userInterface=new UserInterface();\n+        userInterface.runApplication();\n+    }\n+}"
  },
  {
    "sha": "e9b76b51e9d45775dad6234d7428a6e795bfa3cc",
    "filename": "homework/src/main/java/lesson8/Minimum.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Minimum.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Minimum.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/Minimum.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,16 @@\n+package lesson8;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.io.Serializable;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class Minimum implements Serializable {\n+    @JsonProperty(value = \"Value\")\n+    public Double value;\n+    @JsonProperty(value = \"Unit\")\n+    public String unit;\n+    @Override\n+    public String toString() {return \"Минимальная температура: \"+value+\" \" +unit;}\n+}"
  },
  {
    "sha": "c60bd6dd2a9951d12c3b2c4b4b4d930e55d6dcb7",
    "filename": "homework/src/main/java/lesson8/Periods.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Periods.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Periods.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/Periods.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,6 @@\n+package lesson8;\n+\n+public enum Periods {\n+    NOW,\n+    IN5DAYS\n+}"
  },
  {
    "sha": "321d009e9061f3465c68844ed50441aa6a05f607",
    "filename": "homework/src/main/java/lesson8/Temperature.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Temperature.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/Temperature.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/Temperature.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,13 @@\n+package lesson8;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.io.Serializable;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+ public class Temperature implements Serializable {\n+    @JsonProperty(value = \"Minimum\")\n+    public Minimum minimum;\n+}\n+"
  },
  {
    "sha": "8f868e4f30d3cdd016b8053da235fdd0ef038f88",
    "filename": "homework/src/main/java/lesson8/UserInterface.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/UserInterface.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/UserInterface.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/UserInterface.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,32 @@\n+package lesson8;\n+\n+import java.io.IOException;\n+import java.util.Scanner;\n+\n+public class UserInterface {\n+    private final Controller controller=new Controller();\n+\n+    public void runApplication(){\n+        Scanner scanner=new Scanner(System.in);\n+        while (true) {\n+        System.out.println(\"Введите название города на английском языке\");\n+        String city= scanner.nextLine();\n+        //получаем id города\n+            //try { AccuWeatherProvider.setGlobalCity(city);}\n+        //catch (IOException e) {\n+          //  e.printStackTrace();}\n+        System.out.println(\"Введите ответ: 1 - Получить погоду на следующие 5 дней, \"+\"0 - завершить работу\");\n+        String result=scanner.nextLine();\n+        Integer result2 = Integer.valueOf(result);\n+            if(result2==1) {\n+                try {\n+                    AccuWeatherProvider.getWeather(Periods.IN5DAYS, city);\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                }break;\n+            }\n+        else {break;}\n+        }\n+        }\n+    }\n+"
  },
  {
    "sha": "a17be0a264eaff7b8264ddb93f8955a735cc8453",
    "filename": "homework/src/main/java/lesson8/WeatherProvider.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/WeatherProvider.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/WeatherProvider.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/WeatherProvider.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,10 @@\n+package lesson8;\n+\n+import java.io.IOException;\n+\n+public interface WeatherProvider {\n+\n+        public static void getWeather(Periods periods) throws IOException {\n+\n+          }\n+    }"
  },
  {
    "sha": "e4d6ebca13f2db3ac8f0694f966041aa63ed7417",
    "filename": "homework/src/main/java/lesson8/WeatherResponse.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/Sineokaya/JavaCore/blob/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/WeatherResponse.java",
    "raw_url": "https://github.com/Sineokaya/JavaCore/raw/256f0421b2b5da6196567064b689c65c69413593/homework/src/main/java/lesson8/WeatherResponse.java",
    "contents_url": "https://api.github.com/repos/Sineokaya/JavaCore/contents/homework/src/main/java/lesson8/WeatherResponse.java?ref=256f0421b2b5da6196567064b689c65c69413593",
    "patch": "@@ -0,0 +1,17 @@\n+package lesson8;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+    public class WeatherResponse implements Serializable {\n+    @JsonProperty(value = \"Headline\")\n+    public Headline headline;\n+    @JsonProperty(value = \"DailyForecasts\")\n+    public List<DailyForecasts> dailyForecasts;\n+    @Override\n+    public String toString() {return dailyForecasts.toString()+\"\\r\\n\";}\n+}\n\\ No newline at end of file"
  }
]
