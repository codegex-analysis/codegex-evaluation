[
  {
    "sha": "864df4a3ebf57c355d9c77f1e4ae7753f17d60fd",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/.gitignore",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/.gitignore",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/.gitignore?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -227,3 +227,4 @@ buildNumber.properties\n \n # macOS\n .DS_Store\n+**/.vscode/"
  },
  {
    "sha": "52cce81bdd27365bcb0d3299c21008b4ff31fbec",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/README.md",
    "status": "modified",
    "additions": 18,
    "deletions": 1,
    "changes": 19,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/README.md",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/README.md",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/README.md?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -8,6 +8,7 @@ An example of a Drools Spring Boot baseline app, demonstrating:\n - Camel REST and Camel based routing\n - KSession Management, Drools Execution via Agenda Groups etc..\n - AgendaGroupListener & WorkingMemoryListener\n+- Rules Audit persisted in DB\n - Swagger UI\n - RHOAR managed Spring Boot instance\n - Various useful Utils\n@@ -27,8 +28,24 @@ RESPONSE { \"rulesFired\": 1, \"message\": \" Hello World \" }\n \n REQUEST curl --location --request GET 'http://localhost:8090/api/demo/rules/goodbye/{name}'\n RESPONSE { \"rulesFired\": 1, \"message\": \" Goodbye Paulo \" }\n-```\n \n+REQUEST curl -X POST \"http://localhost:8090/api/demo/rules/mortgage\" -H  \"accept: application/json\" -H  \"Content-Type: application/json\" -d \"{  \\\"applicant\\\": {    \\\"age\\\": 17,    \\\"applicationDate\\\": \\\"2021-03-17T15:56:24.149Z\\\",    \\\"approved\\\": false,    \\\"creditRating\\\": \\\"OK\\\",    \\\"name\\\": \\\"Test\\\"  },  \\\"incomeSource\\\": {    \\\"amount\\\": 0,    \\\"type\\\": \\\"string\\\"  },  \\\"loanApplication\\\": {    \\\"amount\\\": 0,    \\\"approved\\\": true,    \\\"approvedRate\\\": 0,    \\\"deposit\\\": 0,    \\\"explanation\\\": \\\"string\\\",    \\\"insuranceCost\\\": 0,    \\\"lengthYears\\\": 0  }}\"\n+\n+RESPONSE: \n+{\n+  \"Applicant\": {\n+    \"age\": 17,\n+    \"applicationDate\": \"2021-03-17T15:56:24.149+0000\",\n+    \"approved\": true,\n+    \"creditRating\": \"OK\",\n+    \"name\": \"Test\"\n+  },\n+  \"IncomeSource\": {\n+    \"amount\": 0,\n+    \"type\": \"string\"\n+  }\n+}\n+```\n \n #### Useful Links: \n "
  },
  {
    "sha": "cc417fbd242188f517711f8e7d1eeb68f0957d31",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/pom.xml",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/pom.xml",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/pom.xml",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/pom.xml?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -157,6 +157,11 @@\n             <groupId>org.drools</groupId>\n             <artifactId>drools-workbench-models-guided-dtable</artifactId>\n         </dependency>\n+        <!-- DMN -->\n+        <dependency>\n+            <groupId>org.kie</groupId>\n+            <artifactId>kie-dmn-core</artifactId>\n+        </dependency>        \n \n         <!-- KIE -->\n         <dependency>\n@@ -173,7 +178,6 @@\n <!--            <version>7.41.0.Final</version>-->\n         </dependency>\n \n-\n         <!-- TEST -->\n         <dependency>\n             <groupId>org.apache.camel</groupId>\n@@ -204,7 +208,12 @@\n             <scope>test</scope>\n         </dependency>\n \n-\n+        <!-- External KJAs -->\n+        <dependency>\n+            <groupId>org.redhat.services</groupId>\n+            <artifactId>mortgages</artifactId>\n+            <version>1.0.0-SNAPSHOT</version>\n+        </dependency>\n     </dependencies>\n \n     <build>"
  },
  {
    "sha": "1857f2d189d349f077cc385700cb4af3646fc0af",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/api/ServiceRoutingAPI.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/api/ServiceRoutingAPI.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/api/ServiceRoutingAPI.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/api/ServiceRoutingAPI.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -3,6 +3,8 @@\n import org.apache.camel.builder.RouteBuilder;\n import org.apache.camel.model.rest.RestBindingMode;\n import org.apache.camel.model.rest.RestParamType;\n+\n+import org.redhat.services.model.MortgageRequest;\n import org.redhat.services.routing.processor.RequestInterceptor;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Value;\n@@ -13,6 +15,8 @@\n \n import static org.redhat.services.util.RoutingConstants.*;\n \n+import java.util.Map;\n+\n @Component\n public class ServiceRoutingAPI extends RouteBuilder {\n \n@@ -60,6 +64,15 @@ public void configure() throws Exception {\n             .route().routeId(ROUTE_ID.DEMO_API_ROUTE_GOODBYE)\n         \t.to(CORE.GOODBYE_RULES);\n \n+        // Dedicated Mortgages API Endpoint\n+        rest().post(API.DEMO_RULES_MORTGAGE)\n+            .consumes( MediaType.APPLICATION_JSON )\n+            .type(MortgageRequest.class)\n+            .produces( MediaType.APPLICATION_JSON )\n+            .outType(Map.class)\n+            .route().routeId(ROUTE_ID.DEMO_API_ROUTE_MORTGAGE)\n+            .to(CORE.MORTGAGE_RULES);\n+\n         rest().get(API.AUDIT_LOG_BY_REFERENCE + \"/{reference}\")\n         \t.produces( MediaType.APPLICATION_JSON )\n             .param()"
  },
  {
    "sha": "681f4b6d52942348dbc489c1939a982c23447241",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/MortgageRequest.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/MortgageRequest.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/MortgageRequest.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/MortgageRequest.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -0,0 +1,28 @@\n+package org.redhat.services.model;\n+\n+import java.io.Serializable;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import lombok.ToString;\n+\n+import mortgages.mortgages.Applicant;\n+import mortgages.mortgages.Bankruptcy;\n+import mortgages.mortgages.IncomeSource;\n+import mortgages.mortgages.LoanApplication;\n+\n+@Getter\n+@Setter\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@ToString\n+public class MortgageRequest implements Serializable {\n+    \n+    private static final long serialVersionUID = 1L;\n+    private Applicant applicant;\n+    private IncomeSource incomeSource;\n+    private LoanApplication loanApplication;\n+    private Bankruptcy bankruptcy;\n+}"
  },
  {
    "sha": "473bf94ab93adb13d59aed47312b3dfb224ace56",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/RuleResponse.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/RuleResponse.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/RuleResponse.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/RuleResponse.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -11,6 +11,7 @@\n @ToString\n public class RuleResponse implements Serializable {\n \n+    private static final long serialVersionUID = 1L;\n     private int rulesFired;\n     private String executionReference;\n     private Object payload;"
  },
  {
    "sha": "d699becc93616656e3b61d131b2f5cd5d58aebda",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/entity/ExecutionLog.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/entity/ExecutionLog.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/entity/ExecutionLog.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/model/entity/ExecutionLog.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -41,7 +41,7 @@\n     @Column(name = \"RULE_EXECUTION_DURATION_MS\")\n     private long rulesExecutionDuration;\n \n-    @Column(name = \"PAYLOAD\")\n+    @Column(name = \"PAYLOAD\", columnDefinition = \"CLOB\")\n     private String payload;\n \n     @Column(name = \"AGENDA_GROUP\")"
  },
  {
    "sha": "7cb8e30a62b32ccc938f116cce5aaee9c9af3a5a",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/routing/Routes.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/routing/Routes.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/routing/Routes.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/routing/Routes.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -69,6 +69,11 @@ public void configure() throws Exception {\n             .log( LoggingLevel.INFO, \"Invoking GoodbyeWorld Rules Route\" )\n             .bean( ruleExecutor, \"executeGoodbyeRules( ${header.name} )\" );\n \n+        // Demo Mortgage Base Rules Impl\n+        from( CORE.MORTGAGE_RULES ).routeId(ROUTE_ID.DEMO_ROUTE_MORTGAGE)\n+            .log( LoggingLevel.INFO, \"Invoking Mortgages Rules Route\" )\n+            .log( LoggingLevel.INFO, \"Request body: ${body}\" )\n+            .bean( ruleExecutor, \"executeMortgageRules( ${body} )\" );\n \n         /**********************************/\n         /**  Audit Routes  **/"
  },
  {
    "sha": "32e8a758cab363f6375e042bd2bf6c6192593bf3",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/api/RuleExecutor.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/api/RuleExecutor.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/api/RuleExecutor.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/api/RuleExecutor.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -1,5 +1,8 @@\n package org.redhat.services.rules.api;\n \n+import java.util.Map;\n+\n+import org.redhat.services.model.MortgageRequest;\n import org.redhat.services.model.RuleResponse;\n \n public interface RuleExecutor {\n@@ -8,4 +11,6 @@\n \n     public RuleResponse executeGoodbyeRules(String name);\n \n+    public Map<String, Object> executeMortgageRules(MortgageRequest request);\n+\n }"
  },
  {
    "sha": "e8525eb9213bde2283bb1cf7527a8cc70a0bab1a",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/impl/RuleExecutorImpl.java",
    "status": "modified",
    "additions": 36,
    "deletions": 4,
    "changes": 40,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/impl/RuleExecutorImpl.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/impl/RuleExecutorImpl.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/impl/RuleExecutorImpl.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -3,21 +3,23 @@\n import lombok.extern.slf4j.Slf4j;\n import org.kie.api.runtime.KieContainer;\n import org.redhat.services.config.KJARRepositoryConfig;\n+import org.redhat.services.model.MortgageRequest;\n import org.redhat.services.model.RuleResponse;\n import org.redhat.services.rules.api.RuleExecutor;\n import org.redhat.services.rules.util.KieQueryUtils;\n import org.redhat.services.rules.util.KieSessionUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.stereotype.Component;\n \n import java.util.AbstractMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.UUID;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.stream.Collectors;\n \n-import static org.redhat.services.config.KJARRepositoryConfig.demoContainerId;\n import static org.redhat.services.util.RoutingConstants.AGENDA_GROUPS;\n+import static org.redhat.services.util.RoutingConstants.CONTAINER_ID;\n \n @Slf4j\n @Component\n@@ -47,7 +49,7 @@ public RuleResponse executeHelloWorldRules() {\n         .andThen( kSession -> sessionUtils.fireAgendaGroupRules.apply( kSession, AGENDA_GROUPS.DEMO_HELLO )) // Fire Rules\n         .andThen( kSession -> queryUtils.getRuleResponse.apply( kSession, atomicReferenceRuleResponse ))\n         .andThen( kSession -> sessionUtils.tearDown.apply(kSession))\n-        .apply(  kjarRepository.getKieContainer(demoContainerId) );\n+        .apply(  kjarRepository.getKieContainer(CONTAINER_ID.DEMO) );\n         // @formatter:on\n \n         RuleResponse response = atomicReferenceRuleResponse.get().get(0);\n@@ -69,14 +71,44 @@ public RuleResponse executeGoodbyeRules(String name) {\n         .andThen( kSession -> sessionUtils.fireAgendaGroupRules.apply( kSession, AGENDA_GROUPS.DEMO_GOODBYE )) // Fire Rules\n         .andThen( kSession -> queryUtils.getRuleResponse.apply( kSession, atomicReferenceRuleResponse ))\n         .andThen( kSession -> sessionUtils.tearDown.apply(kSession))\n-        .apply(  kjarRepository.getKieContainer(demoContainerId) );\n+        .apply(  kjarRepository.getKieContainer(CONTAINER_ID.DEMO) );\n         // @formatter:on\n \n         RuleResponse response = atomicReferenceRuleResponse.get().get(0);\n         log.info(\"RuleResponse Obtained: {}\", response);\n         return response;\n     }\n \n+    @Override\n+    public Map<String, Object> executeMortgageRules(MortgageRequest request) {\n+\n+        log.debug(\"Executing executeMortgageRules \");\n+\n+        Object facts[] = {\n+            request.getApplicant(), \n+            request.getIncomeSource(), \n+            request.getLoanApplication(), \n+            request.getBankruptcy()};\n+        AtomicReference<List<Object>> atomicReferenceFacts = new AtomicReference<>();\n+\n+        //@formatter:off\n+        sessionUtils.createNewKieSession\n+        .andThen( kSession -> sessionUtils.insertFacts.apply(kSession, facts) ) // insert facts into session\n+        .andThen( kSession -> sessionUtils.fireAllRules.apply( kSession )) // Fire Rules\n+        .andThen( kSession -> queryUtils.getAllFacts.apply( kSession, atomicReferenceFacts ))\n+        .andThen( kSession -> sessionUtils.tearDown.apply(kSession))\n+        .apply(  kjarRepository.getKieContainer(CONTAINER_ID.MORTGAGES) );\n+        // @formatter:on\n+\n+        // RuleResponse response = atomicReferenceRuleResponse.get().get(0);\n+        log.info(\"Facts Obtained: {}\", atomicReferenceFacts.get());\n+        Map<String, Object> returnedFacts =  atomicReferenceFacts.get().stream().collect(\n+            Collectors.toMap(\n+                fact -> fact.getClass().getSimpleName(), \n+                fact -> fact));\n+        return returnedFacts;\n+    }    \n+\n     public String executionReference(){\n         return UUID.randomUUID().toString();\n     }"
  },
  {
    "sha": "790dfc1f931ee389baaf1f171eba9484598ddeba",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/util/KieQueryUtils.java",
    "status": "modified",
    "additions": 19,
    "deletions": 11,
    "changes": 30,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/util/KieQueryUtils.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/util/KieQueryUtils.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/util/KieQueryUtils.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -2,11 +2,11 @@\n \n import lombok.extern.slf4j.Slf4j;\n import org.kie.api.runtime.KieSession;\n-import org.kie.api.runtime.ObjectFilter;\n import org.redhat.services.model.RuleResponse;\n import org.springframework.stereotype.Component;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n import java.util.concurrent.atomic.AtomicReference;\n@@ -20,16 +20,7 @@\n     public BiFunction<KieSession, AtomicReference<List<RuleResponse>>, KieSession> getRuleResponse = (kieSession, ruleResponses) -> {\n \n         log.info(\"Obtaining RuleResponse results from KieSession\");\n-        Collection<Object> result = (Collection<Object>) kieSession.getObjects(new ObjectFilter() {\n-\n-            @Override\n-            public boolean accept(Object obj) {\n-                if (obj instanceof RuleResponse) {\n-                    return true;\n-                }\n-                return false;\n-            }\n-        });\n+        Collection<Object> result = (Collection<Object>) kieSession.getObjects(obj -> obj instanceof RuleResponse);\n \n         log.info(\"Collection Rule Result : {}\", result);\n \n@@ -44,4 +35,21 @@ public boolean accept(Object obj) {\n \n         return kieSession;\n     };\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BiFunction<KieSession, AtomicReference<List<Object>>, KieSession> getAllFacts = (kieSession, facts) -> {\n+\n+        log.info(\"Obtaining all facts from KieSession\");\n+        Collection<Object> result = (Collection<Object>) kieSession.getObjects();\n+\n+        log.info(\"Facts Collection : {}\", result);\n+\n+        if (!result.isEmpty()) {\n+            log.debug(\"{} Facts obtained from KieSession\", result.size());\n+            facts.set(Arrays.asList(result.toArray()));\n+        }\n+\n+        return kieSession;\n+    };\n+\n }"
  },
  {
    "sha": "378436a8d0ebd95f4c38c218ddd59518f34f2358",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/util/KieSessionUtils.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/util/KieSessionUtils.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/util/KieSessionUtils.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/rules/util/KieSessionUtils.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -3,8 +3,10 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import lombok.extern.slf4j.Slf4j;\n import org.apache.camel.ProducerTemplate;\n+import org.kie.api.KieServices;\n import org.kie.api.runtime.KieContainer;\n import org.kie.api.runtime.KieSession;\n+import org.kie.api.runtime.KieSessionConfiguration;\n import org.kie.api.runtime.rule.AgendaFilter;\n import org.kie.api.runtime.rule.FactHandle;\n import org.kie.api.runtime.rule.Match;\n@@ -23,6 +25,7 @@\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n+import java.util.Objects;\n import java.util.Map.Entry;\n import java.util.function.BiFunction;\n import java.util.function.Function;"
  },
  {
    "sha": "caf5ac62a979d2c1962ce452dc72debf9b300403",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/api/AuditService.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/api/AuditService.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/api/AuditService.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/api/AuditService.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -2,8 +2,6 @@\n \n import org.redhat.services.model.entity.ExecutionLog;\n \n-import java.util.List;\n-\n public interface AuditService {\n \n     void persist(ExecutionLog executionLog);"
  },
  {
    "sha": "2c8d346f4c9d7ec4e9d310ec9148c6d9df9fcd9f",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/impl/AuditServiceImpl.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/impl/AuditServiceImpl.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/impl/AuditServiceImpl.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/impl/AuditServiceImpl.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -8,8 +8,6 @@\n import org.springframework.stereotype.Service;\n import org.springframework.transaction.annotation.Transactional;\n \n-import java.util.List;\n-\n @Slf4j\n @Transactional\n @Service"
  },
  {
    "sha": "ad0afe5475d7c8998d217732c27a9ab25a3fbb8f",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/impl/ExecutorServiceImpl.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/impl/ExecutorServiceImpl.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/impl/ExecutorServiceImpl.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/service/impl/ExecutorServiceImpl.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -7,7 +7,6 @@\n import org.redhat.services.rules.api.RuleExecutor;\n import org.redhat.services.service.api.ExecutorService;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.stereotype.Service;\n \n @Slf4j"
  },
  {
    "sha": "dcfd4bda0283477df0108c118bf91ec7ccb289e2",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/util/RoutingConstants.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/util/RoutingConstants.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/util/RoutingConstants.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/java/org/redhat/services/util/RoutingConstants.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -15,6 +15,7 @@\n \n \n     public interface AGENDA_GROUPS {\n+        public static final String MAIN = \"MAIN\"; // Drools default AgendaGroup\n         public static final String DEMO_HELLO = \"hello\";\n         public static final String DEMO_GOODBYE = \"goodbye\";\n     }\n@@ -24,6 +25,9 @@\n         public static final String DEMO_API_ROUTE_GOODBYE = \"demoRules.api.\" + CORE.GOODBYE_RULES;\n         public static final String DEMO_ROUTE_HELLO = \"demoRules.impl.\" + CORE.HELLO_RULES;\n         public static final String DEMO_ROUTE_GOODBYE = \"demoRules.impl.\" + CORE.GOODBYE_RULES;\n+        public static final String DEMO_API_ROUTE_MORTGAGE = \"demoRules.api.\" + CORE.MORTGAGE_RULES;\n+        public static final String DEMO_ROUTE_MORTGAGE = \"demoRules.impl.\" + CORE.MORTGAGE_RULES;\n+\n         public static final String AUDIT_API_ROUTE_BYREF = \"audit.api.\" + AUDIT.FIND_BY_REF;\n         public static final String AUDIT_ROUTE_BYREF = \"audit.impl.\" + AUDIT.FIND_BY_REF;\n         public static final String AUDIT_ROUTE_PERSIST = \"audit.impl.\" + AUDIT.EXECUTION_LOG;\n@@ -36,6 +40,7 @@\n         public static final String SCENARIO_LIST = API_BASE + \"trigger/scenarios\";\n         public static final String DEMO_RULES_HELLOWORLD = DEMO_ENDPOINT + \"hello\";\n         public static final String DEMO_RULES_GOODBYE = DEMO_ENDPOINT + \"goodbye\";\n+        public static final String DEMO_RULES_MORTGAGE = DEMO_ENDPOINT + \"mortgage\";\n         public static final String AUDIT_LOG_BY_REFERENCE = AUDIT_ENDPOINT + \"reference\";\n     }\n \n@@ -44,6 +49,7 @@\n         public static final String LOAD_KIEBASE = DIRECT + \"loadKieBase\";\n         public static final String HELLO_RULES = DIRECT + \"helloWorld\";\n         public static final String GOODBYE_RULES = DIRECT + \"goodbyeWorld\";\n+        public static final String MORTGAGE_RULES = DIRECT + \"mortgage\";\n     }\n \n     public interface AUDIT {"
  },
  {
    "sha": "f954deeb900b129b3d74790ec2036efc53ba8523",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/resources/application.yml",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/resources/application.yml",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/main/resources/application.yml?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -67,10 +67,10 @@ rules:\n       artifactId: mortgages\n       version: 1.0.0-SNAPSHOT\n       scanningInterval: 600000 # 10 minutes\n-#    - groupId: org.redhat.services\n-#      artifactId: drools-example-helloworld\n-#      version: 0.0.1-SNAPSHOT\n-#      scanningInterval: 600000 # 10 minutes\n+    # - groupId: org.redhat.services\n+    #   artifactId: drools-example-helloworld\n+    #   version: 0.0.1-SNAPSHOT\n+    #   scanningInterval: 600000 # 10 minutes\n \n logging:\n   # path: /app/logs"
  },
  {
    "sha": "17d563033e5dd1a2c3d50c2723a53f1f215a6aa6",
    "filename": "coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/test/java/org/redhat/services/test/rules/RuleExecutorTest.java",
    "status": "modified",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/test/java/org/redhat/services/test/rules/RuleExecutorTest.java",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/test/java/org/redhat/services/test/rules/RuleExecutorTest.java",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/drools-sboot-embedded/src/test/java/org/redhat/services/test/rules/RuleExecutorTest.java?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -1,14 +1,23 @@\n package org.redhat.services.test.rules;\n \n+import org.apache.tools.ant.taskdefs.condition.IsTrue;\n import org.junit.Test;\n+import org.redhat.services.model.MortgageRequest;\n import org.redhat.services.model.RuleResponse;\n import org.redhat.services.rules.api.RuleExecutor;\n import org.redhat.services.test.AppTestBase;\n import org.springframework.beans.factory.annotation.Autowired;\n \n+import mortgages.mortgages.Applicant;\n+import mortgages.mortgages.Bankruptcy;\n+import mortgages.mortgages.IncomeSource;\n+import mortgages.mortgages.LoanApplication;\n+\n import static org.hamcrest.Matchers.*;\n import static org.junit.Assert.assertThat;\n \n+import java.util.Map;\n+\n public class RuleExecutorTest extends AppTestBase {\n \n     @Autowired\n@@ -35,4 +44,22 @@ public void testGoodByeRules(){\n         assertThat(ruleResponse.getPayload().toString(), equalTo(\"Goodbye \" + name));\n         assertThat(ruleResponse.getRulesFired(), equalTo(1));\n     }\n+\n+    @Test\n+    public void testMortgageRules(){\n+        Applicant applicant = new Applicant();\n+        applicant.setAge(17);\n+        applicant.setName(\"Test\");\n+        applicant.setCreditRating(\"OK\");\n+        IncomeSource incomeSource = new IncomeSource();\n+        LoanApplication loanApplication = new LoanApplication();\n+        Bankruptcy bankruptcy = new Bankruptcy();\n+        MortgageRequest request = new MortgageRequest(applicant, incomeSource, loanApplication, bankruptcy);\n+\n+        Map<String, Object> ruleResponse = ruleExecutor.executeMortgageRules(request);\n+        assertThat(ruleResponse, notNullValue());\n+        assertThat(ruleResponse.get(\"Applicant\"), notNullValue());\n+        assertThat(ruleResponse.get(\"Applicant\"), instanceOf(Applicant.class));\n+        assertThat( ((Applicant)ruleResponse.get(\"Applicant\")).getApproved(), is(true));\n+    }    \n }"
  },
  {
    "sha": "ea812238b3a0d91fb62e5da4b4121a5ace13605a",
    "filename": "coded-examples/spring-boot-examples/drools/kjars/mortgages/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/kjars/mortgages/pom.xml",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/drools/kjars/mortgages/pom.xml",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/drools/kjars/mortgages/pom.xml?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -14,7 +14,8 @@\n     <description>Loan approval process automation using Drools.</description>\n \n     <properties>\n-        <version.org.kie>7.39.0.Final-redhat-00005</version.org.kie>\n+        <!-- <version.org.kie>7.39.0.Final-redhat-00005</version.org.kie> -->\n+        <version.org.kie>7.48.0.Final-redhat-00004</version.org.kie>\n         <maven.compiler.target>1.8</maven.compiler.target>\n         <maven.compiler.source>1.8</maven.compiler.source>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>"
  },
  {
    "sha": "9d2174fe07e8d06bd365e20937fc76fb59c2ff27",
    "filename": "coded-examples/spring-boot-examples/pom.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/redhat-cop/businessautomation-cop/blob/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/pom.xml",
    "raw_url": "https://github.com/redhat-cop/businessautomation-cop/raw/d047a653f3810b9bedea65458c1faacaadb2934d/coded-examples/spring-boot-examples/pom.xml",
    "contents_url": "https://api.github.com/repos/redhat-cop/businessautomation-cop/contents/coded-examples/spring-boot-examples/pom.xml?ref=d047a653f3810b9bedea65458c1faacaadb2934d",
    "patch": "@@ -20,9 +20,11 @@\n         <maven.compiler.target>1.8</maven.compiler.target>\n \n         <!-- Product Version Mappings https://access.redhat.com/solutions/3405361 -->\n-        <version.rhpam>7.8.0.redhat-00002</version.rhpam>\n+        <!-- <version.rhpam>7.8.0.redhat-00002</version.rhpam> -->\n+        <version.rhpam>7.10.0.redhat-00004</version.rhpam>\n         <!-- NOTE: Versions on Example KJAR projects maintain local versions to keep BC happy -->\n-        <version.org.kie>7.39.0.Final-redhat-00005</version.org.kie>\n+        <!-- <version.org.kie>7.39.0.Final-redhat-00005</version.org.kie> -->\n+        <version.org.kie>7.48.0.Final-redhat-00004</version.org.kie>\n         <version.spring.boot>2.2.2.RELEASE</version.spring.boot>\n         <version.org.keycloak>9.0.3.redhat-00002</version.org.keycloak>\n "
  }
]
