[
  {
    "sha": "83903932a809874708c63031e02571d8104e7445",
    "filename": "PizzaSpringBoot/pizza-main.iml",
    "status": "modified",
    "additions": 31,
    "deletions": 3,
    "changes": 34,
    "blob_url": "https://github.com/VasylPolukhovych/Java_Tasks/blob/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/pizza-main.iml",
    "raw_url": "https://github.com/VasylPolukhovych/Java_Tasks/raw/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/pizza-main.iml",
    "contents_url": "https://api.github.com/repos/VasylPolukhovych/Java_Tasks/contents/PizzaSpringBoot/pizza-main.iml?ref=d189afbc6bf75d3601583a40f816ae56ef7aedba",
    "patch": "@@ -20,8 +20,6 @@\n     <orderEntry type=\"library\" name=\"Maven: org.apache.logging.log4j:log4j-api:2.13.3\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.slf4j:jul-to-slf4j:1.7.30\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: jakarta.annotation:jakarta.annotation-api:1.3.5\" level=\"project\" />\n-    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-core:5.3.2\" level=\"project\" />\n-    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-jcl:5.3.2\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.yaml:snakeyaml:1.27\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-json:2.4.1\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.3\" level=\"project\" />\n@@ -53,7 +51,6 @@\n     <orderEntry type=\"library\" name=\"Maven: org.dom4j:dom4j:2.1.3\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.glassfish.jaxb:jaxb-runtime:2.3.3\" level=\"project\" />\n-    <orderEntry type=\"library\" name=\"Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.glassfish.jaxb:txw2:2.3.3\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: com.sun.istack:istack-commons-runtime:3.0.11\" level=\"project\" />\n     <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: com.sun.activation:jakarta.activation:1.2.2\" level=\"project\" />\n@@ -63,6 +60,35 @@\n     <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-tx:5.3.2\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-api:1.7.30\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-aspects:5.3.2\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-test:2.4.1\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-test:2.4.1\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-test-autoconfigure:2.4.1\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: com.jayway.jsonpath:json-path:2.4.0\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: net.minidev:json-smart:2.3\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: net.minidev:accessors-smart:1.2\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.ow2.asm:asm:5.0.4\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: jakarta.activation:jakarta.activation-api:1.2.2\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.assertj:assertj-core:3.18.1\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.hamcrest:hamcrest:2.2\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.7.0\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.7.0\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.0\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.junit.platform:junit-platform-commons:1.7.0\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.7.0\" level=\"project\" />\n+    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.7.0\" level=\"project\" />\n+    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.platform:junit-platform-engine:1.7.0\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.mockito:mockito-core:3.6.28\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: net.bytebuddy:byte-buddy-agent:1.10.18\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.objenesis:objenesis:3.1\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.mockito:mockito-junit-jupiter:3.6.28\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.skyscreamer:jsonassert:1.5.0\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: com.vaadin.external.google:android-json:0.0.20131108.vaadin1\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-core:5.3.2\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-jcl:5.3.2\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-test:5.3.2\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.xmlunit:xmlunit-core:2.7.0\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-validation:2.4.1\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.glassfish:jakarta.el:3.0.3\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: org.hibernate.validator:hibernate-validator:6.1.6.Final\" level=\"project\" />\n@@ -75,5 +101,7 @@\n     <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-core:2.12.0\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-databind:2.12.0\" level=\"project\" />\n     <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-annotations:2.12.0\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: junit:junit:4.13.1\" level=\"project\" />\n+    <orderEntry type=\"library\" name=\"Maven: org.hamcrest:hamcrest-core:2.2\" level=\"project\" />\n   </component>\n </module>\n\\ No newline at end of file"
  },
  {
    "sha": "e0a4525ef358bd9015754c7561592c2d717fe9e0",
    "filename": "PizzaSpringBoot/pom.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/VasylPolukhovych/Java_Tasks/blob/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/pom.xml",
    "raw_url": "https://github.com/VasylPolukhovych/Java_Tasks/raw/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/pom.xml",
    "contents_url": "https://api.github.com/repos/VasylPolukhovych/Java_Tasks/contents/PizzaSpringBoot/pom.xml?ref=d189afbc6bf75d3601583a40f816ae56ef7aedba",
    "patch": "@@ -27,6 +27,10 @@\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-data-jpa</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-test</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-validation</artifactId>\n@@ -62,6 +66,10 @@\n             <artifactId>jackson-annotations</artifactId>\n             <version>2.12.0</version>\n         </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+        </dependency>\n     </dependencies>\n     <build>\n         <plugins>"
  },
  {
    "sha": "68411a20231ede327c4fd7586bd0bf72cd5cc7a9",
    "filename": "PizzaSpringBoot/src/main/java/pizza/controller/PizzaController.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/VasylPolukhovych/Java_Tasks/blob/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/src/main/java/pizza/controller/PizzaController.java",
    "raw_url": "https://github.com/VasylPolukhovych/Java_Tasks/raw/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/src/main/java/pizza/controller/PizzaController.java",
    "contents_url": "https://api.github.com/repos/VasylPolukhovych/Java_Tasks/contents/PizzaSpringBoot/src/main/java/pizza/controller/PizzaController.java?ref=d189afbc6bf75d3601583a40f816ae56ef7aedba",
    "patch": "@@ -26,6 +26,7 @@\n @RequestMapping(\"pizza\")\n @Validated\n public class PizzaController {\n+\n     @Autowired\n     private CookedDishService cookedDishService;\n     @Autowired"
  },
  {
    "sha": "1a1bd172c3adf5677a13646ca30e76e957a991a6",
    "filename": "PizzaSpringBoot/src/main/resources/application.properties",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/VasylPolukhovych/Java_Tasks/blob/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/src/main/resources/application.properties",
    "raw_url": "https://github.com/VasylPolukhovych/Java_Tasks/raw/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/VasylPolukhovych/Java_Tasks/contents/PizzaSpringBoot/src/main/resources/application.properties?ref=d189afbc6bf75d3601583a40f816ae56ef7aedba",
    "patch": "@@ -26,7 +26,5 @@ spring.datasource.tomcat.min-idle=15\n #server.context-path=\n \n \n-#spring.jpa.database=mysql\n-#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect\n \n "
  },
  {
    "sha": "d85e3f098d9ce254c4accef1bc86d46513ab2cc2",
    "filename": "PizzaSpringBoot/src/test/java/Test.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/VasylPolukhovych/Java_Tasks/blob/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/src/test/java/Test.java",
    "raw_url": "https://github.com/VasylPolukhovych/Java_Tasks/raw/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/src/test/java/Test.java",
    "contents_url": "https://api.github.com/repos/VasylPolukhovych/Java_Tasks/contents/PizzaSpringBoot/src/test/java/Test.java?ref=d189afbc6bf75d3601583a40f816ae56ef7aedba",
    "patch": "@@ -85,16 +85,16 @@ public static void main(String args[]) {\n         int tip = 7;\n         int orderId = 9;\n         Test util = new Test();\n-        util.getMenu();\n-        util.addCookedDish(\"Pizza3\", 15, 15);\n-        util.addCookedDish(\"Cola\", 15, 15);\n-        util.getOrderDetailsById(orderId);\n-        selectedDishes.add(new DishInOrder(new Dish(\"Cola\"), 2));\n-        selectedDishes.add(new DishInOrder(new Dish(\"Pizza3\"), 2));\n-        util.addOrder(selectedDishes, tip);\n+        //util.getMenu();\n+        //util.addCookedDish(\"Pizza3\", 10, 10);\n+        //util.addCookedDish(\"Cola\", 10, 10);\n+        //util.getOrderDetailsById(orderId);\n+        //selectedDishes.add(new DishInOrder(new Dish(\"Cola\"), 2));\n+        //selectedDishes.add(new DishInOrder(new Dish(\"Pizza3\"), 2));\n+        //util.addOrder(selectedDishes, tip);\n         util.getMenu();\n         //Negative Cases\n-        util.getOrderDetailsById(10001);\n+     //   util.getOrderDetailsById(10001);\n         //util.addCookedDish(\"Colaooooooo\", 15, 15);\n         // util.addCookedDish(\"Col\", 15, 15);\n         //util.addCookedDish(\"Cola\", -15, 15);"
  },
  {
    "sha": "cbb3b110cd4e3aa91e3ed833c62552df731914c5",
    "filename": "PizzaSpringBoot/src/test/java/pizza/TestPizzaController.java",
    "status": "added",
    "additions": 113,
    "deletions": 0,
    "changes": 113,
    "blob_url": "https://github.com/VasylPolukhovych/Java_Tasks/blob/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/src/test/java/pizza/TestPizzaController.java",
    "raw_url": "https://github.com/VasylPolukhovych/Java_Tasks/raw/d189afbc6bf75d3601583a40f816ae56ef7aedba/PizzaSpringBoot/src/test/java/pizza/TestPizzaController.java",
    "contents_url": "https://api.github.com/repos/VasylPolukhovych/Java_Tasks/contents/PizzaSpringBoot/src/test/java/pizza/TestPizzaController.java?ref=d189afbc6bf75d3601583a40f816ae56ef7aedba",
    "patch": "@@ -0,0 +1,113 @@\n+package pizza;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.http.MediaType;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.result.MockMvcResultHandlers;\n+import pizza.dao.CookedDishDAO;\n+import pizza.dao.OrderDAO;\n+import pizza.dto.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+@SpringBootTest\n+\n+@AutoConfigureMockMvc\n+\n+public class TestPizzaController {\n+\n+    @Autowired\n+    private ObjectMapper objectMapper;\n+    @Autowired\n+    private MockMvc mvc;\n+\n+    @Autowired\n+    private CookedDishDAO cookedDishDAO;\n+\n+    @Autowired\n+    private OrderDAO orderDAO;\n+\n+    @Test\n+    public void getCurrentMenuAPI() throws Exception {\n+        List<CookedDish> menu = cookedDishDAO.getCurrentMenu();\n+        mvc.perform(\n+                get(\"/pizza/menu\"))\n+                .andDo(print())\n+                .andExpect(status().isOk())\n+                .andExpect(content().json(objectMapper.writeValueAsString(menu)));\n+    }\n+\n+    @Test\n+    public void getOrderDetailsByIdAPI() throws Exception {\n+        int orderId = 40;\n+        Order order = orderDAO.getOrderDetailsById(orderId);\n+        int tip = order.getTip();\n+        mvc.perform(\n+                get(\"/pizza/getOrder/{id}\", orderId))\n+                .andDo(print())\n+                .andExpect(status().isOk())\n+                .andExpect(jsonPath(\"$.id\").value(orderId))\n+                .andExpect(jsonPath(\"$.tip\").value(tip));\n+    }\n+\n+    @Test\n+    public void addCookedDishAPI() throws Exception {\n+        CookedDishTable cookedDishTable = new CookedDishTable();\n+        cookedDishTable.setNameDish(\"Cola\");\n+        cookedDishTable.setCount(10);\n+        cookedDishTable.setCurcount(10);\n+        mvc.perform(post(\"/pizza/add\")\n+                .content(objectMapper.writeValueAsString(cookedDishTable))\n+                .contentType(MediaType.APPLICATION_JSON)\n+        ).andDo(MockMvcResultHandlers.print())\n+                .andExpect(status().isCreated());\n+    }\n+\n+    @Test\n+    public void addCookedDishIncorrectInputDataAPI() throws Exception {\n+        CookedDishTable cookedDishTable = new CookedDishTable();\n+        cookedDishTable.setNameDish(\"Col\");\n+        cookedDishTable.setCount(-15);\n+        cookedDishTable.setCurcount(15);\n+        mvc.perform(post(\"/pizza/add\")\n+                .content(objectMapper.writeValueAsString(cookedDishTable))\n+                .contentType(MediaType.APPLICATION_JSON))\n+                .andDo(print())\n+                .andExpect(status().is4xxClientError())\n+                .andExpect(jsonPath(\"$.message\").exists());\n+    }\n+\n+    @Test\n+    public void getOrderDetailsByIncorrectIdAPI() throws Exception {\n+        mvc.perform(\n+                get(\"/pizza/getOrder/1007\"))\n+                .andDo(print())\n+                .andExpect(status().is5xxServerError())\n+                .andExpect(jsonPath(\"$.message\").exists());\n+    }\n+\n+    @Test\n+    public void addOrderAPI() throws Exception {\n+        List<DishInOrder> selectedDishes = new ArrayList<>();\n+        int tip = 7;\n+        selectedDishes.add(new DishInOrder(new Dish(\"Cola\"), 2));\n+        Order objOrder = new Order(selectedDishes, tip);\n+        mvc.perform(\n+                post(\"/pizza/addOrder\")\n+                        .content(objectMapper.writeValueAsString(objOrder))\n+                        .contentType(MediaType.APPLICATION_JSON))\n+                .andDo(print())\n+                .andExpect(status().isCreated());\n+    }\n+}"
  }
]
