[
  {
    "sha": "d4c3a57eee159cd72ac70f71a203d2756ab24459",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/.gitignore",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/.gitignore",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/.gitignore?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -13,3 +13,4 @@\n .externalNativeBuild\n .cxx\n local.properties\n+/.idea/"
  },
  {
    "sha": "87373633f65239f3c508bf43055e1cfebdd851e1",
    "filename": "app/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/AndroidManifest.xml?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -2,6 +2,9 @@\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     package=\"com.uzlov.myapplication\" >\n \n+    <uses-permission android:name=\"android.permission.INTERNET\" />\n+    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n+\n     <application\n         android:allowBackup=\"true\"\n         android:icon=\"@mipmap/ic_launcher\""
  },
  {
    "sha": "6f34c71ec90cdfb6b2673cdbb3baf7a3a372ff53",
    "filename": "app/src/main/java/com/uzlov/myapplication/MainActivity.java",
    "status": "modified",
    "additions": 14,
    "deletions": 10,
    "changes": 24,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/MainActivity.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/MainActivity.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/MainActivity.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -4,7 +4,6 @@\n import android.os.Bundle;\n import android.view.Menu;\n import android.view.MenuItem;\n-import android.widget.Toast;\n \n import androidx.annotation.NonNull;\n import androidx.appcompat.app.ActionBarDrawerToggle;\n@@ -15,10 +14,14 @@\n import androidx.navigation.ui.AppBarConfiguration;\n \n import com.google.android.material.navigation.NavigationView;\n+import com.uzlov.myapplication.interfaces.OnChangeCurrentNote;\n+import com.uzlov.myapplication.model.Note;\n import com.uzlov.myapplication.ui.AddNewNoteFragment;\n import com.uzlov.myapplication.ui.ListNotesFragment;\n import com.uzlov.myapplication.ui.NoteFragment;\n \n+import java.util.UUID;\n+\n public class MainActivity extends AppCompatActivity implements OnChangeCurrentNote {\n     private boolean isLandscape;\n     private Note currentNote;\n@@ -39,7 +42,7 @@ protected void onCreate(Bundle savedInstanceState) {\n             currentNote = savedInstanceState.getParcelable(ARG_INDEX);\n             isFistLaunch = false;\n         } else {\n-            currentNote = new Note(\"Первая\");\n+            currentNote = new Note(\"Первая\", UUID.randomUUID().toString());\n             isFistLaunch = true;\n         }\n \n@@ -118,7 +121,7 @@ private void showLandNote(Note currentNote) {\n         }\n         isFistLaunch = false;\n     }\n-    private void showNewLandNote(Note currentNote) {\n+    private void showLandNewNote(Note currentNote) {\n         getSupportFragmentManager()\n                 .beginTransaction()\n                 .replace(R.id.note_desc_container, NoteFragment.newInstance(currentNote))\n@@ -141,13 +144,13 @@ private void showPortNewNote(Note currentNote) {\n             .beginTransaction()\n             .replace(R.id.container_fragments, NoteFragment.newInstance(currentNote))\n             .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n+            .addToBackStack(null)\n             .commit();\n     }\n \n     private void showAddNewPostFragment(){\n \n         AddNewNoteFragment fragment = AddNewNoteFragment.newInstance();\n-//        fragment.setOnSaveNoteListener(this);\n         if (isLandscape){\n             getSupportFragmentManager()\n                     .beginTransaction()\n@@ -167,11 +170,12 @@ private void showAddNewPostFragment(){\n     public void onBackPressed() {\n         setTitleToolbar(getString(R.string.app_name));\n         if (!isLandscape){\n-            getSupportFragmentManager()\n-                .beginTransaction()\n-                .replace(R.id.container_fragments, ListNotesFragment.newInstance(this, currentNote))\n-                .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n-                .commit();\n+//            getSupportFragmentManager()\n+//                .beginTransaction()\n+//                .replace(R.id.container_fragments, ListNotesFragment.newInstance(this, currentNote))\n+//                .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n+//                .commit();\n+            super.onBackPressed();\n         }\n     }\n \n@@ -200,7 +204,7 @@ public void changeNote(Note note) {\n         setTitleToolbar(note.getName());\n \n         if (isLandscape){\n-            showNewLandNote(currentNote);\n+            showLandNewNote(currentNote);\n         } else {\n             showPortNewNote(currentNote);\n         }"
  },
  {
    "sha": "6d8d8dd39b61719621ccda8e6a556388edc52afc",
    "filename": "app/src/main/java/com/uzlov/myapplication/OnDeleteListener.java",
    "status": "removed",
    "additions": 0,
    "deletions": 5,
    "changes": 5,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/80123c814d1e9db66596d0da0e32acfada53e62d/app/src/main/java/com/uzlov/myapplication/OnDeleteListener.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/80123c814d1e9db66596d0da0e32acfada53e62d/app/src/main/java/com/uzlov/myapplication/OnDeleteListener.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/OnDeleteListener.java?ref=80123c814d1e9db66596d0da0e32acfada53e62d",
    "patch": "@@ -1,5 +0,0 @@\n-package com.uzlov.myapplication;\n-\n-public interface OnDeleteListener {\n-    void delete(Note note);\n-}"
  },
  {
    "sha": "1dc7e2c75ee1108bf08d24abf0568e20d3e16682",
    "filename": "app/src/main/java/com/uzlov/myapplication/interfaces/OnDeleteListener.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/interfaces/OnDeleteListener.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/interfaces/OnDeleteListener.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/interfaces/OnDeleteListener.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,7 @@\n+package com.uzlov.myapplication.interfaces;\n+\n+import com.uzlov.myapplication.model.Note;\n+\n+public interface OnDeleteListener {\n+    void delete(Note note);\n+}"
  },
  {
    "sha": "ffe5d77d74e9260775f693836b2b2df2b56d1516",
    "filename": "app/src/main/java/com/uzlov/myapplication/model/Note.java",
    "status": "renamed",
    "additions": 23,
    "deletions": 7,
    "changes": 30,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/model/Note.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/model/Note.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/model/Note.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -1,27 +1,34 @@\n-package com.uzlov.myapplication;\n+package com.uzlov.myapplication.model;\n \n-import android.graphics.drawable.Drawable;\n import android.os.Parcel;\n import android.os.Parcelable;\n \n+import com.uzlov.myapplication.R;\n+\n import java.util.Date;\n import java.util.Objects;\n \n public class Note implements Parcelable {\n \n+    private String id;\n     private String name;\n     private String description;\n     private String dateCreate;\n     private String author;\n \n-    public Note(String name) {\n+    public Note() {\n+    }\n+\n+    public Note(String id, String name) {\n+        this.setId(id);\n         this.setName(name);\n         this.setDateCreate(new Date().toString());\n         this.setAuthor(\"Неизвестный\");\n         this.setDescription(\"\");\n     }\n \n-    public Note(String name, String description, String dateCreate, String author) {\n+    public Note(String id, String name, String description, String dateCreate, String author) {\n+        this.setId(id);\n         this.setName(name);\n         this.setDescription(description);\n         this.setDateCreate(dateCreate);\n@@ -30,6 +37,7 @@ public Note(String name, String description, String dateCreate, String author) {\n \n \n     protected Note(Parcel in) {\n+        id = in.readString();\n         name = in.readString();\n         description = in.readString();\n         dateCreate = in.readString();\n@@ -48,6 +56,14 @@ public Note createFromParcel(Parcel in) {\n         }\n     };\n \n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n     public String getName() {\n         return name;\n     }\n@@ -87,6 +103,7 @@ public int describeContents() {\n \n     @Override\n     public void writeToParcel(Parcel dest, int flags) {\n+        dest.writeString(id);\n         dest.writeString(name);\n         dest.writeString(description);\n         dest.writeString(dateCreate);\n@@ -102,12 +119,11 @@ public boolean equals(Object o) {\n         if (this == o) return true;\n         if (o == null || getClass() != o.getClass()) return false;\n         Note note = (Note) o;\n-        return name.equals(note.name) &&\n-                author.equals(note.author);\n+        return id.equals(note.id);\n     }\n \n     @Override\n     public int hashCode() {\n-        return Objects.hash(name, description, dateCreate, author);\n+        return Objects.hash(id, name, description, dateCreate, author);\n     }\n }",
    "previous_filename": "app/src/main/java/com/uzlov/myapplication/Note.java"
  },
  {
    "sha": "0da014265f2db56e5e1f296333f60748d0e8a1b3",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/Constants.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/Constants.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/Constants.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/Constants.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,5 @@\n+package com.uzlov.myapplication.repositories;\n+\n+public class Constants {\n+    public static final String TABLE_NAME_NOTES = \"notes\";\n+}"
  },
  {
    "sha": "65d4ba234ba819c160a29d466bd912bff8e738ba",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/note/NoteFirestoreCallbacks.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteFirestoreCallbacks.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteFirestoreCallbacks.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteFirestoreCallbacks.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,9 @@\n+package com.uzlov.myapplication.repositories.note;\n+\n+import androidx.annotation.Nullable;\n+\n+public interface NoteFirestoreCallbacks {\n+\n+    void onSuccess(@Nullable String message);\n+    void onError(@Nullable String message);\n+}"
  },
  {
    "sha": "9d21fbb6e1836faf6d89c5affe7fa2f997f58160",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepository.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepository.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepository.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepository.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,17 @@\n+package com.uzlov.myapplication.repositories.note;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+public interface NoteRepository {\n+\n+    void setNote(\n+        @NonNull String id,\n+        @NonNull String title,\n+        @NonNull String description,\n+        @Nullable String autor,\n+        @Nullable String datetime\n+    );\n+\n+    void onDeleteClicked(@NonNull String id);\n+}"
  },
  {
    "sha": "b596aa2aa4fce3a2c8608716984f86568ed2dd58",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepositoryImpl.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepositoryImpl.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepositoryImpl.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepositoryImpl.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,60 @@\n+package com.uzlov.myapplication.repositories.note;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.google.android.gms.tasks.OnFailureListener;\n+import com.google.android.gms.tasks.OnSuccessListener;\n+import com.google.firebase.firestore.FirebaseFirestore;\n+import com.uzlov.myapplication.repositories.Constants;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+\n+\n+public class NoteRepositoryImpl implements NoteRepository {\n+\n+    private final FirebaseFirestore firebaseFirestore = FirebaseFirestore.getInstance();\n+    private final NoteFirestoreCallbacks callbacks;\n+\n+    public NoteRepositoryImpl(NoteFirestoreCallbacks callbacks) {\n+        this.callbacks = callbacks;\n+    }\n+\n+    @Override\n+    public void setNote(@NonNull String id, @NonNull String title,\n+                        @NonNull String description, @Nullable String autor, @Nullable String datetime) {\n+        final Map<String, String> note = new HashMap<>();\n+        note.put(\"id\", id);\n+        note.put(\"name\", title);\n+        note.put(\"description\", description);\n+        note.put(\"author\", autor);\n+        note.put(\"dateCreate\", datetime);\n+\n+        firebaseFirestore\n+                .collection(Constants.TABLE_NAME_NOTES)\n+                .document(id)\n+                .set(note)\n+                .addOnSuccessListener(new OnSuccessListener<Void>() {\n+                    @Override\n+                    public void onSuccess(Void aVoid) {\n+                        callbacks.onSuccess(\"Заметка успешно обновлена\");\n+                    }\n+                })\n+                .addOnFailureListener(new OnFailureListener() {\n+                    @Override\n+                    public void onFailure(@NonNull Exception e) {\n+                        callbacks.onError(e.getMessage());\n+                    }\n+                });\n+    }\n+\n+    @Override\n+    public void onDeleteClicked(@NonNull String id) {\n+        firebaseFirestore\n+            .collection(Constants.TABLE_NAME_NOTES)\n+            .document(id)\n+            .delete();\n+    }\n+}"
  },
  {
    "sha": "7cdd69bc8de783b8a75e229c5dc968da0975a631",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesFirestoreRepository.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesFirestoreRepository.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesFirestoreRepository.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesFirestoreRepository.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,11 @@\n+package com.uzlov.myapplication.repositories.notes;\n+\n+import com.uzlov.myapplication.model.Note;\n+\n+import java.util.List;\n+\n+public interface NotesFirestoreRepository {\n+\n+    void loadSuccess(List<Note> result);\n+    void loadFailed(String message);\n+}"
  },
  {
    "sha": "8530bd9d90277438409d83f7f5232f94dd13274e",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepository.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepository.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepository.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepository.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,8 @@\n+package com.uzlov.myapplication.repositories.notes;\n+\n+import androidx.annotation.NonNull;\n+\n+public interface NotesRepository {\n+    void loadNotes();\n+    void deleteNote(@NonNull String id);\n+}"
  },
  {
    "sha": "785a95b8f064b221afc292f36446613b6235f67f",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepositoryImpl.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepositoryImpl.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepositoryImpl.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepositoryImpl.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,43 @@\n+package com.uzlov.myapplication.repositories.notes;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.google.android.gms.tasks.OnSuccessListener;\n+import com.google.firebase.firestore.FirebaseFirestore;\n+import com.uzlov.myapplication.model.Note;\n+import com.uzlov.myapplication.repositories.Constants;\n+\n+import java.util.List;\n+\n+public class NotesRepositoryImpl implements NotesRepository {\n+\n+    private final FirebaseFirestore firebaseFirestore = FirebaseFirestore.getInstance();\n+    private final NotesFirestoreRepository callbacks;\n+\n+    public NotesRepositoryImpl(NotesFirestoreRepository callbacks) {\n+        this.callbacks = callbacks;\n+    }\n+\n+    @Override\n+    public void loadNotes() {\n+        firebaseFirestore\n+                .collection(Constants.TABLE_NAME_NOTES)\n+                .get()\n+                .addOnCompleteListener(task -> {\n+                    if (task.getResult() != null) {\n+                        List<Note> items = task.getResult().toObjects(Note.class);\n+                        callbacks.loadSuccess(items);\n+                    }\n+                })\n+                .addOnFailureListener(e -> callbacks.loadFailed(e.getMessage()));\n+    }\n+\n+    @Override\n+    public void deleteNote(@NonNull String id) {\n+        firebaseFirestore\n+                .collection(Constants.TABLE_NAME_NOTES)\n+                .document(id)\n+                .delete()\n+                .addOnSuccessListener(aVoid -> loadNotes());\n+    }\n+}"
  },
  {
    "sha": "5ff6fb8ca58930c07ea87709f99c76a1ffddbb90",
    "filename": "app/src/main/java/com/uzlov/myapplication/ui/AddNewNoteFragment.java",
    "status": "modified",
    "additions": 51,
    "deletions": 9,
    "changes": 60,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/AddNewNoteFragment.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/AddNewNoteFragment.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/ui/AddNewNoteFragment.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -1,9 +1,11 @@\n package com.uzlov.myapplication.ui;\n \n import android.os.Bundle;\n+import android.text.TextUtils;\n import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n+import android.widget.Toast;\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n@@ -13,19 +15,23 @@\n import com.google.android.material.textfield.TextInputEditText;\n import com.google.android.material.timepicker.MaterialTimePicker;\n import com.google.android.material.timepicker.TimeFormat;\n-import com.uzlov.myapplication.Note;\n-import com.uzlov.myapplication.OnSaveListener;\n+import com.uzlov.myapplication.model.Note;\n import com.uzlov.myapplication.R;\n+import com.uzlov.myapplication.repositories.note.NoteFirestoreCallbacks;\n+import com.uzlov.myapplication.repositories.note.NoteRepository;\n+import com.uzlov.myapplication.repositories.note.NoteRepositoryImpl;\n \n-public class AddNewNoteFragment extends Fragment {\n+import java.util.UUID;\n+\n+public class AddNewNoteFragment extends Fragment implements NoteFirestoreCallbacks {\n \n     private static String ARG_INDEX = \"index\";\n     private TextInputEditText tvTitle;\n     private TextInputEditText tvNameAutor;\n     private TextInputEditText tvDescription;\n     private MaterialButton btnSaveNote;\n-    private OnSaveListener saveListener;\n     private MaterialButton btnDatePicker;\n+    private final NoteRepository repository = new NoteRepositoryImpl(this);\n \n     public static AddNewNoteFragment newInstance() {\n \n@@ -63,24 +69,27 @@ private void initView(View view) {\n         btnDatePicker = view.findViewById(R.id.btnCallTimePicker);\n \n         btnSaveNote.setOnClickListener(v ->{\n-            Note note = new Note(tvTitle.getText().toString(),\n+            Note note = new Note(UUID.randomUUID().toString(),\n+                    tvTitle.getText().toString(),\n                     tvDescription.getText().toString(),\n                     btnDatePicker.getText().toString(),\n-                    tvNameAutor.getText().toString()\n-            );\n+                    tvNameAutor.getText().toString());\n \n             Bundle result = new Bundle();\n             result.putParcelable(ARG_INDEX, note);\n \n-            getParentFragmentManager().setFragmentResult(getString(R.string.key_save), result);\n+            final String name = note.getName();\n+            final String description = note.getDescription();\n+            final String author = note.getAuthor();\n+            final String datetime = note.getDateCreate();\n+            update(name, description, author, datetime);\n \n             if (getActivity() != null) getActivity().onBackPressed();\n \n         });\n         btnDatePicker.setOnClickListener(v -> openTimePicker());\n     }\n \n-\n     private void openTimePicker() {\n         MaterialTimePicker picker =\n                 new MaterialTimePicker.Builder()\n@@ -96,5 +105,38 @@ private void openTimePicker() {\n                 btnDatePicker.setText(String.format(\"%d:%d\", picker.getHour(), picker.getMinute())));\n     }\n \n+    private void update(@Nullable String title,\n+                        @Nullable String description,\n+                        @Nullable String author,\n+                        @Nullable String datetime) {\n+        if (!TextUtils.isEmpty(title) && !TextUtils.isEmpty(description) &&\n+                !TextUtils.isEmpty(author) && !TextUtils.isEmpty(datetime)) {\n+            if (getArguments() != null) {\n+                Note note = (Note) getArguments().getParcelable(ARG_INDEX);\n+                if (note != null) {\n+                    repository.setNote(note.getId(), title, description, author, datetime);\n+                } else {\n+                    String id = UUID.randomUUID().toString();\n+                    repository.setNote(id, title, description, author, datetime);\n+                }\n+            }\n+        } else {\n+            showToastMessage(getString(R.string.fields_do_not_empty));\n+        }\n+    }\n+\n+\n+    private void showToastMessage(String msg) {\n+        Toast.makeText(requireContext(), msg, Toast.LENGTH_SHORT).show();\n+    }\n+\n+    @Override\n+    public void onSuccess(@Nullable  String message) {\n+        showToastMessage(message);\n+    }\n \n+    @Override\n+    public void onError(@Nullable  String message) {\n+        showToastMessage(message);\n+    }\n }"
  },
  {
    "sha": "c7953f1aa9c9397c9c5730737287d0fdd8f85c0d",
    "filename": "app/src/main/java/com/uzlov/myapplication/ui/ListNotesFragment.java",
    "status": "modified",
    "additions": 29,
    "deletions": 27,
    "changes": 56,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/ListNotesFragment.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/ListNotesFragment.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/ui/ListNotesFragment.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -6,7 +6,7 @@\n import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n-import android.widget.AdapterView;\n+import android.widget.Toast;\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n@@ -16,24 +16,26 @@\n import androidx.recyclerview.widget.LinearLayoutManager;\n import androidx.recyclerview.widget.RecyclerView;\n \n-import com.uzlov.myapplication.Note;\n-import com.uzlov.myapplication.OnChangeCurrentNote;\n-import com.uzlov.myapplication.OnDeleteListener;\n-import com.uzlov.myapplication.OnNoteItemClick;\n-import com.uzlov.myapplication.OnSaveListener;\n import com.uzlov.myapplication.R;\n import com.uzlov.myapplication.adapters.NotesAdapter;\n+import com.uzlov.myapplication.interfaces.OnChangeCurrentNote;\n+import com.uzlov.myapplication.interfaces.OnDeleteListener;\n+import com.uzlov.myapplication.interfaces.OnNoteItemClick;\n+import com.uzlov.myapplication.interfaces.OnSaveListener;\n+import com.uzlov.myapplication.model.Note;\n+import com.uzlov.myapplication.repositories.notes.NotesFirestoreRepository;\n+import com.uzlov.myapplication.repositories.notes.NotesRepository;\n+import com.uzlov.myapplication.repositories.notes.NotesRepositoryImpl;\n \n import java.util.ArrayList;\n-import java.util.Date;\n import java.util.List;\n+import java.util.UUID;\n \n-public class ListNotesFragment extends Fragment implements OnNoteItemClick, OnSaveListener, OnDeleteListener, FragmentResultListener {\n+public class ListNotesFragment extends Fragment implements OnNoteItemClick, OnSaveListener, OnDeleteListener, FragmentResultListener, NotesFirestoreRepository {\n \n     private static OnChangeCurrentNote onChangeCurrentNote;\n-    private RecyclerView recyclerView;\n-\n \n+    private final NotesRepository repository = new NotesRepositoryImpl(this);\n \n     private Note currentNote;\n     public static final String ARG_INDEX = \"index\";\n@@ -54,24 +56,14 @@ public static ListNotesFragment newInstance(OnChangeCurrentNote onChangeNote, No\n     @Override\n     public void onCreate(@Nullable Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n-        notes.add(new Note(\"Заметка 1\", \"нет ничего\", new Date().toString(), \"Artem\"));\n-        notes.add(new Note(\"Заметка 2\", \"что то\", new Date().toString(), \"Artem\"));\n-        notes.add(new Note(\"Заметка 3\", \"пусто\", new Date().toString(), \"Artem\"));\n-        notes.add(new Note(\"Продукты\", \"молоко11 и хлеб\", new Date().toString(), \"Vitya\"));\n-        notes.add(new Note(\"Продукты2\", \"молоко33 и хлеб55\", new Date().toString(), \"Kolya\"));\n-        notes.add(new Note(\"Продукты3\", \"молоко2 и хлеб3\", new Date().toString(), \"Pavel\"));\n-        notes.add(new Note(\"Продукты4\", \"молоко1 и хлеб4\", new Date().toString(), \"Django\"));\n-        notes.add(new Note(\"Заметка 5\"));\n-\n         getParentFragmentManager().setFragmentResultListener(getString(R.string.key_delete), this, this);\n         getParentFragmentManager().setFragmentResultListener(getString(R.string.key_save), this, this);\n     }\n \n     @Override\n     public View onCreateView(\n             LayoutInflater inflater, ViewGroup container,\n-            Bundle savedInstanceState\n-    ) {\n+            Bundle savedInstanceState) {\n         return inflater.inflate(R.layout.fragment_list_notes, container, false);\n     }\n \n@@ -83,14 +75,13 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {\n         if (savedInstanceState != null && savedInstanceState.getParcelable(ARG_INDEX) != null){\n             currentNote = savedInstanceState.getParcelable(ARG_INDEX);\n         } else {\n-            currentNote = new Note(\"Первая\");\n+            currentNote = new Note(UUID.randomUUID().toString(), \"Первая\");\n         }\n-\n-        adapter.setNotes(notes);\n+        repository.loadNotes();\n     }\n \n     private void initView(View view){\n-        recyclerView = view.findViewById(R.id.recyclerViewNotes);\n+        RecyclerView recyclerView = view.findViewById(R.id.recyclerViewNotes);\n \n         // используем адаптер данных\n         recyclerView.setLayoutManager(new LinearLayoutManager(recyclerView.getContext()));\n@@ -119,8 +110,6 @@ public void onSave(Note note) {\n \n     @Override\n     public void delete(Note note) {\n-        Log.e(getClass().getSimpleName(), note.getName());\n-\n         notes.remove(note);\n         adapter.removeNote(note);\n     }\n@@ -141,4 +130,17 @@ public void onFragmentResult(@NonNull String requestKey, @NonNull Bundle result)\n             onSave(result.getParcelable(ARG_INDEX));\n         }\n     }\n+\n+\n+    @Override\n+    public void loadSuccess(List<Note> result) {\n+        notes.clear();\n+        adapter.setNotes(result);\n+        notes.addAll(result);\n+    }\n+\n+    @Override\n+    public void loadFailed(String message) {\n+        Toast.makeText(requireContext(), message, Toast.LENGTH_SHORT).show();\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "046de8b61df10a4c6ffb7ed2febe7864933d51db",
    "filename": "app/src/main/java/com/uzlov/myapplication/ui/NoteFragment.java",
    "status": "modified",
    "additions": 69,
    "deletions": 8,
    "changes": 77,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/NoteFragment.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/NoteFragment.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/ui/NoteFragment.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -2,25 +2,33 @@\n \n import android.content.Intent;\n import android.os.Bundle;\n+import android.text.TextUtils;\n import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n import android.widget.EditText;\n import android.widget.TextView;\n+import android.widget.Toast;\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.appcompat.widget.AppCompatImageView;\n import androidx.fragment.app.Fragment;\n \n import com.google.android.material.button.MaterialButton;\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import com.google.android.material.timepicker.MaterialTimePicker;\n import com.google.android.material.timepicker.TimeFormat;\n-import com.uzlov.myapplication.Note;\n+import com.uzlov.myapplication.model.Note;\n import com.uzlov.myapplication.R;\n+import com.uzlov.myapplication.repositories.note.NoteFirestoreCallbacks;\n+import com.uzlov.myapplication.repositories.note.NoteRepository;\n+import com.uzlov.myapplication.repositories.note.NoteRepositoryImpl;\n \n+import java.util.UUID;\n \n-public class NoteFragment extends Fragment{\n+\n+public class NoteFragment extends Fragment implements NoteFirestoreCallbacks {\n \n     private TextView tvDate;\n     private TextView tvName;\n@@ -33,6 +41,7 @@\n \n     private static final String ARG_INDEX = \"index\";\n     private Note note;\n+    private final NoteRepository repository = new NoteRepositoryImpl(this);\n \n     public static NoteFragment newInstance(Note note) {\n         NoteFragment f = new NoteFragment();\n@@ -49,7 +58,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n         if (getArguments() != null && getArguments().getParcelable(ARG_INDEX) != null) {\n             note = getArguments().getParcelable(ARG_INDEX);\n         } else {\n-            note = new Note(\"Первая\");\n+            note = new Note(\"Первая\", UUID.randomUUID().toString());\n         }\n     }\n \n@@ -84,17 +93,36 @@ private void initListeners() {\n         btnShareNote.setOnClickListener(v -> startShareIntent());\n \n         btnSaveNote.setOnClickListener(v -> {\n+            Note note = new Note(UUID.randomUUID().toString(),\n+                    tvName.getText().toString(),\n+                    etDescription.getText().toString(),\n+                    tvDate.getText().toString(),\n+                    tvAuthor.getText().toString());\n+\n             Bundle result = new Bundle();\n             result.putParcelable(ARG_INDEX, note);\n \n-            getParentFragmentManager().setFragmentResult(getString(R.string.key_save), result);\n+            final String name = note.getName();\n+            final String description = note.getDescription();\n+            final String author = note.getAuthor();\n+            final String datetime = note.getDateCreate();\n+            update(name, description, author, datetime);\n         });\n \n         btnDeleteNote.setOnClickListener(v -> {\n-            Bundle result = new Bundle();\n-            result.putParcelable(ARG_INDEX, note);\n-            getParentFragmentManager().setFragmentResult(getString(R.string.key_delete), result);\n-            requireActivity().onBackPressed();\n+\n+            new MaterialAlertDialogBuilder(requireContext())\n+                    .setTitle(R.string.question_delete_note)\n+                    .setCancelable(true)\n+                    .setNegativeButton(R.string.cancel, (dialog, which) -> {\n+\n+                    })\n+                    .setPositiveButton(R.string.delete, (dialog, which) -> {\n+                        repository.onDeleteClicked(note.getId());\n+                        requireActivity().onBackPressed();\n+                    })\n+                    .show();\n+\n         });\n     }\n \n@@ -128,4 +156,37 @@ private void fillView() {\n         tvName.setText(note.getName());\n         etDescription.setText(note.getDescription());\n     }\n+\n+    private void update(@NonNull String title,\n+                        @NonNull String description,\n+                        @NonNull String author,\n+                        @NonNull String datetime) {\n+        if (!TextUtils.isEmpty(title) && !TextUtils.isEmpty(description)) {\n+            if (getArguments() != null) {\n+                Note note = (Note) getArguments().getParcelable(ARG_INDEX);\n+                if (note != null) {\n+                    repository.setNote(note.getId(), title, description, author, datetime);\n+                } else {\n+                    String id = UUID.randomUUID().toString();\n+                    repository.setNote(id, title, description, author, datetime);\n+                }\n+            }\n+        } else {\n+            showToastMessage(getString(R.string.fields_do_not_empty));\n+        }\n+    }\n+\n+    private void showToastMessage(String msg) {\n+        Toast.makeText(requireContext(), msg, Toast.LENGTH_SHORT).show();\n+    }\n+\n+    @Override\n+    public void onSuccess(@Nullable String message) {\n+        showToastMessage(message);\n+    }\n+\n+    @Override\n+    public void onError(@Nullable String message) {\n+        showToastMessage(message);\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "d7f2df26e03bd263fe169f40f66359d8d2784b0e",
    "filename": "app/src/main/res/menu/activity_main_drawer_drawer.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 20,
    "changes": 20,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/80123c814d1e9db66596d0da0e32acfada53e62d/app/src/main/res/menu/activity_main_drawer_drawer.xml",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/80123c814d1e9db66596d0da0e32acfada53e62d/app/src/main/res/menu/activity_main_drawer_drawer.xml",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/res/menu/activity_main_drawer_drawer.xml?ref=80123c814d1e9db66596d0da0e32acfada53e62d",
    "patch": "@@ -1,20 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    xmlns:tools=\"http://schemas.android.com/tools\"\n-    tools:showIn=\"navigation_view\">\n-\n-    <group android:checkableBehavior=\"single\">\n-        <item\n-            android:id=\"@+id/nav_home\"\n-            android:icon=\"@drawable/ic_menu_camera\"\n-            android:title=\"@string/menu_home\" />\n-        <item\n-            android:id=\"@+id/nav_gallery\"\n-            android:icon=\"@drawable/ic_menu_gallery\"\n-            android:title=\"@string/menu_gallery\" />\n-        <item\n-            android:id=\"@+id/nav_slideshow\"\n-            android:icon=\"@drawable/ic_menu_slideshow\"\n-            android:title=\"@string/menu_slideshow\" />\n-    </group>\n-</menu>\n\\ No newline at end of file"
  }
]
