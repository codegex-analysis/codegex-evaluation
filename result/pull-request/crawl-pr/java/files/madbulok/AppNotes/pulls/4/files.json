[
  {
    "sha": "d4c3a57eee159cd72ac70f71a203d2756ab24459",
    "filename": ".gitignore",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/.gitignore",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/.gitignore",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/.gitignore?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,16 @@\n+*.iml\n+.gradle\n+/local.properties\n+/.idea/caches\n+/.idea/libraries\n+/.idea/modules.xml\n+/.idea/workspace.xml\n+/.idea/navEditor.xml\n+/.idea/assetWizardSettings.xml\n+.DS_Store\n+/build\n+/captures\n+.externalNativeBuild\n+.cxx\n+local.properties\n+/.idea/"
  },
  {
    "sha": "42afabfd2abebf31384ca7797186a27a4b7dbee8",
    "filename": "app/.gitignore",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/.gitignore",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/.gitignore",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/.gitignore?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1 @@\n+/build\n\\ No newline at end of file"
  },
  {
    "sha": "51f1c940e44c2a95383fadd32797042808f4e4e5",
    "filename": "app/build.gradle",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/build.gradle",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/build.gradle",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/build.gradle?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,41 @@\n+plugins {\n+    id 'com.android.application'\n+}\n+\n+android {\n+    compileSdkVersion 29\n+    buildToolsVersion \"30.0.2\"\n+\n+    defaultConfig {\n+        applicationId \"com.uzlov.myapplication\"\n+        minSdkVersion 21\n+        targetSdkVersion 29\n+        versionCode 1\n+        versionName \"1.0\"\n+\n+        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n+    }\n+\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+    compileOptions {\n+        sourceCompatibility JavaVersion.VERSION_1_8\n+        targetCompatibility JavaVersion.VERSION_1_8\n+    }\n+}\n+\n+dependencies {\n+\n+    implementation 'androidx.appcompat:appcompat:1.2.0'\n+    implementation 'com.google.android.material:material:1.3.0'\n+    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\n+    implementation 'androidx.navigation:navigation-fragment:2.3.3'\n+    implementation 'androidx.navigation:navigation-ui:2.3.3'\n+    testImplementation 'junit:junit:4.+'\n+    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\n+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "481bb434814107eb79d7a30b676d344b0df2f8ce",
    "filename": "app/proguard-rules.pro",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/proguard-rules.pro",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/proguard-rules.pro",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/proguard-rules.pro?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,21 @@\n+# Add project specific ProGuard rules here.\n+# You can control the set of applied configuration files using the\n+# proguardFiles setting in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n+\n+# Uncomment this to preserve the line number information for\n+# debugging stack traces.\n+#-keepattributes SourceFile,LineNumberTable\n+\n+# If you keep the line number information, uncomment this to\n+# hide the original source file name.\n+#-renamesourcefileattribute SourceFile\n\\ No newline at end of file"
  },
  {
    "sha": "87373633f65239f3c508bf43055e1cfebdd851e1",
    "filename": "app/src/main/AndroidManifest.xml",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/AndroidManifest.xml?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.uzlov.myapplication\" >\n+\n+    <uses-permission android:name=\"android.permission.INTERNET\" />\n+    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n+\n+    <application\n+        android:allowBackup=\"true\"\n+        android:icon=\"@mipmap/ic_launcher\"\n+        android:label=\"@string/app_name\"\n+        android:roundIcon=\"@mipmap/ic_launcher_round\"\n+        android:supportsRtl=\"true\"\n+        android:theme=\"@style/Theme.MyApplication\" >\n+        <activity\n+            android:name=\".MainActivity\"\n+            android:label=\"@string/app_name\"\n+            android:theme=\"@style/Theme.MyApplication.NoActionBar\" >\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+\n+</manifest>\n\\ No newline at end of file"
  },
  {
    "sha": "6f34c71ec90cdfb6b2673cdbb3baf7a3a372ff53",
    "filename": "app/src/main/java/com/uzlov/myapplication/MainActivity.java",
    "status": "added",
    "additions": 212,
    "deletions": 0,
    "changes": 212,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/MainActivity.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/MainActivity.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/MainActivity.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,212 @@\n+package com.uzlov.myapplication;\n+\n+import android.content.res.Configuration;\n+import android.os.Bundle;\n+import android.view.Menu;\n+import android.view.MenuItem;\n+\n+import androidx.annotation.NonNull;\n+import androidx.appcompat.app.ActionBarDrawerToggle;\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.appcompat.widget.Toolbar;\n+import androidx.drawerlayout.widget.DrawerLayout;\n+import androidx.fragment.app.FragmentTransaction;\n+import androidx.navigation.ui.AppBarConfiguration;\n+\n+import com.google.android.material.navigation.NavigationView;\n+import com.uzlov.myapplication.interfaces.OnChangeCurrentNote;\n+import com.uzlov.myapplication.model.Note;\n+import com.uzlov.myapplication.ui.AddNewNoteFragment;\n+import com.uzlov.myapplication.ui.ListNotesFragment;\n+import com.uzlov.myapplication.ui.NoteFragment;\n+\n+import java.util.UUID;\n+\n+public class MainActivity extends AppCompatActivity implements OnChangeCurrentNote {\n+    private boolean isLandscape;\n+    private Note currentNote;\n+    public static final String ARG_INDEX = \"index\";\n+    private boolean isFistLaunch;\n+    private Toolbar toolbar;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_main_drawer);\n+\n+        initView();\n+\n+        isLandscape = getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE;\n+\n+        if (savedInstanceState != null && savedInstanceState.getParcelable(ARG_INDEX) != null){\n+            currentNote = savedInstanceState.getParcelable(ARG_INDEX);\n+            isFistLaunch = false;\n+        } else {\n+            currentNote = new Note(\"Первая\", UUID.randomUUID().toString());\n+            isFistLaunch = true;\n+        }\n+\n+        if (isLandscape){\n+            showLandNote(currentNote);\n+        } else {\n+            showPortNote(currentNote);\n+        }\n+    }\n+\n+    private void initView() {\n+        toolbar = findViewById(R.id.toolbar);\n+        setSupportActionBar(toolbar);\n+\n+        DrawerLayout drawer = findViewById(R.id.drawer_layout);\n+        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(\n+                this, drawer, toolbar,\n+                R.string.navigation_drawer_open,\n+                R.string.navigation_drawer_close);\n+\n+        drawer.addDrawerListener(toggle);\n+        toggle.syncState();\n+\n+        AppBarConfiguration mAppBarConfiguration = new AppBarConfiguration.Builder(\n+                R.id.popular_item, R.id.settings_item, R.id.about_item)\n+                .setOpenableLayout(drawer)\n+                .build();\n+\n+        NavigationView navigationView = findViewById(R.id.nav_view);\n+        navigationView.setNavigationItemSelectedListener(item -> {\n+            // STUB!\n+            return false;\n+        });\n+    }\n+\n+    @Override\n+    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\n+        int id = item.getItemId();\n+\n+        switch(id){\n+            case R.id.settings_item:\n+                // STUB!\n+                return true;\n+            case R.id.about_item:\n+                // STUB!\n+                return true;\n+            case R.id.popular_item:\n+                // STUB!\n+                return true;\n+            case R.id.action_add_note:\n+                showAddNewPostFragment();\n+                return true;\n+        }\n+        return super.onOptionsItemSelected(item);\n+    }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        getMenuInflater().inflate(R.menu.toolbar_menu, menu);\n+        return super.onCreateOptionsMenu(menu);\n+    }\n+\n+    private void showLandNote(Note currentNote) {\n+\n+        getSupportFragmentManager()\n+                .beginTransaction()\n+                .replace(R.id.notes_fragment, ListNotesFragment.newInstance(this, currentNote))\n+                .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n+                .commit();\n+        if (!isFistLaunch){\n+            getSupportFragmentManager()\n+                    .beginTransaction()\n+                    .replace(R.id.note_desc_container, NoteFragment.newInstance(currentNote))\n+                    .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n+                    .commit();\n+        }\n+        isFistLaunch = false;\n+    }\n+    private void showLandNewNote(Note currentNote) {\n+        getSupportFragmentManager()\n+                .beginTransaction()\n+                .replace(R.id.note_desc_container, NoteFragment.newInstance(currentNote))\n+                .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n+                .commit();\n+\n+        isFistLaunch = false;\n+    }\n+\n+    private void showPortNote(Note currentNote) {\n+        getSupportFragmentManager()\n+            .beginTransaction()\n+            .replace(R.id.container_fragments, ListNotesFragment.newInstance(this, currentNote))\n+            .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n+            .commit();\n+    }\n+\n+    private void showPortNewNote(Note currentNote) {\n+        getSupportFragmentManager()\n+            .beginTransaction()\n+            .replace(R.id.container_fragments, NoteFragment.newInstance(currentNote))\n+            .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n+            .addToBackStack(null)\n+            .commit();\n+    }\n+\n+    private void showAddNewPostFragment(){\n+\n+        AddNewNoteFragment fragment = AddNewNoteFragment.newInstance();\n+        if (isLandscape){\n+            getSupportFragmentManager()\n+                    .beginTransaction()\n+                    .replace(R.id.note_desc_container, fragment)\n+                    .addToBackStack(null)\n+                    .commit();\n+        } else {\n+            getSupportFragmentManager()\n+                    .beginTransaction()\n+                    .replace(R.id.container_fragments, fragment)\n+                    .addToBackStack(null)\n+                    .commit();\n+        }\n+    }\n+\n+    @Override\n+    public void onBackPressed() {\n+        setTitleToolbar(getString(R.string.app_name));\n+        if (!isLandscape){\n+//            getSupportFragmentManager()\n+//                .beginTransaction()\n+//                .replace(R.id.container_fragments, ListNotesFragment.newInstance(this, currentNote))\n+//                .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n+//                .commit();\n+            super.onBackPressed();\n+        }\n+    }\n+\n+    @Override\n+    protected void onSaveInstanceState(@NonNull Bundle outState) {\n+        super.onSaveInstanceState(outState);\n+        outState.putParcelable(ARG_INDEX, currentNote);\n+    }\n+\n+    @Override\n+    protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState) {\n+        super.onRestoreInstanceState(savedInstanceState);\n+        if (savedInstanceState.getParcelable(ARG_INDEX) == null) return;\n+        currentNote = savedInstanceState.getParcelable(ARG_INDEX);\n+    }\n+\n+    private void setTitleToolbar(String title){\n+        toolbar.setTitle(title);\n+    }\n+\n+\n+    @Override\n+    public void changeNote(Note note) {\n+        currentNote = note;\n+\n+        setTitleToolbar(note.getName());\n+\n+        if (isLandscape){\n+            showLandNewNote(currentNote);\n+        } else {\n+            showPortNewNote(currentNote);\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "07f58824f08f8ef40c565ece831dfd2beba0ceab",
    "filename": "app/src/main/java/com/uzlov/myapplication/Note.java",
    "status": "removed",
    "additions": 0,
    "deletions": 56,
    "changes": 56,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/c04d99b46b66a2095009ebc524d2a497b1d6242f/app/src/main/java/com/uzlov/myapplication/Note.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/c04d99b46b66a2095009ebc524d2a497b1d6242f/app/src/main/java/com/uzlov/myapplication/Note.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/Note.java?ref=c04d99b46b66a2095009ebc524d2a497b1d6242f",
    "patch": "@@ -1,56 +0,0 @@\n-package com.uzlov.myapplication;\n-\n-import java.util.Date;\n-import java.util.UUID;\n-\n-public class Note {\n-\n-    private UUID uuid;\n-    private String name;\n-    private String description;\n-    private Date dateCreate;\n-    private String autor;\n-\n-    public Note(String name) {\n-        this.name = name;\n-    }\n-\n-    public Note(String name, String description, Date dateCreate, String autor) {\n-        this.name = name;\n-        this.description = description;\n-        this.dateCreate = dateCreate;\n-        this.autor = autor;\n-    }\n-\n-    public String getName() {\n-        return name;\n-    }\n-\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n-\n-    public String getDescription() {\n-        return description;\n-    }\n-\n-    public void setDescription(String description) {\n-        this.description = description;\n-    }\n-\n-    public Date getDateCreate() {\n-        return dateCreate;\n-    }\n-\n-    public void setDateCreate(Date dateCreate) {\n-        this.dateCreate = dateCreate;\n-    }\n-\n-    public String getAutor() {\n-        return autor;\n-    }\n-\n-    public void setAutor(String autor) {\n-        this.autor = autor;\n-    }\n-}"
  },
  {
    "sha": "a308cc3d275a9209305a27e99470c4b52affbe78",
    "filename": "app/src/main/java/com/uzlov/myapplication/OnChangeCurrentNote.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/OnChangeCurrentNote.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/OnChangeCurrentNote.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/OnChangeCurrentNote.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,5 @@\n+package com.uzlov.myapplication;\n+\n+public interface OnChangeCurrentNote {\n+    void changeNote(Note note);\n+}"
  },
  {
    "sha": "7202fe849749e743d9c08e547b74b856cf3df2cb",
    "filename": "app/src/main/java/com/uzlov/myapplication/OnNoteItemClick.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/OnNoteItemClick.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/OnNoteItemClick.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/OnNoteItemClick.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,5 @@\n+package com.uzlov.myapplication;\n+\n+public interface OnNoteItemClick {\n+    void onClick(int position);\n+}"
  },
  {
    "sha": "d8280187cd65294c913d172ca169377f8789ac23",
    "filename": "app/src/main/java/com/uzlov/myapplication/OnSaveListener.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/OnSaveListener.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/OnSaveListener.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/OnSaveListener.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,6 @@\n+package com.uzlov.myapplication;\n+\n+@FunctionalInterface\n+public interface OnSaveListener {\n+    void onSave(Note note);\n+}"
  },
  {
    "sha": "f4e386882e65653e22643b795db378c4ad791423",
    "filename": "app/src/main/java/com/uzlov/myapplication/adapters/NotesAdapter.java",
    "status": "added",
    "additions": 81,
    "deletions": 0,
    "changes": 81,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/adapters/NotesAdapter.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/adapters/NotesAdapter.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/adapters/NotesAdapter.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,81 @@\n+package com.uzlov.myapplication.adapters;\n+\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import androidx.annotation.NonNull;\n+import androidx.appcompat.widget.AppCompatImageView;\n+import androidx.appcompat.widget.AppCompatTextView;\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+import com.uzlov.myapplication.Note;\n+import com.uzlov.myapplication.OnNoteItemClick;\n+import com.uzlov.myapplication.R;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class NotesAdapter extends RecyclerView.Adapter<NotesAdapter.NoteViewHolder> {\n+\n+    private final List<Note> notes = new ArrayList<>();\n+    private final OnNoteItemClick onNoteItemClick;\n+\n+    public NotesAdapter(OnNoteItemClick onNoteItemClick) {\n+        this.onNoteItemClick = onNoteItemClick;\n+    }\n+\n+    @Override\n+    public NoteViewHolder onCreateViewHolder(@NonNull  ViewGroup parent, int viewType) {\n+        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_note, parent, false);\n+        return new NoteViewHolder(view);\n+    }\n+\n+    @Override\n+    public void onBindViewHolder(@NonNull NotesAdapter.NoteViewHolder holder, int position) {\n+        holder.inBind(notes.get(position));\n+    }\n+\n+    public void setNotes(List<Note> _notes){\n+        notes.clear();\n+        notes.addAll(_notes);\n+        notifyDataSetChanged();\n+    }\n+\n+    public void addNote(Note note){\n+        notes.add(note);\n+        notifyItemInserted(notes.size()-1);\n+    }\n+\n+    @Override\n+    public int getItemCount() {\n+        return notes.size();\n+    }\n+\n+    public void removeNote(Note note) {\n+        int pos = notes.indexOf(note);\n+        if (pos != -1 && notes.remove(note)){\n+            notifyItemRemoved(pos);\n+        }\n+    }\n+\n+\n+    protected final class NoteViewHolder extends RecyclerView.ViewHolder{\n+\n+        private final AppCompatImageView ivNote;\n+        private final AppCompatTextView tvNoteTitle;\n+\n+        public NoteViewHolder(@NonNull View itemView) {\n+            super(itemView);\n+            ivNote = itemView.findViewById(R.id.item_image_note);\n+            tvNoteTitle = itemView.findViewById(R.id.item_title);\n+        }\n+\n+        void inBind(Note note){\n+            if (note == null) return;\n+            ivNote.setImageResource(note.getImage());\n+            tvNoteTitle.setText(note.getName());\n+            itemView.setOnClickListener(v -> onNoteItemClick.onClick(getAdapterPosition()));\n+        }\n+    }\n+}"
  },
  {
    "sha": "1dc7e2c75ee1108bf08d24abf0568e20d3e16682",
    "filename": "app/src/main/java/com/uzlov/myapplication/interfaces/OnDeleteListener.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/interfaces/OnDeleteListener.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/interfaces/OnDeleteListener.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/interfaces/OnDeleteListener.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,7 @@\n+package com.uzlov.myapplication.interfaces;\n+\n+import com.uzlov.myapplication.model.Note;\n+\n+public interface OnDeleteListener {\n+    void delete(Note note);\n+}"
  },
  {
    "sha": "ffe5d77d74e9260775f693836b2b2df2b56d1516",
    "filename": "app/src/main/java/com/uzlov/myapplication/model/Note.java",
    "status": "added",
    "additions": 129,
    "deletions": 0,
    "changes": 129,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/model/Note.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/model/Note.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/model/Note.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,129 @@\n+package com.uzlov.myapplication.model;\n+\n+import android.os.Parcel;\n+import android.os.Parcelable;\n+\n+import com.uzlov.myapplication.R;\n+\n+import java.util.Date;\n+import java.util.Objects;\n+\n+public class Note implements Parcelable {\n+\n+    private String id;\n+    private String name;\n+    private String description;\n+    private String dateCreate;\n+    private String author;\n+\n+    public Note() {\n+    }\n+\n+    public Note(String id, String name) {\n+        this.setId(id);\n+        this.setName(name);\n+        this.setDateCreate(new Date().toString());\n+        this.setAuthor(\"Неизвестный\");\n+        this.setDescription(\"\");\n+    }\n+\n+    public Note(String id, String name, String description, String dateCreate, String author) {\n+        this.setId(id);\n+        this.setName(name);\n+        this.setDescription(description);\n+        this.setDateCreate(dateCreate);\n+        this.setAuthor(author);\n+    }\n+\n+\n+    protected Note(Parcel in) {\n+        id = in.readString();\n+        name = in.readString();\n+        description = in.readString();\n+        dateCreate = in.readString();\n+        author = in.readString();\n+    }\n+\n+    public static final Creator<Note> CREATOR = new Creator<Note>() {\n+        @Override\n+        public Note createFromParcel(Parcel in) {\n+            return new Note(in);\n+        }\n+\n+        @Override\n+        public Note[] newArray(int size) {\n+            return new Note[size];\n+        }\n+    };\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public String getDateCreate() {\n+        return dateCreate;\n+    }\n+\n+    public void setDateCreate(String dateCreate) {\n+        this.dateCreate = dateCreate;\n+    }\n+\n+    public String getAuthor() {\n+        return author;\n+    }\n+\n+    public void setAuthor(String author) {\n+        this.author = author;\n+    }\n+\n+    @Override\n+    public int describeContents() {\n+        return 0;\n+    }\n+\n+    @Override\n+    public void writeToParcel(Parcel dest, int flags) {\n+        dest.writeString(id);\n+        dest.writeString(name);\n+        dest.writeString(description);\n+        dest.writeString(dateCreate);\n+        dest.writeString(author);\n+    }\n+\n+    public int getImage() {\n+        return R.drawable.ic_account_24;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        Note note = (Note) o;\n+        return id.equals(note.id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id, name, description, dateCreate, author);\n+    }\n+}"
  },
  {
    "sha": "0da014265f2db56e5e1f296333f60748d0e8a1b3",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/Constants.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/Constants.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/Constants.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/Constants.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,5 @@\n+package com.uzlov.myapplication.repositories;\n+\n+public class Constants {\n+    public static final String TABLE_NAME_NOTES = \"notes\";\n+}"
  },
  {
    "sha": "65d4ba234ba819c160a29d466bd912bff8e738ba",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/note/NoteFirestoreCallbacks.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteFirestoreCallbacks.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteFirestoreCallbacks.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteFirestoreCallbacks.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,9 @@\n+package com.uzlov.myapplication.repositories.note;\n+\n+import androidx.annotation.Nullable;\n+\n+public interface NoteFirestoreCallbacks {\n+\n+    void onSuccess(@Nullable String message);\n+    void onError(@Nullable String message);\n+}"
  },
  {
    "sha": "9d21fbb6e1836faf6d89c5affe7fa2f997f58160",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepository.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepository.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepository.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepository.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,17 @@\n+package com.uzlov.myapplication.repositories.note;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+public interface NoteRepository {\n+\n+    void setNote(\n+        @NonNull String id,\n+        @NonNull String title,\n+        @NonNull String description,\n+        @Nullable String autor,\n+        @Nullable String datetime\n+    );\n+\n+    void onDeleteClicked(@NonNull String id);\n+}"
  },
  {
    "sha": "b596aa2aa4fce3a2c8608716984f86568ed2dd58",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepositoryImpl.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepositoryImpl.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepositoryImpl.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/note/NoteRepositoryImpl.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,60 @@\n+package com.uzlov.myapplication.repositories.note;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.google.android.gms.tasks.OnFailureListener;\n+import com.google.android.gms.tasks.OnSuccessListener;\n+import com.google.firebase.firestore.FirebaseFirestore;\n+import com.uzlov.myapplication.repositories.Constants;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+\n+\n+public class NoteRepositoryImpl implements NoteRepository {\n+\n+    private final FirebaseFirestore firebaseFirestore = FirebaseFirestore.getInstance();\n+    private final NoteFirestoreCallbacks callbacks;\n+\n+    public NoteRepositoryImpl(NoteFirestoreCallbacks callbacks) {\n+        this.callbacks = callbacks;\n+    }\n+\n+    @Override\n+    public void setNote(@NonNull String id, @NonNull String title,\n+                        @NonNull String description, @Nullable String autor, @Nullable String datetime) {\n+        final Map<String, String> note = new HashMap<>();\n+        note.put(\"id\", id);\n+        note.put(\"name\", title);\n+        note.put(\"description\", description);\n+        note.put(\"author\", autor);\n+        note.put(\"dateCreate\", datetime);\n+\n+        firebaseFirestore\n+                .collection(Constants.TABLE_NAME_NOTES)\n+                .document(id)\n+                .set(note)\n+                .addOnSuccessListener(new OnSuccessListener<Void>() {\n+                    @Override\n+                    public void onSuccess(Void aVoid) {\n+                        callbacks.onSuccess(\"Заметка успешно обновлена\");\n+                    }\n+                })\n+                .addOnFailureListener(new OnFailureListener() {\n+                    @Override\n+                    public void onFailure(@NonNull Exception e) {\n+                        callbacks.onError(e.getMessage());\n+                    }\n+                });\n+    }\n+\n+    @Override\n+    public void onDeleteClicked(@NonNull String id) {\n+        firebaseFirestore\n+            .collection(Constants.TABLE_NAME_NOTES)\n+            .document(id)\n+            .delete();\n+    }\n+}"
  },
  {
    "sha": "7cdd69bc8de783b8a75e229c5dc968da0975a631",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesFirestoreRepository.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesFirestoreRepository.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesFirestoreRepository.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesFirestoreRepository.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,11 @@\n+package com.uzlov.myapplication.repositories.notes;\n+\n+import com.uzlov.myapplication.model.Note;\n+\n+import java.util.List;\n+\n+public interface NotesFirestoreRepository {\n+\n+    void loadSuccess(List<Note> result);\n+    void loadFailed(String message);\n+}"
  },
  {
    "sha": "8530bd9d90277438409d83f7f5232f94dd13274e",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepository.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepository.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepository.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepository.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,8 @@\n+package com.uzlov.myapplication.repositories.notes;\n+\n+import androidx.annotation.NonNull;\n+\n+public interface NotesRepository {\n+    void loadNotes();\n+    void deleteNote(@NonNull String id);\n+}"
  },
  {
    "sha": "785a95b8f064b221afc292f36446613b6235f67f",
    "filename": "app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepositoryImpl.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepositoryImpl.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepositoryImpl.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/repositories/notes/NotesRepositoryImpl.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,43 @@\n+package com.uzlov.myapplication.repositories.notes;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.google.android.gms.tasks.OnSuccessListener;\n+import com.google.firebase.firestore.FirebaseFirestore;\n+import com.uzlov.myapplication.model.Note;\n+import com.uzlov.myapplication.repositories.Constants;\n+\n+import java.util.List;\n+\n+public class NotesRepositoryImpl implements NotesRepository {\n+\n+    private final FirebaseFirestore firebaseFirestore = FirebaseFirestore.getInstance();\n+    private final NotesFirestoreRepository callbacks;\n+\n+    public NotesRepositoryImpl(NotesFirestoreRepository callbacks) {\n+        this.callbacks = callbacks;\n+    }\n+\n+    @Override\n+    public void loadNotes() {\n+        firebaseFirestore\n+                .collection(Constants.TABLE_NAME_NOTES)\n+                .get()\n+                .addOnCompleteListener(task -> {\n+                    if (task.getResult() != null) {\n+                        List<Note> items = task.getResult().toObjects(Note.class);\n+                        callbacks.loadSuccess(items);\n+                    }\n+                })\n+                .addOnFailureListener(e -> callbacks.loadFailed(e.getMessage()));\n+    }\n+\n+    @Override\n+    public void deleteNote(@NonNull String id) {\n+        firebaseFirestore\n+                .collection(Constants.TABLE_NAME_NOTES)\n+                .document(id)\n+                .delete()\n+                .addOnSuccessListener(aVoid -> loadNotes());\n+    }\n+}"
  },
  {
    "sha": "5ff6fb8ca58930c07ea87709f99c76a1ffddbb90",
    "filename": "app/src/main/java/com/uzlov/myapplication/ui/AddNewNoteFragment.java",
    "status": "added",
    "additions": 142,
    "deletions": 0,
    "changes": 142,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/AddNewNoteFragment.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/AddNewNoteFragment.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/ui/AddNewNoteFragment.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,142 @@\n+package com.uzlov.myapplication.ui;\n+\n+import android.os.Bundle;\n+import android.text.TextUtils;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+\n+import com.google.android.material.button.MaterialButton;\n+import com.google.android.material.textfield.TextInputEditText;\n+import com.google.android.material.timepicker.MaterialTimePicker;\n+import com.google.android.material.timepicker.TimeFormat;\n+import com.uzlov.myapplication.model.Note;\n+import com.uzlov.myapplication.R;\n+import com.uzlov.myapplication.repositories.note.NoteFirestoreCallbacks;\n+import com.uzlov.myapplication.repositories.note.NoteRepository;\n+import com.uzlov.myapplication.repositories.note.NoteRepositoryImpl;\n+\n+import java.util.UUID;\n+\n+public class AddNewNoteFragment extends Fragment implements NoteFirestoreCallbacks {\n+\n+    private static String ARG_INDEX = \"index\";\n+    private TextInputEditText tvTitle;\n+    private TextInputEditText tvNameAutor;\n+    private TextInputEditText tvDescription;\n+    private MaterialButton btnSaveNote;\n+    private MaterialButton btnDatePicker;\n+    private final NoteRepository repository = new NoteRepositoryImpl(this);\n+\n+    public static AddNewNoteFragment newInstance() {\n+\n+        AddNewNoteFragment f = new AddNewNoteFragment();    // создание\n+        // Передача параметра\n+        Bundle args = new Bundle();\n+        f.setArguments(args);\n+        return f;\n+    }\n+\n+    @Override\n+    public void onCreate(@Nullable Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+    }\n+\n+    @Override\n+    public View onCreateView(@NonNull LayoutInflater inflater,\n+                             @Nullable ViewGroup container,\n+                             @Nullable Bundle savedInstanceState) {\n+        return inflater.inflate(R.layout.add_new_note_fragment, container, false);\n+    }\n+\n+    @Override\n+    public void onViewCreated(@NonNull View view, @NonNull Bundle savedInstanceState) {\n+        super.onViewCreated(view, savedInstanceState);\n+\n+        initView(view);\n+    }\n+\n+    private void initView(View view) {\n+        tvTitle = view.findViewById(R.id.tie_title);\n+        tvNameAutor = view.findViewById(R.id.tie_name_autour);\n+        tvDescription = view.findViewById(R.id.tie_description);\n+        btnSaveNote = view.findViewById(R.id.btnSaveNote);\n+        btnDatePicker = view.findViewById(R.id.btnCallTimePicker);\n+\n+        btnSaveNote.setOnClickListener(v ->{\n+            Note note = new Note(UUID.randomUUID().toString(),\n+                    tvTitle.getText().toString(),\n+                    tvDescription.getText().toString(),\n+                    btnDatePicker.getText().toString(),\n+                    tvNameAutor.getText().toString());\n+\n+            Bundle result = new Bundle();\n+            result.putParcelable(ARG_INDEX, note);\n+\n+            final String name = note.getName();\n+            final String description = note.getDescription();\n+            final String author = note.getAuthor();\n+            final String datetime = note.getDateCreate();\n+            update(name, description, author, datetime);\n+\n+            if (getActivity() != null) getActivity().onBackPressed();\n+\n+        });\n+        btnDatePicker.setOnClickListener(v -> openTimePicker());\n+    }\n+\n+    private void openTimePicker() {\n+        MaterialTimePicker picker =\n+                new MaterialTimePicker.Builder()\n+                        .setTimeFormat(TimeFormat.CLOCK_24H)\n+                        .setTitleText(R.string.select_new_string)\n+                        .build();\n+\n+        if (getActivity() != null) {\n+            picker.show(requireActivity().getSupportFragmentManager(), \"datePicker\");\n+        }\n+\n+        picker.addOnPositiveButtonClickListener(v1 ->\n+                btnDatePicker.setText(String.format(\"%d:%d\", picker.getHour(), picker.getMinute())));\n+    }\n+\n+    private void update(@Nullable String title,\n+                        @Nullable String description,\n+                        @Nullable String author,\n+                        @Nullable String datetime) {\n+        if (!TextUtils.isEmpty(title) && !TextUtils.isEmpty(description) &&\n+                !TextUtils.isEmpty(author) && !TextUtils.isEmpty(datetime)) {\n+            if (getArguments() != null) {\n+                Note note = (Note) getArguments().getParcelable(ARG_INDEX);\n+                if (note != null) {\n+                    repository.setNote(note.getId(), title, description, author, datetime);\n+                } else {\n+                    String id = UUID.randomUUID().toString();\n+                    repository.setNote(id, title, description, author, datetime);\n+                }\n+            }\n+        } else {\n+            showToastMessage(getString(R.string.fields_do_not_empty));\n+        }\n+    }\n+\n+\n+    private void showToastMessage(String msg) {\n+        Toast.makeText(requireContext(), msg, Toast.LENGTH_SHORT).show();\n+    }\n+\n+    @Override\n+    public void onSuccess(@Nullable  String message) {\n+        showToastMessage(message);\n+    }\n+\n+    @Override\n+    public void onError(@Nullable  String message) {\n+        showToastMessage(message);\n+    }\n+}"
  },
  {
    "sha": "c7953f1aa9c9397c9c5730737287d0fdd8f85c0d",
    "filename": "app/src/main/java/com/uzlov/myapplication/ui/ListNotesFragment.java",
    "status": "added",
    "additions": 146,
    "deletions": 0,
    "changes": 146,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/ListNotesFragment.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/ListNotesFragment.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/ui/ListNotesFragment.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,146 @@\n+package com.uzlov.myapplication.ui;\n+\n+import android.content.res.Configuration;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+import androidx.fragment.app.FragmentResultListener;\n+import androidx.recyclerview.widget.DividerItemDecoration;\n+import androidx.recyclerview.widget.LinearLayoutManager;\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+import com.uzlov.myapplication.R;\n+import com.uzlov.myapplication.adapters.NotesAdapter;\n+import com.uzlov.myapplication.interfaces.OnChangeCurrentNote;\n+import com.uzlov.myapplication.interfaces.OnDeleteListener;\n+import com.uzlov.myapplication.interfaces.OnNoteItemClick;\n+import com.uzlov.myapplication.interfaces.OnSaveListener;\n+import com.uzlov.myapplication.model.Note;\n+import com.uzlov.myapplication.repositories.notes.NotesFirestoreRepository;\n+import com.uzlov.myapplication.repositories.notes.NotesRepository;\n+import com.uzlov.myapplication.repositories.notes.NotesRepositoryImpl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.UUID;\n+\n+public class ListNotesFragment extends Fragment implements OnNoteItemClick, OnSaveListener, OnDeleteListener, FragmentResultListener, NotesFirestoreRepository {\n+\n+    private static OnChangeCurrentNote onChangeCurrentNote;\n+\n+    private final NotesRepository repository = new NotesRepositoryImpl(this);\n+\n+    private Note currentNote;\n+    public static final String ARG_INDEX = \"index\";\n+    private boolean isLandscape;\n+    private final List<Note> notes = new ArrayList<>();\n+    private final NotesAdapter adapter = new NotesAdapter(this);\n+\n+    public static ListNotesFragment newInstance(OnChangeCurrentNote onChangeNote, Note note) {\n+        onChangeCurrentNote = onChangeNote;\n+        ListNotesFragment f = new ListNotesFragment();    // создание\n+        // Передача параметра\n+        Bundle args = new Bundle();\n+        args.putParcelable(ARG_INDEX, note);\n+        f.setArguments(args);\n+        return f;\n+    }\n+\n+    @Override\n+    public void onCreate(@Nullable Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        getParentFragmentManager().setFragmentResultListener(getString(R.string.key_delete), this, this);\n+        getParentFragmentManager().setFragmentResultListener(getString(R.string.key_save), this, this);\n+    }\n+\n+    @Override\n+    public View onCreateView(\n+            LayoutInflater inflater, ViewGroup container,\n+            Bundle savedInstanceState) {\n+        return inflater.inflate(R.layout.fragment_list_notes, container, false);\n+    }\n+\n+    public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {\n+        super.onViewCreated(view, savedInstanceState);\n+        initView(view);\n+        isLandscape = getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE;\n+\n+        if (savedInstanceState != null && savedInstanceState.getParcelable(ARG_INDEX) != null){\n+            currentNote = savedInstanceState.getParcelable(ARG_INDEX);\n+        } else {\n+            currentNote = new Note(UUID.randomUUID().toString(), \"Первая\");\n+        }\n+        repository.loadNotes();\n+    }\n+\n+    private void initView(View view){\n+        RecyclerView recyclerView = view.findViewById(R.id.recyclerViewNotes);\n+\n+        // используем адаптер данных\n+        recyclerView.setLayoutManager(new LinearLayoutManager(recyclerView.getContext()));\n+        recyclerView.addItemDecoration(new DividerItemDecoration(recyclerView.getContext(), RecyclerView.VERTICAL));\n+        recyclerView.setAdapter(adapter);\n+    }\n+\n+\n+    @Override\n+    public void onSaveInstanceState(@NonNull Bundle outState) {\n+        outState.putParcelable(ARG_INDEX, currentNote);\n+        super.onSaveInstanceState(outState);\n+    }\n+\n+    @Override\n+    public void onClick(int position) {\n+        currentNote = notes.get(position);\n+        onChangeCurrentNote.changeNote(currentNote);\n+    }\n+\n+    @Override\n+    public void onSave(Note note) {\n+        notes.add(note);\n+        adapter.addNote(note);\n+    }\n+\n+    @Override\n+    public void delete(Note note) {\n+        notes.remove(note);\n+        adapter.removeNote(note);\n+    }\n+\n+    @Override\n+    public void onDestroy() {\n+        getParentFragmentManager().clearFragmentResultListener(getString(R.string.key_save));\n+        getParentFragmentManager().clearFragmentResultListener(getString(R.string.key_delete));\n+        super.onDestroy();\n+    }\n+\n+    @Override\n+    public void onFragmentResult(@NonNull String requestKey, @NonNull Bundle result) {\n+        Log.e(getClass().getSimpleName(), requestKey);\n+        if (requestKey.equals(getString(R.string.key_delete))){\n+            delete(result.getParcelable(ARG_INDEX));\n+        } else if (requestKey.equals(getString(R.string.key_save))){\n+            onSave(result.getParcelable(ARG_INDEX));\n+        }\n+    }\n+\n+\n+    @Override\n+    public void loadSuccess(List<Note> result) {\n+        notes.clear();\n+        adapter.setNotes(result);\n+        notes.addAll(result);\n+    }\n+\n+    @Override\n+    public void loadFailed(String message) {\n+        Toast.makeText(requireContext(), message, Toast.LENGTH_SHORT).show();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "046de8b61df10a4c6ffb7ed2febe7864933d51db",
    "filename": "app/src/main/java/com/uzlov/myapplication/ui/NoteFragment.java",
    "status": "added",
    "additions": 192,
    "deletions": 0,
    "changes": 192,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/NoteFragment.java",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/java/com/uzlov/myapplication/ui/NoteFragment.java",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/java/com/uzlov/myapplication/ui/NoteFragment.java?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,192 @@\n+package com.uzlov.myapplication.ui;\n+\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.text.TextUtils;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.EditText;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.widget.AppCompatImageView;\n+import androidx.fragment.app.Fragment;\n+\n+import com.google.android.material.button.MaterialButton;\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n+import com.google.android.material.timepicker.MaterialTimePicker;\n+import com.google.android.material.timepicker.TimeFormat;\n+import com.uzlov.myapplication.model.Note;\n+import com.uzlov.myapplication.R;\n+import com.uzlov.myapplication.repositories.note.NoteFirestoreCallbacks;\n+import com.uzlov.myapplication.repositories.note.NoteRepository;\n+import com.uzlov.myapplication.repositories.note.NoteRepositoryImpl;\n+\n+import java.util.UUID;\n+\n+\n+public class NoteFragment extends Fragment implements NoteFirestoreCallbacks {\n+\n+    private TextView tvDate;\n+    private TextView tvName;\n+    private TextView tvAuthor;\n+    private EditText etDescription;\n+    private MaterialButton btnShareNote;\n+    private MaterialButton btnSaveNote;\n+    private MaterialButton btnDeleteNote;\n+    private AppCompatImageView imageNote;\n+\n+    private static final String ARG_INDEX = \"index\";\n+    private Note note;\n+    private final NoteRepository repository = new NoteRepositoryImpl(this);\n+\n+    public static NoteFragment newInstance(Note note) {\n+        NoteFragment f = new NoteFragment();\n+        // Передача параметра\n+        Bundle args = new Bundle();\n+        args.putParcelable(ARG_INDEX, note);\n+        f.setArguments(args);\n+        return f;\n+    }\n+\n+    @Override\n+    public void onCreate(@Nullable Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        if (getArguments() != null && getArguments().getParcelable(ARG_INDEX) != null) {\n+            note = getArguments().getParcelable(ARG_INDEX);\n+        } else {\n+            note = new Note(\"Первая\", UUID.randomUUID().toString());\n+        }\n+    }\n+\n+    @Override\n+    public View onCreateView(\n+            LayoutInflater inflater, ViewGroup container,\n+            Bundle savedInstanceState\n+    ) {\n+        return inflater.inflate(R.layout.fragment_note, container, false);\n+    }\n+\n+    public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {\n+        super.onViewCreated(view, savedInstanceState);\n+        initView(view);\n+        initListeners();\n+        fillView();\n+    }\n+\n+    private void initView(View view){\n+        tvDate = view.findViewById(R.id.textview_date);\n+        tvName = view.findViewById(R.id.textViewName);\n+        tvAuthor = view.findViewById(R.id.textView_author);\n+        etDescription = view.findViewById(R.id.etDescription);\n+        imageNote = view.findViewById(R.id.iv_image_note);\n+        btnShareNote = view.findViewById(R.id.fab_share_note);\n+        btnDeleteNote = view.findViewById(R.id.btnDeleteNote);\n+        btnSaveNote = view.findViewById(R.id.btnSaveNote);\n+    }\n+\n+    private void initListeners() {\n+        tvDate.setOnClickListener(v -> openTimePicker());\n+        btnShareNote.setOnClickListener(v -> startShareIntent());\n+\n+        btnSaveNote.setOnClickListener(v -> {\n+            Note note = new Note(UUID.randomUUID().toString(),\n+                    tvName.getText().toString(),\n+                    etDescription.getText().toString(),\n+                    tvDate.getText().toString(),\n+                    tvAuthor.getText().toString());\n+\n+            Bundle result = new Bundle();\n+            result.putParcelable(ARG_INDEX, note);\n+\n+            final String name = note.getName();\n+            final String description = note.getDescription();\n+            final String author = note.getAuthor();\n+            final String datetime = note.getDateCreate();\n+            update(name, description, author, datetime);\n+        });\n+\n+        btnDeleteNote.setOnClickListener(v -> {\n+\n+            new MaterialAlertDialogBuilder(requireContext())\n+                    .setTitle(R.string.question_delete_note)\n+                    .setCancelable(true)\n+                    .setNegativeButton(R.string.cancel, (dialog, which) -> {\n+\n+                    })\n+                    .setPositiveButton(R.string.delete, (dialog, which) -> {\n+                        repository.onDeleteClicked(note.getId());\n+                        requireActivity().onBackPressed();\n+                    })\n+                    .show();\n+\n+        });\n+    }\n+\n+    private void startShareIntent() {\n+        Intent shareIntent = new Intent(Intent.ACTION_SEND);\n+        shareIntent.setType(\"text/plain\");\n+        shareIntent.putExtra(Intent.EXTRA_TEXT, etDescription.getText().toString());\n+\n+        Intent chooser = Intent.createChooser(shareIntent, \"Выбор приложения\");\n+        startActivity(chooser);\n+    }\n+\n+    private void openTimePicker() {\n+        MaterialTimePicker picker =\n+                new MaterialTimePicker.Builder()\n+                        .setTimeFormat(TimeFormat.CLOCK_24H)\n+                        .setTitleText(R.string.select_new_string)\n+                        .build();\n+\n+        if (getActivity() != null){\n+            picker.show(getActivity().getSupportFragmentManager(), \"datePicker\");\n+        }\n+\n+        picker.addOnPositiveButtonClickListener(v1 ->\n+                tvDate.setText(picker.getHour() + \":\" + picker.getMinute()));\n+    }\n+\n+    private void fillView() {\n+        tvAuthor.setText(note.getAuthor());\n+        tvDate.setText(note.getDateCreate());\n+        tvName.setText(note.getName());\n+        etDescription.setText(note.getDescription());\n+    }\n+\n+    private void update(@NonNull String title,\n+                        @NonNull String description,\n+                        @NonNull String author,\n+                        @NonNull String datetime) {\n+        if (!TextUtils.isEmpty(title) && !TextUtils.isEmpty(description)) {\n+            if (getArguments() != null) {\n+                Note note = (Note) getArguments().getParcelable(ARG_INDEX);\n+                if (note != null) {\n+                    repository.setNote(note.getId(), title, description, author, datetime);\n+                } else {\n+                    String id = UUID.randomUUID().toString();\n+                    repository.setNote(id, title, description, author, datetime);\n+                }\n+            }\n+        } else {\n+            showToastMessage(getString(R.string.fields_do_not_empty));\n+        }\n+    }\n+\n+    private void showToastMessage(String msg) {\n+        Toast.makeText(requireContext(), msg, Toast.LENGTH_SHORT).show();\n+    }\n+\n+    @Override\n+    public void onSuccess(@Nullable String message) {\n+        showToastMessage(message);\n+    }\n+\n+    @Override\n+    public void onError(@Nullable String message) {\n+        showToastMessage(message);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a8b409b1d1a67ab9d6be93a1920501644837a571",
    "filename": "app/src/main/res/color/colors.xml",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/color/colors.xml",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/color/colors.xml",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/res/color/colors.xml?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+</selector>\n\\ No newline at end of file"
  },
  {
    "sha": "2b068d11462a4b96669193de13a711a3a36220a0",
    "filename": "app/src/main/res/drawable-v24/ic_launcher_foreground.xml",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable-v24/ic_launcher_foreground.xml",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable-v24/ic_launcher_foreground.xml",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/res/drawable-v24/ic_launcher_foreground.xml?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,30 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:aapt=\"http://schemas.android.com/aapt\"\n+    android:width=\"108dp\"\n+    android:height=\"108dp\"\n+    android:viewportWidth=\"108\"\n+    android:viewportHeight=\"108\">\n+    <path android:pathData=\"M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z\">\n+        <aapt:attr name=\"android:fillColor\">\n+            <gradient\n+                android:endX=\"85.84757\"\n+                android:endY=\"92.4963\"\n+                android:startX=\"42.9492\"\n+                android:startY=\"49.59793\"\n+                android:type=\"linear\">\n+                <item\n+                    android:color=\"#44000000\"\n+                    android:offset=\"0.0\" />\n+                <item\n+                    android:color=\"#00000000\"\n+                    android:offset=\"1.0\" />\n+            </gradient>\n+        </aapt:attr>\n+    </path>\n+    <path\n+        android:fillColor=\"#FFFFFF\"\n+        android:fillType=\"nonZero\"\n+        android:pathData=\"M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z\"\n+        android:strokeWidth=\"1\"\n+        android:strokeColor=\"#00000000\" />\n+</vector>\n\\ No newline at end of file"
  },
  {
    "sha": "89199ebf57cbafb4be54a30a0117475a24060eba",
    "filename": "app/src/main/res/drawable/ic_account_24.xml",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable/ic_account_24.xml",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable/ic_account_24.xml",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/res/drawable/ic_account_24.xml?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,10 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:width=\"24dp\"\n+    android:height=\"24dp\"\n+    android:viewportWidth=\"24\"\n+    android:viewportHeight=\"24\"\n+    android:tint=\"?attr/colorControlNormal\">\n+  <path\n+      android:fillColor=\"@android:color/white\"\n+      android:pathData=\"M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM12,5c1.66,0 3,1.34 3,3s-1.34,3 -3,3 -3,-1.34 -3,-3 1.34,-3 3,-3zM12,19.2c-2.5,0 -4.71,-1.28 -6,-3.22 0.03,-1.99 4,-3.08 6,-3.08 1.99,0 5.97,1.09 6,3.08 -1.29,1.94 -3.5,3.22 -6,3.22z\"/>\n+</vector>"
  },
  {
    "sha": "17255b7ae340198e106092df31e60084a54f8865",
    "filename": "app/src/main/res/drawable/ic_baseline_info_24.xml",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable/ic_baseline_info_24.xml",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable/ic_baseline_info_24.xml",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/res/drawable/ic_baseline_info_24.xml?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,10 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:width=\"24dp\"\n+    android:height=\"24dp\"\n+    android:viewportWidth=\"24\"\n+    android:viewportHeight=\"24\"\n+    android:tint=\"?attr/colorControlNormal\">\n+  <path\n+      android:fillColor=\"@android:color/white\"\n+      android:pathData=\"M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-6h2v6zM13,9h-2L11,7h2v2z\"/>\n+</vector>"
  },
  {
    "sha": "41a82ede8b36a4aa8b4aaffbbf4caebdc3f03d11",
    "filename": "app/src/main/res/drawable/ic_baseline_settings_24.xml",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable/ic_baseline_settings_24.xml",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable/ic_baseline_settings_24.xml",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/res/drawable/ic_baseline_settings_24.xml?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,10 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:width=\"24dp\"\n+    android:height=\"24dp\"\n+    android:viewportWidth=\"24\"\n+    android:viewportHeight=\"24\"\n+    android:tint=\"?attr/colorControlNormal\">\n+  <path\n+      android:fillColor=\"@android:color/white\"\n+      android:pathData=\"M19.14,12.94c0.04,-0.3 0.06,-0.61 0.06,-0.94c0,-0.32 -0.02,-0.64 -0.07,-0.94l2.03,-1.58c0.18,-0.14 0.23,-0.41 0.12,-0.61l-1.92,-3.32c-0.12,-0.22 -0.37,-0.29 -0.59,-0.22l-2.39,0.96c-0.5,-0.38 -1.03,-0.7 -1.62,-0.94L14.4,2.81c-0.04,-0.24 -0.24,-0.41 -0.48,-0.41h-3.84c-0.24,0 -0.43,0.17 -0.47,0.41L9.25,5.35C8.66,5.59 8.12,5.92 7.63,6.29L5.24,5.33c-0.22,-0.08 -0.47,0 -0.59,0.22L2.74,8.87C2.62,9.08 2.66,9.34 2.86,9.48l2.03,1.58C4.84,11.36 4.8,11.69 4.8,12s0.02,0.64 0.07,0.94l-2.03,1.58c-0.18,0.14 -0.23,0.41 -0.12,0.61l1.92,3.32c0.12,0.22 0.37,0.29 0.59,0.22l2.39,-0.96c0.5,0.38 1.03,0.7 1.62,0.94l0.36,2.54c0.05,0.24 0.24,0.41 0.48,0.41h3.84c0.24,0 0.44,-0.17 0.47,-0.41l0.36,-2.54c0.59,-0.24 1.13,-0.56 1.62,-0.94l2.39,0.96c0.22,0.08 0.47,0 0.59,-0.22l1.92,-3.32c0.12,-0.22 0.07,-0.47 -0.12,-0.61L19.14,12.94zM12,15.6c-1.98,0 -3.6,-1.62 -3.6,-3.6s1.62,-3.6 3.6,-3.6s3.6,1.62 3.6,3.6S13.98,15.6 12,15.6z\"/>\n+</vector>"
  },
  {
    "sha": "07d5da9cbf141911847041df5d7b87f0dd5ef9d4",
    "filename": "app/src/main/res/drawable/ic_launcher_background.xml",
    "status": "added",
    "additions": 170,
    "deletions": 0,
    "changes": 170,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable/ic_launcher_background.xml",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable/ic_launcher_background.xml",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/res/drawable/ic_launcher_background.xml?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,170 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:width=\"108dp\"\n+    android:height=\"108dp\"\n+    android:viewportWidth=\"108\"\n+    android:viewportHeight=\"108\">\n+    <path\n+        android:fillColor=\"#3DDC84\"\n+        android:pathData=\"M0,0h108v108h-108z\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M9,0L9,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,0L19,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M29,0L29,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M39,0L39,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M49,0L49,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M59,0L59,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M69,0L69,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M79,0L79,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M89,0L89,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M99,0L99,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,9L108,9\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,19L108,19\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,29L108,29\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,39L108,39\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,49L108,49\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,59L108,59\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,69L108,69\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,79L108,79\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,89L108,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,99L108,99\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,29L89,29\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,39L89,39\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,49L89,49\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,59L89,59\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,69L89,69\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,79L89,79\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M29,19L29,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M39,19L39,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M49,19L49,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M59,19L59,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M69,19L69,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M79,19L79,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+</vector>"
  },
  {
    "sha": "d0d075a1f76d90fc6f7728d3a26a0f4bdb62badb",
    "filename": "app/src/main/res/drawable/ic_outline_share_24.xml",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/madbulok/AppNotes/blob/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable/ic_outline_share_24.xml",
    "raw_url": "https://github.com/madbulok/AppNotes/raw/6384b1387c12838cb0d27e06701a2d7b3862d2b4/app/src/main/res/drawable/ic_outline_share_24.xml",
    "contents_url": "https://api.github.com/repos/madbulok/AppNotes/contents/app/src/main/res/drawable/ic_outline_share_24.xml?ref=6384b1387c12838cb0d27e06701a2d7b3862d2b4",
    "patch": "@@ -0,0 +1,5 @@\n+<vector android:height=\"24dp\" android:tint=\"#FFFFFF\"\n+    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\n+    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <path android:fillColor=\"@android:color/white\" android:pathData=\"M18,16.08c-0.76,0 -1.44,0.3 -1.96,0.77L8.91,12.7c0.05,-0.23 0.09,-0.46 0.09,-0.7s-0.04,-0.47 -0.09,-0.7l7.05,-4.11c0.54,0.5 1.25,0.81 2.04,0.81 1.66,0 3,-1.34 3,-3s-1.34,-3 -3,-3 -3,1.34 -3,3c0,0.24 0.04,0.47 0.09,0.7L8.04,9.81C7.5,9.31 6.79,9 6,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3c0.79,0 1.5,-0.31 2.04,-0.81l7.12,4.16c-0.05,0.21 -0.08,0.43 -0.08,0.65 0,1.61 1.31,2.92 2.92,2.92s2.92,-1.31 2.92,-2.92c0,-1.61 -1.31,-2.92 -2.92,-2.92zM18,4c0.55,0 1,0.45 1,1s-0.45,1 -1,1 -1,-0.45 -1,-1 0.45,-1 1,-1zM6,13c-0.55,0 -1,-0.45 -1,-1s0.45,-1 1,-1 1,0.45 1,1 -0.45,1 -1,1zM18,20.02c-0.55,0 -1,-0.45 -1,-1s0.45,-1 1,-1 1,0.45 1,1 -0.45,1 -1,1z\"/>\n+</vector>"
  }
]
