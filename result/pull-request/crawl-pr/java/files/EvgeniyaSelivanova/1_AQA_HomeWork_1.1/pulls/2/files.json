[
  {
    "sha": "3f40cc3179a9c8c0f8f3e233f28f9e55e4ea931a",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/EvgeniyaSelivanova/1_AQA_HomeWork_1.1/blob/6a7afe8f33fe64f8923d3cdbb50629a512c0607d/build.gradle",
    "raw_url": "https://github.com/EvgeniyaSelivanova/1_AQA_HomeWork_1.1/raw/6a7afe8f33fe64f8923d3cdbb50629a512c0607d/build.gradle",
    "contents_url": "https://api.github.com/repos/EvgeniyaSelivanova/1_AQA_HomeWork_1.1/contents/build.gradle?ref=6a7afe8f33fe64f8923d3cdbb50629a512c0607d",
    "patch": "@@ -11,9 +11,9 @@ repositories {\n }\n \n dependencies {\n-    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.1'\n+    testImplementation 'org.testng:testng:7.1.0'\n }\n \n test {\n-    useJUnitPlatform()\n+    useTestNG()\n }\n\\ No newline at end of file"
  },
  {
    "sha": "68cd0ec55a697755cfa4cddc1aaea964f6595129",
    "filename": "src/test/java/ru/netology/service/CashbackHackServiceTest.java",
    "status": "modified",
    "additions": 8,
    "deletions": 12,
    "changes": 20,
    "blob_url": "https://github.com/EvgeniyaSelivanova/1_AQA_HomeWork_1.1/blob/6a7afe8f33fe64f8923d3cdbb50629a512c0607d/src/test/java/ru/netology/service/CashbackHackServiceTest.java",
    "raw_url": "https://github.com/EvgeniyaSelivanova/1_AQA_HomeWork_1.1/raw/6a7afe8f33fe64f8923d3cdbb50629a512c0607d/src/test/java/ru/netology/service/CashbackHackServiceTest.java",
    "contents_url": "https://api.github.com/repos/EvgeniyaSelivanova/1_AQA_HomeWork_1.1/contents/src/test/java/ru/netology/service/CashbackHackServiceTest.java?ref=6a7afe8f33fe64f8923d3cdbb50629a512c0607d",
    "patch": "@@ -1,44 +1,40 @@\n package ru.netology.service;\n \n-import org.junit.jupiter.api.Test;\n-\n-import static org.junit.jupiter.api.Assertions.*;\n-\n public class CashbackHackServiceTest {\n \n-    @Test\n+    @org.testng.annotations.Test\n     public void shouldReturn0IfAmount1000() {\n         CashbackHackService service = new CashbackHackService();\n         int amount = 1000;\n         int actual = service.remain(amount);\n         int expected = 0;\n-        assertEquals(expected, actual);\n+        org.testng.Assert.assertEquals(actual, expected);\n     }\n \n-    @Test\n+    @org.testng.annotations.Test\n     public void shouldReturn1000IfAmount0() {\n         CashbackHackService service = new CashbackHackService();\n         int amount = 0;\n         int actual = service.remain(amount);\n         int expected = 1000;\n-        assertEquals(expected, actual);\n+        org.testng.Assert.assertEquals(actual, expected);\n     }\n \n-    @Test\n+    @org.testng.annotations.Test\n     public void shouldReturn500IfAmount500() {\n         CashbackHackService service = new CashbackHackService();\n         int amount = 500;\n         int actual = service.remain(amount);\n         int expected = 500;\n-        assertEquals(expected, actual);\n+        org.testng.Assert.assertEquals(actual, expected);\n     }\n \n-    @Test\n+    @org.testng.annotations.Test\n     public void shouldReturn100IfAmount900() {\n         CashbackHackService service = new CashbackHackService();\n         int amount = 900;\n         int actual = service.remain(amount);\n         int expected = 100;\n-        assertEquals(expected, actual);\n+        org.testng.Assert.assertEquals(actual, expected);\n     }\n }\n\\ No newline at end of file"
  }
]
