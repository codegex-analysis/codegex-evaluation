[
  {
    "sha": "af077c4e45cf88579bc14137ba800e7fc3d954fe",
    "filename": ".jhipster/Country.json",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Country.json",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Country.json",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/.jhipster/Country.json?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,30 @@\n+{\n+  \"name\": \"Country\",\n+  \"fields\": [\n+    {\n+      \"fieldName\": \"countryName\",\n+      \"fieldType\": \"String\"\n+    }\n+  ],\n+  \"relationships\": [\n+    {\n+      \"relationshipType\": \"one-to-one\",\n+      \"otherEntityName\": \"region\",\n+      \"otherEntityRelationshipName\": \"country\",\n+      \"relationshipName\": \"region\",\n+      \"otherEntityField\": \"id\",\n+      \"ownerSide\": true\n+    }\n+  ],\n+  \"changelogDate\": \"20210306094213\",\n+  \"entityTableName\": \"country\",\n+  \"dto\": \"no\",\n+  \"pagination\": \"no\",\n+  \"service\": \"serviceImpl\",\n+  \"jpaMetamodelFiltering\": false,\n+  \"fluentMethods\": true,\n+  \"readOnly\": false,\n+  \"embedded\": false,\n+  \"clientRootFolder\": \"\",\n+  \"applications\": \"*\"\n+}"
  },
  {
    "sha": "0718e0f98947b16204761e8987d89d142f48681b",
    "filename": ".jhipster/Department.json",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Department.json",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Department.json",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/.jhipster/Department.json?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,40 @@\n+{\n+  \"name\": \"Department\",\n+  \"fields\": [\n+    {\n+      \"fieldName\": \"departmentName\",\n+      \"fieldType\": \"String\",\n+      \"fieldValidateRules\": [\n+        \"required\"\n+      ]\n+    }\n+  ],\n+  \"relationships\": [\n+    {\n+      \"relationshipType\": \"one-to-one\",\n+      \"otherEntityName\": \"location\",\n+      \"otherEntityRelationshipName\": \"department\",\n+      \"relationshipName\": \"location\",\n+      \"otherEntityField\": \"id\",\n+      \"ownerSide\": true\n+    },\n+    {\n+      \"relationshipType\": \"one-to-many\",\n+      \"otherEntityName\": \"employee\",\n+      \"otherEntityRelationshipName\": \"department\",\n+      \"javadoc\": \"A relationship\",\n+      \"relationshipName\": \"employee\"\n+    }\n+  ],\n+  \"changelogDate\": \"20210306094413\",\n+  \"entityTableName\": \"department\",\n+  \"dto\": \"no\",\n+  \"pagination\": \"no\",\n+  \"service\": \"serviceImpl\",\n+  \"jpaMetamodelFiltering\": false,\n+  \"fluentMethods\": true,\n+  \"readOnly\": false,\n+  \"embedded\": false,\n+  \"clientRootFolder\": \"\",\n+  \"applications\": \"*\"\n+}"
  },
  {
    "sha": "bc69fe2e98e8c212242b3b5392a4567bfe0a3e72",
    "filename": ".jhipster/Employee.json",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Employee.json",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Employee.json",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/.jhipster/Employee.json?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,69 @@\n+{\n+  \"name\": \"Employee\",\n+  \"fields\": [\n+    {\n+      \"fieldName\": \"firstName\",\n+      \"fieldType\": \"String\",\n+      \"javadoc\": \"The firstname attribute.\"\n+    },\n+    {\n+      \"fieldName\": \"lastName\",\n+      \"fieldType\": \"String\"\n+    },\n+    {\n+      \"fieldName\": \"email\",\n+      \"fieldType\": \"String\"\n+    },\n+    {\n+      \"fieldName\": \"phoneNumber\",\n+      \"fieldType\": \"String\"\n+    },\n+    {\n+      \"fieldName\": \"hireDate\",\n+      \"fieldType\": \"Instant\"\n+    },\n+    {\n+      \"fieldName\": \"salary\",\n+      \"fieldType\": \"Long\"\n+    },\n+    {\n+      \"fieldName\": \"commissionPct\",\n+      \"fieldType\": \"Long\"\n+    }\n+  ],\n+  \"relationships\": [\n+    {\n+      \"relationshipType\": \"one-to-many\",\n+      \"otherEntityName\": \"job\",\n+      \"otherEntityRelationshipName\": \"employee\",\n+      \"relationshipName\": \"job\"\n+    },\n+    {\n+      \"relationshipType\": \"many-to-one\",\n+      \"otherEntityName\": \"employee\",\n+      \"otherEntityRelationshipName\": \"employee\",\n+      \"relationshipName\": \"manager\",\n+      \"otherEntityField\": \"id\"\n+    },\n+    {\n+      \"relationshipType\": \"many-to-one\",\n+      \"otherEntityName\": \"department\",\n+      \"otherEntityRelationshipName\": \"employee\",\n+      \"javadoc\": \"Another side of the same relationship\",\n+      \"relationshipName\": \"department\",\n+      \"otherEntityField\": \"id\"\n+    }\n+  ],\n+  \"changelogDate\": \"20210306094613\",\n+  \"javadoc\": \"The Employee entity.\",\n+  \"entityTableName\": \"employee\",\n+  \"dto\": \"no\",\n+  \"pagination\": \"infinite-scroll\",\n+  \"service\": \"no\",\n+  \"jpaMetamodelFiltering\": false,\n+  \"fluentMethods\": true,\n+  \"readOnly\": false,\n+  \"embedded\": false,\n+  \"clientRootFolder\": \"\",\n+  \"applications\": \"*\"\n+}"
  },
  {
    "sha": "3fac558c59949f7876953e8885ebd2e9b7558914",
    "filename": ".jhipster/Job.json",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Job.json",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Job.json",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/.jhipster/Job.json?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,45 @@\n+{\n+  \"name\": \"Job\",\n+  \"fields\": [\n+    {\n+      \"fieldName\": \"jobTitle\",\n+      \"fieldType\": \"String\"\n+    },\n+    {\n+      \"fieldName\": \"minSalary\",\n+      \"fieldType\": \"Long\"\n+    },\n+    {\n+      \"fieldName\": \"maxSalary\",\n+      \"fieldType\": \"Long\"\n+    }\n+  ],\n+  \"relationships\": [\n+    {\n+      \"relationshipType\": \"many-to-many\",\n+      \"otherEntityName\": \"task\",\n+      \"otherEntityRelationshipName\": \"job\",\n+      \"relationshipName\": \"task\",\n+      \"otherEntityField\": \"title\",\n+      \"ownerSide\": true\n+    },\n+    {\n+      \"relationshipType\": \"many-to-one\",\n+      \"otherEntityName\": \"employee\",\n+      \"otherEntityRelationshipName\": \"job\",\n+      \"relationshipName\": \"employee\",\n+      \"otherEntityField\": \"id\"\n+    }\n+  ],\n+  \"changelogDate\": \"20210306094713\",\n+  \"entityTableName\": \"job\",\n+  \"dto\": \"no\",\n+  \"pagination\": \"pagination\",\n+  \"service\": \"no\",\n+  \"jpaMetamodelFiltering\": false,\n+  \"fluentMethods\": true,\n+  \"readOnly\": false,\n+  \"embedded\": false,\n+  \"clientRootFolder\": \"\",\n+  \"applications\": \"*\"\n+}"
  },
  {
    "sha": "de169b70cbce6530fa140c99b118336f31786903",
    "filename": ".jhipster/JobHistory.json",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/JobHistory.json",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/JobHistory.json",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/.jhipster/JobHistory.json?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,55 @@\n+{\n+  \"name\": \"JobHistory\",\n+  \"fields\": [\n+    {\n+      \"fieldName\": \"startDate\",\n+      \"fieldType\": \"Instant\"\n+    },\n+    {\n+      \"fieldName\": \"endDate\",\n+      \"fieldType\": \"Instant\"\n+    },\n+    {\n+      \"fieldName\": \"language\",\n+      \"fieldType\": \"Language\",\n+      \"fieldValues\": \"FRENCH,ENGLISH,SPANISH\"\n+    }\n+  ],\n+  \"relationships\": [\n+    {\n+      \"relationshipType\": \"one-to-one\",\n+      \"otherEntityName\": \"job\",\n+      \"otherEntityRelationshipName\": \"jobHistory\",\n+      \"relationshipName\": \"job\",\n+      \"otherEntityField\": \"id\",\n+      \"ownerSide\": true\n+    },\n+    {\n+      \"relationshipType\": \"one-to-one\",\n+      \"otherEntityName\": \"department\",\n+      \"otherEntityRelationshipName\": \"jobHistory\",\n+      \"relationshipName\": \"department\",\n+      \"otherEntityField\": \"id\",\n+      \"ownerSide\": true\n+    },\n+    {\n+      \"relationshipType\": \"one-to-one\",\n+      \"otherEntityName\": \"employee\",\n+      \"otherEntityRelationshipName\": \"jobHistory\",\n+      \"relationshipName\": \"employee\",\n+      \"otherEntityField\": \"id\",\n+      \"ownerSide\": true\n+    }\n+  ],\n+  \"changelogDate\": \"20210306094813\",\n+  \"entityTableName\": \"job_history\",\n+  \"dto\": \"no\",\n+  \"pagination\": \"infinite-scroll\",\n+  \"service\": \"serviceImpl\",\n+  \"jpaMetamodelFiltering\": false,\n+  \"fluentMethods\": true,\n+  \"readOnly\": false,\n+  \"embedded\": false,\n+  \"clientRootFolder\": \"\",\n+  \"applications\": \"*\"\n+}"
  },
  {
    "sha": "dcb677158215e293e0c4aec2e17a07139e807ee7",
    "filename": ".jhipster/Location.json",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Location.json",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Location.json",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/.jhipster/Location.json?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,43 @@\n+{\n+  \"name\": \"Location\",\n+  \"fields\": [\n+    {\n+      \"fieldName\": \"streetAddress\",\n+      \"fieldType\": \"String\"\n+    },\n+    {\n+      \"fieldName\": \"postalCode\",\n+      \"fieldType\": \"String\"\n+    },\n+    {\n+      \"fieldName\": \"city\",\n+      \"fieldType\": \"String\"\n+    },\n+    {\n+      \"fieldName\": \"stateProvince\",\n+      \"fieldType\": \"String\"\n+    }\n+  ],\n+  \"relationships\": [\n+    {\n+      \"relationshipType\": \"one-to-one\",\n+      \"otherEntityName\": \"country\",\n+      \"otherEntityRelationshipName\": \"location\",\n+      \"relationshipName\": \"country\",\n+      \"otherEntityField\": \"id\",\n+      \"ownerSide\": true\n+    }\n+  ],\n+  \"changelogDate\": \"20210306094313\",\n+  \"javadoc\": \"not an ignored comment\",\n+  \"entityTableName\": \"location\",\n+  \"dto\": \"no\",\n+  \"pagination\": \"no\",\n+  \"service\": \"serviceImpl\",\n+  \"jpaMetamodelFiltering\": false,\n+  \"fluentMethods\": true,\n+  \"readOnly\": false,\n+  \"embedded\": false,\n+  \"clientRootFolder\": \"\",\n+  \"applications\": \"*\"\n+}"
  },
  {
    "sha": "cdf1f8d23d5ead13b40450f91bfe86996b1c4f1a",
    "filename": ".jhipster/Region.json",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Region.json",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Region.json",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/.jhipster/Region.json?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,21 @@\n+{\n+  \"name\": \"Region\",\n+  \"fields\": [\n+    {\n+      \"fieldName\": \"regionName\",\n+      \"fieldType\": \"String\"\n+    }\n+  ],\n+  \"relationships\": [],\n+  \"changelogDate\": \"20210306094113\",\n+  \"entityTableName\": \"region\",\n+  \"dto\": \"no\",\n+  \"pagination\": \"no\",\n+  \"service\": \"serviceImpl\",\n+  \"jpaMetamodelFiltering\": false,\n+  \"fluentMethods\": true,\n+  \"readOnly\": false,\n+  \"embedded\": false,\n+  \"clientRootFolder\": \"\",\n+  \"applications\": \"*\"\n+}"
  },
  {
    "sha": "e4b062870910846e0f1bb6da48c10986e2117f3a",
    "filename": ".jhipster/Task.json",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Task.json",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/.jhipster/Task.json",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/.jhipster/Task.json?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,35 @@\n+{\n+  \"name\": \"Task\",\n+  \"fields\": [\n+    {\n+      \"fieldName\": \"title\",\n+      \"fieldType\": \"String\"\n+    },\n+    {\n+      \"fieldName\": \"description\",\n+      \"fieldType\": \"String\"\n+    }\n+  ],\n+  \"relationships\": [\n+    {\n+      \"relationshipType\": \"many-to-many\",\n+      \"otherEntityName\": \"job\",\n+      \"otherEntityRelationshipName\": \"task\",\n+      \"relationshipName\": \"job\",\n+      \"otherEntityField\": \"id\",\n+      \"ownerSide\": false\n+    }\n+  ],\n+  \"changelogDate\": \"20210306094513\",\n+  \"javadoc\": \"Task entity.\\\\n@author The JHipster team.\",\n+  \"entityTableName\": \"task\",\n+  \"dto\": \"no\",\n+  \"pagination\": \"no\",\n+  \"service\": \"serviceImpl\",\n+  \"jpaMetamodelFiltering\": false,\n+  \"fluentMethods\": true,\n+  \"readOnly\": false,\n+  \"embedded\": false,\n+  \"clientRootFolder\": \"\",\n+  \"applications\": \"*\"\n+}"
  },
  {
    "sha": "e55c8b59d4317c2481857f9af04058ae0d54f418",
    "filename": "pop.jh",
    "status": "added",
    "additions": 115,
    "deletions": 0,
    "changes": 115,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/pop.jh",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/pop.jh",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/pop.jh?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,115 @@\n+\n+entity Region {\n+\tregionName String\n+}\n+\n+entity Country {\n+\tcountryName String\n+}\n+\n+// an ignored comment\n+/** not an ignored comment */\n+entity Location {\n+\tstreetAddress String,\n+\tpostalCode String,\n+\tcity String,\n+\tstateProvince String\n+}\n+\n+entity Department {\n+\tdepartmentName String required\n+}\n+\n+/**\n+ * Task entity.\n+ * @author The JHipster team.\n+ */\n+entity Task {\n+\ttitle String,\n+\tdescription String\n+}\n+\n+/**\n+ * The Employee entity.\n+ */\n+entity Employee {\n+\t/**\n+\t* The firstname attribute.\n+\t*/\n+\tfirstName String,\n+\tlastName String,\n+\temail String,\n+\tphoneNumber String,\n+\thireDate Instant,\n+\tsalary Long,\n+\tcommissionPct Long\n+}\n+\n+entity Job {\n+\tjobTitle String,\n+\tminSalary Long,\n+\tmaxSalary Long\n+}\n+\n+entity JobHistory {\n+\tstartDate Instant,\n+\tendDate Instant,\n+\tlanguage Language\n+}\n+\n+enum Language {\n+    FRENCH, ENGLISH, SPANISH\n+}\n+\n+relationship OneToOne {\n+\tCountry{region} to Region\n+}\n+\n+relationship OneToOne {\n+\tLocation{country} to Country\n+}\n+\n+relationship OneToOne {\n+\tDepartment{location} to Location\n+}\n+\n+relationship ManyToMany {\n+\tJob{task(title)} to Task{job}\n+}\n+\n+// defining multiple OneToMany relationships with comments\n+relationship OneToMany {\n+\tEmployee to Job{employee},\n+\t/**\n+\t* A relationship\n+\t*/\n+\tDepartment to\n+\t/**\n+\t* Another side of the same relationship\n+\t*/\n+\tEmployee{department}\n+}\n+\n+relationship ManyToOne {\n+\tEmployee{manager} to Employee\n+}\n+\n+// defining multiple oneToOne relationships\n+relationship OneToOne {\n+\tJobHistory{job} to Job,\n+\tJobHistory{department} to Department,\n+\tJobHistory{employee} to Employee\n+}\n+\n+// Set pagination options\n+paginate JobHistory, Employee with infinite-scroll\n+paginate Job with pagination\n+\n+// Use Data Transfer Objects (DTO)\n+// dto * with mapstruct\n+\n+// Set service options to all except few\n+service all with serviceImpl except Employee, Job\n+\n+// Set an angular suffix\n+// angularSuffix * with mySuffix"
  },
  {
    "sha": "4e081d0c49da892cd8c15cc713e33486b5c29b80",
    "filename": "src/main/java/org/mycompany/myapp/domain/Country.java",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Country.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Country.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/domain/Country.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,88 @@\n+package org.mycompany.myapp.domain;\n+\n+\n+import javax.persistence.*;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * A Country.\n+ */\n+@Entity\n+@Table(name = \"country\")\n+public class Country implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"country_name\")\n+    private String countryName;\n+\n+    @OneToOne\n+    @JoinColumn(unique = true)\n+    private Region region;\n+\n+    // jhipster-needle-entity-add-field - JHipster will add fields here\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getCountryName() {\n+        return countryName;\n+    }\n+\n+    public Country countryName(String countryName) {\n+        this.countryName = countryName;\n+        return this;\n+    }\n+\n+    public void setCountryName(String countryName) {\n+        this.countryName = countryName;\n+    }\n+\n+    public Region getRegion() {\n+        return region;\n+    }\n+\n+    public Country region(Region region) {\n+        this.region = region;\n+        return this;\n+    }\n+\n+    public void setRegion(Region region) {\n+        this.region = region;\n+    }\n+    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof Country)) {\n+            return false;\n+        }\n+        return id != null && id.equals(((Country) o).id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31;\n+    }\n+\n+    // prettier-ignore\n+    @Override\n+    public String toString() {\n+        return \"Country{\" +\n+            \"id=\" + getId() +\n+            \", countryName='\" + getCountryName() + \"'\" +\n+            \"}\";\n+    }\n+}"
  },
  {
    "sha": "950ccbf58ee0605faa592b8e949de9b713f18fab",
    "filename": "src/main/java/org/mycompany/myapp/domain/Department.java",
    "status": "added",
    "additions": 125,
    "deletions": 0,
    "changes": 125,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Department.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Department.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/domain/Department.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,125 @@\n+package org.mycompany.myapp.domain;\n+\n+import io.swagger.annotations.ApiModelProperty;\n+\n+import javax.persistence.*;\n+import javax.validation.constraints.*;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * A Department.\n+ */\n+@Entity\n+@Table(name = \"department\")\n+public class Department implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @NotNull\n+    @Column(name = \"department_name\", nullable = false)\n+    private String departmentName;\n+\n+    @OneToOne\n+    @JoinColumn(unique = true)\n+    private Location location;\n+\n+    /**\n+     * A relationship\n+     */\n+    @ApiModelProperty(value = \"A relationship\")\n+    @OneToMany(mappedBy = \"department\")\n+    private Set<Employee> employees = new HashSet<>();\n+\n+    // jhipster-needle-entity-add-field - JHipster will add fields here\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getDepartmentName() {\n+        return departmentName;\n+    }\n+\n+    public Department departmentName(String departmentName) {\n+        this.departmentName = departmentName;\n+        return this;\n+    }\n+\n+    public void setDepartmentName(String departmentName) {\n+        this.departmentName = departmentName;\n+    }\n+\n+    public Location getLocation() {\n+        return location;\n+    }\n+\n+    public Department location(Location location) {\n+        this.location = location;\n+        return this;\n+    }\n+\n+    public void setLocation(Location location) {\n+        this.location = location;\n+    }\n+\n+    public Set<Employee> getEmployees() {\n+        return employees;\n+    }\n+\n+    public Department employees(Set<Employee> employees) {\n+        this.employees = employees;\n+        return this;\n+    }\n+\n+    public Department addEmployee(Employee employee) {\n+        this.employees.add(employee);\n+        employee.setDepartment(this);\n+        return this;\n+    }\n+\n+    public Department removeEmployee(Employee employee) {\n+        this.employees.remove(employee);\n+        employee.setDepartment(null);\n+        return this;\n+    }\n+\n+    public void setEmployees(Set<Employee> employees) {\n+        this.employees = employees;\n+    }\n+    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof Department)) {\n+            return false;\n+        }\n+        return id != null && id.equals(((Department) o).id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31;\n+    }\n+\n+    // prettier-ignore\n+    @Override\n+    public String toString() {\n+        return \"Department{\" +\n+            \"id=\" + getId() +\n+            \", departmentName='\" + getDepartmentName() + \"'\" +\n+            \"}\";\n+    }\n+}"
  },
  {
    "sha": "539f3fc09dc2e1ba644beb050a102c7122fbf06e",
    "filename": "src/main/java/org/mycompany/myapp/domain/Employee.java",
    "status": "added",
    "additions": 250,
    "deletions": 0,
    "changes": 250,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Employee.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Employee.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/domain/Employee.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,250 @@\n+package org.mycompany.myapp.domain;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+\n+import javax.persistence.*;\n+\n+import java.io.Serializable;\n+import java.time.Instant;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * The Employee entity.\n+ */\n+@ApiModel(description = \"The Employee entity.\")\n+@Entity\n+@Table(name = \"employee\")\n+public class Employee implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    /**\n+     * The firstname attribute.\n+     */\n+    @ApiModelProperty(value = \"The firstname attribute.\")\n+    @Column(name = \"first_name\")\n+    private String firstName;\n+\n+    @Column(name = \"last_name\")\n+    private String lastName;\n+\n+    @Column(name = \"email\")\n+    private String email;\n+\n+    @Column(name = \"phone_number\")\n+    private String phoneNumber;\n+\n+    @Column(name = \"hire_date\")\n+    private Instant hireDate;\n+\n+    @Column(name = \"salary\")\n+    private Long salary;\n+\n+    @Column(name = \"commission_pct\")\n+    private Long commissionPct;\n+\n+    @OneToMany(mappedBy = \"employee\")\n+    private Set<Job> jobs = new HashSet<>();\n+\n+    @ManyToOne\n+    @JsonIgnoreProperties(value = \"employees\", allowSetters = true)\n+    private Employee manager;\n+\n+    /**\n+     * Another side of the same relationship\n+     */\n+    @ApiModelProperty(value = \"Another side of the same relationship\")\n+    @ManyToOne\n+    @JsonIgnoreProperties(value = \"employees\", allowSetters = true)\n+    private Department department;\n+\n+    // jhipster-needle-entity-add-field - JHipster will add fields here\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getFirstName() {\n+        return firstName;\n+    }\n+\n+    public Employee firstName(String firstName) {\n+        this.firstName = firstName;\n+        return this;\n+    }\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public String getLastName() {\n+        return lastName;\n+    }\n+\n+    public Employee lastName(String lastName) {\n+        this.lastName = lastName;\n+        return this;\n+    }\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public String getEmail() {\n+        return email;\n+    }\n+\n+    public Employee email(String email) {\n+        this.email = email;\n+        return this;\n+    }\n+\n+    public void setEmail(String email) {\n+        this.email = email;\n+    }\n+\n+    public String getPhoneNumber() {\n+        return phoneNumber;\n+    }\n+\n+    public Employee phoneNumber(String phoneNumber) {\n+        this.phoneNumber = phoneNumber;\n+        return this;\n+    }\n+\n+    public void setPhoneNumber(String phoneNumber) {\n+        this.phoneNumber = phoneNumber;\n+    }\n+\n+    public Instant getHireDate() {\n+        return hireDate;\n+    }\n+\n+    public Employee hireDate(Instant hireDate) {\n+        this.hireDate = hireDate;\n+        return this;\n+    }\n+\n+    public void setHireDate(Instant hireDate) {\n+        this.hireDate = hireDate;\n+    }\n+\n+    public Long getSalary() {\n+        return salary;\n+    }\n+\n+    public Employee salary(Long salary) {\n+        this.salary = salary;\n+        return this;\n+    }\n+\n+    public void setSalary(Long salary) {\n+        this.salary = salary;\n+    }\n+\n+    public Long getCommissionPct() {\n+        return commissionPct;\n+    }\n+\n+    public Employee commissionPct(Long commissionPct) {\n+        this.commissionPct = commissionPct;\n+        return this;\n+    }\n+\n+    public void setCommissionPct(Long commissionPct) {\n+        this.commissionPct = commissionPct;\n+    }\n+\n+    public Set<Job> getJobs() {\n+        return jobs;\n+    }\n+\n+    public Employee jobs(Set<Job> jobs) {\n+        this.jobs = jobs;\n+        return this;\n+    }\n+\n+    public Employee addJob(Job job) {\n+        this.jobs.add(job);\n+        job.setEmployee(this);\n+        return this;\n+    }\n+\n+    public Employee removeJob(Job job) {\n+        this.jobs.remove(job);\n+        job.setEmployee(null);\n+        return this;\n+    }\n+\n+    public void setJobs(Set<Job> jobs) {\n+        this.jobs = jobs;\n+    }\n+\n+    public Employee getManager() {\n+        return manager;\n+    }\n+\n+    public Employee manager(Employee employee) {\n+        this.manager = employee;\n+        return this;\n+    }\n+\n+    public void setManager(Employee employee) {\n+        this.manager = employee;\n+    }\n+\n+    public Department getDepartment() {\n+        return department;\n+    }\n+\n+    public Employee department(Department department) {\n+        this.department = department;\n+        return this;\n+    }\n+\n+    public void setDepartment(Department department) {\n+        this.department = department;\n+    }\n+    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof Employee)) {\n+            return false;\n+        }\n+        return id != null && id.equals(((Employee) o).id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31;\n+    }\n+\n+    // prettier-ignore\n+    @Override\n+    public String toString() {\n+        return \"Employee{\" +\n+            \"id=\" + getId() +\n+            \", firstName='\" + getFirstName() + \"'\" +\n+            \", lastName='\" + getLastName() + \"'\" +\n+            \", email='\" + getEmail() + \"'\" +\n+            \", phoneNumber='\" + getPhoneNumber() + \"'\" +\n+            \", hireDate='\" + getHireDate() + \"'\" +\n+            \", salary=\" + getSalary() +\n+            \", commissionPct=\" + getCommissionPct() +\n+            \"}\";\n+    }\n+}"
  },
  {
    "sha": "23dccec5821e38c6e95effd3c8865043f76b30a0",
    "filename": "src/main/java/org/mycompany/myapp/domain/Job.java",
    "status": "added",
    "additions": 156,
    "deletions": 0,
    "changes": 156,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Job.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Job.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/domain/Job.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,156 @@\n+package org.mycompany.myapp.domain;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import javax.persistence.*;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * A Job.\n+ */\n+@Entity\n+@Table(name = \"job\")\n+public class Job implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"job_title\")\n+    private String jobTitle;\n+\n+    @Column(name = \"min_salary\")\n+    private Long minSalary;\n+\n+    @Column(name = \"max_salary\")\n+    private Long maxSalary;\n+\n+    @ManyToMany\n+    @JoinTable(name = \"job_task\",\n+               joinColumns = @JoinColumn(name = \"job_id\", referencedColumnName = \"id\"),\n+               inverseJoinColumns = @JoinColumn(name = \"task_id\", referencedColumnName = \"id\"))\n+    private Set<Task> tasks = new HashSet<>();\n+\n+    @ManyToOne\n+    @JsonIgnoreProperties(value = \"jobs\", allowSetters = true)\n+    private Employee employee;\n+\n+    // jhipster-needle-entity-add-field - JHipster will add fields here\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getJobTitle() {\n+        return jobTitle;\n+    }\n+\n+    public Job jobTitle(String jobTitle) {\n+        this.jobTitle = jobTitle;\n+        return this;\n+    }\n+\n+    public void setJobTitle(String jobTitle) {\n+        this.jobTitle = jobTitle;\n+    }\n+\n+    public Long getMinSalary() {\n+        return minSalary;\n+    }\n+\n+    public Job minSalary(Long minSalary) {\n+        this.minSalary = minSalary;\n+        return this;\n+    }\n+\n+    public void setMinSalary(Long minSalary) {\n+        this.minSalary = minSalary;\n+    }\n+\n+    public Long getMaxSalary() {\n+        return maxSalary;\n+    }\n+\n+    public Job maxSalary(Long maxSalary) {\n+        this.maxSalary = maxSalary;\n+        return this;\n+    }\n+\n+    public void setMaxSalary(Long maxSalary) {\n+        this.maxSalary = maxSalary;\n+    }\n+\n+    public Set<Task> getTasks() {\n+        return tasks;\n+    }\n+\n+    public Job tasks(Set<Task> tasks) {\n+        this.tasks = tasks;\n+        return this;\n+    }\n+\n+    public Job addTask(Task task) {\n+        this.tasks.add(task);\n+        task.getJobs().add(this);\n+        return this;\n+    }\n+\n+    public Job removeTask(Task task) {\n+        this.tasks.remove(task);\n+        task.getJobs().remove(this);\n+        return this;\n+    }\n+\n+    public void setTasks(Set<Task> tasks) {\n+        this.tasks = tasks;\n+    }\n+\n+    public Employee getEmployee() {\n+        return employee;\n+    }\n+\n+    public Job employee(Employee employee) {\n+        this.employee = employee;\n+        return this;\n+    }\n+\n+    public void setEmployee(Employee employee) {\n+        this.employee = employee;\n+    }\n+    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof Job)) {\n+            return false;\n+        }\n+        return id != null && id.equals(((Job) o).id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31;\n+    }\n+\n+    // prettier-ignore\n+    @Override\n+    public String toString() {\n+        return \"Job{\" +\n+            \"id=\" + getId() +\n+            \", jobTitle='\" + getJobTitle() + \"'\" +\n+            \", minSalary=\" + getMinSalary() +\n+            \", maxSalary=\" + getMaxSalary() +\n+            \"}\";\n+    }\n+}"
  },
  {
    "sha": "d393f56caa9af557b5799c54a0d1a37195a26364",
    "filename": "src/main/java/org/mycompany/myapp/domain/JobHistory.java",
    "status": "added",
    "additions": 160,
    "deletions": 0,
    "changes": 160,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/JobHistory.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/JobHistory.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/domain/JobHistory.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,160 @@\n+package org.mycompany.myapp.domain;\n+\n+\n+import javax.persistence.*;\n+\n+import java.io.Serializable;\n+import java.time.Instant;\n+\n+import org.mycompany.myapp.domain.enumeration.Language;\n+\n+/**\n+ * A JobHistory.\n+ */\n+@Entity\n+@Table(name = \"job_history\")\n+public class JobHistory implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"start_date\")\n+    private Instant startDate;\n+\n+    @Column(name = \"end_date\")\n+    private Instant endDate;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"language\")\n+    private Language language;\n+\n+    @OneToOne\n+    @JoinColumn(unique = true)\n+    private Job job;\n+\n+    @OneToOne\n+    @JoinColumn(unique = true)\n+    private Department department;\n+\n+    @OneToOne\n+    @JoinColumn(unique = true)\n+    private Employee employee;\n+\n+    // jhipster-needle-entity-add-field - JHipster will add fields here\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public Instant getStartDate() {\n+        return startDate;\n+    }\n+\n+    public JobHistory startDate(Instant startDate) {\n+        this.startDate = startDate;\n+        return this;\n+    }\n+\n+    public void setStartDate(Instant startDate) {\n+        this.startDate = startDate;\n+    }\n+\n+    public Instant getEndDate() {\n+        return endDate;\n+    }\n+\n+    public JobHistory endDate(Instant endDate) {\n+        this.endDate = endDate;\n+        return this;\n+    }\n+\n+    public void setEndDate(Instant endDate) {\n+        this.endDate = endDate;\n+    }\n+\n+    public Language getLanguage() {\n+        return language;\n+    }\n+\n+    public JobHistory language(Language language) {\n+        this.language = language;\n+        return this;\n+    }\n+\n+    public void setLanguage(Language language) {\n+        this.language = language;\n+    }\n+\n+    public Job getJob() {\n+        return job;\n+    }\n+\n+    public JobHistory job(Job job) {\n+        this.job = job;\n+        return this;\n+    }\n+\n+    public void setJob(Job job) {\n+        this.job = job;\n+    }\n+\n+    public Department getDepartment() {\n+        return department;\n+    }\n+\n+    public JobHistory department(Department department) {\n+        this.department = department;\n+        return this;\n+    }\n+\n+    public void setDepartment(Department department) {\n+        this.department = department;\n+    }\n+\n+    public Employee getEmployee() {\n+        return employee;\n+    }\n+\n+    public JobHistory employee(Employee employee) {\n+        this.employee = employee;\n+        return this;\n+    }\n+\n+    public void setEmployee(Employee employee) {\n+        this.employee = employee;\n+    }\n+    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof JobHistory)) {\n+            return false;\n+        }\n+        return id != null && id.equals(((JobHistory) o).id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31;\n+    }\n+\n+    // prettier-ignore\n+    @Override\n+    public String toString() {\n+        return \"JobHistory{\" +\n+            \"id=\" + getId() +\n+            \", startDate='\" + getStartDate() + \"'\" +\n+            \", endDate='\" + getEndDate() + \"'\" +\n+            \", language='\" + getLanguage() + \"'\" +\n+            \"}\";\n+    }\n+}"
  },
  {
    "sha": "291b73b8c16d45748f93c7e856479249e129beaf",
    "filename": "src/main/java/org/mycompany/myapp/domain/Location.java",
    "status": "added",
    "additions": 141,
    "deletions": 0,
    "changes": 141,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Location.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Location.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/domain/Location.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,141 @@\n+package org.mycompany.myapp.domain;\n+\n+import io.swagger.annotations.ApiModel;\n+\n+import javax.persistence.*;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * not an ignored comment\n+ */\n+@ApiModel(description = \"not an ignored comment\")\n+@Entity\n+@Table(name = \"location\")\n+public class Location implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"street_address\")\n+    private String streetAddress;\n+\n+    @Column(name = \"postal_code\")\n+    private String postalCode;\n+\n+    @Column(name = \"city\")\n+    private String city;\n+\n+    @Column(name = \"state_province\")\n+    private String stateProvince;\n+\n+    @OneToOne\n+    @JoinColumn(unique = true)\n+    private Country country;\n+\n+    // jhipster-needle-entity-add-field - JHipster will add fields here\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getStreetAddress() {\n+        return streetAddress;\n+    }\n+\n+    public Location streetAddress(String streetAddress) {\n+        this.streetAddress = streetAddress;\n+        return this;\n+    }\n+\n+    public void setStreetAddress(String streetAddress) {\n+        this.streetAddress = streetAddress;\n+    }\n+\n+    public String getPostalCode() {\n+        return postalCode;\n+    }\n+\n+    public Location postalCode(String postalCode) {\n+        this.postalCode = postalCode;\n+        return this;\n+    }\n+\n+    public void setPostalCode(String postalCode) {\n+        this.postalCode = postalCode;\n+    }\n+\n+    public String getCity() {\n+        return city;\n+    }\n+\n+    public Location city(String city) {\n+        this.city = city;\n+        return this;\n+    }\n+\n+    public void setCity(String city) {\n+        this.city = city;\n+    }\n+\n+    public String getStateProvince() {\n+        return stateProvince;\n+    }\n+\n+    public Location stateProvince(String stateProvince) {\n+        this.stateProvince = stateProvince;\n+        return this;\n+    }\n+\n+    public void setStateProvince(String stateProvince) {\n+        this.stateProvince = stateProvince;\n+    }\n+\n+    public Country getCountry() {\n+        return country;\n+    }\n+\n+    public Location country(Country country) {\n+        this.country = country;\n+        return this;\n+    }\n+\n+    public void setCountry(Country country) {\n+        this.country = country;\n+    }\n+    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof Location)) {\n+            return false;\n+        }\n+        return id != null && id.equals(((Location) o).id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31;\n+    }\n+\n+    // prettier-ignore\n+    @Override\n+    public String toString() {\n+        return \"Location{\" +\n+            \"id=\" + getId() +\n+            \", streetAddress='\" + getStreetAddress() + \"'\" +\n+            \", postalCode='\" + getPostalCode() + \"'\" +\n+            \", city='\" + getCity() + \"'\" +\n+            \", stateProvince='\" + getStateProvince() + \"'\" +\n+            \"}\";\n+    }\n+}"
  },
  {
    "sha": "2d771cad40ea04f240cd45db866b6f5fc65bb8ef",
    "filename": "src/main/java/org/mycompany/myapp/domain/Region.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Region.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Region.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/domain/Region.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,71 @@\n+package org.mycompany.myapp.domain;\n+\n+\n+import javax.persistence.*;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * A Region.\n+ */\n+@Entity\n+@Table(name = \"region\")\n+public class Region implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"region_name\")\n+    private String regionName;\n+\n+    // jhipster-needle-entity-add-field - JHipster will add fields here\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getRegionName() {\n+        return regionName;\n+    }\n+\n+    public Region regionName(String regionName) {\n+        this.regionName = regionName;\n+        return this;\n+    }\n+\n+    public void setRegionName(String regionName) {\n+        this.regionName = regionName;\n+    }\n+    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof Region)) {\n+            return false;\n+        }\n+        return id != null && id.equals(((Region) o).id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31;\n+    }\n+\n+    // prettier-ignore\n+    @Override\n+    public String toString() {\n+        return \"Region{\" +\n+            \"id=\" + getId() +\n+            \", regionName='\" + getRegionName() + \"'\" +\n+            \"}\";\n+    }\n+}"
  },
  {
    "sha": "4a9d9748b89a2aef3334a5e13b7d587b83d9625d",
    "filename": "src/main/java/org/mycompany/myapp/domain/Task.java",
    "status": "added",
    "additions": 122,
    "deletions": 0,
    "changes": 122,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Task.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/Task.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/domain/Task.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,122 @@\n+package org.mycompany.myapp.domain;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import io.swagger.annotations.ApiModel;\n+\n+import javax.persistence.*;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * Task entity.\\n@author The JHipster team.\n+ */\n+@ApiModel(description = \"Task entity.\\n@author The JHipster team.\")\n+@Entity\n+@Table(name = \"task\")\n+public class Task implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @Column(name = \"description\")\n+    private String description;\n+\n+    @ManyToMany(mappedBy = \"tasks\")\n+    @JsonIgnore\n+    private Set<Job> jobs = new HashSet<>();\n+\n+    // jhipster-needle-entity-add-field - JHipster will add fields here\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    public Task title(String title) {\n+        this.title = title;\n+        return this;\n+    }\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public Task description(String description) {\n+        this.description = description;\n+        return this;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public Set<Job> getJobs() {\n+        return jobs;\n+    }\n+\n+    public Task jobs(Set<Job> jobs) {\n+        this.jobs = jobs;\n+        return this;\n+    }\n+\n+    public Task addJob(Job job) {\n+        this.jobs.add(job);\n+        job.getTasks().add(this);\n+        return this;\n+    }\n+\n+    public Task removeJob(Job job) {\n+        this.jobs.remove(job);\n+        job.getTasks().remove(this);\n+        return this;\n+    }\n+\n+    public void setJobs(Set<Job> jobs) {\n+        this.jobs = jobs;\n+    }\n+    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof Task)) {\n+            return false;\n+        }\n+        return id != null && id.equals(((Task) o).id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31;\n+    }\n+\n+    // prettier-ignore\n+    @Override\n+    public String toString() {\n+        return \"Task{\" +\n+            \"id=\" + getId() +\n+            \", title='\" + getTitle() + \"'\" +\n+            \", description='\" + getDescription() + \"'\" +\n+            \"}\";\n+    }\n+}"
  },
  {
    "sha": "6d7b90d09e4215ba90ba8cd3f335aefe4a2b98f4",
    "filename": "src/main/java/org/mycompany/myapp/domain/enumeration/Language.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/enumeration/Language.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/domain/enumeration/Language.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/domain/enumeration/Language.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,8 @@\n+package org.mycompany.myapp.domain.enumeration;\n+\n+/**\n+ * The Language enumeration.\n+ */\n+public enum Language {\n+    FRENCH, ENGLISH, SPANISH\n+}"
  },
  {
    "sha": "509d0dc0e1bf395ee52e653c0a3312016dba6781",
    "filename": "src/main/java/org/mycompany/myapp/repository/CountryRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/CountryRepository.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/CountryRepository.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/repository/CountryRepository.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,14 @@\n+package org.mycompany.myapp.repository;\n+\n+import org.mycompany.myapp.domain.Country;\n+\n+import org.springframework.data.jpa.repository.*;\n+import org.springframework.stereotype.Repository;\n+\n+/**\n+ * Spring Data  repository for the Country entity.\n+ */\n+@SuppressWarnings(\"unused\")\n+@Repository\n+public interface CountryRepository extends JpaRepository<Country, Long> {\n+}"
  },
  {
    "sha": "c63b7899fc4e5b0e005d66128aca81221261b4dd",
    "filename": "src/main/java/org/mycompany/myapp/repository/DepartmentRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/DepartmentRepository.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/DepartmentRepository.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/repository/DepartmentRepository.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,14 @@\n+package org.mycompany.myapp.repository;\n+\n+import org.mycompany.myapp.domain.Department;\n+\n+import org.springframework.data.jpa.repository.*;\n+import org.springframework.stereotype.Repository;\n+\n+/**\n+ * Spring Data  repository for the Department entity.\n+ */\n+@SuppressWarnings(\"unused\")\n+@Repository\n+public interface DepartmentRepository extends JpaRepository<Department, Long> {\n+}"
  },
  {
    "sha": "e6ed5f98adfc251ff5836764762b70dc740bd5d1",
    "filename": "src/main/java/org/mycompany/myapp/repository/EmployeeRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/EmployeeRepository.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/EmployeeRepository.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/repository/EmployeeRepository.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,14 @@\n+package org.mycompany.myapp.repository;\n+\n+import org.mycompany.myapp.domain.Employee;\n+\n+import org.springframework.data.jpa.repository.*;\n+import org.springframework.stereotype.Repository;\n+\n+/**\n+ * Spring Data  repository for the Employee entity.\n+ */\n+@SuppressWarnings(\"unused\")\n+@Repository\n+public interface EmployeeRepository extends JpaRepository<Employee, Long> {\n+}"
  },
  {
    "sha": "365d2216a7245c9b18b2dd0eb174cd2fed6e487f",
    "filename": "src/main/java/org/mycompany/myapp/repository/JobHistoryRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/JobHistoryRepository.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/JobHistoryRepository.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/repository/JobHistoryRepository.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,14 @@\n+package org.mycompany.myapp.repository;\n+\n+import org.mycompany.myapp.domain.JobHistory;\n+\n+import org.springframework.data.jpa.repository.*;\n+import org.springframework.stereotype.Repository;\n+\n+/**\n+ * Spring Data  repository for the JobHistory entity.\n+ */\n+@SuppressWarnings(\"unused\")\n+@Repository\n+public interface JobHistoryRepository extends JpaRepository<JobHistory, Long> {\n+}"
  },
  {
    "sha": "3280727fd5d4dd8c1d204d0f35dd168d66b61769",
    "filename": "src/main/java/org/mycompany/myapp/repository/JobRepository.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/JobRepository.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/JobRepository.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/repository/JobRepository.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,29 @@\n+package org.mycompany.myapp.repository;\n+\n+import org.mycompany.myapp.domain.Job;\n+\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.data.jpa.repository.*;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * Spring Data  repository for the Job entity.\n+ */\n+@Repository\n+public interface JobRepository extends JpaRepository<Job, Long> {\n+\n+    @Query(value = \"select distinct job from Job job left join fetch job.tasks\",\n+        countQuery = \"select count(distinct job) from Job job\")\n+    Page<Job> findAllWithEagerRelationships(Pageable pageable);\n+\n+    @Query(\"select distinct job from Job job left join fetch job.tasks\")\n+    List<Job> findAllWithEagerRelationships();\n+\n+    @Query(\"select job from Job job left join fetch job.tasks where job.id =:id\")\n+    Optional<Job> findOneWithEagerRelationships(@Param(\"id\") Long id);\n+}"
  },
  {
    "sha": "10fc155fd47bbe953dbe4484565e434b3fba667b",
    "filename": "src/main/java/org/mycompany/myapp/repository/LocationRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/LocationRepository.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/LocationRepository.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/repository/LocationRepository.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,14 @@\n+package org.mycompany.myapp.repository;\n+\n+import org.mycompany.myapp.domain.Location;\n+\n+import org.springframework.data.jpa.repository.*;\n+import org.springframework.stereotype.Repository;\n+\n+/**\n+ * Spring Data  repository for the Location entity.\n+ */\n+@SuppressWarnings(\"unused\")\n+@Repository\n+public interface LocationRepository extends JpaRepository<Location, Long> {\n+}"
  },
  {
    "sha": "8433c7d93dbbe1fec6283b671c8f169c1c30aaf1",
    "filename": "src/main/java/org/mycompany/myapp/repository/RegionRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/RegionRepository.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/RegionRepository.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/repository/RegionRepository.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,14 @@\n+package org.mycompany.myapp.repository;\n+\n+import org.mycompany.myapp.domain.Region;\n+\n+import org.springframework.data.jpa.repository.*;\n+import org.springframework.stereotype.Repository;\n+\n+/**\n+ * Spring Data  repository for the Region entity.\n+ */\n+@SuppressWarnings(\"unused\")\n+@Repository\n+public interface RegionRepository extends JpaRepository<Region, Long> {\n+}"
  },
  {
    "sha": "148fd0e62bc62d1b205615a0d377b468c5bbfaa2",
    "filename": "src/main/java/org/mycompany/myapp/repository/TaskRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/TaskRepository.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/repository/TaskRepository.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/repository/TaskRepository.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,14 @@\n+package org.mycompany.myapp.repository;\n+\n+import org.mycompany.myapp.domain.Task;\n+\n+import org.springframework.data.jpa.repository.*;\n+import org.springframework.stereotype.Repository;\n+\n+/**\n+ * Spring Data  repository for the Task entity.\n+ */\n+@SuppressWarnings(\"unused\")\n+@Repository\n+public interface TaskRepository extends JpaRepository<Task, Long> {\n+}"
  },
  {
    "sha": "c1f46df79579c5dc81557a0d33665e86ad7a2dc4",
    "filename": "src/main/java/org/mycompany/myapp/service/CountryService.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/service/CountryService.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/service/CountryService.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/service/CountryService.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,43 @@\n+package org.mycompany.myapp.service;\n+\n+import org.mycompany.myapp.domain.Country;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * Service Interface for managing {@link Country}.\n+ */\n+public interface CountryService {\n+\n+    /**\n+     * Save a country.\n+     *\n+     * @param country the entity to save.\n+     * @return the persisted entity.\n+     */\n+    Country save(Country country);\n+\n+    /**\n+     * Get all the countries.\n+     *\n+     * @return the list of entities.\n+     */\n+    List<Country> findAll();\n+\n+\n+    /**\n+     * Get the \"id\" country.\n+     *\n+     * @param id the id of the entity.\n+     * @return the entity.\n+     */\n+    Optional<Country> findOne(Long id);\n+\n+    /**\n+     * Delete the \"id\" country.\n+     *\n+     * @param id the id of the entity.\n+     */\n+    void delete(Long id);\n+}"
  },
  {
    "sha": "07218934f094c65198155af0c9439482f457af4c",
    "filename": "src/main/java/org/mycompany/myapp/service/DepartmentService.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/service/DepartmentService.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/service/DepartmentService.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/service/DepartmentService.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,43 @@\n+package org.mycompany.myapp.service;\n+\n+import org.mycompany.myapp.domain.Department;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * Service Interface for managing {@link Department}.\n+ */\n+public interface DepartmentService {\n+\n+    /**\n+     * Save a department.\n+     *\n+     * @param department the entity to save.\n+     * @return the persisted entity.\n+     */\n+    Department save(Department department);\n+\n+    /**\n+     * Get all the departments.\n+     *\n+     * @return the list of entities.\n+     */\n+    List<Department> findAll();\n+\n+\n+    /**\n+     * Get the \"id\" department.\n+     *\n+     * @param id the id of the entity.\n+     * @return the entity.\n+     */\n+    Optional<Department> findOne(Long id);\n+\n+    /**\n+     * Delete the \"id\" department.\n+     *\n+     * @param id the id of the entity.\n+     */\n+    void delete(Long id);\n+}"
  },
  {
    "sha": "8798c368715369ae6bbb74e9f8eb52612e346501",
    "filename": "src/main/java/org/mycompany/myapp/service/JobHistoryService.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/service/JobHistoryService.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/service/JobHistoryService.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/service/JobHistoryService.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,46 @@\n+package org.mycompany.myapp.service;\n+\n+import org.mycompany.myapp.domain.JobHistory;\n+\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Service Interface for managing {@link JobHistory}.\n+ */\n+public interface JobHistoryService {\n+\n+    /**\n+     * Save a jobHistory.\n+     *\n+     * @param jobHistory the entity to save.\n+     * @return the persisted entity.\n+     */\n+    JobHistory save(JobHistory jobHistory);\n+\n+    /**\n+     * Get all the jobHistories.\n+     *\n+     * @param pageable the pagination information.\n+     * @return the list of entities.\n+     */\n+    Page<JobHistory> findAll(Pageable pageable);\n+\n+\n+    /**\n+     * Get the \"id\" jobHistory.\n+     *\n+     * @param id the id of the entity.\n+     * @return the entity.\n+     */\n+    Optional<JobHistory> findOne(Long id);\n+\n+    /**\n+     * Delete the \"id\" jobHistory.\n+     *\n+     * @param id the id of the entity.\n+     */\n+    void delete(Long id);\n+}"
  },
  {
    "sha": "d33f0fa727a3883ae59ee216d897da532e757cc0",
    "filename": "src/main/java/org/mycompany/myapp/service/LocationService.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/blob/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/service/LocationService.java",
    "raw_url": "https://github.com/VazgenLevonyan/jhipster-sample-app/raw/881dc2e37944b6eb70688ecfa6342d08210999fb/src/main/java/org/mycompany/myapp/service/LocationService.java",
    "contents_url": "https://api.github.com/repos/VazgenLevonyan/jhipster-sample-app/contents/src/main/java/org/mycompany/myapp/service/LocationService.java?ref=881dc2e37944b6eb70688ecfa6342d08210999fb",
    "patch": "@@ -0,0 +1,43 @@\n+package org.mycompany.myapp.service;\n+\n+import org.mycompany.myapp.domain.Location;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * Service Interface for managing {@link Location}.\n+ */\n+public interface LocationService {\n+\n+    /**\n+     * Save a location.\n+     *\n+     * @param location the entity to save.\n+     * @return the persisted entity.\n+     */\n+    Location save(Location location);\n+\n+    /**\n+     * Get all the locations.\n+     *\n+     * @return the list of entities.\n+     */\n+    List<Location> findAll();\n+\n+\n+    /**\n+     * Get the \"id\" location.\n+     *\n+     * @param id the id of the entity.\n+     * @return the entity.\n+     */\n+    Optional<Location> findOne(Long id);\n+\n+    /**\n+     * Delete the \"id\" location.\n+     *\n+     * @param id the id of the entity.\n+     */\n+    void delete(Long id);\n+}"
  }
]
