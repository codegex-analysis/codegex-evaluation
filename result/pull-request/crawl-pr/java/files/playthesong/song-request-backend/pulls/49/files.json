[
  {
    "sha": "649e6d30544d4944ee727cb61f0c23783da96b0d",
    "filename": "scripts/deploy.sh",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/scripts/deploy.sh",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/scripts/deploy.sh",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/scripts/deploy.sh?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -1,6 +1,7 @@\n #!/bin/bash\n \n REPOSITORY=/home/ubuntu/app/songrequest\n+APPLICATION_PROPERTIES=/home/ubuntu/app/\n PROJECT_NAME=song-request\n \n echo \"> Build 파일 복사\"\n@@ -9,7 +10,7 @@ cp $REPOSITORY/zip/*.jar $REPOSITORY/\n \n echo \"> 현재 구동 중인 애플리케이션 pid 확인\"\n \n-CURRENT_PID=$(pgrep -fl song-request | grep jar | awk '{print $1}')\n+CURRENT_PID=$(pgrep -fl song-request | grep java | awk '{print $1}')\n \n echo \"현재 구동 중인 애플리케이션 pid : $CURRENT_PID\"\n \n@@ -18,7 +19,8 @@ if [ -z \"$CURRENT_PID\" ]; then\n else\n   echo \"> kill -15 $CURRENT_PID\"\n   kill -15 $CURRENT_PID\n-  sleep 5\n+  sleep 10\n+  echo \"애플리케이션 종료 확인 pid : $CURRENT_PID\"\n fi\n \n echo \"> 새 애플리케이션 배포\"\n@@ -34,5 +36,6 @@ chmod +x $JAR_NAME\n echo \"> $JAR_NAME 실행\"\n \n nohup java -jar \\\n+  -Dspring.config.location=$APPLICATION_PROPERTIES \\\n   -Dspring.profiles.active=prod \\\n   $JAR_NAME > $REPOSITORY/nohup.out 2>&1 &"
  },
  {
    "sha": "91ecb6e6faf632ecf81d7770e6a12b1e22cf8e4b",
    "filename": "src/main/java/com/requestrealpiano/songrequest/SongRequestApplication.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/SongRequestApplication.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/SongRequestApplication.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/SongRequestApplication.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -2,6 +2,7 @@\n \n import com.requestrealpiano.songrequest.config.searchapi.LastFmProperties;\n import com.requestrealpiano.songrequest.config.searchapi.ManiaDbProperties;\n+import com.requestrealpiano.songrequest.security.jwt.JwtProperties;\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n import org.springframework.boot.context.properties.EnableConfigurationProperties;\n@@ -11,7 +12,7 @@\n \n import static com.requestrealpiano.songrequest.global.constant.JpaProperties.ASIA_SEOUL;\n \n-@EnableConfigurationProperties(value = {ManiaDbProperties.class, LastFmProperties.class})\n+@EnableConfigurationProperties(value = {JwtProperties.class, ManiaDbProperties.class, LastFmProperties.class})\n @SpringBootApplication\n public class SongRequestApplication {\n "
  },
  {
    "sha": "c807ade15a081f12bdeaf2bec630a356a94f97d8",
    "filename": "src/main/java/com/requestrealpiano/songrequest/config/security/SecurityConfig.java",
    "status": "removed",
    "additions": 0,
    "deletions": 21,
    "changes": 21,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/e67dbce9294f9e5af658305b045bc98ef475bc54/src/main/java/com/requestrealpiano/songrequest/config/security/SecurityConfig.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/e67dbce9294f9e5af658305b045bc98ef475bc54/src/main/java/com/requestrealpiano/songrequest/config/security/SecurityConfig.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/config/security/SecurityConfig.java?ref=e67dbce9294f9e5af658305b045bc98ef475bc54",
    "patch": "@@ -1,21 +0,0 @@\n-package com.requestrealpiano.songrequest.config.security;\n-\n-import org.springframework.context.annotation.Configuration;\n-import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n-import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n-import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n-\n-@Configuration\n-@EnableWebSecurity\n-public class SecurityConfig extends WebSecurityConfigurerAdapter {\n-\n-    @Override\n-    protected void configure(HttpSecurity http) throws Exception {\n-        http.authorizeRequests()\n-            .antMatchers(\"/**\").permitAll()\n-            .anyRequest().authenticated();\n-\n-        http.csrf()\n-            .disable();\n-    }\n-}"
  },
  {
    "sha": "cefe678bc42a3aa9a5406e0c71841d59fe2c4dfe",
    "filename": "src/main/java/com/requestrealpiano/songrequest/config/web/WebConfig.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/config/web/WebConfig.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/config/web/WebConfig.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/config/web/WebConfig.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -3,6 +3,7 @@\n import org.springframework.context.annotation.Configuration;\n import org.springframework.http.MediaType;\n import org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer;\n+import org.springframework.web.servlet.config.annotation.CorsRegistry;\n import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n \n @Configuration\n@@ -12,4 +13,14 @@\n     public void configureContentNegotiation(ContentNegotiationConfigurer configurer) {\n         configurer.defaultContentType(MediaType.APPLICATION_JSON);\n     }\n+\n+    @Override\n+    public void addCorsMappings(CorsRegistry registry) {\n+        registry.addMapping(\"/**\")\n+                .allowedOrigins(\"*\")\n+                .allowedMethods(\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"OPTIONS\")\n+                .allowedHeaders(\"*\")\n+                .exposedHeaders(\"Authorization\")\n+                .allowCredentials(true);\n+    }\n }"
  },
  {
    "sha": "54e88f373095982770997671c09d90dbece9eecf",
    "filename": "src/main/java/com/requestrealpiano/songrequest/controller/AccountController.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/controller/AccountController.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/controller/AccountController.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/controller/AccountController.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,24 @@\n+package com.requestrealpiano.songrequest.controller;\n+\n+import com.requestrealpiano.songrequest.service.AccountService;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+\n+@RequiredArgsConstructor\n+@RestController\n+@RequestMapping(\"/api/accounts\")\n+public class AccountController {\n+\n+    private final AccountService accountService;\n+\n+    @GetMapping(\"/auth\")\n+    public ResponseEntity<Void> generateToken(@RequestHeader HttpHeaders httpHeaders) {\n+        String jwtToken = accountService.generateJwtToken(httpHeaders.getFirst(HttpHeaders.AUTHORIZATION));\n+        HttpHeaders responseHeaders = new HttpHeaders();\n+        responseHeaders.add(HttpHeaders.AUTHORIZATION, jwtToken);\n+        return new ResponseEntity<>(responseHeaders, HttpStatus.NO_CONTENT);\n+    }\n+}"
  },
  {
    "sha": "53a2b97ae1e008c4cecf4f4fc412600ff9ab4e69",
    "filename": "src/main/java/com/requestrealpiano/songrequest/controller/LetterController.java",
    "status": "modified",
    "additions": 11,
    "deletions": 4,
    "changes": 15,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/controller/LetterController.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/controller/LetterController.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/controller/LetterController.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -3,14 +3,18 @@\n import com.requestrealpiano.songrequest.domain.letter.request.NewLetterRequest;\n import com.requestrealpiano.songrequest.domain.letter.response.LetterResponse;\n import com.requestrealpiano.songrequest.global.response.ApiResponse;\n+import com.requestrealpiano.songrequest.global.response.StatusCode;\n import com.requestrealpiano.songrequest.service.LetterService;\n import lombok.RequiredArgsConstructor;\n+import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.*;\n \n import javax.validation.Valid;\n import java.util.List;\n \n-import static com.requestrealpiano.songrequest.global.response.ApiResponse.OK;\n+import static com.requestrealpiano.songrequest.global.response.ApiResponse.SUCCESS;\n+import static com.requestrealpiano.songrequest.global.response.StatusCode.CREATED;\n+import static com.requestrealpiano.songrequest.global.response.StatusCode.OK;\n \n @RequiredArgsConstructor\n @RestController\n@@ -19,21 +23,24 @@\n \n     private final LetterService letterService;\n \n+    @ResponseStatus(HttpStatus.OK)\n     @GetMapping\n     public ApiResponse<List<LetterResponse>> findAll() {\n         List<LetterResponse> letters = letterService.findAllLetters();\n-        return OK(letters);\n+        return SUCCESS(OK, letters);\n     }\n \n+    @ResponseStatus(HttpStatus.OK)\n     @GetMapping(\"/{id}\")\n     public ApiResponse<LetterResponse> findById(@PathVariable Long id) {\n         LetterResponse letter = letterService.findLetter(id);\n-        return OK(letter);\n+        return SUCCESS(OK, letter);\n     }\n \n+    @ResponseStatus(HttpStatus.CREATED)\n     @PostMapping\n     public ApiResponse<LetterResponse> createNew(@RequestBody @Valid NewLetterRequest newLetterRequest) {\n         LetterResponse newLetter = letterService.createNewLetter(newLetterRequest);\n-        return OK(newLetter);\n+        return SUCCESS(CREATED, newLetter);\n     }\n }"
  },
  {
    "sha": "b896f6e6e5ba051ef236abb76aac76c7e7df305b",
    "filename": "src/main/java/com/requestrealpiano/songrequest/controller/SongController.java",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/controller/SongController.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/controller/SongController.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/controller/SongController.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -2,18 +2,18 @@\n \n import com.requestrealpiano.songrequest.domain.song.searchapi.response.SearchApiResponse;\n import com.requestrealpiano.songrequest.global.response.ApiResponse;\n+import com.requestrealpiano.songrequest.global.response.StatusCode;\n import com.requestrealpiano.songrequest.service.SongService;\n import lombok.RequiredArgsConstructor;\n+import org.springframework.http.HttpStatus;\n import org.springframework.validation.annotation.Validated;\n-import org.springframework.web.bind.annotation.GetMapping;\n-import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.web.bind.annotation.RequestParam;\n-import org.springframework.web.bind.annotation.RestController;\n+import org.springframework.web.bind.annotation.*;\n \n import javax.validation.constraints.Size;\n \n import static com.requestrealpiano.songrequest.global.constant.ValidationCondition.*;\n-import static com.requestrealpiano.songrequest.global.response.ApiResponse.OK;\n+import static com.requestrealpiano.songrequest.global.response.ApiResponse.SUCCESS;\n+import static com.requestrealpiano.songrequest.global.response.StatusCode.OK;\n \n @RequiredArgsConstructor\n @Validated\n@@ -23,12 +23,13 @@\n \n     private final SongService songService;\n \n+    @ResponseStatus(HttpStatus.OK)\n     @GetMapping\n     public ApiResponse<SearchApiResponse> search(@RequestParam(defaultValue = \"artist\") @Size(max = ARTIST_MAX)\n                                                  String artist,\n                                                  @RequestParam(defaultValue = \"title\") @Size(max = TITLE_MAX)\n                                                  String title) {\n         SearchApiResponse searchApiResponse = songService.searchSong(artist, title);\n-        return OK(searchApiResponse);\n+        return SUCCESS(OK, searchApiResponse);\n     }\n }"
  },
  {
    "sha": "fbc818528264fc595e326a64c7219fcd3d56a15a",
    "filename": "src/main/java/com/requestrealpiano/songrequest/domain/account/Account.java",
    "status": "modified",
    "additions": 27,
    "deletions": 5,
    "changes": 32,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/domain/account/Account.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/domain/account/Account.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/domain/account/Account.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -1,5 +1,6 @@\n package com.requestrealpiano.songrequest.domain.account;\n \n+import com.requestrealpiano.songrequest.security.oauth.OAuthAttributes;\n import com.requestrealpiano.songrequest.domain.base.BaseTimeEntity;\n import com.requestrealpiano.songrequest.domain.letter.Letter;\n import lombok.AccessLevel;\n@@ -8,9 +9,6 @@\n import lombok.NoArgsConstructor;\n \n import javax.persistence.*;\n-import java.time.LocalDate;\n-import java.time.LocalDateTime;\n-import java.time.ZoneId;\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -25,7 +23,7 @@\n     private Long id;\n \n     @Column(name = \"google_oauth_id\")\n-    private Long googleOauthId;\n+    private String googleOauthId;\n \n     private String name;\n \n@@ -44,12 +42,36 @@\n     private List<Letter> letters = new ArrayList<>();\n \n     @Builder\n-    private Account(Long googleOauthId, String name, String email, Role role, String avatarUrl, Integer requestCount) {\n+    private Account(String googleOauthId, String name, String email, Role role, String avatarUrl, Integer requestCount) {\n         this.googleOauthId = googleOauthId;\n         this.name = name;\n         this.email = email;\n         this.role = role;\n         this.avatarUrl = avatarUrl;\n         this.requestCount = requestCount;\n     }\n+\n+    public String getRoleKey() { return role.getKey(); }\n+\n+    public String getRoleValue() {\n+        return role.getValue();\n+    }\n+\n+    public Account updateProfile(OAuthAttributes attributes) {\n+        this.name = attributes.getName();\n+        this.email = attributes.getEmail();\n+        this.avatarUrl = attributes.getAvatarUrl();\n+        return this;\n+    }\n+\n+    public static Account from(OAuthAttributes oAuthAttributes) {\n+        return Account.builder()\n+                      .googleOauthId(oAuthAttributes.getGoogleOauthId())\n+                      .name(oAuthAttributes.getName())\n+                      .email(oAuthAttributes.getEmail())\n+                      .role(Role.MEMBER)\n+                      .avatarUrl(oAuthAttributes.getAvatarUrl())\n+                      .requestCount(0)\n+                      .build();\n+    }\n }"
  },
  {
    "sha": "2e82c045bc58a3cf79b966cabb5da170a260bfff",
    "filename": "src/main/java/com/requestrealpiano/songrequest/domain/account/AccountRepository.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/domain/account/AccountRepository.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/domain/account/AccountRepository.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/domain/account/AccountRepository.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -2,5 +2,9 @@\n \n import org.springframework.data.jpa.repository.JpaRepository;\n \n+import java.util.Optional;\n+\n public interface AccountRepository extends JpaRepository<Account, Long> {\n+\n+    Optional<Account> findByEmail(String email);\n }"
  },
  {
    "sha": "c64717aa5b21209393688afe8a1fc8381c49152e",
    "filename": "src/main/java/com/requestrealpiano/songrequest/global/error/GlobalExceptionHandler.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/GlobalExceptionHandler.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/GlobalExceptionHandler.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/global/error/GlobalExceptionHandler.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -1,6 +1,7 @@\n package com.requestrealpiano.songrequest.global.error;\n \n import com.requestrealpiano.songrequest.global.error.exception.BusinessException;\n+import com.requestrealpiano.songrequest.global.error.exception.JwtValidationException;\n import com.requestrealpiano.songrequest.global.error.exception.ParsingFailedException;\n import com.requestrealpiano.songrequest.global.error.response.ErrorCode;\n import com.requestrealpiano.songrequest.global.error.response.ErrorResponse;\n@@ -39,6 +40,14 @@\n         return new ResponseEntity<>(errorResponse, HttpStatus.METHOD_NOT_ALLOWED);\n     }\n \n+    @ExceptionHandler(JwtValidationException.class)\n+    protected ResponseEntity<ErrorResponse> handleJwtValidationException(JwtValidationException exception) {\n+        log.error(\"handleJwtValidationException\", exception);\n+        ErrorCode errorCode = exception.getErrorCode();\n+        ErrorResponse errorResponse = ErrorResponse.from(errorCode);\n+        return new ResponseEntity<>(errorResponse, HttpStatus.valueOf(errorResponse.getStatusCode()));\n+    }\n+\n     @ExceptionHandler(ParsingFailedException.class)\n     protected ResponseEntity<ErrorResponse> handleParsingFailedException(ParsingFailedException exception) {\n         log.error(\"handleJsonProcessingException\", exception);"
  },
  {
    "sha": "3903fd7c36d6f2e300dfff9ab0de54fa45c18a1d",
    "filename": "src/main/java/com/requestrealpiano/songrequest/global/error/exception/JwtValidationException.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/exception/JwtValidationException.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/exception/JwtValidationException.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/global/error/exception/JwtValidationException.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,15 @@\n+package com.requestrealpiano.songrequest.global.error.exception;\n+\n+import com.requestrealpiano.songrequest.global.error.response.ErrorCode;\n+import lombok.Getter;\n+\n+@Getter\n+public class JwtValidationException extends RuntimeException {\n+\n+    private final ErrorCode errorCode;\n+\n+    public JwtValidationException(ErrorCode errorCode) {\n+        super(errorCode.getMessage());\n+        this.errorCode = errorCode;\n+    }\n+}"
  },
  {
    "sha": "a8bb2851f9fd1ce839f2c890bebd023ef3ce4b1c",
    "filename": "src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtExpirationException.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtExpirationException.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtExpirationException.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtExpirationException.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,11 @@\n+package com.requestrealpiano.songrequest.global.error.exception.jwt;\n+\n+import com.requestrealpiano.songrequest.global.error.exception.JwtValidationException;\n+import com.requestrealpiano.songrequest.global.error.response.ErrorCode;\n+\n+public class JwtExpirationException extends JwtValidationException {\n+\n+    public JwtExpirationException() {\n+        super(ErrorCode.JWT_EXPIRATION_ERROR);\n+    }\n+}"
  },
  {
    "sha": "e2d6da85257cf40753f31b4b9d3b1c6945da583a",
    "filename": "src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtInvalidTokenException.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtInvalidTokenException.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtInvalidTokenException.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtInvalidTokenException.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,11 @@\n+package com.requestrealpiano.songrequest.global.error.exception.jwt;\n+\n+import com.requestrealpiano.songrequest.global.error.exception.JwtValidationException;\n+import com.requestrealpiano.songrequest.global.error.response.ErrorCode;\n+\n+public class JwtInvalidTokenException extends JwtValidationException {\n+\n+    public JwtInvalidTokenException() {\n+        super(ErrorCode.JWT_INVALID_ERROR);\n+    }\n+}"
  },
  {
    "sha": "55b3543040749f71c46aff4155c679d31ad8847f",
    "filename": "src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtRequiredException.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtRequiredException.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtRequiredException.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/global/error/exception/jwt/JwtRequiredException.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,9 @@\n+package com.requestrealpiano.songrequest.global.error.exception.jwt;\n+\n+import com.requestrealpiano.songrequest.global.error.exception.JwtValidationException;\n+import com.requestrealpiano.songrequest.global.error.response.ErrorCode;\n+\n+public class JwtRequiredException extends JwtValidationException {\n+\n+    public JwtRequiredException() { super(ErrorCode.UNAUTHENTICATED_ERROR); }\n+}"
  },
  {
    "sha": "b70cf1c159af0cf74b85e66fb9c8e93c3493eeda",
    "filename": "src/main/java/com/requestrealpiano/songrequest/global/error/response/ErrorCode.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/response/ErrorCode.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/error/response/ErrorCode.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/global/error/response/ErrorCode.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -11,6 +11,12 @@\n     METHOD_NOT_ALLOWED(405, \"지원하지 않는 요청 메소드 입니다.\"),\n     INTERNAL_SERVER_ERROR(500, \"서버에서 요청을 처리하지 못했습니다.\"),\n \n+    // Auth\n+    UNAUTHENTICATED_ERROR(401, \"인증이 필요합니다. 로그인 이후 다시 시도 해주세요.\"),\n+    JWT_INVALID_ERROR(400, \"올바른 인증 정보가 아닙니다. 다시 로그인 해주세요.\"),\n+    JWT_EXPIRATION_ERROR(401, \"인증 정보가 만료 되었습니다. 다시 로그인 해주세요.\"),\n+    ACCESS_DENIED_ERROR(403, \"해당 요청에 대한 접근 권한이 없습니다.\"),\n+\n     // Account\n     ACCOUNT_NOT_FOUND(404, \"해당 계정이 존재하지 않습니다.\"),\n "
  },
  {
    "sha": "87b90ca7c87dc08810c9e3187afb9f9cfe18efd1",
    "filename": "src/main/java/com/requestrealpiano/songrequest/global/response/ApiResponse.java",
    "status": "modified",
    "additions": 5,
    "deletions": 7,
    "changes": 12,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/response/ApiResponse.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/response/ApiResponse.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/global/response/ApiResponse.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -5,17 +5,15 @@\n @Getter\n public class ApiResponse<T> {\n \n-    private final boolean success;\n-    private final String statusMessage;\n+    private final int statusCode;\n     private final T data;\n \n-    private ApiResponse(boolean success, String statusMessage, T data) {\n-        this.success = success;\n-        this.statusMessage = statusMessage;\n+    private ApiResponse(int statusCode, T data) {\n+        this.statusCode = statusCode;\n         this.data = data;\n     }\n \n-    public static <T> ApiResponse<T> OK(T data) {\n-        return new ApiResponse<>(true, \"OK\", data);\n+    public static <T> ApiResponse<T> SUCCESS(StatusCode statusCode, T data) {\n+        return new ApiResponse<>(statusCode.getCode(), data);\n     }\n }"
  },
  {
    "sha": "06e6eba85fdf6b82ccd5f6cd28ee70537cfc5602",
    "filename": "src/main/java/com/requestrealpiano/songrequest/global/response/StatusCode.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/response/StatusCode.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/global/response/StatusCode.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/global/response/StatusCode.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,18 @@\n+package com.requestrealpiano.songrequest.global.response;\n+\n+import lombok.Getter;\n+\n+@Getter\n+public enum StatusCode {\n+    OK(200),\n+    CREATED(201),\n+    NO_CONTENT(204)\n+\n+    ;\n+\n+    private final int code;\n+\n+    StatusCode(int code) {\n+        this.code = code;\n+    }\n+}"
  },
  {
    "sha": "dec6ecb903c8f0f9e53a24a5e4d1297344d9a1c7",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/SecurityConfig.java",
    "status": "added",
    "additions": 105,
    "deletions": 0,
    "changes": 105,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/SecurityConfig.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/SecurityConfig.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/SecurityConfig.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,105 @@\n+package com.requestrealpiano.songrequest.security;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.requestrealpiano.songrequest.domain.account.Role;\n+import com.requestrealpiano.songrequest.security.filter.JwtAuthorizationFilter;\n+import com.requestrealpiano.songrequest.security.jwt.JwtTokenProvider;\n+import com.requestrealpiano.songrequest.security.oauth.CustomAccessDeniedHandler;\n+import com.requestrealpiano.songrequest.security.oauth.CustomAuthenticationEntryPoint;\n+import com.requestrealpiano.songrequest.security.oauth.CustomAuthenticationSuccessHandler;\n+import com.requestrealpiano.songrequest.security.oauth.CustomOAuth2UserService;\n+import com.requestrealpiano.songrequest.domain.account.AccountRepository;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.boot.autoconfigure.security.servlet.PathRequest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.builders.WebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.config.http.SessionCreationPolicy;\n+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n+import org.springframework.security.web.csrf.CsrfFilter;\n+import org.springframework.web.cors.CorsConfiguration;\n+import org.springframework.web.cors.CorsConfigurationSource;\n+import org.springframework.web.cors.UrlBasedCorsConfigurationSource;\n+import org.springframework.web.filter.CharacterEncodingFilter;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import static org.springframework.security.config.Customizer.withDefaults;\n+\n+@RequiredArgsConstructor\n+@Configuration\n+@EnableWebSecurity\n+public class SecurityConfig extends WebSecurityConfigurerAdapter {\n+\n+    private final CustomOAuth2UserService customOAuth2UserService;\n+    private final CustomAuthenticationSuccessHandler customAuthenticationSuccessHandler;\n+    private final CustomAuthenticationEntryPoint customAuthenticationEntryPoint;\n+    private final CustomAccessDeniedHandler customAccessDeniedHandler;\n+    private final AccountRepository accountRepository;\n+    private final JwtTokenProvider jwtTokenProvider;\n+    private final ObjectMapper objectMapper;\n+\n+    @Override\n+    public void configure(WebSecurity web) throws Exception {\n+        web.ignoring().requestMatchers(PathRequest.toStaticResources().atCommonLocations());\n+\n+        web.ignoring().antMatchers(HttpMethod.GET, \"/api/accounts/auth\")\n+                      .antMatchers(HttpMethod.GET, \"/api/letters/**\")\n+        ;\n+    }\n+\n+    @Override\n+    protected void configure(HttpSecurity http) throws Exception {\n+        http.cors(withDefaults());\n+\n+        http.csrf().disable()\n+            .httpBasic().disable();\n+\n+        http.authorizeRequests()\n+//            .antMatchers(\"/**\").permitAll()\n+            .antMatchers(\"/api/letters\").hasAnyRole(Role.MEMBER.getKey(), Role.ADMIN.getKey())\n+            .antMatchers(\"/api/songs\").hasAnyRole(Role.MEMBER.getKey(), Role.ADMIN.getKey())\n+            .anyRequest().authenticated();\n+\n+        http.sessionManagement()\n+            .sessionCreationPolicy(SessionCreationPolicy.STATELESS);\n+\n+        http.addFilterBefore(characterEncodingFilter(), CsrfFilter.class)\n+            .addFilterBefore(JwtAuthorizationFilter.of(accountRepository, jwtTokenProvider, objectMapper), UsernamePasswordAuthenticationFilter.class);\n+\n+        http.oauth2Login()\n+            .userInfoEndpoint()\n+            .userService(customOAuth2UserService)\n+                .and()\n+            .successHandler(customAuthenticationSuccessHandler);\n+\n+        http.exceptionHandling()\n+            .authenticationEntryPoint(customAuthenticationEntryPoint)\n+            .accessDeniedHandler(customAccessDeniedHandler);\n+    }\n+\n+    public CharacterEncodingFilter characterEncodingFilter() {\n+        CharacterEncodingFilter encodingFilter = new CharacterEncodingFilter();\n+        encodingFilter.setEncoding(\"UTF-8\");\n+        encodingFilter.setForceEncoding(true);\n+        return encodingFilter;\n+    }\n+\n+    @Bean\n+    CorsConfigurationSource corsConfigurationSource() {\n+        CorsConfiguration configuration = new CorsConfiguration();\n+        configuration.setAllowedOrigins(Collections.singletonList(\"*\"));\n+        configuration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\", \"OPTIONS\"));\n+        configuration.setAllowedHeaders(Collections.singletonList(\"*\"));\n+        configuration.setExposedHeaders(Collections.singletonList(\"Authorization\"));\n+        configuration.setAllowCredentials(true);\n+        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n+        source.registerCorsConfiguration(\"/**\", configuration);\n+        return source;\n+    }\n+}"
  },
  {
    "sha": "ad95d02a40e05631536f158e1c20969ce3016e1e",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/filter/JwtAuthorizationFilter.java",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/filter/JwtAuthorizationFilter.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/filter/JwtAuthorizationFilter.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/filter/JwtAuthorizationFilter.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,83 @@\n+package com.requestrealpiano.songrequest.security.filter;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.requestrealpiano.songrequest.domain.account.Account;\n+import com.requestrealpiano.songrequest.domain.account.AccountRepository;\n+import com.requestrealpiano.songrequest.global.error.exception.JwtValidationException;\n+import com.requestrealpiano.songrequest.global.error.exception.business.AccountNotFoundException;\n+import com.requestrealpiano.songrequest.global.error.response.ErrorCode;\n+import com.requestrealpiano.songrequest.global.error.response.ErrorResponse;\n+import com.requestrealpiano.songrequest.security.jwt.JwtTokenProvider;\n+import com.requestrealpiano.songrequest.security.jwt.claims.AccountClaims;\n+import com.requestrealpiano.songrequest.security.oauth.OAuthAccount;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.MediaType;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.web.filter.OncePerRequestFilter;\n+\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+@Slf4j\n+@Getter\n+public class JwtAuthorizationFilter extends OncePerRequestFilter {\n+\n+    private final AccountRepository accountRepository;\n+    private final JwtTokenProvider jwtTokenProvider;\n+    private final ObjectMapper objectMapper;\n+\n+    @Builder\n+    private JwtAuthorizationFilter(AccountRepository accountRepository, JwtTokenProvider jwtTokenProvider,\n+                                   ObjectMapper objectMapper) {\n+        this.accountRepository = accountRepository;\n+        this.jwtTokenProvider = jwtTokenProvider;\n+        this.objectMapper = objectMapper;\n+    }\n+\n+    @Override\n+    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException {\n+        try {\n+            String jwtToken = jwtTokenProvider.extractToken(request.getHeader(HttpHeaders.AUTHORIZATION));\n+            AccountClaims accountClaims = jwtTokenProvider.parseJwtToken(jwtToken);\n+            Account account = accountRepository.findByEmail(accountClaims.getEmail()).orElseThrow(AccountNotFoundException::new);\n+            OAuthAccount oAuthAccount = OAuthAccount.from(account);\n+            Authentication authentication = new UsernamePasswordAuthenticationToken(oAuthAccount, jwtToken, oAuthAccount.getAuthorities());\n+            SecurityContextHolder.getContext().setAuthentication(authentication);\n+            chain.doFilter(request, response);\n+        } catch (JwtValidationException exception) {\n+            log.error(\"handleAuthenticationFilterJwtException\", exception);\n+            ErrorCode errorCode = exception.getErrorCode();\n+            handleAuthenticationFilterException(response, errorCode);\n+        } catch (Exception exception) {\n+            log.error(\"handleAuthenticationFilterException\", exception);\n+            ErrorCode errorCode = ErrorCode.INTERNAL_SERVER_ERROR;\n+            handleAuthenticationFilterException(response, errorCode);\n+        }\n+    }\n+\n+    private void handleAuthenticationFilterException(HttpServletResponse response, ErrorCode errorCode) throws IOException {\n+        String errorResponse = objectMapper.writeValueAsString(ErrorResponse.from(errorCode));\n+        response.getWriter().print(errorResponse);\n+        response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n+        response.setStatus(errorCode.getStatusCode());\n+        response.getWriter().flush();\n+        response.getWriter().close();\n+    }\n+\n+    public static JwtAuthorizationFilter of(AccountRepository accountRepository, JwtTokenProvider jwtTokenProvider,\n+                                            ObjectMapper objectMapper) {\n+        return JwtAuthorizationFilter.builder()\n+                                     .accountRepository(accountRepository)\n+                                     .jwtTokenProvider(jwtTokenProvider)\n+                                     .objectMapper(objectMapper)\n+                                     .build();\n+    }\n+}"
  },
  {
    "sha": "72ca1d788095db7b1839d36ef2e5a809fbd0027f",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/jwt/JwtProperties.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/jwt/JwtProperties.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/jwt/JwtProperties.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/jwt/JwtProperties.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,21 @@\n+package com.requestrealpiano.songrequest.security.jwt;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.ConstructorBinding;\n+\n+@RequiredArgsConstructor\n+@Getter\n+@ConstructorBinding\n+@ConfigurationProperties(prefix = \"jwt\")\n+public class JwtProperties {\n+\n+    private final String tokenSecret;\n+    private final String tokenExpiration;\n+    private final String header;\n+    private final String headerPrefix;\n+    private final String tokenUrl;\n+    private final String generationKeySecret;\n+    private final String generationKeyExpiration;\n+}"
  },
  {
    "sha": "f7e64040e961881a1e0082768cc20b4ef3efb22b",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/jwt/JwtTokenProvider.java",
    "status": "added",
    "additions": 115,
    "deletions": 0,
    "changes": 115,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/jwt/JwtTokenProvider.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/jwt/JwtTokenProvider.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/jwt/JwtTokenProvider.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,115 @@\n+package com.requestrealpiano.songrequest.security.jwt;\n+\n+import com.requestrealpiano.songrequest.domain.account.Account;\n+import com.requestrealpiano.songrequest.global.error.exception.jwt.JwtExpirationException;\n+import com.requestrealpiano.songrequest.global.error.exception.jwt.JwtInvalidTokenException;\n+import com.requestrealpiano.songrequest.global.error.exception.jwt.JwtRequiredException;\n+import com.requestrealpiano.songrequest.security.jwt.claims.AccountClaims;\n+import io.jsonwebtoken.*;\n+import lombok.RequiredArgsConstructor;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.Date;\n+\n+@RequiredArgsConstructor\n+@Component\n+public class JwtTokenProvider {\n+\n+    private final JwtProperties jwtProperties;\n+\n+    private final String ID = \"id\";\n+    private final String EMAIL = \"email\";\n+    private final String NAME = \"name\";\n+    private final String AVATAR_URL = \"avatarUrl\";\n+    private final String ROLE = \"role\";\n+\n+    public String createGenerationKey(String email) {\n+        Date now = new Date();\n+        return Jwts.builder()\n+                   .setHeaderParam(Header.TYPE, Header.JWT_TYPE)\n+                   .setIssuedAt(now)\n+                   .setExpiration(new Date(now.getTime() + Long.parseLong(jwtProperties.getGenerationKeyExpiration())))\n+                   .claim(EMAIL, email)\n+                   .signWith(SignatureAlgorithm.HS256, jwtProperties.getGenerationKeySecret())\n+                   .compact();\n+    }\n+\n+    public String parseGenerationKey(String authorization) {\n+        String generationKey = extractToken(authorization);\n+        try {\n+            Jws<Claims> claims = Jwts.parser()\n+                    .setSigningKey(jwtProperties.getGenerationKeySecret())\n+                    .parseClaimsJws(generationKey);\n+            return claims.getBody()\n+                         .get(EMAIL, String.class);\n+        } catch (ExpiredJwtException exception) {\n+            throw new JwtExpirationException();\n+        } catch (JwtException exception) {\n+            throw new JwtInvalidTokenException();\n+        }\n+    }\n+\n+    public String createJwtToken(Account account) {\n+        Date now = new Date();\n+        String jwtToken = Jwts.builder()\n+                              .setHeaderParam(Header.TYPE, Header.JWT_TYPE)\n+                              .setIssuedAt(now)\n+                              .setExpiration(new Date(now.getTime() + Long.parseLong(jwtProperties.getTokenExpiration())))\n+                              .claim(ID, account.getId())\n+                              .claim(EMAIL, account.getEmail())\n+                              .claim(NAME, account.getName())\n+                              .claim(AVATAR_URL, account.getAvatarUrl())\n+                              .claim(ROLE, account.getRoleKey())\n+                              .signWith(SignatureAlgorithm.HS256, jwtProperties.getTokenSecret())\n+                              .compact();\n+        return jwtProperties.getHeaderPrefix() + jwtToken;\n+    }\n+\n+    public boolean validateJwtToken(String authorization) {\n+        String jwtToken = extractToken(authorization);\n+        try {\n+            Jws<Claims> claims = Jwts.parser()\n+                                     .setSigningKey(jwtProperties.getTokenSecret())\n+                                     .parseClaimsJws(jwtToken);\n+            return claims.getBody()\n+                         .getExpiration()\n+                         .after(new Date());\n+        } catch (ExpiredJwtException exception) {\n+            throw new JwtExpirationException();\n+        } catch (JwtException exception) {\n+            throw new JwtInvalidTokenException();\n+        }\n+    }\n+\n+    public AccountClaims parseJwtToken(String jwtToken) {\n+        try {\n+            Jws<Claims> claims = Jwts.parser()\n+                                     .setSigningKey(jwtProperties.getTokenSecret())\n+                                     .parseClaimsJws(jwtToken);\n+            Claims body = claims.getBody();\n+\n+            return AccountClaims.from(body);\n+        } catch (ExpiredJwtException exception) {\n+            throw new JwtExpirationException();\n+        } catch (JwtException exception) {\n+            throw new JwtInvalidTokenException();\n+        }\n+    }\n+\n+    public String extractToken(String authorizationHeader) {\n+        if (isTokenContained(authorizationHeader)) {\n+            int tokenBeginIndex = jwtProperties.getHeaderPrefix().length();\n+            return StringUtils.substring(authorizationHeader, tokenBeginIndex);\n+        }\n+        throw new JwtRequiredException();\n+    }\n+\n+    private boolean isTokenContained(String authorization) {\n+        if (StringUtils.isEmpty(authorization)) {\n+            return false;\n+        }\n+\n+        return authorization.startsWith(jwtProperties.getHeaderPrefix());\n+    }\n+}"
  },
  {
    "sha": "7789eba0435a58d74ad3d8b081b202e0302f5f09",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/jwt/claims/AccountClaims.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/jwt/claims/AccountClaims.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/jwt/claims/AccountClaims.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/jwt/claims/AccountClaims.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,36 @@\n+package com.requestrealpiano.songrequest.security.jwt.claims;\n+\n+import com.requestrealpiano.songrequest.domain.account.Account;\n+import com.requestrealpiano.songrequest.domain.account.Role;\n+import io.jsonwebtoken.Claims;\n+import lombok.Builder;\n+import lombok.Getter;\n+\n+@Getter\n+public class AccountClaims {\n+\n+    private final Long id;\n+    private final String name;\n+    private final String email;\n+    private final String avatarUrl;\n+    private final String role;\n+\n+    @Builder\n+    private AccountClaims(Long id, String name, String email, String avatarUrl, String role) {\n+        this.id = id;\n+        this.name = name;\n+        this.email = email;\n+        this.avatarUrl = avatarUrl;\n+        this.role = role;\n+    }\n+\n+    public static AccountClaims from(Claims claims) {\n+        return AccountClaims.builder()\n+                            .id(claims.get(\"id\", Long.class))\n+                            .name(claims.get(\"name\", String.class))\n+                            .email(claims.get(\"email\", String.class))\n+                            .avatarUrl(claims.get(\"avatarUrl\", String.class))\n+                            .role(claims.get(\"role\", String.class))\n+                            .build();\n+    }\n+}"
  },
  {
    "sha": "6a24f1ef60b6f8830ac376b80c87d976e38475ee",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAccessDeniedHandler.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAccessDeniedHandler.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAccessDeniedHandler.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAccessDeniedHandler.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,33 @@\n+package com.requestrealpiano.songrequest.security.oauth;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.requestrealpiano.songrequest.global.error.response.ErrorCode;\n+import com.requestrealpiano.songrequest.global.error.response.ErrorResponse;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.http.MediaType;\n+import org.springframework.security.access.AccessDeniedException;\n+import org.springframework.security.web.access.AccessDeniedHandler;\n+import org.springframework.stereotype.Component;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+@RequiredArgsConstructor\n+@Component\n+public class CustomAccessDeniedHandler implements AccessDeniedHandler {\n+\n+    private final ObjectMapper objectMapper;\n+\n+    @Override\n+    public void handle(HttpServletRequest request, HttpServletResponse response, AccessDeniedException accessDeniedException) throws IOException, ServletException {\n+        ErrorCode accessDeniedError = ErrorCode.ACCESS_DENIED_ERROR;\n+        String errorResponse = objectMapper.writeValueAsString(ErrorResponse.from(accessDeniedError));\n+        response.getWriter().print(errorResponse);\n+        response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n+        response.setStatus(accessDeniedError.getStatusCode());\n+        response.getWriter().flush();\n+        response.getWriter().close();\n+    }\n+}"
  },
  {
    "sha": "d1c618c4f48074ff97fd362cccd5706c2ccdd32f",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAuthenticationEntryPoint.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAuthenticationEntryPoint.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAuthenticationEntryPoint.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAuthenticationEntryPoint.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,33 @@\n+package com.requestrealpiano.songrequest.security.oauth;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.requestrealpiano.songrequest.global.error.response.ErrorCode;\n+import com.requestrealpiano.songrequest.global.error.response.ErrorResponse;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.http.MediaType;\n+import org.springframework.security.core.AuthenticationException;\n+import org.springframework.security.web.AuthenticationEntryPoint;\n+import org.springframework.stereotype.Component;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+@RequiredArgsConstructor\n+@Component\n+public class CustomAuthenticationEntryPoint implements AuthenticationEntryPoint {\n+\n+    private final ObjectMapper objectMapper;\n+\n+    @Override\n+    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n+        ErrorCode unAuthenticationError = ErrorCode.UNAUTHENTICATED_ERROR;\n+        String errorResponse = objectMapper.writeValueAsString(ErrorResponse.from(unAuthenticationError));\n+        response.getWriter().print(errorResponse);\n+        response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n+        response.setStatus(unAuthenticationError.getStatusCode());\n+        response.getWriter().flush();\n+        response.getWriter().close();\n+    }\n+}"
  },
  {
    "sha": "d3c36632fee9bf50930ae83ad07681556e735675",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAuthenticationSuccessHandler.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAuthenticationSuccessHandler.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAuthenticationSuccessHandler.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomAuthenticationSuccessHandler.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,37 @@\n+package com.requestrealpiano.songrequest.security.oauth;\n+\n+import com.requestrealpiano.songrequest.security.jwt.JwtProperties;\n+import com.requestrealpiano.songrequest.security.jwt.JwtTokenProvider;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.web.authentication.AuthenticationSuccessHandler;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.util.UriComponentsBuilder;\n+\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+@RequiredArgsConstructor\n+@Component\n+public class CustomAuthenticationSuccessHandler implements AuthenticationSuccessHandler {\n+\n+    private final JwtTokenProvider jwtTokenProvider;\n+    private final JwtProperties jwtProperties;\n+\n+    @Override\n+    public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {\n+        OAuthAccount oAuthAccount = (OAuthAccount) authentication.getPrincipal();\n+        String generationKey = jwtTokenProvider.createGenerationKey(oAuthAccount.getEmail());\n+        response.sendRedirect(createRedirectURI(generationKey));\n+    }\n+\n+    private String createRedirectURI(String generationKey) {\n+        return UriComponentsBuilder.fromHttpUrl(jwtProperties.getTokenUrl())\n+                                   .queryParam(\"key\", generationKey)\n+                                   .build()\n+                                   .toUri()\n+                                   .toString();\n+    }\n+}"
  },
  {
    "sha": "a3994c04835958b77466e9760d208dc1bc12645f",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomOAuth2UserService.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomOAuth2UserService.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomOAuth2UserService.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/oauth/CustomOAuth2UserService.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,41 @@\n+package com.requestrealpiano.songrequest.security.oauth;\n+\n+import com.requestrealpiano.songrequest.domain.account.Account;\n+import com.requestrealpiano.songrequest.domain.account.AccountRepository;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.security.oauth2.client.userinfo.DefaultOAuth2UserService;\n+import org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest;\n+import org.springframework.security.oauth2.client.userinfo.OAuth2UserService;\n+import org.springframework.security.oauth2.core.OAuth2AuthenticationException;\n+import org.springframework.security.oauth2.core.user.OAuth2User;\n+import org.springframework.stereotype.Service;\n+\n+@RequiredArgsConstructor\n+@Service\n+public class CustomOAuth2UserService implements OAuth2UserService<OAuth2UserRequest, OAuth2User> {\n+\n+    private final AccountRepository accountRepository;\n+\n+    @Override\n+    public OAuth2User loadUser(OAuth2UserRequest userRequest) throws OAuth2AuthenticationException {\n+        OAuth2UserService delegate = new DefaultOAuth2UserService();\n+        OAuth2User oAuth2User = delegate.loadUser(userRequest);\n+\n+        String userNameAttributeName = userRequest.getClientRegistration()\n+                                                  .getProviderDetails()\n+                                                  .getUserInfoEndpoint()\n+                                                  .getUserNameAttributeName();\n+        OAuthAttributes attributes = OAuthAttributes.of(userNameAttributeName, oAuth2User.getAttributes());\n+\n+        Account account = saveOrUpdate(attributes);\n+\n+        return OAuthAccount.of(attributes.getAttributes(), account);\n+    }\n+\n+    private Account saveOrUpdate(OAuthAttributes attributes) {\n+        Account account = accountRepository.findByEmail(attributes.getEmail())\n+                                           .map(authAccount -> authAccount.updateProfile(attributes))\n+                                           .orElse(Account.from(attributes));\n+        return accountRepository.save(account);\n+    }\n+}"
  },
  {
    "sha": "6a0ec8dd14785d3cbaf19937b49b351ff15c9b42",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/oauth/LoginAccount.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/LoginAccount.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/LoginAccount.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/oauth/LoginAccount.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,14 @@\n+package com.requestrealpiano.songrequest.security.oauth;\n+\n+import org.springframework.security.core.annotation.AuthenticationPrincipal;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target(ElementType.PARAMETER)\n+@Retention(RetentionPolicy.RUNTIME)\n+@AuthenticationPrincipal\n+public @interface LoginAccount {\n+}"
  },
  {
    "sha": "00a9cdfcda81a9ea3fb04507a99e4d966e0ed88c",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/oauth/OAuthAccount.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/OAuthAccount.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/OAuthAccount.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/oauth/OAuthAccount.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,66 @@\n+package com.requestrealpiano.songrequest.security.oauth;\n+\n+import com.requestrealpiano.songrequest.domain.account.Account;\n+import lombok.Builder;\n+import lombok.Getter;\n+import org.springframework.security.core.authority.SimpleGrantedAuthority;\n+import org.springframework.security.oauth2.core.user.OAuth2User;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.Set;\n+\n+@Getter\n+public class OAuthAccount implements OAuth2User {\n+\n+    private final Map<String, Object> attributes;\n+    private final Set<SimpleGrantedAuthority> authorities;\n+    private final Long id;\n+    private final String googleOAuthId;\n+    private final String name;\n+    private final String email;\n+    private final String avatarUrl;\n+    private final Integer requestCount;\n+\n+    @Builder\n+    private OAuthAccount(Map<String, Object> attributes, Set<SimpleGrantedAuthority> authorities, Long id,\n+                         String googleOAuthId, String name, String email, String avatarUrl, Integer requestCount) {\n+        this.attributes = attributes;\n+        this.authorities = authorities;\n+        this.id = id;\n+        this.googleOAuthId = googleOAuthId;\n+        this.name = name;\n+        this.email = email;\n+        this.avatarUrl = avatarUrl;\n+        this.requestCount = requestCount;\n+    }\n+\n+    public static OAuthAccount from(Account account) {\n+        Set<SimpleGrantedAuthority> authorities = Collections.singleton(new SimpleGrantedAuthority(account.getRoleValue()));\n+\n+        return OAuthAccount.builder()\n+                           .authorities(authorities)\n+                           .id(account.getId())\n+                           .googleOAuthId(account.getGoogleOauthId())\n+                           .name(account.getName())\n+                           .email(account.getEmail())\n+                           .avatarUrl(account.getAvatarUrl())\n+                           .requestCount(account.getRequestCount())\n+                           .build();\n+    }\n+\n+    public static OAuthAccount of(Map<String, Object> attributes, Account account) {\n+        Set<SimpleGrantedAuthority> authorities = Collections.singleton(new SimpleGrantedAuthority(account.getRoleValue()));\n+\n+        return OAuthAccount.builder()\n+                           .attributes(attributes)\n+                           .authorities(authorities)\n+                           .id(account.getId())\n+                           .googleOAuthId(account.getGoogleOauthId())\n+                           .name(account.getName())\n+                           .email(account.getEmail())\n+                           .avatarUrl(account.getAvatarUrl())\n+                           .requestCount(account.getRequestCount())\n+                           .build();\n+    }\n+}"
  },
  {
    "sha": "562f8e715889ce6a146cafb97de4a09bf00648e0",
    "filename": "src/main/java/com/requestrealpiano/songrequest/security/oauth/OAuthAttributes.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/OAuthAttributes.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/security/oauth/OAuthAttributes.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/security/oauth/OAuthAttributes.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,39 @@\n+package com.requestrealpiano.songrequest.security.oauth;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+\n+import java.util.Map;\n+\n+@Getter\n+public class OAuthAttributes {\n+\n+    private final Map<String, Object> attributes;\n+    private final String nameAttributeKey;\n+    private final String googleOauthId;\n+    private final String name;\n+    private final String email;\n+    private final String avatarUrl;\n+\n+    @Builder\n+    private OAuthAttributes(Map<String, Object> attributes, String nameAttributeKey, String googleOauthId, String name,\n+                            String email, String avatarUrl) {\n+        this.attributes = attributes;\n+        this.nameAttributeKey = nameAttributeKey;\n+        this.googleOauthId = googleOauthId;\n+        this.name = name;\n+        this.email = email;\n+        this.avatarUrl = avatarUrl;\n+    }\n+\n+    public static OAuthAttributes of(String userNameAttributeName, Map<String, Object> attributes) {\n+        return OAuthAttributes.builder()\n+                              .googleOauthId((String) attributes.get(\"sub\"))\n+                              .name((String) attributes.get(\"name\"))\n+                              .email((String) attributes.get(\"email\"))\n+                              .avatarUrl((String) attributes.get(\"picture\"))\n+                              .attributes(attributes)\n+                              .nameAttributeKey(userNameAttributeName)\n+                              .build();\n+    }\n+}"
  },
  {
    "sha": "b6b8b1ca3fc904716678b342302e5d1b8f63bf6e",
    "filename": "src/main/java/com/requestrealpiano/songrequest/service/AccountService.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/playthesong/song-request-backend/blob/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/service/AccountService.java",
    "raw_url": "https://github.com/playthesong/song-request-backend/raw/20db462a2261de8cf8cadb9970939844bd4a631d/src/main/java/com/requestrealpiano/songrequest/service/AccountService.java",
    "contents_url": "https://api.github.com/repos/playthesong/song-request-backend/contents/src/main/java/com/requestrealpiano/songrequest/service/AccountService.java?ref=20db462a2261de8cf8cadb9970939844bd4a631d",
    "patch": "@@ -0,0 +1,22 @@\n+package com.requestrealpiano.songrequest.service;\n+\n+import com.requestrealpiano.songrequest.domain.account.Account;\n+import com.requestrealpiano.songrequest.domain.account.AccountRepository;\n+import com.requestrealpiano.songrequest.global.error.exception.business.AccountNotFoundException;\n+import com.requestrealpiano.songrequest.security.jwt.JwtTokenProvider;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+\n+@RequiredArgsConstructor\n+@Service\n+public class AccountService {\n+\n+    private final AccountRepository accountRepository;\n+    private final JwtTokenProvider jwtTokenProvider;\n+\n+    public String generateJwtToken(String generationKey) {\n+        String email = jwtTokenProvider.parseGenerationKey(generationKey);\n+        Account account = accountRepository.findByEmail(email).orElseThrow(AccountNotFoundException::new);\n+        return jwtTokenProvider.createJwtToken(account);\n+    }\n+}"
  }
]
