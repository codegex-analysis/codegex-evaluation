[
  {
    "sha": "f43686176282c71232b199dc91d12d3195c5a9ec",
    "filename": "src/test/java/com/zaxxer/hikari/pool/TestConcurrentBag.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/brettwooldridge/HikariCP/blob/ca03b442f2d730e733f475858d778c8fea5f8bb4/src/test/java/com/zaxxer/hikari/pool/TestConcurrentBag.java",
    "raw_url": "https://github.com/brettwooldridge/HikariCP/raw/ca03b442f2d730e733f475858d778c8fea5f8bb4/src/test/java/com/zaxxer/hikari/pool/TestConcurrentBag.java",
    "contents_url": "https://api.github.com/repos/brettwooldridge/HikariCP/contents/src/test/java/com/zaxxer/hikari/pool/TestConcurrentBag.java?ref=ca03b442f2d730e733f475858d778c8fea5f8bb4",
    "patch": "@@ -69,7 +69,7 @@ public static void teardown()\n    @Test\n    public void testConcurrentBag() throws Exception\n    {\n-      try (ConcurrentBag<PoolEntry> bag = new ConcurrentBag<>((x) -> CompletableFuture.completedFuture(Boolean.TRUE))) {\n+      try (ConcurrentBag<PoolEntry> bag = new ConcurrentBag<>(x -> CompletableFuture.completedFuture(Boolean.TRUE))) {\n          assertEquals(0, bag.values(8).size());\n    \n          PoolEntry reserved = pool.newPoolEntry();"
  },
  {
    "sha": "54559730903fb03ef4abe6d41717ab82d1a79241",
    "filename": "src/test/java/com/zaxxer/hikari/util/TomcatConcurrentBagLeakTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/brettwooldridge/HikariCP/blob/ca03b442f2d730e733f475858d778c8fea5f8bb4/src/test/java/com/zaxxer/hikari/util/TomcatConcurrentBagLeakTest.java",
    "raw_url": "https://github.com/brettwooldridge/HikariCP/raw/ca03b442f2d730e733f475858d778c8fea5f8bb4/src/test/java/com/zaxxer/hikari/util/TomcatConcurrentBagLeakTest.java",
    "contents_url": "https://api.github.com/repos/brettwooldridge/HikariCP/contents/src/test/java/com/zaxxer/hikari/util/TomcatConcurrentBagLeakTest.java?ref=ca03b442f2d730e733f475858d778c8fea5f8bb4",
    "patch": "@@ -112,7 +112,7 @@ public int getState()\n       @SuppressWarnings({\"ResultOfMethodCallIgnored\"})\n       public void createConcurrentBag() throws InterruptedException\n       {\n-         try (ConcurrentBag<PoolEntry> bag = new ConcurrentBag<>((x) -> CompletableFuture.completedFuture(Boolean.TRUE))) {\n+         try (ConcurrentBag<PoolEntry> bag = new ConcurrentBag<>(x -> CompletableFuture.completedFuture(Boolean.TRUE))) {\n \n             PoolEntry entry = new PoolEntry();\n             bag.add(entry);"
  }
]
