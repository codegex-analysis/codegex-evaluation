[
  {
    "sha": "e722c5515837ec33a80458cca8802766343b7706",
    "filename": "src/main/java/core/mate/academy/model/Bulldozer.java",
    "status": "modified",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/mate-academy/jv-pecs/blob/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/model/Bulldozer.java",
    "raw_url": "https://github.com/mate-academy/jv-pecs/raw/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/model/Bulldozer.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-pecs/contents/src/main/java/core/mate/academy/model/Bulldozer.java?ref=2ead0b4747a6be84129563c4e9c156267c1e4d2d",
    "patch": "@@ -5,9 +5,53 @@\n  * Do not remove no-args constructor\n  */\n public class Bulldozer extends Machine {\n+    private String colorTruck;\n+    private int powerTruck;\n+    private String model;\n+    private int weight;\n+\n+    public Bulldozer(String colorTruck, int powerTruck, String model, int weight) {\n+        this.colorTruck = colorTruck;\n+        this.powerTruck = powerTruck;\n+        this.model = model;\n+        this.weight = weight;\n+    }\n+\n     public Bulldozer() {\n     }\n \n+    public String getColorTruck() {\n+        return colorTruck;\n+    }\n+\n+    public void setColorTruck(String colorTruck) {\n+        this.colorTruck = colorTruck;\n+    }\n+\n+    public int getPowerTruck() {\n+        return powerTruck;\n+    }\n+\n+    public void setPowerTruck(int powerTruck) {\n+        this.powerTruck = powerTruck;\n+    }\n+\n+    public String getModel() {\n+        return model;\n+    }\n+\n+    public void setModel(String model) {\n+        this.model = model;\n+    }\n+\n+    public int getWeight() {\n+        return weight;\n+    }\n+\n+    public void setWeight(int weight) {\n+        this.weight = weight;\n+    }\n+\n     @Override\n     public void doWork() {\n         System.out.println(\"Bulldozer started to work\");"
  },
  {
    "sha": "1f2c6a1fe5eed82a665adffd2c9d42c609e9ce20",
    "filename": "src/main/java/core/mate/academy/model/Excavator.java",
    "status": "modified",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/mate-academy/jv-pecs/blob/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/model/Excavator.java",
    "raw_url": "https://github.com/mate-academy/jv-pecs/raw/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/model/Excavator.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-pecs/contents/src/main/java/core/mate/academy/model/Excavator.java?ref=2ead0b4747a6be84129563c4e9c156267c1e4d2d",
    "patch": "@@ -5,9 +5,43 @@\n  * Do not remove no-args constructor\n  */\n public class Excavator extends Machine {\n+    private String colorExcavator;\n+    private int powerExcavator;\n+    private String model;\n+\n+    public Excavator(String colorExcavator, int powerExcavator, String model) {\n+        this.colorExcavator = colorExcavator;\n+        this.powerExcavator = powerExcavator;\n+        this.model = model;\n+    }\n+\n     public Excavator() {\n     }\n \n+    public String getColorExcavator() {\n+        return colorExcavator;\n+    }\n+\n+    public void setColorExcavator(String colorExcavator) {\n+        this.colorExcavator = colorExcavator;\n+    }\n+\n+    public int getPowerExcavator() {\n+        return powerExcavator;\n+    }\n+\n+    public void setPowerExcavator(int powerExcavator) {\n+        this.powerExcavator = powerExcavator;\n+    }\n+\n+    public String getModel() {\n+        return model;\n+    }\n+\n+    public void setModel(String model) {\n+        this.model = model;\n+    }\n+\n     @Override\n     public void doWork() {\n         System.out.println(\"Excavator started to work\");"
  },
  {
    "sha": "9f1fe899fab50dabedf9141c90bbad52e31e95dd",
    "filename": "src/main/java/core/mate/academy/model/Truck.java",
    "status": "modified",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/mate-academy/jv-pecs/blob/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/model/Truck.java",
    "raw_url": "https://github.com/mate-academy/jv-pecs/raw/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/model/Truck.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-pecs/contents/src/main/java/core/mate/academy/model/Truck.java?ref=2ead0b4747a6be84129563c4e9c156267c1e4d2d",
    "patch": "@@ -5,9 +5,53 @@\n  * Do not remove no-field constructor\n  */\n public class Truck extends Machine {\n+    private String colorTruck;\n+    private int powerTruck;\n+    private String model;\n+    private int weight;\n+\n+    public Truck(String colorTruck, int powerTruck, String model, int weight) {\n+        this.colorTruck = colorTruck;\n+        this.powerTruck = powerTruck;\n+        this.model = model;\n+        this.weight = weight;\n+    }\n+\n     public Truck() {\n     }\n \n+    public String getColorTruck() {\n+        return colorTruck;\n+    }\n+\n+    public void setColorTruck(String colorTruck) {\n+        this.colorTruck = colorTruck;\n+    }\n+\n+    public int getPowerTruck() {\n+        return powerTruck;\n+    }\n+\n+    public void setPowerTruck(int powerTruck) {\n+        this.powerTruck = powerTruck;\n+    }\n+\n+    public String getModel() {\n+        return model;\n+    }\n+\n+    public void setModel(String model) {\n+        this.model = model;\n+    }\n+\n+    public int getWeight() {\n+        return weight;\n+    }\n+\n+    public void setWeight(int weight) {\n+        this.weight = weight;\n+    }\n+\n     @Override\n     public void doWork() {\n         System.out.println(\"Truck started to work\");"
  },
  {
    "sha": "913bf5b9d9a6f50044c6a7a4fd3a5be2ed8d7abc",
    "filename": "src/main/java/core/mate/academy/service/BulldozerProducer.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/mate-academy/jv-pecs/blob/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/BulldozerProducer.java",
    "raw_url": "https://github.com/mate-academy/jv-pecs/raw/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/BulldozerProducer.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-pecs/contents/src/main/java/core/mate/academy/service/BulldozerProducer.java?ref=2ead0b4747a6be84129563c4e9c156267c1e4d2d",
    "patch": "@@ -0,0 +1,18 @@\n+package core.mate.academy.service;\n+\n+import core.mate.academy.model.Bulldozer;\n+import java.util.List;\n+\n+public class BulldozerProducer implements MachineProducer {\n+\n+    private Bulldozer bulldozer1 = new Bulldozer();\n+    private Bulldozer bulldozer2 = new Bulldozer();\n+    private Bulldozer bulldozer3 = new Bulldozer();\n+\n+    private List<Bulldozer> bulldozers = List.of(bulldozer1, bulldozer2, bulldozer3);\n+\n+    @Override\n+    public List<Bulldozer> get() {\n+        return bulldozers;\n+    }\n+}"
  },
  {
    "sha": "febe402f23c2b75f94727753b39456b06a593f84",
    "filename": "src/main/java/core/mate/academy/service/ExcavatorProducer.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/mate-academy/jv-pecs/blob/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/ExcavatorProducer.java",
    "raw_url": "https://github.com/mate-academy/jv-pecs/raw/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/ExcavatorProducer.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-pecs/contents/src/main/java/core/mate/academy/service/ExcavatorProducer.java?ref=2ead0b4747a6be84129563c4e9c156267c1e4d2d",
    "patch": "@@ -0,0 +1,18 @@\n+package core.mate.academy.service;\n+\n+import core.mate.academy.model.Excavator;\n+import java.util.List;\n+\n+public class ExcavatorProducer implements MachineProducer {\n+\n+    private Excavator excavator1 = new Excavator();\n+    private Excavator excavator2 = new Excavator();\n+    private Excavator excavator3 = new Excavator();\n+\n+    private List<Excavator> excavators = List.of(excavator1, excavator2, excavator3);\n+\n+    @Override\n+    public List<Excavator> get() {\n+        return excavators;\n+    }\n+}"
  },
  {
    "sha": "49b8defa597735dc4fd20ad48306d8c2da68d514",
    "filename": "src/main/java/core/mate/academy/service/MachineProducer.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/mate-academy/jv-pecs/blob/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/MachineProducer.java",
    "raw_url": "https://github.com/mate-academy/jv-pecs/raw/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/MachineProducer.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-pecs/contents/src/main/java/core/mate/academy/service/MachineProducer.java?ref=2ead0b4747a6be84129563c4e9c156267c1e4d2d",
    "patch": "@@ -1,11 +1,12 @@\n package core.mate.academy.service;\n \n+import core.mate.academy.model.Machine;\n import java.util.List;\n \n public interface MachineProducer {\n     /**\n      * In your implementations - create 2-3 models, add them to the list and return\n      * @return - the list of models\n      */\n-    List<Object> get();\n+    List<? extends Machine> get();\n }"
  },
  {
    "sha": "4846bbeb2f69bc2ee4faba1a25ddde41c971070a",
    "filename": "src/main/java/core/mate/academy/service/MachineService.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/mate-academy/jv-pecs/blob/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/MachineService.java",
    "raw_url": "https://github.com/mate-academy/jv-pecs/raw/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/MachineService.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-pecs/contents/src/main/java/core/mate/academy/service/MachineService.java?ref=2ead0b4747a6be84129563c4e9c156267c1e4d2d",
    "patch": "@@ -1,11 +1,12 @@\n package core.mate.academy.service;\n \n+import core.mate.academy.model.Machine;\n import java.util.List;\n \n /**\n  * Parameterize this service and add its implementation in a separate class.\n  */\n-public interface MachineService {\n+public interface MachineService<T extends Machine> {\n \n     /**\n      * Return the list of machines.\n@@ -16,7 +17,7 @@\n      * @param type - any class of Machine sub class. For example: Truck.class or Bulldozer.class\n      * @return the list of machines\n      */\n-    List<Object> getAll(Class type);\n+    List<T> getAll(Class<? extends T> type);\n \n     /**\n      * Fill the machines list with passed value\n@@ -26,13 +27,13 @@\n      * @param machines - list of machines to be filled with value\n      * @param value    - any object of machine sub class\n      */\n-    void fill(List<Object> machines, Object value);\n+    void fill(List<? super T> machines, T value);\n \n     /**\n      * Call the method doWork() from each machine.\n      * This method should be able to accept a list of bulldozers as well as list of trucks.\n      *\n      * @param machines - the list of machines\n      */\n-    void startWorking(List<Object> machines);\n+    void startWorking(List<? extends T> machines);\n }"
  },
  {
    "sha": "0a0d6b8a65ff68dfe583796cd74cbe84f95c9fb8",
    "filename": "src/main/java/core/mate/academy/service/MachineServiceImpl.java",
    "status": "modified",
    "additions": 44,
    "deletions": 1,
    "changes": 45,
    "blob_url": "https://github.com/mate-academy/jv-pecs/blob/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/MachineServiceImpl.java",
    "raw_url": "https://github.com/mate-academy/jv-pecs/raw/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/MachineServiceImpl.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-pecs/contents/src/main/java/core/mate/academy/service/MachineServiceImpl.java?ref=2ead0b4747a6be84129563c4e9c156267c1e4d2d",
    "patch": "@@ -1,7 +1,50 @@\n package core.mate.academy.service;\n \n+import core.mate.academy.model.Bulldozer;\n+import core.mate.academy.model.Excavator;\n+import core.mate.academy.model.Machine;\n+import core.mate.academy.model.Truck;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n /**\n  * Your implementation of MachineService.\n  */\n-public class MachineServiceImpl {\n+public class MachineServiceImpl implements MachineService<Machine> {\n+\n+    private TruckProducer truckProducer = new TruckProducer();\n+    private ExcavatorProducer excavatorProducer = new ExcavatorProducer();\n+    private BulldozerProducer bulldozerProducer = new BulldozerProducer();\n+\n+    @Override\n+    public List<Machine> getAll(Class<? extends Machine> type) {\n+        List<Machine> result = new ArrayList<>();\n+        if (type == Truck.class) {\n+            result.addAll(truckProducer.get());\n+        } else if (type == Excavator.class) {\n+            result.addAll(excavatorProducer.get());\n+        } else if (type == Bulldozer.class) {\n+            result.addAll(bulldozerProducer.get());\n+        }\n+        return result;\n+    }\n+\n+    @Override\n+    public void fill(List<? super Machine> machines, Machine value) {\n+        int size = machines.size();\n+        for (int i = 0; i < size; i++) {\n+            machines.set(i, value);\n+        }\n+    }\n+\n+    @Override\n+    public void startWorking(List<? extends Machine> machines) {\n+        Bulldozer bulldozer = new Bulldozer();\n+        Excavator excavator = new Excavator();\n+        Truck truck = new Truck();\n+\n+        bulldozer.doWork();\n+        excavator.doWork();\n+        truck.doWork();\n+    }\n }"
  },
  {
    "sha": "0c56d7b2574355e8fa581493085b499d555c0ff9",
    "filename": "src/main/java/core/mate/academy/service/TruckProducer.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/mate-academy/jv-pecs/blob/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/TruckProducer.java",
    "raw_url": "https://github.com/mate-academy/jv-pecs/raw/2ead0b4747a6be84129563c4e9c156267c1e4d2d/src/main/java/core/mate/academy/service/TruckProducer.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-pecs/contents/src/main/java/core/mate/academy/service/TruckProducer.java?ref=2ead0b4747a6be84129563c4e9c156267c1e4d2d",
    "patch": "@@ -0,0 +1,18 @@\n+package core.mate.academy.service;\n+\n+import core.mate.academy.model.Truck;\n+import java.util.List;\n+\n+public class TruckProducer implements MachineProducer {\n+\n+    private Truck truck1 = new Truck();\n+    private Truck truck2 = new Truck();\n+    private Truck truck3 = new Truck();\n+\n+    private List<Truck> trucks = List.of(truck1, truck2, truck3);\n+\n+    @Override\n+    public List<Truck> get() {\n+        return trucks;\n+    }\n+}"
  }
]
