[
  {
    "sha": "05de781e2fedd27a4825f5ce644e3d47cb19d90e",
    "filename": "src/main/java/core/basesyntax/BaseFigure.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/BaseFigure.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/BaseFigure.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/BaseFigure.java?ref=b10b69712106d51f7bfdb89728c3799d04d4fe1f",
    "patch": "@@ -0,0 +1,17 @@\n+package core.basesyntax;\n+\n+public abstract class BaseFigure {\n+    private String color;\n+\n+    public BaseFigure() {\n+        setColor(ColorSupplier.getRandomColor());\n+    }\n+\n+    public String getColor() {\n+        return color;\n+    }\n+\n+    public void setColor(String color) {\n+        this.color = color;\n+    }\n+}"
  },
  {
    "sha": "6c86c2c4a0caf5fbd25918ac9f360f1b0999a799",
    "filename": "src/main/java/core/basesyntax/Behaviour.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/Behaviour.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/Behaviour.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/Behaviour.java?ref=b10b69712106d51f7bfdb89728c3799d04d4fe1f",
    "patch": "@@ -0,0 +1,7 @@\n+package core.basesyntax;\n+\n+public interface Behaviour {\n+    double getArea();\n+\n+    public void draw();\n+}"
  },
  {
    "sha": "933bc7ae916ee7e558219c9f1a1e99df06207efc",
    "filename": "src/main/java/core/basesyntax/Circle.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/Circle.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/Circle.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/Circle.java?ref=b10b69712106d51f7bfdb89728c3799d04d4fe1f",
    "patch": "@@ -0,0 +1,20 @@\n+package core.basesyntax;\n+\n+public class Circle extends BaseFigure implements Behaviour {\n+    private int radius;\n+\n+    public Circle(int radius) {\n+        super();\n+        this.radius = radius;\n+    }\n+\n+    @Override\n+    public double getArea() {\n+        return Math.PI * radius * radius;\n+    }\n+\n+    @Override\n+    public void draw() {\n+        System.out.println(\"Circle with color: \" + getColor() + \" and radius: \" + radius);\n+    }\n+}"
  },
  {
    "sha": "26ba3fc4ea6825ebf8e749a0209c66bbf1d66555",
    "filename": "src/main/java/core/basesyntax/ColorSupplier.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/ColorSupplier.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/ColorSupplier.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/ColorSupplier.java?ref=b10b69712106d51f7bfdb89728c3799d04d4fe1f",
    "patch": "@@ -0,0 +1,12 @@\n+package core.basesyntax;\n+\n+import java.util.Random;\n+\n+public class ColorSupplier {\n+    private static final String[] colorList =\n+            new String[]{\"yellow\", \"orange\", \"blue\", \"white\", \"black\", \"brown\", \"purple\", \"green\"};\n+\n+    public static String getRandomColor() {\n+        return colorList[new Random().nextInt(colorList.length - 1)];\n+    }\n+}"
  },
  {
    "sha": "efcf6231abf18bede1fcfbb39f8ec8e4cadba910",
    "filename": "src/main/java/core/basesyntax/FigureSupplier.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/FigureSupplier.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/FigureSupplier.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/FigureSupplier.java?ref=b10b69712106d51f7bfdb89728c3799d04d4fe1f",
    "patch": "@@ -0,0 +1,31 @@\n+package core.basesyntax;\n+\n+import java.util.Random;\n+\n+public class FigureSupplier {\n+    private static final String[] figureList =\n+            new String[]{\"Circle\", \"Rectangle\", \"Square\", \"RightTriangle\", \"IsoscelesTrapezoid\"};\n+    private static final Random random = new Random();\n+    private static final int LIMIT = 10;\n+\n+    public static Behaviour getFigureProperty() {\n+        String figure = figureList[random.nextInt(figureList.length)];\n+\n+        switch (figure) {\n+            case \"Circle\":\n+                return new Circle(random.nextInt(LIMIT));\n+            case \"Rectangle\":\n+                return new Rectangle(random.nextInt(LIMIT), random.nextInt(LIMIT));\n+            case \"Square\":\n+                return new Square(random.nextInt(LIMIT));\n+            case \"RightTriangle\":\n+                return new RightTriangle(random.nextInt(LIMIT), random.nextInt(LIMIT));\n+            default:\n+                return new IsoscelesTrapezoid(\n+                        random.nextInt(LIMIT),\n+                        random.nextInt(LIMIT),\n+                        random.nextInt(LIMIT)\n+                );\n+        }\n+    }\n+}"
  },
  {
    "sha": "97db782bf71c55d1b9104e6f9007f913808998e7",
    "filename": "src/main/java/core/basesyntax/HelloWorld.java",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/0dc7f2296283c52356dfc4df2d9cce7044ff0934/src/main/java/core/basesyntax/HelloWorld.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/0dc7f2296283c52356dfc4df2d9cce7044ff0934/src/main/java/core/basesyntax/HelloWorld.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/HelloWorld.java?ref=0dc7f2296283c52356dfc4df2d9cce7044ff0934",
    "patch": "@@ -1,8 +0,0 @@\n-package core.basesyntax;\n-\n-/**\n- * Feel free to remove this class and create your own.\n- */\n-public class HelloWorld {\n-\n-}"
  },
  {
    "sha": "8f7ca7f76ad4e125592255a3f37d81aaf1f671ed",
    "filename": "src/main/java/core/basesyntax/IsoscelesTrapezoid.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/IsoscelesTrapezoid.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/IsoscelesTrapezoid.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/IsoscelesTrapezoid.java?ref=b10b69712106d51f7bfdb89728c3799d04d4fe1f",
    "patch": "@@ -0,0 +1,28 @@\n+package core.basesyntax;\n+\n+public class IsoscelesTrapezoid extends BaseFigure implements Behaviour {\n+    private int base1;\n+    private int base2;\n+    private int height;\n+\n+    public IsoscelesTrapezoid(int base1, int base2, int height) {\n+        super();\n+        this.base1 = base1;\n+        this.base2 = base2;\n+        this.height = height;\n+    }\n+\n+    @Override\n+    public double getArea() {\n+        return (base1 + base2) / 2 * height;\n+    }\n+\n+    @Override\n+    public void draw() {\n+        System.out.println(\"Isosceles trapezoid with color: \"\n+                + getColor() + \", base1: \"\n+                + base1 + \" , base2: \"\n+                + base2 + \" and height: \"\n+                + height);\n+    }\n+}"
  },
  {
    "sha": "87d841906f87e4368d64f2bec8e77e98380d72c2",
    "filename": "src/main/java/core/basesyntax/Main.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/Main.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/Main.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/Main.java?ref=b10b69712106d51f7bfdb89728c3799d04d4fe1f",
    "patch": "@@ -0,0 +1,12 @@\n+package core.basesyntax;\n+\n+/**\n+ * Feel free to remove this class and create your own.\n+ */\n+public class Main {\n+    public static void main(String[] args) {\n+        Behaviour randomFigure = FigureSupplier.getFigureProperty();\n+        randomFigure.draw();\n+    }\n+}\n+"
  },
  {
    "sha": "8c3d9794c32500ad05f4fb5c55bc9379e8587a46",
    "filename": "src/main/java/core/basesyntax/Rectangle.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/Rectangle.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/Rectangle.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/Rectangle.java?ref=b10b69712106d51f7bfdb89728c3799d04d4fe1f",
    "patch": "@@ -0,0 +1,24 @@\n+package core.basesyntax;\n+\n+public class Rectangle extends BaseFigure implements Behaviour {\n+    private int width;\n+    private int height;\n+\n+    public Rectangle(int width, int height) {\n+        super();\n+        this.width = width;\n+        this.height = height;\n+    }\n+\n+    @Override\n+    public double getArea() {\n+        return width * height;\n+    }\n+\n+    @Override\n+    public void draw() {\n+        System.out.println(\"Rectangle with color: \" + getColor()\n+                + \", width: \" + width\n+                + \" and height: \" + height);\n+    }\n+}"
  },
  {
    "sha": "13cbe50a8eb7a5f4d15cf1ab95a52c42dd3c9ff8",
    "filename": "src/main/java/core/basesyntax/RightTriangle.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/RightTriangle.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/RightTriangle.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/RightTriangle.java?ref=b10b69712106d51f7bfdb89728c3799d04d4fe1f",
    "patch": "@@ -0,0 +1,25 @@\n+package core.basesyntax;\n+\n+public class RightTriangle extends BaseFigure implements Behaviour {\n+    private int base;\n+    private int height;\n+\n+    public RightTriangle(int base, int height) {\n+        super();\n+        this.base = base;\n+        this.height = height;\n+    }\n+\n+    @Override\n+    public double getArea() {\n+        return 0.5 * base * height;\n+    }\n+\n+    @Override\n+    public void draw() {\n+        System.out.println(\"Right triangle with color: \"\n+                + getColor() + \", base: \"\n+                + base + \" and height: \"\n+                + height);\n+    }\n+}"
  },
  {
    "sha": "3a7314a43ae5330fe56653f27f4289f3403b704b",
    "filename": "src/main/java/core/basesyntax/Square.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/mate-academy/jv-oop-advanced/blob/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/Square.java",
    "raw_url": "https://github.com/mate-academy/jv-oop-advanced/raw/b10b69712106d51f7bfdb89728c3799d04d4fe1f/src/main/java/core/basesyntax/Square.java",
    "contents_url": "https://api.github.com/repos/mate-academy/jv-oop-advanced/contents/src/main/java/core/basesyntax/Square.java?ref=b10b69712106d51f7bfdb89728c3799d04d4fe1f",
    "patch": "@@ -0,0 +1,20 @@\n+package core.basesyntax;\n+\n+public class Square extends BaseFigure implements Behaviour {\n+    private double side;\n+\n+    public Square(double side) {\n+        super();\n+        this.side = side;\n+    }\n+\n+    @Override\n+    public double getArea() {\n+        return side * side;\n+    }\n+\n+    @Override\n+    public void draw() {\n+        System.out.println(\"Square with color: \" + getColor() + \" and side: \" + side);\n+    }\n+}"
  }
]
