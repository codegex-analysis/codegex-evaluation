[
  {
    "sha": "03eaa44bad6f2a761446fb921eec5e774da134e0",
    "filename": ".idea/compiler.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/.idea/compiler.xml",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/.idea/compiler.xml?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -8,7 +8,15 @@\n         <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n         <outputRelativeToContentRoot value=\"true\" />\n         <module name=\"lesson1\" />\n+        <module name=\"lesson6\" />\n       </profile>\n     </annotationProcessing>\n+    <bytecodeTargetLevel>\n+      <module name=\"lesson2\" target=\"12\" />\n+      <module name=\"lesson3\" target=\"8\" />\n+      <module name=\"lesson4\" target=\"1.8\" />\n+      <module name=\"lesson5\" target=\"8\" />\n+      <module name=\"lesson7\" target=\"1.8\" />\n+    </bytecodeTargetLevel>\n   </component>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "3e3960b71eaef30230fcaeef29ebc18216501448",
    "filename": ".idea/gradle.xml",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/.idea/gradle.xml",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/.idea/gradle.xml",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/.idea/gradle.xml?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "e6cfd109989b06eec3b2f5beadbeddffc28df8f9",
    "filename": "lesson6/full.sql",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/full.sql",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/full.sql",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/full.sql?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,52 @@\n+BEGIN;\n+\n+DROP TABLE IF EXISTS client CASCADE;\n+CREATE TABLE client (id bigserial PRIMARY KEY, name varchar(255));\n+INSERT INTO client (name) VALUES\n+('Alexander'),\n+('Ivan'),\n+('Peter'),\n+('Nicolay'),\n+('John');\n+\n+DROP TABLE IF EXISTS list CASCADE;\n+CREATE TABLE list (id bigserial PRIMARY KEY, user_id bigint REFERENCES client (id));\n+INSERT INTO list (user_id) VALUES\n+('1'),\n+('1'),\n+('2'),\n+('3'),\n+('4'),\n+('4'),\n+('5');\n+\n+DROP TABLE IF EXISTS product CASCADE;\n+CREATE TABLE product (id bigserial PRIMARY KEY, title varchar(255), cost int);\n+INSERT INTO product (title, cost) VALUES\n+('apple', '20'),\n+('soap', '5'),\n+('tea', '17'),\n+('bread', '3'),\n+('paper', '13'),\n+('onion', '2'),\n+('cup', '130'),\n+('pen', '20'),\n+('lamp', '1000'),\n+('phone charge', '2578');\n+\n+DROP TABLE IF EXISTS list_product CASCADE;\n+CREATE TABLE list_product (list_id bigint, product_id bigint, FOREIGN KEY (list_id) REFERENCES list (id), FOREIGN KEY (product_id) REFERENCES product(id));\n+INSERT INTO list_product (list_id, product_id) VALUES\n+('1', '1'),\n+('1', '4'),\n+('1', '6'),\n+('2', '1'),\n+('2', '5'),\n+('2', '8'),\n+('3', '3'),\n+('3', '2'),\n+('4', '2'),\n+('4', '1'),\n+('4', '7');\n+\n+COMMIT;\n\\ No newline at end of file"
  },
  {
    "sha": "a726582420d171d0ca5aee12f191650e550703e4",
    "filename": "lesson6/pom.xml",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/pom.xml",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/pom.xml",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/pom.xml?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,48 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>SpringGB</artifactId>\n+        <groupId>ru.geekbrains</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>lesson6</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>8</maven.compiler.source>\n+        <maven.compiler.target>8</maven.compiler.target>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.hibernate</groupId>\n+            <artifactId>hibernate-core</artifactId>\n+            <version>5.4.4.Final</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.postgresql</groupId>\n+            <artifactId>postgresql</artifactId>\n+            <version>42.2.5</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.hibernate</groupId>\n+            <artifactId>hibernate-validator</artifactId>\n+            <version>5.4.3.Final</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.el</groupId>\n+            <artifactId>javax.el-api</artifactId>\n+            <version>2.2.4</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.web</groupId>\n+            <artifactId>javax.el</artifactId>\n+            <version>2.2.4</version>\n+        </dependency>\n+    </dependencies>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "2b002c9c66c2ce5f395ac9e5e4a392778a5e2437",
    "filename": "lesson6/src/main/java/ru/gb/hibernate/PrepareDataApp.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/PrepareDataApp.java",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/PrepareDataApp.java",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/java/ru/gb/hibernate/PrepareDataApp.java?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,37 @@\n+package ru.gb.hibernate;\n+\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.cfg.Configuration;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.stream.Collectors;\n+\n+public class PrepareDataApp {\n+    public static void forcePrepareData() {\n+        SessionFactory factory = new Configuration()\n+                .configure(\"configs/hibernate.cfg.xml\")\n+                .buildSessionFactory();\n+        Session session = null;\n+        try {\n+            String sql = Files.lines(Paths.get(\"lesson6/full.sql\")).collect(Collectors.joining(\" \"));\n+            session = factory.getCurrentSession();\n+            session.beginTransaction();\n+            session.createNativeQuery(sql).executeUpdate();\n+            session.getTransaction().commit();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        } finally {\n+            factory.close();\n+            if (session != null) {\n+                session.close();\n+            }\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        forcePrepareData();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c0957f322ef4af7a39ee021fd0bc4581123fa266",
    "filename": "lesson6/src/main/java/ru/gb/hibernate/shop/ShopApp.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/ShopApp.java",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/ShopApp.java",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/java/ru/gb/hibernate/shop/ShopApp.java?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.gb.hibernate.shop;\n+\n+import ru.gb.hibernate.shop.model.Client;\n+import ru.gb.hibernate.shop.model.Product;\n+import ru.gb.hibernate.shop.repositories.ClientRepository;\n+import ru.gb.hibernate.shop.repositories.ProductRepository;\n+\n+public class ShopApp {\n+    public static void main(String[] args) {\n+        ClientRepository userRepository = new ClientRepository();\n+        userRepository.showAllClient();\n+\n+        Client user = new Client(1L, \"Arkady\");\n+        userRepository.createClient(user);\n+        userRepository.showAllClient();\n+\n+        userRepository.update(1L, \"Pavel\", null);\n+        userRepository.showAllClient();\n+\n+        userRepository.delete(6L);\n+        userRepository.showAllClient();\n+\n+        ProductRepository productRepository = new ProductRepository();\n+        productRepository.showAllProduct();\n+\n+        Product product = new Product(3L, \"Mobile\", 365);\n+        productRepository.createProduct(product);\n+        productRepository.showAllProduct();\n+\n+        productRepository.update(2L, \"Ceed's\", 130, null);\n+        productRepository.showAllProduct();\n+\n+        productRepository.delete(12L);\n+        productRepository.showAllProduct();\n+\n+        userRepository.shutdown();\n+        productRepository.shutdown();\n+    }\n+}"
  },
  {
    "sha": "30bde172f2e23d9ba0236fce94d04c3a5efdbee2",
    "filename": "lesson6/src/main/java/ru/gb/hibernate/shop/model/Client.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/model/Client.java",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/model/Client.java",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/java/ru/gb/hibernate/shop/model/Client.java?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,64 @@\n+package ru.gb.hibernate.shop.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.hibernate.annotations.Cascade;\n+\n+import javax.persistence.*;\n+import java.util.List;\n+\n+@Data\n+@AllArgsConstructor\n+@Entity\n+@Table(name = \"client\")\n+public class Client {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @Column\n+    private String name;\n+\n+    @OneToMany(mappedBy = \"client\")\n+    @Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)\n+    private List<Order> orderList;\n+\n+    public Client() {}\n+\n+    public Client(long l, String name) {\n+        this.id = id;\n+        this.name = name;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public List<Order> getOrderList() {\n+        return orderList;\n+    }\n+\n+    public void setOrderList(List<Order> orderList) {\n+        this.orderList = orderList;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return String.format(\"Client [id = %d, name = %s]\", id, name);\n+    }\n+}"
  },
  {
    "sha": "b138b926ac0d2317eba46cdf821fdedeff10e56c",
    "filename": "lesson6/src/main/java/ru/gb/hibernate/shop/model/Order.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/model/Order.java",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/model/Order.java",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/java/ru/gb/hibernate/shop/model/Order.java?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,56 @@\n+package ru.gb.hibernate.shop.model;\n+import javax.persistence.*;\n+import java.util.List;\n+\n+@Entity\n+@Table(name = \"list\")\n+public class Order {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"client_id\")\n+    private Client client;\n+\n+    @ManyToMany\n+    @JoinTable(\n+            name = \"order_product\",\n+            joinColumns = @JoinColumn(name = \"order_id\"),\n+            inverseJoinColumns = @JoinColumn(name = \"product_id\")\n+    )\n+    private List<Product> productList;\n+\n+    public Order() {}\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public Client getUser() {\n+        return client;\n+    }\n+\n+    public void setUser(Client client) {\n+        this.client = client;\n+    }\n+\n+    public List<Product> getProductList() {\n+        return productList;\n+    }\n+\n+    public void setProductList(List<Product> productList) {\n+        this.productList = productList;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return String.format(\"Order [id = %d, Client = %s]\", id, client);\n+    }\n+}"
  },
  {
    "sha": "ec4a0292102f47fde743181ee010781a63d75c62",
    "filename": "lesson6/src/main/java/ru/gb/hibernate/shop/model/Product.java",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/model/Product.java",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/model/Product.java",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/java/ru/gb/hibernate/shop/model/Product.java?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,73 @@\n+package ru.gb.hibernate.shop.model;\n+\n+import javax.persistence.*;\n+import java.util.List;\n+\n+@Entity\n+@Table(name = \"product\")\n+public class Product {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @Column(name = \"cost\")\n+    private int cost;\n+\n+    @ManyToMany\n+    @JoinTable(\n+            name = \"order_product\",\n+            joinColumns = @JoinColumn(name = \"product_id\"),\n+            inverseJoinColumns = @JoinColumn(name = \"order_id\")\n+    )\n+    private List<Order> orderList;\n+\n+    public Product() {}\n+\n+    public Product(long id, String title, int cost) {\n+        this.id = id;\n+        this.title = title;\n+        this.cost = cost;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    public int getCost() {\n+        return cost;\n+    }\n+\n+    public void setCost(int cost) {\n+        this.cost = cost;\n+    }\n+\n+    public List<Order> getOrderList() {\n+        return orderList;\n+    }\n+\n+    public void setOrderList(List<Order> orderList) {\n+        this.orderList = orderList;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return String.format(\"Product [id = %d, title = %s, cost = %d]\", id, title, cost);\n+    }\n+}"
  },
  {
    "sha": "6bd299ef731fe50fdf2e1a21170d8c70d172e0b5",
    "filename": "lesson6/src/main/java/ru/gb/hibernate/shop/repositories/ClientRepository.java",
    "status": "added",
    "additions": 70,
    "deletions": 0,
    "changes": 70,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/repositories/ClientRepository.java",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/repositories/ClientRepository.java",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/java/ru/gb/hibernate/shop/repositories/ClientRepository.java?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,70 @@\n+package ru.gb.hibernate.shop.repositories;\n+\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.cfg.Configuration;\n+import ru.gb.hibernate.PrepareDataApp;\n+import ru.gb.hibernate.shop.model.Client;\n+import ru.gb.hibernate.shop.model.Order;\n+\n+import java.util.List;\n+\n+public class ClientRepository {\n+    private SessionFactory factory;\n+\n+    public ClientRepository() {\n+        PrepareDataApp.forcePrepareData();\n+        factory = new Configuration()\n+                .configure(\"configs/shop/hibernate.cfg.xml\")\n+                .buildSessionFactory();\n+    }\n+\n+    public void showAllClient() {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            List<Client> clients = session.createQuery(\"from Client\").getResultList();\n+            System.out.println(clients + \"\\n\");\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void createClient(Client client) {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            session.save(client);\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void update(Long id, String name, Order order) {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            String sqlQuery = String.format(\"select c from Client c where c.id = %d\", id);\n+            Client client = session.createQuery(sqlQuery, Client.class).getSingleResult();\n+\n+            if(order == null) {\n+                client.setName(name);\n+            }else {\n+                List<Order> clientlist  = client.getOrderList();\n+                clientlist.add(order);\n+                client.setOrderList(clientlist);\n+            }\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+\n+    public void delete(Long id) {\n+       try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            String sqlQuery = String.format(\"select c from Client c where c.id = %d\", id);\n+            Client client = session.createQuery(sqlQuery, Client.class).getSingleResult();\n+            session.delete(client);\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void shutdown() {\n+        factory.close();\n+    }\n+}"
  },
  {
    "sha": "e2934bf897738e9521ac0469199855325f8a6f72",
    "filename": "lesson6/src/main/java/ru/gb/hibernate/shop/repositories/OrderRepository.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/repositories/OrderRepository.java",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/repositories/OrderRepository.java",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/java/ru/gb/hibernate/shop/repositories/OrderRepository.java?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,66 @@\n+package ru.gb.hibernate.shop.repositories;\n+\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.cfg.Configuration;\n+import ru.gb.hibernate.PrepareDataApp;\n+import ru.gb.hibernate.shop.model.Client;\n+import ru.gb.hibernate.shop.model.Order;\n+import ru.gb.hibernate.shop.model.Product;\n+\n+import java.util.List;\n+\n+public class OrderRepository {\n+    private SessionFactory factory;\n+\n+    public OrderRepository() {\n+        PrepareDataApp.forcePrepareData();\n+        factory = new Configuration()\n+                .configure(\"configs/shop/hibernate.cfg.xml\")\n+                .buildSessionFactory();\n+    }\n+\n+    public void showAllOrder() {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            List<Order> orderList = session.createQuery(\"from Order\").getResultList();\n+            System.out.println(orderList + \"\\n\");\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void createOrder(Order order) {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            session.save(order);\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void update(Long id, Client client, Product product) {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            String sqlQuery = String.format(\"select o from Order o where o.id = %d\", id);\n+            Order order = session.createQuery(sqlQuery, Order.class).getSingleResult();\n+            order.setUser(client);\n+            List<Product> products = order.getProductList();\n+            products.add(product);\n+            order.setProductList(products);\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void delete(Long id) {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            String sqlQuery = String.format(\"select o from Order o where o.id = %d\", id);\n+            Order order = session.createQuery(sqlQuery, Order.class).getSingleResult();\n+            session.delete(order);\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void shutdown() {\n+        factory.close();\n+    }\n+}"
  },
  {
    "sha": "9952bbe38a8e611c0f77a73ab050c72599448904",
    "filename": "lesson6/src/main/java/ru/gb/hibernate/shop/repositories/ProductRepository.java",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/repositories/ProductRepository.java",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/repositories/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/java/ru/gb/hibernate/shop/repositories/ProductRepository.java?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,69 @@\n+package ru.gb.hibernate.shop.repositories;\n+\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.cfg.Configuration;\n+import ru.gb.hibernate.PrepareDataApp;\n+import ru.gb.hibernate.shop.model.Order;\n+import ru.gb.hibernate.shop.model.Product;\n+\n+import java.util.List;\n+\n+public class ProductRepository {\n+    private SessionFactory factory;\n+\n+    public ProductRepository() {\n+        PrepareDataApp.forcePrepareData();\n+        factory = new Configuration()\n+                .configure(\"configs/shop/hibernate.cfg.xml\")\n+                .buildSessionFactory();\n+    }\n+\n+    public void showAllProduct() {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            List<Product> product = session.createQuery(\"from Product\").getResultList();\n+            System.out.println(product + \"\\n\");\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void createProduct(Product product) {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            session.save(product);\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void update(Long id, String title, int cost, Order order) {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            String sqlQuery = String.format(\"select p from Product p where p.id = %d\", id);\n+            Product product = session.createQuery(sqlQuery, Product.class).getSingleResult();\n+            if(order == null) {\n+                product.setTitle(title);\n+                product.setCost(cost);\n+            }else {\n+                List<Order> orderList  = product.getOrderList();\n+                orderList.add(order);\n+                product.setOrderList(orderList);\n+            }\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void delete(Long id) {\n+        try (Session session = factory.getCurrentSession()) {\n+            session.beginTransaction();\n+            String sqlQuery = String.format(\"select p from Product p where p.id = %d\", id);\n+            Product product = session.createQuery(sqlQuery, Product.class).getSingleResult();\n+            session.delete(product);\n+            session.getTransaction().commit();\n+        }\n+    }\n+\n+    public void shutdown() {\n+        factory.close();\n+    }\n+}"
  },
  {
    "sha": "902f71fb2ea0464a0e6e30d0149c3df335d77639",
    "filename": "lesson6/src/main/java/ru/gb/hibernate/shop/services/ShopService.java",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/services/ShopService.java",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/java/ru/gb/hibernate/shop/services/ShopService.java",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/java/ru/gb/hibernate/shop/services/ShopService.java?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,4 @@\n+package ru.gb.hibernate.shop.services;\n+\n+public class ShopService {\n+}"
  },
  {
    "sha": "11823f9d1761ca00f4bde065003c2c6df9d9ba2b",
    "filename": "lesson6/src/main/resources/configs/hibernate.cfg.xml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/resources/configs/hibernate.cfg.xml",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/resources/configs/hibernate.cfg.xml",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/resources/configs/hibernate.cfg.xml?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,16 @@\n+<!DOCTYPE hibernate-configuration PUBLIC\n+        \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n+        \"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\">\n+\n+<hibernate-configuration>\n+    <session-factory>\n+        <property name=\"connection.driver_class\">org.postgresql.Driver</property>\n+        <property name=\"connection.url\">jdbc:postgresql://localhost:5432/postgres?currentSchema=shop</property>\n+        <property name=\"connection.username\">postgres</property>\n+        <property name=\"connection.password\">qazwsxCDE42</property>\n+        <property name=\"connection.pool_size\">8</property>\n+        <property name=\"dialect\">org.hibernate.dialect.PostgreSQL10Dialect</property>\n+        <property name=\"show_sql\">true</property>\n+        <property name=\"current_session_context_class\">thread</property>\n+    </session-factory>\n+</hibernate-configuration>\n\\ No newline at end of file"
  },
  {
    "sha": "ef37dc66dc1582d84985a8692ee1525c8f663d6b",
    "filename": "lesson6/src/main/resources/configs/shop/hibernate.cfg.xml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/resources/configs/shop/hibernate.cfg.xml",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/resources/configs/shop/hibernate.cfg.xml",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/resources/configs/shop/hibernate.cfg.xml?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,20 @@\n+<!DOCTYPE hibernate-configuration PUBLIC\n+        \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n+        \"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\">\n+\n+<hibernate-configuration>\n+    <session-factory>\n+        <property name=\"connection.driver_class\">org.postgresql.Driver</property>\n+        <property name=\"connection.url\">jdbc:postgresql://localhost:5432/postgres?currentSchema=shop</property>\n+        <property name=\"connection.username\">postgres</property>\n+        <property name=\"connection.password\">qazwsxCDE42</property>\n+        <property name=\"connection.pool_size\">8</property>\n+        <property name=\"dialect\">org.hibernate.dialect.PostgreSQL10Dialect</property>\n+        <property name=\"show_sql\">true</property>\n+        <property name=\"current_session_context_class\">thread</property>\n+\n+        <mapping class=\"ru.gb.hibernate.shop.model.Product\"/>\n+        <mapping class=\"ru.gb.hibernate.shop.model.Order\"/>\n+        <mapping class=\"ru.gb.hibernate.shop.model.Client\"/>\n+    </session-factory>\n+</hibernate-configuration>\n\\ No newline at end of file"
  },
  {
    "sha": "446f0e43dae3d0356a7e79c09a382669424d7a26",
    "filename": "lesson6/src/main/resources/hibernate.properties",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/resources/hibernate.properties",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/lesson6/src/main/resources/hibernate.properties",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/lesson6/src/main/resources/hibernate.properties?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -0,0 +1,7 @@\n+hibernate.connection.driver_class = org.postgresql.Driver\n+hibernate.connection.url = jdbc:postgresql://localhost:5432/postgres?currentSchema=shop\n+hibernate.connection.username = postgres\n+hibernate.connection.password = qazwsxCDE42\n+hibernate.show_sql=true\n+hibernate.dialect = org.hibernate.dialect.PostgreSQL10Dialect\n+hibernate.current_session_context_class=thread\n\\ No newline at end of file"
  },
  {
    "sha": "f51931ef4aab1d99ea2a8d8271c18b023c7b8516",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/f4natic/SpringGB/blob/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/pom.xml",
    "raw_url": "https://github.com/f4natic/SpringGB/raw/418ea56d85f72b3dd932c493ee5c9b83dd5f6e08/pom.xml",
    "contents_url": "https://api.github.com/repos/f4natic/SpringGB/contents/pom.xml?ref=418ea56d85f72b3dd932c493ee5c9b83dd5f6e08",
    "patch": "@@ -10,6 +10,7 @@\n     <version>1.0-SNAPSHOT</version>\n     <modules>\n         <module>lesson1</module>\n+        <module>lesson6</module>\n     </modules>\n \n     <properties>"
  }
]
