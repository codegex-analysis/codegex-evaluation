[
  {
    "sha": "caf7dbe946ca39edc6f8a6758b1031aa7ac836d4",
    "filename": "TGM/src/main/java/network/warzone/tgm/command/CycleCommands.java",
    "status": "modified",
    "additions": 34,
    "deletions": 15,
    "changes": 49,
    "blob_url": "https://github.com/Warzone/TGM/blob/d10b5a26182a4b718d69a2b563441fd8fb79ba3e/TGM/src/main/java/network/warzone/tgm/command/CycleCommands.java",
    "raw_url": "https://github.com/Warzone/TGM/raw/d10b5a26182a4b718d69a2b563441fd8fb79ba3e/TGM/src/main/java/network/warzone/tgm/command/CycleCommands.java",
    "contents_url": "https://api.github.com/repos/Warzone/TGM/contents/TGM/src/main/java/network/warzone/tgm/command/CycleCommands.java?ref=d10b5a26182a4b718d69a2b563441fd8fb79ba3e",
    "patch": "@@ -172,13 +172,17 @@ public static void cycle(CommandContext cmd, CommandSender sender) {\n                 }\n             }\n             TGM.get().getModule(CycleCountdown.class).start(time);\n+            String broadcast;\n+            if (time == 0) {\n+                broadcast = ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" cycled the map\";\n+            } else {\n+                broadcast = ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" set the cycle countdown to \" +\n+                        ChatColor.YELLOW + time + ChatColor.GRAY + \" second\" + (time == 1 ? \"\" : \"s\");\n+            }\n             for (Player player : Bukkit.getOnlinePlayers().stream().filter((player) -> player.hasPermission(\"tgm.cycle\")).collect(Collectors.toSet())) {\n-                if (time == 0) {\n-                    player.sendMessage(ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" cycled the map\");\n-                    continue;\n-                }\n-                player.sendMessage(ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" set the cycle countdown to \" + ChatColor.YELLOW + time + ChatColor.GRAY + \" second\" + (time == 1 ? \"\" : \"s\"));\n+                player.sendMessage(broadcast);\n             }\n+            Bukkit.getConsoleSender().sendMessage(broadcast);\n         } else {\n             sender.sendMessage(ChatColor.RED + \"A match is currently in progress.\");\n         }\n@@ -202,13 +206,17 @@ public static void start(CommandContext cmd, CommandSender sender) {\n             if (!soloStart)\n                 sender.sendMessage(ChatColor.GREEN + \"Match will start in \" + time + \" second\" + (time == 1 ? \"\" : \"s\") + \".\");\n             TGM.get().getModule(StartCountdown.class).start((soloStart) ? 0 : time);\n+            String broadcast;\n+            if (time == 0) {\n+                broadcast = ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" started the match\";\n+            } else {\n+                broadcast = ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" set the start countdown to \" +\n+                        ChatColor.YELLOW + time + ChatColor.GRAY + \" second\" + (time == 1 ? \"\" : \"s\");\n+            }\n             for (Player player : Bukkit.getOnlinePlayers().stream().filter((player) -> player.hasPermission(\"tgm.start\")).collect(Collectors.toSet())) {\n-                if (time == 0) {\n-                    player.sendMessage(ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" started the match\");\n-                    continue;\n-                }\n-                player.sendMessage(ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" set the start countdown to \" + ChatColor.YELLOW + time + ChatColor.GRAY + \" second\" + (time == 1 ? \"\" : \"s\"));\n+                player.sendMessage(broadcast);\n             }\n+            Bukkit.getConsoleSender().sendMessage(broadcast);\n         } else {\n             sender.sendMessage(ChatColor.RED + \"The match cannot be started at this time.\");\n         }\n@@ -233,9 +241,11 @@ public static void end(CommandContext cmd, CommandSender sender) {\n                     TGM.get().getModule(TimeModule.class).endMatch();\n                 }\n             }\n+            String broadcast = ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" ended the match\";\n             for (Player player : Bukkit.getOnlinePlayers().stream().filter((player) -> player.hasPermission(\"tgm.end\")).collect(Collectors.toSet())) {\n-                player.sendMessage(ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" ended the match\");\n+                player.sendMessage(broadcast);\n             }\n+            Bukkit.getConsoleSender().sendMessage(broadcast);\n         } else {\n             sender.sendMessage(ChatColor.RED + \"No match in progress.\");\n         }\n@@ -247,9 +257,11 @@ public static void cancel(CommandContext cmd, CommandSender sender) {\n         for (Countdown countdown : TGM.get().getModules(Countdown.class)) {\n             countdown.cancel();\n         }\n+        String broadcast = ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" cancelled the countdowns\";\n         for (Player player : Bukkit.getOnlinePlayers().stream().filter((player) -> player.hasPermission(\"tgm.cancel\")).collect(Collectors.toSet())) {\n-            player.sendMessage(ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" cancelled the countdowns\");\n+            player.sendMessage(broadcast);\n         }\n+        Bukkit.getConsoleSender().sendMessage(broadcast);\n     }\n \n     @Command(aliases = {\"setnext\", \"sn\"}, desc = \"Set the next map.\", anyFlags = true, flags = \"s\")\n@@ -278,11 +290,14 @@ public static void setNext(CommandContext cmd, CommandSender sender) {\n \n             TGM.get().getMatchManager().setForcedNextMap(found);\n \n+            String broadcast = ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" set the next map to \" +\n+                    ChatColor.YELLOW + found.getMapInfo().getName() + ChatColor.GRAY + \" (\" + found.getMapInfo().getVersion() + \")\";\n+\n             boolean announceToEveryone = !cmd.hasFlag('s');\n             for (Player player : Bukkit.getOnlinePlayers().stream().filter((player) -> announceToEveryone || player.hasPermission(\"tgm.setnext\")).collect(Collectors.toSet())) {\n-                player.sendMessage(ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" set the next map to \" +\n-                        ChatColor.YELLOW + found.getMapInfo().getName() + ChatColor.GRAY + \" (\" + found.getMapInfo().getVersion() + \")\");\n+                player.sendMessage(broadcast);\n             }\n+            Bukkit.getConsoleSender().sendMessage(broadcast);\n         } else {\n             sender.sendMessage(ChatColor.RED + \"/sn [-s] <map_name>\");\n         }\n@@ -515,7 +530,11 @@ public static void team(CommandContext cmd, CommandSender sender) {\n     public static void loadmaps(CommandContext cmd, CommandSender sender) {\n         TGM.get().getMatchManager().getMapLibrary().refreshMaps();\n         TGM.get().getMatchManager().getMapRotation().refresh();\n-        sender.sendMessage(ChatColor.GREEN + \"Refreshed map library and rotation.\");\n+        String broadcast = ChatColor.YELLOW + sender.getName() + ChatColor.GRAY + \" refreshed the map library and rotation\";\n+        for (Player player : Bukkit.getOnlinePlayers().stream().filter((player) -> player.hasPermission(\"tgm.loadmaps\")).collect(Collectors.toSet())) {\n+            player.sendMessage(broadcast);\n+        }\n+        Bukkit.getConsoleSender().sendMessage(broadcast);\n         // Attempt to cycle to a new match, if a match does not yet exist after loading maps\n         if (TGM.get().getMatchManager().getMatch() == null) TGM.get().getMatchManager().cycleNextMatch();\n     }"
  }
]
