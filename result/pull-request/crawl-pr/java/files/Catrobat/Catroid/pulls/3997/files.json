[
  {
    "sha": "18ff0cf7a35989b77b7cd1e78020ca39d4912a93",
    "filename": "catroid/build.gradle",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/build.gradle",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/build.gradle",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/build.gradle?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -413,9 +413,10 @@ dependencies {\n     implementation \"androidx.camera:camera-lifecycle:${cameraXVersion}\"\n \n     // ML Kit\n-    implementation 'com.google.android.gms:play-services-mlkit-face-detection:16.0.0'\n-    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:16.1.0'\n-    implementation 'com.google.mlkit:language-id:16.1.0'\n+    implementation 'com.google.android.gms:play-services-mlkit-face-detection:16.1.4'\n+    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:16.1.3'\n+    implementation 'com.google.mlkit:language-id:16.1.1'\n+    implementation 'com.google.mlkit:pose-detection:17.0.0'\n \n     // libGDX\n     implementation \"com.badlogicgames.gdx:gdx:$gdxVersion\""
  },
  {
    "sha": "cb1bf879cb0869e4e32c2ed2a4d5be4df900683e",
    "filename": "catroid/src/androidTest/java/org/catrobat/catroid/test/formulaeditor/SensorHandlerTest.kt",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/androidTest/java/org/catrobat/catroid/test/formulaeditor/SensorHandlerTest.kt",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/androidTest/java/org/catrobat/catroid/test/formulaeditor/SensorHandlerTest.kt",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/androidTest/java/org/catrobat/catroid/test/formulaeditor/SensorHandlerTest.kt?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -29,7 +29,7 @@ import androidx.test.core.app.ApplicationProvider\n import androidx.test.rule.GrantPermissionRule\n import com.google.mlkit.vision.face.Face\n import org.catrobat.catroid.ProjectManager\n-import org.catrobat.catroid.camera.FaceAndTextDetector\n+import org.catrobat.catroid.camera.FaceTextPoseDetector\n import org.catrobat.catroid.content.Project\n import org.catrobat.catroid.formulaeditor.SensorHandler\n import org.catrobat.catroid.formulaeditor.SensorLoudness\n@@ -79,10 +79,10 @@ class SensorHandlerTest {\n \n         val firstFaceSize = 50\n         val firstFacePosition = Point(15, -15)\n-        FaceAndTextDetector.facesForSensors[0] = Mockito.mock(Face::class.java)\n+        FaceTextPoseDetector.facesForSensors[0] = Mockito.mock(Face::class.java)\n \n-        FaceAndTextDetector.updateDetectionStatus()\n-        FaceAndTextDetector.onFaceDetected(firstFacePosition, firstFaceSize, 0)\n+        FaceTextPoseDetector.updateFaceDetectionStatusSensorValues()\n+        FaceTextPoseDetector.updateFaceSensorValues(firstFacePosition, firstFaceSize, 0)\n \n         compareToSensor(1, Sensors.FACE_DETECTED)\n         compareToSensor(firstFaceSize, Sensors.FACE_SIZE)\n@@ -98,10 +98,10 @@ class SensorHandlerTest {\n \n         val secondFaceSize = 50\n         val secondFacePosition = Point(15, -15)\n-        FaceAndTextDetector.facesForSensors[1] = Mockito.mock(Face::class.java)\n+        FaceTextPoseDetector.facesForSensors[1] = Mockito.mock(Face::class.java)\n \n-        FaceAndTextDetector.updateDetectionStatus()\n-        FaceAndTextDetector.onFaceDetected(secondFacePosition, secondFaceSize, 1)\n+        FaceTextPoseDetector.updateFaceDetectionStatusSensorValues()\n+        FaceTextPoseDetector.updateFaceSensorValues(secondFacePosition, secondFaceSize, 1)\n \n         compareToSensor(1, Sensors.SECOND_FACE_DETECTED)\n         compareToSensor(secondFaceSize, Sensors.SECOND_FACE_SIZE)"
  },
  {
    "sha": "29dddf724f1ce52ffb40af2de68a729a147866cf",
    "filename": "catroid/src/main/java/org/catrobat/catroid/camera/CameraManager.kt",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/camera/CameraManager.kt",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/camera/CameraManager.kt",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/camera/CameraManager.kt?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -236,7 +236,7 @@ class CameraManager(private val stageActivity: StageActivity) : LifecycleOwner {\n \n     @UiThread\n     private fun bindFaceAndTextDetector() = bindUseCase(analysisUseCase).also {\n-        analysisUseCase.setAnalyzer(Executors.newSingleThreadExecutor(), FaceAndTextDetector)\n+        analysisUseCase.setAnalyzer(Executors.newSingleThreadExecutor(), FaceTextPoseDetector)\n     }\n \n     @UiThread"
  },
  {
    "sha": "14eed64871e59faa46868865b877af0f1fd5da4a",
    "filename": "catroid/src/main/java/org/catrobat/catroid/camera/FaceAndTextDetector.kt",
    "status": "removed",
    "additions": 0,
    "deletions": 283,
    "changes": 283,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/44dee989505fea96ee13989d1d3cb7f7f71e5b99/catroid/src/main/java/org/catrobat/catroid/camera/FaceAndTextDetector.kt",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/44dee989505fea96ee13989d1d3cb7f7f71e5b99/catroid/src/main/java/org/catrobat/catroid/camera/FaceAndTextDetector.kt",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/camera/FaceAndTextDetector.kt?ref=44dee989505fea96ee13989d1d3cb7f7f71e5b99",
    "patch": "@@ -1,283 +0,0 @@\n-/*\n- * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2021 The Catrobat Team\n- * (<http://developer.catrobat.org/credits>)\n- *\n- * This program is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as\n- * published by the Free Software Foundation, either version 3 of the\n- * License, or (at your option) any later version.\n- *\n- * An additional term exception under section 7 of the GNU Affero\n- * General Public License, version 3, is available at\n- * http://developer.catrobat.org/license_additional_term\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n- */\n-package org.catrobat.catroid.camera\n-\n-import android.graphics.Point\n-import android.os.Build\n-import android.util.Log\n-import androidx.annotation.VisibleForTesting\n-import androidx.camera.core.ExperimentalGetImage\n-import androidx.camera.core.ImageAnalysis\n-import androidx.camera.core.ImageProxy\n-import com.google.mlkit.vision.common.InputImage\n-import com.google.mlkit.vision.face.Face\n-import com.google.mlkit.vision.face.FaceDetection\n-import com.google.mlkit.vision.face.FaceDetectorOptions\n-import com.google.mlkit.vision.text.Text\n-import com.google.mlkit.vision.text.TextRecognition\n-import org.catrobat.catroid.CatroidApplication\n-import org.catrobat.catroid.ProjectManager\n-import org.catrobat.catroid.R\n-import org.catrobat.catroid.common.Constants.COORDINATE_TRANSFORMATION_OFFSET\n-import org.catrobat.catroid.common.ScreenValues.SCREEN_HEIGHT\n-import org.catrobat.catroid.common.ScreenValues.SCREEN_WIDTH\n-import org.catrobat.catroid.formulaeditor.SensorCustomEvent\n-import org.catrobat.catroid.formulaeditor.SensorCustomEventListener\n-import org.catrobat.catroid.formulaeditor.Sensors\n-import org.catrobat.catroid.stage.StageActivity\n-import org.catrobat.catroid.utils.TextBlockUtil\n-import kotlin.math.roundToInt\n-\n-object FaceAndTextDetector : ImageAnalysis.Analyzer {\n-    private const val MAX_FACE_SIZE = 100\n-    private const val FACE_SENSORS = 2\n-    private val sensorListeners = mutableSetOf<SensorCustomEventListener>()\n-\n-    @VisibleForTesting(otherwise = VisibleForTesting.PRIVATE)\n-    var facesForSensors: Array<Face?> = Array(FACE_SENSORS) { _ -> null }\n-    private var faceIds: IntArray = IntArray(FACE_SENSORS) { _ -> -1 }\n-    private val faceDetectionClient by lazy {\n-        FaceDetection.getClient(\n-            FaceDetectorOptions.Builder()\n-                .setClassificationMode(FaceDetectorOptions.CLASSIFICATION_MODE_ALL)\n-                .enableTracking()\n-                .build()\n-        )\n-    }\n-    private val textDetectionClient = TextRecognition.getClient()\n-\n-    private var textDetected = false\n-    private var faceDetected = false\n-\n-    @JvmStatic\n-    fun addListener(listener: SensorCustomEventListener) {\n-        sensorListeners.add(listener)\n-    }\n-\n-    @JvmStatic\n-    fun removeListener(listener: SensorCustomEventListener) {\n-        sensorListeners.remove(listener)\n-    }\n-\n-    @ExperimentalGetImage\n-    override fun analyze(imageProxy: ImageProxy) {\n-        imageProxy.image?.let { mediaImage ->\n-            val image = InputImage.fromMediaImage(\n-                mediaImage,\n-                imageProxy.imageInfo.rotationDegrees\n-            )\n-\n-            faceDetected = false\n-            textDetected = false\n-\n-            textDetectionClient.process(image)\n-                .addOnSuccessListener { text ->\n-                    updateTextSensorValues(text, mediaImage.width, mediaImage.height)\n-                    textDetected = true\n-                    if (faceDetected) {\n-                        imageProxy.close()\n-                    }\n-                }\n-                .addOnFailureListener { e ->\n-                    val context = StageActivity.activeStageActivity.get()\n-                    StageActivity.messageHandler.obtainMessage(\n-                        StageActivity.SHOW_TOAST,\n-                        arrayListOf(context?.getString(R.string.camera_error_text_detection))\n-                    ).sendToTarget()\n-                    Log.e(javaClass.simpleName, \"Could not analyze image.\", e)\n-                }\n-\n-            faceDetectionClient.process(image)\n-                .addOnSuccessListener { faces ->\n-                    updateFaceSensorValues(faces, mediaImage.width, mediaImage.height)\n-                    faceDetected = true\n-                    if (textDetected) {\n-                        imageProxy.close()\n-                    }\n-                }\n-                .addOnFailureListener { e ->\n-                    updateDetectionStatus()\n-                    val context = CatroidApplication.getAppContext()\n-                    StageActivity.messageHandler.obtainMessage(\n-                        StageActivity.SHOW_TOAST,\n-                        arrayListOf(context.getString(R.string.camera_error_face_detection))\n-                    ).sendToTarget()\n-                    Log.e(javaClass.simpleName, \"Could not analyze image.\", e)\n-                }\n-        }\n-    }\n-\n-    private fun updateTextSensorValues(text: Text, imageWidth: Int, imageHeight: Int) {\n-        val detected = text.textBlocks.isEmpty().not()\n-        if (detected) {\n-            translateTextToSensorValues(text, imageWidth, imageHeight)\n-        }\n-    }\n-\n-    private fun translateTextToSensorValues(text: Text, imageWidth: Int, imageHeight: Int) {\n-        val textFromCamera = text.text\n-\n-        val textBlocksNumber = text.textBlocks.size\n-\n-        TextBlockUtil.setTextBlocks(text.textBlocks, imageWidth, imageHeight)\n-\n-        onTextDetected(textFromCamera, textBlocksNumber)\n-    }\n-\n-    @VisibleForTesting(otherwise = VisibleForTesting.PRIVATE)\n-    fun onTextDetected(text: String, size: Int) {\n-        sensorListeners.forEach {\n-            it.onCustomSensorChanged(\n-                SensorCustomEvent(Sensors.TEXT_FROM_CAMERA, arrayOf(text))\n-            )\n-            it.onCustomSensorChanged(\n-                SensorCustomEvent(Sensors.TEXT_BLOCKS_NUMBER, floatArrayOf(size.toFloat()))\n-            )\n-        }\n-    }\n-\n-    private fun updateFaceSensorValues(faces: List<Face>, imageWidth: Int, imageHeight: Int) {\n-        handleAlreadyExistingFaces(faces)\n-        facesForSensors.forEachIndexed { index, face ->\n-            if (face == null) {\n-                attachNewFaceIfExisting(faces, index)\n-            }\n-        }\n-        updateDetectionStatus()\n-        facesForSensors.forEachIndexed { index, face ->\n-            face?.let { translateFaceToSensorValues(face, index, imageWidth, imageHeight) }\n-        }\n-        facesForSensors.fill(null)\n-    }\n-\n-    private fun handleAlreadyExistingFaces(faces: List<Face>) {\n-        for (face in faces) {\n-            when (face.trackingId) {\n-                faceIds[0] -> facesForSensors[0] = face\n-                faceIds[1] -> facesForSensors[1] = face\n-            }\n-        }\n-    }\n-\n-    private fun attachNewFaceIfExisting(faces: List<Face>, index: Int) {\n-        for (face in faces) {\n-            if (face.trackingId?.let { faceIds.contains(it) } == false) {\n-                faceIds[index] = face.trackingId ?: -1\n-                facesForSensors[index] = face\n-                break\n-            }\n-        }\n-    }\n-\n-    private fun translateFaceToSensorValues(\n-        face: Face,\n-        faceNumber: Int,\n-        imageWidth: Int,\n-        imageHeight: Int\n-    ) {\n-        val frontCamera = StageActivity.getActiveCameraManager().isCameraFacingFront\n-        val oldAPI = Build.VERSION.SDK_INT < Build.VERSION_CODES.M\n-        val aspectRatio = imageWidth.toFloat() / imageHeight\n-        val faceBounds = face.boundingBox\n-\n-        val facePosition = if (ProjectManager.getInstance().isCurrentProjectLandscapeMode) {\n-            val relativeX = faceBounds.exactCenterY() / imageHeight\n-            val relativeY = faceBounds.exactCenterX() / imageWidth\n-            coordinatesFromRelativePosition(\n-                if (oldAPI) relativeX else 1 - relativeX,\n-                SCREEN_WIDTH / aspectRatio,\n-                if (frontCamera) relativeY else 1 - relativeY,\n-                SCREEN_WIDTH.toFloat()\n-            )\n-        } else {\n-            val relativeX = faceBounds.exactCenterX() / imageHeight\n-            coordinatesFromRelativePosition(\n-                if (frontCamera.xor(oldAPI)) 1 - relativeX else relativeX,\n-                SCREEN_HEIGHT / aspectRatio,\n-                1 - faceBounds.exactCenterY() / imageWidth,\n-                SCREEN_HEIGHT.toFloat()\n-            )\n-        }\n-\n-        val relativeFaceSize = (faceBounds.height().toFloat() / imageHeight).coerceAtMost(1f)\n-        val faceSize = (MAX_FACE_SIZE * relativeFaceSize).roundToInt()\n-        onFaceDetected(facePosition, faceSize, faceNumber)\n-    }\n-\n-    private fun coordinatesFromRelativePosition(\n-        relativeX: Float,\n-        width: Float,\n-        relativeY: Float,\n-        height: Float\n-    ) = Point(\n-        (width * (relativeX - COORDINATE_TRANSFORMATION_OFFSET)).roundToInt(),\n-        (height * (relativeY - COORDINATE_TRANSFORMATION_OFFSET)).roundToInt()\n-    )\n-\n-    @VisibleForTesting(otherwise = VisibleForTesting.PRIVATE)\n-    fun updateDetectionStatus() {\n-        val firstSensorValue = if (facesForSensors[0] != null) 1f else 0f\n-        val secondSensorValue = if (facesForSensors[1] != null) 1f else 0f\n-        sensorListeners.forEach {\n-            it.onCustomSensorChanged(\n-                SensorCustomEvent(Sensors.FACE_DETECTED, floatArrayOf(firstSensorValue))\n-            )\n-            it.onCustomSensorChanged(\n-                SensorCustomEvent(Sensors.SECOND_FACE_DETECTED, floatArrayOf(secondSensorValue))\n-            )\n-        }\n-    }\n-\n-    @VisibleForTesting(otherwise = VisibleForTesting.PRIVATE)\n-    fun onFaceDetected(position: Point, size: Int, faceNumber: Int) {\n-        sensorListeners.forEach {\n-            if (faceNumber == 0) {\n-                it.onCustomSensorChanged(\n-                    SensorCustomEvent(Sensors.FACE_X_POSITION, floatArrayOf(position.x.toFloat()))\n-                )\n-                it.onCustomSensorChanged(\n-                    SensorCustomEvent(Sensors.FACE_Y_POSITION, floatArrayOf(position.y.toFloat()))\n-                )\n-                it.onCustomSensorChanged(\n-                    SensorCustomEvent(Sensors.FACE_SIZE, floatArrayOf(size.toFloat()))\n-                )\n-            } else if (faceNumber == 1) {\n-                it.onCustomSensorChanged(\n-                    SensorCustomEvent(\n-                        Sensors.SECOND_FACE_X_POSITION, floatArrayOf(position.x.toFloat())\n-                    )\n-                )\n-                it.onCustomSensorChanged(\n-                    SensorCustomEvent(\n-                        Sensors.SECOND_FACE_Y_POSITION, floatArrayOf(position.y.toFloat())\n-                    )\n-                )\n-                it.onCustomSensorChanged(\n-                    SensorCustomEvent(\n-                        Sensors.SECOND_FACE_SIZE, floatArrayOf(size.toFloat())\n-                    )\n-                )\n-            }\n-        }\n-    }\n-}"
  },
  {
    "sha": "020bcaa77972f60e2d66525f1ca1722a48f08217",
    "filename": "catroid/src/main/java/org/catrobat/catroid/camera/FaceTextPoseDetector.kt",
    "status": "added",
    "additions": 474,
    "deletions": 0,
    "changes": 474,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/camera/FaceTextPoseDetector.kt",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/camera/FaceTextPoseDetector.kt",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/camera/FaceTextPoseDetector.kt?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -0,0 +1,474 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.camera\n+\n+import android.graphics.Point\n+import android.os.Build\n+import android.util.Log\n+import androidx.annotation.VisibleForTesting\n+import androidx.camera.core.ExperimentalGetImage\n+import androidx.camera.core.ImageAnalysis\n+import androidx.camera.core.ImageProxy\n+import com.google.mlkit.vision.common.InputImage\n+import com.google.mlkit.vision.face.Face\n+import com.google.mlkit.vision.face.FaceDetection\n+import com.google.mlkit.vision.face.FaceDetectorOptions\n+import com.google.mlkit.vision.pose.Pose\n+import com.google.mlkit.vision.pose.PoseDetection\n+import com.google.mlkit.vision.pose.PoseLandmark\n+import com.google.mlkit.vision.pose.defaults.PoseDetectorOptions\n+import com.google.mlkit.vision.text.Text\n+import com.google.mlkit.vision.text.TextRecognition\n+import org.catrobat.catroid.CatroidApplication\n+import org.catrobat.catroid.ProjectManager\n+import org.catrobat.catroid.R\n+import org.catrobat.catroid.common.Constants.COORDINATE_TRANSFORMATION_OFFSET\n+import org.catrobat.catroid.common.ScreenValues.SCREEN_HEIGHT\n+import org.catrobat.catroid.common.ScreenValues.SCREEN_WIDTH\n+import org.catrobat.catroid.formulaeditor.SensorCustomEvent\n+import org.catrobat.catroid.formulaeditor.SensorCustomEventListener\n+import org.catrobat.catroid.formulaeditor.Sensors\n+import org.catrobat.catroid.stage.StageActivity\n+import org.catrobat.catroid.utils.TextBlockUtil\n+import kotlin.math.roundToInt\n+\n+object FaceTextPoseDetector : ImageAnalysis.Analyzer {\n+    private const val DETECTION_PROCESS_ERROR_MESSAGE = \"Could not analyze image.\"\n+    private const val MAX_FACE_SIZE = 100\n+    private const val FACE_SENSORS = 2\n+    private val sensorListeners = mutableSetOf<SensorCustomEventListener>()\n+\n+    @VisibleForTesting(otherwise = VisibleForTesting.PRIVATE)\n+    var facesForSensors: Array<Face?> = Array(FACE_SENSORS) { _ -> null }\n+    private var faceIds: IntArray = IntArray(FACE_SENSORS) { _ -> -1 }\n+    private val faceDetectionClient by lazy {\n+        FaceDetection.getClient(\n+            FaceDetectorOptions.Builder()\n+                .setClassificationMode(FaceDetectorOptions.CLASSIFICATION_MODE_ALL)\n+                .enableTracking()\n+                .build()\n+        )\n+    }\n+    private val poseDetectionClient by lazy {\n+        PoseDetection.getClient(\n+            PoseDetectorOptions.Builder()\n+                .setDetectorMode(PoseDetectorOptions.STREAM_MODE)\n+                .build()\n+        )\n+    }\n+    private val textDetectionClient = TextRecognition.getClient()\n+\n+    private var textDetected = false\n+    private var faceDetected = false\n+    private var poseDetected = false\n+\n+    @JvmStatic\n+    fun addListener(listener: SensorCustomEventListener) {\n+        sensorListeners.add(listener)\n+    }\n+\n+    @JvmStatic\n+    fun removeListener(listener: SensorCustomEventListener) {\n+        sensorListeners.remove(listener)\n+    }\n+\n+    @ExperimentalGetImage\n+    override fun analyze(imageProxy: ImageProxy) {\n+        imageProxy.image?.let { mediaImage ->\n+            val image = InputImage.fromMediaImage(\n+                mediaImage,\n+                imageProxy.imageInfo.rotationDegrees\n+            )\n+\n+            faceDetected = false\n+            textDetected = false\n+            poseDetected = false\n+\n+            textDetectionClient.process(image)\n+                .addOnSuccessListener { text ->\n+                    updateTextSensorValues(text, mediaImage.width, mediaImage.height)\n+                    textDetected = true\n+                    if (faceDetected && poseDetected) {\n+                        imageProxy.close()\n+                    }\n+                }\n+                .addOnFailureListener { e ->\n+                    val context = StageActivity.activeStageActivity.get()\n+                    StageActivity.messageHandler.obtainMessage(\n+                        StageActivity.SHOW_TOAST,\n+                        arrayListOf(context?.getString(R.string.camera_error_text_detection))\n+                    ).sendToTarget()\n+                    Log.e(javaClass.simpleName, DETECTION_PROCESS_ERROR_MESSAGE, e)\n+                }\n+\n+            faceDetectionClient.process(image)\n+                .addOnSuccessListener { faces ->\n+                    handleAlreadyExistingFaces(faces)\n+                    handleNewFaces(faces)\n+                    updateAllFaceSensorValues(mediaImage.width, mediaImage.height)\n+                    faceDetected = true\n+                    if (textDetected && poseDetected) {\n+                        imageProxy.close()\n+                    }\n+                }\n+                .addOnFailureListener { e ->\n+                    updateFaceDetectionStatusSensorValues()\n+                    val context = CatroidApplication.getAppContext()\n+                    StageActivity.messageHandler.obtainMessage(\n+                        StageActivity.SHOW_TOAST,\n+                        arrayListOf(context.getString(R.string.camera_error_face_detection))\n+                    ).sendToTarget()\n+                    Log.e(javaClass.simpleName, DETECTION_PROCESS_ERROR_MESSAGE, e)\n+                }\n+\n+            poseDetectionClient.process(image)\n+                .addOnSuccessListener { pose ->\n+                    updateAllPoseSensorValues(pose, mediaImage.width, mediaImage.height)\n+                    poseDetected = true\n+                    if (textDetected && faceDetected) {\n+                        imageProxy.close()\n+                    }\n+                }\n+                .addOnFailureListener { e ->\n+                    val context = CatroidApplication.getAppContext()\n+                    StageActivity.messageHandler.obtainMessage(\n+                        StageActivity.SHOW_TOAST,\n+                        arrayListOf(context.getString(R.string.camera_error_pose_detection))\n+                    ).sendToTarget()\n+                    Log.e(javaClass.simpleName, DETECTION_PROCESS_ERROR_MESSAGE, e)\n+                }\n+        }\n+    }\n+\n+    @VisibleForTesting(otherwise = VisibleForTesting.PRIVATE)\n+    fun updateTextSensorValues(text: Text, imageWidth: Int, imageHeight: Int) {\n+        if (text.textBlocks.isEmpty()) return\n+\n+        TextBlockUtil.setTextBlocks(text.textBlocks, imageWidth, imageHeight)\n+\n+        sensorListeners.forEach {\n+            writeStringToSensor(it, Sensors.TEXT_FROM_CAMERA, text.text)\n+            writeFloatToSensor(it, Sensors.TEXT_BLOCKS_NUMBER, text.textBlocks.size.toFloat())\n+        }\n+    }\n+\n+    private fun updateAllFaceSensorValues(imageWidth: Int, imageHeight: Int) {\n+        updateFaceDetectionStatusSensorValues()\n+\n+        facesForSensors.forEachIndexed { index, face ->\n+            face?.let {\n+                val faceBounds = face.boundingBox\n+\n+                val facePosition = translateToStageCoordinates(\n+                    faceBounds.exactCenterX(), faceBounds.exactCenterY(),\n+                    imageWidth, imageHeight\n+                )\n+                val relativeFaceSize =\n+                    (faceBounds.height().toFloat() / imageHeight).coerceAtMost(1f)\n+                val faceSize = (MAX_FACE_SIZE * relativeFaceSize).roundToInt()\n+\n+                updateFaceSensorValues(facePosition, faceSize, index)\n+            }\n+        }\n+        facesForSensors.fill(null)\n+    }\n+\n+    private fun handleAlreadyExistingFaces(faces: List<Face>) {\n+        for (face in faces) {\n+            when (face.trackingId) {\n+                faceIds[0] -> facesForSensors[0] = face\n+                faceIds[1] -> facesForSensors[1] = face\n+            }\n+        }\n+    }\n+\n+    private fun handleNewFaces(faces: List<Face>) {\n+        facesForSensors.forEachIndexed { index, face ->\n+            if (face == null) {\n+                attachNewFaceIfExisting(faces, index)\n+            }\n+        }\n+    }\n+\n+    private fun attachNewFaceIfExisting(faces: List<Face>, index: Int) {\n+        for (face in faces) {\n+            if (face.trackingId?.let { faceIds.contains(it) } == false) {\n+                faceIds[index] = face.trackingId ?: -1\n+                facesForSensors[index] = face\n+                break\n+            }\n+        }\n+    }\n+\n+    @VisibleForTesting(otherwise = VisibleForTesting.PRIVATE)\n+    fun updateFaceDetectionStatusSensorValues() {\n+        val firstSensorValue = if (facesForSensors[0] != null) 1f else 0f\n+        val secondSensorValue = if (facesForSensors[1] != null) 1f else 0f\n+        sensorListeners.forEach {\n+            writeFloatToSensor(it, Sensors.FACE_DETECTED, firstSensorValue)\n+            writeFloatToSensor(it, Sensors.SECOND_FACE_DETECTED, secondSensorValue)\n+        }\n+    }\n+\n+    @VisibleForTesting(otherwise = VisibleForTesting.PRIVATE)\n+    fun updateFaceSensorValues(facePosition: Point, faceSize: Int, faceNumber: Int) {\n+        sensorListeners.forEach {\n+            when (faceNumber) {\n+                0 -> {\n+                    writeFloatToSensor(it, Sensors.FACE_X_POSITION, facePosition.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.FACE_Y_POSITION, facePosition.y.toFloat())\n+                    writeFloatToSensor(it, Sensors.FACE_SIZE, faceSize.toFloat())\n+                }\n+                1 -> {\n+                    writeFloatToSensor(it, Sensors.SECOND_FACE_X_POSITION, facePosition.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.SECOND_FACE_Y_POSITION, facePosition.y.toFloat())\n+                    writeFloatToSensor(it, Sensors.SECOND_FACE_SIZE, faceSize.toFloat())\n+                }\n+            }\n+        }\n+    }\n+\n+    private fun updateAllPoseSensorValues(pose: Pose?, imageWidth: Int, imageHeight: Int) {\n+        val allPoseLandmarks = pose?.allPoseLandmarks\n+\n+        if (allPoseLandmarks.isNullOrEmpty()) return\n+\n+        allPoseLandmarks.forEach { poseLandmark ->\n+            poseLandmark?.let {\n+                val poseLandmarkPositionTranslated = translateToStageCoordinates(\n+                    poseLandmark.position.x,\n+                    poseLandmark.position.y,\n+                    imageWidth,\n+                    imageHeight\n+                )\n+\n+                updatePoseSensorValues(poseLandmark, poseLandmarkPositionTranslated)\n+            }\n+        }\n+    }\n+\n+    fun updatePoseSensorValues(poseLandmark: PoseLandmark, position: Point) {\n+        sensorListeners.forEach {\n+            when (poseLandmark.landmarkType) {\n+                PoseLandmark.NOSE -> {\n+                    writeFloatToSensor(it, Sensors.NOSE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.NOSE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_EYE_INNER -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_EYE_INNER_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_EYE_INNER_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_EYE -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_EYE_CENTER_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_EYE_CENTER_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_EYE_OUTER -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_EYE_OUTER_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_EYE_OUTER_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_EYE_INNER -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_EYE_INNER_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_EYE_INNER_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_EYE -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_EYE_CENTER_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_EYE_CENTER_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_EYE_OUTER -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_EYE_OUTER_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_EYE_OUTER_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_EAR -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_EAR_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_EAR_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_EAR -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_EAR_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_EAR_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_MOUTH -> {\n+                    writeFloatToSensor(it, Sensors.MOUTH_LEFT_CORNER_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.MOUTH_LEFT_CORNER_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_MOUTH -> {\n+                    writeFloatToSensor(it, Sensors.MOUTH_RIGHT_CORNER_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.MOUTH_RIGHT_CORNER_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_SHOULDER -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_SHOULDER_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_SHOULDER_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_SHOULDER -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_SHOULDER_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_SHOULDER_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_ELBOW -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_ELBOW_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_ELBOW_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_ELBOW -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_ELBOW_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_ELBOW_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_WRIST -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_WRIST_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_WRIST_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_WRIST -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_WRIST_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_WRIST_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_PINKY -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_PINKY_KNUCKLE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_PINKY_KNUCKLE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_PINKY -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_PINKY_KNUCKLE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_PINKY_KNUCKLE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_INDEX -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_INDEX_KNUCKLE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_INDEX_KNUCKLE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_INDEX -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_INDEX_KNUCKLE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_INDEX_KNUCKLE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_THUMB -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_THUMB_KNUCKLE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_THUMB_KNUCKLE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_THUMB -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_THUMB_KNUCKLE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_THUMB_KNUCKLE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_HIP -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_HIP_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_HIP_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_HIP -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_HIP_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_HIP_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_KNEE -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_KNEE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_KNEE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_KNEE -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_KNEE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_KNEE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_ANKLE -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_ANKLE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_ANKLE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_ANKLE -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_ANKLE_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_ANKLE_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_HEEL -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_HEEL_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_HEEL_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_HEEL -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_HEEL_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_HEEL_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.LEFT_FOOT_INDEX -> {\n+                    writeFloatToSensor(it, Sensors.LEFT_FOOT_INDEX_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.LEFT_FOOT_INDEX_Y, position.y.toFloat())\n+                }\n+                PoseLandmark.RIGHT_FOOT_INDEX -> {\n+                    writeFloatToSensor(it, Sensors.RIGHT_FOOT_INDEX_X, position.x.toFloat())\n+                    writeFloatToSensor(it, Sensors.RIGHT_FOOT_INDEX_Y, position.y.toFloat())\n+                }\n+            }\n+        }\n+    }\n+\n+    private fun translateToStageCoordinates(\n+        x: Float,\n+        y: Float,\n+        imageWidth: Int,\n+        imageHeight: Int\n+    ): Point {\n+        val frontCamera = StageActivity.getActiveCameraManager().isCameraFacingFront\n+        val oldAPI = Build.VERSION.SDK_INT < Build.VERSION_CODES.M\n+        val aspectRatio = imageWidth.toFloat() / imageHeight\n+\n+        return if (ProjectManager.getInstance().isCurrentProjectLandscapeMode) {\n+            val relativeX = y / imageHeight\n+            val relativeY = x / imageWidth\n+            coordinatesFromRelativePosition(\n+                if (oldAPI) relativeX else 1 - relativeX,\n+                SCREEN_WIDTH / aspectRatio,\n+                if (frontCamera) relativeY else 1 - relativeY,\n+                SCREEN_WIDTH.toFloat()\n+            )\n+        } else {\n+            val relativeX = x / imageHeight\n+            coordinatesFromRelativePosition(\n+                if (frontCamera.xor(oldAPI)) 1 - relativeX else relativeX,\n+                SCREEN_HEIGHT / aspectRatio,\n+                1 - y / imageWidth,\n+                SCREEN_HEIGHT.toFloat()\n+            )\n+        }\n+    }\n+\n+    private fun coordinatesFromRelativePosition(\n+        relativeX: Float,\n+        width: Float,\n+        relativeY: Float,\n+        height: Float\n+    ) = Point(\n+        (width * (relativeX - COORDINATE_TRANSFORMATION_OFFSET)).roundToInt(),\n+        (height * (relativeY - COORDINATE_TRANSFORMATION_OFFSET)).roundToInt()\n+    )\n+\n+    private fun writeFloatToSensor(\n+        sensorListener: SensorCustomEventListener,\n+        sourceSensor: Sensors,\n+        value: Float\n+    ) {\n+        sensorListener.onCustomSensorChanged(\n+            SensorCustomEvent(\n+                sourceSensor,\n+                floatArrayOf(value)\n+            )\n+        )\n+    }\n+\n+    private fun writeStringToSensor(\n+        sensorListener: SensorCustomEventListener,\n+        sourceSensor: Sensors,\n+        value: String\n+    ) {\n+        sensorListener.onCustomSensorChanged(\n+            SensorCustomEvent(\n+                sourceSensor,\n+                arrayOf(value)\n+            )\n+        )\n+    }\n+}"
  },
  {
    "sha": "54f0598ae194b3337237b5c579327837355c44d5",
    "filename": "catroid/src/main/java/org/catrobat/catroid/content/bricks/Brick.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/content/bricks/Brick.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/content/bricks/Brick.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/content/bricks/Brick.java?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -125,7 +125,7 @@ public static boolean isUserList(BrickData field) {\n \t\t\tBLUETOOTH_SENSORS_ARDUINO, SOCKET_RASPI, CAMERA_FLASH, VIBRATION, BLUETOOTH_PHIRO, CAMERA_BACK, CAMERA_FRONT,\n \t\t\tSENSOR_ACCELERATION, SENSOR_INCLINATION, SENSOR_COMPASS, NFC_ADAPTER, VIDEO, SENSOR_GPS, COLLISION,\n \t\t\tBLUETOOTH_LEGO_EV3, NETWORK_CONNECTION, CAST_REQUIRED, JUMPING_SUMO, MICROPHONE, STORAGE_WRITE, STORAGE_READ,\n-\t\t\tSPEECH_RECOGNITION, TEXT_DETECTION})\n+\t\t\tSPEECH_RECOGNITION, TEXT_DETECTION, POSE_DETECTION})\n \t@interface Resources {\n \t}\n \n@@ -157,6 +157,7 @@ public static boolean isUserList(BrickData field) {\n \tint STORAGE_WRITE = 26;\n \tint SPEECH_RECOGNITION = 27;\n \tint TEXT_DETECTION = 28;\n+\tint POSE_DETECTION = 29;\n \n \tclass ResourcesSet extends HashSet<Integer> {\n \t\t@Override"
  },
  {
    "sha": "844db3a40efa46696dcf8c04a58ede9ca8736165",
    "filename": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternFormulaKeyboardAdapter.java",
    "status": "modified",
    "additions": 132,
    "deletions": 0,
    "changes": 132,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternFormulaKeyboardAdapter.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternFormulaKeyboardAdapter.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternFormulaKeyboardAdapter.java?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -256,6 +256,138 @@\n \t\t\t\treturn buildSensor(Sensors.SECOND_FACE_X_POSITION);\n \t\t\tcase R.string.formula_editor_sensor_second_face_y_position:\n \t\t\t\treturn buildSensor(Sensors.SECOND_FACE_Y_POSITION);\n+\t\t\tcase R.string.formula_editor_sensor_nose_x:\n+\t\t\t\treturn buildSensor(Sensors.NOSE_X);\n+\t\t\tcase R.string.formula_editor_sensor_nose_y:\n+\t\t\t\treturn buildSensor(Sensors.NOSE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_eye_inner_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_EYE_INNER_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_eye_inner_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_EYE_INNER_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_eye_center_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_EYE_CENTER_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_eye_center_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_EYE_CENTER_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_eye_outer_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_EYE_OUTER_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_eye_outer_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_EYE_OUTER_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_eye_inner_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_EYE_INNER_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_eye_inner_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_EYE_INNER_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_eye_center_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_EYE_CENTER_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_eye_center_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_EYE_CENTER_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_eye_outer_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_EYE_OUTER_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_eye_outer_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_EYE_OUTER_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_ear_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_EAR_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_ear_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_EAR_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_ear_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_EAR_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_ear_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_EAR_Y);\n+\t\t\tcase R.string.formula_editor_sensor_mouth_left_corner_x:\n+\t\t\t\treturn buildSensor(Sensors.MOUTH_LEFT_CORNER_X);\n+\t\t\tcase R.string.formula_editor_sensor_mouth_left_corner_y:\n+\t\t\t\treturn buildSensor(Sensors.MOUTH_LEFT_CORNER_Y);\n+\t\t\tcase R.string.formula_editor_sensor_mouth_right_corner_x:\n+\t\t\t\treturn buildSensor(Sensors.MOUTH_RIGHT_CORNER_X);\n+\t\t\tcase R.string.formula_editor_sensor_mouth_right_corner_y:\n+\t\t\t\treturn buildSensor(Sensors.MOUTH_RIGHT_CORNER_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_shoulder_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_SHOULDER_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_shoulder_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_SHOULDER_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_shoulder_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_SHOULDER_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_shoulder_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_SHOULDER_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_elbow_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_ELBOW_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_elbow_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_ELBOW_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_elbow_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_ELBOW_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_elbow_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_ELBOW_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_wrist_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_WRIST_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_wrist_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_WRIST_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_wrist_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_WRIST_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_wrist_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_WRIST_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_pinky_knuckle_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_PINKY_KNUCKLE_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_pinky_knuckle_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_PINKY_KNUCKLE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_pinky_knuckle_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_PINKY_KNUCKLE_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_pinky_knuckle_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_PINKY_KNUCKLE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_index_knuckle_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_INDEX_KNUCKLE_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_index_knuckle_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_INDEX_KNUCKLE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_index_knuckle_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_INDEX_KNUCKLE_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_index_knuckle_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_INDEX_KNUCKLE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_thumb_knuckle_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_THUMB_KNUCKLE_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_thumb_knuckle_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_THUMB_KNUCKLE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_thumb_knuckle_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_THUMB_KNUCKLE_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_thumb_knuckle_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_THUMB_KNUCKLE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_hip_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_HIP_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_hip_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_HIP_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_hip_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_HIP_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_hip_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_HIP_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_knee_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_KNEE_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_knee_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_KNEE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_knee_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_KNEE_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_knee_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_KNEE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_ankle_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_ANKLE_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_ankle_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_ANKLE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_ankle_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_ANKLE_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_ankle_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_ANKLE_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_heel_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_HEEL_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_heel_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_HEEL_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_heel_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_HEEL_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_heel_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_HEEL_Y);\n+\t\t\tcase R.string.formula_editor_sensor_left_foot_index_x:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_FOOT_INDEX_X);\n+\t\t\tcase R.string.formula_editor_sensor_left_foot_index_y:\n+\t\t\t\treturn buildSensor(Sensors.LEFT_FOOT_INDEX_Y);\n+\t\t\tcase R.string.formula_editor_sensor_right_foot_index_x:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_FOOT_INDEX_X);\n+\t\t\tcase R.string.formula_editor_sensor_right_foot_index_y:\n+\t\t\t\treturn buildSensor(Sensors.RIGHT_FOOT_INDEX_Y);\n \t\t\tcase R.string.formula_editor_phiro_sensor_front_left:\n \t\t\t\treturn buildSensor(Sensors.PHIRO_FRONT_LEFT);\n \t\t\tcase R.string.formula_editor_phiro_sensor_front_right:"
  },
  {
    "sha": "7a1def23798299417f22029a50f2cca7a2d99f73",
    "filename": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternToExternGenerator.java",
    "status": "modified",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternToExternGenerator.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternToExternGenerator.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternToExternGenerator.java?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -141,6 +141,73 @@\n \t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.SECOND_FACE_Y_POSITION.name(),\n \t\t\t\tR.string.formula_editor_sensor_second_face_y_position);\n \n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.NOSE_X.name(), R.string.formula_editor_sensor_nose_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.NOSE_Y.name(), R.string.formula_editor_sensor_nose_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_EYE_INNER_X.name(), R.string.formula_editor_sensor_left_eye_inner_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_EYE_INNER_Y.name(), R.string.formula_editor_sensor_left_eye_inner_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_EYE_CENTER_X.name(), R.string.formula_editor_sensor_left_eye_center_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_EYE_CENTER_Y.name(), R.string.formula_editor_sensor_left_eye_center_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_EYE_OUTER_X.name(), R.string.formula_editor_sensor_left_eye_outer_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_EYE_OUTER_Y.name(), R.string.formula_editor_sensor_left_eye_outer_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_EYE_INNER_X.name(), R.string.formula_editor_sensor_right_eye_inner_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_EYE_INNER_Y.name(), R.string.formula_editor_sensor_right_eye_inner_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_EYE_CENTER_X.name(), R.string.formula_editor_sensor_right_eye_center_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_EYE_CENTER_Y.name(), R.string.formula_editor_sensor_right_eye_center_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_EYE_OUTER_X.name(), R.string.formula_editor_sensor_right_eye_outer_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_EYE_OUTER_Y.name(), R.string.formula_editor_sensor_right_eye_outer_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_EAR_X.name(), R.string.formula_editor_sensor_left_ear_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_EAR_Y.name(), R.string.formula_editor_sensor_left_ear_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_EAR_X.name(), R.string.formula_editor_sensor_right_ear_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_EAR_Y.name(), R.string.formula_editor_sensor_right_ear_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.MOUTH_LEFT_CORNER_X.name(), R.string.formula_editor_sensor_mouth_left_corner_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.MOUTH_LEFT_CORNER_Y.name(), R.string.formula_editor_sensor_mouth_left_corner_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.MOUTH_RIGHT_CORNER_X.name(), R.string.formula_editor_sensor_mouth_right_corner_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.MOUTH_RIGHT_CORNER_Y.name(), R.string.formula_editor_sensor_mouth_right_corner_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_SHOULDER_X.name(), R.string.formula_editor_sensor_left_shoulder_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_SHOULDER_Y.name(), R.string.formula_editor_sensor_left_shoulder_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_SHOULDER_X.name(), R.string.formula_editor_sensor_right_shoulder_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_SHOULDER_Y.name(), R.string.formula_editor_sensor_right_shoulder_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_ELBOW_X.name(), R.string.formula_editor_sensor_left_elbow_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_ELBOW_Y.name(), R.string.formula_editor_sensor_left_elbow_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_ELBOW_X.name(), R.string.formula_editor_sensor_right_elbow_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_ELBOW_Y.name(), R.string.formula_editor_sensor_right_elbow_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_WRIST_X.name(), R.string.formula_editor_sensor_left_wrist_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_WRIST_Y.name(), R.string.formula_editor_sensor_left_wrist_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_WRIST_X.name(), R.string.formula_editor_sensor_right_wrist_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_WRIST_Y.name(), R.string.formula_editor_sensor_right_wrist_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_PINKY_KNUCKLE_X.name(), R.string.formula_editor_sensor_left_pinky_knuckle_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_PINKY_KNUCKLE_Y.name(), R.string.formula_editor_sensor_left_pinky_knuckle_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_PINKY_KNUCKLE_X.name(), R.string.formula_editor_sensor_right_pinky_knuckle_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_PINKY_KNUCKLE_Y.name(), R.string.formula_editor_sensor_right_pinky_knuckle_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_INDEX_KNUCKLE_X.name(), R.string.formula_editor_sensor_left_index_knuckle_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_INDEX_KNUCKLE_Y.name(), R.string.formula_editor_sensor_left_index_knuckle_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_INDEX_KNUCKLE_X.name(), R.string.formula_editor_sensor_right_index_knuckle_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_INDEX_KNUCKLE_Y.name(), R.string.formula_editor_sensor_right_index_knuckle_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_THUMB_KNUCKLE_X.name(), R.string.formula_editor_sensor_left_thumb_knuckle_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_THUMB_KNUCKLE_Y.name(), R.string.formula_editor_sensor_left_thumb_knuckle_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_THUMB_KNUCKLE_X.name(), R.string.formula_editor_sensor_right_thumb_knuckle_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_THUMB_KNUCKLE_Y.name(), R.string.formula_editor_sensor_right_thumb_knuckle_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_HIP_X.name(), R.string.formula_editor_sensor_left_hip_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_HIP_Y.name(), R.string.formula_editor_sensor_left_hip_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_HIP_X.name(), R.string.formula_editor_sensor_right_hip_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_HIP_Y.name(), R.string.formula_editor_sensor_right_hip_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_KNEE_X.name(), R.string.formula_editor_sensor_left_knee_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_KNEE_Y.name(), R.string.formula_editor_sensor_left_knee_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_KNEE_X.name(), R.string.formula_editor_sensor_right_knee_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_KNEE_Y.name(), R.string.formula_editor_sensor_right_knee_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_ANKLE_X.name(), R.string.formula_editor_sensor_left_ankle_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_ANKLE_Y.name(), R.string.formula_editor_sensor_left_ankle_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_ANKLE_X.name(), R.string.formula_editor_sensor_right_ankle_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_ANKLE_Y.name(), R.string.formula_editor_sensor_right_ankle_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_HEEL_X.name(), R.string.formula_editor_sensor_left_heel_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_HEEL_Y.name(), R.string.formula_editor_sensor_left_heel_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_HEEL_X.name(), R.string.formula_editor_sensor_right_heel_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_HEEL_Y.name(), R.string.formula_editor_sensor_right_heel_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_FOOT_INDEX_X.name(), R.string.formula_editor_sensor_left_foot_index_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.LEFT_FOOT_INDEX_Y.name(), R.string.formula_editor_sensor_left_foot_index_y);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_FOOT_INDEX_X.name(), R.string.formula_editor_sensor_right_foot_index_x);\n+\t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.RIGHT_FOOT_INDEX_Y.name(), R.string.formula_editor_sensor_right_foot_index_y);\n+\n \t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.TEXT_FROM_CAMERA.name(),\n \t\t\t\tR.string.formula_editor_sensor_text_from_camera);\n \t\tINTERN_EXTERN_LANGUAGE_CONVERTER_MAP.put(Sensors.TEXT_BLOCKS_NUMBER.name(),"
  },
  {
    "sha": "d296c14ab9c68174c4ef74d8ecef24cd9c8c3f47",
    "filename": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/SensorHandler.java",
    "status": "modified",
    "additions": 436,
    "deletions": 51,
    "changes": 487,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/formulaeditor/SensorHandler.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/formulaeditor/SensorHandler.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/formulaeditor/SensorHandler.java?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -43,7 +43,7 @@\n import org.catrobat.catroid.ProjectManager;\n import org.catrobat.catroid.bluetooth.base.BluetoothDevice;\n import org.catrobat.catroid.bluetooth.base.BluetoothDeviceService;\n-import org.catrobat.catroid.camera.FaceAndTextDetector;\n+import org.catrobat.catroid.camera.FaceTextPoseDetector;\n import org.catrobat.catroid.cast.CastManager;\n import org.catrobat.catroid.common.CatroidService;\n import org.catrobat.catroid.common.ServiceProvider;\n@@ -89,6 +89,72 @@\n \tprivate float secondFaceSize = 0f;\n \tprivate float secondFacePositionX = 0f;\n \tprivate float secondFacePositionY = 0f;\n+\tprivate float noseX = 0f;\n+\tprivate float noseY = 0f;\n+\tprivate float leftEyeInnerX = 0f;\n+\tprivate float leftEyeInnerY = 0f;\n+\tprivate float leftEyeCenterX = 0f;\n+\tprivate float leftEyeCenterY = 0f;\n+\tprivate float leftEyeOuterX = 0f;\n+\tprivate float leftEyeOuterY = 0f;\n+\tprivate float rightEyeInnerX = 0f;\n+\tprivate float rightEyeInnerY = 0f;\n+\tprivate float rightEyeCenterX = 0f;\n+\tprivate float rightEyeCenterY = 0f;\n+\tprivate float rightEyeOuterX = 0f;\n+\tprivate float rightEyeOuterY = 0f;\n+\tprivate float leftEarX = 0f;\n+\tprivate float leftEarY = 0f;\n+\tprivate float rightEarX = 0f;\n+\tprivate float rightEarY = 0f;\n+\tprivate float mouthLeftCornerX = 0f;\n+\tprivate float mouthLeftCornerY = 0f;\n+\tprivate float mouthRightCornerX = 0f;\n+\tprivate float mouthRightCornerY = 0f;\n+\tprivate float leftShoulderX = 0f;\n+\tprivate float leftShoulderY = 0f;\n+\tprivate float rightShoulderX = 0f;\n+\tprivate float rightShoulderY = 0f;\n+\tprivate float leftElbowX = 0f;\n+\tprivate float leftElbowY = 0f;\n+\tprivate float rightElbowX = 0f;\n+\tprivate float rightElbowY = 0f;\n+\tprivate float leftWristX = 0f;\n+\tprivate float leftWristY = 0f;\n+\tprivate float rightWristX = 0f;\n+\tprivate float rightWristY = 0f;\n+\tprivate float leftPinkyKnuckleX = 0f;\n+\tprivate float leftPinkyKnuckleY = 0f;\n+\tprivate float rightPinkyKnuckleX = 0f;\n+\tprivate float rightPinkyKnuckleY = 0f;\n+\tprivate float leftIndexKnuckleX = 0f;\n+\tprivate float leftIndexKnuckleY = 0f;\n+\tprivate float rightIndexKnuckleX = 0f;\n+\tprivate float rightIndexKnuckleY = 0f;\n+\tprivate float leftThumbKnuckleX = 0f;\n+\tprivate float leftThumbKnuckleY = 0f;\n+\tprivate float rightThumbKnuckleX = 0f;\n+\tprivate float rightThumbKnuckleY = 0f;\n+\tprivate float leftHipX = 0f;\n+\tprivate float leftHipY = 0f;\n+\tprivate float rightHipX = 0f;\n+\tprivate float rightHipY = 0f;\n+\tprivate float leftKneeX = 0f;\n+\tprivate float leftKneeY = 0f;\n+\tprivate float rightKneeX = 0f;\n+\tprivate float rightKneeY = 0f;\n+\tprivate float leftAnkleX = 0f;\n+\tprivate float leftAnkleY = 0f;\n+\tprivate float rightAnkleX = 0f;\n+\tprivate float rightAnkleY = 0f;\n+\tprivate float leftHeelX = 0f;\n+\tprivate float leftHeelY = 0f;\n+\tprivate float rightHeelX = 0f;\n+\tprivate float rightHeelY = 0f;\n+\tprivate float leftFootIndexX = 0f;\n+\tprivate float leftFootIndexY = 0f;\n+\tprivate float rightFootIndexX = 0f;\n+\tprivate float rightFootIndexY = 0f;\n \tprivate float textBlocksNumber = 0f;\n \tprivate String textFromCamera = \"0\";\n \n@@ -209,7 +275,7 @@ public static void startSensorListener(Context context) {\n \n \t\tSensorHandler.registerListener(instance);\n \n-\t\tFaceAndTextDetector.addListener(instance);\n+\t\tFaceTextPoseDetector.addListener(instance);\n \n \t\tif (instance.sensorLoudness != null) {\n \t\t\tinstance.sensorLoudness.registerListener(instance);\n@@ -280,7 +346,7 @@ public static void stopSensorListeners() {\n \t\t\tinstance.locationManager.removeGpsStatusListener(instance);\n \t\t}\n \n-\t\tFaceAndTextDetector.removeListener(instance);\n+\t\tFaceTextPoseDetector.removeListener(instance);\n \t}\n \n \tpublic static Object getSensorValue(Sensors sensor) {\n@@ -294,19 +360,11 @@ public static Object getSensorValue(Sensors sensor) {\n \n \t\tswitch (sensor) {\n \t\t\tcase X_ACCELERATION:\n-\t\t\t\tif ((rotate = rotateOrientation()) != 0) {\n-\t\t\t\t\treturn (double) ((-instance.linearAccelerationY) * rotate);\n-\t\t\t\t} else {\n-\t\t\t\t\treturn (double) instance.linearAccelerationX;\n-\t\t\t\t}\n-\n+\t\t\t\treturn getXAccordingToRotation(instance.linearAccelerationX,\n+\t\t\t\t\t\tinstance.linearAccelerationY);\n \t\t\tcase Y_ACCELERATION:\n-\t\t\t\tif ((rotate = rotateOrientation()) != 0) {\n-\t\t\t\t\treturn (double) (instance.linearAccelerationX * rotate);\n-\t\t\t\t} else {\n-\t\t\t\t\treturn (double) instance.linearAccelerationY;\n-\t\t\t\t}\n-\n+\t\t\t\treturn getYAccordingToRotation(instance.linearAccelerationX,\n+\t\t\t\t\t\tinstance.linearAccelerationY);\n \t\t\tcase Z_ACCELERATION:\n \t\t\t\treturn (double) instance.linearAccelerationZ;\n \n@@ -451,33 +509,153 @@ public static Object getSensorValue(Sensors sensor) {\n \t\t\tcase FACE_SIZE:\n \t\t\t\treturn (double) instance.firstFaceSize;\n \t\t\tcase FACE_X_POSITION:\n-\t\t\t\tif ((rotate = rotateOrientation()) != 0) {\n-\t\t\t\t\treturn (double) ((-instance.firstFacePositionY) * rotate);\n-\t\t\t\t} else {\n-\t\t\t\t\treturn (double) instance.firstFacePositionX;\n-\t\t\t\t}\n+\t\t\t\treturn getXAccordingToRotation(instance.firstFacePositionX,\n+\t\t\t\t\t\tinstance.firstFacePositionY);\n \t\t\tcase FACE_Y_POSITION:\n-\t\t\t\tif ((rotate = rotateOrientation()) != 0) {\n-\t\t\t\t\treturn (double) instance.firstFacePositionX * rotate;\n-\t\t\t\t} else {\n-\t\t\t\t\treturn (double) instance.firstFacePositionY;\n-\t\t\t\t}\n+\t\t\t\treturn getYAccordingToRotation(instance.firstFacePositionX,\n+\t\t\t\t\t\tinstance.firstFacePositionY);\n \t\t\tcase SECOND_FACE_DETECTED:\n \t\t\t\treturn (double) instance.secondFaceDetected;\n \t\t\tcase SECOND_FACE_SIZE:\n \t\t\t\treturn (double) instance.secondFaceSize;\n \t\t\tcase SECOND_FACE_X_POSITION:\n-\t\t\t\tif ((rotate = rotateOrientation()) != 0) {\n-\t\t\t\t\treturn (double) ((-instance.secondFacePositionY) * rotate);\n-\t\t\t\t} else {\n-\t\t\t\t\treturn (double) instance.secondFacePositionX;\n-\t\t\t\t}\n+\t\t\t\treturn getXAccordingToRotation(instance.secondFacePositionX,\n+\t\t\t\t\t\tinstance.secondFacePositionY);\n \t\t\tcase SECOND_FACE_Y_POSITION:\n-\t\t\t\tif ((rotate = rotateOrientation()) != 0) {\n-\t\t\t\t\treturn (double) instance.secondFacePositionX * rotate;\n-\t\t\t\t} else {\n-\t\t\t\t\treturn (double) instance.secondFacePositionY;\n-\t\t\t\t}\n+\t\t\t\treturn getYAccordingToRotation(instance.secondFacePositionX,\n+\t\t\t\t\t\tinstance.secondFacePositionY);\n+\t\t\tcase NOSE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.noseX, instance.noseY);\n+\t\t\tcase NOSE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.noseX, instance.noseY);\n+\t\t\tcase LEFT_EYE_INNER_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftEyeInnerX, instance.leftEyeInnerY);\n+\t\t\tcase LEFT_EYE_INNER_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftEyeInnerX, instance.leftEyeInnerY);\n+\t\t\tcase LEFT_EYE_CENTER_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftEyeCenterX, instance.leftEyeCenterY);\n+\t\t\tcase LEFT_EYE_CENTER_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftEyeCenterX, instance.leftEyeCenterY);\n+\t\t\tcase LEFT_EYE_OUTER_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftEyeOuterX, instance.leftEyeOuterY);\n+\t\t\tcase LEFT_EYE_OUTER_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftEyeOuterX, instance.leftEyeOuterY);\n+\t\t\tcase RIGHT_EYE_INNER_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightEyeInnerX, instance.rightEyeInnerY);\n+\t\t\tcase RIGHT_EYE_INNER_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightEyeInnerX, instance.rightEyeInnerY);\n+\t\t\tcase RIGHT_EYE_CENTER_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightEyeCenterX, instance.rightEyeCenterY);\n+\t\t\tcase RIGHT_EYE_CENTER_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightEyeCenterX, instance.rightEyeCenterY);\n+\t\t\tcase RIGHT_EYE_OUTER_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightEyeOuterX, instance.rightEyeOuterY);\n+\t\t\tcase RIGHT_EYE_OUTER_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightEyeOuterX, instance.rightEyeOuterY);\n+\t\t\tcase LEFT_EAR_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftEarX, instance.leftEarY);\n+\t\t\tcase LEFT_EAR_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftEarX, instance.leftEarY);\n+\t\t\tcase RIGHT_EAR_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightEarX, instance.rightEarY);\n+\t\t\tcase RIGHT_EAR_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightEarX, instance.rightEarY);\n+\t\t\tcase MOUTH_LEFT_CORNER_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.mouthLeftCornerX, instance.mouthLeftCornerY);\n+\t\t\tcase MOUTH_LEFT_CORNER_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.mouthLeftCornerX, instance.mouthLeftCornerY);\n+\t\t\tcase MOUTH_RIGHT_CORNER_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.mouthRightCornerX, instance.mouthRightCornerY);\n+\t\t\tcase MOUTH_RIGHT_CORNER_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.mouthRightCornerX, instance.mouthRightCornerY);\n+\t\t\tcase LEFT_SHOULDER_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftShoulderX, instance.leftShoulderY);\n+\t\t\tcase LEFT_SHOULDER_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftShoulderX, instance.leftShoulderY);\n+\t\t\tcase RIGHT_SHOULDER_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightShoulderX, instance.rightShoulderY);\n+\t\t\tcase RIGHT_SHOULDER_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightShoulderX, instance.rightShoulderY);\n+\t\t\tcase LEFT_ELBOW_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftElbowX, instance.leftElbowY);\n+\t\t\tcase LEFT_ELBOW_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftElbowX, instance.leftElbowY);\n+\t\t\tcase RIGHT_ELBOW_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightElbowX, instance.rightElbowY);\n+\t\t\tcase RIGHT_ELBOW_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightElbowX, instance.rightElbowY);\n+\t\t\tcase LEFT_WRIST_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftWristX, instance.leftWristY);\n+\t\t\tcase LEFT_WRIST_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftWristX, instance.leftWristY);\n+\t\t\tcase RIGHT_WRIST_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightWristX, instance.rightWristY);\n+\t\t\tcase RIGHT_WRIST_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightWristX, instance.rightWristY);\n+\t\t\tcase LEFT_PINKY_KNUCKLE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftPinkyKnuckleX, instance.leftPinkyKnuckleY);\n+\t\t\tcase LEFT_PINKY_KNUCKLE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftPinkyKnuckleX, instance.leftPinkyKnuckleY);\n+\t\t\tcase RIGHT_PINKY_KNUCKLE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightPinkyKnuckleX, instance.rightPinkyKnuckleY);\n+\t\t\tcase RIGHT_PINKY_KNUCKLE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightPinkyKnuckleX, instance.rightPinkyKnuckleY);\n+\t\t\tcase LEFT_INDEX_KNUCKLE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftIndexKnuckleX, instance.leftIndexKnuckleY);\n+\t\t\tcase LEFT_INDEX_KNUCKLE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftIndexKnuckleX, instance.leftIndexKnuckleY);\n+\t\t\tcase RIGHT_INDEX_KNUCKLE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightIndexKnuckleX, instance.rightIndexKnuckleY);\n+\t\t\tcase RIGHT_INDEX_KNUCKLE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightIndexKnuckleX, instance.rightIndexKnuckleY);\n+\t\t\tcase LEFT_THUMB_KNUCKLE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftThumbKnuckleX, instance.leftThumbKnuckleY);\n+\t\t\tcase LEFT_THUMB_KNUCKLE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftThumbKnuckleX, instance.leftThumbKnuckleY);\n+\t\t\tcase RIGHT_THUMB_KNUCKLE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightThumbKnuckleX, instance.rightThumbKnuckleY);\n+\t\t\tcase RIGHT_THUMB_KNUCKLE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightThumbKnuckleX, instance.rightThumbKnuckleY);\n+\t\t\tcase LEFT_HIP_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftHipX, instance.leftHipY);\n+\t\t\tcase LEFT_HIP_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftHipX, instance.leftHipY);\n+\t\t\tcase RIGHT_HIP_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightHipX, instance.rightHipY);\n+\t\t\tcase RIGHT_HIP_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightHipX, instance.rightHipY);\n+\t\t\tcase LEFT_KNEE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftKneeX, instance.leftKneeY);\n+\t\t\tcase LEFT_KNEE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftKneeX, instance.leftKneeY);\n+\t\t\tcase RIGHT_KNEE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightKneeX, instance.rightKneeY);\n+\t\t\tcase RIGHT_KNEE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightKneeX, instance.rightKneeY);\n+\t\t\tcase LEFT_ANKLE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftAnkleX, instance.leftAnkleY);\n+\t\t\tcase LEFT_ANKLE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftAnkleX, instance.leftAnkleY);\n+\t\t\tcase RIGHT_ANKLE_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightAnkleX, instance.rightAnkleY);\n+\t\t\tcase RIGHT_ANKLE_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightAnkleX, instance.rightAnkleY);\n+\t\t\tcase LEFT_HEEL_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftHeelX, instance.leftHeelY);\n+\t\t\tcase LEFT_HEEL_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftHeelX, instance.leftHeelY);\n+\t\t\tcase RIGHT_HEEL_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightHeelX, instance.rightHeelY);\n+\t\t\tcase RIGHT_HEEL_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightHeelX, instance.rightHeelY);\n+\t\t\tcase LEFT_FOOT_INDEX_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.leftFootIndexX, instance.leftFootIndexY);\n+\t\t\tcase LEFT_FOOT_INDEX_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.leftFootIndexX, instance.leftFootIndexY);\n+\t\t\tcase RIGHT_FOOT_INDEX_X:\n+\t\t\t\treturn getXAccordingToRotation(instance.rightFootIndexX, instance.rightFootIndexY);\n+\t\t\tcase RIGHT_FOOT_INDEX_Y:\n+\t\t\t\treturn getYAccordingToRotation(instance.rightFootIndexX, instance.rightFootIndexY);\n \t\t\tcase TEXT_FROM_CAMERA:\n \t\t\t\treturn instance.textFromCamera;\n \t\t\tcase TEXT_BLOCKS_NUMBER:\n@@ -626,21 +804,6 @@ public static void setListeningLanguageSensor(String listeningLanguageTag) {\n \t\tLog.d(TAG, \"listening language sensor changed to: \" + listeningLanguageSensor);\n \t}\n \n-\tpublic static void clearFaceDetectionValues() {\n-\t\tif (instance != null) {\n-\t\t\tinstance.firstFaceDetected = 0f;\n-\t\t\tinstance.firstFaceSize = 0f;\n-\t\t\tinstance.firstFacePositionX = 0f;\n-\t\t\tinstance.firstFacePositionY = 0f;\n-\t\t\tinstance.secondFaceDetected = 0f;\n-\t\t\tinstance.secondFaceSize = 0f;\n-\t\t\tinstance.secondFacePositionX = 0f;\n-\t\t\tinstance.secondFacePositionY = 0f;\n-\t\t\tinstance.textFromCamera = \"0\";\n-\t\t\tinstance.textBlocksNumber = 0f;\n-\t\t}\n-\t}\n-\n \t@Override\n \tpublic void onAccuracyChanged(Sensor arg0, int arg1) {\n \t}\n@@ -661,6 +824,30 @@ private static int rotateOrientation() {\n \t\treturn 0;\n \t}\n \n+\tprivate static double getXAccordingToRotation(\n+\t\t\tfloat firstCoordinate,\n+\t\t\tfloat secondCoordinate\n+\t) {\n+\t\tint rotate;\n+\t\tif ((rotate = rotateOrientation()) != 0) {\n+\t\t\treturn ((-secondCoordinate) * rotate);\n+\t\t} else {\n+\t\t\treturn firstCoordinate;\n+\t\t}\n+\t}\n+\n+\tprivate static double getYAccordingToRotation(\n+\t\t\tfloat firstCoordinate,\n+\t\t\tfloat secondCoordinate\n+\t) {\n+\t\tint rotate;\n+\t\tif ((rotate = rotateOrientation()) != 0) {\n+\t\t\treturn ((firstCoordinate) * rotate);\n+\t\t} else {\n+\t\t\treturn secondCoordinate;\n+\t\t}\n+\t}\n+\n \t@Override\n \tpublic void onSensorChanged(SensorEvent event) {\n \t\tswitch (event.sensor.getType()) {\n@@ -746,6 +933,204 @@ public void onCustomSensorChanged(SensorCustomEvent event) {\n \t\t\tcase TEXT_FROM_CAMERA:\n \t\t\t\tinstance.textFromCamera = event.valuesString[0];\n \t\t\t\tbreak;\n+\t\t\tcase NOSE_X:\n+\t\t\t\tinstance.noseX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase NOSE_Y:\n+\t\t\t\tinstance.noseY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_EYE_INNER_X:\n+\t\t\t\tinstance.leftEyeInnerX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_EYE_INNER_Y:\n+\t\t\t\tinstance.leftEyeInnerY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_EYE_CENTER_X:\n+\t\t\t\tinstance.leftEyeCenterX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_EYE_CENTER_Y:\n+\t\t\t\tinstance.leftEyeCenterY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_EYE_OUTER_X:\n+\t\t\t\tinstance.leftEyeOuterX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_EYE_OUTER_Y:\n+\t\t\t\tinstance.leftEyeOuterY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_EYE_INNER_X:\n+\t\t\t\tinstance.rightEyeInnerX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_EYE_INNER_Y:\n+\t\t\t\tinstance.rightEyeInnerY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_EYE_CENTER_X:\n+\t\t\t\tinstance.rightEyeCenterX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_EYE_CENTER_Y:\n+\t\t\t\tinstance.rightEyeCenterY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_EYE_OUTER_X:\n+\t\t\t\tinstance.rightEyeOuterX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_EYE_OUTER_Y:\n+\t\t\t\tinstance.rightEyeOuterY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_EAR_X:\n+\t\t\t\tinstance.leftEarX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_EAR_Y:\n+\t\t\t\tinstance.leftEarY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_EAR_X:\n+\t\t\t\tinstance.rightEarX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_EAR_Y:\n+\t\t\t\tinstance.rightEarY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase MOUTH_LEFT_CORNER_X:\n+\t\t\t\tinstance.mouthLeftCornerX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase MOUTH_LEFT_CORNER_Y:\n+\t\t\t\tinstance.mouthLeftCornerY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase MOUTH_RIGHT_CORNER_X:\n+\t\t\t\tinstance.mouthRightCornerX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase MOUTH_RIGHT_CORNER_Y:\n+\t\t\t\tinstance.mouthRightCornerY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_SHOULDER_X:\n+\t\t\t\tinstance.leftShoulderX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_SHOULDER_Y:\n+\t\t\t\tinstance.leftShoulderY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_SHOULDER_X:\n+\t\t\t\tinstance.rightShoulderX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_SHOULDER_Y:\n+\t\t\t\tinstance.rightShoulderY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_ELBOW_X:\n+\t\t\t\tinstance.leftElbowX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_ELBOW_Y:\n+\t\t\t\tinstance.leftElbowY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_ELBOW_X:\n+\t\t\t\tinstance.rightElbowX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_ELBOW_Y:\n+\t\t\t\tinstance.rightElbowY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_WRIST_X:\n+\t\t\t\tinstance.leftWristX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_WRIST_Y:\n+\t\t\t\tinstance.leftWristY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_WRIST_X:\n+\t\t\t\tinstance.rightWristX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_WRIST_Y:\n+\t\t\t\tinstance.rightWristY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_PINKY_KNUCKLE_X:\n+\t\t\t\tinstance.leftPinkyKnuckleX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_PINKY_KNUCKLE_Y:\n+\t\t\t\tinstance.leftPinkyKnuckleY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_PINKY_KNUCKLE_X:\n+\t\t\t\tinstance.rightPinkyKnuckleX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_PINKY_KNUCKLE_Y:\n+\t\t\t\tinstance.rightPinkyKnuckleY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_INDEX_KNUCKLE_X:\n+\t\t\t\tinstance.leftIndexKnuckleX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_INDEX_KNUCKLE_Y:\n+\t\t\t\tinstance.leftIndexKnuckleY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_INDEX_KNUCKLE_X:\n+\t\t\t\tinstance.rightIndexKnuckleX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_INDEX_KNUCKLE_Y:\n+\t\t\t\tinstance.rightIndexKnuckleY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_THUMB_KNUCKLE_X:\n+\t\t\t\tinstance.leftThumbKnuckleX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_THUMB_KNUCKLE_Y:\n+\t\t\t\tinstance.leftThumbKnuckleY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_THUMB_KNUCKLE_X:\n+\t\t\t\tinstance.rightThumbKnuckleX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_THUMB_KNUCKLE_Y:\n+\t\t\t\tinstance.rightThumbKnuckleY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_HIP_X:\n+\t\t\t\tinstance.leftHipX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_HIP_Y:\n+\t\t\t\tinstance.leftHipY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_HIP_X:\n+\t\t\t\tinstance.rightHipX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_HIP_Y:\n+\t\t\t\tinstance.rightHipY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_KNEE_X:\n+\t\t\t\tinstance.leftKneeX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_KNEE_Y:\n+\t\t\t\tinstance.leftKneeY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_KNEE_X:\n+\t\t\t\tinstance.rightKneeX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_KNEE_Y:\n+\t\t\t\tinstance.rightKneeY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_ANKLE_X:\n+\t\t\t\tinstance.leftAnkleX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_ANKLE_Y:\n+\t\t\t\tinstance.leftAnkleY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_ANKLE_X:\n+\t\t\t\tinstance.rightAnkleX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_ANKLE_Y:\n+\t\t\t\tinstance.rightAnkleY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_HEEL_X:\n+\t\t\t\tinstance.leftHeelX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_HEEL_Y:\n+\t\t\t\tinstance.leftHeelY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_HEEL_X:\n+\t\t\t\tinstance.rightHeelX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_HEEL_Y:\n+\t\t\t\tinstance.rightHeelY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_FOOT_INDEX_X:\n+\t\t\t\tinstance.leftFootIndexX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase LEFT_FOOT_INDEX_Y:\n+\t\t\t\tinstance.leftFootIndexY = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_FOOT_INDEX_X:\n+\t\t\t\tinstance.rightFootIndexX = event.values[0];\n+\t\t\t\tbreak;\n+\t\t\tcase RIGHT_FOOT_INDEX_Y:\n+\t\t\t\tinstance.rightFootIndexY = event.values[0];\n+\t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\tLog.v(TAG, \"Unhandled sensor: \" + event.sensor);\n \t\t}"
  },
  {
    "sha": "30b9e7c5de7516befb413f4ee40d5fe3dfee0816",
    "filename": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/Sensors.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/formulaeditor/Sensors.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/formulaeditor/Sensors.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/formulaeditor/Sensors.java?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -30,6 +30,19 @@\n \tTIMER, DATE_YEAR, DATE_MONTH, DATE_DAY, DATE_WEEKDAY, TIME_HOUR, TIME_MINUTE, TIME_SECOND,\n \tFACE_DETECTED, FACE_SIZE, FACE_X_POSITION, FACE_Y_POSITION,\n \tSECOND_FACE_DETECTED, SECOND_FACE_SIZE, SECOND_FACE_X_POSITION, SECOND_FACE_Y_POSITION,\n+\tNOSE_X, NOSE_Y, LEFT_EYE_INNER_X, LEFT_EYE_INNER_Y, LEFT_EYE_CENTER_X, LEFT_EYE_CENTER_Y,\n+\tLEFT_EYE_OUTER_X, LEFT_EYE_OUTER_Y, RIGHT_EYE_INNER_X, RIGHT_EYE_INNER_Y, RIGHT_EYE_CENTER_X,\n+\tRIGHT_EYE_CENTER_Y, RIGHT_EYE_OUTER_X, RIGHT_EYE_OUTER_Y, LEFT_EAR_X, LEFT_EAR_Y,\n+\tRIGHT_EAR_X, RIGHT_EAR_Y, MOUTH_LEFT_CORNER_X, MOUTH_LEFT_CORNER_Y, MOUTH_RIGHT_CORNER_X,\n+\tMOUTH_RIGHT_CORNER_Y, LEFT_SHOULDER_X, LEFT_SHOULDER_Y, RIGHT_SHOULDER_X, RIGHT_SHOULDER_Y,\n+\tLEFT_ELBOW_X, LEFT_ELBOW_Y, RIGHT_ELBOW_X, RIGHT_ELBOW_Y, LEFT_WRIST_X, LEFT_WRIST_Y,\n+\tRIGHT_WRIST_X, RIGHT_WRIST_Y, LEFT_PINKY_KNUCKLE_X, LEFT_PINKY_KNUCKLE_Y, RIGHT_PINKY_KNUCKLE_X,\n+\tRIGHT_PINKY_KNUCKLE_Y, LEFT_INDEX_KNUCKLE_X, LEFT_INDEX_KNUCKLE_Y, RIGHT_INDEX_KNUCKLE_X,\n+\tRIGHT_INDEX_KNUCKLE_Y, LEFT_THUMB_KNUCKLE_X, LEFT_THUMB_KNUCKLE_Y, RIGHT_THUMB_KNUCKLE_X,\n+\tRIGHT_THUMB_KNUCKLE_Y, LEFT_HIP_X, LEFT_HIP_Y, RIGHT_HIP_X, RIGHT_HIP_Y, LEFT_KNEE_X,\n+\tLEFT_KNEE_Y, RIGHT_KNEE_X, RIGHT_KNEE_Y, LEFT_ANKLE_X, LEFT_ANKLE_Y, RIGHT_ANKLE_X,\n+\tRIGHT_ANKLE_Y, LEFT_HEEL_X, LEFT_HEEL_Y, RIGHT_HEEL_X, RIGHT_HEEL_Y,\n+\tLEFT_FOOT_INDEX_X, LEFT_FOOT_INDEX_Y, RIGHT_FOOT_INDEX_X, RIGHT_FOOT_INDEX_Y,\n \tOBJECT_X(true), OBJECT_Y(true),\n \tOBJECT_TRANSPARENCY(true), OBJECT_BRIGHTNESS(true), OBJECT_COLOR(true), OBJECT_SIZE(true), OBJECT_ROTATION(true),\n \tOBJECT_LAYER(true), OBJECT_DISTANCE_TO(true),"
  },
  {
    "sha": "275cca1f2a91c64d28d43321482dd0ac1c5f1314",
    "filename": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/common/FormulaElementResources.kt",
    "status": "modified",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/formulaeditor/common/FormulaElementResources.kt",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/formulaeditor/common/FormulaElementResources.kt",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/formulaeditor/common/FormulaElementResources.kt?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -53,6 +53,73 @@ object FormulaElementResources {\n             Sensors.SECOND_FACE_X_POSITION,\n             Sensors.SECOND_FACE_Y_POSITION -> Brick.FACE_DETECTION\n \n+            Sensors.NOSE_X,\n+            Sensors.NOSE_Y,\n+            Sensors.LEFT_EYE_INNER_X,\n+            Sensors.LEFT_EYE_INNER_Y,\n+            Sensors.LEFT_EYE_CENTER_X,\n+            Sensors.LEFT_EYE_CENTER_Y,\n+            Sensors.LEFT_EYE_OUTER_X,\n+            Sensors.LEFT_EYE_OUTER_Y,\n+            Sensors.RIGHT_EYE_INNER_X,\n+            Sensors.RIGHT_EYE_INNER_Y,\n+            Sensors.RIGHT_EYE_CENTER_X,\n+            Sensors.RIGHT_EYE_CENTER_Y,\n+            Sensors.RIGHT_EYE_OUTER_X,\n+            Sensors.RIGHT_EYE_OUTER_Y,\n+            Sensors.LEFT_EAR_X,\n+            Sensors.LEFT_EAR_Y,\n+            Sensors.RIGHT_EAR_X,\n+            Sensors.RIGHT_EAR_Y,\n+            Sensors.MOUTH_LEFT_CORNER_X,\n+            Sensors.MOUTH_LEFT_CORNER_Y,\n+            Sensors.MOUTH_RIGHT_CORNER_X,\n+            Sensors.MOUTH_RIGHT_CORNER_Y,\n+            Sensors.LEFT_SHOULDER_X,\n+            Sensors.LEFT_SHOULDER_Y,\n+            Sensors.RIGHT_SHOULDER_X,\n+            Sensors.RIGHT_SHOULDER_Y,\n+            Sensors.LEFT_ELBOW_X,\n+            Sensors.LEFT_ELBOW_Y,\n+            Sensors.RIGHT_ELBOW_X,\n+            Sensors.RIGHT_ELBOW_Y,\n+            Sensors.LEFT_WRIST_X,\n+            Sensors.LEFT_WRIST_Y,\n+            Sensors.RIGHT_WRIST_X,\n+            Sensors.RIGHT_WRIST_Y,\n+            Sensors.LEFT_PINKY_KNUCKLE_X,\n+            Sensors.LEFT_PINKY_KNUCKLE_Y,\n+            Sensors.RIGHT_PINKY_KNUCKLE_X,\n+            Sensors.RIGHT_PINKY_KNUCKLE_Y,\n+            Sensors.LEFT_INDEX_KNUCKLE_X,\n+            Sensors.LEFT_INDEX_KNUCKLE_Y,\n+            Sensors.RIGHT_INDEX_KNUCKLE_X,\n+            Sensors.RIGHT_INDEX_KNUCKLE_Y,\n+            Sensors.LEFT_THUMB_KNUCKLE_X,\n+            Sensors.LEFT_THUMB_KNUCKLE_Y,\n+            Sensors.RIGHT_THUMB_KNUCKLE_X,\n+            Sensors.RIGHT_THUMB_KNUCKLE_Y,\n+            Sensors.LEFT_HIP_X,\n+            Sensors.LEFT_HIP_Y,\n+            Sensors.RIGHT_HIP_X,\n+            Sensors.RIGHT_HIP_Y,\n+            Sensors.LEFT_KNEE_X,\n+            Sensors.LEFT_KNEE_Y,\n+            Sensors.RIGHT_KNEE_X,\n+            Sensors.RIGHT_KNEE_Y,\n+            Sensors.LEFT_ANKLE_X,\n+            Sensors.LEFT_ANKLE_Y,\n+            Sensors.RIGHT_ANKLE_X,\n+            Sensors.RIGHT_ANKLE_Y,\n+            Sensors.LEFT_HEEL_X,\n+            Sensors.LEFT_HEEL_Y,\n+            Sensors.RIGHT_HEEL_X,\n+            Sensors.RIGHT_HEEL_Y,\n+            Sensors.LEFT_FOOT_INDEX_X,\n+            Sensors.LEFT_FOOT_INDEX_Y,\n+            Sensors.RIGHT_FOOT_INDEX_X,\n+            Sensors.RIGHT_FOOT_INDEX_Y -> Brick.POSE_DETECTION\n+\n             Sensors.NXT_SENSOR_1,\n             Sensors.NXT_SENSOR_2,\n             Sensors.NXT_SENSOR_3,"
  },
  {
    "sha": "e9ec5ab6999c5fa184f3756a1316050898554eca",
    "filename": "catroid/src/main/java/org/catrobat/catroid/stage/StageResourceHolder.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/stage/StageResourceHolder.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/stage/StageResourceHolder.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/stage/StageResourceHolder.java?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -347,6 +347,14 @@ public void onClick(DialogInterface dialog, int id) {\n \t\t\t}\n \t\t}\n \n+\t\tif (requiredResourcesSet.contains(Brick.POSE_DETECTION)) {\n+\t\t\tif (getCameraManager().startDetection()) {\n+\t\t\t\tresourceInitialized();\n+\t\t\t} else {\n+\t\t\t\tresourceFailed(Brick.POSE_DETECTION);\n+\t\t\t}\n+\t\t}\n+\n \t\tif (requiredResourcesSet.contains(Brick.TEXT_DETECTION)) {\n \t\t\tif (getCameraManager().startDetection()) {\n \t\t\t\tresourceInitialized();\n@@ -544,6 +552,10 @@ private void showResourceFailedErrorDialog() {\n \t\t\t\t\tfailedResourcesMessage = failedResourcesMessage + stageActivity.getString(R.string\n \t\t\t\t\t\t\t.prestage_no_text_detection_available);\n \t\t\t\t\tbreak;\n+\t\t\t\tcase Brick.POSE_DETECTION:\n+\t\t\t\t\tfailedResourcesMessage = failedResourcesMessage + stageActivity.getString(R.string\n+\t\t\t\t\t\t\t.prestage_no_pose_detection_available);\n+\t\t\t\t\tbreak;\n \t\t\t\tdefault:\n \t\t\t\t\tfailedResourcesMessage = failedResourcesMessage + stageActivity.getString(R.string\n \t\t\t\t\t\t\t.prestage_default_resource_not_available);"
  },
  {
    "sha": "13d2c00f5de025b7790ddea2279b20a48d6ca407",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CategoryListFragment.java",
    "status": "modified",
    "additions": 132,
    "deletions": 0,
    "changes": 132,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CategoryListFragment.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CategoryListFragment.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/CategoryListFragment.java?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -187,6 +187,72 @@\n \t\t\tR.string.formula_editor_sensor_second_face_size,\n \t\t\tR.string.formula_editor_sensor_second_face_x_position,\n \t\t\tR.string.formula_editor_sensor_second_face_y_position,\n+\t\t\tR.string.formula_editor_sensor_nose_x,\n+\t\t\tR.string.formula_editor_sensor_nose_y,\n+\t\t\tR.string.formula_editor_sensor_left_eye_inner_x,\n+\t\t\tR.string.formula_editor_sensor_left_eye_inner_y,\n+\t\t\tR.string.formula_editor_sensor_left_eye_center_x,\n+\t\t\tR.string.formula_editor_sensor_left_eye_center_y,\n+\t\t\tR.string.formula_editor_sensor_left_eye_outer_x,\n+\t\t\tR.string.formula_editor_sensor_left_eye_outer_y,\n+\t\t\tR.string.formula_editor_sensor_right_eye_inner_x,\n+\t\t\tR.string.formula_editor_sensor_right_eye_inner_y,\n+\t\t\tR.string.formula_editor_sensor_right_eye_center_x,\n+\t\t\tR.string.formula_editor_sensor_right_eye_center_y,\n+\t\t\tR.string.formula_editor_sensor_right_eye_outer_x,\n+\t\t\tR.string.formula_editor_sensor_right_eye_outer_y,\n+\t\t\tR.string.formula_editor_sensor_left_ear_x,\n+\t\t\tR.string.formula_editor_sensor_left_ear_y,\n+\t\t\tR.string.formula_editor_sensor_right_ear_x,\n+\t\t\tR.string.formula_editor_sensor_right_ear_y,\n+\t\t\tR.string.formula_editor_sensor_mouth_left_corner_x,\n+\t\t\tR.string.formula_editor_sensor_mouth_left_corner_y,\n+\t\t\tR.string.formula_editor_sensor_mouth_right_corner_x,\n+\t\t\tR.string.formula_editor_sensor_mouth_right_corner_y,\n+\t\t\tR.string.formula_editor_sensor_left_shoulder_x,\n+\t\t\tR.string.formula_editor_sensor_left_shoulder_y,\n+\t\t\tR.string.formula_editor_sensor_right_shoulder_x,\n+\t\t\tR.string.formula_editor_sensor_right_shoulder_y,\n+\t\t\tR.string.formula_editor_sensor_left_elbow_x,\n+\t\t\tR.string.formula_editor_sensor_left_elbow_y,\n+\t\t\tR.string.formula_editor_sensor_right_elbow_x,\n+\t\t\tR.string.formula_editor_sensor_right_elbow_y,\n+\t\t\tR.string.formula_editor_sensor_left_wrist_x,\n+\t\t\tR.string.formula_editor_sensor_left_wrist_y,\n+\t\t\tR.string.formula_editor_sensor_right_wrist_x,\n+\t\t\tR.string.formula_editor_sensor_right_wrist_y,\n+\t\t\tR.string.formula_editor_sensor_left_pinky_knuckle_x,\n+\t\t\tR.string.formula_editor_sensor_left_pinky_knuckle_y,\n+\t\t\tR.string.formula_editor_sensor_right_pinky_knuckle_x,\n+\t\t\tR.string.formula_editor_sensor_right_pinky_knuckle_y,\n+\t\t\tR.string.formula_editor_sensor_left_index_knuckle_x,\n+\t\t\tR.string.formula_editor_sensor_left_index_knuckle_y,\n+\t\t\tR.string.formula_editor_sensor_right_index_knuckle_x,\n+\t\t\tR.string.formula_editor_sensor_right_index_knuckle_y,\n+\t\t\tR.string.formula_editor_sensor_left_thumb_knuckle_x,\n+\t\t\tR.string.formula_editor_sensor_left_thumb_knuckle_y,\n+\t\t\tR.string.formula_editor_sensor_right_thumb_knuckle_x,\n+\t\t\tR.string.formula_editor_sensor_right_thumb_knuckle_y,\n+\t\t\tR.string.formula_editor_sensor_left_hip_x,\n+\t\t\tR.string.formula_editor_sensor_left_hip_y,\n+\t\t\tR.string.formula_editor_sensor_right_hip_x,\n+\t\t\tR.string.formula_editor_sensor_right_hip_y,\n+\t\t\tR.string.formula_editor_sensor_left_knee_x,\n+\t\t\tR.string.formula_editor_sensor_left_knee_y,\n+\t\t\tR.string.formula_editor_sensor_right_knee_x,\n+\t\t\tR.string.formula_editor_sensor_right_knee_y,\n+\t\t\tR.string.formula_editor_sensor_left_ankle_x,\n+\t\t\tR.string.formula_editor_sensor_left_ankle_y,\n+\t\t\tR.string.formula_editor_sensor_right_ankle_x,\n+\t\t\tR.string.formula_editor_sensor_right_ankle_y,\n+\t\t\tR.string.formula_editor_sensor_left_heel_x,\n+\t\t\tR.string.formula_editor_sensor_left_heel_y,\n+\t\t\tR.string.formula_editor_sensor_right_heel_x,\n+\t\t\tR.string.formula_editor_sensor_right_heel_y,\n+\t\t\tR.string.formula_editor_sensor_left_foot_index_x,\n+\t\t\tR.string.formula_editor_sensor_left_foot_index_y,\n+\t\t\tR.string.formula_editor_sensor_right_foot_index_x,\n+\t\t\tR.string.formula_editor_sensor_right_foot_index_y,\n \t\t\tR.string.formula_editor_sensor_text_from_camera,\n \t\t\tR.string.formula_editor_sensor_text_blocks_number,\n \t\t\tR.string.formula_editor_function_text_block_x,\n@@ -205,6 +271,72 @@\n \t\t\tR.string.formula_editor_function_no_parameter,\n \t\t\tR.string.formula_editor_function_no_parameter,\n \t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n+\t\t\tR.string.formula_editor_function_no_parameter,\n \t\t\tR.string.formula_editor_function_text_block_parameter,\n \t\t\tR.string.formula_editor_function_text_block_parameter,\n \t\t\tR.string.formula_editor_function_text_block_parameter,"
  },
  {
    "sha": "0afef0e9542de6fc18ee68ccd98603d3003105ef",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/runtimepermissions/BrickResourcesToRuntimePermissions.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/ui/runtimepermissions/BrickResourcesToRuntimePermissions.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/java/org/catrobat/catroid/ui/runtimepermissions/BrickResourcesToRuntimePermissions.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/runtimepermissions/BrickResourcesToRuntimePermissions.java?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -75,6 +75,7 @@ private BrickResourcesToRuntimePermissions() {\n \t\tbrickResourcesToPermissions.put(Brick.VIBRATION, Arrays.asList(VIBRATE));\n \t\tbrickResourcesToPermissions.put(Brick.NFC_ADAPTER, Arrays.asList(NFC));\n \t\tbrickResourcesToPermissions.put(Brick.FACE_DETECTION, Collections.singletonList(CAMERA));\n+\t\tbrickResourcesToPermissions.put(Brick.POSE_DETECTION, Collections.singletonList(CAMERA));\n \t\tbrickResourcesToPermissions.put(Brick.TEXT_DETECTION, Collections.singletonList(CAMERA));\n \t\tbrickResourcesToPermissions.put(Brick.MICROPHONE, Arrays.asList(RECORD_AUDIO));\n \t\tbrickResourcesToPermissions.put(Brick.STORAGE_READ, Arrays.asList(READ_EXTERNAL_STORAGE));"
  },
  {
    "sha": "763d456a7463e5681279bf9dec1ae03ae54b6e73",
    "filename": "catroid/src/main/res/values/strings.xml",
    "status": "modified",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/res/values/strings.xml",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/c5a18b8377a9fa9a753b3c091d4502ecf5f1e107/catroid/src/main/res/values/strings.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/res/values/strings.xml?ref=c5a18b8377a9fa9a753b3c091d4502ecf5f1e107",
    "patch": "@@ -809,6 +809,7 @@\n     <string name=\"prestage_text_to_speech_error\">\\u2022 Text-To-Speech engine\\n</string>\n     <string name=\"prestage_no_back_camera_available\">\\u2022 Rear camera\\n</string>\n     <string name=\"prestage_no_face_detection_available\">\\u2022 Face detection\\n</string>\n+    <string name=\"prestage_no_pose_detection_available\">\\u2022 Pose detection\\n</string>\n     <string name=\"prestage_no_text_detection_available\">\\u2022 Text detection\\n</string>\n     <string name=\"prestage_no_jumping_sumo_available\">\\u2022 Jumping Sumo\\n</string>\n     <string name=\"prestage_no_front_camera_available\">\\u2022 Front camera\\n</string>\n@@ -1949,6 +1950,72 @@ needs read and write access to it. You can always change permissions through you\n     <string name=\"formula_editor_sensor_second_face_size\">second face size</string>\n     <string name=\"formula_editor_sensor_second_face_x_position\">second face x position</string>\n     <string name=\"formula_editor_sensor_second_face_y_position\">second face y position</string>\n+    <string name=\"formula_editor_sensor_nose_x\">nose x</string>\n+    <string name=\"formula_editor_sensor_nose_y\">nose y</string>\n+    <string name=\"formula_editor_sensor_left_eye_inner_x\">left eye inner x</string>\n+    <string name=\"formula_editor_sensor_left_eye_inner_y\">left eye inner y</string>\n+    <string name=\"formula_editor_sensor_left_eye_center_x\">left eye center x</string>\n+    <string name=\"formula_editor_sensor_left_eye_center_y\">left eye center y</string>\n+    <string name=\"formula_editor_sensor_left_eye_outer_x\">left eye outer x</string>\n+    <string name=\"formula_editor_sensor_left_eye_outer_y\">left eye outer y</string>\n+    <string name=\"formula_editor_sensor_right_eye_inner_x\">right eye inner x</string>\n+    <string name=\"formula_editor_sensor_right_eye_inner_y\">right eye inner y</string>\n+    <string name=\"formula_editor_sensor_right_eye_center_x\">right eye center x</string>\n+    <string name=\"formula_editor_sensor_right_eye_center_y\">right eye center y</string>\n+    <string name=\"formula_editor_sensor_right_eye_outer_x\">right eye outer x</string>\n+    <string name=\"formula_editor_sensor_right_eye_outer_y\">right eye outer y</string>\n+    <string name=\"formula_editor_sensor_left_ear_x\">left ear x</string>\n+    <string name=\"formula_editor_sensor_left_ear_y\">left ear y</string>\n+    <string name=\"formula_editor_sensor_right_ear_x\">right ear x</string>\n+    <string name=\"formula_editor_sensor_right_ear_y\">right ear y</string>\n+    <string name=\"formula_editor_sensor_mouth_left_corner_x\">mouth left corner x</string>\n+    <string name=\"formula_editor_sensor_mouth_left_corner_y\">mouth left corner y</string>\n+    <string name=\"formula_editor_sensor_mouth_right_corner_x\">mouth right corner x</string>\n+    <string name=\"formula_editor_sensor_mouth_right_corner_y\">mouth right corner y</string>\n+    <string name=\"formula_editor_sensor_left_shoulder_x\">left shoulder x</string>\n+    <string name=\"formula_editor_sensor_left_shoulder_y\">left shoulder y</string>\n+    <string name=\"formula_editor_sensor_right_shoulder_x\">right shoulder x</string>\n+    <string name=\"formula_editor_sensor_right_shoulder_y\">right shoulder y</string>\n+    <string name=\"formula_editor_sensor_left_elbow_x\">left elbow x</string>\n+    <string name=\"formula_editor_sensor_left_elbow_y\">left elbow y</string>\n+    <string name=\"formula_editor_sensor_right_elbow_x\">right elbow x</string>\n+    <string name=\"formula_editor_sensor_right_elbow_y\">right elbow y</string>\n+    <string name=\"formula_editor_sensor_left_wrist_x\">left wrist x</string>\n+    <string name=\"formula_editor_sensor_left_wrist_y\">left wrist y</string>\n+    <string name=\"formula_editor_sensor_right_wrist_x\">right wrist x</string>\n+    <string name=\"formula_editor_sensor_right_wrist_y\">right wrist y</string>\n+    <string name=\"formula_editor_sensor_left_pinky_knuckle_x\">left pinky knuckle x</string>\n+    <string name=\"formula_editor_sensor_left_pinky_knuckle_y\">left pinky knuckle y</string>\n+    <string name=\"formula_editor_sensor_right_pinky_knuckle_x\">right pinky knuckle x</string>\n+    <string name=\"formula_editor_sensor_right_pinky_knuckle_y\">right pinky knuckle y</string>\n+    <string name=\"formula_editor_sensor_left_index_knuckle_x\">left index knuckle x</string>\n+    <string name=\"formula_editor_sensor_left_index_knuckle_y\">left index knuckle y</string>\n+    <string name=\"formula_editor_sensor_right_index_knuckle_x\">right index knuckle x</string>\n+    <string name=\"formula_editor_sensor_right_index_knuckle_y\">right index knuckle y</string>\n+    <string name=\"formula_editor_sensor_left_thumb_knuckle_x\">left thumb knuckle x</string>\n+    <string name=\"formula_editor_sensor_left_thumb_knuckle_y\">left thumb knuckle y</string>\n+    <string name=\"formula_editor_sensor_right_thumb_knuckle_x\">right thumb knuckle x</string>\n+    <string name=\"formula_editor_sensor_right_thumb_knuckle_y\">right thumb knuckle y</string>\n+    <string name=\"formula_editor_sensor_left_hip_x\">left hip x</string>\n+    <string name=\"formula_editor_sensor_left_hip_y\">left hip y</string>\n+    <string name=\"formula_editor_sensor_right_hip_x\">right hip x</string>\n+    <string name=\"formula_editor_sensor_right_hip_y\">right hip y</string>\n+    <string name=\"formula_editor_sensor_left_knee_x\">left knee x</string>\n+    <string name=\"formula_editor_sensor_left_knee_y\">left knee y</string>\n+    <string name=\"formula_editor_sensor_right_knee_x\">right knee x</string>\n+    <string name=\"formula_editor_sensor_right_knee_y\">right knee y</string>\n+    <string name=\"formula_editor_sensor_left_ankle_x\">left ankle x</string>\n+    <string name=\"formula_editor_sensor_left_ankle_y\">left ankle y</string>\n+    <string name=\"formula_editor_sensor_right_ankle_x\">right ankle x</string>\n+    <string name=\"formula_editor_sensor_right_ankle_y\">right ankle y</string>\n+    <string name=\"formula_editor_sensor_left_heel_x\">left heel x</string>\n+    <string name=\"formula_editor_sensor_left_heel_y\">left heel y</string>\n+    <string name=\"formula_editor_sensor_right_heel_x\">right heel x</string>\n+    <string name=\"formula_editor_sensor_right_heel_y\">right heel y</string>\n+    <string name=\"formula_editor_sensor_left_foot_index_x\">left foot index x</string>\n+    <string name=\"formula_editor_sensor_left_foot_index_y\">left foot index y</string>\n+    <string name=\"formula_editor_sensor_right_foot_index_x\">right foot index x</string>\n+    <string name=\"formula_editor_sensor_right_foot_index_y\">right foot index y</string>\n     <string name=\"formula_editor_sensor_text_from_camera\">text from camera</string>\n     <string name=\"formula_editor_sensor_text_blocks_number\">number of text blocks</string>\n     <string name=\"formula_editor_function_text_block_x\">text block x from camera</string>\n@@ -2024,6 +2091,10 @@ needs read and write access to it. You can always change permissions through you\n         There was a problem with face detection. Some components may still be downloading in the\n         background. Please make sure you are connected to the internet and check back later.\n     </string>\n+    <string name=\"camera_error_pose_detection\">\n+        There was a problem with pose detection. Some components may still be downloading in the\n+        background. Please make sure you are connected to the internet and check back later.\n+    </string>\n     <!-- -->\n \n     <!-- Cast strings -->"
  }
]
