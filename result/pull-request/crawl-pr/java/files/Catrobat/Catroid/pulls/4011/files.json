[
  {
    "sha": "d0b3094cb18d210a6b009e4bd5c91fa188e4b81e",
    "filename": "catroid/src/main/java/org/catrobat/catroid/common/SharedPreferenceKeys.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/common/SharedPreferenceKeys.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/common/SharedPreferenceKeys.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/common/SharedPreferenceKeys.java?ref=371a50132b57190043ee375277764dfb835212c5",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -51,4 +51,10 @@ private SharedPreferenceKeys() {\n \tpublic static final String SCRATCH_CONVERTER_CLIENT_ID_PREFERENCE_KEY = \"scratchconverter.clientID\";\n \tpublic static final String SCRATCH_CONVERTER_DOWNLOAD_STATE_PREFERENCE_KEY = \"scratchconverter\"\n \t\t\t+ \".downloadStatePref\";\n+\n+\tpublic static final String TIME_SPENT_IN_APP_KEY = \"timeSpentInApp\";\n+\tpublic static final String LAST_USED_DATE_KEY = \"lastUsedDate\";\n+\tpublic static final String SHOW_SURVEY_KEY = \"showSurvey\";\n+\tpublic static final String SURVEY_URL1_HASH_KEY = \"surveyUrl1Hash\";\n+\tpublic static final String SURVEY_URL2_HASH_KEY = \"surveyUrl2Hash\";\n }"
  },
  {
    "sha": "ad06a4690fa1c64fd52fd98d81e8c6bc5c0d0d22",
    "filename": "catroid/src/main/java/org/catrobat/catroid/common/Survey.java",
    "status": "added",
    "additions": 188,
    "deletions": 0,
    "changes": 188,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/common/Survey.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/common/Survey.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/common/Survey.java?ref=371a50132b57190043ee375277764dfb835212c5",
    "patch": "@@ -0,0 +1,188 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.common;\n+\n+import android.content.Context;\n+import android.content.Intent;\n+import android.net.Uri;\n+import android.preference.PreferenceManager;\n+import android.text.format.DateUtils;\n+\n+import org.catrobat.catroid.transfers.GetSurveyTask;\n+import org.catrobat.catroid.utils.Utils;\n+\n+import java.util.Date;\n+\n+import static org.catrobat.catroid.common.SharedPreferenceKeys.LAST_USED_DATE_KEY;\n+import static org.catrobat.catroid.common.SharedPreferenceKeys.SHOW_SURVEY_KEY;\n+import static org.catrobat.catroid.common.SharedPreferenceKeys.SURVEY_URL1_HASH_KEY;\n+import static org.catrobat.catroid.common.SharedPreferenceKeys.SURVEY_URL2_HASH_KEY;\n+import static org.catrobat.catroid.common.SharedPreferenceKeys.TIME_SPENT_IN_APP_KEY;\n+\n+public class Survey implements GetSurveyTask.SurveyResponseListener {\n+\tprivate static final int MINIMUM_TIME_SPENT_IN_APP = 3600;\n+\n+\tlong totalTimeSpentInApp;\n+\tlong currentTimeSpentInApp;\n+\tlong totalTimeSpentInStage;\n+\tlong currentTimeSpentInStage;\n+\tboolean fulfilledSurveyRequirements;\n+\tboolean uploadFlag;\n+\n+\tpublic Survey(Context context) {\n+\t\tfulfilledSurveyRequirements = false;\n+\t\tuploadFlag = false;\n+\t\ttotalTimeSpentInStage = 0;\n+\t\tcurrentTimeSpentInApp = 0;\n+\n+\t\tcheckSurveyRequirement(context);\n+\t}\n+\n+\tpublic void startAppTime(Context context) {\n+\t\tcheckSurveyRequirement(context);\n+\n+\t\tPreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t.edit()\n+\t\t\t\t.putLong(LAST_USED_DATE_KEY, new Date(System.currentTimeMillis()).getTime())\n+\t\t\t\t.apply();\n+\n+\t\tif (!fulfilledSurveyRequirements && currentTimeSpentInApp == 0) {\n+\t\t\tcurrentTimeSpentInApp = System.currentTimeMillis();\n+\t\t}\n+\t}\n+\n+\tpublic void endAppTime(Context context) {\n+\t\tif (!fulfilledSurveyRequirements) {\n+\t\t\ttotalTimeSpentInApp = (System.currentTimeMillis() - currentTimeSpentInApp - totalTimeSpentInStage) / 1000;\n+\t\t\tcurrentTimeSpentInApp = 0;\n+\n+\t\t\tlong oldTimeSpentInApp = PreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t\t.getLong(TIME_SPENT_IN_APP_KEY, 0);\n+\n+\t\t\tPreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t\t.edit()\n+\t\t\t\t\t.putLong(TIME_SPENT_IN_APP_KEY, oldTimeSpentInApp + totalTimeSpentInApp)\n+\t\t\t\t\t.apply();\n+\t\t}\n+\t}\n+\n+\tpublic void startStageTime() {\n+\t\tif (!fulfilledSurveyRequirements) {\n+\t\t\tcurrentTimeSpentInStage = System.currentTimeMillis();\n+\t\t}\n+\t}\n+\n+\tpublic void endStageTime() {\n+\t\tif (!fulfilledSurveyRequirements) {\n+\t\t\ttotalTimeSpentInStage += System.currentTimeMillis() - currentTimeSpentInStage;\n+\t\t}\n+\t}\n+\n+\tprivate void checkSurveyRequirement(Context context) {\n+\t\tif (!fulfilledSurveyRequirements) {\n+\t\t\tlong timeSpentInApp = PreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t\t.getLong(TIME_SPENT_IN_APP_KEY, 0);\n+\n+\t\t\tfulfilledSurveyRequirements = timeSpentInApp > MINIMUM_TIME_SPENT_IN_APP;\n+\t\t}\n+\t}\n+\n+\tpublic void setUploadFlag(boolean value) {\n+\t\tuploadFlag = value;\n+\t}\n+\n+\tpublic void showSurvey(Context context) {\n+\t\tif (fulfilledSurveyRequirements) {\n+\t\t\tlong oldDate = PreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t\t.getLong(LAST_USED_DATE_KEY, new Date(System.currentTimeMillis()).getTime());\n+\n+\t\t\tboolean showSurvey = PreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t\t.getBoolean(SHOW_SURVEY_KEY, false);\n+\n+\t\t\tif (!DateUtils.isToday(oldDate) || (showSurvey && uploadFlag)) {\n+\t\t\t\tif (Utils.isNetworkAvailable(context)) {\n+\t\t\t\t\tgetSurvey(context);\n+\t\t\t\t} else {\n+\t\t\t\t\tPreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t\t\t\t.edit()\n+\t\t\t\t\t\t\t.putBoolean(SHOW_SURVEY_KEY, true)\n+\t\t\t\t\t\t\t.apply();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\tuploadFlag = false;\n+\t}\n+\n+\tprivate void getSurvey(Context context) {\n+\t\tGetSurveyTask getSurveyTask = new GetSurveyTask(context);\n+\t\tgetSurveyTask.setOnSurveyResponseListener(this);\n+\t\tgetSurveyTask.execute();\n+\t}\n+\n+\t@Override\n+\tpublic void onSurveyReceived(Context context, String surveyUrl) {\n+\t\tif (isUrlNew(context, surveyUrl)) {\n+\t\t\tIntent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(surveyUrl));\n+\t\t\tcontext.startActivity(intent);\n+\n+\t\t\tsaveUrlHash(context, surveyUrl);\n+\n+\t\t\tPreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t\t.edit()\n+\t\t\t\t\t.putLong(LAST_USED_DATE_KEY, new Date(System.currentTimeMillis()).getTime())\n+\t\t\t\t\t.apply();\n+\n+\t\t\tPreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t\t.edit()\n+\t\t\t\t\t.putBoolean(SHOW_SURVEY_KEY, false)\n+\t\t\t\t\t.apply();\n+\t\t}\n+\t}\n+\n+\tprivate void saveUrlHash(Context context, String surveyUrl) {\n+\t\tlong firstSurveyHash = PreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t.getLong(SURVEY_URL1_HASH_KEY, 0);\n+\n+\t\tPreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t.edit()\n+\t\t\t\t.putLong(SURVEY_URL2_HASH_KEY, firstSurveyHash)\n+\t\t\t\t.apply();\n+\n+\t\tPreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t.edit()\n+\t\t\t\t.putLong(SURVEY_URL1_HASH_KEY, surveyUrl.hashCode())\n+\t\t\t\t.apply();\n+\t}\n+\n+\tprivate boolean isUrlNew(Context context, String surveyUrl) {\n+\t\tlong firstSurveyHash = PreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t.getLong(SURVEY_URL1_HASH_KEY, 0);\n+\n+\t\tlong secondSurveyHash = PreferenceManager.getDefaultSharedPreferences(context)\n+\t\t\t\t.getLong(SURVEY_URL2_HASH_KEY, 0);\n+\n+\t\treturn surveyUrl.hashCode() != firstSurveyHash && surveyUrl.hashCode() != secondSurveyHash;\n+\t}\n+}"
  },
  {
    "sha": "69f6be0aa222cfac0af3c6d218bf743126d66432",
    "filename": "catroid/src/main/java/org/catrobat/catroid/stage/StageActivity.java",
    "status": "modified",
    "additions": 42,
    "deletions": 1,
    "changes": 43,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/stage/StageActivity.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/stage/StageActivity.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/stage/StageActivity.java?ref=371a50132b57190043ee375277764dfb835212c5",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -23,9 +23,12 @@\n package org.catrobat.catroid.stage;\n \n import android.app.Activity;\n+import android.app.ActivityManager;\n import android.app.PendingIntent;\n import android.content.ClipData;\n import android.content.ClipboardManager;\n+import android.content.ComponentName;\n+import android.content.Context;\n import android.content.Intent;\n import android.nfc.NdefMessage;\n import android.nfc.NfcAdapter;\n@@ -34,6 +37,7 @@\n import android.os.Handler;\n import android.os.Looper;\n import android.os.Message;\n+import android.os.PowerManager;\n import android.speech.RecognizerIntent;\n import android.util.Log;\n import android.util.SparseArray;\n@@ -83,6 +87,7 @@\n \n import static org.catrobat.catroid.common.Constants.SCREENSHOT_AUTOMATIC_FILE_NAME;\n import static org.catrobat.catroid.stage.TestResult.TEST_RESULT_MESSAGE;\n+import static org.catrobat.catroid.ui.MainMenuActivity.surveyCampaign;\n \n public class StageActivity extends AndroidApplication implements PermissionHandlingActivity, PermissionAdaptingActivity {\n \n@@ -131,13 +136,49 @@ public void onCreate(Bundle savedInstanceState) {\n \tpublic void onPause() {\n \t\tStageLifeCycleController.stagePause(this);\n \t\tsuper.onPause();\n+\n+\t\tsurveyCampaign.endStageTime();\n+\n+\t\tPowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);\n+\n+\t\tif (isApplicationSentToBackground(this) || !pm.isInteractive()) {\n+\t\t\tsurveyCampaign.endAppTime(this);\n+\t\t}\n+\t}\n+\n+\tprivate boolean isApplicationSentToBackground(final Context context) {\n+\t\tActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);\n+\n+\t\tif (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.Q) {\n+\t\t\tList<ActivityManager.RunningTaskInfo> tasks = activityManager.getRunningTasks(1);\n+\t\t\tComponentName topActivity = tasks.get(0).topActivity;\n+\t\t\tif (topActivity.getPackageName().equals(context.getPackageName())) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tList<ActivityManager.RunningAppProcessInfo> runningProcesses = activityManager.getRunningAppProcesses();\n+\t\t\tfor (ActivityManager.RunningAppProcessInfo processInfo : runningProcesses) {\n+\t\t\t\tif (processInfo.importance == ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND) {\n+\t\t\t\t\tfor (String activeProcess : processInfo.pkgList) {\n+\t\t\t\t\t\tif (activeProcess.equals(context.getPackageName())) {\n+\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn true;\n \t}\n \n \t@Override\n \tpublic void onResume() {\n \t\tStageLifeCycleController.stageResume(this);\n \t\tsuper.onResume();\n \t\tactiveStageActivity = new WeakReference<>(this);\n+\n+\t\tsurveyCampaign.startAppTime(this);\n+\t\tsurveyCampaign.startStageTime();\n \t}\n \n \t@Override"
  },
  {
    "sha": "07af26800ad7b73b97f73598939b373458cf5bff",
    "filename": "catroid/src/main/java/org/catrobat/catroid/transfers/GetSurveyTask.java",
    "status": "added",
    "additions": 102,
    "deletions": 0,
    "changes": 102,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/transfers/GetSurveyTask.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/transfers/GetSurveyTask.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/transfers/GetSurveyTask.java?ref=371a50132b57190043ee375277764dfb835212c5",
    "patch": "@@ -0,0 +1,102 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.transfers;\n+\n+import android.content.Context;\n+import android.os.AsyncTask;\n+import android.util.Log;\n+\n+import org.catrobat.catroid.web.CatrobatServerCalls;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.IOException;\n+import java.lang.ref.WeakReference;\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.util.Locale;\n+\n+import javax.net.ssl.HttpsURLConnection;\n+\n+public class GetSurveyTask extends AsyncTask<String, Void, String> {\n+\n+\tprivate static final String TAG = GetSurveyTask.class.getSimpleName();\n+\tprivate static final String SURVEY_URL_JSON_KEY = \"url\";\n+\tprivate SurveyResponseListener onSurveyResponseListener;\n+\tprivate final WeakReference<Context> contextWeakReference;\n+\n+\tpublic GetSurveyTask(Context context) {\n+\t\tthis.contextWeakReference = new WeakReference<>(context);\n+\t}\n+\n+\tpublic void setOnSurveyResponseListener(SurveyResponseListener listener) {\n+\t\tonSurveyResponseListener = listener;\n+\t}\n+\n+\t@Override\n+\tprotected String doInBackground(String... arg0) {\n+\t\tString jsonString = new CatrobatServerCalls().getSurvey(Locale.getDefault().getLanguage());\n+\t\tString surveyUrl = null;\n+\t\ttry {\n+\t\t\tsurveyUrl = parseSurvey(jsonString);\n+\t\t\tsurveyUrl = isUrlStatusCodeOk(surveyUrl) ? surveyUrl : null;\n+\t\t} catch (Exception e) {\n+\t\t\tLog.e(TAG, \"Failed to get survey url\", e);\n+\t\t}\n+\n+\t\treturn surveyUrl;\n+\t}\n+\n+\t@Override\n+\tprotected void onPostExecute(String response) {\n+\t\tContext context = contextWeakReference.get();\n+\t\tif (context == null) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif (response != null) {\n+\t\t\tonSurveyResponseListener.onSurveyReceived(context, response);\n+\t\t}\n+\t}\n+\n+\tprivate String parseSurvey(String response) throws JSONException {\n+\t\tJSONObject json = new JSONObject(response);\n+\t\tString surveyUrl = json.getString(SURVEY_URL_JSON_KEY);\n+\n+\t\treturn surveyUrl;\n+\t}\n+\n+\tprivate boolean isUrlStatusCodeOk(String surveyUrl) throws IOException {\n+\t\tHttpsURLConnection connection = (HttpsURLConnection) (new URL(surveyUrl)).openConnection();\n+\t\tconnection.connect();\n+\t\tint status = connection.getResponseCode();\n+\t\tconnection.disconnect();\n+\n+\t\treturn status == HttpURLConnection.HTTP_OK;\n+\t}\n+\n+\tpublic interface SurveyResponseListener {\n+\t\tvoid onSurveyReceived(Context context, String surveyUrl);\n+\t}\n+}"
  },
  {
    "sha": "7a622702c401f4fe0b8fad3aaa5d574507267b57",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/BaseActivity.java",
    "status": "modified",
    "additions": 46,
    "deletions": 1,
    "changes": 47,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/ui/BaseActivity.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/ui/BaseActivity.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/BaseActivity.java?ref=371a50132b57190043ee375277764dfb835212c5",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -23,8 +23,12 @@\n package org.catrobat.catroid.ui;\n \n import android.app.Activity;\n+import android.app.ActivityManager;\n+import android.content.ComponentName;\n+import android.content.Context;\n import android.content.SharedPreferences;\n import android.os.Bundle;\n+import android.os.PowerManager;\n import android.preference.PreferenceManager;\n import android.util.Log;\n import android.view.MenuItem;\n@@ -40,9 +44,13 @@\n import org.catrobat.catroid.ui.settingsfragments.AccessibilityProfile;\n import org.catrobat.catroid.ui.settingsfragments.SettingsFragment;\n \n+import java.util.List;\n+\n import androidx.annotation.NonNull;\n import androidx.appcompat.app.AppCompatActivity;\n \n+import static org.catrobat.catroid.ui.MainMenuActivity.surveyCampaign;\n+\n public abstract class BaseActivity extends AppCompatActivity implements PermissionHandlingActivity {\n \tprivate static boolean savedInstanceStateExpected;\n \n@@ -92,6 +100,7 @@ protected void onResume() {\n \n \t\tinvalidateOptionsMenu();\n \t\tgoogleAnalyticsTrackScreenResume();\n+\t\tsurveyCampaign.startAppTime(this);\n \t}\n \n \tprotected void googleAnalyticsTrackScreenResume() {\n@@ -137,4 +146,40 @@ public void addToRequiresPermissionTaskList(RequiresPermissionTask task) {\n \tpublic void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n \t\tpermissionRequestActivityExtension.onRequestPermissionsResult(this, requestCode, permissions, grantResults);\n \t}\n+\n+\t@Override\n+\tprotected void onPause() {\n+\t\tsuper.onPause();\n+\n+\t\tPowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);\n+\n+\t\tif (isApplicationSentToBackground(this) || !pm.isInteractive()) {\n+\t\t\tsurveyCampaign.endAppTime(this);\n+\t\t}\n+\t}\n+\n+\tprivate boolean isApplicationSentToBackground(final Context context) {\n+\t\tActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);\n+\n+\t\tif (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.Q) {\n+\t\t\tList<ActivityManager.RunningTaskInfo> tasks = activityManager.getRunningTasks(1);\n+\t\t\tComponentName topActivity = tasks.get(0).topActivity;\n+\t\t\tif (topActivity.getPackageName().equals(context.getPackageName())) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tList<ActivityManager.RunningAppProcessInfo> runningProcesses = activityManager.getRunningAppProcesses();\n+\t\t\tfor (ActivityManager.RunningAppProcessInfo processInfo : runningProcesses) {\n+\t\t\t\tif (processInfo.importance == ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND) {\n+\t\t\t\t\tfor (String activeProcess : processInfo.pkgList) {\n+\t\t\t\t\t\tif (activeProcess.equals(context.getPackageName())) {\n+\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn true;\n+\t}\n }"
  },
  {
    "sha": "e9e2fcb1b9cef3a297740b4da81ad63efff76123",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/MainMenuActivity.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/ui/MainMenuActivity.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/ui/MainMenuActivity.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/MainMenuActivity.java?ref=371a50132b57190043ee375277764dfb835212c5",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -44,6 +44,7 @@\n import org.catrobat.catroid.R;\n import org.catrobat.catroid.cast.CastManager;\n import org.catrobat.catroid.common.Constants;\n+import org.catrobat.catroid.common.Survey;\n import org.catrobat.catroid.content.Project;\n import org.catrobat.catroid.io.ZipArchiver;\n import org.catrobat.catroid.io.asynctask.ProjectLoadTask;\n@@ -77,6 +78,8 @@\n \n \tpublic static final String TAG = MainMenuActivity.class.getSimpleName();\n \n+\tpublic static Survey surveyCampaign;\n+\n \t@Override\n \tprotected void onCreate(Bundle savedInstanceState) {\n \t\tsuper.onCreate(savedInstanceState);\n@@ -94,6 +97,9 @@ protected void onCreate(Bundle savedInstanceState) {\n \t\tif (oldPrivacyPolicy != Constants.CATROBAT_TERMS_OF_USE_ACCEPTED) {\n \t\t\tshowTermsOfUseDialog();\n \t\t}\n+\n+\t\tsurveyCampaign = new Survey(this);\n+\t\tsurveyCampaign.showSurvey(this);\n \t}\n \n \tprivate void showTermsOfUseDialog() {"
  },
  {
    "sha": "394574838000befd90f3d5a42a459bedb3674096",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/ProjectUploadActivity.java?ref=371a50132b57190043ee375277764dfb835212c5",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -74,6 +74,7 @@\n import static org.catrobat.catroid.common.Constants.SHARE_PROJECT_URL;\n import static org.catrobat.catroid.common.Constants.UPLOAD_RESULT_RECEIVER_RESULT_CODE;\n import static org.catrobat.catroid.common.FlavoredConstants.DEFAULT_ROOT_DIRECTORY;\n+import static org.catrobat.catroid.ui.MainMenuActivity.surveyCampaign;\n import static org.catrobat.catroid.web.ServerAuthenticationConstants.TOKEN_CODE_INVALID;\n import static org.catrobat.catroid.web.ServerAuthenticationConstants.TOKEN_LENGTH;\n \n@@ -328,12 +329,13 @@ private String getNotesAndCredits() {\n \t}\n \n \tpublic void showUploadDialog() {\n-\n+\t\tsurveyCampaign.setUploadFlag(true);\n \t\tuploadProgressDialog = new AlertDialog.Builder(this)\n \t\t\t\t.setTitle(getString(R.string.upload_project_dialog_title))\n \t\t\t\t.setView(R.layout.dialog_upload_project_progress)\n \t\t\t\t.setPositiveButton(R.string.progress_upload_dialog_show_program, null)\n \t\t\t\t.setNegativeButton(R.string.done, (dialog, which) -> {\n+\t\t\t\t\tsurveyCampaign.showSurvey(this);\n \t\t\t\t\tfinish();\n \t\t\t\t})\n \t\t\t\t.setCancelable(false)"
  },
  {
    "sha": "a67810da8e55668cea9676f27911a03f5f43e412",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/WebViewActivity.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/ui/WebViewActivity.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/ui/WebViewActivity.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/WebViewActivity.java?ref=371a50132b57190043ee375277764dfb835212c5",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -66,6 +66,7 @@\n import static org.catrobat.catroid.common.Constants.MAIN_URL_HTTPS;\n import static org.catrobat.catroid.common.Constants.MEDIA_LIBRARY_CACHE_DIR;\n import static org.catrobat.catroid.common.FlavoredConstants.LIBRARY_BASE_URL;\n+import static org.catrobat.catroid.ui.MainMenuActivity.surveyCampaign;\n \n @SuppressLint(\"SetJavaScriptEnabled\")\n public class WebViewActivity extends AppCompatActivity {\n@@ -302,6 +303,9 @@ private boolean isWhatsappInstalled() {\n \tprotected void onDestroy() {\n \t\twebView.setDownloadListener(null);\n \t\twebView.destroy();\n+\n+\t\tsurveyCampaign.showSurvey(this);\n+\n \t\tsuper.onDestroy();\n \t}\n }"
  },
  {
    "sha": "b3918e5b568dcfc8839da02d1af4fea1e371ece3",
    "filename": "catroid/src/main/java/org/catrobat/catroid/web/CatrobatServerCalls.kt",
    "status": "modified",
    "additions": 15,
    "deletions": 1,
    "changes": 16,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/web/CatrobatServerCalls.kt",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/web/CatrobatServerCalls.kt",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/web/CatrobatServerCalls.kt?ref=371a50132b57190043ee375277764dfb835212c5",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -40,6 +40,7 @@ import org.catrobat.catroid.web.ServerAuthenticationConstants.CHECK_GOOGLE_TOKEN\n import org.catrobat.catroid.web.ServerAuthenticationConstants.CHECK_TOKEN_URL\n import org.catrobat.catroid.web.ServerAuthenticationConstants.CHECK_USERNAME_AVAILABLE_URL\n import org.catrobat.catroid.web.ServerAuthenticationConstants.EMAIL_AVAILABLE\n+import org.catrobat.catroid.web.ServerAuthenticationConstants.FILE_SURVEY_URL_HTTP\n import org.catrobat.catroid.web.ServerAuthenticationConstants.FILE_TAG_URL_HTTP\n import org.catrobat.catroid.web.ServerAuthenticationConstants.JSON_ANSWER\n import org.catrobat.catroid.web.ServerAuthenticationConstants.JSON_STATUS_CODE\n@@ -105,6 +106,19 @@ class CatrobatServerCalls(private val okHttpClient: OkHttpClient = CatrobatWebCl\n         }\n     }\n \n+    fun getSurvey(language: String?): String {\n+        return try {\n+            var serverUrl = FILE_SURVEY_URL_HTTP\n+            if (language != null) {\n+                serverUrl += language\n+            }\n+            getRequest(serverUrl)\n+        } catch (e: WebconnectionException) {\n+            Log.e(tag, Log.getStackTraceString(e))\n+            \"\"\n+        }\n+    }\n+\n     @Throws(WebconnectionException::class)\n     fun checkOAuthToken(id: String, oauthProvider: String, context: Context?): Boolean? {\n         var statusCode: Int"
  },
  {
    "sha": "8694ef93e86af143264407aa8e1e60869fbc067c",
    "filename": "catroid/src/main/java/org/catrobat/catroid/web/ServerAuthenticationConstants.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/web/ServerAuthenticationConstants.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/371a50132b57190043ee375277764dfb835212c5/catroid/src/main/java/org/catrobat/catroid/web/ServerAuthenticationConstants.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/web/ServerAuthenticationConstants.java?ref=371a50132b57190043ee375277764dfb835212c5",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -48,6 +48,7 @@\n \t\t\t+ \"-r016ige5kb30q9vflqbt1h0i3arng8u1.apps.googleusercontent.com\";\n \n \tpublic static final String FILE_TAG_URL_HTTP = FlavoredConstants.BASE_URL_HTTPS + \"api/tags/getTags.json\";\n+\tpublic static final String FILE_SURVEY_URL_HTTP = FlavoredConstants.BASE_URL_HTTPS + \"api/survey/\";\n \tpublic static final String SIGNIN_GOOGLE_CODE_KEY = \"code\";\n \tpublic static final String SIGNIN_ID_TOKEN = \"id_token\";\n \tpublic static final String OAUTH_TOKEN_AVAILABLE = \"token_available\";"
  }
]
