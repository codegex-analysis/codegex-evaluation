[
  {
    "sha": "e0d247d560343b9c0563abca57905cf374093824",
    "filename": "catroid/config/lint-baseline.xml",
    "status": "modified",
    "additions": 26,
    "deletions": 41,
    "changes": 67,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/config/lint-baseline.xml",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/config/lint-baseline.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/config/lint-baseline.xml?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <!--\n   ~ Catroid: An on-device visual programming system for Android devices\n-  ~ Copyright (C) 2010-2020 The Catrobat Team\n+  ~ Copyright (C) 2010-2021 The Catrobat Team\n   ~ (<http://developer.catrobat.org/credits>)\n   ~\n   ~ This program is free software: you can redistribute it and/or modify\n@@ -41,7 +41,7 @@\n         errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n         <location\n             file=\"src\\main\\AndroidManifest.xml\"\n-            line=\"94\"\n+            line=\"91\"\n             column=\"9\"/>\n     </issue>\n \n@@ -129,7 +129,7 @@\n         errorLine2=\"         ~~~~~~\">\n         <location\n             file=\"src\\main\\java\\org\\catrobat\\catroid\\CatroidApplication.java\"\n-            line=\"55\"\n+            line=\"46\"\n             column=\"10\"/>\n     </issue>\n \n@@ -195,7 +195,7 @@\n         errorLine2=\"         ~~~~~~\">\n         <location\n             file=\"src\\main\\java\\org\\catrobat\\catroid\\ui\\fragment\\FormulaEditorFragment.java\"\n-            line=\"104\"\n+            line=\"116\"\n             column=\"10\"/>\n     </issue>\n \n@@ -206,7 +206,7 @@\n         errorLine2=\"         ~~~~~~\">\n         <location\n             file=\"src\\main\\java\\org\\catrobat\\catroid\\ui\\fragment\\FormulaEditorFragment.java\"\n-            line=\"106\"\n+            line=\"118\"\n             column=\"10\"/>\n     </issue>\n \n@@ -217,7 +217,7 @@\n         errorLine2=\"         ~~~~~~\">\n         <location\n             file=\"src\\main\\java\\org\\catrobat\\catroid\\ui\\fragment\\FormulaEditorFragment.java\"\n-            line=\"108\"\n+            line=\"120\"\n             column=\"10\"/>\n     </issue>\n \n@@ -283,21 +283,10 @@\n         errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n         <location\n             file=\"src\\main\\java\\org\\catrobat\\catroid\\ui\\dialogs\\StageDialog.java\"\n-            line=\"237\"\n+            line=\"238\"\n             column=\"16\"/>\n     </issue>\n \n-    <issue\n-        id=\"StaticFieldLeak\"\n-        message=\"Do not place Android context classes in static fields; this is a memory leak\"\n-        errorLine1=\" private static Context context = null;\"\n-        errorLine2=\"         ~~~~~~\">\n-        <location\n-            file=\"src\\main\\java\\org\\catrobat\\catroid\\utils\\VibrationUtil.java\"\n-            line=\"37\"\n-            column=\"10\"/>\n-    </issue>\n-\n     <issue\n         id=\"StaticFieldLeak\"\n         message=\"This `AsyncTask` class should be static or leaks might occur (org.catrobat.catroid.content.actions.WriteListOnDeviceAction.WriteTask)\"\n@@ -342,21 +331,6 @@\n             file=\"src\\main\\res\\drawable-xhdpi\\brick_control_1h.9.png\"/>\n     </issue>\n \n-    <issue\n-        id=\"UnusedResources\"\n-        message=\"The resource `R.drawable.brick_gold_1h` appears to be unused\">\n-        <location\n-            file=\"src\\main\\res\\drawable-hdpi\\brick_gold_1h.9.png\"/>\n-        <location\n-            file=\"src\\main\\res\\drawable-ldpi\\brick_gold_1h.9.png\"/>\n-        <location\n-            file=\"src\\main\\res\\drawable-mdpi\\brick_gold_1h.9.png\"/>\n-        <location\n-            file=\"src\\main\\res\\drawable-xhdpi\\brick_gold_1h.9.png\"/>\n-        <location\n-            file=\"src\\main\\res\\drawable-xxhdpi\\brick_gold_1h.9.png\"/>\n-    </issue>\n-\n     <issue\n         id=\"UnusedResources\"\n         message=\"The resource `R.mipmap.ic_launcher_round` appears to be unused\"\n@@ -402,14 +376,14 @@\n \n     <issue\n         id=\"IconDensities\"\n-        message=\"Missing the following drawables in `drawable-hdpi`: brick_blue_1h.9.png, brick_blue_2h.9.png, brick_blue_2h_when_9.9.png, brick_blue_3h.9.png, brick_brown_1h_when_9.9.png... (41 more)\">\n+        message=\"Missing the following drawables in `drawable-hdpi`: brick_blue_1h.9.png, brick_blue_2h.9.png, brick_blue_2h_when_9.9.png, brick_blue_3h.9.png, brick_brown_1h_when_9.9.png... (42 more)\">\n         <location\n             file=\"src\\main\\res\\drawable-hdpi\"/>\n     </issue>\n \n     <issue\n         id=\"IconDensities\"\n-        message=\"Missing the following drawables in `drawable-mdpi`: ardrone_neg.png, ardrone_pos.png, arduino_neg.png, arduino_pos.png, brick_selection_background_bluetooth.9.png... (41 more)\">\n+        message=\"Missing the following drawables in `drawable-mdpi`: ardrone_neg.png, ardrone_pos.png, arduino_neg.png, arduino_pos.png, brick_selection_background_bluetooth.9.png... (42 more)\">\n         <location\n             file=\"src\\main\\res\\drawable-mdpi\"/>\n     </issue>\n@@ -423,7 +397,7 @@\n \n     <issue\n         id=\"IconDensities\"\n-        message=\"Missing the following drawables in `drawable-xxhdpi`: ardrone_neg.png, ardrone_pos.png, arduino_neg.png, arduino_pos.png, brick_blue_1h.9.png... (85 more)\">\n+        message=\"Missing the following drawables in `drawable-xxhdpi`: ardrone_neg.png, ardrone_pos.png, arduino_neg.png, arduino_pos.png, brick_blue_1h.9.png... (86 more)\">\n         <location\n             file=\"src\\main\\res\\drawable-xxhdpi\"/>\n     </issue>\n@@ -442,11 +416,11 @@\n     <issue\n         id=\"ClickableViewAccessibility\"\n         message=\"`onTouch` should call `View#performClick` when a click is detected\"\n-        errorLine1=\"    public boolean onTouch(View v, MotionEvent event) {\"\n+        errorLine1=\"    public boolean onTouch(View view, MotionEvent event) {\"\n         errorLine2=\"                   ~~~~~~~\">\n         <location\n             file=\"src\\main\\java\\org\\catrobat\\catroid\\content\\bricks\\brickspinner\\BrickSpinner.java\"\n-            line=\"213\"\n+            line=\"217\"\n             column=\"20\"/>\n     </issue>\n \n@@ -501,7 +475,7 @@\n         errorLine2=\"                  ~~~~~~~\">\n         <location\n             file=\"src\\main\\java\\org\\catrobat\\catroid\\ui\\fragment\\FormulaEditorFragment.java\"\n-            line=\"293\"\n+            line=\"314\"\n             column=\"19\"/>\n     </issue>\n \n@@ -523,7 +497,7 @@\n         errorLine2=\"  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n         <location\n             file=\"src\\main\\java\\org\\catrobat\\catroid\\visualplacement\\VisualPlacementActivity.java\"\n-            line=\"286\"\n+            line=\"242\"\n             column=\"3\"/>\n     </issue>\n \n@@ -534,7 +508,7 @@\n         errorLine2=\"                ~~~~~~~\">\n         <location\n             file=\"src\\main\\java\\org\\catrobat\\catroid\\visualplacement\\VisualPlacementActivity.java\"\n-            line=\"290\"\n+            line=\"375\"\n             column=\"17\"/>\n     </issue>\n \n@@ -901,6 +875,17 @@\n             column=\"6\"/>\n     </issue>\n \n+    <issue\n+        id=\"ContentDescription\"\n+        message=\"Missing `contentDescription` attribute on image\"\n+        errorLine1=\"    &lt;ImageView\"\n+        errorLine2=\"     ~~~~~~~~~\">\n+        <location\n+            file=\"src\\main\\res\\layout\\icon_brick_category_recently_used.xml\"\n+            line=\"28\"\n+            column=\"6\"/>\n+    </issue>\n+\n     <issue\n         id=\"ContentDescription\"\n         message=\"Missing `contentDescription` attribute on image\""
  },
  {
    "sha": "79c811854bce19be5dc016dc11698683a46455a7",
    "filename": "catroid/src/androidTest/java/org/catrobat/catroid/test/content/bricks/RecentBricksTest.java",
    "status": "added",
    "additions": 85,
    "deletions": 0,
    "changes": 85,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/androidTest/java/org/catrobat/catroid/test/content/bricks/RecentBricksTest.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/androidTest/java/org/catrobat/catroid/test/content/bricks/RecentBricksTest.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/androidTest/java/org/catrobat/catroid/test/content/bricks/RecentBricksTest.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -0,0 +1,85 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.test.content.bricks;\n+\n+import android.content.Intent;\n+import android.util.Log;\n+\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.io.StorageOperations;\n+import org.catrobat.catroid.ui.SpriteActivity;\n+import org.catrobat.catroid.uiespresso.util.rules.FragmentActivityTestRule;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import static org.catrobat.catroid.common.FlavoredConstants.DEFAULT_ROOT_DIRECTORY;\n+import static org.catrobat.catroid.uiespresso.content.brick.utils.BrickDataInteractionWrapper.onBrickAtPosition;\n+import static org.catrobat.catroid.uiespresso.formulaeditor.FormulaEditorTest.createProject;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.matcher.ViewMatchers.isRoot;\n+import static androidx.test.espresso.matcher.ViewMatchers.withId;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+\n+public class RecentBricksTest {\n+\n+\tprivate final String projectName = \"recentBrickTest\";\n+\n+\t@Rule\n+\tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n+\t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION, SpriteActivity.FRAGMENT_SCRIPTS);\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tcreateProject(projectName);\n+\t\tbaseActivityTestRule.launchActivity(new Intent());\n+\t}\n+\n+\t@Test\n+\tpublic void testCheckRecentBrickVisible() {\n+\t\tonView(withId(R.id.button_add)).perform(click());\n+\t\tonView(withText(R.string.category_control)).perform(click());\n+\t\tonView(withText(R.string.brick_forever)).perform(click());\n+\t\tonView(isRoot()).perform(click());\n+\t\tonView(withId(R.id.button_add)).perform(click());\n+\t\tonView(withText(R.string.category_recently_used)).perform(click());\n+\t\tonBrickAtPosition(1).checkShowsText(R.string.brick_forever);\n+\t}\n+\n+\t@After\n+\tpublic void tearDown() {\n+\t\tbaseActivityTestRule.finishActivity();\n+\t\ttry {\n+\t\t\tStorageOperations.deleteDir(new File(DEFAULT_ROOT_DIRECTORY, projectName));\n+\t\t} catch (IOException e) {\n+\t\t\tLog.d(getClass().getSimpleName(), \"Cannot delete test project in tear down.\");\n+\t\t}\n+\t}\n+}"
  },
  {
    "sha": "1c551eb0c1e09fd9b07c8bcef9a58ce221d985bf",
    "filename": "catroid/src/main/java/org/catrobat/catroid/common/Constants.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/common/Constants.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/common/Constants.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/common/Constants.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -81,6 +81,10 @@\n \tpublic static final File TEMP_LOOK_FILE =\n \t\t\tnew File(DEFAULT_ROOT_DIRECTORY, \"temporary_look_file\" + DEFAULT_IMAGE_EXTENSION);\n \n+\t// Recent Bricks Directory\n+\tpublic static final String RECENT_BRICKS_DIRECTORY = \"recent_bricks\";\n+\tpublic static final String RECENT_BRICKS_FILE = \"bricks.json\";\n+\n \t// Backpack Directories\n \tpublic static final String BACKPACK_DIRECTORY_NAME = \"backpack\";\n \tpublic static final String BACKPACK_JSON_FILE_NAME = \"backpack.json\";"
  },
  {
    "sha": "5244ff081b4317806a72acbc8dd7010dbfeafeb6",
    "filename": "catroid/src/main/java/org/catrobat/catroid/common/RecentBricksHolder.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/common/RecentBricksHolder.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/common/RecentBricksHolder.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/common/RecentBricksHolder.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -0,0 +1,67 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.common;\n+\n+import org.catrobat.catroid.content.bricks.Brick;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class RecentBricksHolder implements Serializable {\n+\tprivate List<Brick> recentBricks;\n+\n+\tpublic RecentBricksHolder() {\n+\t\trecentBricks = new ArrayList<>();\n+\t}\n+\n+\tpublic List<Brick> getRecentBricks() {\n+\t\treturn recentBricks;\n+\t}\n+\n+\tpublic boolean contains(Brick brick) {\n+\t\tfor (Brick b : recentBricks) {\n+\t\t\tif (b.getClass().getName().equals(brick.getClass().getName())) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tpublic void setRecentBricks(List<Brick> recentBricks) {\n+\t\tthis.recentBricks = recentBricks;\n+\t}\n+\n+\tpublic int size() {\n+\t\treturn recentBricks.size();\n+\t}\n+\n+\tpublic void remove(int index) {\n+\t\trecentBricks.remove(index);\n+\t}\n+\n+\tpublic void add(int index, Brick brick) {\n+\t\trecentBricks.add(index, brick);\n+\t}\n+}"
  },
  {
    "sha": "d191d0258cbab6bae641b7a8c4c452c843c8c208",
    "filename": "catroid/src/main/java/org/catrobat/catroid/content/bricks/FormulaBrick.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/content/bricks/FormulaBrick.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/content/bricks/FormulaBrick.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/content/bricks/FormulaBrick.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -106,7 +106,7 @@ public View getView(Context context) {\n \t\tsuper.getView(context);\n \t\tfor (BiMap.Entry<FormulaField, Integer> entry : brickFieldToTextViewIdMap.entrySet()) {\n \t\t\tTextView formulaFieldView = view.findViewById(entry.getValue());\n-\t\t\tformulaFieldView.setText(getFormulaWithBrickField(entry.getKey()).getTrimmedFormulaString(context));\n+\t\t\tformulaFieldView.setText(getFormulaWithBrickField(entry.getKey()).clone().getTrimmedFormulaString(context));\n \t\t}\n \t\treturn view;\n \t}"
  },
  {
    "sha": "9e5efcf4e22e4156f4fa43ee87a560195cbd122b",
    "filename": "catroid/src/main/java/org/catrobat/catroid/io/BackpackFormulaFieldSerializerAndDeserializer.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/io/BackpackFormulaFieldSerializerAndDeserializer.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/io/BackpackFormulaFieldSerializerAndDeserializer.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/io/BackpackFormulaFieldSerializerAndDeserializer.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2020 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -28,9 +28,15 @@\n \n import org.catrobat.catroid.content.bricks.Brick;\n \n+import java.io.File;\n import java.lang.reflect.Type;\n \n public class BackpackFormulaFieldSerializerAndDeserializer extends BackpackInterfaceSerializerAndDeserializer<Brick.FormulaField> {\n+\n+\tpublic BackpackFormulaFieldSerializerAndDeserializer(File file) {\n+\t\tsuper(file);\n+\t}\n+\n \t@Override\n \tpublic Brick.FormulaField deserialize(JsonElement json, Type interfaceType, JsonDeserializationContext context) {\n \t\tif (!json.isJsonObject()) {"
  },
  {
    "sha": "2467a1c7db15c5205672a6e401cc3256de6be6d3",
    "filename": "catroid/src/main/java/org/catrobat/catroid/io/BackpackInterfaceSerializerAndDeserializer.java",
    "status": "modified",
    "additions": 8,
    "deletions": 3,
    "changes": 11,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/io/BackpackInterfaceSerializerAndDeserializer.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/io/BackpackInterfaceSerializerAndDeserializer.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/io/BackpackInterfaceSerializerAndDeserializer.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -33,8 +33,7 @@\n import com.google.gson.JsonSerializationContext;\n import com.google.gson.JsonSerializer;\n \n-import org.catrobat.catroid.ui.controller.BackpackListManager;\n-\n+import java.io.File;\n import java.lang.reflect.Type;\n \n public class BackpackInterfaceSerializerAndDeserializer<T> implements JsonSerializer<T>,\n@@ -45,6 +44,12 @@\n \tprivate static final String TYPE = \"type\";\n \tprivate static final String PROPERTY = \"properties\";\n \n+\tFile file;\n+\n+\tpublic BackpackInterfaceSerializerAndDeserializer(File file) {\n+\t\tthis.file = file;\n+\t}\n+\n \t@Override\n \tpublic JsonElement serialize(T object, Type interfaceType, JsonSerializationContext context) {\n \t\tJsonObject jsonObject = new JsonObject();\n@@ -66,7 +71,7 @@ public T deserialize(JsonElement json, Type interfaceType, JsonDeserializationCo\n \t\t\tclassToDeserialize = Class.forName(type);\n \t\t} catch (ClassNotFoundException classNotFoundException) {\n \t\t\tLog.e(TAG, \"Could not deserialize backpacked element: \" + type);\n-\t\t\tBackpackListManager.getInstance().backpackFile.delete();\n+\t\t\tfile.delete();\n \t\t\treturn null;\n \t\t}\n \t\treturn context.deserialize(element, classToDeserialize);"
  },
  {
    "sha": "4cc63345c76a8c9b3c25869aa7adc83fa83a54e0",
    "filename": "catroid/src/main/java/org/catrobat/catroid/io/BackpackSerializer.java",
    "status": "modified",
    "additions": 9,
    "deletions": 5,
    "changes": 14,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/io/BackpackSerializer.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/io/BackpackSerializer.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/io/BackpackSerializer.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -50,10 +50,14 @@\n \tpublic BackpackSerializer(File backpackFile) {\n \t\tthis.backpackFile = backpackFile;\n \t\tGsonBuilder gsonBuilder = new GsonBuilder().enableComplexMapKeySerialization().setPrettyPrinting();\n-\t\tgsonBuilder.registerTypeAdapter(Script.class, new BackpackScriptSerializerAndDeserializer());\n-\t\tgsonBuilder.registerTypeAdapter(Brick.class, new BackpackInterfaceSerializerAndDeserializer());\n-\t\tgsonBuilder.registerTypeAdapter(UserDefinedBrickData.class, new BackpackInterfaceSerializerAndDeserializer());\n-\t\tgsonBuilder.registerTypeAdapter(Brick.FormulaField.class, new BackpackFormulaFieldSerializerAndDeserializer());\n+\t\tgsonBuilder.registerTypeAdapter(Script.class,\n+\t\t\t\tnew BackpackScriptSerializerAndDeserializer());\n+\t\tgsonBuilder.registerTypeAdapter(Brick.class,\n+\t\t\t\tnew BackpackInterfaceSerializerAndDeserializer(backpackFile));\n+\t\tgsonBuilder.registerTypeAdapter(UserDefinedBrickData.class,\n+\t\t\t\tnew BackpackInterfaceSerializerAndDeserializer(backpackFile));\n+\t\tgsonBuilder.registerTypeAdapter(Brick.FormulaField.class,\n+\t\t\t\tnew BackpackFormulaFieldSerializerAndDeserializer(backpackFile));\n \t\tbackpackGson = gsonBuilder.create();\n \t}\n "
  },
  {
    "sha": "5ca6ca862bb1c3e43f0a5122482e1111c35de893",
    "filename": "catroid/src/main/java/org/catrobat/catroid/io/RecentBrickListSerializer.java",
    "status": "added",
    "additions": 100,
    "deletions": 0,
    "changes": 100,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/io/RecentBrickListSerializer.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/io/RecentBrickListSerializer.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/io/RecentBrickListSerializer.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -0,0 +1,100 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.io;\n+\n+import android.util.Log;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+import org.catrobat.catroid.common.RecentBricksHolder;\n+import org.catrobat.catroid.content.bricks.Brick;\n+import org.catrobat.catroid.userbrick.UserDefinedBrickData;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileReader;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+\n+public final class RecentBrickListSerializer {\n+\n+\tprivate static final String TAG = RecentBrickListSerializer.class.getSimpleName();\n+\tprivate final File recentBricksFile;\n+\n+\tprivate final Gson recentBrickListGson;\n+\n+\tpublic RecentBrickListSerializer(File recentBricksFile) {\n+\t\tthis.recentBricksFile = recentBricksFile;\n+\t\tGsonBuilder gsonBuilder = new GsonBuilder().enableComplexMapKeySerialization().setPrettyPrinting();\n+\t\tgsonBuilder.registerTypeAdapter(Brick.class,\n+\t\t\t\tnew BackpackInterfaceSerializerAndDeserializer(recentBricksFile));\n+\t\tgsonBuilder.registerTypeAdapter(UserDefinedBrickData.class,\n+\t\t\t\tnew BackpackInterfaceSerializerAndDeserializer(recentBricksFile));\n+\t\tgsonBuilder.registerTypeAdapter(Brick.FormulaField.class,\n+\t\t\t\tnew BackpackFormulaFieldSerializerAndDeserializer(recentBricksFile));\n+\t\trecentBrickListGson = gsonBuilder.create();\n+\t}\n+\n+\tpublic boolean saveRecentBricks(RecentBricksHolder recentBricksHolder) {\n+\t\tFileWriter writer = null;\n+\t\tString json = recentBrickListGson.toJson(recentBricksHolder);\n+\t\ttry {\n+\t\t\trecentBricksFile.createNewFile();\n+\t\t\twriter = new FileWriter(recentBricksFile);\n+\t\t\twriter.write(json);\n+\t\t\treturn true;\n+\t\t} catch (IOException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t\treturn false;\n+\t\t} finally {\n+\t\t\tif (writer != null) {\n+\t\t\t\ttry {\n+\t\t\t\t\twriter.close();\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\tLog.e(TAG, \"Cannot close Buffered Writer\", e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tpublic RecentBricksHolder loadRecentBricks() {\n+\t\tif (!recentBricksFile.exists()) {\n+\t\t\treturn new RecentBricksHolder();\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tBufferedReader bufferedReader = new BufferedReader(new FileReader(recentBricksFile));\n+\t\t\treturn recentBrickListGson.fromJson(bufferedReader,\n+\t\t\t\t\tRecentBricksHolder.class);\n+\t\t} catch (Exception e) {\n+\t\t\tif (!(e instanceof FileNotFoundException)) {\n+\t\t\t\trecentBricksFile.delete();\n+\t\t\t}\n+\t\t\tLog.e(TAG, \"Cannot load Recent Bricks File. Creating new Recent Bricks File.\", e);\n+\t\t\treturn new RecentBricksHolder();\n+\t\t}\n+\t}\n+}"
  },
  {
    "sha": "7d8701fd082bd43210aa6b136b1e47666c435bf8",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/SpriteActivity.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/ui/SpriteActivity.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/ui/SpriteActivity.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/SpriteActivity.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -55,6 +55,7 @@\n import org.catrobat.catroid.soundrecorder.SoundRecorderActivity;\n import org.catrobat.catroid.stage.StageActivity;\n import org.catrobat.catroid.stage.TestResult;\n+import org.catrobat.catroid.ui.controller.RecentBrickListManager;\n import org.catrobat.catroid.ui.fragment.FormulaEditorFragment;\n import org.catrobat.catroid.ui.recyclerview.dialog.TextInputDialog;\n import org.catrobat.catroid.ui.recyclerview.dialog.dialoginterface.NewItemInterface;\n@@ -169,6 +170,10 @@ public void onCreate(Bundle savedInstanceState) {\n \t\tgetSupportActionBar().setDisplayHomeAsUpEnabled(true);\n \t\tgetSupportActionBar().setTitle(createActionBarTitle());\n \n+\t\tif (RecentBrickListManager.getInstance().getRecentBricks().size() == 0) {\n+\t\t\tRecentBrickListManager.getInstance().loadRecentBricks();\n+\t\t}\n+\n \t\tint fragmentPosition = FRAGMENT_SCRIPTS;\n \n \t\tBundle bundle = getIntent().getExtras();\n@@ -252,6 +257,7 @@ public boolean onOptionsItemSelected(MenuItem item) {\n \tprotected void onPause() {\n \t\tsuper.onPause();\n \t\tsaveProject();\n+\t\tRecentBrickListManager.getInstance().saveRecentBrickList();\n \t}\n \n \t@Override"
  },
  {
    "sha": "ff8e51538d88067f25ee539bdadbbbca3c735a2a",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/controller/RecentBrickListManager.java",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/ui/controller/RecentBrickListManager.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/ui/controller/RecentBrickListManager.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/controller/RecentBrickListManager.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -0,0 +1,83 @@\n+\t/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2021 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.catroid.ui.controller;\n+\n+import org.catrobat.catroid.common.FlavoredConstants;\n+import org.catrobat.catroid.common.RecentBricksHolder;\n+import org.catrobat.catroid.content.bricks.Brick;\n+import org.catrobat.catroid.io.RecentBrickListSerializer;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+import static org.catrobat.catroid.common.Constants.BACKPACK_DIRECTORY_NAME;\n+import static org.catrobat.catroid.common.Constants.RECENT_BRICKS_FILE;\n+import static org.catrobat.catroid.common.FlavoredConstants.DEFAULT_ROOT_DIRECTORY;\n+\n+public final class RecentBrickListManager {\n+\n+\tprivate static final RecentBrickListManager INSTANCE = new RecentBrickListManager();\n+\n+\tpublic final File recentBrickListDirectory =\n+\t\t\tnew File(FlavoredConstants.DEFAULT_ROOT_DIRECTORY, BACKPACK_DIRECTORY_NAME);\n+\tpublic final File recentBricksFile = new File(recentBrickListDirectory, RECENT_BRICKS_FILE);\n+\n+\tprivate RecentBricksHolder recentBricksHolder = new RecentBricksHolder();\n+\n+\tprivate RecentBrickListSerializer recentBricksSerializer =\n+\t\t\tnew RecentBrickListSerializer(recentBricksFile);\n+\n+\tpublic static RecentBrickListManager getInstance() {\n+\t\treturn INSTANCE;\n+\t}\n+\n+\tprivate RecentBrickListManager() {\n+\t\tcreateBackpackDirectories();\n+\t}\n+\n+\tprivate void createBackpackDirectories() {\n+\t\tDEFAULT_ROOT_DIRECTORY.mkdir();\n+\t}\n+\n+\tpublic List<Brick> getRecentBricks() {\n+\t\treturn recentBricksHolder.getRecentBricks();\n+\t}\n+\n+\tpublic void addBrick(Brick brick) {\n+\t\tif (!recentBricksHolder.contains(brick)) {\n+\t\t\tint size = recentBricksHolder.size();\n+\t\t\tif (size == 10) {\n+\t\t\t\trecentBricksHolder.remove(size - 1);\n+\t\t\t}\n+\t\t\trecentBricksHolder.add(0, brick);\n+\t\t}\n+\t}\n+\n+\tpublic void saveRecentBrickList() {\n+\t\trecentBricksSerializer.saveRecentBricks(recentBricksHolder);\n+\t}\n+\n+\tpublic void loadRecentBricks() {\n+\t\trecentBricksHolder = recentBricksSerializer.loadRecentBricks();\n+\t}\n+}"
  },
  {
    "sha": "7dbc22611de8f3d21d42b57c5138fb5f1b13338c",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/BrickCategoryFragment.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/ui/fragment/BrickCategoryFragment.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/ui/fragment/BrickCategoryFragment.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/fragment/BrickCategoryFragment.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Catroid: An on-device visual programming system for Android devices\n- * Copyright (C) 2010-2018 The Catrobat Team\n+ * Copyright (C) 2010-2021 The Catrobat Team\n  * (<http://developer.catrobat.org/credits>)\n  *\n  * This program is free software: you can redistribute it and/or modify\n@@ -159,6 +159,8 @@ private void setupBrickCategories() {\n \t\tLayoutInflater inflater = getActivity().getLayoutInflater();\n \t\tList<View> categories = new ArrayList<>();\n \n+\t\tcategories.add(inflater.inflate(R.layout.brick_category_recently_used, null));\n+\n \t\tif (SettingsFragment.isEmroiderySharedPreferenceEnabled(getActivity())) {\n \t\t\tcategories.add(inflater.inflate(R.layout.brick_category_embroidery, null));\n \t\t}"
  },
  {
    "sha": "a91fc34a916f5393df7e978c1747c693445d89e7",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/fragment/CategoryBricksFactory.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/ui/fragment/CategoryBricksFactory.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/ui/fragment/CategoryBricksFactory.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/fragment/CategoryBricksFactory.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -238,6 +238,7 @@\n import org.catrobat.catroid.formulaeditor.FormulaElement;\n import org.catrobat.catroid.formulaeditor.Operators;\n import org.catrobat.catroid.formulaeditor.Sensors;\n+import org.catrobat.catroid.ui.controller.RecentBrickListManager;\n import org.catrobat.catroid.ui.settingsfragments.SettingsFragment;\n \n import java.util.ArrayList;\n@@ -251,7 +252,9 @@\n public class CategoryBricksFactory {\n \n \tpublic List<Brick> getBricks(String category, boolean isBackgroundSprite, Context context) {\n-\n+\t\tif (category.equals(context.getString(R.string.category_recently_used))) {\n+\t\t\treturn setupRecentBricksCategoryList();\n+\t\t}\n \t\tif (category.equals(context.getString(R.string.category_event))) {\n \t\t\treturn setupEventCategoryList(context, isBackgroundSprite);\n \t\t}\n@@ -313,6 +316,10 @@\n \t\treturn Collections.emptyList();\n \t}\n \n+\tprotected List<Brick> setupRecentBricksCategoryList() {\n+\t\treturn RecentBrickListManager.getInstance().getRecentBricks();\n+\t}\n+\n \tprotected List<Brick> setupEventCategoryList(Context context, boolean isBackgroundSprite) {\n \t\tFormulaElement defaultIf = new FormulaElement(OPERATOR, Operators.SMALLER_THAN.toString(), null);\n \t\tdefaultIf.setLeftChild(new FormulaElement(NUMBER, \"1\", null));"
  },
  {
    "sha": "29c22b84e3dfa763375735864b6cad85f0b534aa",
    "filename": "catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/ScriptFragment.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/ScriptFragment.java",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/ScriptFragment.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/java/org/catrobat/catroid/ui/recyclerview/fragment/ScriptFragment.java?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -56,6 +56,7 @@\n import org.catrobat.catroid.ui.BottomBar;\n import org.catrobat.catroid.ui.SpriteActivity;\n import org.catrobat.catroid.ui.controller.BackpackListManager;\n+import org.catrobat.catroid.ui.controller.RecentBrickListManager;\n import org.catrobat.catroid.ui.dragndrop.BrickListView;\n import org.catrobat.catroid.ui.fragment.AddBrickFragment;\n import org.catrobat.catroid.ui.fragment.BrickCategoryFragment;\n@@ -467,6 +468,13 @@ public void handleAddButton() {\n \t}\n \n \tpublic void addBrick(Brick brick) {\n+\t\ttry {\n+\t\t\tif (!brick.getClass().getName().equals(UserDefinedReceiverBrick.class.getName())) {\n+\t\t\t\tRecentBrickListManager.getInstance().addBrick(brick.clone());\n+\t\t\t}\n+\t\t} catch (CloneNotSupportedException e) {\n+\t\t\tLog.e(TAG, Log.getStackTraceString(e));\n+\t\t}\n \t\tSprite sprite = ProjectManager.getInstance().getCurrentSprite();\n \t\taddBrick(brick, sprite, adapter, listView);\n \t}"
  },
  {
    "sha": "28100c3b4c704d4455a5da5eb11682b57bd486cc",
    "filename": "catroid/src/main/res/drawable-xhdpi/brick_selection_background_recently_used.9.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/drawable-xhdpi/brick_selection_background_recently_used.9.png",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/drawable-xhdpi/brick_selection_background_recently_used.9.png",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/res/drawable-xhdpi/brick_selection_background_recently_used.9.png?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04"
  },
  {
    "sha": "4b8f5b6f8c3e2c06a5a0551af9be1fe55337dd4a",
    "filename": "catroid/src/main/res/drawable/recently_used_pos.xml",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/drawable/recently_used_pos.xml",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/drawable/recently_used_pos.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/res/drawable/recently_used_pos.xml?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Catroid: An on-device visual programming system for Android devices\n+  ~ Copyright (C) 2010-2021 The Catrobat Team\n+  ~ (<http://developer.catrobat.org/credits>)\n+  ~\n+  ~ This program is free software: you can redistribute it and/or modify\n+  ~ it under the terms of the GNU Affero General Public License as\n+  ~ published by the Free Software Foundation, either version 3 of the\n+  ~ License, or (at your option) any later version.\n+  ~\n+  ~ An additional term exception under section 7 of the GNU Affero\n+  ~ General Public License, version 3, is available at\n+  ~ http://developer.catrobat.org/license_additional_term\n+  ~\n+  ~ This program is distributed in the hope that it will be useful,\n+  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+  ~ GNU Affero General Public License for more details.\n+  ~\n+  ~ You should have received a copy of the GNU Affero General Public License\n+  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+  -->\n+\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:height=\"24dp\"\n+    android:width=\"24dp\"\n+    android:viewportWidth=\"24\"\n+    android:viewportHeight=\"24\">\n+    <path android:fillColor=\"#FFFFFF\"\n+        android:pathData=\"M13.5,8H12V13L16.28,15.54L17,14.33L13.5,12.25V8M13,3A9,9 0 0,0 4,12H1L4.96,16.03L9,12H6A7,7 0 0,1 13,5A7,7 0 0,1 20,12A7,7 0 0,1 13,19C11.07,19 9.32,18.21 8.06,16.94L6.64,18.36C8.27,20 10.5,21 13,21A9,9 0 0,0 22,12A9,9 0 0,0 13,3\" />\n+</vector>\n\\ No newline at end of file"
  },
  {
    "sha": "bf341d08e93d78c9d1729a674e224c3cbc212523",
    "filename": "catroid/src/main/res/layout/brick_category_recently_used.xml",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/layout/brick_category_recently_used.xml",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/layout/brick_category_recently_used.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/res/layout/brick_category_recently_used.xml?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Catroid: An on-device visual programming system for Android devices\n+  ~ Copyright (C) 2010-2021 The Catrobat Team\n+  ~ (<http://developer.catrobat.org/credits>)\n+  ~\n+  ~ This program is free software: you can redistribute it and/or modify\n+  ~ it under the terms of the GNU Affero General Public License as\n+  ~ published by the Free Software Foundation, either version 3 of the\n+  ~ License, or (at your option) any later version.\n+  ~\n+  ~ An additional term exception under section 7 of the GNU Affero\n+  ~ General Public License, version 3, is available at\n+  ~ http://developer.catrobat.org/license_additional_term\n+  ~\n+  ~ This program is distributed in the hope that it will be useful,\n+  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+  ~ GNU Affero General Public License for more details.\n+  ~\n+  ~ You should have received a copy of the GNU Affero General Public License\n+  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+  -->\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    style=\"@style/BrickCategory.RecentlyUsed\">\n+\n+    <include layout=\"@layout/icon_brick_category_recently_used\" />\n+\n+    <TextView\n+        style=\"@style/BrickCategoryText\"\n+        android:text=\"@string/category_recently_used\">\n+    </TextView>\n+\n+</LinearLayout>"
  },
  {
    "sha": "39eabbee41a10bbbc4797e656eb80935ebfbd469",
    "filename": "catroid/src/main/res/layout/icon_brick_category_recently_used.xml",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/layout/icon_brick_category_recently_used.xml",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/layout/icon_brick_category_recently_used.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/res/layout/icon_brick_category_recently_used.xml?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Catroid: An on-device visual programming system for Android devices\n+  ~ Copyright (C) 2010-2021 The Catrobat Team\n+  ~ (<http://developer.catrobat.org/credits>)\n+  ~\n+  ~ This program is free software: you can redistribute it and/or modify\n+  ~ it under the terms of the GNU Affero General Public License as\n+  ~ published by the Free Software Foundation, either version 3 of the\n+  ~ License, or (at your option) any later version.\n+  ~\n+  ~ An additional term exception under section 7 of the GNU Affero\n+  ~ General Public License, version 3, is available at\n+  ~ http://developer.catrobat.org/license_additional_term\n+  ~\n+  ~ This program is distributed in the hope that it will be useful,\n+  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+  ~ GNU Affero General Public License for more details.\n+  ~\n+  ~ You should have received a copy of the GNU Affero General Public License\n+  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+  -->\n+\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_height=\"wrap_content\">\n+    <ImageView\n+        android:src=\"?attr/icon_recently_used\"\n+        style=\"@style/CategoryIconStyle\">\n+    </ImageView >\n+</LinearLayout>"
  },
  {
    "sha": "473527d457ae105dd502c9266823d386ef44b3c5",
    "filename": "catroid/src/main/res/values/attrs.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/values/attrs.xml",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/values/attrs.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/res/values/attrs.xml?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <!--\n   ~ Catroid: An on-device visual programming system for Android devices\n-  ~ Copyright (C) 2010-2018 The Catrobat Team\n+  ~ Copyright (C) 2010-2021 The Catrobat Team\n   ~ (<http://developer.catrobat.org/credits>)\n   ~\n   ~ This program is free software: you can redistribute it and/or modify\n@@ -62,6 +62,7 @@\n         <attr name=\"icon_raspberrypi\" format=\"reference\"/>\n         <attr name=\"icon_embroidery\" format=\"reference\" />\n         <attr name=\"icon_userbrick\" format=\"reference\" />\n+        <attr name=\"icon_recently_used\" format=\"reference\" />\n     </declare-styleable>\n \n     <!-- Category icons visibility -->"
  },
  {
    "sha": "576979bab2e30eeb241047735339209e92ab166f",
    "filename": "catroid/src/main/res/values/strings.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/values/strings.xml",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/values/strings.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/res/values/strings.xml?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -2079,5 +2079,6 @@ needs read and write access to it. You can always change permissions through you\n     <string name=\"serif_font\" translatable=\"false\">serif</string>\n     <string name=\"edit\">Edit</string>\n     <string name=\"data_value\">Value</string>\n+    <string name=\"category_recently_used\">Recently Used</string>\n \n </resources>"
  },
  {
    "sha": "0899c6b57f0b41be39f4e6d7e822bd582607b34a",
    "filename": "catroid/src/main/res/values/styles.xml",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Catrobat/Catroid/blob/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/values/styles.xml",
    "raw_url": "https://github.com/Catrobat/Catroid/raw/30937f7d9b96ba26e2cbf4f4f8305b153f69cb04/catroid/src/main/res/values/styles.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Catroid/contents/catroid/src/main/res/values/styles.xml?ref=30937f7d9b96ba26e2cbf4f4f8305b153f69cb04",
    "patch": "@@ -1,6 +1,6 @@\n <!--\n   ~ Catroid: An on-device visual programming system for Android devices\n-  ~ Copyright (C) 2010-2018 The Catrobat Team\n+  ~ Copyright (C) 2010-2021 The Catrobat Team\n   ~ (<http://developer.catrobat.org/credits>)\n   ~\n   ~ This program is free software: you can redistribute it and/or modify\n@@ -91,6 +91,7 @@\n         <item name=\"icon_embroidery\">@drawable/embroidery_pos</item>\n         <item name=\"icon_userbrick\">@drawable/yourbrick_pos</item>\n         <item name=\"icon_device\">@drawable/device_pos</item>\n+        <item name=\"icon_recently_used\">@drawable/recently_used_pos</item>\n     </style>\n \n     <!-- Toolbar -->\n@@ -583,6 +584,10 @@\n         <item name=\"android:textSize\">?attr/x_large</item>\n     </style>\n \n+    <style name=\"BrickCategory.RecentlyUsed\">\n+        <item name=\"android:background\">@drawable/brick_selection_background_recently_used</item>\n+    </style>\n+\n     <style name=\"BrickCategory.Control\">\n         <item name=\"android:background\">@drawable/brick_selection_background_control</item>\n     </style>"
  }
]
