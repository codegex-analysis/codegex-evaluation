[
  {
    "sha": "b793bd3e099bff825934f5be003717a6c9d7e58c",
    "filename": "Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolFontListTest.java",
    "status": "renamed",
    "additions": 25,
    "deletions": 28,
    "changes": 53,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolFontListTest.java",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolFontListTest.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolFontListTest.java?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -30,29 +30,31 @@\n import org.junit.runner.RunWith;\n \n import androidx.core.content.res.ResourcesCompat;\n+import androidx.test.espresso.contrib.RecyclerViewActions;\n import androidx.test.ext.junit.runners.AndroidJUnit4;\n import androidx.test.platform.app.InstrumentationRegistry;\n import androidx.test.rule.ActivityTestRule;\n \n+import static org.catrobat.paintroid.test.espresso.util.UiMatcher.atPosition;\n import static org.catrobat.paintroid.test.espresso.util.UiMatcher.hasTypeFace;\n-import static org.catrobat.paintroid.test.espresso.util.UiMatcher.withIndex;\n import static org.catrobat.paintroid.test.espresso.util.wrappers.ToolBarViewInteraction.onToolBarView;\n \n import static androidx.test.espresso.Espresso.onView;\n-import static androidx.test.espresso.action.ViewActions.click;\n import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.hasDescendant;\n+import static androidx.test.espresso.matcher.ViewMatchers.isChecked;\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n-import static androidx.test.espresso.matcher.ViewMatchers.withSpinnerText;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n \n @RunWith(AndroidJUnit4.class)\n-public class TextToolFontSpinnerTest {\n-\tprivate int normalStyle = Typeface.NORMAL;\n-\tprivate Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n-\tprivate Typeface sansSerifFontFace = Typeface.create(Typeface.SANS_SERIF, normalStyle);\n-\tprivate Typeface serifFontFace = Typeface.create(Typeface.SERIF, normalStyle);\n-\tprivate Typeface monospaceFontFace = Typeface.create(Typeface.MONOSPACE, normalStyle);\n-\tprivate Typeface stcFontFace = ResourcesCompat.getFont(context, R.font.stc_regular);\n-\tprivate Typeface dubaiFontFace = ResourcesCompat.getFont(context, R.font.dubai);\n+public class TextToolFontListTest {\n+\tprivate final int normalStyle = Typeface.NORMAL;\n+\tprivate final Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n+\tprivate final Typeface sansSerifFontFace = Typeface.create(Typeface.SANS_SERIF, normalStyle);\n+\tprivate final Typeface serifFontFace = Typeface.create(Typeface.SERIF, normalStyle);\n+\tprivate final Typeface monospaceFontFace = Typeface.create(Typeface.MONOSPACE, normalStyle);\n+\tprivate final Typeface stcFontFace = ResourcesCompat.getFont(context, R.font.stc_regular);\n+\tprivate final Typeface dubaiFontFace = ResourcesCompat.getFont(context, R.font.dubai);\n \n \t@Rule\n \tpublic ActivityTestRule<MainActivity> launchActivityRule = new ActivityTestRule<>(MainActivity.class);\n@@ -61,30 +63,25 @@\n \tpublic void testTextFontFaceOfFontSpinnerEnglish() {\n \t\tonToolBarView()\n \t\t\t\t.performSelectTool(ToolType.TEXT);\n-\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_spinner_font))\n-\t\t\t\t.perform(click());\n-\t\tonView(withIndex(withId(android.R.id.text1), 0))\n-\t\t\t\t.check(matches(hasTypeFace(sansSerifFontFace)));\n \n-\t\tonView(withIndex(withId(android.R.id.text1), 1))\n-\t\t\t\t.check(matches(hasTypeFace(monospaceFontFace)));\n-\n-\t\tonView(withIndex(withId(android.R.id.text1), 2))\n-\t\t\t\t.check(matches(hasTypeFace(serifFontFace)));\n-\n-\t\tonView(withIndex(withId(android.R.id.text1), 3))\n-\t\t\t\t.check(matches(hasTypeFace(dubaiFontFace)));\n-\n-\t\tonView(withIndex(withId(android.R.id.text1), 4))\n-\t\t\t\t.check(matches(hasTypeFace(stcFontFace)));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font))\n+\t\t\t\t.check(matches(atPosition(0, hasDescendant(hasTypeFace(sansSerifFontFace)))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font))\n+\t\t\t\t.check(matches(atPosition(1, hasDescendant(hasTypeFace(monospaceFontFace)))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.scrollToPosition(2))\n+\t\t\t\t.check(matches(atPosition(2, hasDescendant(hasTypeFace(serifFontFace)))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.scrollToPosition(3))\n+\t\t\t\t.check(matches(atPosition(3, hasDescendant(hasTypeFace(dubaiFontFace)))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.scrollToPosition(4))\n+\t\t\t\t.check(matches(atPosition(4, hasDescendant(hasTypeFace(stcFontFace)))));\n \t}\n \n \t@Test\n \tpublic void checkIfSansSerifIsDefaultSpinnerFont() {\n \t\tonToolBarView()\n \t\t\t\t.performSelectTool(ToolType.TEXT);\n \n-\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_spinner_font))\n-\t\t\t\t.check(matches(withSpinnerText(\"Sans Serif\")));\n+\t\tonView(withText(R.string.text_tool_dialog_font_sans_serif))\n+\t\t\t\t.check(matches(isChecked()));\n \t}\n }",
    "previous_filename": "Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolFontSpinnerTest.java"
  },
  {
    "sha": "717605cb9859d6a606c1413fba1e432b18b29bbb",
    "filename": "Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolFontListTestArabic.java",
    "status": "renamed",
    "additions": 21,
    "deletions": 26,
    "changes": 47,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolFontListTestArabic.java",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolFontListTestArabic.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolFontListTestArabic.java?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -34,32 +34,33 @@\n import java.util.Locale;\n \n import androidx.core.content.res.ResourcesCompat;\n+import androidx.test.espresso.contrib.RecyclerViewActions;\n import androidx.test.ext.junit.runners.AndroidJUnit4;\n import androidx.test.platform.app.InstrumentationRegistry;\n import androidx.test.rule.ActivityTestRule;\n \n import static org.catrobat.paintroid.test.espresso.rtl.util.RtlUiTestUtils.checkTextDirection;\n import static org.catrobat.paintroid.test.espresso.util.EspressoUtils.getConfiguration;\n+import static org.catrobat.paintroid.test.espresso.util.UiMatcher.atPosition;\n import static org.catrobat.paintroid.test.espresso.util.UiMatcher.hasTypeFace;\n-import static org.catrobat.paintroid.test.espresso.util.UiMatcher.withIndex;\n import static org.catrobat.paintroid.test.espresso.util.wrappers.ToolBarViewInteraction.onToolBarView;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n \n import static androidx.test.espresso.Espresso.onView;\n-import static androidx.test.espresso.action.ViewActions.click;\n import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.hasDescendant;\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n \n @RunWith(AndroidJUnit4.class)\n-public class TextToolFontSpinnerTestArabic {\n-\tprivate int normalStyle = Typeface.NORMAL;\n-\tprivate Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n-\tprivate Typeface sansSerifFontFace = Typeface.create(Typeface.SANS_SERIF, normalStyle);\n-\tprivate Typeface serifFontFace = Typeface.create(Typeface.SERIF, normalStyle);\n-\tprivate Typeface monospaceFontFace = Typeface.create(Typeface.MONOSPACE, normalStyle);\n-\tprivate Typeface stcFontFace = ResourcesCompat.getFont(context, R.font.stc_regular);\n-\tprivate Typeface dubaiFontFace = ResourcesCompat.getFont(context, R.font.dubai);\n+public class TextToolFontListTestArabic {\n+\tprivate final int normalStyle = Typeface.NORMAL;\n+\tprivate final Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n+\tprivate final Typeface sansSerifFontFace = Typeface.create(Typeface.SANS_SERIF, normalStyle);\n+\tprivate final Typeface serifFontFace = Typeface.create(Typeface.SERIF, normalStyle);\n+\tprivate final Typeface monospaceFontFace = Typeface.create(Typeface.MONOSPACE, normalStyle);\n+\tprivate final Typeface stcFontFace = ResourcesCompat.getFont(context, R.font.stc_regular);\n+\tprivate final Typeface dubaiFontFace = ResourcesCompat.getFont(context, R.font.dubai);\n \n \t@Rule\n \tpublic ActivityTestRule<MainActivity> launchActivityRule = new RtlActivityTestRule<>(MainActivity.class, \"ar\");\n@@ -71,21 +72,15 @@ public void testTextFontFaceOfFontSpinnerArabic() {\n \n \t\tonToolBarView()\n \t\t\t\t.performSelectTool(ToolType.TEXT);\n-\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_spinner_font))\n-\t\t\t\t.perform(click());\n-\t\tonView(withIndex(withId(android.R.id.text1), 0))\n-\t\t\t\t.check(matches(hasTypeFace(sansSerifFontFace)));\n-\n-\t\tonView(withIndex(withId(android.R.id.text1), 1))\n-\t\t\t\t.check(matches(hasTypeFace(monospaceFontFace)));\n-\n-\t\tonView(withIndex(withId(android.R.id.text1), 2))\n-\t\t\t\t.check(matches(hasTypeFace(serifFontFace)));\n-\n-\t\tonView(withIndex(withId(android.R.id.text1), 3))\n-\t\t\t\t.check(matches(hasTypeFace(dubaiFontFace)));\n-\n-\t\tonView(withIndex(withId(android.R.id.text1), 4))\n-\t\t\t\t.check(matches(hasTypeFace(stcFontFace)));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font))\n+\t\t\t\t.check(matches(atPosition(0, hasDescendant(hasTypeFace(sansSerifFontFace)))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font))\n+\t\t\t\t.check(matches(atPosition(1, hasDescendant(hasTypeFace(monospaceFontFace)))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.scrollToPosition(2))\n+\t\t\t\t.check(matches(atPosition(2, hasDescendant(hasTypeFace(serifFontFace)))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.scrollToPosition(3))\n+\t\t\t\t.check(matches(atPosition(3, hasDescendant(hasTypeFace(dubaiFontFace)))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.scrollToPosition(4))\n+\t\t\t\t.check(matches(atPosition(4, hasDescendant(hasTypeFace(stcFontFace)))));\n \t}\n }",
    "previous_filename": "Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolFontSpinnerTestArabic.java"
  },
  {
    "sha": "5c88497beaff035a98b4e5a10259eda8796748a6",
    "filename": "Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolIntegrationTest.java",
    "status": "modified",
    "additions": 34,
    "deletions": 35,
    "changes": 69,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolIntegrationTest.java",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolIntegrationTest.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/tools/TextToolIntegrationTest.java?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -27,8 +27,8 @@\n import android.graphics.PointF;\n import android.graphics.Typeface;\n import android.widget.EditText;\n-import android.widget.Spinner;\n-import android.widget.ToggleButton;\n+\n+import com.google.android.material.button.MaterialButton;\n \n import org.catrobat.paintroid.MainActivity;\n import org.catrobat.paintroid.R;\n@@ -38,7 +38,7 @@\n import org.catrobat.paintroid.tools.ToolReference;\n import org.catrobat.paintroid.tools.ToolType;\n import org.catrobat.paintroid.tools.implementation.TextTool;\n-import org.catrobat.paintroid.ui.Perspective;\n+import org.catrobat.paintroid.ui.tools.FontListAdapter;\n import org.junit.Before;\n import org.junit.Ignore;\n import org.junit.Rule;\n@@ -50,37 +50,36 @@\n import java.util.List;\n \n import androidx.core.content.res.ResourcesCompat;\n+import androidx.recyclerview.widget.RecyclerView;\n import androidx.test.espresso.Espresso;\n+import androidx.test.espresso.contrib.RecyclerViewActions;\n import androidx.test.ext.junit.runners.AndroidJUnit4;\n import androidx.test.rule.ActivityTestRule;\n \n import static org.catrobat.paintroid.test.espresso.util.UiInteractions.touchAt;\n+import static org.catrobat.paintroid.test.espresso.util.UiMatcher.atPosition;\n import static org.catrobat.paintroid.test.espresso.util.wrappers.DrawingSurfaceInteraction.onDrawingSurfaceView;\n import static org.catrobat.paintroid.test.espresso.util.wrappers.ToolBarViewInteraction.onToolBarView;\n import static org.catrobat.paintroid.test.espresso.util.wrappers.ToolPropertiesInteraction.onToolProperties;\n import static org.catrobat.paintroid.test.espresso.util.wrappers.TopBarViewInteraction.onTopBarView;\n-import static org.hamcrest.Matchers.allOf;\n-import static org.hamcrest.Matchers.instanceOf;\n-import static org.hamcrest.Matchers.is;\n import static org.junit.Assert.assertArrayEquals;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotEquals;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n-import static androidx.test.espresso.Espresso.onData;\n import static androidx.test.espresso.Espresso.onView;\n import static androidx.test.espresso.Espresso.pressBack;\n import static androidx.test.espresso.action.ViewActions.click;\n import static androidx.test.espresso.action.ViewActions.replaceText;\n import static androidx.test.espresso.assertion.ViewAssertions.matches;\n-import static androidx.test.espresso.matcher.RootMatchers.isPlatformPopup;\n+import static androidx.test.espresso.matcher.ViewMatchers.hasDescendant;\n import static androidx.test.espresso.matcher.ViewMatchers.hasFocus;\n+import static androidx.test.espresso.matcher.ViewMatchers.isChecked;\n import static androidx.test.espresso.matcher.ViewMatchers.isNotChecked;\n import static androidx.test.espresso.matcher.ViewMatchers.withHint;\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n-import static androidx.test.espresso.matcher.ViewMatchers.withSpinnerText;\n import static androidx.test.espresso.matcher.ViewMatchers.withText;\n \n @RunWith(AndroidJUnit4.class)\n@@ -104,12 +103,11 @@\n \tprivate TextTool textTool;\n \tprivate TextTool textToolAfterZoom;\n \tprivate EditText textEditText;\n-\tprivate Spinner fontSpinner;\n-\tprivate ToggleButton underlinedToggleButton;\n-\tprivate ToggleButton italicToggleButton;\n-\tprivate ToggleButton boldToggleButton;\n+\tprivate RecyclerView fontList;\n+\tprivate MaterialButton underlinedToggleButton;\n+\tprivate MaterialButton italicToggleButton;\n+\tprivate MaterialButton boldToggleButton;\n \tprivate EditText textSize;\n-\tprivate Perspective perspective;\n \tprivate LayerContracts.Model layerModel;\n \tprivate MainActivity activity;\n \tprivate ToolReference toolReference;\n@@ -118,7 +116,6 @@\n \tpublic void setUp() {\n \t\tactivity = launchActivityRule.getActivity();\n \t\tactivityHelper = new MainActivityHelper(activity);\n-\t\tperspective = activity.perspective;\n \t\tlayerModel = activity.layerModel;\n \t\ttoolReference = activity.toolReference;\n \n@@ -128,7 +125,7 @@ public void setUp() {\n \t\ttextTool = (TextTool) toolReference.get();\n \n \t\ttextEditText = activity.findViewById(R.id.pocketpaint_text_tool_dialog_input_text);\n-\t\tfontSpinner = activity.findViewById(R.id.pocketpaint_text_tool_dialog_spinner_font);\n+\t\tfontList = activity.findViewById(R.id.pocketpaint_text_tool_dialog_list_font);\n \t\tunderlinedToggleButton = activity.findViewById(R.id.pocketpaint_text_tool_dialog_toggle_underlined);\n \t\titalicToggleButton = activity.findViewById(R.id.pocketpaint_text_tool_dialog_toggle_italic);\n \t\tboldToggleButton = activity.findViewById(R.id.pocketpaint_text_tool_dialog_toggle_bold);\n@@ -153,6 +150,7 @@ public void testTextToolStillEditableAfterClosingTextTool() {\n \t\tassertTrue(underlinedToggleButton.isChecked());\n \t\tassertEquals(TEST_TEXT_ADVANCED, textEditText.getText().toString());\n \t}\n+\n \t@Ignore(\"Fix bug in own ticket , focus is not correctly implemented in google play either\")\n \t@Test\n \tpublic void testDialogKeyboardTextBoxAppearanceOnStartup() {\n@@ -166,15 +164,18 @@ public void testDialogDefaultValues() {\n \t\t\t\t.check(matches(withHint(R.string.text_tool_dialog_input_hint)))\n \t\t\t\t.check(matches(withText(textTool.text)));\n \n-\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_spinner_font))\n-\t\t\t\t.check(matches(withSpinnerText(textTool.font)));\n-\n-\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_toggle_underlined))\n-\t\t\t\t.check(matches(isNotChecked()));\n-\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_toggle_bold))\n-\t\t\t\t.check(matches(isNotChecked()));\n-\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_toggle_italic))\n-\t\t\t\t.check(matches(isNotChecked()));\n+\t\tonToolBarView()\n+\t\t\t\t.performSelectTool(ToolType.TEXT);\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font))\n+\t\t\t\t.check(matches(atPosition(0, hasDescendant(isChecked()))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font))\n+\t\t\t\t.check(matches(atPosition(1, hasDescendant(isNotChecked()))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.scrollToPosition(2))\n+\t\t\t\t.check(matches(atPosition(2, hasDescendant(isNotChecked()))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.scrollToPosition(3))\n+\t\t\t\t.check(matches(atPosition(3, hasDescendant(isNotChecked()))));\n+\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.scrollToPosition(4))\n+\t\t\t\t.check(matches(atPosition(4, hasDescendant(isNotChecked()))));\n \n \t\tassertFalse(textTool.underlined);\n \t\tassertFalse(textTool.italic);\n@@ -188,7 +189,7 @@ public void testDialogToolInteraction() {\n \n \t\tselectFormatting(FormattingOptions.SERIF);\n \t\tassertEquals(FONT_SERIF, textTool.font);\n-\t\tassertEquals(FONT_SERIF, fontSpinner.getSelectedItem());\n+\t\tassertEquals(FONT_SERIF, ((FontListAdapter) fontList.getAdapter()).getSelectedItem());\n \n \t\tselectFormatting(FormattingOptions.UNDERLINE);\n \t\tassertTrue(textTool.underlined);\n@@ -242,7 +243,7 @@ public void testDialogAndTextBoxAfterReopenDialog() {\n \t\t\t\t.performOpenToolOptionsView();\n \n \t\tassertEquals(TEST_TEXT, textEditText.getText().toString());\n-\t\tassertEquals(FONT_SANS_SERIF, fontSpinner.getSelectedItem());\n+\t\tassertEquals(FONT_SANS_SERIF, ((FontListAdapter) fontList.getAdapter()).getSelectedItem());\n \t\tassertTrue(underlinedToggleButton.isChecked());\n \t\tassertTrue(italicToggleButton.isChecked());\n \t\tassertTrue(boldToggleButton.isChecked());\n@@ -265,7 +266,7 @@ public void testStateRestoredAfterOrientationChange() {\n \t\ttextTool = (TextTool) toolReference.get();\n \n \t\tassertEquals(TEST_TEXT, textEditText.getText().toString());\n-\t\tassertEquals(FONT_SANS_SERIF, fontSpinner.getSelectedItem());\n+\t\tassertEquals(FONT_SANS_SERIF, ((FontListAdapter) fontList.getAdapter()).getSelectedItem());\n \t\tassertTrue(underlinedToggleButton.isChecked());\n \t\tassertTrue(italicToggleButton.isChecked());\n \t\tassertTrue(boldToggleButton.isChecked());\n@@ -451,7 +452,7 @@ public void testCommandUndoAndRedo() {\n \n \t\tint actionBarHeight;\n \t\tfinal TypedArray styledAttributes = activity.getTheme().obtainStyledAttributes(\n-\t\t\t\tnew int[] {android.R.attr.actionBarSize}\n+\t\t\t\tnew int[]{android.R.attr.actionBarSize}\n \t\t);\n \t\tactionBarHeight = (int) styledAttributes.getDimension(0, 0);\n \t\tPointF canvasPoint = new PointF(screenPoint.x, screenPoint.y - actionBarHeight - statusBarHeight);\n@@ -638,10 +639,10 @@ private void checkTextBoxDimensions() {\n \n \t\tboolean italic = italicToggleButton.isChecked();\n \n-\t\tString font = (String) fontSpinner.getSelectedItem();\n+\t\tString font = ((FontListAdapter) fontList.getAdapter()).getSelectedItem();\n \n \t\tString stringTextSize = textSize.getText().toString();\n-\t\tfloat textSize = Float.valueOf(stringTextSize) * textSizeMagnificationFactor;\n+\t\tfloat textSize = Float.parseFloat(stringTextSize) * textSizeMagnificationFactor;\n \n \t\tPaint textPaint = new Paint();\n \t\ttextPaint.setAntiAlias(true);\n@@ -738,10 +739,8 @@ private void selectFormatting(FormattingOptions format) {\n \t\t\tcase SANS_SERIF:\n \t\t\tcase STC:\n \t\t\tcase DUBAI:\n-\t\t\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_spinner_font)).perform(click());\n-\t\t\t\tonData(allOf(is(instanceOf(String.class)), is(getFontString(format))))\n-\t\t\t\t\t\t.inRoot(isPlatformPopup())\n-\t\t\t\t\t\t.perform(click());\n+\t\t\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.scrollTo(hasDescendant(withText(getFontString(format)))));\n+\t\t\t\tonView(withId(R.id.pocketpaint_text_tool_dialog_list_font)).perform(RecyclerViewActions.actionOnItem(hasDescendant(withText(getFontString(format))), click()));\n \t\t\t\tbreak;\n \t\t\tcase UNDERLINE:\n \t\t\tcase ITALIC:"
  },
  {
    "sha": "537ef5a1ba3f2f262acc0416fb81b40268ec75d7",
    "filename": "Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/util/UiMatcher.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/util/UiMatcher.java",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/util/UiMatcher.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/androidTest/java/org/catrobat/paintroid/test/espresso/util/UiMatcher.java?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -46,6 +46,8 @@\n import org.hamcrest.Matcher;\n import org.hamcrest.TypeSafeMatcher;\n \n+import androidx.annotation.NonNull;\n+import androidx.recyclerview.widget.RecyclerView;\n import androidx.test.espresso.NoMatchingViewException;\n import androidx.test.espresso.Root;\n import androidx.test.espresso.ViewAssertion;\n@@ -57,13 +59,35 @@\n import static org.hamcrest.Matchers.is;\n import static org.junit.Assert.assertThat;\n \n+import static androidx.core.util.Preconditions.checkNotNull;\n import static androidx.test.espresso.matcher.ViewMatchers.withEffectiveVisibility;\n \n public final class UiMatcher {\n \n \tprivate UiMatcher() {\n \t}\n \n+\tpublic static Matcher<View> atPosition(final int position, @NonNull final Matcher<View> itemMatcher) {\n+\t\tcheckNotNull(itemMatcher);\n+\t\treturn new BoundedMatcher<View, RecyclerView>(RecyclerView.class) {\n+\t\t\t@Override\n+\t\t\tpublic void describeTo(Description description) {\n+\t\t\t\tdescription.appendText(\"has item at position \" + position + \": \");\n+\t\t\t\titemMatcher.describeTo(description);\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tprotected boolean matchesSafely(final RecyclerView view) {\n+\t\t\t\tRecyclerView.ViewHolder viewHolder = view.findViewHolderForAdapterPosition(position);\n+\t\t\t\tif (viewHolder == null) {\n+\t\t\t\t\t// has no item on such position\n+\t\t\t\t\treturn false;\n+\t\t\t\t}\n+\t\t\t\treturn itemMatcher.matches(viewHolder.itemView);\n+\t\t\t}\n+\t\t};\n+\t}\n+\n \tpublic static Matcher<View> withIndex(final Matcher<View> matcher, final int index) {\n \t\treturn new TypeSafeMatcher<View>() {\n \t\t\tint currentIndex = 0;"
  },
  {
    "sha": "cfa2225c111e76a856b4f2776ba913ba8b032ede",
    "filename": "Paintroid/src/main/java/org/catrobat/paintroid/tools/implementation/TextTool.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/java/org/catrobat/paintroid/tools/implementation/TextTool.java",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/java/org/catrobat/paintroid/tools/implementation/TextTool.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/java/org/catrobat/paintroid/tools/implementation/TextTool.java?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -66,7 +66,7 @@\n \t@VisibleForTesting\n \tpublic String text = \"\";\n \t@VisibleForTesting\n-\tpublic String font = \"Monospace\";\n+\tpublic String font = \"Sans Serif\";\n \t@VisibleForTesting\n \tpublic boolean underlined = false;\n \t@VisibleForTesting"
  },
  {
    "sha": "602146c2f01285c6ecf6afa818f98bcf52923bc9",
    "filename": "Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/DefaultTextToolOptionsView.java",
    "status": "removed",
    "additions": 0,
    "deletions": 232,
    "changes": 232,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/8d848c04ac41068395634fc8a2a461955cd7812a/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/DefaultTextToolOptionsView.java",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/8d848c04ac41068395634fc8a2a461955cd7812a/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/DefaultTextToolOptionsView.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/DefaultTextToolOptionsView.java?ref=8d848c04ac41068395634fc8a2a461955cd7812a",
    "patch": "@@ -1,232 +0,0 @@\n-/*\n- * Paintroid: An image manipulation application for Android.\n- * Copyright (C) 2010-2015 The Catrobat Team\n- * (<http://developer.catrobat.org/credits>)\n- *\n- * This program is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as\n- * published by the Free Software Foundation, either version 3 of the\n- * License, or (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n- */\n-\n-package org.catrobat.paintroid.ui.tools;\n-\n-import android.content.Context;\n-import android.graphics.Paint;\n-import android.text.Editable;\n-import android.text.TextWatcher;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.view.inputmethod.InputMethodManager;\n-import android.widget.AdapterView;\n-import android.widget.Checkable;\n-import android.widget.EditText;\n-import android.widget.Spinner;\n-import android.widget.ToggleButton;\n-\n-import org.catrobat.paintroid.R;\n-import org.catrobat.paintroid.tools.options.TextToolOptionsView;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-\n-public class DefaultTextToolOptionsView implements TextToolOptionsView {\n-\tprivate final Context context;\n-\tprivate Callback callback;\n-\tprivate final EditText textEditText;\n-\tprivate final EditText fontSizeText;\n-\tprivate final Spinner fontSpinner;\n-\tprivate final ToggleButton underlinedToggleButton;\n-\tprivate final ToggleButton italicToggleButton;\n-\tprivate final ToggleButton boldToggleButton;\n-\tprivate final List<String> fonts;\n-\tprivate static final String DEFAULT_TEXTSIZE = \"20\";\n-\tprivate static final String MAX_TEXTSIZE = \"300\";\n-\tprivate static final int MIN_FONT_SIZE = 1;\n-\tprivate static final int MAX_FONT_SIZE = 300;\n-\n-\tpublic DefaultTextToolOptionsView(ViewGroup rootView) {\n-\t\tcontext = rootView.getContext();\n-\t\tLayoutInflater inflater = LayoutInflater.from(context);\n-\t\tView textToolView = inflater.inflate(R.layout.dialog_pocketpaint_text_tool, rootView);\n-\n-\t\ttextEditText = textToolView.findViewById(R.id.pocketpaint_text_tool_dialog_input_text);\n-\t\tfontSpinner = textToolView.findViewById(R.id.pocketpaint_text_tool_dialog_spinner_font);\n-\t\tunderlinedToggleButton = textToolView.findViewById(R.id.pocketpaint_text_tool_dialog_toggle_underlined);\n-\t\titalicToggleButton = textToolView.findViewById(R.id.pocketpaint_text_tool_dialog_toggle_italic);\n-\t\tboldToggleButton = textToolView.findViewById(R.id.pocketpaint_text_tool_dialog_toggle_bold);\n-\t\tfontSizeText = textToolView.findViewById(R.id.pocketpaint_font_size_text);\n-\t\tfontSizeText.setText(DEFAULT_TEXTSIZE);\n-\n-\t\tunderlinedToggleButton.setPaintFlags(underlinedToggleButton.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\n-\t\tfonts = Arrays.asList(context.getResources().getStringArray(R.array.pocketpaint_main_text_tool_fonts));\n-\n-\t\tinitializeListeners();\n-\t\ttextEditText.requestFocus();\n-\t}\n-\n-\tprivate void initializeListeners() {\n-\t\ttextEditText.addTextChangedListener(new TextWatcher() {\n-\t\t\t@Override\n-\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void afterTextChanged(Editable editable) {\n-\t\t\t\tnotifyTextChanged(editable.toString());\n-\t\t\t}\n-\t\t});\n-\n-\t\ttextEditText.setOnFocusChangeListener(new View.OnFocusChangeListener() {\n-\t\t\t@Override\n-\t\t\tpublic void onFocusChange(View v, boolean hasFocus) {\n-\t\t\t\tif (!hasFocus) {\n-\t\t\t\t\thideKeyboard();\n-\t\t\t\t}\n-\t\t\t}\n-\t\t});\n-\n-\t\tFontArrayAdapter fontSpinnerAdapter = new FontArrayAdapter(context,\n-\t\t\t\tandroid.R.layout.simple_list_item_activated_1, fonts);\n-\t\tfontSpinner.setAdapter(fontSpinnerAdapter);\n-\t\tfontSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n-\t\t\t@Override\n-\t\t\tpublic void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n-\t\t\t\tString fontString = (String) parent.getItemAtPosition(position);\n-\t\t\t\tnotifyFontChanged(fontString);\n-\t\t\t\thideKeyboard();\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void onNothingSelected(AdapterView<?> parent) {\n-\t\t\t\thideKeyboard();\n-\t\t\t}\n-\t\t});\n-\n-\t\tunderlinedToggleButton.setPaintFlags(underlinedToggleButton.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\n-\t\tunderlinedToggleButton.setOnClickListener(new ToggleButton.OnClickListener() {\n-\t\t\t@Override\n-\t\t\tpublic void onClick(View v) {\n-\t\t\t\tboolean underlined = ((Checkable) v).isChecked();\n-\t\t\t\tnotifyUnderlinedChanged(underlined);\n-\t\t\t\thideKeyboard();\n-\t\t\t}\n-\t\t});\n-\n-\t\titalicToggleButton.setOnClickListener(new ToggleButton.OnClickListener() {\n-\t\t\t@Override\n-\t\t\tpublic void onClick(View v) {\n-\t\t\t\tboolean italic = ((Checkable) v).isChecked();\n-\t\t\t\tnotifyItalicChanged(italic);\n-\t\t\t\thideKeyboard();\n-\t\t\t}\n-\t\t});\n-\n-\t\tboldToggleButton.setOnClickListener(new ToggleButton.OnClickListener() {\n-\t\t\t@Override\n-\t\t\tpublic void onClick(View v) {\n-\t\t\t\tboolean bold = ((Checkable) v).isChecked();\n-\t\t\t\tnotifyBoldChanged(bold);\n-\t\t\t\thideKeyboard();\n-\t\t\t}\n-\t\t});\n-\n-\t\tfontSizeText.addTextChangedListener(new TextWatcher() {\n-\t\t\t@Override\n-\t\t\tpublic void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic void afterTextChanged(Editable editable) {\n-\t\t\t\tString sizeText = fontSizeText.getText().toString();\n-\t\t\t\tint sizeTextInt;\n-\t\t\t\ttry {\n-\t\t\t\t\tsizeTextInt = Integer.parseInt(sizeText);\n-\t\t\t\t} catch (NumberFormatException exp) {\n-\t\t\t\t\tsizeTextInt = MIN_FONT_SIZE;\n-\t\t\t\t}\n-\t\t\t\tif (sizeTextInt > MAX_FONT_SIZE) {\n-\t\t\t\t\tsizeTextInt = MAX_FONT_SIZE;\n-\t\t\t\t\tfontSizeText.setText(MAX_TEXTSIZE);\n-\t\t\t\t\tfontSizeText.setSelection(MAX_TEXTSIZE.length());\n-\t\t\t\t}\n-\t\t\t\tnotifyTextSizeChanged(sizeTextInt);\n-\t\t\t}\n-\t\t});\n-\t}\n-\n-\tprivate void notifyFontChanged(String fontString) {\n-\t\tif (callback != null) {\n-\t\t\tcallback.setFont(fontString);\n-\t\t}\n-\t}\n-\n-\tprivate void notifyUnderlinedChanged(boolean underlined) {\n-\t\tif (callback != null) {\n-\t\t\tcallback.setUnderlined(underlined);\n-\t\t}\n-\t}\n-\n-\tprivate void notifyItalicChanged(boolean italic) {\n-\t\tif (callback != null) {\n-\t\t\tcallback.setItalic(italic);\n-\t\t}\n-\t}\n-\n-\tprivate void notifyBoldChanged(boolean bold) {\n-\t\tif (callback != null) {\n-\t\t\tcallback.setBold(bold);\n-\t\t}\n-\t}\n-\n-\tprivate void notifyTextSizeChanged(int textSize) {\n-\t\tif (callback != null) {\n-\t\t\tcallback.setTextSize(textSize);\n-\t\t}\n-\t}\n-\n-\tprivate void notifyTextChanged(String text) {\n-\t\tif (callback != null) {\n-\t\t\tcallback.setText(text);\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void setState(boolean bold, boolean italic, boolean underlined, String text, int textSize, String font) {\n-\t\tboldToggleButton.setChecked(bold);\n-\t\titalicToggleButton.setChecked(italic);\n-\t\tunderlinedToggleButton.setChecked(underlined);\n-\t\ttextEditText.setText(text);\n-\t\tfontSpinner.setSelection(fonts.indexOf(font));\n-\t\tfontSizeText.setText(DEFAULT_TEXTSIZE);\n-\t}\n-\n-\t@Override\n-\tpublic void setCallback(Callback listener) {\n-\t\tcallback = listener;\n-\t}\n-\n-\tprivate void hideKeyboard() {\n-\t\tInputMethodManager imm = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);\n-\t\tif (imm != null) {\n-\t\t\timm.hideSoftInputFromWindow(textEditText.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);\n-\t\t}\n-\t}\n-}"
  },
  {
    "sha": "a34272caa01a6524fe741ad3a8fade7d9fe4ebf4",
    "filename": "Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/DefaultTextToolOptionsView.kt",
    "status": "added",
    "additions": 180,
    "deletions": 0,
    "changes": 180,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/DefaultTextToolOptionsView.kt",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/DefaultTextToolOptionsView.kt",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/DefaultTextToolOptionsView.kt?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -0,0 +1,180 @@\n+/*\n+ * Paintroid: An image manipulation application for Android.\n+ * Copyright (C) 2010-2015 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.catrobat.paintroid.ui.tools\n+\n+import android.content.Context\n+import android.graphics.Paint\n+import android.text.Editable\n+import android.text.TextWatcher\n+import android.view.LayoutInflater\n+import android.view.View.OnFocusChangeListener\n+import android.view.ViewGroup\n+import android.view.inputmethod.InputMethodManager\n+import android.widget.Checkable\n+import android.widget.EditText\n+import androidx.recyclerview.widget.LinearLayoutManager\n+import androidx.recyclerview.widget.RecyclerView\n+import com.google.android.material.button.MaterialButton\n+import org.catrobat.paintroid.R\n+import org.catrobat.paintroid.tools.options.TextToolOptionsView\n+import java.util.*\n+\n+class DefaultTextToolOptionsView(rootView: ViewGroup) : TextToolOptionsView {\n+    private val context: Context = rootView.context\n+    private var callback: TextToolOptionsView.Callback? = null\n+    private val textEditText: EditText\n+    private val fontSizeText: EditText\n+    private val fontList: RecyclerView\n+    private val underlinedToggleButton: MaterialButton\n+    private val italicToggleButton: MaterialButton\n+    private val boldToggleButton: MaterialButton\n+    private val fonts: List<String>\n+\n+    private fun initializeListeners() {\n+        textEditText.addTextChangedListener(object : TextWatcher {\n+            override fun beforeTextChanged(s: CharSequence, start: Int, count: Int, after: Int) {}\n+            override fun onTextChanged(s: CharSequence, start: Int, before: Int, count: Int) {}\n+            override fun afterTextChanged(editable: Editable) {\n+                notifyTextChanged(editable.toString())\n+            }\n+        })\n+        textEditText.onFocusChangeListener = OnFocusChangeListener { _, hasFocus ->\n+            if (!hasFocus) {\n+                hideKeyboard()\n+            }\n+        }\n+        fontList.layoutManager = LinearLayoutManager(context, LinearLayoutManager.HORIZONTAL, false)\n+        fontList.adapter = FontListAdapter(context, fonts) { font ->\n+            notifyFontChanged(font)\n+            hideKeyboard()\n+        }\n+\n+        underlinedToggleButton.setOnClickListener { v ->\n+            val underlined = (v as Checkable).isChecked\n+            notifyUnderlinedChanged(underlined)\n+            hideKeyboard()\n+        }\n+        italicToggleButton.setOnClickListener { v ->\n+            val italic = (v as Checkable).isChecked\n+            notifyItalicChanged(italic)\n+            hideKeyboard()\n+        }\n+        boldToggleButton.setOnClickListener { v ->\n+            val bold = (v as Checkable).isChecked\n+            notifyBoldChanged(bold)\n+            hideKeyboard()\n+        }\n+        fontSizeText.addTextChangedListener(object : TextWatcher {\n+            override fun beforeTextChanged(charSequence: CharSequence, i: Int, i1: Int, i2: Int) {}\n+            override fun onTextChanged(charSequence: CharSequence, i: Int, i1: Int, i2: Int) {}\n+            override fun afterTextChanged(editable: Editable) {\n+                val sizeText = fontSizeText.text.toString()\n+                var sizeTextInt: Int\n+                sizeTextInt = try {\n+                    sizeText.toInt()\n+                } catch (exp: NumberFormatException) {\n+                    MIN_FONT_SIZE\n+                }\n+                if (sizeTextInt > MAX_FONT_SIZE) {\n+                    sizeTextInt = MAX_FONT_SIZE\n+                    fontSizeText.setText(MAX_TEXTSIZE)\n+                    fontSizeText.setSelection(MAX_TEXTSIZE.length)\n+                }\n+                notifyTextSizeChanged(sizeTextInt)\n+            }\n+        })\n+    }\n+\n+    private fun notifyFontChanged(fontString: String) {\n+        if (callback != null) {\n+            callback!!.setFont(fontString)\n+        }\n+    }\n+\n+    private fun notifyUnderlinedChanged(underlined: Boolean) {\n+        if (callback != null) {\n+            callback!!.setUnderlined(underlined)\n+        }\n+    }\n+\n+    private fun notifyItalicChanged(italic: Boolean) {\n+        if (callback != null) {\n+            callback!!.setItalic(italic)\n+        }\n+    }\n+\n+    private fun notifyBoldChanged(bold: Boolean) {\n+        if (callback != null) {\n+            callback!!.setBold(bold)\n+        }\n+    }\n+\n+    private fun notifyTextSizeChanged(textSize: Int) {\n+        if (callback != null) {\n+            callback!!.setTextSize(textSize)\n+        }\n+    }\n+\n+    private fun notifyTextChanged(text: String) {\n+        if (callback != null) {\n+            callback!!.setText(text)\n+        }\n+    }\n+\n+    override fun setState(bold: Boolean, italic: Boolean, underlined: Boolean, text: String, textSize: Int, font: String) {\n+        boldToggleButton.isChecked = bold\n+        italicToggleButton.isChecked = italic\n+        underlinedToggleButton.isChecked = underlined\n+        textEditText.setText(text)\n+        (fontList.adapter as FontListAdapter).setSelectedIndex(fonts.indexOf(font));\n+        fontSizeText.setText(DEFAULT_TEXTSIZE)\n+    }\n+\n+    override fun setCallback(listener: TextToolOptionsView.Callback) {\n+        callback = listener\n+    }\n+\n+    private fun hideKeyboard() {\n+        val imm = context.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager\n+        imm.hideSoftInputFromWindow(textEditText.windowToken, InputMethodManager.HIDE_NOT_ALWAYS)\n+    }\n+\n+    companion object {\n+        private const val DEFAULT_TEXTSIZE = \"20\"\n+        private const val MAX_TEXTSIZE = \"300\"\n+        private const val MIN_FONT_SIZE = 1\n+        private const val MAX_FONT_SIZE = 300\n+    }\n+\n+    init {\n+        val inflater = LayoutInflater.from(context)\n+        val textToolView = inflater.inflate(R.layout.dialog_pocketpaint_text_tool, rootView)\n+        textEditText = textToolView.findViewById(R.id.pocketpaint_text_tool_dialog_input_text)\n+        fontList = textToolView.findViewById(R.id.pocketpaint_text_tool_dialog_list_font)\n+        underlinedToggleButton = textToolView.findViewById(R.id.pocketpaint_text_tool_dialog_toggle_underlined)\n+        italicToggleButton = textToolView.findViewById(R.id.pocketpaint_text_tool_dialog_toggle_italic)\n+        boldToggleButton = textToolView.findViewById(R.id.pocketpaint_text_tool_dialog_toggle_bold)\n+        fontSizeText = textToolView.findViewById(R.id.pocketpaint_font_size_text)\n+        fontSizeText.setText(DEFAULT_TEXTSIZE)\n+        underlinedToggleButton.paintFlags = underlinedToggleButton.paintFlags or Paint.UNDERLINE_TEXT_FLAG\n+        fonts = listOf(*context.resources.getStringArray(R.array.pocketpaint_main_text_tool_fonts))\n+        initializeListeners()\n+        textEditText.requestFocus()\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "76057d37d0df4c0eb1bbcadc5fa3583340ed1b60",
    "filename": "Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/FontArrayAdapter.java",
    "status": "removed",
    "additions": 0,
    "deletions": 70,
    "changes": 70,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/8d848c04ac41068395634fc8a2a461955cd7812a/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/FontArrayAdapter.java",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/8d848c04ac41068395634fc8a2a461955cd7812a/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/FontArrayAdapter.java",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/FontArrayAdapter.java?ref=8d848c04ac41068395634fc8a2a461955cd7812a",
    "patch": "@@ -1,70 +0,0 @@\n-/*\n- * Paintroid: An image manipulation application for Android.\n- * Copyright (C) 2010-2015 The Catrobat Team\n- * (<http://developer.catrobat.org/credits>)\n- *\n- * This program is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as\n- * published by the Free Software Foundation, either version 3 of the\n- * License, or (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n- */\n-\n-package org.catrobat.paintroid.ui.tools;\n-\n-import android.content.Context;\n-import android.graphics.Typeface;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.ArrayAdapter;\n-import android.widget.TextView;\n-\n-import org.catrobat.paintroid.R;\n-\n-import java.util.List;\n-\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-import androidx.core.content.res.ResourcesCompat;\n-\n-public class FontArrayAdapter extends ArrayAdapter<String> {\n-\tprivate Typeface sansSerif = Typeface.create(Typeface.SANS_SERIF, Typeface.NORMAL);\n-\tprivate Typeface serif = Typeface.create(Typeface.SERIF, Typeface.NORMAL);\n-\tprivate Typeface monospace = Typeface.create(Typeface.MONOSPACE, Typeface.NORMAL);\n-\tprivate Typeface stc = ResourcesCompat.getFont(getContext(), R.font.stc_regular);\n-\tprivate Typeface dubai = ResourcesCompat.getFont(getContext(), R.font.dubai);\n-\n-\tprivate final Typeface[] typeFaces = {\n-\t\t\tsansSerif,\n-\t\t\tmonospace,\n-\t\t\tserif,\n-\t\t\tdubai,\n-\t\t\tstc,\n-\t};\n-\n-\tpublic FontArrayAdapter(@NonNull Context context, int resource, @NonNull List<String> objects) {\n-\t\tsuper(context, resource, objects);\n-\t}\n-\n-\t@Override\n-\tpublic View getDropDownView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\n-\t\tTextView spinnerText = (TextView) super.getDropDownView(position, convertView, parent);\n-\t\tspinnerText.setTypeface(typeFaces[position]);\n-\t\treturn spinnerText;\n-\t}\n-\n-\t@NonNull\n-\t@Override\n-\tpublic View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\n-\t\tTextView spinnerText = (TextView) super.getView(position, convertView, parent);\n-\t\tspinnerText.setTypeface(typeFaces[position]);\n-\t\treturn spinnerText;\n-\t}\n-}"
  },
  {
    "sha": "15e7ae9c0d81baf40ffc7a2d9cc8b2f859f2c2a8",
    "filename": "Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/FontListAdapter.kt",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/FontListAdapter.kt",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/FontListAdapter.kt",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/java/org/catrobat/paintroid/ui/tools/FontListAdapter.kt?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -0,0 +1,65 @@\n+package org.catrobat.paintroid.ui.tools;\n+import android.content.Context\n+import android.graphics.Typeface\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.view.ViewGroup\n+import androidx.core.content.res.ResourcesCompat\n+import androidx.recyclerview.widget.RecyclerView\n+import com.google.android.material.chip.Chip\n+import org.catrobat.paintroid.R\n+\n+\n+class FontListAdapter internal constructor(context: Context, private val fonts: List<String>, private val onFontChanged: (String) -> Unit) : RecyclerView.Adapter<FontListAdapter.ViewHolder>() {\n+    private val mInflater: LayoutInflater = LayoutInflater.from(context)\n+    private var selectedIndex = 0\n+\n+    private val sansSerif = Typeface.create(Typeface.SANS_SERIF, Typeface.NORMAL)\n+    private val monospace = Typeface.create(Typeface.MONOSPACE, Typeface.NORMAL)\n+    private val serif = Typeface.create(Typeface.SERIF, Typeface.NORMAL)\n+    private val dubai = ResourcesCompat.getFont(context, R.font.dubai)\n+    private val stc = ResourcesCompat.getFont(context, R.font.stc_regular)\n+\n+    private val typeFaces = arrayOf(\n+            sansSerif,\n+            monospace,\n+            serif,\n+            dubai,\n+            stc)\n+\n+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\n+        val view: View = mInflater.inflate(R.layout.pocketpaint_item_font, parent, false)\n+        return ViewHolder(view)\n+    }\n+\n+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n+        val font = fonts[position]\n+        holder.fontChip.text = font\n+        holder.fontChip.typeface = typeFaces[position]\n+        holder.fontChip.isChecked = position == selectedIndex\n+    }\n+\n+    override fun getItemCount(): Int {\n+        return fonts.size\n+    }\n+\n+    fun setSelectedIndex(selectedIndex: Int) {\n+        this.selectedIndex = selectedIndex\n+        notifyDataSetChanged()\n+    }\n+\n+    fun getSelectedItem(): String = fonts[selectedIndex]\n+\n+    inner class ViewHolder internal constructor(itemView: View) : RecyclerView.ViewHolder(itemView), View.OnClickListener {\n+        var fontChip: Chip = itemView.findViewById(R.id.pocketpaint_font_type)\n+\n+        init {\n+            fontChip.setOnClickListener(this)\n+        }\n+\n+        override fun onClick(p0: View?) {\n+            setSelectedIndex(layoutPosition)\n+            onFontChanged(fonts[layoutPosition])\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b1807ae43226c33a8069af54ed70b79bbbcb3bd1",
    "filename": "Paintroid/src/main/res/color/background_togglebutton.xml",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/color/background_togglebutton.xml",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/color/background_togglebutton.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/res/color/background_togglebutton.xml?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_checked=\"true\"\n+        android:color=\"@color/pocketpaint_colorPrimary\" />\n+    <item android:state_checked=\"false\"\n+        android:color=\"@android:color/transparent\" />\n+</selector>"
  },
  {
    "sha": "adf34c5c52d0ab08cac7d9188a66195c5685a8d6",
    "filename": "Paintroid/src/main/res/color/textcolor_togglebutton.xml",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/color/textcolor_togglebutton.xml",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/color/textcolor_togglebutton.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/res/color/textcolor_togglebutton.xml?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <item android:state_checked=\"true\"\n+        android:color=\"@android:color/white\" />\n+    <item android:state_checked=\"false\"\n+        android:color=\"@color/pocketpaint_colorPrimary\" />\n+</selector>"
  },
  {
    "sha": "68abde4d5d9b90c3fed8242fee00db62da114c6b",
    "filename": "Paintroid/src/main/res/layout-land/activity_pocketpaint_main.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/layout-land/activity_pocketpaint_main.xml",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/layout-land/activity_pocketpaint_main.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/res/layout-land/activity_pocketpaint_main.xml?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -50,10 +50,12 @@\n             android:layout_alignParentEnd=\"true\"\n             android:background=\"@color/pocketpaint_main_drawing_surface_active\" />\n \n-        <include layout=\"@layout/pocketpaint_layout_tool_options\"\n+        <include\n+            layout=\"@layout/pocketpaint_layout_tool_options\"\n             android:layout_width=\"match_parent\"\n             android:layout_height=\"match_parent\"\n-            android:layout_above=\"@id/pocketpaint_main_bottom_bar\"/>\n+            android:layout_above=\"@id/pocketpaint_main_bottom_bar\"\n+            android:layout_below=\"@+id/pocketpaint_layout_top_bar\" />\n \n         <LinearLayout\n             android:id=\"@+id/pocketpaint_main_bottom_bar\""
  },
  {
    "sha": "e48194d113e805ec4d12e5bca539c6a7a0d87eba",
    "filename": "Paintroid/src/main/res/layout/activity_pocketpaint_main.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/layout/activity_pocketpaint_main.xml",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/layout/activity_pocketpaint_main.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/res/layout/activity_pocketpaint_main.xml?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -45,10 +45,12 @@\n                 android:layout_height=\"match_parent\"\n                 android:background=\"@color/pocketpaint_main_drawing_surface_active\" />\n \n-            <include layout=\"@layout/pocketpaint_layout_tool_options\"\n+            <include\n+                layout=\"@layout/pocketpaint_layout_tool_options\"\n                 android:layout_width=\"match_parent\"\n                 android:layout_height=\"match_parent\"\n-                android:layout_above=\"@id/pocketpaint_main_bottom_bar\"/>\n+                android:layout_above=\"@id/pocketpaint_main_bottom_bar\"\n+                android:layout_below=\"@+id/pocketpaint_layout_top_bar\"/>\n \n             <LinearLayout\n                 android:id=\"@+id/pocketpaint_main_bottom_bar\""
  },
  {
    "sha": "e55b2ff9060949d011cf49774416fff7999a9c01",
    "filename": "Paintroid/src/main/res/layout/dialog_pocketpaint_stroke.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/layout/dialog_pocketpaint_stroke.xml",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/layout/dialog_pocketpaint_stroke.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/res/layout/dialog_pocketpaint_stroke.xml?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -29,8 +29,7 @@\n         android:layout_height=\"wrap_content\"\n         android:layout_alignParentTop=\"true\"\n         android:layout_alignParentStart=\"true\"\n-        android:layout_marginTop=\"66dp\"\n-        android:layout_marginStart=\"16dp\"\n+        android:layout_margin=\"10dp\"\n         style=\"@style/TextFieldTheme\">\n \n         <com.google.android.material.textfield.TextInputEditText"
  },
  {
    "sha": "20f4d493968c4805244888cdcf4deab3c3f8c57b",
    "filename": "Paintroid/src/main/res/layout/dialog_pocketpaint_text_tool.xml",
    "status": "modified",
    "additions": 110,
    "deletions": 112,
    "changes": 222,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/layout/dialog_pocketpaint_text_tool.xml",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/layout/dialog_pocketpaint_text_tool.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/res/layout/dialog_pocketpaint_text_tool.xml?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -1,5 +1,4 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<!--\n+<?xml version=\"1.0\" encoding=\"utf-8\"?><!--\n  *  Paintroid: An image manipulation application for Android.\n  *  Copyright (C) 2010-2015 The Catrobat Team\n  *  (<http://developer.catrobat.org/credits>)\n@@ -17,124 +16,123 @@\n  *  You should have received a copy of the GNU Affero General Public License\n  *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n-<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"match_parent\"\n+\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:tools=\"http://schemas.android.com/tools\"\n-    android:layout_alignParentBottom=\"true\"\n-    android:fadeScrollbars=\"false\">\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\">\n+\n+    <com.google.android.material.textfield.TextInputLayout\n+        style=\"@style/TextFieldTheme\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_alignParentStart=\"true\"\n+        android:layout_alignParentTop=\"true\"\n+        android:layout_margin=\"10dp\">\n+\n+        <com.google.android.material.textfield.TextInputEditText\n+            android:id=\"@+id/pocketpaint_font_size_text\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"40dp\"\n+            android:background=\"@drawable/pocketpaint_round_rect_shape\"\n+            android:gravity=\"center\"\n+            android:imeOptions=\"actionDone\"\n+            android:importantForAutofill=\"no\"\n+            android:inputType=\"number\"\n+            android:minEms=\"3\"\n+            android:padding=\"4dp\"\n+            android:saveEnabled=\"false\"\n+            android:textColor=\"?attr/colorAccent\"\n+            android:textStyle=\"bold\"\n+            tools:ignore=\"LabelFor\"\n+            tools:text=\"100\" />\n+\n+    </com.google.android.material.textfield.TextInputLayout>\n+\n \n     <LinearLayout\n-        android:layout_width=\"match_parent\"\n+        android:layout_width=\"wrap_content\"\n         android:layout_height=\"wrap_content\"\n-        android:orientation=\"vertical\"\n-        android:clickable=\"true\"\n-        android:focusable=\"true\"\n-        android:background=\"@android:color/white\"\n-        android:focusableInTouchMode=\"true\">\n-\n-        <TextView\n-            style=\"@style/PocketPaintToolSubtitle\"\n-            android:text=\"@string/text_tool_dialog_format_options\"/>\n-\n-        <View style=\"@style/PocketPaintToolSectionDivider\"/>\n-\n-        <LinearLayout\n-            style=\"@style/PocketPaintToolSection\">\n-            <Spinner\n-                android:id=\"@+id/pocketpaint_text_tool_dialog_spinner_font\"\n-                android:layout_width=\"0dp\"\n-                android:layout_height=\"wrap_content\"\n-                android:layout_weight=\"1\"\n-                android:popupBackground=\"@android:color/white\"\n-                android:textColor=\"@android:color/black\"\n-                android:backgroundTint=\"@android:color/darker_gray\"/>\n-\n-            <Space style=\"@style/PocketPaintToolHorizontalSpace\"/>\n-\n-            <EditText\n-                android:id=\"@+id/pocketpaint_font_size_text\"\n-                android:layout_width=\"wrap_content\"\n-                android:layout_height=\"wrap_content\"\n-                android:minEms=\"3\"\n-                android:maxLength=\"3\"\n-                android:inputType=\"number\"\n-                android:imeOptions=\"actionDone\"\n-                android:saveEnabled=\"false\"\n-                android:textColor=\"@color/pocketpaint_colorAccent\"\n-                android:textSize=\"14sp\"\n-                android:textStyle=\"bold\"\n-                android:importantForAutofill=\"no\"\n-                tools:ignore=\"LabelFor\"\n-                android:backgroundTint=\"@color/backgroundtint_color_edittext_state_list\">\n-\n-            </EditText>\n-\n-        </LinearLayout>\n-\n-        <LinearLayout\n-            style=\"@style/PocketPaintToolSection\"\n-            android:layout_marginTop=\"10dp\">\n-\n-            <ToggleButton\n-                android:id=\"@+id/pocketpaint_text_tool_dialog_toggle_underlined\"\n-                android:layout_width=\"0dp\"\n-                android:layout_height=\"match_parent\"\n-                android:textStyle=\"normal\"\n-                android:textOn=\"@string/text_tool_dialog_underline_shortcut\"\n-                android:textOff=\"@string/text_tool_dialog_underline_shortcut\"\n-                android:layout_weight=\"1\"/>\n-\n-            <ToggleButton\n-                android:id=\"@+id/pocketpaint_text_tool_dialog_toggle_italic\"\n-                android:layout_width=\"0dp\"\n-                android:layout_height=\"match_parent\"\n-                android:textStyle=\"italic\"\n-                android:textOn=\"@string/text_tool_dialog_italic_shortcut\"\n-                android:textOff=\"@string/text_tool_dialog_italic_shortcut\"\n-                android:layout_weight=\"1\"/>\n-\n-            <ToggleButton\n-                android:id=\"@+id/pocketpaint_text_tool_dialog_toggle_bold\"\n-                android:layout_width=\"0dp\"\n-                android:layout_height=\"match_parent\"\n-                android:textStyle=\"bold\"\n-                android:textOn=\"@string/text_tool_dialog_bold_shortcut\"\n-                android:textOff=\"@string/text_tool_dialog_bold_shortcut\"\n-                android:layout_weight=\"1\" />\n+        android:layout_alignParentTop=\"true\"\n+        android:layout_alignParentRight=\"true\"\n+        android:layout_margin=\"10dp\"\n+        android:layout_marginTop=\"@dimen/toolbar_height\"\n+        tools:ignore=\"RelativeOverlap,RtlHardcoded\">\n+\n+        <com.google.android.material.button.MaterialButtonToggleGroup\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\">\n \n-        </LinearLayout>\n+            <com.google.android.material.button.MaterialButton\n+                android:id=\"@+id/pocketpaint_text_tool_dialog_toggle_underlined\"\n+                style=\"@style/CircularToggleButtonStyle\"\n+                android:layout_width=\"40dp\"\n+                android:layout_height=\"40dp\"\n+                android:text=\"@string/text_tool_dialog_underline_shortcut\"\n+                android:textSize=\"20sp\" />\n+        </com.google.android.material.button.MaterialButtonToggleGroup>\n \n-        <TextView\n-            style=\"@style/PocketPaintToolSubtitle\"\n-            android:text=\"@string/text_tool_dialog_input_title\"/>\n+        <Space style=\"@style/PocketPaintToolHorizontalSpace\" />\n \n-        <View style=\"@style/PocketPaintToolSectionDivider\"/>\n+        <com.google.android.material.button.MaterialButtonToggleGroup\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\">\n \n-        <RelativeLayout\n-            style=\"@style/PocketPaintToolSection\"\n-            android:layout_width=\"match_parent\"\n+            <com.google.android.material.button.MaterialButton\n+                android:id=\"@+id/pocketpaint_text_tool_dialog_toggle_italic\"\n+                style=\"@style/CircularToggleButtonStyle\"\n+                android:layout_width=\"40dp\"\n+                android:layout_height=\"40dp\"\n+                android:text=\"@string/text_tool_dialog_italic_shortcut\"\n+                android:textSize=\"20sp\"\n+                android:textStyle=\"italic\" />\n+        </com.google.android.material.button.MaterialButtonToggleGroup>\n+\n+        <Space style=\"@style/PocketPaintToolHorizontalSpace\" />\n+\n+        <com.google.android.material.button.MaterialButtonToggleGroup\n+            android:layout_width=\"wrap_content\"\n             android:layout_height=\"wrap_content\">\n \n-            <EditText\n-                android:id=\"@+id/pocketpaint_text_tool_dialog_input_text\"\n-                android:layout_width=\"match_parent\"\n-                android:layout_height=\"wrap_content\"\n-                android:layout_toStartOf=\"@+id/pocketpaint_text_tool_dialog_done_button\"\n-                android:hint=\"@string/text_tool_dialog_input_hint\"\n-                android:imeOptions=\"flagNoExtractUi\"\n-                android:inputType=\"textMultiLine\"\n-                android:textColor=\"@android:color/black\"\n-                android:importantForAutofill=\"no\"\n-                android:backgroundTint=\"@color/backgroundtint_color_edittext_state_list\">\n-            </EditText>\n-            <Button\n-                style=\"@style/ButtonTheme\"\n-                android:id=\"@+id/pocketpaint_text_tool_dialog_done_button\"\n-                android:layout_alignParentEnd=\"true\"\n-                android:layout_height=\"wrap_content\"\n-                android:layout_width=\"wrap_content\"\n-                android:text=\"@string/done\"/>\n-        </RelativeLayout>\n+            <com.google.android.material.button.MaterialButton\n+                android:id=\"@+id/pocketpaint_text_tool_dialog_toggle_bold\"\n+                style=\"@style/CircularToggleButtonStyle\"\n+                android:layout_width=\"40dp\"\n+                android:layout_height=\"40dp\"\n+                android:text=\"@string/text_tool_dialog_bold_shortcut\"\n+                android:textSize=\"20sp\"\n+                android:textStyle=\"bold\" />\n+        </com.google.android.material.button.MaterialButtonToggleGroup>\n     </LinearLayout>\n-</ScrollView>\n+\n+    <androidx.recyclerview.widget.RecyclerView\n+        android:id=\"@+id/pocketpaint_text_tool_dialog_list_font\"\n+        android:layout_width=\"match_parent\"\n+        android:paddingStart=\"10dp\"\n+        android:paddingEnd=\"10dp\"\n+        android:clipToPadding=\"false\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_above=\"@+id/pocketpaint_text_tool_dialog_input_text_layout\"\n+        android:orientation=\"horizontal\" />\n+\n+    <RelativeLayout\n+        android:id=\"@+id/pocketpaint_text_tool_dialog_input_text_layout\"\n+        android:layout_alignParentBottom=\"true\"\n+        android:background=\"@android:color/background_light\"\n+        android:layout_width=\"match_parent\"\n+        android:paddingStart=\"10dp\"\n+        android:paddingEnd=\"10dp\"\n+        android:layout_height=\"wrap_content\">\n+\n+        <EditText\n+            android:id=\"@+id/pocketpaint_text_tool_dialog_input_text\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:backgroundTint=\"@color/backgroundtint_color_edittext_state_list\"\n+            android:hint=\"@string/text_tool_dialog_input_hint\"\n+            android:imeOptions=\"flagNoExtractUi\"\n+            android:importantForAutofill=\"no\"\n+            android:inputType=\"textMultiLine\"\n+            android:textColor=\"@android:color/black\" />\n+    </RelativeLayout>\n+</RelativeLayout>"
  },
  {
    "sha": "b9babf5f7e3b5e315e618af02f22c1f4e7c38974",
    "filename": "Paintroid/src/main/res/layout/pocketpaint_item_font.xml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/layout/pocketpaint_item_font.xml",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/layout/pocketpaint_item_font.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/res/layout/pocketpaint_item_font.xml?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"wrap_content\"\n+    android:layout_marginEnd=\"8dp\"\n+    android:layout_height=\"wrap_content\">\n+\n+    <com.google.android.material.chip.Chip\n+        android:id=\"@+id/pocketpaint_font_type\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        style=\"@style/ChipTheme\"\n+        android:checkable=\"true\"\n+        android:checked=\"true\"/>\n+\n+</LinearLayout>\n\\ No newline at end of file"
  },
  {
    "sha": "81eab286aa0aea78274d727f94b81d272c938c10",
    "filename": "Paintroid/src/main/res/values/style.xml",
    "status": "modified",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Catrobat/Paintroid/blob/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/values/style.xml",
    "raw_url": "https://github.com/Catrobat/Paintroid/raw/62e81503905c9a2bc2fcd43dbb2b43bb609b6053/Paintroid/src/main/res/values/style.xml",
    "contents_url": "https://api.github.com/repos/Catrobat/Paintroid/contents/Paintroid/src/main/res/values/style.xml?ref=62e81503905c9a2bc2fcd43dbb2b43bb609b6053",
    "patch": "@@ -71,6 +71,7 @@\n         <item name=\"chipStartPadding\">16dp</item>\n         <item name=\"chipEndPadding\">16dp</item>\n         <item name=\"chipBackgroundColor\">@color/background_color_chip_state_list</item>\n+        <item name=\"android:textColor\">@color/textcolor_togglebutton</item>\n     </style>\n \n     <style name=\"appBarLayout\" parent=\"Widget.MaterialComponents.AppBarLayout.Primary\" />\n@@ -267,4 +268,24 @@\n         <item name=\"android:gravity\">right</item>\n         <item name=\"android:textColor\">@android:color/black</item>\n     </style>\n+\n+    <style name=\"CircularToggleButtonStyle\" parent=\"@style/Widget.MaterialComponents.Button.OutlinedButton\">\n+        <item name=\"android:insetLeft\">0dp</item>\n+        <item name=\"android:insetTop\">0dp</item>\n+        <item name=\"android:insetRight\">0dp</item>\n+        <item name=\"android:insetBottom\">0dp</item>\n+        <item name=\"android:textColor\">@color/textcolor_togglebutton</item>\n+        <item name=\"android:backgroundTint\">@color/background_togglebutton</item>\n+        <item name=\"android:padding\">0dp</item>\n+        <item name=\"iconPadding\">0dp</item>\n+        <item name=\"shapeAppearanceOverlay\">@style/ShapeAppearanceOverlay.MyApp.Button.Circle</item>\n+        <item name=\"strokeColor\">@color/pocketpaint_colorPrimary</item>\n+        <item name=\"strokeWidth\">1dp</item>\n+    </style>\n+\n+\n+    <style name=\"ShapeAppearanceOverlay.MyApp.Button.Circle\" parent=\"\">\n+        <item name=\"cornerFamily\">rounded</item>\n+        <item name=\"cornerSize\">50%</item>\n+    </style>\n </resources>"
  }
]
