[
  {
    "sha": "5284fdb8d4a9fa20a1b767ec802666076f561ce6",
    "filename": "src/main/java/Lesson13/Store/Product.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/karinaleonova/TMS_110121/blob/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Store/Product.java",
    "raw_url": "https://github.com/karinaleonova/TMS_110121/raw/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Store/Product.java",
    "contents_url": "https://api.github.com/repos/karinaleonova/TMS_110121/contents/src/main/java/Lesson13/Store/Product.java?ref=6834c05fa7fea3f867e653086f160a5a099b447f",
    "patch": "@@ -0,0 +1,47 @@\n+package Lesson13.Store;\n+//Создать класс Товар, поля:\n+//        •id(целое число)\n+//        •name(строка)\n+//        •price(целое число)\n+\n+public class Product implements Comparable<Product>{\n+\n+    private int id;\n+    private String name;\n+    private int price;\n+\n+    @Override\n+    public int compareTo(Product o) {\n+        return Integer.compare(this.getPrice(),o.getPrice());\n+    }\n+\n+    public Product(int id, String name, int price){\n+        this.id = id;\n+        this.name = name;\n+        this.price = price;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public int getPrice() {\n+        return price;\n+    }\n+\n+    public void setPrice(int price) {\n+        this.price = price;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "d70ef8e92a2300a50013fb0a91b44da96bebd9ed",
    "filename": "src/main/java/Lesson13/Store/Run.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/karinaleonova/TMS_110121/blob/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Store/Run.java",
    "raw_url": "https://github.com/karinaleonova/TMS_110121/raw/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Store/Run.java",
    "contents_url": "https://api.github.com/repos/karinaleonova/TMS_110121/contents/src/main/java/Lesson13/Store/Run.java?ref=6834c05fa7fea3f867e653086f160a5a099b447f",
    "patch": "@@ -0,0 +1,52 @@\n+package Lesson13.Store;\n+//          В main:\n+//        •создаем объект магазина\n+//        •создаем пару тройку товаров и добавляем эти товары в магазин\n+//        •получаем список товаров из магазина, сортируем по цене(по\n+//        возрастанию) и выводим в консоль.\n+//        •удаляем один товар\n+//        •получаем список товаров из магазина, сортируем по порядку\n+//        добавления(последние добавленные в начале) и выводим в консоль.\n+//        •редактируем один товар\n+//        •получаем список товаров и выводим в консоль\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+\n+public class Run {\n+    public static void main(String[] args) {\n+\n+        Product kip = new Product(1, \"Kip\", 12);\n+        Product steak = new Product(2, \"Steak\", 32);\n+        Product apple = new Product(3, \"Apple\", 4);\n+        Product apple1 = new Product(3, \"Apple\", 4);\n+\n+        Store.addNewProduct(kip);\n+        Store.addNewProduct(steak);\n+        Store.addNewProduct(apple);\n+        Store.addNewProduct(apple1);\n+\n+         ArrayList<Product> products =  Store.returnArrayList();\n+\n+        Collections.sort(products);\n+        System.out.println(\"Sort by price : \");\n+        for(Product p : products){\n+            System.out.println(p.getId()+ \" \" +p.getName() + \" \" + p.getPrice());\n+        }\n+\n+        Store.removeProductId(steak);\n+\n+        System.out.println(\"Sort by adding order : \");\n+        for (int i = products.size() - 1; i >= 0; i--){\n+            System.out.println(products.get(i).getName());\n+        }\n+\n+        Store.correctProductList(kip,67,\"Tomato\",6);\n+\n+        System.out.println(\"Product list : \");\n+        for(Product p : products){\n+            System.out.println(p.getId()+ \" \" +p.getName() + \" \" + p.getPrice());\n+        }\n+    }\n+}"
  },
  {
    "sha": "151b76215e90f6521e1aed03260b71c0528dafdd",
    "filename": "src/main/java/Lesson13/Store/Store.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/karinaleonova/TMS_110121/blob/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Store/Store.java",
    "raw_url": "https://github.com/karinaleonova/TMS_110121/raw/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Store/Store.java",
    "contents_url": "https://api.github.com/repos/karinaleonova/TMS_110121/contents/src/main/java/Lesson13/Store/Store.java?ref=6834c05fa7fea3f867e653086f160a5a099b447f",
    "patch": "@@ -0,0 +1,51 @@\n+package Lesson13.Store;\n+\n+import java.lang.reflect.Array;\n+import java.util.*;\n+//Создать класс Магазин, поля:\n+//        •Список товаров (изначально пустой)\n+//        методы:\n+//        •добавить товар(принимает объект товара и добавляет его в список\n+//        товаров). При попытке добавить товар с id уже существующем в списке,\n+//        вставка производится не должна\n+//        •получить все товары(метод ВОЗВРАЩАЕТ список всех товаров в\n+//        магазине)\n+//        •удалить товар (метод принимает id товара и удаляет из списка товар с\n+//        соответствующим id)\n+//        •редактировать товар(принимает объект товара и редактирует им список\n+//        товаров)\n+\n+public class Store{\n+    private static ArrayList<Product> list = new ArrayList<>();\n+\n+    public static void addNewProduct(Product product){\n+        boolean addProduct = true;\n+        for (Product pp : list) {\n+            if (product.getId() == pp.getId()) {\n+                addProduct = false;\n+                break;\n+            }\n+        }\n+        if (addProduct) {\n+            list.add(product);\n+        }\n+    }\n+    public static ArrayList<Product> returnArrayList(){\n+        return list;\n+    }\n+\n+\n+    public static void removeProductId(Product product){\n+\n+        list.remove(product.getId());\n+    }\n+\n+\n+    public static void correctProductList(Product product,int newId, String newName,int newPrice){\n+\n+        product.setName(newName);\n+        product.setId(newId);\n+        product.setPrice(newPrice);\n+\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "1d3fc48ef2984c5acf4b4f67b1160f8e7ccd0004",
    "filename": "src/main/java/Lesson13/Task29/Task29.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/karinaleonova/TMS_110121/blob/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Task29/Task29.java",
    "raw_url": "https://github.com/karinaleonova/TMS_110121/raw/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Task29/Task29.java",
    "contents_url": "https://api.github.com/repos/karinaleonova/TMS_110121/contents/src/main/java/Lesson13/Task29/Task29.java?ref=6834c05fa7fea3f867e653086f160a5a099b447f",
    "patch": "@@ -0,0 +1,29 @@\n+package Lesson13.Task29;\n+//Создать список оценок учеников с помощью ArrayList, заполнить случайными\n+//        оценками. Удалить неудовлетворительные оценки из списка.\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+\n+public class Task29 {\n+\n+    public static void main(String[] args) {\n+        ArrayList<Integer> grade = new ArrayList<>();\n+        for(int i = 0; i < 10; i++) {\n+            int r = 1 + (int) (Math.random() * 10);\n+            grade.add(r);\n+        }\n+        System.out.println(grade);\n+\n+        Iterator<Integer> iterator = grade.iterator();\n+        Integer max = 3;\n+        while(iterator.hasNext()){\n+\n+            if(  iterator.next() <= max ) {\n+                 iterator.remove();\n+            }\n+        }\n+\n+        System.out.println(grade);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "d0f3443540067ff7b6348569d5c4f3e4763c2b86",
    "filename": "src/main/java/Lesson13/Task30/Task30.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/karinaleonova/TMS_110121/blob/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Task30/Task30.java",
    "raw_url": "https://github.com/karinaleonova/TMS_110121/raw/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Task30/Task30.java",
    "contents_url": "https://api.github.com/repos/karinaleonova/TMS_110121/contents/src/main/java/Lesson13/Task30/Task30.java?ref=6834c05fa7fea3f867e653086f160a5a099b447f",
    "patch": "@@ -0,0 +1,28 @@\n+package Lesson13.Task30;\n+\n+//Создать коллекцию, наполнить ее случайными числами. Удалить повторяющиеся\n+//числа.\n+\n+import java.util.*;\n+\n+public class Task30 {\n+\n+    public static void main(String[] args) {\n+        ArrayList<Integer> num = new ArrayList<>();\n+\n+        for(int i = 0; i < 50; i++) {\n+            int r= 1 + (int) (Math.random() * 20);\n+            num.add(r);\n+\n+        }\n+        Set<Integer> set = new HashSet<>(num);\n+        num.clear();\n+        num.addAll(set);\n+\n+        Iterator<Integer> iterator = set.iterator();\n+        while(iterator.hasNext()){\n+            Integer next = iterator.next();\n+            System.out.println(next);\n+        }\n+    }\n+}"
  },
  {
    "sha": "1d923347828cc782b0f99834a7bf74d1cbd11dc7",
    "filename": "src/main/java/Lesson13/Task31/Task31.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/karinaleonova/TMS_110121/blob/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Task31/Task31.java",
    "raw_url": "https://github.com/karinaleonova/TMS_110121/raw/6834c05fa7fea3f867e653086f160a5a099b447f/src/main/java/Lesson13/Task31/Task31.java",
    "contents_url": "https://api.github.com/repos/karinaleonova/TMS_110121/contents/src/main/java/Lesson13/Task31/Task31.java?ref=6834c05fa7fea3f867e653086f160a5a099b447f",
    "patch": "@@ -0,0 +1,29 @@\n+package Lesson13.Task31;\n+\n+//Создать список оценок учеников с помощью ArrayList, заполнить случайными\n+//оценками. Найти самую высокую оценку с использованием итератора.\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+\n+public class Task31 {\n+    public static void main(String[] args) {\n+        ArrayList<Integer> grade = new ArrayList<>();\n+        for(int i = 0; i < 10; i++) {\n+            int r= 1 + (int) (Math.random() * 10);\n+            grade.add(r);\n+        }\n+        System.out.println(grade);\n+\n+        Iterator<Integer> iterator = grade.iterator();\n+        Integer max = 1;\n+        while(iterator.hasNext()){\n+\n+            if(  iterator.next() >= max && iterator.hasNext()) {\n+                max = iterator.next();\n+            }\n+        }\n+        System.out.println(\"max - \" + max);\n+\n+    }\n+}\n\\ No newline at end of file"
  }
]
