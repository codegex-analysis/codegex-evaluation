[
  {
    "sha": "804378f78121f52b092b6c1dbbf21ebf5ec0fc92",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/carin/C4BBSupportingInfoType.java",
    "status": "modified",
    "additions": 9,
    "deletions": 1,
    "changes": 10,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/carin/C4BBSupportingInfoType.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/carin/C4BBSupportingInfoType.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/commons/carin/C4BBSupportingInfoType.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -13,7 +13,9 @@\n   REFILL_NUM,\n   RX_ORIGIN_CODE,\n   BRAND_GENERIC_CODE,\n-  ADMISSION_PERIOD;\n+  ADMISSION_PERIOD,\n+  RECEIVED_DATE,\n+  ;\n \n   public String getSystem() {\n     return \"http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType\";\n@@ -37,6 +39,8 @@ public String toCode() {\n         return \"brandgenericcode\";\n       case ADMISSION_PERIOD:\n         return \"admissionperiod\";\n+      case RECEIVED_DATE:\n+        return \"clmrecvddate\";\n       default:\n         return \"?\";\n     }\n@@ -60,6 +64,8 @@ public String getDisplay() {\n         return \"Brand Generic Code\";\n       case ADMISSION_PERIOD:\n         return \"Admission Period\";\n+      case RECEIVED_DATE:\n+        return \"Claim Received Date\";\n       default:\n         return \"?\";\n     }\n@@ -83,6 +89,8 @@ public String getDefinition() {\n         return \"NCPDP code indicating whether the plan adjudicated the claim as a brand or generic drug.\";\n       case ADMISSION_PERIOD:\n         return \"Dates corresponding with the admission and discharge of the beneficiary to a facility\";\n+      case RECEIVED_DATE:\n+        return \"Date the claim was received by the payer.\";\n       default:\n         return \"?\";\n     }"
  },
  {
    "sha": "0f0fe6e4ab72dce465d4ad03ca6a945b438fca0c",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/CarrierClaimTransformerV2.java",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/CarrierClaimTransformerV2.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/CarrierClaimTransformerV2.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/CarrierClaimTransformerV2.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -86,11 +86,8 @@ private static ExplanationOfBenefit transformClaim(CarrierClaim claimGroup) {\n         claimGroup.getFinalAction());\n \n     // NCH_WKLY_PROC_DT => ExplanationOfBenefit.supportinginfo.timingDate\n-    TransformerUtilsV2.addInformationWithDate(\n-        eob,\n-        CcwCodebookVariable.NCH_WKLY_PROC_DT,\n-        CcwCodebookVariable.NCH_WKLY_PROC_DT,\n-        Optional.of(claimGroup.getWeeklyProcessDate()));\n+    TransformerUtilsV2.createInformationRecievedDateSlice(\n+        eob, CcwCodebookVariable.NCH_WKLY_PROC_DT, Optional.of(claimGroup.getWeeklyProcessDate()));\n \n     // map eob type codes into FHIR\n     // NCH_CLM_TYPE_CD            => ExplanationOfBenefit.type.coding"
  },
  {
    "sha": "cef2524818a2d2fb8d3f24085da1649203e3eb88",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/ClaimTypeV2.java",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/ClaimTypeV2.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/ClaimTypeV2.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/ClaimTypeV2.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -4,6 +4,8 @@\n import gov.cms.bfd.model.rif.Beneficiary;\n import gov.cms.bfd.model.rif.CarrierClaim;\n import gov.cms.bfd.model.rif.CarrierClaim_;\n+import gov.cms.bfd.model.rif.HHAClaim;\n+import gov.cms.bfd.model.rif.HHAClaim_;\n import gov.cms.bfd.model.rif.HospiceClaim;\n import gov.cms.bfd.model.rif.HospiceClaim_;\n import gov.cms.bfd.model.rif.InpatientClaim;\n@@ -78,7 +80,15 @@\n       SNFClaim_.beneficiaryId,\n       (entity) -> ((SNFClaim) entity).getDateThrough(),\n       SNFClaimTransformerV2::transform,\n-      SNFClaim_.lines);\n+      SNFClaim_.lines),\n+\n+  HHA(\n+      HHAClaim.class,\n+      HHAClaim_.claimId,\n+      HHAClaim_.beneficiaryId,\n+      (entity) -> ((HHAClaim) entity).getDateThrough(),\n+      HHAClaimTransformerV2::transform,\n+      HHAClaim_.lines);\n \n   private final Class<?> entityClass;\n   private final SingularAttribute<?, ?> entityIdAttribute;"
  },
  {
    "sha": "94591673c9a6cf82de3585647304219da503ceaf",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/HHAClaimTransformerV2.java",
    "status": "added",
    "additions": 266,
    "deletions": 0,
    "changes": 266,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/HHAClaimTransformerV2.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/HHAClaimTransformerV2.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/HHAClaimTransformerV2.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -0,0 +1,266 @@\n+package gov.cms.bfd.server.war.r4.providers;\n+\n+import com.codahale.metrics.MetricRegistry;\n+import com.codahale.metrics.Timer;\n+import com.newrelic.api.agent.Trace;\n+import gov.cms.bfd.model.codebook.data.CcwCodebookVariable;\n+import gov.cms.bfd.model.rif.HHAClaim;\n+import gov.cms.bfd.model.rif.HHAClaimLine;\n+import gov.cms.bfd.server.war.commons.Diagnosis;\n+import gov.cms.bfd.server.war.commons.MedicareSegment;\n+import gov.cms.bfd.server.war.commons.ProfileConstants;\n+import gov.cms.bfd.server.war.commons.carin.C4BBClaimProfessionalAndNonClinicianCareTeamRole;\n+import gov.cms.bfd.server.war.commons.carin.C4BBOrganizationIdentifierType;\n+import gov.cms.bfd.server.war.commons.carin.C4BBPractitionerIdentifierType;\n+import gov.cms.bfd.sharedutils.exceptions.BadCodeMonkeyException;\n+import java.util.Arrays;\n+import java.util.Optional;\n+import org.hl7.fhir.r4.model.ExplanationOfBenefit;\n+import org.hl7.fhir.r4.model.ExplanationOfBenefit.ItemComponent;\n+import org.hl7.fhir.r4.model.Quantity;\n+\n+public class HHAClaimTransformerV2 {\n+  /**\n+   * @param metricRegistry the {@link MetricRegistry} to use\n+   * @param claim the CCW {@link HHAClaim} to transform\n+   * @return a FHIR {@link ExplanationOfBenefit} resource that represents the specified {@link\n+   *     HHAClaim}\n+   */\n+  @Trace\n+  static ExplanationOfBenefit transform(MetricRegistry metricRegistry, Object claim) {\n+    Timer.Context timer =\n+        metricRegistry\n+            .timer(MetricRegistry.name(HHAClaimTransformerV2.class.getSimpleName(), \"transform\"))\n+            .time();\n+\n+    if (!(claim instanceof HHAClaim)) {\n+      throw new BadCodeMonkeyException();\n+    }\n+    ExplanationOfBenefit eob = transformClaim((HHAClaim) claim);\n+\n+    timer.stop();\n+    return eob;\n+  }\n+\n+  /**\n+   * @param claimGroup the CCW {@link HHAClaim} to transform\n+   * @return a FHIR {@link ExplanationOfBenefit} resource that represents the specified {@link\n+   *     HHAClaim}\n+   */\n+  private static ExplanationOfBenefit transformClaim(HHAClaim claimGroup) {\n+    ExplanationOfBenefit eob = new ExplanationOfBenefit();\n+\n+    // Required values not directly mapped\n+    eob.getMeta().addProfile(ProfileConstants.C4BB_EOB_NONCLINICIAN_PROFILE_URL);\n+\n+    // Common group level fields between all claim types\n+    // Claim Type + Claim ID    => ExplanationOfBenefit.id\n+    // CLM_ID                   => ExplanationOfBenefit.identifier\n+    // CLM_GRP_ID               => ExplanationOfBenefit.identifier\n+    // BENE_ID + Coverage Type  => ExplanationOfBenefit.insurance.coverage\n+    // BENE_ID                  => ExplanationOfBenefit.patient (reference)\n+    // FINAL_ACTION             => ExplanationOfBenefit.status\n+    // CLM_FROM_DT              => ExplanationOfBenefit.billablePeriod.start\n+    // CLM_THRU_DT              => ExplanationOfBenefit.billablePeriod.end\n+    // CLM_PMT_AMT              => ExplanationOfBenefit.payment.amount\n+    TransformerUtilsV2.mapEobCommonClaimHeaderData(\n+        eob,\n+        claimGroup.getClaimId(),\n+        claimGroup.getBeneficiaryId(),\n+        ClaimTypeV2.HHA,\n+        claimGroup.getClaimGroupId().toPlainString(),\n+        MedicareSegment.PART_B,\n+        Optional.of(claimGroup.getDateFrom()),\n+        Optional.of(claimGroup.getDateThrough()),\n+        Optional.of(claimGroup.getPaymentAmount()),\n+        claimGroup.getFinalAction());\n+\n+    // NCH_WKLY_PROC_DT => ExplanationOfBenefit.supportinginfo.timingDate\n+    TransformerUtilsV2.createInformationRecievedDateSlice(\n+        eob, CcwCodebookVariable.NCH_WKLY_PROC_DT, Optional.of(claimGroup.getWeeklyProcessDate()));\n+\n+    // map eob type codes into FHIR\n+    // NCH_CLM_TYPE_CD            => ExplanationOfBenefit.type.coding\n+    // EOB Type                   => ExplanationOfBenefit.type.coding\n+    // Claim Type                 => ExplanationOfBenefit.type.coding\n+    // NCH_NEAR_LINE_REC_IDENT_CD => ExplanationOfBenefit.extension\n+    TransformerUtilsV2.mapEobType(\n+        eob,\n+        ClaimTypeV2.HHA,\n+        Optional.of(claimGroup.getNearLineRecordIdCode()),\n+        Optional.of(claimGroup.getClaimTypeCode()));\n+\n+    // PRVDR_NUM => ExplanationOfBenefit.provider.identifier\n+    TransformerUtilsV2.addProviderSlice(\n+        eob,\n+        C4BBOrganizationIdentifierType.PRN,\n+        claimGroup.getProviderNumber(),\n+        claimGroup.getLastUpdated());\n+\n+    // Common group level fields between Inpatient, Outpatient Hospice, HHA and SNF\n+    // ORG_NPI_NUM              => ExplanationOfBenefit.provider\n+    // CLM_FAC_TYPE_CD          => ExplanationOfBenefit.facility.extension\n+    // CLM_FREQ_CD              => ExplanationOfBenefit.supportingInfo\n+    // CLM_MDCR_NON_PMT_RSN_CD  => ExplanationOfBenefit.extension\n+    // PTNT_DSCHRG_STUS_CD      => ExplanationOfBenefit.supportingInfo\n+    // CLM_SRVC_CLSFCTN_TYPE_CD => ExplanationOfBenefit.extension\n+    // NCH_PRMRY_PYR_CD         => ExplanationOfBenefit.supportingInfo\n+    // CLM_TOT_CHRG_AMT         => ExplanationOfBenefit.total.amount\n+    // NCH_PRMRY_PYR_CLM_PD_AMT => ExplanationOfBenefit.benefitBalance.financial\n+    TransformerUtilsV2.mapEobCommonGroupInpOutHHAHospiceSNF(\n+        eob,\n+        claimGroup.getOrganizationNpi(),\n+        claimGroup.getClaimFacilityTypeCode(),\n+        claimGroup.getClaimFrequencyCode(),\n+        claimGroup.getClaimNonPaymentReasonCode(),\n+        claimGroup.getPatientDischargeStatusCode(),\n+        claimGroup.getClaimServiceClassificationTypeCode(),\n+        claimGroup.getClaimPrimaryPayerCode(),\n+        claimGroup.getTotalChargeAmount(),\n+        claimGroup.getPrimaryPayerPaidAmount(),\n+        claimGroup.getFiscalIntermediaryNumber(),\n+        claimGroup.getLastUpdated());\n+\n+    // CLM_PPS_IND_CODE => ExplanationOfBenefit.supportingInfo\n+    TransformerUtilsV2.addInformationWithCode(\n+        eob,\n+        CcwCodebookVariable.CLM_PPS_IND_CD,\n+        CcwCodebookVariable.CLM_PPS_IND_CD,\n+        claimGroup.getProspectivePaymentCode());\n+\n+    // Handle Diagnosis\n+    // PRNCPAL_DGNS_CD          => diagnosis.diagnosisCodeableConcept\n+    // PRNCPAL_DGNS_VRSN_CD     => diagnosis.diagnosisCodeableConcept\n+    // ICD_DGNS_CD(1-25)        => diagnosis.diagnosisCodeableConcept\n+    // ICD_DGNS_VRSN_CD(1-25)   => diagnosis.diagnosisCodeableConcept\n+    // FST_DGNS_E_CD            => diagnosis.diagnosisCodeableConcept\n+    // FST_DGNS_E_VRSN_CD       => diagnosis.diagnosisCodeableConcept\n+    // ICD_DGNS_E_CD(1-12)      => diagnosis.diagnosisCodeableConcept\n+    // ICD_DGNS_E_VRSN_CD(1-12) => diagnosis.diagnosisCodeableConcept\n+    for (Diagnosis diagnosis : TransformerUtilsV2.extractDiagnoses(claimGroup)) {\n+      TransformerUtilsV2.addDiagnosisCode(eob, diagnosis);\n+    }\n+\n+    // Map care team\n+    // AT_PHYSN_NPI     => ExplanationOfBenefit.careTeam.provider\n+    // AT_PHYSN_UPIN    => ExplanationOfBenefit.careTeam.provider\n+    TransformerUtilsV2.mapCareTeam(\n+        eob,\n+        claimGroup.getAttendingPhysicianNpi(),\n+        Optional.empty(),\n+        Optional.empty(),\n+        claimGroup.getAttendingPhysicianUpin(),\n+        Optional.empty(),\n+        Optional.empty());\n+\n+    // CLM_HHA_LUPA_IND_CD => ExplanationOfBenefit.supportinginfo.code\n+    claimGroup\n+        .getClaimLUPACode()\n+        .ifPresent(\n+            c ->\n+                TransformerUtilsV2.addInformationWithCode(\n+                    eob,\n+                    CcwCodebookVariable.CLM_HHA_LUPA_IND_CD,\n+                    CcwCodebookVariable.CLM_HHA_LUPA_IND_CD,\n+                    c));\n+\n+    // CLM_HHA_RFRL_CD => ExplanationOfBenefit.supportinginfo.code\n+    claimGroup\n+        .getClaimReferralCode()\n+        .ifPresent(\n+            c ->\n+                TransformerUtilsV2.addInformationWithCode(\n+                    eob,\n+                    CcwCodebookVariable.CLM_HHA_RFRL_CD,\n+                    CcwCodebookVariable.CLM_HHA_RFRL_CD,\n+                    c));\n+\n+    // CLM_HHA_TOT_VISIT_CNT => ExplanationOfBenefit.supportinginfo.value[x]\n+    TransformerUtilsV2.addInformation(eob, CcwCodebookVariable.CLM_HHA_TOT_VISIT_CNT)\n+        .setValue(new Quantity(claimGroup.getTotalVisitCount().intValue()));\n+\n+    // CLM_ADMSN_DT => ExplanationOfBenefit.supportingInfo:admissionperiod\n+    TransformerUtilsV2.addInformation(\n+        eob,\n+        TransformerUtilsV2.createInformationAdmPeriodSlice(\n+            eob, claimGroup.getCareStartDate(), Optional.empty()));\n+\n+    for (HHAClaimLine line : claimGroup.getLines()) {\n+      ItemComponent item = eob.addItem();\n+\n+      // Override the default sequence\n+      // CLM_LINE_NUM => item.sequence\n+      item.setSequence(line.getLineNumber().intValue());\n+\n+      // PRVDR_STATE_CD => item.location\n+      TransformerUtilsV2.addLocationState(item, claimGroup.getProviderStateCode());\n+\n+      // HCPCS_CD           => ExplanationOfBenefit.item.productOrService\n+      // HCPCS_1ST_MDFR_CD  => ExplanationOfBenefit.item.modifier\n+      // HCPCS_2ND_MDFR_CD  => ExplanationOfBenefit.item.modifier\n+      TransformerUtilsV2.mapHcpcs(\n+          eob,\n+          item,\n+          line.getHcpcsCode(),\n+          Optional.empty(),\n+          Arrays.asList(line.getHcpcsInitialModifierCode(), line.getHcpcsSecondModifierCode()));\n+\n+      // REV_CNTR_1ST_ANSI_CD => ExplanationOfBenefit.item.adjudication\n+      TransformerUtilsV2.addAdjudication(\n+          item,\n+          TransformerUtilsV2.createAdjudicationDenialReasonSlice(\n+              eob, CcwCodebookVariable.REV_CNTR_1ST_ANSI_CD, line.getRevCntr1stAnsiCd()));\n+\n+      // REV_CNTR                   => ExplanationOfBenefit.item.revenue\n+      // REV_CNTR_RATE_AMT          => ExplanationOfBenefit.item.adjudication\n+      // REV_CNTR_TOT_CHRG_AMT      => ExplanationOfBenefit.item.adjudication\n+      // REV_CNTR_NCVRD_CHRG_AMT    => ExplanationOfBenefit.item.adjudication\n+      // REV_CNTR_UNIT_CNT          => ExplanationOfBenefit.item.quantity\n+      // REV_CNTR_NDC_QTY           => TODO: ??\n+      // REV_CNTR_NDC_QTY_QLFR_CD   => ExplanationOfBenefit.modifier\n+      TransformerUtilsV2.mapEobCommonItemRevenue(\n+          item,\n+          eob,\n+          line.getRevenueCenterCode(),\n+          line.getRateAmount(),\n+          line.getTotalChargeAmount(),\n+          Optional.of(line.getNonCoveredChargeAmount()),\n+          line.getUnitCount(),\n+          line.getNationalDrugCodeQuantity(),\n+          line.getNationalDrugCodeQualifierCode());\n+\n+      // Common item level fields between Outpatient, HHA and Hospice\n+      // REV_CNTR_DT              => ExplanationOfBenefit.item.servicedDate\n+      // REV_CNTR_PMT_AMT_AMT     => ExplanationOfBenefit.item.adjudication\n+      TransformerUtilsV2.mapEobCommonItemRevenueOutHHAHospice(\n+          item, line.getRevenueCenterDate(), line.getPaymentAmount());\n+\n+      // REV_CNTR_DDCTBL_COINSRNC_CD => item.revenue\n+      TransformerUtilsV2.addItemRevenue(\n+          item,\n+          eob,\n+          CcwCodebookVariable.REV_CNTR_DDCTBL_COINSRNC_CD,\n+          line.getDeductibleCoinsuranceCd());\n+\n+      // RNDRNG_PHYSN_UPIN => ExplanationOfBenefit.careTeam.provider\n+      TransformerUtilsV2.addCareTeamMember(\n+          eob,\n+          item,\n+          C4BBPractitionerIdentifierType.UPIN,\n+          C4BBClaimProfessionalAndNonClinicianCareTeamRole.PERFORMING,\n+          line.getRevenueCenterRenderingPhysicianUPIN());\n+\n+      // RNDRNG_PHYSN_NPI => ExplanationOfBenefit.careTeam.provider\n+      TransformerUtilsV2.addCareTeamMember(\n+          eob,\n+          item,\n+          C4BBPractitionerIdentifierType.NPI,\n+          C4BBClaimProfessionalAndNonClinicianCareTeamRole.PERFORMING,\n+          line.getRevenueCenterRenderingPhysicianNPI());\n+    }\n+\n+    TransformerUtilsV2.setLastUpdated(eob, claimGroup.getLastUpdated());\n+\n+    return eob;\n+  }\n+}"
  },
  {
    "sha": "ca7f5d4e59f26143304efc25b63493f28f885f4b",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/HospiceClaimTransformerV2.java",
    "status": "modified",
    "additions": 5,
    "deletions": 8,
    "changes": 13,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/HospiceClaimTransformerV2.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/HospiceClaimTransformerV2.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/HospiceClaimTransformerV2.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -80,11 +80,8 @@ private static ExplanationOfBenefit transformClaim(HospiceClaim claimGroup) {\n         claimGroup.getFinalAction());\n \n     // NCH_WKLY_PROC_DT => ExplanationOfBenefit.supportinginfo.timingDate\n-    TransformerUtilsV2.addInformationWithDate(\n-        eob,\n-        CcwCodebookVariable.NCH_WKLY_PROC_DT,\n-        CcwCodebookVariable.NCH_WKLY_PROC_DT,\n-        Optional.of(claimGroup.getWeeklyProcessDate()));\n+    TransformerUtilsV2.createInformationRecievedDateSlice(\n+        eob, CcwCodebookVariable.NCH_WKLY_PROC_DT, Optional.of(claimGroup.getWeeklyProcessDate()));\n \n     // map eob type codes into FHIR\n     // NCH_CLM_TYPE_CD            => ExplanationOfBenefit.type.coding\n@@ -226,9 +223,9 @@ private static ExplanationOfBenefit transformClaim(HospiceClaim claimGroup) {\n           C4BBClaimInstitutionalCareTeamRole.PERFORMING,\n           line.getRevenueCenterRenderingPhysicianNPI());\n \n-      // HCPCS_CD               => ExplanationOfBenefit.item.productOrService\n-      // HCPCS_1ST_MDFR_CD      => ExplanationOfBenefit.item.modifier\n-      // HCPCS_2ND_MDFR_CD      => ExplanationOfBenefit.item.modifier\n+      // HCPCS_CD           => ExplanationOfBenefit.item.productOrService\n+      // HCPCS_1ST_MDFR_CD  => ExplanationOfBenefit.item.modifier\n+      // HCPCS_2ND_MDFR_CD  => ExplanationOfBenefit.item.modifier\n       TransformerUtilsV2.mapHcpcs(\n           eob,\n           item,"
  },
  {
    "sha": "c21fe87643130d581be0b6d7329c95df7bbd6d94",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/InpatientClaimTransformerV2.java",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/InpatientClaimTransformerV2.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/InpatientClaimTransformerV2.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/InpatientClaimTransformerV2.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -287,11 +287,8 @@ private static ExplanationOfBenefit transformClaim(InpatientClaim claimGroup) {\n         .forEach(p -> TransformerUtilsV2.addProcedureCode(eob, p.get()));\n \n     // NCH_WKLY_PROC_DT => ExplanationOfBenefit.supportinginfo.timingDate\n-    TransformerUtilsV2.addInformationWithDate(\n-        eob,\n-        CcwCodebookVariable.NCH_WKLY_PROC_DT,\n-        CcwCodebookVariable.NCH_WKLY_PROC_DT,\n-        Optional.of(claimGroup.getWeeklyProcessDate()));\n+    TransformerUtilsV2.createInformationRecievedDateSlice(\n+        eob, CcwCodebookVariable.NCH_WKLY_PROC_DT, Optional.of(claimGroup.getWeeklyProcessDate()));\n \n     // NCH_PTNT_STATUS_IND_CD => ExplanationOfBenefit.supportingInfo.code\n     TransformerUtilsV2.addInformationWithCode("
  },
  {
    "sha": "39713159a34beae916749e10b3d97d33e88e7404",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/OutpatientClaimTransformerV2.java",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/OutpatientClaimTransformerV2.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/OutpatientClaimTransformerV2.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/OutpatientClaimTransformerV2.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -86,11 +86,8 @@ private static ExplanationOfBenefit transformClaim(OutpatientClaim claimGroup) {\n         claimGroup.getFinalAction());\n \n     // NCH_WKLY_PROC_DT => ExplanationOfBenefit.supportinginfo.timingDate\n-    TransformerUtilsV2.addInformationWithDate(\n-        eob,\n-        CcwCodebookVariable.NCH_WKLY_PROC_DT,\n-        CcwCodebookVariable.NCH_WKLY_PROC_DT,\n-        Optional.of(claimGroup.getWeeklyProcessDate()));\n+    TransformerUtilsV2.createInformationRecievedDateSlice(\n+        eob, CcwCodebookVariable.NCH_WKLY_PROC_DT, Optional.of(claimGroup.getWeeklyProcessDate()));\n \n     // Map care team\n     // AT_PHYSN_NPI     => ExplanationOfBenefit.careTeam.provider (Primary)"
  },
  {
    "sha": "29a6a56ed4ea6c4fab58b6508b18506bc754b4a6",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/R4ExplanationOfBenefitResourceProvider.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/R4ExplanationOfBenefitResourceProvider.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/R4ExplanationOfBenefitResourceProvider.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/R4ExplanationOfBenefitResourceProvider.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -273,14 +273,14 @@ public Bundle findByPatient(\n               ClaimTypeV2.DME,\n               findClaimTypeByPatient(ClaimTypeV2.DME, beneficiaryId, lastUpdated, serviceDate)));\n     }\n+    */\n \n     if (claimTypes.contains(ClaimTypeV2.HHA)) {\n       eobs.addAll(\n           transformToEobs(\n               ClaimTypeV2.HHA,\n               findClaimTypeByPatient(ClaimTypeV2.HHA, beneficiaryId, lastUpdated, serviceDate)));\n     }\n-    */\n \n     if (claimTypes.contains(ClaimTypeV2.HOSPICE)) {\n       eobs.addAll("
  },
  {
    "sha": "fbb235ccdbfd56e1afc3317819336ee9e1a1fbee",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/SNFClaimTransformerV2.java",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/SNFClaimTransformerV2.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/SNFClaimTransformerV2.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/SNFClaimTransformerV2.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -79,11 +79,8 @@ private static ExplanationOfBenefit transformClaim(SNFClaim claimGroup) {\n         claimGroup.getFinalAction());\n \n     // NCH_WKLY_PROC_DT => ExplanationOfBenefit.supportinginfo.timingDate\n-    TransformerUtilsV2.addInformationWithDate(\n-        eob,\n-        CcwCodebookVariable.NCH_WKLY_PROC_DT,\n-        CcwCodebookVariable.NCH_WKLY_PROC_DT,\n-        Optional.of(claimGroup.getWeeklyProcessDate()));\n+    TransformerUtilsV2.createInformationRecievedDateSlice(\n+        eob, CcwCodebookVariable.NCH_WKLY_PROC_DT, Optional.of(claimGroup.getWeeklyProcessDate()));\n \n     // map eob type codes into FHIR\n     // NCH_CLM_TYPE_CD            => ExplanationOfBenefit.type.coding\n@@ -249,7 +246,7 @@ private static ExplanationOfBenefit transformClaim(SNFClaim claimGroup) {\n     // CLM_SRVC_CLSFCTN_TYPE_CD => ExplanationOfBenefit.extension\n     // NCH_PRMRY_PYR_CD         => ExplanationOfBenefit.supportingInfo\n     // CLM_TOT_CHRG_AMT         => ExplanationOfBenefit.total.amount\n-    // NCH_PRMRY_PYR_CLM_PD_AMT => ExplanationOfBenefit.benefitBalance.financial (PRPAYAMT)\n+    // NCH_PRMRY_PYR_CLM_PD_AMT => ExplanationOfBenefit.benefitBalance.financial\n     TransformerUtilsV2.mapEobCommonGroupInpOutHHAHospiceSNF(\n         eob,\n         claimGroup.getOrganizationNpi(),"
  },
  {
    "sha": "630f3e2e768d283d0cb866d4789d417be61d112d",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/TransformerUtilsV2.java",
    "status": "modified",
    "additions": 36,
    "deletions": 13,
    "changes": 49,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/TransformerUtilsV2.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/TransformerUtilsV2.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/r4/providers/TransformerUtilsV2.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -1003,6 +1003,35 @@ private static CodeableConcept createAdjudicationAmtSliceCategory(\n     }\n   }\n \n+  /**\n+   * Optionally creates an `clmrecvdate` {@link SupportingInformationComponent} slice.\n+   *\n+   * @param date Claim received date\n+   * @return The created {@link SupportingInformationComponent}\n+   */\n+  static Optional<SupportingInformationComponent> createInformationRecievedDateSlice(\n+      ExplanationOfBenefit eob, CcwCodebookInterface ccwVariable, Optional<LocalDate> date) {\n+    return date.map(\n+        d -> {\n+          int maxSequence =\n+              eob.getSupportingInfo().stream().mapToInt(i -> i.getSequence()).max().orElse(0);\n+\n+          // Create the SupportingInfo element\n+          return new SupportingInformationComponent()\n+              .setSequence(maxSequence + 1)\n+              .setCategory(\n+                  new CodeableConcept()\n+                      .addCoding(\n+                          createC4BBSupportingInfoCoding(C4BBSupportingInfoType.ADMISSION_PERIOD))\n+                      .addCoding(\n+                          new Coding(\n+                              TransformerConstants.CODING_BBAPI_INFORMATION_CATEGORY,\n+                              calculateVariableReferenceUrl(ccwVariable),\n+                              ccwVariable.getVariable().getLabel())))\n+              .setTiming(new DateType(convertToDate(d)));\n+        });\n+  }\n+\n   /**\n    * Optionally Creates an `adjudicationamounttype` {@link TotalComponent} slice. This looks similar\n    * to the code to generate the {@link AdjudicationComponent} slice of the same name, but\n@@ -2162,6 +2191,7 @@ static void mapEobType(\n         break;\n \n       case CARRIER:\n+      case HHA:\n         fhirClaimType = org.hl7.fhir.r4.model.codesystems.ClaimType.PROFESSIONAL;\n         break;\n \n@@ -2253,24 +2283,17 @@ static void addCommonEobInformationInpatientSNF(\n     // NCH_VRFD_NCVRD_STAY_THRU_DT =>\n     // ExplanationOfBenefit.supportingInfo.timingPeriod\n     if (noncoveredStayFromDate.isPresent() || noncoveredStayThroughDate.isPresent()) {\n-      TransformerUtilsV2.validatePeriodDates(noncoveredStayFromDate, noncoveredStayThroughDate);\n+      validatePeriodDates(noncoveredStayFromDate, noncoveredStayThroughDate);\n \n       SupportingInformationComponent nchVrfdNcvrdStayInfo =\n-          TransformerUtilsV2.addInformation(eob, CcwCodebookVariable.NCH_VRFD_NCVRD_STAY_FROM_DT);\n+          addInformation(eob, CcwCodebookVariable.NCH_VRFD_NCVRD_STAY_FROM_DT);\n \n       Period nchVrfdNcvrdStayPeriod = new Period();\n \n-      if (noncoveredStayFromDate.isPresent()) {\n-        nchVrfdNcvrdStayPeriod.setStart(\n-            TransformerUtilsV2.convertToDate((noncoveredStayFromDate.get())),\n-            TemporalPrecisionEnum.DAY);\n-      }\n-\n-      if (noncoveredStayThroughDate.isPresent()) {\n-        nchVrfdNcvrdStayPeriod.setEnd(\n-            TransformerUtilsV2.convertToDate((noncoveredStayThroughDate.get())),\n-            TemporalPrecisionEnum.DAY);\n-      }\n+      noncoveredStayFromDate.ifPresent(\n+          d -> nchVrfdNcvrdStayPeriod.setStart(convertToDate(d), TemporalPrecisionEnum.DAY));\n+      noncoveredStayThroughDate.ifPresent(\n+          d -> nchVrfdNcvrdStayPeriod.setEnd(convertToDate(d), TemporalPrecisionEnum.DAY));\n \n       nchVrfdNcvrdStayInfo.setTiming(nchVrfdNcvrdStayPeriod);\n     }"
  },
  {
    "sha": "003b163f1f1775dba719521168b6c69d4595fe9c",
    "filename": "apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/HHAClaimTransformer.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/HHAClaimTransformer.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/HHAClaimTransformer.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/main/java/gov/cms/bfd/server/war/stu3/providers/HHAClaimTransformer.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -247,6 +247,7 @@ private static ExplanationOfBenefit transformClaim(HHAClaim claimGroup) {\n       TransformerUtils.mapEobCommonGroupInpHHAHospiceSNFCoinsurance(\n           eob, item, claimLine.getDeductibleCoinsuranceCd());\n     }\n+\n     TransformerUtils.setLastUpdated(eob, claimGroup.getLastUpdated());\n     return eob;\n   }"
  },
  {
    "sha": "46aeff27096b72305da96e41d71e100c942c844a",
    "filename": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/CarrierClaimTransformerV2Test.java",
    "status": "modified",
    "additions": 33,
    "deletions": 13,
    "changes": 46,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/CarrierClaimTransformerV2Test.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/CarrierClaimTransformerV2Test.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/CarrierClaimTransformerV2Test.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -12,19 +12,17 @@\n import java.util.Optional;\n import org.hl7.fhir.exceptions.FHIRException;\n import org.hl7.fhir.r4.model.ExplanationOfBenefit;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n public class CarrierClaimTransformerV2Test {\n   /**\n-   * Verifies that {@link\n-   * gov.cms.bfd.server.war.r4.providers.CarrierClaimTransformer#transform(Object)} works as\n-   * expected when run against the {@link StaticRifResource#SAMPLE_A_INPATIENT} {@link\n-   * InpatientClaim}.\n+   * Generates the Claim object to be used in multiple tests\n    *\n-   * @throws FHIRException (indicates test failure)\n+   * @return\n+   * @throws FHIRException\n    */\n-  @Test\n-  public void transformSampleARecord() throws FHIRException {\n+  public CarrierClaim generateClaim() throws FHIRException {\n     List<Object> parsedRecords =\n         ServerTestUtils.parseData(Arrays.asList(StaticRifResourceGroup.SAMPLE_A.getResources()));\n \n@@ -37,13 +35,39 @@ public void transformSampleARecord() throws FHIRException {\n \n     claim.setLastUpdated(new Date());\n \n-    ExplanationOfBenefit eob = CarrierClaimTransformerV2.transform(new MetricRegistry(), claim);\n+    return claim;\n+  }\n \n-    assertMatches(claim, eob);\n+  /**\n+   * Verifies that {@link\n+   * gov.cms.bfd.server.war.r4.providers.CarrierClaimTransformer#transform(Object)} works as\n+   * expected when run against the {@link StaticRifResource#SAMPLE_A_INPATIENT} {@link\n+   * InpatientClaim}.\n+   *\n+   * @throws FHIRException (indicates test failure)\n+   */\n+  @Test\n+  public void transformSampleARecord() throws FHIRException {\n+    CarrierClaim claim = generateClaim();\n+\n+    assertMatches(claim, CarrierClaimTransformerV2.transform(new MetricRegistry(), claim));\n   }\n \n   private static final FhirContext fhirContext = FhirContext.forR4();\n \n+  /**\n+   * Serializes the EOB and prints to the command line\n+   *\n+   * @throws FHIRException\n+   */\n+  @Ignore\n+  @Test\n+  public void serializeSampleARecord() throws FHIRException {\n+    ExplanationOfBenefit eob =\n+        CarrierClaimTransformerV2.transform(new MetricRegistry(), generateClaim());\n+    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n+  }\n+\n   /**\n    * Verifies that the {@link ExplanationOfBenefit} \"looks like\" it should, if it were produced from\n    * the specified {@link InpatientClaim}.\n@@ -67,9 +91,5 @@ static void assertMatches(CarrierClaim claim, ExplanationOfBenefit eob) throws F\n         Optional.of(claim.getDateThrough()),\n         Optional.of(claim.getPaymentAmount()),\n         claim.getFinalAction());\n-\n-    // TODO: finish tests based off V1\n-\n-    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n   }\n }"
  },
  {
    "sha": "ac012530b003a7cc7054d77ec25974f229428deb",
    "filename": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/ClaimTypeV2Test.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/ClaimTypeV2Test.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/ClaimTypeV2Test.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/ClaimTypeV2Test.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -2,6 +2,7 @@\n \n import com.google.common.collect.ImmutableMap;\n import gov.cms.bfd.model.rif.CarrierClaim;\n+import gov.cms.bfd.model.rif.HHAClaim;\n import gov.cms.bfd.model.rif.HospiceClaim;\n import gov.cms.bfd.model.rif.InpatientClaim;\n import gov.cms.bfd.model.rif.OutpatientClaim;\n@@ -46,13 +47,18 @@ public void verifyServiceEndAttributeFunc() {\n     snfClaim.setDateFrom(start);\n     snfClaim.setDateThrough(end);\n \n+    HHAClaim hhaClaim = new HHAClaim();\n+    hhaClaim.setDateFrom(start);\n+    hhaClaim.setDateThrough(end);\n+\n     ImmutableMap.Builder<ClaimTypeV2, Object> builder = ImmutableMap.builder();\n     builder.put(ClaimTypeV2.CARRIER, carrierClaim);\n     builder.put(ClaimTypeV2.PDE, partDEvent);\n     builder.put(ClaimTypeV2.INPATIENT, inpatientClaim);\n     builder.put(ClaimTypeV2.OUTPATIENT, outpatientClaim);\n     builder.put(ClaimTypeV2.HOSPICE, hospiceClaim);\n     builder.put(ClaimTypeV2.SNF, snfClaim);\n+    builder.put(ClaimTypeV2.HHA, hhaClaim);\n \n     Map<ClaimTypeV2, Object> claimTypeToClaim = builder.build();\n "
  },
  {
    "sha": "5db434650be19febf90cc62839eed7159252078e",
    "filename": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/HHAClaimTransformerV2Test.java",
    "status": "added",
    "additions": 93,
    "deletions": 0,
    "changes": 93,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/HHAClaimTransformerV2Test.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/HHAClaimTransformerV2Test.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/HHAClaimTransformerV2Test.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -0,0 +1,93 @@\n+package gov.cms.bfd.server.war.r4.providers;\n+\n+import ca.uhn.fhir.context.FhirContext;\n+import com.codahale.metrics.MetricRegistry;\n+import gov.cms.bfd.model.rif.HHAClaim;\n+import gov.cms.bfd.model.rif.samples.StaticRifResourceGroup;\n+import gov.cms.bfd.server.war.ServerTestUtils;\n+import gov.cms.bfd.server.war.commons.MedicareSegment;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Optional;\n+import org.hl7.fhir.exceptions.FHIRException;\n+import org.hl7.fhir.r4.model.ExplanationOfBenefit;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+public class HHAClaimTransformerV2Test {\n+  /**\n+   * Generates the Claim object to be used in multiple tests\n+   *\n+   * @return\n+   * @throws FHIRException\n+   */\n+  public HHAClaim generateClaim() throws FHIRException {\n+    List<Object> parsedRecords =\n+        ServerTestUtils.parseData(Arrays.asList(StaticRifResourceGroup.SAMPLE_A.getResources()));\n+\n+    HHAClaim claim =\n+        parsedRecords.stream()\n+            .filter(r -> r instanceof HHAClaim)\n+            .map(r -> (HHAClaim) r)\n+            .findFirst()\n+            .get();\n+\n+    claim.setLastUpdated(new Date());\n+\n+    return claim;\n+  }\n+\n+  /**\n+   * Verifies that {@link\n+   * gov.cms.bfd.server.war.stu3.providers.SNFClaimTransformer#transform(Object)} works as expected\n+   * when run against the {@link StaticRifResource#SAMPLE_A_SNF} {@link SNFClaim}.\n+   *\n+   * @throws FHIRException (indicates test failure)\n+   */\n+  @Test\n+  public void transformSampleARecord() throws FHIRException {\n+    HHAClaim claim = generateClaim();\n+\n+    assertMatches(claim, HHAClaimTransformerV2.transform(new MetricRegistry(), claim));\n+  }\n+\n+  private static final FhirContext fhirContext = FhirContext.forR4();\n+\n+  /**\n+   * Serializes the EOB and prints to the command line\n+   *\n+   * @throws FHIRException\n+   */\n+  @Ignore\n+  @Test\n+  public void serializeSampleARecord() throws FHIRException {\n+    ExplanationOfBenefit eob =\n+        HHAClaimTransformerV2.transform(new MetricRegistry(), generateClaim());\n+    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n+  }\n+\n+  /**\n+   * Verifies that the {@link ExplanationOfBenefit} \"looks like\" it should, if it were produced from\n+   * the specified {@link SNFClaim}.\n+   *\n+   * @param claim the {@link SNFClaim} that the {@link ExplanationOfBenefit} was generated from\n+   * @param eob the {@link ExplanationOfBenefit} that was generated from the specified {@link\n+   *     SNFClaim}\n+   * @throws FHIRException (indicates test failure)\n+   */\n+  static void assertMatches(HHAClaim claim, ExplanationOfBenefit eob) throws FHIRException {\n+    // Test to ensure group level fields between all claim types match\n+    TransformerTestUtilsV2.assertEobCommonClaimHeaderData(\n+        eob,\n+        claim.getClaimId(),\n+        claim.getBeneficiaryId(),\n+        ClaimTypeV2.HHA,\n+        claim.getClaimGroupId().toPlainString(),\n+        MedicareSegment.PART_B,\n+        Optional.of(claim.getDateFrom()),\n+        Optional.of(claim.getDateThrough()),\n+        Optional.of(claim.getPaymentAmount()),\n+        claim.getFinalAction());\n+  }\n+}"
  },
  {
    "sha": "4b3903326b71f0cf45ce36c596c6b373c21e71a7",
    "filename": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/HospiceClaimTransformerV2Test.java",
    "status": "modified",
    "additions": 33,
    "deletions": 13,
    "changes": 46,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/HospiceClaimTransformerV2Test.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/HospiceClaimTransformerV2Test.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/HospiceClaimTransformerV2Test.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -12,19 +12,17 @@\n import java.util.Optional;\n import org.hl7.fhir.exceptions.FHIRException;\n import org.hl7.fhir.r4.model.ExplanationOfBenefit;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n public class HospiceClaimTransformerV2Test {\n   /**\n-   * Verifies that {@link\n-   * gov.cms.bfd.server.war.r4.providers.HospiceClaimTransformerV2#transform(Object)} works as\n-   * expected when run against the {@link StaticRifResource#SAMPLE_A_INPATIENT} {@link\n-   * InpatientClaim}.\n+   * Generates the Claim object to be used in multiple tests\n    *\n-   * @throws FHIRException (indicates test failure)\n+   * @return\n+   * @throws FHIRException\n    */\n-  @Test\n-  public void transformSampleARecord() throws FHIRException {\n+  public HospiceClaim generateClaim() throws FHIRException {\n     List<Object> parsedRecords =\n         ServerTestUtils.parseData(Arrays.asList(StaticRifResourceGroup.SAMPLE_A.getResources()));\n \n@@ -37,13 +35,39 @@ public void transformSampleARecord() throws FHIRException {\n \n     claim.setLastUpdated(new Date());\n \n-    ExplanationOfBenefit eob = HospiceClaimTransformerV2.transform(new MetricRegistry(), claim);\n+    return claim;\n+  }\n \n-    assertMatches(claim, eob);\n+  /**\n+   * Verifies that {@link\n+   * gov.cms.bfd.server.war.r4.providers.HospiceClaimTransformerV2#transform(Object)} works as\n+   * expected when run against the {@link StaticRifResource#SAMPLE_A_INPATIENT} {@link\n+   * InpatientClaim}.\n+   *\n+   * @throws FHIRException (indicates test failure)\n+   */\n+  @Test\n+  public void transformSampleARecord() throws FHIRException {\n+    HospiceClaim claim = generateClaim();\n+\n+    assertMatches(claim, HospiceClaimTransformerV2.transform(new MetricRegistry(), claim));\n   }\n \n   private static final FhirContext fhirContext = FhirContext.forR4();\n \n+  /**\n+   * Serializes the EOB and prints to the command line\n+   *\n+   * @throws FHIRException\n+   */\n+  @Ignore\n+  @Test\n+  public void serializeSampleARecord() throws FHIRException {\n+    ExplanationOfBenefit eob =\n+        HospiceClaimTransformerV2.transform(new MetricRegistry(), generateClaim());\n+    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n+  }\n+\n   /**\n    * Verifies that the {@link ExplanationOfBenefit} \"looks like\" it should, if it were produced from\n    * the specified {@link InpatientClaim}.\n@@ -67,9 +91,5 @@ static void assertMatches(HospiceClaim claim, ExplanationOfBenefit eob) throws F\n         Optional.of(claim.getDateThrough()),\n         Optional.of(claim.getPaymentAmount()),\n         claim.getFinalAction());\n-\n-    // TODO: finish tests based off V1\n-\n-    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n   }\n }"
  },
  {
    "sha": "00a9bc80f879b1a59b2894e98d96f7b5589622f0",
    "filename": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/InpatientClaimTransformerV2Test.java",
    "status": "modified",
    "additions": 33,
    "deletions": 13,
    "changes": 46,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/InpatientClaimTransformerV2Test.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/InpatientClaimTransformerV2Test.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/InpatientClaimTransformerV2Test.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -15,19 +15,17 @@\n import org.hl7.fhir.exceptions.FHIRException;\n import org.hl7.fhir.r4.model.ExplanationOfBenefit;\n import org.junit.Assert;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n public final class InpatientClaimTransformerV2Test {\n   /**\n-   * Verifies that {@link\n-   * gov.cms.bfd.server.war.r4.providers.InpatientClaimTransformer#transform(Object)} works as\n-   * expected when run against the {@link StaticRifResource#SAMPLE_A_INPATIENT} {@link\n-   * InpatientClaim}.\n+   * Generates the Claim object to be used in multiple tests\n    *\n-   * @throws FHIRException (indicates test failure)\n+   * @return\n+   * @throws FHIRException\n    */\n-  @Test\n-  public void transformSampleARecord() throws FHIRException {\n+  public InpatientClaim generateClaim() throws FHIRException {\n     List<Object> parsedRecords =\n         ServerTestUtils.parseData(Arrays.asList(StaticRifResourceGroup.SAMPLE_A.getResources()));\n \n@@ -40,13 +38,39 @@ public void transformSampleARecord() throws FHIRException {\n \n     claim.setLastUpdated(new Date());\n \n-    ExplanationOfBenefit eob = InpatientClaimTransformerV2.transform(new MetricRegistry(), claim);\n+    return claim;\n+  }\n \n-    assertMatches(claim, eob);\n+  /**\n+   * Verifies that {@link\n+   * gov.cms.bfd.server.war.r4.providers.InpatientClaimTransformer#transform(Object)} works as\n+   * expected when run against the {@link StaticRifResource#SAMPLE_A_INPATIENT} {@link\n+   * InpatientClaim}.\n+   *\n+   * @throws FHIRException (indicates test failure)\n+   */\n+  @Test\n+  public void transformSampleARecord() throws FHIRException {\n+    InpatientClaim claim = generateClaim();\n+\n+    assertMatches(claim, InpatientClaimTransformerV2.transform(new MetricRegistry(), claim));\n   }\n \n   private static final FhirContext fhirContext = FhirContext.forR4();\n \n+  /**\n+   * Serializes the EOB and prints to the command line\n+   *\n+   * @throws FHIRException\n+   */\n+  @Ignore\n+  @Test\n+  public void serializeSampleARecord() throws FHIRException {\n+    ExplanationOfBenefit eob =\n+        InpatientClaimTransformerV2.transform(new MetricRegistry(), generateClaim());\n+    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n+  }\n+\n   /**\n    * Verifies that the {@link ExplanationOfBenefit} \"looks like\" it should, if it were produced from\n    * the specified {@link InpatientClaim}.\n@@ -82,11 +106,7 @@ static void assertMatches(InpatientClaim claim, ExplanationOfBenefit eob) throws\n           eob);\n     }\n \n-    // TODO: finish tests based off V1\n-\n     // Test that the expected number of diagnoses are mapped\n     Assert.assertEquals(9, eob.getDiagnosis().size());\n-\n-    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n   }\n }"
  },
  {
    "sha": "e7658dbd5efd9b2e6de8147b4dcf45c1663edfad",
    "filename": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/OutpatientClaimTransformerV2Test.java",
    "status": "modified",
    "additions": 33,
    "deletions": 11,
    "changes": 44,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/OutpatientClaimTransformerV2Test.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/OutpatientClaimTransformerV2Test.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/OutpatientClaimTransformerV2Test.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -15,19 +15,17 @@\n import org.hl7.fhir.exceptions.FHIRException;\n import org.hl7.fhir.r4.model.ExplanationOfBenefit;\n import org.junit.Assert;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n public final class OutpatientClaimTransformerV2Test {\n   /**\n-   * Verifies that {@link\n-   * gov.cms.bfd.server.war.r4.providers.OutpatientClaimTransformer#transform(Object)} works as\n-   * expected when run against the {@link StaticRifResource#SAMPLE_A_INPATIENT} {@link\n-   * InpatientClaim}.\n+   * Generates the Claim object to be used in multiple tests\n    *\n-   * @throws FHIRException (indicates test failure)\n+   * @return\n+   * @throws FHIRException\n    */\n-  @Test\n-  public void transformSampleARecord() throws FHIRException {\n+  public OutpatientClaim generateClaim() throws FHIRException {\n     List<Object> parsedRecords =\n         ServerTestUtils.parseData(Arrays.asList(StaticRifResourceGroup.SAMPLE_A.getResources()));\n \n@@ -40,13 +38,39 @@ public void transformSampleARecord() throws FHIRException {\n \n     claim.setLastUpdated(new Date());\n \n-    ExplanationOfBenefit eob = OutpatientClaimTransformerV2.transform(new MetricRegistry(), claim);\n+    return claim;\n+  }\n+\n+  /**\n+   * Verifies that {@link\n+   * gov.cms.bfd.server.war.r4.providers.OutpatientClaimTransformer#transform(Object)} works as\n+   * expected when run against the {@link StaticRifResource#SAMPLE_A_INPATIENT} {@link\n+   * InpatientClaim}.\n+   *\n+   * @throws FHIRException (indicates test failure)\n+   */\n+  @Test\n+  public void transformSampleARecord() throws FHIRException {\n+    OutpatientClaim claim = generateClaim();\n \n-    assertMatches(claim, eob);\n+    assertMatches(claim, OutpatientClaimTransformerV2.transform(new MetricRegistry(), claim));\n   }\n \n   private static final FhirContext fhirContext = FhirContext.forR4();\n \n+  /**\n+   * Serializes the EOB and prints to the command line\n+   *\n+   * @throws FHIRException\n+   */\n+  @Ignore\n+  @Test\n+  public void serializeSampleARecord() throws FHIRException {\n+    ExplanationOfBenefit eob =\n+        HHAClaimTransformerV2.transform(new MetricRegistry(), generateClaim());\n+    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n+  }\n+\n   /**\n    * Verifies that the {@link ExplanationOfBenefit} \"looks like\" it should, if it were produced from\n    * the specified {@link InpatientClaim}.\n@@ -73,7 +97,5 @@ static void assertMatches(OutpatientClaim claim, ExplanationOfBenefit eob) throw\n \n     // TODO: Double check the assumed value\n     Assert.assertEquals(5, eob.getDiagnosis().size());\n-\n-    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n   }\n }"
  },
  {
    "sha": "2535de18adb7ff20c6dfaa0bfea9483523bef355",
    "filename": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/PartDEventTransformerV2Test.java",
    "status": "modified",
    "additions": 32,
    "deletions": 11,
    "changes": 43,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/PartDEventTransformerV2Test.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/PartDEventTransformerV2Test.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/PartDEventTransformerV2Test.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -12,18 +12,17 @@\n import java.util.Optional;\n import org.hl7.fhir.exceptions.FHIRException;\n import org.hl7.fhir.r4.model.ExplanationOfBenefit;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n public final class PartDEventTransformerV2Test {\n   /**\n-   * Verifies that {@link\n-   * gov.cms.bfd.server.war.r4.providers.PartDEventTransformer#transform(Object)} works as expected\n-   * when run against the {@link StaticRifResource#SAMPLE_A_INPATIENT} {@link InpatientClaim}.\n+   * Generates the Claim object to be used in multiple tests\n    *\n-   * @throws FHIRException (indicates test failure)\n+   * @return\n+   * @throws FHIRException\n    */\n-  @Test\n-  public void transformSampleARecord() throws FHIRException {\n+  public PartDEvent generateClaim() throws FHIRException {\n     List<Object> parsedRecords =\n         ServerTestUtils.parseData(Arrays.asList(StaticRifResourceGroup.SAMPLE_A.getResources()));\n \n@@ -36,13 +35,38 @@ public void transformSampleARecord() throws FHIRException {\n \n     claim.setLastUpdated(new Date());\n \n-    ExplanationOfBenefit eob = PartDEventTransformerV2.transform(new MetricRegistry(), claim);\n+    return claim;\n+  }\n+\n+  /**\n+   * Verifies that {@link\n+   * gov.cms.bfd.server.war.r4.providers.PartDEventTransformer#transform(Object)} works as expected\n+   * when run against the {@link StaticRifResource#SAMPLE_A_INPATIENT} {@link InpatientClaim}.\n+   *\n+   * @throws FHIRException (indicates test failure)\n+   */\n+  @Test\n+  public void transformSampleARecord() throws FHIRException {\n+    PartDEvent claim = generateClaim();\n \n-    assertMatches(claim, eob);\n+    assertMatches(claim, PartDEventTransformerV2.transform(new MetricRegistry(), claim));\n   }\n \n   private static final FhirContext fhirContext = FhirContext.forR4();\n \n+  /**\n+   * Serializes the EOB and prints to the command line\n+   *\n+   * @throws FHIRException\n+   */\n+  @Ignore\n+  @Test\n+  public void serializeSampleARecord() throws FHIRException {\n+    ExplanationOfBenefit eob =\n+        PartDEventTransformerV2.transform(new MetricRegistry(), generateClaim());\n+    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n+  }\n+\n   /**\n    * Verifies that the {@link ExplanationOfBenefit} \"looks like\" it should, if it were produced from\n    * the specified {@link InpatientClaim}.\n@@ -80,8 +104,5 @@ static void assertMatches(PartDEvent claim, ExplanationOfBenefit eob) throws FHI\n     }\n     */\n \n-    // TODO: finish tests based off V1\n-\n-    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n   }\n }"
  },
  {
    "sha": "0df2df5c75877f0a2855d457c0feecb7841e0d6c",
    "filename": "apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/SNFClaimTransformerV2Test.java",
    "status": "modified",
    "additions": 1,
    "deletions": 5,
    "changes": 6,
    "blob_url": "https://github.com/CMSgov/beneficiary-fhir-data/blob/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/SNFClaimTransformerV2Test.java",
    "raw_url": "https://github.com/CMSgov/beneficiary-fhir-data/raw/f3bee1544bfac7623052f3a5706c975e0e0a9a13/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/SNFClaimTransformerV2Test.java",
    "contents_url": "https://api.github.com/repos/CMSgov/beneficiary-fhir-data/contents/apps/bfd-server/bfd-server-war/src/test/java/gov/cms/bfd/server/war/r4/providers/SNFClaimTransformerV2Test.java?ref=f3bee1544bfac7623052f3a5706c975e0e0a9a13",
    "patch": "@@ -15,7 +15,6 @@\n import org.junit.Test;\n \n public class SNFClaimTransformerV2Test {\n-\n   /**\n    * Generates the Claim object to be used in multiple tests\n    *\n@@ -32,6 +31,7 @@ public SNFClaim generateClaim() throws FHIRException {\n         .findFirst()\n         .get();\n   }\n+\n   /**\n    * Verifies that {@link\n    * gov.cms.bfd.server.war.stu3.providers.SNFClaimTransformer#transform(Object)} works as expected\n@@ -83,9 +83,5 @@ static void assertMatches(SNFClaim claim, ExplanationOfBenefit eob) throws FHIRE\n         Optional.of(claim.getDateThrough()),\n         Optional.of(claim.getPaymentAmount()),\n         claim.getFinalAction());\n-\n-    // TODO: finish tests based off V1\n-\n-    System.out.println(fhirContext.newJsonParser().encodeResourceToString(eob));\n   }\n }"
  }
]
