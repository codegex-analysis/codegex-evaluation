[
  {
    "sha": "6fb114c1db663e536f5c60847dec99ae1f313554",
    "filename": "src/main/java/teammates/common/datatransfer/FeedbackSessionLogEntry.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/common/datatransfer/FeedbackSessionLogEntry.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/common/datatransfer/FeedbackSessionLogEntry.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/common/datatransfer/FeedbackSessionLogEntry.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -0,0 +1,38 @@\n+package teammates.common.datatransfer;\n+\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+\n+/**\n+ * Represents a log entry of a feedback session.\n+ */\n+public class FeedbackSessionLogEntry {\n+    private final StudentAttributes student;\n+    private final FeedbackSessionAttributes feedbackSession;\n+    private final String feedbackSessionLogType;\n+    private final long timestamp;\n+\n+    public FeedbackSessionLogEntry(StudentAttributes student, FeedbackSessionAttributes feedbackSession,\n+            String feedbackSessionLogType, long timestamp) {\n+        this.student = student;\n+        this.feedbackSession = feedbackSession;\n+        this.feedbackSessionLogType = feedbackSessionLogType;\n+        this.timestamp = timestamp;\n+    }\n+\n+    public StudentAttributes getStudent() {\n+        return this.student;\n+    }\n+\n+    public FeedbackSessionAttributes getFeedbackSession() {\n+        return this.feedbackSession;\n+    }\n+\n+    public String getFeedbackSessionLogType() {\n+        return this.feedbackSessionLogType;\n+    }\n+\n+    public long getTimestamp() {\n+        return this.timestamp;\n+    }\n+}"
  },
  {
    "sha": "e3b05f30f364e841ba2b7e5deb93e373f1f31480",
    "filename": "src/main/java/teammates/common/exception/LogServiceException.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/common/exception/LogServiceException.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/common/exception/LogServiceException.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/common/exception/LogServiceException.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -0,0 +1,17 @@\n+package teammates.common.exception;\n+\n+/**\n+ * Exception thrown when the logs service fails to create or retrieve logs.\n+ */\n+@SuppressWarnings(\"serial\")\n+public class LogServiceException extends Exception {\n+\n+    public LogServiceException(String message) {\n+        super(message);\n+    }\n+\n+    public LogServiceException(Throwable cause) {\n+        super(cause);\n+    }\n+\n+}"
  },
  {
    "sha": "91e1f238ab506dcd6b4695478d2176ede4352dbd",
    "filename": "src/main/java/teammates/logic/api/LogsProcessor.java",
    "status": "modified",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/logic/api/LogsProcessor.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/logic/api/LogsProcessor.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/logic/api/LogsProcessor.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -1,8 +1,11 @@\n package teammates.logic.api;\n \n+import java.time.Instant;\n import java.util.List;\n \n import teammates.common.datatransfer.ErrorLogEntry;\n+import teammates.common.datatransfer.FeedbackSessionLogEntry;\n+import teammates.common.exception.LogServiceException;\n import teammates.common.util.Config;\n import teammates.logic.core.GoogleCloudLoggingService;\n import teammates.logic.core.LocalLoggingService;\n@@ -33,4 +36,21 @@ public LogsProcessor() {\n         return service.getRecentErrorLogs();\n     }\n \n+    /**\n+     * Creates a feedback session log.\n+     */\n+    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType)\n+            throws LogServiceException {\n+        service.createFeedbackSessionLog(courseId, email, fsName, fslType);\n+    }\n+\n+    /**\n+     * Gets the feedback session logs as filtered by the given parameters.\n+     * @param email Can be null\n+     */\n+    public List<FeedbackSessionLogEntry> getFeedbackSessionLogs(String courseId, String email,\n+            Instant startTime, Instant endTime) throws LogServiceException {\n+        return service.getFeedbackSessionLogs(courseId, email, startTime, endTime);\n+    }\n+\n }"
  },
  {
    "sha": "7c207693a12fe9f22442d44cd0d3d2fe686e49f1",
    "filename": "src/main/java/teammates/logic/core/GoogleCloudLoggingService.java",
    "status": "modified",
    "additions": 140,
    "deletions": 0,
    "changes": 140,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/logic/core/GoogleCloudLoggingService.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/logic/core/GoogleCloudLoggingService.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/logic/core/GoogleCloudLoggingService.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -3,28 +3,47 @@\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.stream.Collectors;\n \n import com.google.api.gax.paging.Page;\n import com.google.appengine.logging.v1.LogLine;\n import com.google.appengine.logging.v1.RequestLog;\n import com.google.appengine.logging.v1.SourceLocation;\n import com.google.appengine.logging.v1.SourceReference;\n+import com.google.cloud.MonitoredResource;\n import com.google.cloud.logging.LogEntry;\n import com.google.cloud.logging.Logging;\n+import com.google.cloud.logging.Logging.EntryListOption;\n import com.google.cloud.logging.LoggingOptions;\n+import com.google.cloud.logging.Payload.StringPayload;\n import com.google.logging.type.LogSeverity;\n import com.google.protobuf.Any;\n import com.google.protobuf.InvalidProtocolBufferException;\n import com.google.protobuf.util.JsonFormat;\n \n import teammates.common.datatransfer.ErrorLogEntry;\n+import teammates.common.datatransfer.FeedbackSessionLogEntry;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.common.exception.LogServiceException;\n+import teammates.common.util.Const;\n \n /**\n  * Holds functions for operations related to Google Cloud Logging.\n  */\n public class GoogleCloudLoggingService implements LogService {\n+    private static final StudentsLogic studentsLogic = StudentsLogic.inst();\n+    private static final FeedbackSessionsLogic fsLogic = FeedbackSessionsLogic.inst();\n+\n+    private static final String FEEDBACK_SESSION_LOG_NAME = \"feedback-session-logs\";\n+    private static final String FEEDBACK_SESSION_LOG_COURSE_ID_LABEL = \"courseId\";\n+    private static final String FEEDBACK_SESSION_LOG_EMAIL_LABEL = \"email\";\n+    private static final String FEEDBACK_SESSION_LOG_NAME_LABEL = \"fsName\";\n+    private static final String FEEDBACK_SESSION_LOG_TYPE_LABEL = \"fslType\";\n \n     @Override\n     public List<ErrorLogEntry> getRecentErrorLogs() {\n@@ -94,4 +113,125 @@\n         return errorLogs;\n     }\n \n+    @Override\n+    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType)\n+            throws LogServiceException {\n+        String payload = \"Feedback session log: course ID=\" + courseId + \", email=\" + email\n+                + \", feedback session name=\" + fsName + \", log type=\" + fslType;\n+        LogEntry entry = LogEntry.newBuilder(StringPayload.of(payload))\n+                .setLogName(FEEDBACK_SESSION_LOG_NAME)\n+                .addLabel(FEEDBACK_SESSION_LOG_COURSE_ID_LABEL, courseId)\n+                .addLabel(FEEDBACK_SESSION_LOG_EMAIL_LABEL, email)\n+                .addLabel(FEEDBACK_SESSION_LOG_NAME_LABEL, fsName)\n+                .addLabel(FEEDBACK_SESSION_LOG_TYPE_LABEL, fslType)\n+                .setResource(MonitoredResource.newBuilder(\"global\").build())\n+                .build();\n+        createLogEntry(entry);\n+    }\n+\n+    private void createLogEntry(LogEntry entry) throws LogServiceException {\n+        try (Logging logging = LoggingOptions.getDefaultInstance().getService()) {\n+            logging.write(Collections.singleton(entry));\n+        } catch (Exception e) {\n+            throw new LogServiceException(e);\n+        }\n+    }\n+\n+    @Override\n+    public List<FeedbackSessionLogEntry> getFeedbackSessionLogs(String courseId, String email,\n+            Instant startTime, Instant endTime) throws LogServiceException {\n+        LogSearchParams logSearchParams = new LogSearchParams()\n+                .setLogName(FEEDBACK_SESSION_LOG_NAME)\n+                .addLabel(FEEDBACK_SESSION_LOG_COURSE_ID_LABEL, courseId)\n+                .addLabel(FEEDBACK_SESSION_LOG_EMAIL_LABEL, email)\n+                .setStartTime(startTime)\n+                .setEndTime(endTime);\n+        List<LogEntry> logEntries = getLogEntries(logSearchParams);\n+\n+        List<FeedbackSessionLogEntry> fsLogEntries = new ArrayList<>();\n+        for (LogEntry entry : logEntries) {\n+            String fslType = entry.getLabels().get(FEEDBACK_SESSION_LOG_TYPE_LABEL);\n+            long timestamp = entry.getTimestamp();\n+            String entryEmail = entry.getLabels().get(FEEDBACK_SESSION_LOG_EMAIL_LABEL);\n+            String entryFsName = entry.getLabels().get(FEEDBACK_SESSION_LOG_NAME_LABEL);\n+            StudentAttributes student = studentsLogic.getStudentForEmail(courseId, entryEmail);\n+            FeedbackSessionAttributes fs = fsLogic.getFeedbackSession(entryFsName, courseId);\n+            if (student == null || fs == null) {\n+                // If the student email or feedback session retrieved from the logs are invalid, discard it\n+                continue;\n+            }\n+            if (!fslType.equals(Const.FeedbackSessionLogTypes.ACCESS)\n+                    && !fslType.equals(Const.FeedbackSessionLogTypes.SUBMISSION)) {\n+                // If the feedback session log type retrieved from the logs is invalid, discard it\n+                continue;\n+            }\n+            FeedbackSessionLogEntry fslEntry = new FeedbackSessionLogEntry(student, fs, fslType, timestamp);\n+            fsLogEntries.add(fslEntry);\n+        }\n+\n+        return fsLogEntries;\n+    }\n+\n+    private List<LogEntry> getLogEntries(LogSearchParams s) throws LogServiceException {\n+        List<LogEntry> logEntries = new ArrayList<>();\n+        LoggingOptions options = LoggingOptions.getDefaultInstance();\n+\n+        List<String> logFilters = new ArrayList<>();\n+        if (s.logName != null) {\n+            logFilters.add(\"logName=\\\"projects/\" + options.getProjectId() + \"/logs/\" + s.logName + \"\\\"\");\n+        }\n+        if (s.startTime != null) {\n+            logFilters.add(\"timestamp>\\\"\" + s.startTime.toString() + \"\\\"\");\n+        }\n+        if (s.endTime != null) {\n+            logFilters.add(\"timestamp<=\\\"\" + s.endTime.toString() + \"\\\"\");\n+        }\n+        for (Map.Entry<String, String> entry : s.labels.entrySet()) {\n+            logFilters.add(\"labels.\" + entry.getKey() + \"=\\\"\" + entry.getValue() + \"\\\"\");\n+        }\n+        String logFilter = logFilters.stream().collect(Collectors.joining(\"\\n\"));\n+\n+        try (Logging logging = LoggingOptions.getDefaultInstance().getService()) {\n+            Page<LogEntry> entries = logging.listLogEntries(EntryListOption.filter(logFilter));\n+            for (LogEntry entry : entries.iterateAll()) {\n+                logEntries.add(entry);\n+            }\n+        } catch (Exception e) {\n+            throw new LogServiceException(e);\n+        }\n+        return logEntries;\n+    }\n+\n+    /**\n+     * Contains params to be used for the searching of logs.\n+     */\n+    private static class LogSearchParams {\n+        private String logName;\n+        private Instant startTime;\n+        private Instant endTime;\n+        private Map<String, String> labels = new HashMap<>();\n+\n+        public LogSearchParams setLogName(String logName) {\n+            this.logName = logName;\n+            return this;\n+        }\n+\n+        public LogSearchParams setStartTime(Instant startTime) {\n+            this.startTime = startTime;\n+            return this;\n+        }\n+\n+        public LogSearchParams setEndTime(Instant endTime) {\n+            this.endTime = endTime;\n+            return this;\n+        }\n+\n+        public LogSearchParams addLabel(String key, String value) {\n+            if (key != null && value != null) {\n+                this.labels.put(key, value);\n+            }\n+            return this;\n+        }\n+    }\n+\n }"
  },
  {
    "sha": "bcfcc23e8e51a619905f6f65dfe088a411e78e18",
    "filename": "src/main/java/teammates/logic/core/LocalLoggingService.java",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/logic/core/LocalLoggingService.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/logic/core/LocalLoggingService.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/logic/core/LocalLoggingService.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -1,9 +1,12 @@\n package teammates.logic.core;\n \n+import java.time.Instant;\n import java.util.ArrayList;\n import java.util.List;\n \n import teammates.common.datatransfer.ErrorLogEntry;\n+import teammates.common.datatransfer.FeedbackSessionLogEntry;\n+import teammates.common.exception.LogServiceException;\n \n /**\n  * Holds functions for operations related to logs reading/writing in local dev environment.\n@@ -21,4 +24,17 @@\n         return new ArrayList<>();\n     }\n \n+    @Override\n+    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType)\n+            throws LogServiceException {\n+        // Not supported in dev server\n+    }\n+\n+    @Override\n+    public List<FeedbackSessionLogEntry> getFeedbackSessionLogs(String courseId, String email,\n+            Instant startTime, Instant endTime) throws LogServiceException {\n+        // Not supported in dev server\n+        return new ArrayList<>();\n+    }\n+\n }"
  },
  {
    "sha": "4df6da0b5a8b4841b9f35a83ad4b2912150cc6c7",
    "filename": "src/main/java/teammates/logic/core/LogService.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/logic/core/LogService.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/logic/core/LogService.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/logic/core/LogService.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -1,8 +1,11 @@\n package teammates.logic.core;\n \n+import java.time.Instant;\n import java.util.List;\n \n import teammates.common.datatransfer.ErrorLogEntry;\n+import teammates.common.datatransfer.FeedbackSessionLogEntry;\n+import teammates.common.exception.LogServiceException;\n \n /**\n  * An interface used for logs operations such as reading/writing.\n@@ -11,4 +14,8 @@\n \n     List<ErrorLogEntry> getRecentErrorLogs();\n \n+    void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType) throws LogServiceException;\n+\n+    List<FeedbackSessionLogEntry> getFeedbackSessionLogs(String courseId, String email, Instant startTime, Instant endTime)\n+            throws LogServiceException;\n }"
  },
  {
    "sha": "dce649c51c93b205055ce94a6b83e85235707f76",
    "filename": "src/main/java/teammates/ui/constants/LogType.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/constants/LogType.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/constants/LogType.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/ui/constants/LogType.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -0,0 +1,39 @@\n+package teammates.ui.constants;\n+\n+import com.fasterxml.jackson.annotation.JsonValue;\n+\n+import teammates.common.util.Const;\n+\n+/**\n+ * Constant values for all the different log types.\n+ */\n+public enum LogType {\n+    // CHECKSTYLE.OFF:JavadocVariable\n+    FEEDBACK_SESSION_ACCESS(Const.FeedbackSessionLogTypes.ACCESS),\n+    FEEDBACK_SESSION_SUBMISSION(Const.FeedbackSessionLogTypes.SUBMISSION);\n+    // CHECKSTYLE.ON:JavadocVariable\n+\n+    @JsonValue\n+    private final String label;\n+\n+    LogType(String label) {\n+        this.label = label;\n+    }\n+\n+    public String getLabel() {\n+        return label;\n+    }\n+\n+    /**\n+     * Returns the enum value of a log type given its label.\n+     */\n+    public static LogType valueOfLabel(String label) {\n+        for (LogType logType : values()) {\n+            if (logType.label.equals(label)) {\n+                return logType;\n+            }\n+        }\n+        return null;\n+    }\n+\n+}"
  },
  {
    "sha": "c7350600272e7c522e441ee98e2508a42607cdb6",
    "filename": "src/main/java/teammates/ui/constants/LogTypes.java",
    "status": "removed",
    "additions": 0,
    "deletions": 27,
    "changes": 27,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/8bc9e64b3c6a6fa45e5fc6b78e991912cbfe6c22/src/main/java/teammates/ui/constants/LogTypes.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/8bc9e64b3c6a6fa45e5fc6b78e991912cbfe6c22/src/main/java/teammates/ui/constants/LogTypes.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/ui/constants/LogTypes.java?ref=8bc9e64b3c6a6fa45e5fc6b78e991912cbfe6c22",
    "patch": "@@ -1,27 +0,0 @@\n-package teammates.ui.constants;\n-\n-import com.fasterxml.jackson.annotation.JsonValue;\n-\n-import teammates.common.util.Const;\n-\n-/**\n- * Constant values for all the different log types.\n- */\n-public enum LogTypes {\n-    // CHECKSTYLE.OFF:JavadocVariable\n-    FEEDBACK_SESSION_ACCESS(Const.FeedbackSessionLogTypes.ACCESS),\n-    FEEDBACK_SESSION_SUBMISSION(Const.FeedbackSessionLogTypes.SUBMISSION);\n-    // CHECKSTYLE.ON:JavadocVariable\n-\n-    @JsonValue\n-    private final String value;\n-\n-    LogTypes(String value) {\n-        this.value = value;\n-    }\n-\n-    public String getValue() {\n-        return value;\n-    }\n-\n-}"
  },
  {
    "sha": "f3aeddd09bbcb5c0c8f85e8ea8e8f323e21d727e",
    "filename": "src/main/java/teammates/ui/output/FeedbackSessionLog.java",
    "status": "removed",
    "additions": 0,
    "deletions": 26,
    "changes": 26,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/8bc9e64b3c6a6fa45e5fc6b78e991912cbfe6c22/src/main/java/teammates/ui/output/FeedbackSessionLog.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/8bc9e64b3c6a6fa45e5fc6b78e991912cbfe6c22/src/main/java/teammates/ui/output/FeedbackSessionLog.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/ui/output/FeedbackSessionLog.java?ref=8bc9e64b3c6a6fa45e5fc6b78e991912cbfe6c22",
    "patch": "@@ -1,26 +0,0 @@\n-package teammates.ui.output;\n-\n-import java.util.List;\n-\n-/**\n- * The response log of a single feedback session.\n- */\n-public class FeedbackSessionLog {\n-    private final FeedbackSessionData feedbackSessionData;\n-\n-    private final List<FeedbackSessionLogEntry> feedbackSessionLogEntries;\n-\n-    public FeedbackSessionLog(FeedbackSessionData feedbackSessionData,\n-                              List<FeedbackSessionLogEntry> feedbackSessionLogEntries) {\n-        this.feedbackSessionData = feedbackSessionData;\n-        this.feedbackSessionLogEntries = feedbackSessionLogEntries;\n-    }\n-\n-    public FeedbackSessionData getFeedbackSessionData() {\n-        return feedbackSessionData;\n-    }\n-\n-    public List<FeedbackSessionLogEntry> getStudentResponseAccessLogs() {\n-        return feedbackSessionLogEntries;\n-    }\n-}"
  },
  {
    "sha": "b25098725fee9d010d09d8c38f6cbe37b470965a",
    "filename": "src/main/java/teammates/ui/output/FeedbackSessionLogData.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/output/FeedbackSessionLogData.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/output/FeedbackSessionLogData.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/ui/output/FeedbackSessionLogData.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -0,0 +1,41 @@\n+package teammates.ui.output;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import teammates.common.datatransfer.FeedbackSessionLogEntry;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n+\n+/**\n+ * The response log of a single feedback session.\n+ */\n+public class FeedbackSessionLogData {\n+    private final FeedbackSessionData feedbackSessionData;\n+    private final List<FeedbackSessionLogEntryData> feedbackSessionLogEntries;\n+\n+    public FeedbackSessionLogData(FeedbackSessionData feedbackSessionData,\n+                              List<FeedbackSessionLogEntryData> feedbackSessionLogEntries) {\n+        this.feedbackSessionData = feedbackSessionData;\n+        this.feedbackSessionLogEntries = feedbackSessionLogEntries;\n+    }\n+\n+    public FeedbackSessionLogData(FeedbackSessionAttributes feedbackSession, List<FeedbackSessionLogEntry> logEntries) {\n+        FeedbackSessionData fsData = new FeedbackSessionData(feedbackSession);\n+        List<FeedbackSessionLogEntryData> fsLogEntryDatas = logEntries.stream()\n+                .map(FeedbackSessionLogEntryData::new)\n+                .collect(Collectors.toList());\n+        this.feedbackSessionData = fsData;\n+        this.feedbackSessionLogEntries = fsLogEntryDatas;\n+    }\n+\n+    public FeedbackSessionData getFeedbackSessionData() {\n+        return feedbackSessionData;\n+    }\n+\n+    /**\n+     * Returns all feedback session log entries.\n+     */\n+    public List<FeedbackSessionLogEntryData> getfeedbackSessionLogEntries() {\n+        return feedbackSessionLogEntries;\n+    }\n+}"
  },
  {
    "sha": "f6cbbe43cc04b4ab8273dc35959afee989934819",
    "filename": "src/main/java/teammates/ui/output/FeedbackSessionLogEntry.java",
    "status": "removed",
    "additions": 0,
    "deletions": 33,
    "changes": 33,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/8bc9e64b3c6a6fa45e5fc6b78e991912cbfe6c22/src/main/java/teammates/ui/output/FeedbackSessionLogEntry.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/8bc9e64b3c6a6fa45e5fc6b78e991912cbfe6c22/src/main/java/teammates/ui/output/FeedbackSessionLogEntry.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/ui/output/FeedbackSessionLogEntry.java?ref=8bc9e64b3c6a6fa45e5fc6b78e991912cbfe6c22",
    "patch": "@@ -1,33 +0,0 @@\n-package teammates.ui.output;\n-\n-/**\n- * The session log of a student for a single feedback session.\n- */\n-public class FeedbackSessionLogEntry {\n-    private final StudentData studentData;\n-\n-    private final String feedbackSessionLogType;\n-\n-    private final long timestamp;\n-\n-    public FeedbackSessionLogEntry(StudentData studentData,\n-                                   String feedbackSessionLogType,\n-                                   long timestamp) {\n-        this.studentData = studentData;\n-        this.feedbackSessionLogType = feedbackSessionLogType;\n-        this.timestamp = timestamp;\n-    }\n-\n-    public StudentData getStudentData() {\n-        return studentData;\n-    }\n-\n-    public String getFeedbackSessionLogType() {\n-        // TODO: change type from String to LogType\n-        return feedbackSessionLogType;\n-    }\n-\n-    public long getTimestamp() {\n-        return timestamp;\n-    }\n-}"
  },
  {
    "sha": "fd07ac04306d135eaf159367b848fae0d2ce56f3",
    "filename": "src/main/java/teammates/ui/output/FeedbackSessionLogEntryData.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/output/FeedbackSessionLogEntryData.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/output/FeedbackSessionLogEntryData.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/ui/output/FeedbackSessionLogEntryData.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -0,0 +1,36 @@\n+package teammates.ui.output;\n+\n+import teammates.common.datatransfer.FeedbackSessionLogEntry;\n+import teammates.common.datatransfer.attributes.StudentAttributes;\n+import teammates.ui.constants.LogType;\n+\n+/**\n+ * The session log of a student for a single feedback session.\n+ */\n+public class FeedbackSessionLogEntryData {\n+    private final StudentData studentData;\n+    private final LogType feedbackSessionLogType;\n+    private final long timestamp;\n+\n+    public FeedbackSessionLogEntryData(FeedbackSessionLogEntry logEntry) {\n+        StudentAttributes student = logEntry.getStudent();\n+        StudentData studentData = new StudentData(student);\n+        LogType logType = LogType.valueOfLabel(logEntry.getFeedbackSessionLogType());\n+        long timestamp = logEntry.getTimestamp();\n+        this.studentData = studentData;\n+        this.feedbackSessionLogType = logType;\n+        this.timestamp = timestamp;\n+    }\n+\n+    public StudentData getStudentData() {\n+        return studentData;\n+    }\n+\n+    public LogType getFeedbackSessionLogType() {\n+        return feedbackSessionLogType;\n+    }\n+\n+    public long getTimestamp() {\n+        return timestamp;\n+    }\n+}"
  },
  {
    "sha": "4f4a9e9b47cebe4962124900333ad100cfaf11bf",
    "filename": "src/main/java/teammates/ui/output/FeedbackSessionLogsData.java",
    "status": "modified",
    "additions": 19,
    "deletions": 3,
    "changes": 22,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/output/FeedbackSessionLogsData.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/output/FeedbackSessionLogsData.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/ui/output/FeedbackSessionLogsData.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -1,19 +1,35 @@\n package teammates.ui.output;\n \n import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import teammates.common.datatransfer.FeedbackSessionLogEntry;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n \n /**\n  * The API output format for logs on all feedback sessions in a course.\n  */\n public class FeedbackSessionLogsData extends ApiOutput {\n \n-    private final List<FeedbackSessionLog> feedbackSessionLogs;\n+    private final List<FeedbackSessionLogData> feedbackSessionLogs;\n \n-    public FeedbackSessionLogsData(List<FeedbackSessionLog> feedbackSessionLogs) {\n+    public FeedbackSessionLogsData(List<FeedbackSessionLogData> feedbackSessionLogs) {\n         this.feedbackSessionLogs = feedbackSessionLogs;\n     }\n \n-    public List<FeedbackSessionLog> getFeedbackResponseLogs() {\n+    public FeedbackSessionLogsData(Map<FeedbackSessionAttributes, List<FeedbackSessionLogEntry>> groupedEntries) {\n+        List<FeedbackSessionLogData> fsLogDatas = groupedEntries.entrySet().stream()\n+                .map(entry -> {\n+                    FeedbackSessionAttributes feedbackSession = entry.getKey();\n+                    List<FeedbackSessionLogEntry> logEntries = entry.getValue();\n+                    return new FeedbackSessionLogData(feedbackSession, logEntries);\n+                })\n+                .collect(Collectors.toList());\n+        this.feedbackSessionLogs = fsLogDatas;\n+    }\n+\n+    public List<FeedbackSessionLogData> getFeedbackSessionLogs() {\n         return feedbackSessionLogs;\n     }\n }"
  },
  {
    "sha": "ea480ad2624037b5de3362cd47e4bd4eaec93932",
    "filename": "src/main/java/teammates/ui/webapi/ActionFactory.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/webapi/ActionFactory.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/webapi/ActionFactory.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/ui/webapi/ActionFactory.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -119,7 +119,7 @@\n         map(ResourceURIs.INSTRUCTOR, POST, CreateInstructorAction.class);\n \n         // Logging and tracking\n-        map(ResourceURIs.TRACK_SESSION, GET, CreateFeedbackSessionLogAction.class);\n+        map(ResourceURIs.TRACK_SESSION, POST, CreateFeedbackSessionLogAction.class);\n         map(ResourceURIs.SESSION_LOGS, GET, GetFeedbackSessionLogsAction.class);\n \n         // Cron jobs; use GET request"
  },
  {
    "sha": "56157a758977235d83074a98cd1f7ed8b553b203",
    "filename": "src/main/java/teammates/ui/webapi/CreateFeedbackSessionLogAction.java",
    "status": "modified",
    "additions": 17,
    "deletions": 2,
    "changes": 19,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/webapi/CreateFeedbackSessionLogAction.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/webapi/CreateFeedbackSessionLogAction.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/ui/webapi/CreateFeedbackSessionLogAction.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -1,9 +1,14 @@\n package teammates.ui.webapi;\n \n+import org.apache.http.HttpStatus;\n+\n+import teammates.common.exception.LogServiceException;\n+import teammates.common.util.Const;\n+\n /**\n  * Action: creates a feedback session log for the purposes of tracking and auditing.\n  */\n-class CreateFeedbackSessionLogAction extends BasicFeedbackSubmissionAction {\n+class CreateFeedbackSessionLogAction extends Action {\n \n     @Override\n     AuthType getMinAuthLevel() {\n@@ -17,7 +22,17 @@ void checkSpecificAccessControl() {\n \n     @Override\n     JsonResult execute() {\n-        // TODO: implement the logic for creating a feedback session log\n+        String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n+        String fsName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n+        String fslType = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_LOG_TYPE);\n+        String studentEmail = getNonNullRequestParamValue(Const.ParamsNames.STUDENT_EMAIL);\n+\n+        try {\n+            logsProcessor.createFeedbackSessionLog(courseId, studentEmail, fsName, fslType);\n+        } catch (LogServiceException e) {\n+            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);\n+        }\n+\n         return new JsonResult(\"Successful\");\n     }\n }"
  },
  {
    "sha": "504f8a9c28ec506a3cc8e667d2de2f1e0f054e3a",
    "filename": "src/main/java/teammates/ui/webapi/GetFeedbackSessionLogsAction.java",
    "status": "modified",
    "additions": 53,
    "deletions": 2,
    "changes": 55,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/webapi/GetFeedbackSessionLogsAction.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/main/java/teammates/ui/webapi/GetFeedbackSessionLogsAction.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/main/java/teammates/ui/webapi/GetFeedbackSessionLogsAction.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -1,10 +1,22 @@\n package teammates.ui.webapi;\n \n+import java.time.Instant;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.http.HttpStatus;\n+\n+import teammates.common.datatransfer.FeedbackSessionLogEntry;\n import teammates.common.datatransfer.attributes.CourseAttributes;\n+import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;\n import teammates.common.datatransfer.attributes.InstructorAttributes;\n import teammates.common.exception.EntityDoesNotExistException;\n import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.exception.LogServiceException;\n import teammates.common.util.Const;\n+import teammates.ui.output.FeedbackSessionLogsData;\n \n /**\n  * Action: gets the feedback session logs of feedback sessions of a course.\n@@ -30,7 +42,46 @@ void checkSpecificAccessControl() {\n     }\n \n     @Override\n-    ActionResult execute() {\n-        return null;\n+    JsonResult execute() {\n+        String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n+        if (logic.getCourse(courseId) == null) {\n+            return new JsonResult(\"Course not found\", HttpStatus.SC_NOT_FOUND);\n+        }\n+        String email = getRequestParamValue(Const.ParamsNames.STUDENT_EMAIL);\n+        if (email != null && logic.getStudentForEmail(courseId, email) == null) {\n+            return new JsonResult(\"Student not found\", HttpStatus.SC_NOT_FOUND);\n+        }\n+        String startTimeStr = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME);\n+        String endTimeStr = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_LOG_ENDTIME);\n+        Instant startTime = Instant.ofEpochMilli(Long.parseLong(startTimeStr));\n+        Instant endTime = Instant.ofEpochMilli(Long.parseLong(endTimeStr));\n+        // TODO: we might want to impose limits on the time range from startTime to endTime\n+\n+        try {\n+            List<FeedbackSessionLogEntry> fsLogEntries =\n+                    logsProcessor.getFeedbackSessionLogs(courseId, email, startTime, endTime);\n+            Map<FeedbackSessionAttributes, List<FeedbackSessionLogEntry>> groupedEntries =\n+                    groupFeedbackSessionLogEntries(courseId, fsLogEntries);\n+            FeedbackSessionLogsData fslData = new FeedbackSessionLogsData(groupedEntries);\n+            return new JsonResult(fslData);\n+        } catch (LogServiceException e) {\n+            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);\n+        }\n+    }\n+\n+    private Map<FeedbackSessionAttributes, List<FeedbackSessionLogEntry>> groupFeedbackSessionLogEntries(\n+            String courseId, List<FeedbackSessionLogEntry> fsLogEntries) {\n+        List<FeedbackSessionAttributes> feedbackSessions = logic.getFeedbackSessionsForCourse(courseId);\n+        Map<FeedbackSessionAttributes, List<FeedbackSessionLogEntry>> groupedEntries = new HashMap<>();\n+        for (FeedbackSessionAttributes feedbackSession : feedbackSessions) {\n+            groupedEntries.put(feedbackSession, new ArrayList<>());\n+        }\n+        for (FeedbackSessionLogEntry fsLogEntry : fsLogEntries) {\n+            FeedbackSessionAttributes fs = fsLogEntry.getFeedbackSession();\n+            if (groupedEntries.get(fs) != null) {\n+                groupedEntries.get(fs).add(fsLogEntry);\n+            }\n+        }\n+        return groupedEntries;\n     }\n }"
  },
  {
    "sha": "6d709c566d2de1644c7db64a7c069b0aaf7745f2",
    "filename": "src/test/java/teammates/ui/webapi/CreateFeedbackSessionLogActionTest.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/test/java/teammates/ui/webapi/CreateFeedbackSessionLogActionTest.java",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/test/java/teammates/ui/webapi/CreateFeedbackSessionLogActionTest.java",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/test/java/teammates/ui/webapi/CreateFeedbackSessionLogActionTest.java?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -0,0 +1,32 @@\n+package teammates.ui.webapi;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.Const;\n+\n+/**\n+ * SUT: {@link CreateFeedbackSessionLogAction}.\n+ */\n+public class CreateFeedbackSessionLogActionTest extends BaseActionTest<CreateFeedbackSessionLogAction> {\n+    @Override\n+    protected String getActionUri() {\n+        return Const.ResourceURIs.TRACK_SESSION;\n+    }\n+\n+    @Override\n+    protected String getRequestMethod() {\n+        return POST;\n+    }\n+\n+    @Test\n+    @Override\n+    protected void testExecute() throws Exception {\n+        // TODO: test execute\n+    }\n+\n+    @Test\n+    @Override\n+    protected void testAccessControl() throws Exception {\n+        // TODO: test access control\n+    }\n+}"
  },
  {
    "sha": "1ab6dfae49cde69b09e12b03bed61fd415ff26c4",
    "filename": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/web/app/pages-session/session-submission-page/session-submission-page.component.ts",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/web/app/pages-session/session-submission-page/session-submission-page.component.ts",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/pages-session/session-submission-page/session-submission-page.component.ts?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -18,7 +18,7 @@ import { SimpleModalService } from '../../../services/simple-modal.service';\n import { StatusMessageService } from '../../../services/status-message.service';\n import { StudentService } from '../../../services/student.service';\n import { TimezoneService } from '../../../services/timezone.service';\n-import { LogTypes } from '../../../types/api-const';\n+import { LogType } from '../../../types/api-const';\n import {\n   AuthInfo,\n   FeedbackParticipantType,\n@@ -234,7 +234,7 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n             courseId: this.courseId,\n             feedbackSessionName: this.feedbackSessionName,\n             studentEmail: this.personEmail,\n-            logType: LogTypes.FEEDBACK_SESSION_ACCESS,\n+            logType: LogType.FEEDBACK_SESSION_ACCESS,\n           }).subscribe(() => {\n \n           }, () => {\n@@ -558,7 +558,7 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n       courseId: this.courseId,\n       feedbackSessionName: this.feedbackSessionName,\n       studentEmail: this.loggedInUser,\n-      logType: LogTypes.FEEDBACK_SESSION_SUBMISSION,\n+      logType: LogType.FEEDBACK_SESSION_SUBMISSION,\n     }).subscribe(() => {\n \n     }, () => {"
  },
  {
    "sha": "2dbca9d26d3b297c209c2333ccbbe864f48f0a5c",
    "filename": "src/web/services/log.service.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/web/services/log.service.ts",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150/src/web/services/log.service.ts",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/services/log.service.ts?ref=cbe2c7d9edce27a4b8c8a609a5839a8cbcde8150",
    "patch": "@@ -1,6 +1,6 @@\n import { Injectable } from '@angular/core';\n import { Observable } from 'rxjs';\n-import { LogTypes, ResourceEndpoints } from '../types/api-const';\n+import { LogType, ResourceEndpoints } from '../types/api-const';\n import { HttpRequestService } from './http-request.service';\n \n /**\n@@ -20,7 +20,7 @@ export class LogService {\n     courseId: string,\n     feedbackSessionName: string,\n     studentEmail: string,\n-    logType: LogTypes }): Observable<string> {\n+    logType: LogType }): Observable<string> {\n     const paramMap: Record<string, string> = {\n       courseid: queryParams.courseId,\n       fsname: queryParams.feedbackSessionName,"
  }
]
