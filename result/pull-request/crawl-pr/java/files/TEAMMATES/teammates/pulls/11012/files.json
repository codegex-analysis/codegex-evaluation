[
  {
    "sha": "9ba8e4c29151e70f3811f83160d48bda290d8eac",
    "filename": "src/web/app/components/copy-course-modal/__snapshots__/copy-course-modal.component.spec.ts.snap",
    "status": "added",
    "additions": 6199,
    "deletions": 0,
    "changes": 6199,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/__snapshots__/copy-course-modal.component.spec.ts.snap",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/__snapshots__/copy-course-modal.component.spec.ts.snap",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/components/copy-course-modal/__snapshots__/copy-course-modal.component.spec.ts.snap?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c"
  },
  {
    "sha": "bf386394188a60bb98999b954242525b165e831f",
    "filename": "src/web/app/components/copy-course-modal/copy-course-modal-model.ts",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal-model.ts",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal-model.ts",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/components/copy-course-modal/copy-course-modal-model.ts?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -0,0 +1,11 @@\n+import { FeedbackSession } from '../../../types/api-output';\n+\n+/**\n+ * Result of {@link CopyCourseModalComponent}\n+ */\n+export interface CopyCourseModalResult {\n+  newCourseId: string;\n+  newCourseName: string;\n+  newTimeZone: string;\n+  chosenFeedbackSessionList: Set<FeedbackSession>;\n+}"
  },
  {
    "sha": "a217a09b39b3c2760a9db2b689be0cfd95abab2f",
    "filename": "src/web/app/components/copy-course-modal/copy-course-modal.component.html",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal.component.html",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal.component.html",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/components/copy-course-modal/copy-course-modal.component.html?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -0,0 +1,60 @@\n+<div class=\"modal-header\">\n+    <h5 class=\"modal-title\">\n+        <div>Copy course</div>\n+        <small>Copy from: [{{oldCourseId}}] <b>{{oldCourseName}}</b></small>\n+    </h5>\n+    <button type=\"button\" class=\"close\" (click)=\"activeModal.dismiss()\">\n+        <i class=\"fas fa-times\"></i>\n+    </button>\n+</div>\n+<div id=\"copy-course-modal\" class=\"modal-body\">\n+    <div class=\"row\">\n+        <div class=\"col-12\">\n+            <div>\n+                <label><b>New Course</b></label>\n+            </div>\n+            <div class=\"form-group\">\n+                <label>Course ID:</label>\n+                <input id=\"copy-course-id\" type=\"text\" class=\"form-control\" [(ngModel)]=\"newCourseId\" [maxlength]=\"COURSE_ID_MAX_LENGTH\">\n+                <span>{{ COURSE_ID_MAX_LENGTH - newCourseId.length }} characters left</span>\n+            </div>\n+            <div class=\"form-group\">\n+                <label>Course Name:</label>\n+                <input id=\"new-course-name\" class=\"form-control\" type=\"text\" [(ngModel)]=\"newCourseName\"\n+                       [maxlength]=\"64\"/>\n+                <span>{{ 64 - newCourseName.length }} characters left</span>\n+            </div>\n+            <div class=\"form-group\">\n+                <label><span ngbTooltip=\"You should not\n+                        need to change this as it is auto-detected based on your device settings. TEAMMATES automatically adjusts\n+                        to match the current time offset in your area, including clock changes due to daylight saving time.\">\n+                        Time Zone:</span></label>\n+                <div class=\"input-group\">\n+                    <select id=\"new-time-zone\" class=\"form-control\" [(ngModel)]=\"newTimezone\">\n+                        <option *ngFor=\"let timezone of timezones\" [value]=\"timezone.id\">{{ timezone.id }} ({{ timezone.offset }})</option>\n+                    </select>\n+                    <span class=\"input-group-btn\" style=\"margin-left: 5px;\">\n+                        <button class=\"btn btn-primary btn-margin-left\" (click)=\"onAutoDetectTimezone()\">Auto Detect</button>\n+                    </span>\n+                </div>\n+            </div>\n+            <div class=\"form-check\">\n+                <input type=\"checkbox\" name=\"copyCourseChooseSessions\" class=\"form-check-input\"\n+                       [checked]=\"chosenFeedbackSessions.size == sessionsInCourse.length\" (click)=\"toggleSelection()\">\n+                <span><b>Sessions to copy:</b></span>\n+            </div>\n+            <div class=\"form-check\" *ngFor=\"let session of sessionsInCourse\">\n+                <label class=\"form-check-label\">\n+                    <input type=\"checkbox\" name=\"copyCourseChooseSessions\" class=\"form-check-input\"\n+                           [checked]=\"chosenFeedbackSessions.has(session)\" (click)=\"select(session)\">\n+                    <span>{{ session.feedbackSessionName }}</span>\n+                </label>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+<div class=\"modal-footer\">\n+    <button type=\"button\" class=\"btn btn-light\" (click)=\"activeModal.dismiss()\">Cancel</button>\n+    <button id=\"btn-confirm-copy-course\" type=\"button\" class=\"btn btn-primary\" (click)=\"copy()\"\n+            [disabled]=\"!newCourseId || !newCourseName\">Copy</button>\n+</div>"
  },
  {
    "sha": "122a9eeedf6cc51a555fe961d5a45a7669bdf0ff",
    "filename": "src/web/app/components/copy-course-modal/copy-course-modal.component.scss",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal.component.scss",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal.component.scss",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/components/copy-course-modal/copy-course-modal.component.scss?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -0,0 +1,4 @@\n+.modal-selection * {\n+  margin-right: .75rem;\n+  padding: .1rem .5rem;\n+}"
  },
  {
    "sha": "5cff9375aae477f250a142d999d8b859950ffc04",
    "filename": "src/web/app/components/copy-course-modal/copy-course-modal.component.spec.ts",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal.component.spec.ts",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal.component.spec.ts",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/components/copy-course-modal/copy-course-modal.component.spec.ts?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -0,0 +1,60 @@\n+import { HttpClientTestingModule } from '@angular/common/http/testing';\n+import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n+import { FormsModule } from '@angular/forms';\n+import { By } from '@angular/platform-browser';\n+import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n+import { CopyCourseModalComponent } from './copy-course-modal.component';\n+\n+describe('CopyCourseModalComponent', () => {\n+  let component: CopyCourseModalComponent;\n+  let fixture: ComponentFixture<CopyCourseModalComponent>;\n+\n+  beforeEach(async(() => {\n+    TestBed.configureTestingModule({\n+      declarations: [CopyCourseModalComponent],\n+      imports: [\n+        HttpClientTestingModule,\n+        FormsModule,\n+      ],\n+      providers: [NgbActiveModal],\n+    })\n+    .compileComponents();\n+  }));\n+\n+  beforeEach(() => {\n+    fixture = TestBed.createComponent(CopyCourseModalComponent);\n+    component = fixture.componentInstance;\n+    fixture.detectChanges();\n+  });\n+\n+  it('should create', () => {\n+    expect(component).toBeTruthy();\n+  });\n+\n+  it('should snap with default fields', () => {\n+    expect(fixture).toMatchSnapshot();\n+  });\n+\n+  it('should snap with some course id', () => {\n+    component.newCourseId = 'Test02';\n+    fixture.detectChanges();\n+    expect(fixture).toMatchSnapshot();\n+  });\n+\n+  it('should enable copy button after new courseId is provided', () => {\n+    component.newCourseId = 'Test02';\n+    component.newCourseName = 'TestName02';\n+    fixture.detectChanges();\n+    const copyButton: any = fixture.debugElement.query(By.css('#btn-confirm-copy-course'));\n+    expect(copyButton.nativeElement.disabled).toBeFalsy();\n+  });\n+\n+  it('should disable copy if courseId is empty', () => {\n+    component.newCourseId = '';\n+    component.newCourseName = 'TestName02';\n+    fixture.detectChanges();\n+    const copyButton: any = fixture.debugElement.query(By.css('#btn-confirm-copy-course'));\n+    expect(copyButton.nativeElement.disabled).toBeTruthy();\n+  });\n+\n+});"
  },
  {
    "sha": "e1c331046ad5fa148ef9b8af6c9e6d9edec76082",
    "filename": "src/web/app/components/copy-course-modal/copy-course-modal.component.ts",
    "status": "added",
    "additions": 104,
    "deletions": 0,
    "changes": 104,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal.component.ts",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal.component.ts",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/components/copy-course-modal/copy-course-modal.component.ts?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -0,0 +1,104 @@\n+import { Component, Input, OnInit } from '@angular/core';\n+import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n+import { StatusMessageService } from '../../../services/status-message.service';\n+import { TimezoneService } from '../../../services/timezone.service';\n+import { FeedbackSession } from '../../../types/api-output';\n+import { COURSE_ID_MAX_LENGTH } from '../../../types/field-validator';\n+\n+interface Timezone {\n+  id: string;\n+  offset: string;\n+}\n+\n+const formatTwoDigits: Function = (n: number): string => {\n+  if (n < 10) {\n+    return `0${n}`;\n+  }\n+  return String(n);\n+};\n+\n+/**\n+ * Copy current course modal.\n+ */\n+@Component({\n+  selector: 'tm-copy-course-modal',\n+  templateUrl: './copy-course-modal.component.html',\n+  styleUrls: ['./copy-course-modal.component.scss'],\n+})\n+export class CopyCourseModalComponent implements OnInit {\n+\n+  // const\n+  COURSE_ID_MAX_LENGTH: number = COURSE_ID_MAX_LENGTH;\n+\n+  @Input()\n+  sessionsInCourse: FeedbackSession[] = [];\n+\n+  timezones: Timezone[] = [];\n+  newTimezone: string = '';\n+  newCourseId: string = '';\n+  newCourseName: string = '';\n+  oldCourseId: string = '';\n+  oldCourseName: string = '';\n+\n+  chosenFeedbackSessions: Set<FeedbackSession> = new Set<FeedbackSession>();\n+\n+  constructor(public activeModal: NgbActiveModal,\n+              private statusMessageService: StatusMessageService,\n+              private timezoneService: TimezoneService) {}\n+\n+  ngOnInit(): void {\n+    for (const [id, offset] of Object.entries(this.timezoneService.getTzOffsets())) {\n+      const hourOffset: number = Math.floor(Math.abs(offset) / 60);\n+      const minOffset: number = Math.abs(offset) % 60;\n+      const sign: string = offset < 0 ? '-' : '+';\n+      this.timezones.push({\n+        id,\n+        offset: offset === 0 ? 'UTC' : `UTC ${sign}${formatTwoDigits(hourOffset)}:${formatTwoDigits(minOffset)}`,\n+      });\n+    }\n+    this.newTimezone = this.timezoneService.guessTimezone();\n+  }\n+\n+  /**\n+   * Fires the copy event.\n+   */\n+  copy(): void {\n+    if (!this.newCourseId || !this.newCourseName) {\n+      this.statusMessageService.showErrorToast(\n+          'Please make sure you have filled in both Course ID and Name before adding the course!');\n+      return;\n+    }\n+    this.activeModal.close({\n+      newCourseId: this.newCourseId,\n+      newCourseName: this.newCourseName,\n+      newTimeZone: this.newTimezone,\n+      chosenFeedbackSessionList: Array.from(this.chosenFeedbackSessions),\n+    });\n+  }\n+\n+  /**\n+   * Toggles selection of course to copy to in set.\n+   */\n+  select(session: FeedbackSession): void {\n+    this.chosenFeedbackSessions.has(session) ? this.chosenFeedbackSessions.delete(session) :\n+        this.chosenFeedbackSessions.add(session);\n+  }\n+\n+  /**\n+   * Clear selected sessions\n+   */\n+  toggleSelection(): void {\n+    if (this.chosenFeedbackSessions.size !== this.sessionsInCourse.length) {\n+      this.chosenFeedbackSessions = new Set(this.sessionsInCourse);\n+    } else {\n+      this.chosenFeedbackSessions = new Set<FeedbackSession>();\n+    }\n+  }\n+\n+  /**\n+   * Auto-detects timezone for instructor.\n+   */\n+  onAutoDetectTimezone(): void {\n+    this.newTimezone = this.timezoneService.guessTimezone();\n+  }\n+}"
  },
  {
    "sha": "aed0d2712243ae79477cc01675b6a4163e545dc1",
    "filename": "src/web/app/components/copy-course-modal/copy-course-modal.module.ts",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal.module.ts",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/components/copy-course-modal/copy-course-modal.module.ts",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/components/copy-course-modal/copy-course-modal.module.ts?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -0,0 +1,24 @@\n+import { CommonModule } from '@angular/common';\n+import { NgModule } from '@angular/core';\n+import { FormsModule } from '@angular/forms';\n+import { CopyCourseModalComponent } from './copy-course-modal.component';\n+\n+/**\n+ * Module for copy current course modal.\n+ */\n+@NgModule({\n+  declarations: [\n+    CopyCourseModalComponent,\n+  ],\n+  imports: [\n+    CommonModule,\n+    FormsModule,\n+  ],\n+  entryComponents: [\n+    CopyCourseModalComponent,\n+  ],\n+  exports: [\n+    CopyCourseModalComponent,\n+  ],\n+})\n+export class CopyCourseModalModule { }"
  },
  {
    "sha": "f0f5e42353cfc456627ef3d06a159756231edd50",
    "filename": "src/web/app/pages-instructor/instructor-courses-page/__snapshots__/instructor-courses-page.component.spec.ts.snap",
    "status": "modified",
    "additions": 85,
    "deletions": 0,
    "changes": 85,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/__snapshots__/instructor-courses-page.component.spec.ts.snap",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/__snapshots__/instructor-courses-page.component.spec.ts.snap",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/pages-instructor/instructor-courses-page/__snapshots__/instructor-courses-page.component.spec.ts.snap?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -12,15 +12,19 @@ exports[`InstructorCoursesPageComponent should snap when archived courses are ex\n   archivedTableSortOrder={[Function Number]}\n   canDeleteAll={[Function Boolean]}\n   canRestoreAll={[Function Boolean]}\n+  courseAdded={[Function EventEmitter]}\n   courseService={[Function CourseService]}\n   courseStats={[Function Object]}\n   deletedTableSortBy={[Function Number]}\n   deletedTableSortOrder={[Function Number]}\n+  feedbackQuestionsService={[Function FeedbackQuestionsService]}\n+  feedbackSessionsService={[Function FeedbackSessionsService]}\n   hasLoadingFailed=\"false\"\n   isAddNewCourseFormExpanded=\"false\"\n   isArchivedCourseExpanded={[Function Boolean]}\n   isLoading={[Function Boolean]}\n   isRecycleBinExpanded=\"false\"\n+  ngbModal={[Function NgbModal]}\n   route={[Function ActivatedRoute]}\n   simpleModalService={[Function SimpleModalService]}\n   softDeletedCourses={[Function Array]}\n@@ -262,15 +266,19 @@ exports[`InstructorCoursesPageComponent should snap when courses are still loadi\n   archivedTableSortOrder={[Function Number]}\n   canDeleteAll={[Function Boolean]}\n   canRestoreAll={[Function Boolean]}\n+  courseAdded={[Function EventEmitter]}\n   courseService={[Function CourseService]}\n   courseStats={[Function Object]}\n   deletedTableSortBy={[Function Number]}\n   deletedTableSortOrder={[Function Number]}\n+  feedbackQuestionsService={[Function FeedbackQuestionsService]}\n+  feedbackSessionsService={[Function FeedbackSessionsService]}\n   hasLoadingFailed=\"false\"\n   isAddNewCourseFormExpanded=\"false\"\n   isArchivedCourseExpanded=\"false\"\n   isLoading={[Function Boolean]}\n   isRecycleBinExpanded=\"false\"\n+  ngbModal={[Function NgbModal]}\n   route={[Function ActivatedRoute]}\n   simpleModalService={[Function SimpleModalService]}\n   softDeletedCourses={[Function Array]}\n@@ -325,15 +333,19 @@ exports[`InstructorCoursesPageComponent should snap when it is undeletable and u\n   archivedTableSortOrder={[Function Number]}\n   canDeleteAll=\"false\"\n   canRestoreAll=\"false\"\n+  courseAdded={[Function EventEmitter]}\n   courseService={[Function CourseService]}\n   courseStats={[Function Object]}\n   deletedTableSortBy={[Function Number]}\n   deletedTableSortOrder={[Function Number]}\n+  feedbackQuestionsService={[Function FeedbackQuestionsService]}\n+  feedbackSessionsService={[Function FeedbackSessionsService]}\n   hasLoadingFailed=\"false\"\n   isAddNewCourseFormExpanded=\"false\"\n   isArchivedCourseExpanded=\"false\"\n   isLoading=\"false\"\n   isRecycleBinExpanded=\"false\"\n+  ngbModal={[Function NgbModal]}\n   route={[Function ActivatedRoute]}\n   simpleModalService={[Function SimpleModalService]}\n   softDeletedCourses={[Function Array]}\n@@ -536,6 +548,17 @@ exports[`InstructorCoursesPageComponent should snap when it is undeletable and u\n                       >\n                          Edit \n                       </a>\n+                      \n+                      <button\n+                        class=\"btn btn-primary btn-sm dropdown-item clickable\"\n+                        container=\"body\"\n+                        id=\"btn-copy-0\"\n+                        ngbtooltip=\"Copy the course and its corresponding sessions\"\n+                        placement=\"left\"\n+                      >\n+                         Copy \n+                      </button>\n+                      \n                       <button\n                         class=\"btn btn-primary btn-sm dropdown-item clickable\"\n                         container=\"body\"\n@@ -649,6 +672,7 @@ exports[`InstructorCoursesPageComponent should snap when it is undeletable and u\n                       >\n                          Edit \n                       </a>\n+                      \n                       <button\n                         class=\"btn btn-primary btn-sm dropdown-item clickable\"\n                         container=\"body\"\n@@ -797,15 +821,19 @@ exports[`InstructorCoursesPageComponent should snap when new course form is expa\n   archivedTableSortOrder={[Function Number]}\n   canDeleteAll={[Function Boolean]}\n   canRestoreAll={[Function Boolean]}\n+  courseAdded={[Function EventEmitter]}\n   courseService={[Function CourseService]}\n   courseStats={[Function Object]}\n   deletedTableSortBy={[Function Number]}\n   deletedTableSortOrder={[Function Number]}\n+  feedbackQuestionsService={[Function FeedbackQuestionsService]}\n+  feedbackSessionsService={[Function FeedbackSessionsService]}\n   hasLoadingFailed=\"false\"\n   isAddNewCourseFormExpanded={[Function Boolean]}\n   isArchivedCourseExpanded=\"false\"\n   isLoading={[Function Boolean]}\n   isRecycleBinExpanded=\"false\"\n+  ngbModal={[Function NgbModal]}\n   route={[Function ActivatedRoute]}\n   simpleModalService={[Function SimpleModalService]}\n   softDeletedCourses={[Function Array]}\n@@ -848,6 +876,27 @@ exports[`InstructorCoursesPageComponent should snap when new course form is expa\n             </span>\n           </button>\n         </div>\n+        <div\n+          class=\"row\"\n+        >\n+          <div\n+            class=\"col-md-6\"\n+          >\n+            <div\n+              class=\"row align-items-center\"\n+            >\n+              <div\n+                class=\"col-md-6\"\n+              >\n+                <h5\n+                  class=\"text-center\"\n+                >\n+                  Create new Course\n+                </h5>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n         <div\n           class=\"card-body text-center\"\n         >\n@@ -4513,15 +4562,19 @@ exports[`InstructorCoursesPageComponent should snap with all courses in course s\n   archivedTableSortOrder={[Function Number]}\n   canDeleteAll={[Function Boolean]}\n   canRestoreAll={[Function Boolean]}\n+  courseAdded={[Function EventEmitter]}\n   courseService={[Function CourseService]}\n   courseStats={[Function Object]}\n   deletedTableSortBy={[Function Number]}\n   deletedTableSortOrder={[Function Number]}\n+  feedbackQuestionsService={[Function FeedbackQuestionsService]}\n+  feedbackSessionsService={[Function FeedbackSessionsService]}\n   hasLoadingFailed=\"false\"\n   isAddNewCourseFormExpanded=\"false\"\n   isArchivedCourseExpanded=\"false\"\n   isLoading=\"false\"\n   isRecycleBinExpanded=\"false\"\n+  ngbModal={[Function NgbModal]}\n   route={[Function ActivatedRoute]}\n   simpleModalService={[Function SimpleModalService]}\n   softDeletedCourses={[Function Array]}\n@@ -4724,6 +4777,17 @@ exports[`InstructorCoursesPageComponent should snap with all courses in course s\n                       >\n                          Edit \n                       </a>\n+                      \n+                      <button\n+                        class=\"btn btn-primary btn-sm dropdown-item clickable\"\n+                        container=\"body\"\n+                        id=\"btn-copy-0\"\n+                        ngbtooltip=\"Copy the course and its corresponding sessions\"\n+                        placement=\"left\"\n+                      >\n+                         Copy \n+                      </button>\n+                      \n                       <button\n                         class=\"btn btn-primary btn-sm dropdown-item clickable\"\n                         container=\"body\"\n@@ -4837,6 +4901,7 @@ exports[`InstructorCoursesPageComponent should snap with all courses in course s\n                       >\n                          Edit \n                       </a>\n+                      \n                       <button\n                         class=\"btn btn-primary btn-sm dropdown-item clickable\"\n                         container=\"body\"\n@@ -4991,15 +5056,19 @@ exports[`InstructorCoursesPageComponent should snap with default fields 1`] = `\n   archivedTableSortOrder={[Function Number]}\n   canDeleteAll={[Function Boolean]}\n   canRestoreAll={[Function Boolean]}\n+  courseAdded={[Function EventEmitter]}\n   courseService={[Function CourseService]}\n   courseStats={[Function Object]}\n   deletedTableSortBy={[Function Number]}\n   deletedTableSortOrder={[Function Number]}\n+  feedbackQuestionsService={[Function FeedbackQuestionsService]}\n+  feedbackSessionsService={[Function FeedbackSessionsService]}\n   hasLoadingFailed=\"false\"\n   isAddNewCourseFormExpanded=\"false\"\n   isArchivedCourseExpanded=\"false\"\n   isLoading={[Function Boolean]}\n   isRecycleBinExpanded=\"false\"\n+  ngbModal={[Function NgbModal]}\n   route={[Function ActivatedRoute]}\n   simpleModalService={[Function SimpleModalService]}\n   softDeletedCourses={[Function Array]}\n@@ -5054,15 +5123,19 @@ exports[`InstructorCoursesPageComponent should snap with no courses in course st\n   archivedTableSortOrder={[Function Number]}\n   canDeleteAll={[Function Boolean]}\n   canRestoreAll={[Function Boolean]}\n+  courseAdded={[Function EventEmitter]}\n   courseService={[Function CourseService]}\n   courseStats={[Function Object]}\n   deletedTableSortBy={[Function Number]}\n   deletedTableSortOrder={[Function Number]}\n+  feedbackQuestionsService={[Function FeedbackQuestionsService]}\n+  feedbackSessionsService={[Function FeedbackSessionsService]}\n   hasLoadingFailed=\"false\"\n   isAddNewCourseFormExpanded=\"false\"\n   isArchivedCourseExpanded=\"false\"\n   isLoading=\"false\"\n   isRecycleBinExpanded=\"false\"\n+  ngbModal={[Function NgbModal]}\n   route={[Function ActivatedRoute]}\n   simpleModalService={[Function SimpleModalService]}\n   softDeletedCourses={[Function Array]}\n@@ -5286,6 +5359,17 @@ exports[`InstructorCoursesPageComponent should snap with no courses in course st\n                       >\n                          Edit \n                       </a>\n+                      \n+                      <button\n+                        class=\"btn btn-primary btn-sm dropdown-item clickable\"\n+                        container=\"body\"\n+                        id=\"btn-copy-0\"\n+                        ngbtooltip=\"Copy the course and its corresponding sessions\"\n+                        placement=\"left\"\n+                      >\n+                         Copy \n+                      </button>\n+                      \n                       <button\n                         class=\"btn btn-primary btn-sm dropdown-item clickable\"\n                         container=\"body\"\n@@ -5420,6 +5504,7 @@ exports[`InstructorCoursesPageComponent should snap with no courses in course st\n                       >\n                          Edit \n                       </a>\n+                      \n                       <button\n                         class=\"btn btn-primary btn-sm dropdown-item clickable\"\n                         container=\"body\""
  },
  {
    "sha": "a44782abfd93dad4dff1235212464bb8004e3351",
    "filename": "src/web/app/pages-instructor/instructor-courses-page/add-course-form/__snapshots__/add-course-form.component.spec.ts.snap",
    "status": "modified",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/add-course-form/__snapshots__/add-course-form.component.spec.ts.snap",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/add-course-form/__snapshots__/add-course-form.component.spec.ts.snap",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/pages-instructor/instructor-courses-page/add-course-form/__snapshots__/add-course-form.component.spec.ts.snap?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -32,6 +32,27 @@ exports[`AddCourseFormComponent should snap when not enabled 1`] = `\n         </span>\n       </button>\n     </div>\n+    <div\n+      class=\"row\"\n+    >\n+      <div\n+        class=\"col-md-6\"\n+      >\n+        <div\n+          class=\"row align-items-center\"\n+        >\n+          <div\n+            class=\"col-md-6\"\n+          >\n+            <h5\n+              class=\"text-center\"\n+            >\n+              Create new Course\n+            </h5>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n     <div\n       class=\"card-body text-center\"\n     >\n@@ -171,6 +192,27 @@ exports[`AddCourseFormComponent should snap with default fields 1`] = `\n         </span>\n       </button>\n     </div>\n+    <div\n+      class=\"row\"\n+    >\n+      <div\n+        class=\"col-md-6\"\n+      >\n+        <div\n+          class=\"row align-items-center\"\n+        >\n+          <div\n+            class=\"col-md-6\"\n+          >\n+            <h5\n+              class=\"text-center\"\n+            >\n+              Create new Course\n+            </h5>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n     <div\n       class=\"card-body text-center\"\n     >"
  },
  {
    "sha": "612a8a0b6162bbc14a012105d32e1eecc25b031d",
    "filename": "src/web/app/pages-instructor/instructor-courses-page/add-course-form/add-course-form.component.html",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/add-course-form/add-course-form.component.html",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/add-course-form/add-course-form.component.html",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/pages-instructor/instructor-courses-page/add-course-form/add-course-form.component.html?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -4,6 +4,15 @@\n       <span aria-hidden=\"true\">&times;</span>\n     </button>\n   </div>\n+  <div class=\"row\" >\n+    <div class=\"col-md-6\">\n+      <div class=\"row align-items-center\">\n+        <div class=\"col-md-6\">\n+          <h5 class=\"text-center\">Create new Course</h5>\n+        </div>\n+      </div>\n+    </div>\n+  </div>\n   <div class=\"card-body text-center\">\n     <div class=\"form-group row\">\n       <label class=\"col-md-3 text-md-right col-form-label\">Course ID:</label>"
  },
  {
    "sha": "9ca217ecb5252879d7bfa727939fa9ea12fb69de",
    "filename": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.html",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.html",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.html",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.html?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -129,6 +129,10 @@ <h3>Active courses</h3>\n                           [queryParams]=\"{courseid: course.course.courseId}\">\n                     Edit\n                   </a>\n+                  <button id=\"btn-copy-{{ i }}\" class=\"btn btn-primary btn-sm dropdown-item clickable\" *ngIf=\"course.canModifyCourse\" (click)=\"onCopy(course.course.courseId, course.course.courseName, course.course.timeZone)\"\n+                          ngbTooltip=\"Copy the course and its corresponding sessions\" placement=\"left\" container=\"body\">\n+                    Copy\n+                  </button>\n                   <button id=\"btn-archive-{{ i }}\" class=\"btn btn-primary btn-sm dropdown-item clickable\" (click)=\"changeArchiveStatus(course.course.courseId, true)\"\n                           ngbTooltip=\"Archive the course so that it will not be shown in the home page any more (you can still access it from the 'Courses' tab)\" placement=\"left\" container=\"body\">\n                     Archive"
  },
  {
    "sha": "107872ce0e2bd78d73067323a8fb33f90a4ff27b",
    "filename": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts",
    "status": "modified",
    "additions": 144,
    "deletions": 7,
    "changes": 151,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -1,23 +1,28 @@\n-import { Component, OnInit } from '@angular/core';\n+import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n import { ActivatedRoute } from '@angular/router';\n-import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n-import { forkJoin, Observable } from 'rxjs';\n-import { finalize } from 'rxjs/operators';\n+import { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n+import { forkJoin, from, Observable, of } from 'rxjs';\n+import { concatMap, finalize, last, switchMap } from 'rxjs/operators';\n import { CourseService } from '../../../services/course.service';\n+import { FeedbackQuestionsService } from '../../../services/feedback-questions.service';\n+import { FeedbackSessionsService } from '../../../services/feedback-sessions.service';\n import { SimpleModalService } from '../../../services/simple-modal.service';\n import { StatusMessageService } from '../../../services/status-message.service';\n import { StudentService } from '../../../services/student.service';\n import { TableComparatorService } from '../../../services/table-comparator.service';\n import {\n   Course,\n   CourseArchive,\n-  Courses,\n+  Courses, FeedbackQuestion, FeedbackQuestions, FeedbackSession, FeedbackSessions,\n   JoinState,\n   MessageOutput,\n   Student,\n   Students,\n } from '../../../types/api-output';\n+import { Intent } from '../../../types/api-request';\n import { SortBy, SortOrder } from '../../../types/sort-properties';\n+import { CopyCourseModalResult } from '../../components/copy-course-modal/copy-course-modal-model';\n+import { CopyCourseModalComponent } from '../../components/copy-course-modal/copy-course-modal.component';\n import { SimpleModalType } from '../../components/simple-modal/simple-modal-type';\n import { collapseAnim } from '../../components/teammates-common/collapse-anim';\n import { ErrorMessageOutput } from '../../error-message-output';\n@@ -64,12 +69,18 @@ export class InstructorCoursesPageComponent implements OnInit {\n   isAddNewCourseFormExpanded: boolean = false;\n   isArchivedCourseExpanded: boolean = false;\n \n-  constructor(private route: ActivatedRoute,\n+  @Output() courseAdded: EventEmitter<void> = new EventEmitter<void>();\n+\n+  constructor(private ngbModal: NgbModal,\n+              private route: ActivatedRoute,\n               private statusMessageService: StatusMessageService,\n               private courseService: CourseService,\n               private studentService: StudentService,\n               private simpleModalService: SimpleModalService,\n-              private tableComparatorService: TableComparatorService) { }\n+              private tableComparatorService: TableComparatorService,\n+              private feedbackSessionsService: FeedbackSessionsService,\n+              private feedbackQuestionsService: FeedbackQuestionsService,\n+              ) {}\n \n   ngOnInit(): void {\n     this.route.queryParams.subscribe((queryParams: any) => {\n@@ -246,6 +257,132 @@ export class InstructorCoursesPageComponent implements OnInit {\n     });\n   }\n \n+  /**\n+   * Creates a copy of a course including all sessions.\n+   */\n+  onCopy(courseId: string, courseName: string, timeZone: string): void {\n+    if (!courseId) {\n+      this.statusMessageService.showErrorToast(`Course ${courseId} is not found!`);\n+      return;\n+    }\n+    this.feedbackSessionsService.getFeedbackSessionsForInstructor(courseId).subscribe((response: FeedbackSessions) => {\n+      const modalRef: NgbModalRef = this.ngbModal.open(CopyCourseModalComponent);\n+      modalRef.componentInstance.newCourseId = courseId;\n+      modalRef.componentInstance.oldCourseId = courseId;\n+      modalRef.componentInstance.newCourseName = courseName;\n+      modalRef.componentInstance.oldCourseName = courseName;\n+      modalRef.componentInstance.newTimeZone = timeZone;\n+      modalRef.componentInstance.sessionsInCourse = response.feedbackSessions;\n+      modalRef.componentInstance.chosenFeedbackSessions = new Set(response.feedbackSessions);\n+      modalRef.result.then((result: CopyCourseModalResult) => {\n+        this.isLoading = true;\n+        this.courseService.createCourse({\n+          courseName: result.newCourseName,\n+          timeZone: result.newTimeZone,\n+          courseId: result.newCourseId,\n+        }).subscribe(() => {\n+          this.statusMessageService.showSuccessToast('The course has been added.');\n+          this.courseService.getAllCoursesAsInstructor('active').subscribe((resp: Courses) => {\n+            const course: Course = resp.courses.find((c: Course) => c.courseId === result.newCourseId) as Course;\n+            this.activeCourses.push(this.getCourseModelFromCourse(course));\n+            this.activeCoursesDefaultSort();\n+            result.chosenFeedbackSessionList.forEach((session: FeedbackSession) => {\n+              this.copyFeedbackSession(session, session.feedbackSessionName, result.newCourseId).subscribe();\n+            });\n+            this.isLoading = false;\n+          });\n+        }, (resp: ErrorMessageOutput) => {\n+          this.statusMessageService.showErrorToast(resp.error.message);\n+          this.isLoading = false;\n+          this.hasLoadingFailed = true;\n+        });\n+      }, () => {});\n+    }, (resp: ErrorMessageOutput) => {\n+      this.statusMessageService.showErrorToast(resp.error.message);\n+    });\n+  }\n+\n+  /**\n+   * Gets a CourseModel from courseID\n+   */\n+  private getCourseModelFromCourse(course: Course): CourseModel {\n+    let canModifyCourse: boolean = false;\n+    let canModifyStudent: boolean = false;\n+    if (course.privileges) {\n+      canModifyCourse = course.privileges.canModifyCourse;\n+      canModifyStudent = course.privileges.canModifyStudent;\n+    }\n+    const isLoadingCourseStats: boolean = false;\n+    const courseModel: CourseModel = Object.assign({},\n+        { course, canModifyCourse, canModifyStudent, isLoadingCourseStats });\n+    return courseModel;\n+  }\n+\n+  /**\n+   * Copies a feedback session.\n+   */\n+  private copyFeedbackSession(fromFeedbackSession: FeedbackSession, newSessionName: string, newCourseId: string):\n+      Observable<FeedbackSession> {\n+    let createdFeedbackSession!: FeedbackSession;\n+    return this.feedbackSessionsService.createFeedbackSession(newCourseId, {\n+      feedbackSessionName: newSessionName,\n+      instructions: fromFeedbackSession.instructions,\n+\n+      submissionStartTimestamp: fromFeedbackSession.submissionStartTimestamp,\n+      submissionEndTimestamp: fromFeedbackSession.submissionEndTimestamp,\n+      gracePeriod: fromFeedbackSession.gracePeriod,\n+\n+      sessionVisibleSetting: fromFeedbackSession.sessionVisibleSetting,\n+      customSessionVisibleTimestamp: fromFeedbackSession.customSessionVisibleTimestamp,\n+\n+      responseVisibleSetting: fromFeedbackSession.responseVisibleSetting,\n+      customResponseVisibleTimestamp: fromFeedbackSession.customResponseVisibleTimestamp,\n+\n+      isClosingEmailEnabled: fromFeedbackSession.isClosingEmailEnabled,\n+      isPublishedEmailEnabled: fromFeedbackSession.isPublishedEmailEnabled,\n+    }).pipe(\n+      switchMap((feedbackSession: FeedbackSession) => {\n+        createdFeedbackSession = feedbackSession;\n+        return this.feedbackQuestionsService.getFeedbackQuestions({\n+          courseId: fromFeedbackSession.courseId,\n+          feedbackSessionName: fromFeedbackSession.feedbackSessionName,\n+          intent: Intent.FULL_DETAIL,\n+        });\n+      }),\n+      switchMap((response: FeedbackQuestions) => {\n+        if (response.questions.length === 0) {\n+          // no questions to copy\n+          return of(createdFeedbackSession);\n+        }\n+        return from(response.questions).pipe(\n+          concatMap((feedbackQuestion: FeedbackQuestion) => {\n+            return this.feedbackQuestionsService.createFeedbackQuestion(\n+              createdFeedbackSession.courseId, createdFeedbackSession.feedbackSessionName, {\n+                questionNumber: feedbackQuestion.questionNumber,\n+                questionBrief: feedbackQuestion.questionBrief,\n+                questionDescription: feedbackQuestion.questionDescription,\n+\n+                questionDetails: feedbackQuestion.questionDetails,\n+                questionType: feedbackQuestion.questionType,\n+\n+                giverType: feedbackQuestion.giverType,\n+                recipientType: feedbackQuestion.recipientType,\n+\n+                numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,\n+                customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo,\n+\n+                showResponsesTo: feedbackQuestion.showResponsesTo,\n+                showGiverNameTo: feedbackQuestion.showGiverNameTo,\n+                showRecipientNameTo: feedbackQuestion.showRecipientNameTo,\n+              });\n+          }),\n+          last(),\n+          switchMap(() => of(createdFeedbackSession)),\n+        );\n+      }),\n+    );\n+  }\n+\n   /**\n    * Moves an active/archived course to Recycle Bin.\n    */"
  },
  {
    "sha": "b6838ff6682857420259b06ef0b035a179d0278e",
    "filename": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.module.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.module.ts",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.module.ts",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.module.ts?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -4,6 +4,7 @@ import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n import { RouterModule, Routes } from '@angular/router';\n import { NgbDropdownModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\n import { AjaxLoadingModule } from '../../components/ajax-loading/ajax-loading.module';\n+import { CopyCourseModalModule } from '../../components/copy-course-modal/copy-course-modal.module';\n import { LoadingRetryModule } from '../../components/loading-retry/loading-retry.module';\n import { LoadingSpinnerModule } from '../../components/loading-spinner/loading-spinner.module';\n import { PanelChevronModule } from '../../components/panel-chevron/panel-chevron.module';\n@@ -41,6 +42,7 @@ const routes: Routes = [\n     LoadingRetryModule,\n     PanelChevronModule,\n     TeammatesRouterModule,\n+    CopyCourseModalModule,\n   ],\n })\n export class InstructorCoursesPageModule { }"
  },
  {
    "sha": "fac3a493ac13b9307c614f26accd5059160ce508",
    "filename": "src/web/types/field-validator.ts",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/TEAMMATES/teammates/blob/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/types/field-validator.ts",
    "raw_url": "https://github.com/TEAMMATES/teammates/raw/53a8f88835dab6a0cea789c5c4d2cb8412ed421c/src/web/types/field-validator.ts",
    "contents_url": "https://api.github.com/repos/TEAMMATES/teammates/contents/src/web/types/field-validator.ts?ref=53a8f88835dab6a0cea789c5c4d2cb8412ed421c",
    "patch": "@@ -4,3 +4,8 @@ import { ApiConst } from './api-const';\n  * The maximum length of the feedback session name.\n  */\n export const FEEDBACK_SESSION_NAME_MAX_LENGTH: number = ApiConst.FEEDBACK_SESSION_NAME_MAX_LENGTH;\n+\n+/**\n+ * The maximum length of the course id.\n+ */\n+export const COURSE_ID_MAX_LENGTH: number = ApiConst.COURSE_ID_MAX_LENGTH;"
  }
]
