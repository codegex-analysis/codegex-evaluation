[
  {
    "sha": "aa00ffab7828f4818589659c804ec2cfd99baed3",
    "filename": ".idea/encodings.xml",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/.idea/encodings.xml",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/.idea/encodings.xml",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/.idea/encodings.xml?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"Encoding\">\n+    <file url=\"file://$PROJECT_DIR$/src/main/java\" charset=\"UTF-8\" />\n+    <file url=\"file://$PROJECT_DIR$/src/main/resources\" charset=\"UTF-8\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "71417128acf5601a466c758d957f05d30961d808",
    "filename": ".idea/misc.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/.idea/misc.xml",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/.idea/misc.xml?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -8,7 +8,7 @@\n       </list>\n     </option>\n   </component>\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_14\" project-jdk-name=\"15\" project-jdk-type=\"JavaSDK\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_15_PREVIEW\" project-jdk-name=\"15\" project-jdk-type=\"JavaSDK\">\n     <output url=\"file://$PROJECT_DIR$/out\" />\n   </component>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "e96534fb27b68192f27f985d3879e173ec77adb8",
    "filename": ".idea/uiDesigner.xml",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/.idea/uiDesigner.xml",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/.idea/uiDesigner.xml",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/.idea/uiDesigner.xml?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,124 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"Palette2\">\n+    <group name=\"Swing\">\n+      <item class=\"com.intellij.uiDesigner.HSpacer\" tooltip-text=\"Horizontal Spacer\" icon=\"/com/intellij/uiDesigner/icons/hspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"com.intellij.uiDesigner.VSpacer\" tooltip-text=\"Vertical Spacer\" icon=\"/com/intellij/uiDesigner/icons/vspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+      <item class=\"javax.swing.JPanel\" icon=\"/com/intellij/uiDesigner/icons/panel.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollPane\" icon=\"/com/intellij/uiDesigner/icons/scrollPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JButton\" icon=\"/com/intellij/uiDesigner/icons/button.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Button\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JRadioButton\" icon=\"/com/intellij/uiDesigner/icons/radioButton.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"RadioButton\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JCheckBox\" icon=\"/com/intellij/uiDesigner/icons/checkBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"CheckBox\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JLabel\" icon=\"/com/intellij/uiDesigner/icons/label.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Label\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JTextField\" icon=\"/com/intellij/uiDesigner/icons/textField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JPasswordField\" icon=\"/com/intellij/uiDesigner/icons/passwordField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JFormattedTextField\" icon=\"/com/intellij/uiDesigner/icons/formattedTextField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextArea\" icon=\"/com/intellij/uiDesigner/icons/textArea.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextPane\" icon=\"/com/intellij/uiDesigner/icons/textPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JEditorPane\" icon=\"/com/intellij/uiDesigner/icons/editorPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JComboBox\" icon=\"/com/intellij/uiDesigner/icons/comboBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JTable\" icon=\"/com/intellij/uiDesigner/icons/table.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JList\" icon=\"/com/intellij/uiDesigner/icons/list.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"2\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTree\" icon=\"/com/intellij/uiDesigner/icons/tree.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTabbedPane\" icon=\"/com/intellij/uiDesigner/icons/tabbedPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSplitPane\" icon=\"/com/intellij/uiDesigner/icons/splitPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSpinner\" icon=\"/com/intellij/uiDesigner/icons/spinner.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSlider\" icon=\"/com/intellij/uiDesigner/icons/slider.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSeparator\" icon=\"/com/intellij/uiDesigner/icons/separator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JProgressBar\" icon=\"/com/intellij/uiDesigner/icons/progressbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JToolBar\" icon=\"/com/intellij/uiDesigner/icons/toolbar.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\">\n+          <preferred-size width=\"-1\" height=\"20\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JToolBar$Separator\" icon=\"/com/intellij/uiDesigner/icons/toolbarSeparator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollBar\" icon=\"/com/intellij/uiDesigner/icons/scrollbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"0\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+    </group>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "94a25f7f4cb416c083d265558da75d457237d671",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/.idea/vcs.xml",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/.idea/vcs.xml?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "b7c1048a780a614414ff95c794faf288f4460499",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/pom.xml",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/pom.xml",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/pom.xml?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -9,8 +9,8 @@\n     <version>1.0-SNAPSHOT</version>\n     <properties>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-        <maven.compiler.release>11</maven.compiler.release>\n-        <javafx.version>15</javafx.version>\n+        <maven.compiler.release>14</maven.compiler.release>\n+        <javafx.version>16-ea+6</javafx.version>\n     </properties>\n     <dependencies>\n         <dependency>\n@@ -52,17 +52,18 @@\n                 <artifactId>maven-compiler-plugin</artifactId>\n                 <version>3.8.1</version>\n                 <configuration>\n+\n                     <release>${maven.compiler.release}</release>\n-                    <source>14</source>\n-                    <target>14</target>\n+                    <source>15</source>\n+                    <target>15</target>\n                 </configuration>\n             </plugin>\n             <plugin>\n                 <groupId>org.openjfx</groupId>\n                 <artifactId>javafx-maven-plugin</artifactId>\n-                <version>0.0.3</version>\n+                <version>0.0.5</version>\n                 <configuration>\n-                    <mainClass>org.openjfx.App</mainClass>\n+                    <mainClass>client.views.ChatClient</mainClass>\n                 </configuration>\n             </plugin>\n         </plugins>"
  },
  {
    "sha": "43443002af3ad012c8fb365dd6bc1af95d4ea258",
    "filename": "src/main/java/client/controllers/AuthController.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/controllers/AuthController.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/controllers/AuthController.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/client/controllers/AuthController.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -7,6 +7,8 @@\n import javafx.scene.control.PasswordField;\n import javafx.scene.control.TextField;\n \n+import java.io.IOException;\n+\n public class AuthController {\n \n     @FXML\n@@ -27,7 +29,7 @@ void doAuth() {\n         }\n         String authErrorMessage = network.sendAuthMessage(login, password);\n         if (authErrorMessage == null) {\n-            mainChatClient.openChat();\n+            ChatClient.openChat();\n         } else {\n             Alert alert = new Alert(Alert.AlertType.ERROR);\n             alert.setTitle(\"Ошибка авторизации\");\n@@ -36,6 +38,11 @@ void doAuth() {\n         }\n     }\n \n+    @FXML\n+    void doRegistration() throws IOException {\n+        ChatClient.setAuthScene(\"RegistrationWindow\");\n+    }\n+\n     public void setNetwork(Network network) {\n         this.network = network;\n     }"
  },
  {
    "sha": "53c37396273d72098720db0bd83d39f66371b432",
    "filename": "src/main/java/client/controllers/ChangePasswordController.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/controllers/ChangePasswordController.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/controllers/ChangePasswordController.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/client/controllers/ChangePasswordController.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,60 @@\n+package client.controllers;\n+\n+import client.models.Network;\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.PasswordField;\n+import javafx.stage.Stage;\n+\n+public class ChangePasswordController {\n+\n+    public static Stage changePasswordStage;\n+    public Network network;\n+\n+    @FXML\n+    private PasswordField pastPasswordField;\n+\n+    @FXML\n+    private PasswordField passwordField1;\n+\n+    @FXML\n+    private PasswordField passwordField2;\n+\n+    @FXML\n+    void updatePassword() {\n+        String password = pastPasswordField.getText().trim();\n+        String newPassword = passwordField1.getText().trim();\n+        if (newPassword.equals(passwordField2.getText().trim())) {\n+            network.sendUpdatePassword(password, newPassword);\n+        } else {\n+            showNotEquallyPasswords();\n+        }\n+    }\n+\n+    private void showNotEquallyPasswords() {\n+        Alert alert = new Alert(Alert.AlertType.ERROR);\n+        alert.setTitle(\"Ошибка авторизации\");\n+        alert.setContentText(\"Пароли не совпадают\");\n+        alert.show();\n+    }\n+\n+    public static void okUpdatePassword() {\n+        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\n+        alert.setTitle(\"Успех\");\n+        alert.setContentText(\"Ваш пароль успешно заменен\");\n+        alert.show();\n+        changePasswordStage.close();\n+    }\n+\n+    public static void errorUpdatePassword(String message) {\n+        Alert alert = new Alert(Alert.AlertType.ERROR);\n+        alert.setTitle(\"Ошибка\");\n+        alert.setContentText(message);\n+        alert.show();\n+\n+    }\n+\n+    public void setNetwork(Network network) {\n+        this.network = network;\n+    }\n+}"
  },
  {
    "sha": "6e15483147822b218cb327b6bb4bfc0d32528535",
    "filename": "src/main/java/client/controllers/ChangeUsernameController.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/controllers/ChangeUsernameController.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/controllers/ChangeUsernameController.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/client/controllers/ChangeUsernameController.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,50 @@\n+package client.controllers;\n+\n+import client.models.Network;\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextField;\n+import javafx.stage.Stage;\n+\n+public class ChangeUsernameController {\n+\n+    public static Stage changeUsernameStage;\n+    public Network network;\n+\n+    @FXML\n+    private TextField newUsername;\n+    @FXML\n+    private PasswordField passwordField;\n+\n+    @FXML\n+    void doChangeUsername() {\n+        String newUsernameText = newUsername.getText().trim();\n+        String passwordFieldText = passwordField.getText().trim();\n+        if (newUsernameText.length() == 0 || passwordFieldText.length() == 0)\n+            return;\n+        network.sendUpdateUsername(newUsernameText, passwordFieldText);\n+    }\n+\n+\n+    public static void errorUpdateUsername(String message) {\n+        Alert alert = new Alert(Alert.AlertType.ERROR);\n+        alert.setTitle(\"Ошибка\");\n+        alert.setContentText(message);\n+        alert.show();\n+    }\n+\n+    public static void okUpdateUsername(String message) {\n+        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\n+        alert.setTitle(\"Имя пользователя изменено\");\n+        alert.setContentText(\"Ваше имя изменено на \" + message);\n+        alert.show();\n+        changeUsernameStage.close();\n+    }\n+\n+    public void setNetwork(Network network) {\n+        this.network = network;\n+    }\n+\n+}\n+"
  },
  {
    "sha": "c28ab89ced3740961a5ba52f5d91ea2987503be2",
    "filename": "src/main/java/client/controllers/ChatController.java",
    "status": "modified",
    "additions": 27,
    "deletions": 3,
    "changes": 30,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/controllers/ChatController.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/controllers/ChatController.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/client/controllers/ChatController.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -1,11 +1,14 @@\n package client.controllers;\n \n+import client.views.ChatClient;\n import javafx.collections.FXCollections;\n import javafx.collections.ObservableList;\n import javafx.fxml.FXML;\n import javafx.scene.control.*;\n import client.models.Network;\n \n+import java.io.IOException;\n+\n public class ChatController {\n \n     @FXML\n@@ -23,12 +26,12 @@ public void setNetwork(Network network) {\n         this.network = network;\n     }\n \n-    private final ObservableList<String> msgList = FXCollections.observableArrayList(\"Добро пожаловать в чат!\");\n+    private final ObservableList<String> msgList = FXCollections.observableArrayList();\n \n     private ObservableList<String> prsnList = FXCollections.observableArrayList();\n \n     @FXML\n-    void initialize() {\n+    void initialize() throws IOException {\n         listViewMsg.setItems(msgList);\n \n         listViewPerson.setItems(prsnList);\n@@ -49,6 +52,7 @@ protected void updateItem(String item, boolean empty) {\n                 }\n             }\n         });\n+\n     }\n \n     @FXML\n@@ -76,6 +80,16 @@ void sendPrivateMessage(){\n         }\n     }\n \n+    @FXML\n+    void openChangeUsernameWindow() throws IOException {\n+        ChatClient.createChangeUsernameWindow();\n+    }\n+\n+    @FXML\n+    void openChangePasswordWindow() throws IOException {\n+        ChatClient.createChangePasswordWindow();\n+    }\n+\n     @FXML\n     void showAbout() {\n         Alert alert = new Alert(Alert.AlertType.INFORMATION);\n@@ -91,8 +105,10 @@ void doExit() {\n     }\n \n \n-    public void sendMessageToList(String message) {\n+    public void sendMessageToList(String message)  {\n         listViewMsg.getItems().add(message);\n+        network.writeMessageToFile(message);\n+        listViewMsg.scrollTo(listViewMsg.getItems().size() - 1);\n     }\n \n     public void addClientToList(String username) {\n@@ -103,4 +119,12 @@ public void addClientToList(String username) {\n     public void resetUserList() {\n         listViewPerson.getItems().clear();\n     }\n+\n+    public ObservableList<String> getMsgList() {\n+        return msgList;\n+    }\n+\n+    public void scrollDown() {\n+        listViewMsg.scrollTo(listViewMsg.getItems().size() - 1);\n+    }\n }"
  },
  {
    "sha": "87e6ba45d766b7441672c21a11b7bbc4a5420d6e",
    "filename": "src/main/java/client/controllers/RegistrationController.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/controllers/RegistrationController.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/controllers/RegistrationController.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/client/controllers/RegistrationController.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,59 @@\n+\n+package client.controllers;\n+\n+import client.models.Network;\n+import client.views.ChatClient;\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextField;\n+\n+import java.io.IOException;\n+\n+public class RegistrationController {\n+\n+    private Network network;\n+\n+    @FXML\n+    private TextField loginField;\n+\n+    @FXML\n+    private PasswordField passwordField;\n+\n+    @FXML\n+    private TextField usernameField;\n+\n+    @FXML\n+    void doRegistration() throws IOException {\n+        String login = loginField.getText().trim();\n+        String password = passwordField.getText().trim();\n+        String username = usernameField.getText().trim();\n+\n+        if (login.length() == 0 | password.length() == 0 | username.length() == 0)\n+            return;\n+        String regErrorMessage = network.sendRegMessage(login, password, username);\n+        if (regErrorMessage == null) {\n+            Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\n+            alert.setTitle(\"Регистрация\");\n+            alert.setContentText(\"Вы успешно зарегистрированы. Переходите к авторизации.\");\n+            alert.showAndWait();\n+            ChatClient.setAuthScene(\"AuthWindow\");\n+        } else {\n+            Alert alert = new Alert(Alert.AlertType.ERROR);\n+            alert.setTitle(\"Ошибка регистрации\");\n+            alert.setContentText(regErrorMessage);\n+            alert.show();\n+        }\n+    }\n+\n+    @FXML\n+    void goBack() throws IOException {\n+        ChatClient.setAuthScene(\"AuthWindow\");\n+    }\n+\n+    public void setNetwork(Network network) {\n+        this.network = network;\n+    }\n+}\n+\n+"
  },
  {
    "sha": "8087d8f9c13db7d0d15f66c9f650539cb5764619",
    "filename": "src/main/java/client/models/Network.java",
    "status": "modified",
    "additions": 105,
    "deletions": 5,
    "changes": 110,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/models/Network.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/models/Network.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/client/models/Network.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -1,13 +1,17 @@\n package client.models;\n \n+import client.controllers.ChangePasswordController;\n+import client.controllers.ChangeUsernameController;\n import client.controllers.ChatController;\n+import client.views.ChatClient;\n import javafx.application.Platform;\n+import javafx.collections.FXCollections;\n+import javafx.collections.ObservableList;\n import javafx.scene.control.Alert;\n \n-import java.io.DataInputStream;\n-import java.io.DataOutputStream;\n-import java.io.IOException;\n+import java.io.*;\n import java.net.Socket;\n+import java.util.ArrayList;\n \n public class Network {\n \n@@ -20,6 +24,18 @@\n     private static final String END_CMD_PREFIX = \"/end\"; //\n     private static final String USER_LIST_CMD = \"/usrlst\";\n \n+    private static final String UPDATE_USERNAME_PREFIX = \"/updusrname\";\n+    private static final String UPDATE_USERNAME_OK_PREFIX = \"/updusrnameok\";\n+    private static final String UPDATE_USERNAME_ERR_PREFIX = \"/updusrnameerr\";\n+\n+    private static final String REG_PREFIX = \"/reg\";\n+    private static final String REGERR_PREFIX = \"/regerr\";\n+    private static final String REGOK_PREFIX = \"/regok\";\n+\n+    private static final String UPDATE_PASSWORD_PREFIX = \"/updpswrd\"; // + username + password + newPassword\n+    private static final String UPDATE_PASSWORD_OK_PREFIX = \"/updpswrdok\"; //\n+    private static final String UPDATE_PASSWORD_ERR_PREFIX = \"/updpswrderr\"; // + message\n+\n     private static final String DEFAULT_SERVER_HOST = \"localhost\";\n     private static final int DEFAULT_SERVER_PORT = 8888;\n \n@@ -32,6 +48,9 @@\n     private final int port;\n     private String username;\n \n+    File logsFile;\n+    private String logsFilePath = \"src/main/resources/logs/logs_\";\n+\n     public Network(String host, int port) {\n         this.host = host;\n         this.port = port;\n@@ -71,6 +90,7 @@ public void sendPrivateMessage(String message) {\n \n     //ожидание сообщения в непрерывном потоке\n     public void waitMessage(ChatController controller) {\n+        getLogsMessages(controller);\n         Thread thread = new Thread(() -> {\n             try {\n                 while (true) {\n@@ -85,7 +105,14 @@ public void waitMessage(ChatController controller) {\n                             case PRIVATE_MSG_CMD_PREFIX -> controller.sendMessageToList(String.format(\"%S\", message));\n                             case USER_LIST_CMD -> refreshUserList(controller, message);\n                             case END_CMD_PREFIX -> closeServer(controller);\n-\n+                            case UPDATE_USERNAME_OK_PREFIX -> {\n+                                username = message;\n+                                ChangeUsernameController.okUpdateUsername(message);\n+                                ChatClient.changeStageTitle();\n+                            }\n+                            case UPDATE_USERNAME_ERR_PREFIX -> ChangeUsernameController.errorUpdateUsername(message);\n+                            case UPDATE_PASSWORD_OK_PREFIX -> ChangePasswordController.okUpdatePassword();\n+                            case UPDATE_PASSWORD_ERR_PREFIX -> ChangePasswordController.errorUpdatePassword(message);\n                         }\n                     });\n                 }\n@@ -106,12 +133,19 @@ private void refreshUserList(ChatController controller, String message) {\n             controller.addClientToList(user); //и заполняем заново\n         }\n     }\n+\n     public String sendAuthMessage(String login, String password) {\n         try {\n             out.writeUTF(String.format(\"%s %s %s\", AUTH_CMD_PREFIX, login, password));\n             String response = in.readUTF();\n             if (response.startsWith(AUTHOK_CMD_PREFIX)) {\n                 this.username = response.split(\"\\\\s+\", 2)[1];\n+                //создаем имя файла и сам файл\n+                this.logsFilePath += username + \".txt\";\n+                this.logsFile = new File(logsFilePath);\n+                if (!logsFile.exists())\n+                    logsFile.createNewFile();\n+\n                 return null;\n             } else {\n                 return response.split(\"\\\\s+\", 2)[1];\n@@ -122,6 +156,21 @@ public String sendAuthMessage(String login, String password) {\n         }\n     }\n \n+    public String sendRegMessage(String login, String password, String username) {\n+        try {\n+            out.writeUTF(String.format(\"%s %s %s %s\", REG_PREFIX, login, password, username));\n+            String response = in.readUTF();\n+            if (response.startsWith(REGOK_PREFIX))\n+                return null;\n+            if (response.startsWith(REGERR_PREFIX))\n+                return response.split(\"\\\\s+\", 2)[1];\n+            return \"Неизвестная ошибка\";\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            return e.getMessage();\n+        }\n+    }\n+\n     public String getUsername() {\n         return username;\n     }\n@@ -150,4 +199,55 @@ private void connectionAlert() {\n         alert.setContentText(\"Соединение прервано\");\n         alert.show();\n     }\n-}\n+\n+    public void sendUpdateUsername(String newUsername, String password) {\n+        try {\n+            out.writeUTF(String.format(\"%s %s %s %s\", UPDATE_USERNAME_PREFIX, username, password, newUsername));\n+        } catch (IOException e) {\n+            ChangeUsernameController.errorUpdateUsername(\"Ошибка смены имени\");\n+        }\n+    }\n+\n+    public void sendUpdatePassword(String password, String newPassword) {\n+        try {\n+            out.writeUTF(String.format(\"%s %s %s %s\", UPDATE_PASSWORD_PREFIX, username, password, newPassword));\n+        } catch (IOException e) {\n+            ChangePasswordController.errorUpdatePassword(\"Ошибка смены пароля\");\n+        }\n+    }\n+\n+    public void writeMessageToFile(String message) {\n+\n+        try (FileWriter writer = new FileWriter(logsFile, true)) {\n+            writer.write(message + \"\\n\");\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void getLogsMessages(ChatController controller) {\n+        ArrayList<String> messageList = new ArrayList<>();\n+        String strLine;\n+        int counterLines = 0;\n+        int starti = 0;\n+        //загружаем построчно сообщения и считаем их количество\n+        try (BufferedReader reader = new BufferedReader(new FileReader(logsFile))) {\n+            while (((strLine = reader.readLine()) != null)) {\n+                messageList.add(strLine);\n+                counterLines++;\n+            }\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        //находим номер строки, с которой выводим на экран\n+        if (counterLines > 100)\n+            starti = counterLines - 100;\n+        //выводим сообщения на ListView\n+        for (int i = starti; i < messageList.size(); i++) {\n+            controller.getMsgList().add(messageList.get(i));\n+        }\n+        controller.scrollDown(); //прокручиваем ListView вниз\n+    }\n+\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f12acec6d2418cb62eace5f101daf4b96ebf4195",
    "filename": "src/main/java/client/views/ChatClient.java",
    "status": "modified",
    "additions": 61,
    "deletions": 22,
    "changes": 83,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/views/ChatClient.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/client/views/ChatClient.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/client/views/ChatClient.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -1,11 +1,11 @@\n package client.views;\n \n-import client.controllers.AuthController;\n-import client.controllers.ChatController;\n+import client.controllers.*;\n import javafx.application.Application;\n import javafx.fxml.FXMLLoader;\n import javafx.scene.Parent;\n import javafx.scene.Scene;\n+import javafx.scene.layout.AnchorPane;\n import javafx.stage.Modality;\n import javafx.stage.Stage;\n import client.models.Network;\n@@ -14,43 +14,53 @@\n \n public class ChatClient extends Application {\n \n-    private Stage primaryStage;\n-    private Network network;\n-    private Stage authStage;\n-    private ChatController chatController;\n+    private static Stage primaryStage;\n+    private static Network network;\n+    private static Stage authStage;\n+    private static ChatController chatController;\n+    private static Scene authScene;\n \n     @Override\n-    public void start(Stage primaryStage) throws Exception{\n+    public void start(Stage primaryStage) throws Exception {\n         this.primaryStage = primaryStage;\n         network = new Network();\n         network.connect();\n         openAuthDialog();\n         createChatWindow();\n-\n-\n     }\n \n     private void openAuthDialog() throws IOException {\n-        FXMLLoader authLoader = new FXMLLoader();\n-        authLoader.setLocation(ChatClient.class.getResource(\"/client/fxml/AuthWindow.fxml\"));\n-        Parent root = authLoader.load();\n         authStage = new Stage();\n         authStage.setTitle(\"Аутентификация\");\n-        authStage.setScene(new Scene(root));\n+        authScene = new Scene(new Parent() { });\n+        setAuthScene(\"AuthWindow\");\n+        authStage.setScene(authScene);\n         authStage.initModality(Modality.WINDOW_MODAL);\n         authStage.initOwner(primaryStage);\n-        authStage.setMinWidth(400);\n-        authStage.setMinHeight(300);\n+        authStage.setMinWidth(300);\n+        authStage.setMinHeight(250);\n         authStage.show();\n+    }\n \n-        AuthController authController = authLoader.getController();\n-        authController.setNetwork(network);\n-        authController.setChatClient(this);\n+    public static void setAuthScene(String fxml) throws IOException {\n+        FXMLLoader loader = new FXMLLoader();\n+        loader.setLocation(ChatClient.class.getResource(\"/fxml/\" + fxml + \".fxml\"));\n+        authScene.setRoot(loader.load());\n+        switch (fxml) {\n+            case \"AuthWindow\" -> {\n+                AuthController authController = loader.getController();\n+                authController.setNetwork(network);\n+            }\n+            case \"RegistrationWindow\" -> {\n+                RegistrationController registrationController = loader.getController();\n+                registrationController.setNetwork(network);\n+            }\n+        }\n     }\n \n-    private void createChatWindow() throws IOException {\n+    private static void createChatWindow() throws IOException {\n         FXMLLoader loader = new FXMLLoader();\n-        loader.setLocation(ChatClient.class.getResource(\"/client/fxml/MainWindow.fxml\"));\n+        loader.setLocation(ChatClient.class.getResource(\"/fxml/MainWindow.fxml\"));\n         Parent root = loader.load();\n         primaryStage.setTitle(\"Чат\");\n         primaryStage.setScene(new Scene(root));\n@@ -61,15 +71,44 @@ private void createChatWindow() throws IOException {\n \n     }\n \n+    public static void createChangeUsernameWindow() throws IOException {\n+        FXMLLoader loader = new FXMLLoader();\n+        loader.setLocation(ChatClient.class.getResource(\"/fxml/ChangeUsernameWindow.fxml\"));\n+        AnchorPane dialog = loader.load();\n+        Stage changeUsernameStage = new Stage();\n+        changeUsernameStage.setTitle(\"Изменение никнейма\");\n+        changeUsernameStage.setScene(new Scene(dialog));\n+        ChangeUsernameController changeUsernameController = loader.getController();\n+        changeUsernameController.changeUsernameStage = changeUsernameStage;\n+        changeUsernameController.setNetwork(network);\n+        changeUsernameStage.show();\n+    }\n+\n+    public static void createChangePasswordWindow() throws IOException {\n+        FXMLLoader loader = new FXMLLoader();\n+        loader.setLocation(ChatClient.class.getResource(\"/fxml/ChangePasswordWindow.fxml\"));\n+        AnchorPane dialog = loader.load();\n+        Stage changePasswordStage = new Stage();\n+        changePasswordStage.setTitle(\"Изменение пароля\");\n+        changePasswordStage.setScene(new Scene(dialog));\n+        ChangePasswordController changePasswordController = loader.getController();\n+        changePasswordController.changePasswordStage = changePasswordStage;\n+        changePasswordController.setNetwork(network);\n+        changePasswordStage.show();\n+    }\n \n     public static void main(String[] args) {\n         launch(args);\n     }\n \n-    public void openChat() {\n+    public static void openChat() {\n         authStage.close();\n         primaryStage.show();\n-        primaryStage.setTitle(String.format(\"Чат (%s)\",network.getUsername()));\n+        changeStageTitle();\n         network.waitMessage(chatController);\n     }\n+\n+    public static void changeStageTitle() {\n+        primaryStage.setTitle(String.format(\"Чат (%s)\", network.getUsername()));\n+    }\n }"
  },
  {
    "sha": "dc536c00544a450819555dbe872c09ff554a7efc",
    "filename": "src/main/java/server/chat/MyServer.java",
    "status": "modified",
    "additions": 95,
    "deletions": 16,
    "changes": 111,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/MyServer.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/MyServer.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/MyServer.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -1,64 +1,112 @@\n package server.chat;\n \n-import server.chat.auth.BaseAuthService;\n+import server.chat.service.classes.*;\n import server.chat.handler.ClientHandler;\n \n import java.io.IOException;\n import java.net.ServerSocket;\n import java.net.Socket;\n import java.util.ArrayList;\n+import java.util.Date;\n import java.util.List;\n+import java.util.logging.*;\n \n public class MyServer {\n \n     private final ServerSocket serverSocket;\n-    private final BaseAuthService authService;\n+    private final DBAuthService authService;\n+    private final DBRegService regService;\n+    private final DBChangeUsernameService changeUsernameService;\n+    private final DBChangePasswordService changePasswordService;\n \n     private final List<ClientHandler> clients = new ArrayList<>();\n \n+    //создаем два логгера: для чата и для серверных сообщений\n+    protected final Logger serverLogger = Logger.getLogger(\"server\");\n+    protected final Logger chatLogger = Logger.getLogger(\"chat\");\n+\n+    public Logger getServerLogger() {\n+        return serverLogger;\n+    }\n+\n     public MyServer(int port) throws IOException {\n         this.serverSocket = new ServerSocket(port);\n-        this.authService = new BaseAuthService();\n+        this.authService = new DBAuthService();\n+        this.regService = new DBRegService();\n+        this.changeUsernameService = new DBChangeUsernameService();\n+        this.changePasswordService = new DBChangePasswordService();\n     }\n \n     public void start() {\n-        System.out.println(\"Server started!\");\n-\n+        startServerLogger();\n+        serverLogger.info(\"Сервер запущен\");\n+        startChatLogger();\n         try {\n             while (true) {\n                 waitAndConnectClient();\n             }\n         } catch (IOException ioException) {\n-            ioException.printStackTrace();\n+            serverLogger.severe(\"Клиенту не удалось присоединиться к серверу\");\n+        }\n+    }\n+\n+    private void startServerLogger() {\n+        //описываем параметры логирования\n+        serverLogger.setLevel(Level.ALL);\n+        try {\n+            Handler handler = new FileHandler(\"src/main/resources/serverLogs/serverLog.log\");\n+            handler.setFormatter(new SimpleFormatter());\n+            handler.setLevel(Level.ALL);\n+            serverLogger.addHandler(handler);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n         }\n     }\n \n+    private void startChatLogger() {\n+        chatLogger.setLevel(Level.ALL);\n+        try {\n+            Handler handler = new FileHandler(\"src/main/resources/serverLogs/chatLog.log\");\n+            //описываем формат логирования переписки для более удобного чтения\n+            handler.setFormatter(new Formatter() {\n+                @Override\n+                public String format(LogRecord record) {\n+                    return record.getLevel() + \" \" + (new Date(record.getMillis())).toString() + \" \" + record.getMessage() + \"\\n\";\n+                }\n+            });\n+            handler.setLevel(Level.ALL);\n+            chatLogger.addHandler(handler);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        //убираем вывод логов переписки в консоль\n+        chatLogger.setUseParentHandlers(false);\n+\n+    }\n+\n     private void waitAndConnectClient() throws IOException {\n-        System.out.println(\"Waiting connection\");\n         Socket socket = serverSocket.accept();\n-        System.out.println(\"Client connected\");\n+        serverLogger.info(\"Установлено соединение с клиентом, ожидаем авторизацию\");\n         ClientHandler clientHandler = new ClientHandler(this, socket);\n         clientHandler.handle();\n     }\n \n-    public BaseAuthService getAuthService() {\n-        return authService;\n-    }\n-\n     public synchronized void subscribe(ClientHandler clientHandler) throws IOException {\n         clients.add(clientHandler);\n         broadcastUserList();\n         broadcastServerMessage(clientHandler, \"SUB\");\n+        chatLogger.info(clientHandler.getUsername() + \" подключился к чату\");\n     }\n \n     public synchronized void unsubscribe(ClientHandler clientHandler) {\n         clients.remove(clientHandler);\n         try {\n             broadcastUserList();\n         } catch (IOException e) {\n-            e.printStackTrace();\n+            serverLogger.warning(\"Ошибка передачи списка клиентов\");\n         }\n         broadcastServerMessage(clientHandler, \"UNSUB\");\n+        chatLogger.info(clientHandler.getUsername() + \" подключился к чату\");\n     }\n \n     public synchronized boolean isUsernameBusy(String username) {\n@@ -79,14 +127,14 @@ public synchronized void broadcastServerMessage(ClientHandler user, String flag)\n                         case \"UNSUB\" -> client.sendServerMessage(user.getUsername() + \" покинул чат\");\n                     }\n                 } catch (IOException e) {\n-                    System.out.println(\"Ошибка рассылки серверных сообщений\");\n+                    serverLogger.warning(\"Ошибка рассылки серверных сообщений о подключении или отключении клиента\");\n                 }\n             }\n         }\n     }\n \n-    //ретранслятор для общих сообщений\n     public synchronized void broadcastMessage(ClientHandler sender, String message) throws IOException {\n+        chatLogger.fine(sender.getUsername() + \": \" + message);\n         for (ClientHandler client : clients) {\n             if (client == sender)\n                 client.sendMessage(message);\n@@ -95,9 +143,23 @@ public synchronized void broadcastMessage(ClientHandler sender, String message)\n         }\n     }\n \n+    public synchronized void broadcastUpdateUsernameMessage(ClientHandler user, String lastUsername, String username) {\n+        for (ClientHandler client : clients) {\n+            if (user != client) {\n+                try {\n+                    client.sendServerMessage(lastUsername + \" сменил имя пользователя на \" + username);\n+                    serverLogger.info(lastUsername + \" сменил имя пользователя на \" + username);\n+                } catch (IOException e) {\n+                    serverLogger.warning(\"Ошибка рассылки серверных сообщений о смене имени пользователя\");\n+                }\n+            }\n+        }\n+    }\n+\n     //ретранслятор для личных сообщений\n     public synchronized void broadcastMessage(ClientHandler sender, String recipient, String message) throws IOException {\n         boolean flag = false;\n+        chatLogger.fine(sender.getUsername() + \" -> \" + recipient + \": \" + message);\n         for (ClientHandler client : clients) {\n             if (client.getUsername().equals(recipient)) {\n                 client.sendPrivateMessage(sender.getUsername(), recipient, message); //находим адресата и отправляем сообщение\n@@ -120,10 +182,27 @@ public synchronized void broadcastUserList() throws IOException {\n         }\n     }\n \n-    public void stop() throws IOException {\n+    public synchronized void stop() throws IOException {\n         for (ClientHandler client : clients) {\n             client.sendStopServerMessage();\n         }\n+        serverLogger.info(\"Сервер отключен по команде клиента\");\n         System.exit(0);\n     }\n+\n+    public DBAuthService getAuthService() {\n+        return authService;\n+    }\n+\n+    public DBRegService getRegService() {\n+        return regService;\n+    }\n+\n+    public DBChangeUsernameService getChangeUsernameService() {\n+        return changeUsernameService;\n+    }\n+\n+    public DBChangePasswordService getChangePasswordService() {\n+        return changePasswordService;\n+    }\n }"
  },
  {
    "sha": "432407afa604c3ed0c705725bd2f1d76b22ac50f",
    "filename": "src/main/java/server/chat/auth/AuthService.java",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/b93894995b1fc49232fbae655790b97a5e6ec64c/src/main/java/server/chat/auth/AuthService.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/b93894995b1fc49232fbae655790b97a5e6ec64c/src/main/java/server/chat/auth/AuthService.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/auth/AuthService.java?ref=b93894995b1fc49232fbae655790b97a5e6ec64c",
    "patch": "@@ -1,8 +0,0 @@\n-package server.chat.auth;\n-\n-public interface AuthService {\n-\n-    String getUsernameByLogin(String login, String password);\n-    void startAuthentication();\n-    void stopAuthentication();\n-}"
  },
  {
    "sha": "a65e5f9c28f7b2ebd3eeace5b4f8c4eae0b16b3d",
    "filename": "src/main/java/server/chat/auth/BaseAuthService.java",
    "status": "removed",
    "additions": 0,
    "deletions": 34,
    "changes": 34,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/b93894995b1fc49232fbae655790b97a5e6ec64c/src/main/java/server/chat/auth/BaseAuthService.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/b93894995b1fc49232fbae655790b97a5e6ec64c/src/main/java/server/chat/auth/BaseAuthService.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/auth/BaseAuthService.java?ref=b93894995b1fc49232fbae655790b97a5e6ec64c",
    "patch": "@@ -1,34 +0,0 @@\n-package server.chat.auth;\n-\n-import server.chat.User;\n-\n-import java.util.List;\n-\n-public class BaseAuthService implements AuthService {\n-\n-    List<User> clients = List.of(\n-            new User(\"frodo\", \"111\", \"Фродор_Михайлович\"),\n-            new User(\"pendalf\", \"123\", \"Гендальф_Серый\"),\n-            new User(\"saruman\", \"321\", \"Сарумян\")\n-    );\n-\n-    @Override\n-    public String getUsernameByLogin(String login, String password) {\n-        for (User client : clients) {\n-            if (client.getLogin().equals(login) & client.getPassword().equals(password)) {\n-                return client.getUsername();\n-            }\n-        }\n-        return null;\n-    }\n-\n-    @Override\n-    public void startAuthentication() {\n-\n-    }\n-\n-    @Override\n-    public void stopAuthentication() {\n-\n-    }\n-}"
  },
  {
    "sha": "9de36a9d788a8a1915cd3cd03724c3415222aeed",
    "filename": "src/main/java/server/chat/handler/ClientHandler.java",
    "status": "modified",
    "additions": 152,
    "deletions": 36,
    "changes": 188,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/handler/ClientHandler.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/handler/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/handler/ClientHandler.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -1,14 +1,19 @@\n package server.chat.handler;\n \n import server.chat.MyServer;\n-import server.chat.auth.AuthService;\n+import server.chat.service.interfaces.AuthService;\n+import server.chat.service.interfaces.ChangePasswordService;\n+import server.chat.service.interfaces.ChangeUsernameService;\n+import server.chat.service.interfaces.RegService;\n \n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n import java.io.IOException;\n import java.net.Socket;\n+import java.sql.SQLException;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n+import java.util.logging.Logger;\n \n public class ClientHandler {\n     private final MyServer myServer;\n@@ -17,19 +22,35 @@\n     DataOutputStream out;\n     SimpleDateFormat dateFormat = new SimpleDateFormat(\"HH:mm:ss\");\n \n+    protected final Logger logger;\n+\n     private static final String AUTH_CMD_PREFIX = \"/auth\"; // + login + pass\n     private static final String AUTHOK_CMD_PREFIX = \"/authok\"; // + username\n     private static final String AUTHERR_CMD_PREFIX = \"/autherr\"; // + error message\n     private static final String CLIENT_MSG_CMD_PREFIX = \"/cmsg\"; // + msg\n     private static final String PRIVATE_MSG_CMD_PREFIX = \"/w\"; //recipient + msg\n     private static final String SERVER_MSG_CMD_PREFIX = \"/serverMsg\"; // + msg\n     private static final String END_CMD_PREFIX = \"/end\"; //\n-    private static final String USER_LIST_CMD = \"/usrlst\";\n+    private static final String USER_LIST_CMD_PREFIX = \"/usrlst\";\n+\n+    private static final String UPDATE_USERNAME_PREFIX = \"/updusrname\";\n+    private static final String UPDATE_USERNAME_OK_PREFIX = \"/updusrnameok\";\n+    private static final String UPDATE_USERNAME_ERR_PREFIX = \"/updusrnameerr\";\n+\n+    private static final String REG_PREFIX = \"/reg\"; // + login + password + username\n+    private static final String REGERR_PREFIX = \"/regerr\"; // + error message\n+    private static final String REGOK_PREFIX = \"/regok\"; //\n+\n+    private static final String UPDATE_PASSWORD_PREFIX = \"/updpswrd\"; // + username + password + newPassword\n+    private static final String UPDATE_PASSWORD_OK_PREFIX = \"/updpswrdok\"; //\n+    private static final String UPDATE_PASSWORD_ERR_PREFIX = \"/updpswrderr\"; // + message\n+\n     private String username;\n \n     public ClientHandler(MyServer myServer, Socket socket) {\n         this.myServer = myServer;\n         this.clientSocket = socket;\n+        this.logger = myServer.getServerLogger();\n     }\n \n     public void handle() throws IOException {\n@@ -38,44 +59,60 @@ public void handle() throws IOException {\n \n         new Thread(() -> {\n             try {\n-                authentication();\n+                waitStartMessage();\n                 readMessage();\n             } catch (IOException e) {\n                 myServer.unsubscribe(this);\n+                logger.info(\"Клиент \" + username + \" отключился\");\n             }\n         }).start();\n     }\n \n-    private void readMessage() throws IOException {\n-        while (true) {\n-            String message = in.readUTF();\n-            String[] parts = message.split(\"\\\\s+\", 2); //отделеям префикс\n-            String pref = parts[0];\n-            message = parts[1];\n-            if (pref.equals(CLIENT_MSG_CMD_PREFIX)) {\n-                myServer.broadcastMessage(this, message);\n-            }\n-            if (pref.equals(PRIVATE_MSG_CMD_PREFIX)) {\n-                String[] division = message.split(\"\\\\s+\", 2); //отделяем адресата\n-                try {\n-                    myServer.broadcastMessage(this, division[0], division[1]); //передаем адресата и сообщение\n-                } catch (ArrayIndexOutOfBoundsException e) {\n-                    System.out.println(\"Недопустимый формат сообщения\");\n-                }\n-            }\n-        }\n-    }\n-\n-    private void authentication() throws IOException {\n+    private void waitStartMessage() throws IOException {\n         while (true) {\n             String message = in.readUTF();\n             if (message.startsWith(AUTH_CMD_PREFIX)) {\n                 boolean isAuthSuccess = processAuthCommand(message);\n                 if (isAuthSuccess)\n                     break;\n+                else\n+                    out.writeUTF(AUTHERR_CMD_PREFIX + \" Ошибка авторизации!\");\n+                logger.warning(\"Клиент не смог пройти авторизацию\");\n+            } else if (message.startsWith(REG_PREFIX)) {\n+                processRegCommand(message);\n+\n+            } else {\n+                out.writeUTF(REGERR_PREFIX + \" Ошибка регистрации!\");\n+                logger.warning(\"Клиент не смог зарегистрироваться\");\n+            }\n+        }\n+    }\n+\n+    private void processRegCommand(String message) throws IOException {\n+        String[] parts = message.split(\"\\\\s+\", 4);\n+        String login = parts[1];\n+        String password = parts[2];\n+        String username = parts[3];\n+\n+        RegService regService = myServer.getRegService();\n+        try {\n+            if (!regService.isLoginEmpty(login)) {\n+                out.writeUTF(REGERR_PREFIX + \" Указанный login уже используется\");\n+                return;\n+            } else if (!regService.isUsernameEmpty(username)) {\n+                out.writeUTF(REGERR_PREFIX + \" Указанный username уже используется\");\n+            } else if (regService.registration(login, password, username)) {\n+                out.writeUTF(REGOK_PREFIX);\n+                return;\n             } else {\n-                out.writeUTF(AUTHERR_CMD_PREFIX + \"Ошибка авторизации!\");\n+                out.writeUTF(REGERR_PREFIX + \" Ошибка регистрации\");\n+                logger.warning(\"Клиент не смог зарегистрироваться\");\n+                return;\n             }\n+        } catch (SQLException e) {\n+            out.writeUTF(REGERR_PREFIX + \" Ошибка регистрации\");\n+            logger.warning(\"Клиент не смог зарегистрироваться из-за ошибки базы данных\");\n+            return;\n         }\n     }\n \n@@ -86,22 +123,101 @@ private boolean processAuthCommand(String message) throws IOException {\n \n         AuthService authService = myServer.getAuthService();\n \n-        username = authService.getUsernameByLogin(login, password);\n-        if (username != null) {\n-            if (myServer.isUsernameBusy(username)) {\n-                out.writeUTF(AUTHERR_CMD_PREFIX + \" Пользователь с таким именем уже подключен\");\n-                return false;\n+        try {\n+            username = authService.getUsernameByLogin(login, password);\n+            if (username != null) {\n+                if (myServer.isUsernameBusy(username)) {\n+                    out.writeUTF(AUTHERR_CMD_PREFIX + \" Пользователь с таким именем уже подключен\");\n+                    return false;\n+                } else {\n+                    out.writeUTF(String.format(\"%s %s\", AUTHOK_CMD_PREFIX, username));\n+                    myServer.subscribe(this);\n+                    return true;\n+                }\n             } else {\n-                out.writeUTF(String.format(\"%s %s\", AUTHOK_CMD_PREFIX, username));\n-                myServer.subscribe(this);\n-                return true;\n+                out.writeUTF(AUTHERR_CMD_PREFIX + \" Неверные логин или пароль!\");\n+                return false;\n             }\n-        } else {\n-            out.writeUTF(AUTHERR_CMD_PREFIX + \" Неверные логин или пароль!\");\n+        } catch (SQLException e) {\n+            out.writeUTF(AUTHERR_CMD_PREFIX + \" Ошибка авторизации\");\n+            logger.warning(\"Клиент не смог пройти авторизацию из-за ошибки базы данных\");\n             return false;\n         }\n     }\n \n+    private void readMessage() throws IOException {\n+        while (true) {\n+            String message = in.readUTF();\n+            String[] parts = message.split(\"\\\\s+\", 2); //отделеям префикс\n+            String pref = parts[0];\n+            message = parts[1];\n+            switch (pref) {\n+                case CLIENT_MSG_CMD_PREFIX -> myServer.broadcastMessage(this, message);\n+                case PRIVATE_MSG_CMD_PREFIX -> {\n+                    String[] division = message.split(\"\\\\s+\", 2); //отделяем адресата\n+                    try {\n+                        myServer.broadcastMessage(this, division[0], division[1]); //передаем адресата и сообщение\n+                    } catch (ArrayIndexOutOfBoundsException e) {\n+                        System.out.println(\"Недопустимый формат сообщения\");\n+                    }\n+                }\n+                case UPDATE_USERNAME_PREFIX -> updateUsername(message);\n+                case UPDATE_PASSWORD_PREFIX -> updatePassword(message);\n+            }\n+        }\n+    }\n+\n+\n+    private void updateUsername(String message) throws IOException {\n+        String lastUsername = message.split(\"\\\\s+\", 3)[0];\n+        String password = message.split(\"\\\\s+\", 3)[1];\n+        String newUsername = message.split(\"\\\\s+\", 3)[2];\n+        ChangeUsernameService changeUsernameService = myServer.getChangeUsernameService();\n+        if (lastUsername.equals(newUsername)) {\n+            out.writeUTF(UPDATE_USERNAME_ERR_PREFIX + \" Введенный username не отличается от Вашего\");\n+            return;\n+        }\n+        try {\n+            if (changeUsernameService.isUsernameEmpty(newUsername)) {\n+                newUsername = changeUsernameService.updateUsername(lastUsername, password, newUsername);\n+                if (newUsername != null) {\n+                    username = newUsername;\n+                    myServer.broadcastUpdateUsernameMessage(this, lastUsername, newUsername);\n+                    myServer.broadcastUserList();\n+                    out.writeUTF(String.format(\"%s %s\", UPDATE_USERNAME_OK_PREFIX, username));\n+                } else {\n+                    out.writeUTF(UPDATE_USERNAME_ERR_PREFIX + \" Введен неверный пароль\");\n+                }\n+            } else {\n+                out.writeUTF(UPDATE_USERNAME_ERR_PREFIX + \" Введенный username уже используется\");\n+            }\n+        } catch (SQLException e) {\n+            out.writeUTF(UPDATE_USERNAME_ERR_PREFIX + \" Ошибка смены username\");\n+            logger.warning(\"Клиент не смог сменить имя из-за ошибки базы данных\");\n+        }\n+    }\n+\n+    private void updatePassword(String message) throws IOException {\n+        String username = message.split(\"\\\\s+\", 3)[0];\n+        String password = message.split(\"\\\\s+\", 3)[1];\n+        String newPassword = message.split(\"\\\\s+\", 3)[2];\n+        ChangePasswordService changePasswordService = myServer.getChangePasswordService();\n+        try {\n+            if (password.equals(changePasswordService.getPassword(username))) {\n+                if (password.equals(newPassword)) {\n+                    out.writeUTF(UPDATE_PASSWORD_ERR_PREFIX + \" Введенный пароль не отличается от Вашего\");\n+                    return;\n+                }\n+                if (changePasswordService.updatePassword(username, password, newPassword))\n+                    out.writeUTF(UPDATE_PASSWORD_OK_PREFIX + \" Пароль изменен\");\n+            } else\n+                out.writeUTF(UPDATE_PASSWORD_ERR_PREFIX + \" Введен неверный пароль\");\n+        } catch (SQLException e) {\n+            out.writeUTF(UPDATE_PASSWORD_ERR_PREFIX + \" Ошибка смены пароля\");\n+            logger.warning(\"Клиент не смог сменить пароль из-за ошибки базы данных\");\n+        }\n+    }\n+\n     public void sendServerMessage(String message) throws IOException {\n         out.writeUTF(String.format(\"%s %s\", SERVER_MSG_CMD_PREFIX, message));\n     }\n@@ -131,7 +247,7 @@ public String getUsername() {\n     }\n \n     public void sendUserList(String userList) throws IOException {\n-        out.writeUTF(String.format(\"%s %s\", USER_LIST_CMD, userList));\n+        out.writeUTF(String.format(\"%s %s\", USER_LIST_CMD_PREFIX, userList));\n     }\n \n     public void sendStopServerMessage() throws IOException {"
  },
  {
    "sha": "d057d03f8d57fb97169b036d10f4e54c748e580b",
    "filename": "src/main/java/server/chat/service/classes/DBAuthService.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/classes/DBAuthService.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/classes/DBAuthService.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/service/classes/DBAuthService.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,43 @@\n+package server.chat.service.classes;\n+\n+import server.chat.service.interfaces.AuthService;\n+\n+import java.sql.*;\n+\n+public class DBAuthService implements AuthService {\n+\n+\n+    private Connection connection;\n+    private Statement stmt;\n+    private ResultSet rs;\n+\n+    @Override\n+    public String getUsernameByLogin(String login, String password) throws SQLException {\n+        try {\n+            startAuthentication();\n+            rs = stmt.executeQuery(String.format(\"SELECT password, username FROM auth WHERE login = '%s';\", login));\n+            if (rs.isClosed())\n+                return null;\n+            String passwordDB = rs.getString(\"password\");\n+            if (passwordDB != null)\n+                return (password.equals(passwordDB)) ? rs.getString(\"username\") : null;\n+            return null;\n+        } catch (ClassNotFoundException e) {\n+            return null;\n+        } finally {\n+            stopAuthentication();\n+        }\n+    }\n+\n+    @Override\n+    public void startAuthentication() throws ClassNotFoundException, SQLException {\n+        Class.forName(\"org.sqlite.JDBC\");\n+        connection = DriverManager.getConnection(\"jdbc:sqlite:src/main/resources/database/maindb.db\");\n+        stmt = connection.createStatement();\n+    }\n+\n+    @Override\n+    public void stopAuthentication() throws SQLException {\n+        connection.close();\n+    }\n+}"
  },
  {
    "sha": "77a5861fc3d95e30574387cef03caee5a403fe10",
    "filename": "src/main/java/server/chat/service/classes/DBChangePasswordService.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/classes/DBChangePasswordService.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/classes/DBChangePasswordService.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/service/classes/DBChangePasswordService.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,57 @@\n+package server.chat.service.classes;\n+\n+import server.chat.service.interfaces.ChangePasswordService;\n+\n+import java.sql.*;\n+\n+public class DBChangePasswordService implements ChangePasswordService {\n+    private Connection connection;\n+    private Statement stmt;\n+    private ResultSet rs;\n+\n+    @Override\n+    public boolean updatePassword(String username, String password, String newPassword) throws SQLException {\n+        try {\n+            startAuthentication();\n+            rs = stmt.executeQuery(String.format(\"SELECT password, ID FROM auth WHERE username = '%s';\", username));\n+            if (rs.isClosed())\n+                return false;\n+            String passwordDB = rs.getString(\"password\");\n+            String id = rs.getString(\"ID\");\n+            if (passwordDB.equals(password) & id != null) {\n+                stmt.executeUpdate(String.format(\"UPDATE auth SET password = '%s' WHERE ID = '%s';\", newPassword, id));\n+                return true;\n+            } else {\n+                return false;\n+            }\n+        } catch (ClassNotFoundException e) {\n+            return false;\n+        } finally {\n+            stopAuthentication();\n+        }\n+    }\n+\n+    public String getPassword(String username) throws SQLException {\n+        try {\n+            startAuthentication();\n+            return stmt.executeQuery(String.format(\"SELECT password FROM auth WHERE username = '%s';\", username)).getString(\"password\");\n+        } catch (ClassNotFoundException e) {\n+            e.printStackTrace();\n+        } finally {\n+            stopAuthentication();\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public void startAuthentication() throws ClassNotFoundException, SQLException {\n+        Class.forName(\"org.sqlite.JDBC\");\n+        connection = DriverManager.getConnection(\"jdbc:sqlite:src/main/resources/database/maindb.db\");\n+        stmt = connection.createStatement();\n+    }\n+\n+    @Override\n+    public void stopAuthentication() throws SQLException {\n+        connection.close();\n+    }\n+}"
  },
  {
    "sha": "5318dea3fe908356375f2d548440f57f54bd519e",
    "filename": "src/main/java/server/chat/service/classes/DBChangeUsernameService.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/classes/DBChangeUsernameService.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/classes/DBChangeUsernameService.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/service/classes/DBChangeUsernameService.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,60 @@\n+package server.chat.service.classes;\n+\n+import server.chat.service.interfaces.ChangeUsernameService;\n+\n+import java.sql.*;\n+\n+public class DBChangeUsernameService implements ChangeUsernameService {\n+\n+    private Connection connection;\n+    private Statement stmt;\n+    private ResultSet rs;\n+\n+    @Override\n+    public String updateUsername(String username, String password, String newUsername) throws SQLException {\n+        try {\n+            startAuthentication();\n+            rs = stmt.executeQuery(String.format(\"SELECT password, ID FROM auth WHERE username = '%s';\", username));\n+            if (rs.isClosed())\n+                return null;\n+            String passwordDB = rs.getString(\"password\");\n+            String id = rs.getString(\"ID\");\n+            if (passwordDB.equals(password) & id != null) {\n+                stmt.executeUpdate(String.format(\"UPDATE auth SET username = '%s' WHERE ID = '%s';\", newUsername.replace(\" \", \"_\"), id));\n+                return stmt.executeQuery(String.format(\"SELECT username FROM auth WHERE ID = '%s';\", id)).getString(\"username\");\n+            } else {\n+                return null;\n+            }\n+        } catch (ClassNotFoundException e) {\n+            return null;\n+        } finally {\n+            stopAuthentication();\n+        }\n+    }\n+\n+    @Override\n+    public boolean isUsernameEmpty(String newUsername) throws SQLException {\n+        try {\n+            startAuthentication();\n+            if (stmt.executeQuery(String.format(\"SELECT username FROM auth WHERE username = '%s';\", newUsername)).isClosed())\n+                return true;\n+        } catch (ClassNotFoundException e) {\n+            return false;\n+        } finally {\n+            stopAuthentication();\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public void startAuthentication() throws ClassNotFoundException, SQLException {\n+        Class.forName(\"org.sqlite.JDBC\");\n+        connection = DriverManager.getConnection(\"jdbc:sqlite:src/main/resources/database/maindb.db\");\n+        stmt = connection.createStatement();\n+    }\n+\n+    @Override\n+    public void stopAuthentication() throws SQLException {\n+        connection.close();\n+    }\n+}"
  },
  {
    "sha": "a6b1a7285b913ac76e32ca6aa1f6aeb43aef9904",
    "filename": "src/main/java/server/chat/service/classes/DBRegService.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/classes/DBRegService.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/classes/DBRegService.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/service/classes/DBRegService.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,66 @@\n+package server.chat.service.classes;\n+\n+import server.chat.service.interfaces.RegService;\n+\n+import java.sql.*;\n+\n+public class DBRegService implements RegService {\n+\n+    private Connection connection;\n+    private Statement stmt;\n+\n+    @Override\n+    public void startRegistration() throws ClassNotFoundException, SQLException {\n+        Class.forName(\"org.sqlite.JDBC\");\n+        connection = DriverManager.getConnection(\"jdbc:sqlite:src/main/resources/database/maindb.db\");\n+        stmt = connection.createStatement();\n+    }\n+\n+    @Override\n+    public void stopRegistration() throws SQLException {\n+        connection.close();\n+    }\n+\n+    @Override\n+    public boolean registration(String login, String password, String username) throws SQLException {\n+        try {\n+            startRegistration();\n+            stmt.executeUpdate(String.format(\"INSERT INTO auth (login, password, username) VALUES ('%s', '%s', '%s');\",login, password, username));\n+            return true;\n+        } catch (ClassNotFoundException e) {\n+            e.printStackTrace();\n+        } finally {\n+            stopRegistration();\n+        }\n+\n+        return false;\n+    }\n+\n+    @Override\n+    public boolean isUsernameEmpty(String username) throws SQLException {\n+        try {\n+            startRegistration();\n+            if (stmt.executeQuery(String.format(\"SELECT username FROM auth WHERE username = '%s';\", username)).isClosed())\n+                return true;\n+        } catch (ClassNotFoundException e) {\n+            return false;\n+        } finally {\n+            stopRegistration();\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public boolean isLoginEmpty(String login) throws SQLException {\n+        try {\n+            startRegistration();\n+            if (stmt.executeQuery(String.format(\"SELECT username FROM auth WHERE login = '%s'\", login)).isClosed())\n+                return true;\n+        } catch (ClassNotFoundException e) {\n+            return false;\n+        } finally {\n+            stopRegistration();\n+        }\n+        return false;\n+    }\n+}"
  },
  {
    "sha": "792f3974a0955bbe090bafa69446f3ebda9db1c2",
    "filename": "src/main/java/server/chat/service/interfaces/AuthService.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/interfaces/AuthService.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/interfaces/AuthService.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/service/interfaces/AuthService.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,11 @@\n+package server.chat.service.interfaces;\n+\n+import java.sql.SQLException;\n+\n+public interface AuthService {\n+\n+    String getUsernameByLogin(String login, String password) throws SQLException;\n+    void startAuthentication() throws ClassNotFoundException, SQLException;\n+    void stopAuthentication() throws SQLException;\n+\n+}"
  },
  {
    "sha": "01ac63768a2440906eacdadcf7e3fe29d02c82f3",
    "filename": "src/main/java/server/chat/service/interfaces/ChangePasswordService.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/interfaces/ChangePasswordService.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/interfaces/ChangePasswordService.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/service/interfaces/ChangePasswordService.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,10 @@\n+package server.chat.service.interfaces;\n+\n+import java.sql.SQLException;\n+\n+public interface ChangePasswordService {\n+    void startAuthentication() throws ClassNotFoundException, SQLException;\n+    void stopAuthentication() throws SQLException;\n+    boolean updatePassword(String username, String password, String newPassword) throws SQLException;\n+    String getPassword(String username) throws SQLException;\n+}"
  },
  {
    "sha": "15452dc01f56583107dca3996346a9a699a30a5c",
    "filename": "src/main/java/server/chat/service/interfaces/ChangeUsernameService.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/interfaces/ChangeUsernameService.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/interfaces/ChangeUsernameService.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/service/interfaces/ChangeUsernameService.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,10 @@\n+package server.chat.service.interfaces;\n+\n+import java.sql.SQLException;\n+\n+public interface ChangeUsernameService {\n+    void startAuthentication() throws ClassNotFoundException, SQLException;\n+    void stopAuthentication() throws SQLException;\n+    String updateUsername(String username, String password, String newUsername) throws SQLException;\n+    boolean isUsernameEmpty(String newUsername) throws SQLException;\n+}"
  },
  {
    "sha": "d9491c9f3821a7915e07122b90a0193705339600",
    "filename": "src/main/java/server/chat/service/interfaces/RegService.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/interfaces/RegService.java",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/java/server/chat/service/interfaces/RegService.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/java/server/chat/service/interfaces/RegService.java?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,11 @@\n+package server.chat.service.interfaces;\n+\n+import java.sql.SQLException;\n+\n+public interface RegService {\n+    void startRegistration() throws ClassNotFoundException, SQLException;\n+    void stopRegistration() throws SQLException;\n+    boolean registration(String login, String password, String username) throws SQLException;\n+    boolean isUsernameEmpty(String username)throws SQLException;\n+    boolean isLoginEmpty(String login) throws SQLException;\n+}"
  },
  {
    "sha": "887278eb8ac061f2296fdf7503cc950ca3f1bab0",
    "filename": "src/main/resources/database/maindb.db",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/database/maindb.db",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/database/maindb.db",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/resources/database/maindb.db?ref=e16d4d234437814868d612b5c1411074cb8b2d6f"
  },
  {
    "sha": "62839183515f27c25c8d68495851f717f909b090",
    "filename": "src/main/resources/fxml/AuthWindow.fxml",
    "status": "renamed",
    "additions": 7,
    "deletions": 3,
    "changes": 10,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/fxml/AuthWindow.fxml",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/fxml/AuthWindow.fxml",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/resources/fxml/AuthWindow.fxml?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -7,7 +7,6 @@\n <?import javafx.scene.layout.AnchorPane?>\n <?import javafx.scene.text.Font?>\n \n-\n <AnchorPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"200.0\" prefWidth=\"300.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"client.controllers.AuthController\">\n    <children>\n       <Label layoutX=\"107.0\" layoutY=\"14.0\" text=\"Вход в чат\">\n@@ -26,11 +25,16 @@\n          </font>\n       </Label>\n       <TextField fx:id=\"loginField\" layoutX=\"107.0\" layoutY=\"70.0\" />\n-      <Button layoutX=\"114.0\" layoutY=\"147.0\" mnemonicParsing=\"false\" onAction=\"#doAuth\" text=\"Войти\">\n+      <PasswordField fx:id=\"passwordField\" layoutX=\"107.0\" layoutY=\"109.0\" onAction=\"#doAuth\" />\n+      <Button layoutX=\"34.0\" layoutY=\"147.0\" mnemonicParsing=\"false\" onAction=\"#doAuth\" text=\"Войти\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Button>\n+      <Button layoutX=\"150.0\" layoutY=\"147.0\" mnemonicParsing=\"false\" onAction=\"#doRegistration\" text=\"Регистрация\">\n          <font>\n             <Font size=\"17.0\" />\n          </font>\n       </Button>\n-      <PasswordField fx:id=\"passwordField\" layoutX=\"107.0\" layoutY=\"109.0\" onAction=\"#doAuth\" />\n    </children>\n </AnchorPane>",
    "previous_filename": "src/main/java/client/fxml/AuthWindow.fxml"
  },
  {
    "sha": "ee60ad0f8883923c1711702a01d0096ad9acfce8",
    "filename": "src/main/resources/fxml/ChangePasswordWindow.fxml",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/fxml/ChangePasswordWindow.fxml",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/fxml/ChangePasswordWindow.fxml",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/resources/fxml/ChangePasswordWindow.fxml?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.layout.AnchorPane?>\n+<?import javafx.scene.text.Font?>\n+\n+<AnchorPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"225.0\" prefWidth=\"350.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"client.controllers.ChangePasswordController\">\n+   <children>\n+      <Label layoutX=\"116.0\" layoutY=\"14.0\" text=\"Смена пароля\">\n+         <font>\n+            <Font size=\"18.0\" />\n+         </font>\n+      </Label>\n+      <Label layoutX=\"16.0\" layoutY=\"51.0\" text=\"Старый пароль:\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Label>\n+      <Label layoutX=\"14.0\" layoutY=\"87.0\" text=\"Новый пароль:\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Label>\n+      <PasswordField fx:id=\"pastPasswordField\" layoutX=\"150.0\" layoutY=\"51.0\" prefHeight=\"26.0\" prefWidth=\"176.0\" />\n+      <PasswordField fx:id=\"passwordField1\" layoutX=\"150.0\" layoutY=\"87.0\" prefHeight=\"26.0\" prefWidth=\"176.0\" />\n+      <PasswordField fx:id=\"passwordField2\" layoutX=\"150.0\" layoutY=\"120.0\" onAction=\"#updatePassword\" prefHeight=\"26.0\" prefWidth=\"176.0\" />\n+      <Button layoutX=\"125.0\" layoutY=\"162.0\" mnemonicParsing=\"false\" onAction=\"#updatePassword\" text=\"Изменить\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Button>\n+      <Label layoutX=\"14.0\" layoutY=\"120.0\" text=\"Подтвердить:\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Label>\n+   </children>\n+</AnchorPane>"
  },
  {
    "sha": "56374e9e721a7df8b50ec3f51924fda46f7a2f6f",
    "filename": "src/main/resources/fxml/ChangeUsernameWindow.fxml",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/fxml/ChangeUsernameWindow.fxml",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/fxml/ChangeUsernameWindow.fxml",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/resources/fxml/ChangeUsernameWindow.fxml?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.layout.AnchorPane?>\n+<?import javafx.scene.text.Font?>\n+\n+<AnchorPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"200.0\" prefWidth=\"391.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"client.controllers.ChangeUsernameController\">\n+   <children>\n+      <Label layoutX=\"109.0\" layoutY=\"14.0\" text=\"Изменение имени\">\n+         <font>\n+            <Font size=\"18.0\" />\n+         </font>\n+      </Label>\n+      <Label layoutX=\"18.0\" layoutY=\"59.0\" text=\"Новый никнейм: \">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Label>\n+      <Label layoutX=\"18.0\" layoutY=\"98.0\" text=\"Подтвердить пароль:\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Label>\n+      <TextField fx:id=\"newUsername\" layoutX=\"203.0\" layoutY=\"59.0\" />\n+      <PasswordField fx:id=\"passwordField\" layoutX=\"203.0\" layoutY=\"98.0\" onAction=\"#doChangeUsername\" />\n+      <Button layoutX=\"135.0\" layoutY=\"147.0\" mnemonicParsing=\"false\" onAction=\"#doChangeUsername\" text=\"Изменить\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Button>\n+   </children>\n+</AnchorPane>"
  },
  {
    "sha": "016b70d4bec1de3c5c9d55df48f8844576ed2e77",
    "filename": "src/main/resources/fxml/MainWindow.fxml",
    "status": "renamed",
    "additions": 17,
    "deletions": 4,
    "changes": 21,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/fxml/MainWindow.fxml",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/fxml/MainWindow.fxml",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/resources/fxml/MainWindow.fxml?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -1,8 +1,16 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n \n-<?import javafx.scene.control.*?>\n-<?import javafx.scene.layout.*?>\n-<?import javafx.scene.text.*?>\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.ListView?>\n+<?import javafx.scene.control.Menu?>\n+<?import javafx.scene.control.MenuBar?>\n+<?import javafx.scene.control.MenuItem?>\n+<?import javafx.scene.control.SeparatorMenuItem?>\n+<?import javafx.scene.control.SplitPane?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.layout.AnchorPane?>\n+<?import javafx.scene.layout.VBox?>\n+<?import javafx.scene.text.Font?>\n \n <AnchorPane maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" minHeight=\"260.0\" minWidth=\"320.0\" prefHeight=\"480.0\" prefWidth=\"640.0\" scaleShape=\"false\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"client.controllers.ChatController\">\n    <children>\n@@ -12,7 +20,12 @@\n             <menus>\n               <Menu mnemonicParsing=\"false\" text=\"Файл\">\n                 <items>\n-                  <MenuItem mnemonicParsing=\"false\" text=\"Настройки\" />\n+                        <Menu mnemonicParsing=\"false\" text=\"Настройки\">\n+                          <items>\n+                            <MenuItem mnemonicParsing=\"false\" onAction=\"#openChangeUsernameWindow\" text=\"Изменить никнейм\" />\n+                        <MenuItem mnemonicParsing=\"false\" onAction=\"#openChangePasswordWindow\" text=\"Изменить пароль\" />\n+                          </items>\n+                        </Menu>\n                   <SeparatorMenuItem mnemonicParsing=\"false\" />\n                   <MenuItem mnemonicParsing=\"false\" onAction=\"#doExit\" text=\"Выход\" />\n                 </items>",
    "previous_filename": "target/classes/client/fxml/MainWindow.fxml"
  },
  {
    "sha": "3c3ada81bca02828e266039ae750733aac8a717a",
    "filename": "src/main/resources/fxml/RegistrationWindow.fxml",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/paterdimitry/ClientChat/blob/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/fxml/RegistrationWindow.fxml",
    "raw_url": "https://github.com/paterdimitry/ClientChat/raw/e16d4d234437814868d612b5c1411074cb8b2d6f/src/main/resources/fxml/RegistrationWindow.fxml",
    "contents_url": "https://api.github.com/repos/paterdimitry/ClientChat/contents/src/main/resources/fxml/RegistrationWindow.fxml?ref=e16d4d234437814868d612b5c1411074cb8b2d6f",
    "patch": "@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.layout.AnchorPane?>\n+<?import javafx.scene.text.Font?>\n+\n+<AnchorPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"225.0\" prefWidth=\"300.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"client.controllers.RegistrationController\">\n+   <children>\n+      <Label layoutX=\"98.0\" layoutY=\"14.0\" text=\"Регистрация\">\n+         <font>\n+            <Font size=\"18.0\" />\n+         </font>\n+      </Label>\n+      <Label layoutX=\"16.0\" layoutY=\"51.0\" text=\"Login: \">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Label>\n+      <Label layoutX=\"14.0\" layoutY=\"87.0\" text=\"Password:\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Label>\n+      <TextField fx:id=\"loginField\" layoutX=\"101.0\" layoutY=\"52.0\" prefHeight=\"26.0\" prefWidth=\"176.0\" />\n+      <PasswordField fx:id=\"passwordField\" layoutX=\"101.0\" layoutY=\"86.0\" prefHeight=\"26.0\" prefWidth=\"176.0\" />\n+      <TextField fx:id=\"usernameField\" layoutX=\"101.0\" layoutY=\"121.0\" prefHeight=\"26.0\" prefWidth=\"176.0\" />\n+      <Button layoutX=\"147.0\" layoutY=\"161.0\" mnemonicParsing=\"false\" onAction=\"#doRegistration\" text=\"Регистрация\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Button>\n+      <Button layoutX=\"31.0\" layoutY=\"161.0\" mnemonicParsing=\"false\" onAction=\"#goBack\" text=\"Назад\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Button>\n+      <Label layoutX=\"14.0\" layoutY=\"120.0\" text=\"Username:\">\n+         <font>\n+            <Font size=\"17.0\" />\n+         </font>\n+      </Label>\n+   </children>\n+</AnchorPane>"
  }
]
