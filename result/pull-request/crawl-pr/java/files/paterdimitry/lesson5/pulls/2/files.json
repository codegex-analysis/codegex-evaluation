[
  {
    "sha": "88a233eb175b3809903782b144c42cf8e8cb29bd",
    "filename": "Method.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/paterdimitry/lesson5/blob/27704c2e2cad902e610c634da71db3ada398fddf/Method.java",
    "raw_url": "https://github.com/paterdimitry/lesson5/raw/27704c2e2cad902e610c634da71db3ada398fddf/Method.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/lesson5/contents/Method.java?ref=27704c2e2cad902e610c634da71db3ada398fddf",
    "patch": "@@ -0,0 +1,34 @@\n+public class Method {\r\n+\r\n+    public int[] changeArray(int[] array) {\r\n+        int count = 1;\r\n+        if (array[array.length - 1] == 4)\r\n+            return new int[]{};\r\n+        while (array[array.length - count] != 4 && array.length >= count) {\r\n+            count++;\r\n+            if (count > array.length) {\r\n+                throw new RuntimeException();\r\n+            }\r\n+        }\r\n+        int[] newArray = new int[count - 1];\r\n+        for (int i = 0; i < newArray.length; i++) {\r\n+            newArray[i] = array[array.length - count + i + 1];\r\n+        }\r\n+        return newArray;\r\n+    }\r\n+\r\n+    public boolean checkArray(int[] array) {\r\n+        boolean flag1 = false;\r\n+        boolean flag4 = false;\r\n+        boolean flagElse = true;\r\n+        for (int i : array) {\r\n+            if (i == 1)\r\n+                flag1 = true;\r\n+            if (i == 4)\r\n+                flag4 = true;\r\n+            if (i != 1 && i != 4)\r\n+                flagElse = false;\r\n+        }\r\n+        return flag1 && flag4 && flagElse;\r\n+    }\r\n+}\r"
  },
  {
    "sha": "6c9008f620afb39daf86e531534c03f1e3edf0d6",
    "filename": "MethodTest.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/paterdimitry/lesson5/blob/27704c2e2cad902e610c634da71db3ada398fddf/MethodTest.java",
    "raw_url": "https://github.com/paterdimitry/lesson5/raw/27704c2e2cad902e610c634da71db3ada398fddf/MethodTest.java",
    "contents_url": "https://api.github.com/repos/paterdimitry/lesson5/contents/MethodTest.java?ref=27704c2e2cad902e610c634da71db3ada398fddf",
    "patch": "@@ -0,0 +1,52 @@\n+import org.junit.jupiter.api.*;\r\n+\r\n+public class MethodTest {\r\n+    private Method method;\r\n+\r\n+    @BeforeEach\r\n+    void init() {\r\n+        method = new Method();\r\n+    }\r\n+\r\n+    //тесты первого метода\r\n+    @Test\r\n+    void changeArray1() {\r\n+        Assertions.assertThrows(RuntimeException.class, () -> method.changeArray(new int[]{1, 2}));\r\n+    }\r\n+\r\n+    @Test\r\n+    void changeArray2() {\r\n+        Assertions.assertArrayEquals(new int[]{5, 6}, method.changeArray(new int[]{1, 2, 3, 4, 5, 6}));\r\n+    }\r\n+\r\n+    @Test\r\n+    void changeArray3() {\r\n+        Assertions.assertArrayEquals(new int[]{}, method.changeArray(new int[]{1, 2, 3, 4}));\r\n+    }\r\n+\r\n+    @Test\r\n+    void changeArray4() {\r\n+        Assertions.assertArrayEquals(new int[]{5, 6}, method.changeArray(new int[]{4, 4, 4, 4, 5, 6}));\r\n+    }\r\n+\r\n+    //тесты второго метода\r\n+    @Test\r\n+    void checkArray1() {\r\n+        Assertions.assertTrue(method.checkArray(new int[]{1, 1, 1, 4, 4, 4}));\r\n+    }\r\n+\r\n+    @Test\r\n+    void checkArray2() {\r\n+        Assertions.assertFalse(method.checkArray(new int[]{1, 1, 1, 1, 1, 1}));\r\n+    }\r\n+\r\n+    @Test\r\n+    void checkArray3() {\r\n+        Assertions.assertFalse(method.checkArray(new int[]{4, 4, 4, 4, 4, 4}));\r\n+    }\r\n+\r\n+    @Test\r\n+    void checkArray4() {\r\n+        Assertions.assertFalse(method.checkArray(new int[]{1, 2, 3, 4, 5, 6}));\r\n+    }\r\n+}\r"
  }
]
