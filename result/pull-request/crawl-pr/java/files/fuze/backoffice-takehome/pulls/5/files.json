[
  {
    "sha": "b827972004434c4280f7e952a1e0049322f4aec5",
    "filename": "src/main/java/com/fuze/takehome/jaxrs/endpoint/CustomerEndpoint.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/jaxrs/endpoint/CustomerEndpoint.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/jaxrs/endpoint/CustomerEndpoint.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/jaxrs/endpoint/CustomerEndpoint.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -7,12 +7,14 @@\n import javax.ws.rs.DELETE;\n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n import com.fuze.takehome.model.Customer;\n+import com.fuze.takehome.model.User;\n import com.fuze.takehome.service.CustomerService;\n \n @Path(\"/customers\")\n@@ -34,6 +36,14 @@ public Customer create(@Valid @NotNull Customer entity) {\n \tpublic Customer read(@NotNull @PathParam(\"id\") Long id) {\n \t\treturn service.read(id);\n \t}\n+\t\n+\t@PUT\n+\t@Path(\"/{id}\")\n+\t@Produces({ MediaType.APPLICATION_JSON })\n+\t@Consumes({ MediaType.APPLICATION_JSON })\t\n+\tpublic Customer update(@NotNull @PathParam(\"id\") Long id, @Valid @NotNull Customer entity) {\n+\t\t\treturn service.update(id, entity);\n+\t}\n \n \t\n \t@DELETE"
  },
  {
    "sha": "ac260b3d0420b6bf8a30cdd6349f495a88aa476b",
    "filename": "src/main/java/com/fuze/takehome/jaxrs/endpoint/UserEndpoint.java",
    "status": "modified",
    "additions": 12,
    "deletions": 2,
    "changes": 14,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/jaxrs/endpoint/UserEndpoint.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/jaxrs/endpoint/UserEndpoint.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/jaxrs/endpoint/UserEndpoint.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -9,6 +9,7 @@\n import javax.ws.rs.DELETE;\n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n@@ -42,10 +43,19 @@ public User read(@NotNull @PathParam(\"id\") Long id) {\n \t@Produces({ MediaType.APPLICATION_JSON })\n \tpublic List<User> list() {\n \t\treturn service.list();\n-\t}\t\n+\t}\n+\t\n+\t@PUT\n+\t@Path(\"/{id}\")\n+\t@Produces({ MediaType.APPLICATION_JSON })\n+\t@Consumes({ MediaType.APPLICATION_JSON })\t\n+\tpublic User update(@NotNull @PathParam(\"id\") Long id, @Valid @NotNull User entity) {\n+\t\t\treturn service.update(id, entity);\n+\t}\n \t\n \t@DELETE\n-\t@Path(\"/delete/{id}\")\n+\t//Usually don't specify action in endpoint path\n+\t@Path(\"/{id}\")\n \t@Produces({ MediaType.APPLICATION_JSON })\n \tpublic User delete(@NotNull @PathParam(\"id\") Long id) {\n \t\treturn service.delete(id);"
  },
  {
    "sha": "a05422c1203c204ee6d6fbc43499292725142156",
    "filename": "src/main/java/com/fuze/takehome/model/Department.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/model/Department.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/model/Department.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/model/Department.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -1,5 +1,7 @@\n package com.fuze.takehome.model;\n \n+import java.util.ArrayList;\n+\n import javax.validation.constraints.NotNull;\n \n public class Department {\n@@ -16,6 +18,9 @@\n \n \t@NotNull(message = \"active cannot be null\")\n \tprivate boolean active;\n+\t\n+\t@NotNull(message = \"users cannot be null\")\n+\tprivate ArrayList<Long> userIds = new ArrayList<>();\n \n \tpublic Long getId() {\n \t\treturn id;\n@@ -32,6 +37,14 @@ public Long getCustomerId() {\n \tpublic void setCustomerId(Long customerId) {\n \t\tthis.customerId = customerId;\n \t}\n+\t\n+\tpublic ArrayList<Long> getUserIds() {\n+\t\treturn userIds;\n+\t}\n+\t\n+\tpublic void setUserIds(ArrayList<Long> userIds) {\n+\t\tthis.userIds = userIds;\n+\t}\n \n \tpublic String getName() {\n \t\treturn name;\n@@ -66,6 +79,11 @@ public Department withCustomerId(Long customerId) {\n \t\tthis.customerId = customerId;\n \t\treturn this;\n \t}\n+\t\n+\tpublic Department withUserIds(ArrayList<Long> userIds) {\n+\t\tthis.userIds = userIds;\n+\t\treturn this;\n+\t}\n \n \tpublic Department withName(String name) {\n \t\tthis.name = name;"
  },
  {
    "sha": "6c28ae3ac4159d6fc9a72a725003663723ace509",
    "filename": "src/main/java/com/fuze/takehome/model/User.java",
    "status": "modified",
    "additions": 24,
    "deletions": 9,
    "changes": 33,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/model/User.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/model/User.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/model/User.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -1,5 +1,7 @@\n package com.fuze.takehome.model;\n \n+import java.util.ArrayList;\n+\n import javax.validation.constraints.NotNull;\n import javax.validation.constraints.Size;\n \n@@ -30,9 +32,9 @@\n \n \t@Size(max = 20, message = \"mobileNumber maximum length is 20 characters\")\n \tprivate String faxNumber;\n-\n-\t@NotNull(message = \"departmentId cannot be null\")\n-\tprivate Long departmentId;\n+\t\n+\t@NotNull(message = \"departmentIds cannot be null\")\n+\tprivate ArrayList<Long> departmentIds = new ArrayList<>();\n \n \t@NotNull(message = \"active cannot be null\")\n \tprivate boolean active;\n@@ -69,12 +71,18 @@ public void setCustomerId(Long customerId) {\n \t\tthis.customerId = customerId;\n \t}\n \n-\tpublic Long getDepartmentId() {\n-\t\treturn departmentId;\n+\tpublic ArrayList<Long> getDepartmentIds() {\n+\t\treturn departmentIds;\n \t}\n-\n+\t\n \tpublic void setDepartmentId(Long departmentId) {\n-\t\tthis.departmentId = departmentId;\n+\t\tArrayList<Long> departmentIds = new ArrayList<>();\n+\t\tdepartmentIds.add(departmentId);\n+\t\tthis.departmentIds = departmentIds;\n+\t}\n+\n+\tpublic void setDepartmentIds(ArrayList<Long> departmentIds) {\n+\t\tthis.departmentIds = departmentIds;\n \t}\n \n \tpublic void setUserName(String userName) {\n@@ -169,9 +177,16 @@ public User withFaxNumber(String faxNumber) {\n \t\tthis.faxNumber = faxNumber;\n \t\treturn this;\n \t}\n-\n+\t\n \tpublic User withDepartmentId(Long departmentId) {\n-\t\tthis.departmentId = departmentId;\n+\t\tArrayList<Long> departmentIds = new ArrayList<>();\n+\t\tdepartmentIds.add(departmentId);\n+\t\tthis.departmentIds = departmentIds;\n+\t\treturn this;\n+\t}\n+\n+\tpublic User withDepartmentIds(ArrayList<Long> departmentIds) {\n+\t\tthis.departmentIds = departmentIds;\n \t\treturn this;\n \t}\n "
  },
  {
    "sha": "f23a9e88ad7b8cdf6e8ad761d24c80bebee41faa",
    "filename": "src/main/java/com/fuze/takehome/mybatis/CustomerMapper.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/mybatis/CustomerMapper.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/mybatis/CustomerMapper.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/mybatis/CustomerMapper.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -9,7 +9,10 @@\n import org.apache.ibatis.annotations.Result;\n import org.apache.ibatis.annotations.Results;\n import org.apache.ibatis.annotations.Select;\n+import org.apache.ibatis.annotations.Update;\n+\n import com.fuze.takehome.model.Customer;\n+import com.fuze.takehome.model.User;\n \n @Named\n public interface CustomerMapper {\n@@ -32,6 +35,15 @@\n \t})\n \tpublic Customer read(Long id); \t\n \t\n+\t@Update(\"UPDATE\ttakeHome.customers \"\n+\t\t\t+ \"SET name = #{in.name}, \"\n+\t\t\t+ \"active = #{in.active}, \"\n+\t\t\t+ \"contact_email = #{in.contact.email}, \"\n+\t\t\t+ \"contact_firstname = #{in.contact.firstName}, \"\n+\t\t\t+ \"contact_lastname = #{in.contact.lastName} \"\n+\t\t\t+ \"WHERE id = #{id}\")\n+\tpublic int update(@Param(\"id\") Long id, @Param(\"in\") Customer in);\n+\t\n \t@Delete(\"DELETE FROM takeHome.customers WHERE id = #{id}\")\n \tpublic int delete(Long id); \t\n }\n\\ No newline at end of file"
  },
  {
    "sha": "b2b6367c6370489487a71a03c121b967c190afd0",
    "filename": "src/main/java/com/fuze/takehome/mybatis/DepartmentMapper.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/mybatis/DepartmentMapper.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/mybatis/DepartmentMapper.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/mybatis/DepartmentMapper.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -1,9 +1,12 @@\n package com.fuze.takehome.mybatis;\n \n+import java.util.ArrayList;\n+\n import javax.inject.Named;\n \n import org.apache.ibatis.annotations.Delete;\n import org.apache.ibatis.annotations.Insert;\n+import org.apache.ibatis.annotations.Many;\n import org.apache.ibatis.annotations.Options;\n import org.apache.ibatis.annotations.Param;\n import org.apache.ibatis.annotations.Result;\n@@ -31,10 +34,17 @@\n \t\t\t@Result(property = \"name\", \t\t\tcolumn = \"name\"),\n \t\t\t@Result(property = \"description\", \tcolumn = \"description\"),\n \t\t\t@Result(property = \"active\",\t\tcolumn = \"active\"),\n+\t\t\t@Result(property=  \"userIds\", column=\"id\", javaType=ArrayList.class, many=@Many(select=\"selectUsers\"))\n \t})\n \tpublic Department read(Long id);\n \t\n \t@Delete(\"DELETE FROM takeHome.departments WHERE id = #{id}\")\n \tpublic int delete(Long id);\n+\t\n+\t@Select(\"SELECT \"\n+\t\t\t+ \"user_id \"\n+\t\t\t+ \"FROM takeHome.user_department \"\n+\t\t\t+ \"WHERE department_id = #{id}\")\n+\tArrayList<Long> selectUsers(Long id);\n }\n "
  },
  {
    "sha": "cf77bb8c7020f33c50b08e39c59e0806f01403ee",
    "filename": "src/main/java/com/fuze/takehome/mybatis/UserDepartmentMapper.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/mybatis/UserDepartmentMapper.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/mybatis/UserDepartmentMapper.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/mybatis/UserDepartmentMapper.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -0,0 +1,24 @@\n+package com.fuze.takehome.mybatis;\n+\n+import javax.inject.Named;\n+\n+import org.apache.ibatis.annotations.Delete;\n+import org.apache.ibatis.annotations.Insert;\n+import org.apache.ibatis.annotations.Param;\n+\n+@Named\n+public interface UserDepartmentMapper {\n+\t\n+\t@Insert(\"INSERT into takeHome.user_department \"\n+\t\t\t+ \"(user_id, department_id) \"\n+\t\t\t+ \"VALUES \"\n+\t\t\t+ \"(#{userId}, #{departmentId})\")\n+\tpublic int create(@Param(\"userId\") Long userId, @Param(\"departmentId\") Long departmentId);\n+\t\n+\t@Delete(\"DELETE FROM takeHome.user_department WHERE user_id = #{userId}\")\n+\tpublic int deleteUser(Long userId);\n+\t\n+\t@Delete(\"DELETE FROM takeHome.user_department WHERE department_id = #{departmentId}\")\n+\tpublic int deleteDepartment(Long departmentId);\n+}\n+"
  },
  {
    "sha": "c2429d5bb4119f3ad55e7f44a3e8b55d590ffbae",
    "filename": "src/main/java/com/fuze/takehome/mybatis/UserMapper.java",
    "status": "modified",
    "additions": 29,
    "deletions": 6,
    "changes": 35,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/mybatis/UserMapper.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/mybatis/UserMapper.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/mybatis/UserMapper.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -1,5 +1,6 @@\n package com.fuze.takehome.mybatis;\n \n+import java.util.ArrayList;\n import java.util.Collection;\n \n import javax.inject.Named;\n@@ -11,20 +12,23 @@\n import org.apache.ibatis.annotations.Result;\n import org.apache.ibatis.annotations.Results;\n import org.apache.ibatis.annotations.Select;\n+import org.apache.ibatis.annotations.Update;\n+import org.apache.ibatis.annotations.Many;\n+\n import com.fuze.takehome.model.User;\n \n @Named\n public interface UserMapper {\n \t\t\n \t@Insert(\"INSERT into takeHome.users \"\n-\t\t\t+ \"(customer_id, username, first_name, last_name, email, telephone_number, mobile_number, fax_number, department_id, active) \"\n+\t\t\t+ \"(customer_id, username, first_name, last_name, email, telephone_number, mobile_number, fax_number, active) \"\n \t\t\t+ \"VALUES \"\n-\t\t\t+ \"(#{in.customerId}, #{in.userName}, #{in.firstName}, #{in.lastName}, #{in.email}, #{in.telephoneNumber}, #{in.mobileNumber}, #{in.faxNumber}, #{in.departmentId}, #{in.active})\")\n+\t\t\t+ \"(#{in.customerId}, #{in.userName}, #{in.firstName}, #{in.lastName}, #{in.email}, #{in.telephoneNumber}, #{in.mobileNumber}, #{in.faxNumber}, #{in.active})\")\n \t@Options(useGeneratedKeys=true, keyProperty=\"in.id\")\n \tpublic int create(@Param(\"in\") User in);\n \n \t@Select(\"SELECT \"\n-\t\t\t+ \"id, customer_id, username, first_name, last_name, email, telephone_number, mobile_number, fax_number, department_id, active \"\n+\t\t\t+ \"id, customer_id, username, first_name, last_name, email, telephone_number, mobile_number, fax_number, active \"\n \t\t\t+ \"FROM takeHome.users \"\n \t\t\t+ \"WHERE id = #{id}\" )\n \t@Results(value = { \n@@ -37,15 +41,34 @@\n \t\t\t@Result(property = \"telephoneNumber\", \t\tcolumn = \"telephone_number\"),\n \t\t\t@Result(property = \"mobileNumber\", \t\tcolumn = \"mobile_number\"),\n \t\t\t@Result(property = \"faxNumber\", \t\tcolumn = \"fax_number\"),\n-\t\t\t@Result(property = \"departmentId\", \tcolumn = \"department_id\"),\n-\t\t\t@Result(property = \"active\", \t\tcolumn = \"active\")\n+\t\t\t@Result(property = \"active\", \t\tcolumn = \"active\"),\n+\t\t\t@Result(property=  \"departmentIds\", column=\"id\", javaType=ArrayList.class, many=@Many(select=\"selectDepartments\"))\n \t})\n \tpublic User read(Long id);\n \t\n \t@Select(\"SELECT id FROM takeHome.users\")\n \tpublic Collection<Long> list(); \t\n \t\n+\t@Update(\"UPDATE\ttakeHome.users \"\n+\t\t\t+ \"SET customer_id = #{in.customerId}, \"\n+\t\t\t+ \"username = #{in.userName}, \"\n+\t\t\t+ \"first_name = #{in.firstName}, \"\n+\t\t\t+ \"last_name = #{in.lastName}, \"\n+\t\t\t+ \"email = #{in.email}, \"\n+\t\t\t+ \"telephone_number = #{in.telephoneNumber}, \"\n+\t\t\t+ \"mobile_number = #{in.mobileNumber}, \"\n+\t\t\t+ \"fax_number = #{in.faxNumber}, \"\n+\t\t\t+ \"active = #{in.active} \"\n+\t\t\t+ \"WHERE id = #{id}\")\n+\tpublic int update(@Param(\"id\") Long id, @Param(\"in\") User in);\n+\t\n \t@Delete(\"DELETE FROM takeHome.users WHERE id = #{id}\")\n-\tpublic int delete(Long id); \t\n+\tpublic int delete(Long id);\n+\t\n+\t@Select(\"SELECT \"\n+\t\t\t+ \"department_id \"\n+\t\t\t+ \"FROM takeHome.user_department \"\n+\t\t\t+ \"WHERE user_id = #{id}\")\n+\tArrayList<Long> selectDepartments(Long id);\n }\n "
  },
  {
    "sha": "a85a84cf325817635dcbe178d927fa38fe7f24ed",
    "filename": "src/main/java/com/fuze/takehome/service/CustomerService.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/service/CustomerService.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/service/CustomerService.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/service/CustomerService.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -1,11 +1,13 @@\n package com.fuze.takehome.service;\n \n import javax.inject.Inject;\n+import javax.ws.rs.InternalServerErrorException;\n import javax.ws.rs.NotFoundException;\n import javax.ws.rs.NotSupportedException;\n \n import org.springframework.transaction.annotation.Transactional;\n import com.fuze.takehome.model.Customer;\n+import com.fuze.takehome.model.User;\n import com.fuze.takehome.mybatis.CustomerMapper;\n \n public class CustomerService {\n@@ -28,6 +30,18 @@ public Customer read(Long id) {\n \t\t\tthrow new NotFoundException();\n \t\t}\n \t}\n+\t\n+\t@Transactional\n+\tpublic Customer update(Long id, Customer customer) {\n+\t\tthis.read(id);\n+\n+\t\ttry {\n+\t\t\tmapper.update(id, customer);\n+\t\t} catch (Exception ex) {\n+\t\t\tthrow new InternalServerErrorException();\n+\t\t}\n+\t\treturn customer;\n+\t}\n \n \t@Transactional\n \tpublic Customer delete(Long id) {"
  },
  {
    "sha": "9333454dc6c8908a7547d2a2928c4e773ce5efb0",
    "filename": "src/main/java/com/fuze/takehome/service/DepartmentService.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/service/DepartmentService.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/service/DepartmentService.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/service/DepartmentService.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -4,6 +4,7 @@\n import java.util.Date;\n import java.util.HashMap;\n import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n \n import javax.inject.Inject;\n import javax.ws.rs.NotFoundException;\n@@ -22,7 +23,8 @@\n \tprivate static final SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");\n \t\t\n \t//Keeps track of the first time a department name was created\n-\tprivate static final Map<String, Date> existingDepartmentNames= new HashMap<String, Date>();\n+\t//Use ConcurrentHashMap for thread safe operations\n+\tprivate static final ConcurrentHashMap<String, Date> existingDepartmentNames= new ConcurrentHashMap<String, Date>();\n \t\n \t@Inject\n \tprotected DepartmentMapper mapper;"
  },
  {
    "sha": "65725cf9f90b513146860dda99da7820365e3a89",
    "filename": "src/main/java/com/fuze/takehome/service/UserService.java",
    "status": "modified",
    "additions": 48,
    "deletions": 7,
    "changes": 55,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/service/UserService.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/java/com/fuze/takehome/service/UserService.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/java/com/fuze/takehome/service/UserService.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -5,21 +5,44 @@\n import java.util.List;\n \n import javax.inject.Inject;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.InternalServerErrorException;\n import javax.ws.rs.NotFoundException;\n \n+import org.springframework.dao.DataIntegrityViolationException;\n import org.springframework.transaction.annotation.Transactional;\n import com.fuze.takehome.model.User;\n+import com.fuze.takehome.mybatis.UserDepartmentMapper;\n import com.fuze.takehome.mybatis.UserMapper;\n \n public class UserService {\n \n \t@Inject\n-\tpublic UserMapper mapper;\n+\t// Mapper should not be public\n+\tprotected UserMapper mapper;\n+\t\n+\t@Inject\n+\tprotected UserDepartmentMapper userDepartmentMapper;\n \n \t@Transactional\n \tpublic User create(User user) {\n-\t\tmapper.create(user);\n-\t\treturn user;\t\t\n+\t\t\n+\t\t//Handle error cases when mapper.create() is unable to create a user or when user is not defined correctly\n+\t\ttry {\n+\t\t\tmapper.create(user);\n+\t\t\tfor (Long departmentId : user.getDepartmentIds()) {\n+\t\t\t\tuserDepartmentMapper.create(user.getId(), departmentId);\n+\t\t\t}\n+\t\t\treturn user;\n+\t\t}\n+\t\t//Handle different cases\n+\t\tcatch (DataIntegrityViolationException e) {\n+\t\t\tthrow new BadRequestException();\n+\t\t}\n+\t\tcatch (Exception e) {\n+\t\t\t//Any other case throw internal server error\n+\t\t\tthrow new InternalServerErrorException();\n+\t\t}\n \t}\n \n \t@Transactional\n@@ -36,23 +59,41 @@ public User read(Long id) {\n \tpublic List<User> list() {\n \t\tLinkedList<User> userReturnList  = new LinkedList<User>();\n \t\tArrayList<Long> userIds = new ArrayList<Long>(mapper.list());\n+\t\t\n+\t\t//Wasn't iterating through every index, only the first one\n \t\tfor(int i = 0; i < userIds.size(); i++) {\n-\t\t\tuserReturnList.add(mapper.read(userIds.get(0)));\n+\t\t\tuserReturnList.add(mapper.read(userIds.get(i)));\n \t\t}\n+\t\t\n \t\treturn userReturnList;\n \t}\n+\t\n+\t@Transactional\n+\tpublic User update(Long id, User user) {\n+\t\tthis.read(id);\n+\n+\t\ttry {\n+\t\t\tmapper.update(id, user);\n+\t\t} catch (Exception ex) {\n+\t\t\tthrow new InternalServerErrorException();\n+\t\t}\n+\t\treturn user;\n+\t}\n \n \t@Transactional\n \tpublic User delete(Long id) {\n+\t\t\n+\t\t// Remove try catch since it's already handled in the read operation\n \t\tUser user = this.read(id);\n-\t\tif (user  == null) {\n-\t\t\tthrow new NotFoundException();\n-\t\t}\n+\n \t\tint count = 0;\n \t\ttry {\n \t\t\tcount = mapper.delete(id);\n+\t\t\tuserDepartmentMapper.deleteUser(id);\n \t\t}\n+\t\t// Do something with caught exception - throwing internal server error for now\n \t\tcatch(Exception e){\n+\t\t\tthrow new InternalServerErrorException();\n \t\t}\n \t\tif(count < 1)\n \t\t{"
  },
  {
    "sha": "8b0977fe557a647baaa878f48a647917c5ae2bbd",
    "filename": "src/main/resources/schema/create.schema.sql",
    "status": "modified",
    "additions": 15,
    "deletions": 5,
    "changes": 20,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/resources/schema/create.schema.sql",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/main/resources/schema/create.schema.sql",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/main/resources/schema/create.schema.sql?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -45,18 +45,28 @@ CREATE TABLE IF NOT EXISTS takeHome.users (\n   mobile_number VARCHAR(20) NULL,\n   fax_number VARCHAR(20) NULL,\n   active BOOLEAN NOT NULL,\n-  department_id BIGINT NULL,\n   PRIMARY KEY (id),\n   CONSTRAINT fk_users_customers1\n     FOREIGN KEY (customer_id)\n     REFERENCES takeHome.customers (id)\n-    ON DELETE CASCADE,\n-  CONSTRAINT fk_users_departments1\n+    ON DELETE CASCADE);\n+\n+CREATE TABLE IF NOT EXISTS takeHome.user_department (\n+  user_id BIGINT NULL,\n+  department_id BIGINT NULL,\n+  CONSTRAINT fk_user_department_departmentid\n     FOREIGN KEY (department_id)\n     REFERENCES takeHome.departments (id)\n-    ON DELETE CASCADE);\n+    ON DELETE CASCADE\n+    ON UPDATE CASCADE,\n+  CONSTRAINT fk_user_department_userid\n+    FOREIGN KEY (user_id)\n+    REFERENCES takeHome.users (id)\n+    ON DELETE CASCADE\n+    ON UPDATE CASCADE);\n \n CREATE INDEX IF NOT EXISTS fk_users_customers1_idx ON takeHome.users (customer_id ASC);\n-CREATE INDEX IF NOT EXISTS fk_users_departments1_idx ON takeHome.users (department_id ASC);\n+CREATE INDEX IF NOT EXISTS fk_user_department_departmentid_idx ON takeHome.user_department (department_id ASC);\n+CREATE INDEX IF NOT EXISTS fk_user_department_userid_idx ON takeHome.user_department (user_id ASC);\n \n commit;"
  },
  {
    "sha": "89970e02a2bfb6c86d8e1ee32ba218f774f4f04f",
    "filename": "src/test/java/com/fuze/takehome/test/UserTest.java",
    "status": "modified",
    "additions": 82,
    "deletions": 6,
    "changes": 88,
    "blob_url": "https://github.com/fuze/backoffice-takehome/blob/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/test/java/com/fuze/takehome/test/UserTest.java",
    "raw_url": "https://github.com/fuze/backoffice-takehome/raw/2b13da85860bf28fb6f4654fb1194fe6d9d95bd0/src/test/java/com/fuze/takehome/test/UserTest.java",
    "contents_url": "https://api.github.com/repos/fuze/backoffice-takehome/contents/src/test/java/com/fuze/takehome/test/UserTest.java?ref=2b13da85860bf28fb6f4654fb1194fe6d9d95bd0",
    "patch": "@@ -26,11 +26,15 @@\n \t * invoked to insert a couple dummy entities into the database. \n \t * \n \t */\n+\t\n \t@Test\n-\tpublic void testUser() {\n+\tpublic void testListUser() {\n \t\tList<User> allUsers = service.list();\n \t\tAssert.assertNotNull(allUsers);\n-\t\tAssert.assertEquals(2, allUsers.size());\n+\t}\n+\t\n+\t@Test\n+\tpublic void testCreateUser() {\n \t\t\n \t\tUser newUser = new User()\n \t\t.withActive(true)\n@@ -40,12 +44,84 @@ public void testUser() {\n \t\t.withLastName(\"Test\")\n \t\t.withMobileNumber(\"555-2356-254\")\n \t\t.withTelephoneNumber(\"555-8512-763\")\n-\t\t.withUserName(\"rcastorena\");\n+\t\t.withUserName(\"rcastorena\")\n+\t\t.withDepartmentId(0L);\n+\t\t\n+\t\tUser createdUser = service.create(newUser);\n+\t\tAssert.assertEquals(newUser, createdUser);\n+\t}\n+\t\n+\t@Test\n+\tpublic void testReadUser() {\n+\t\t// Create user to be read\n+\t\tUser newUser = new User()\n+\t\t.withActive(true)\n+\t\t.withCustomerId(0L)\n+\t\t.withEmail(\"myTest@test.com\")\n+\t\t.withFirstName(\"My\")\n+\t\t.withLastName(\"Test\")\n+\t\t.withMobileNumber(\"555-2356-254\")\n+\t\t.withTelephoneNumber(\"555-8512-763\")\n+\t\t.withUserName(\"rcastorena\")\n+\t\t.withDepartmentId(0L);\n \t\t\n-\t\tservice.create(newUser);\n+\t\tUser createdUser = service.create(newUser);\n+\t\tAssert.assertEquals(newUser, createdUser);\n \t\t\n-\t\tAssert.assertNotNull(newUser.getDepartmentId());\n+\t\tUser returnedUser = service.read(createdUser.getId());\n+\t\tAssert.assertTrue(areUsersEqual(newUser, returnedUser));\n+\t}\n+\t\n+\t@Test\n+\tpublic void testDeleteUser() {\n \t\t\n-\t\t//ugghh.... can't be bothered\n+\t\t// Create user to be deleted\n+\t\tUser newUser = new User()\n+\t\t.withActive(true)\n+\t\t.withCustomerId(0L)\n+\t\t.withEmail(\"myTest@test.com\")\n+\t\t.withFirstName(\"My\")\n+\t\t.withLastName(\"Test\")\n+\t\t.withMobileNumber(\"555-2356-254\")\n+\t\t.withTelephoneNumber(\"555-8512-763\")\n+\t\t.withUserName(\"rcastorena\")\n+\t\t.withDepartmentId(0L);\n+\t\t\t\t\n+\t\tUser createdUser = service.create(newUser);\n+\t\tAssert.assertEquals(newUser, createdUser);\n+\t\t\n+\t\tUser deletedUser = service.delete(createdUser.getId());\n+\t\tAssert.assertTrue(areUsersEqual(newUser, deletedUser));\n+\t}\n+\t\n+\tprivate boolean areUsersEqual(User user1, User user2) {\n+\t\tif (user1.isActive() != (user2.isActive())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (!user1.getCustomerId().equals(user2.getCustomerId())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (!user1.getEmail().equals(user2.getEmail())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (!user1.getFirstName().equals(user2.getFirstName())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (!user1.getLastName().equals(user2.getLastName())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (!user1.getMobileNumber().equals(user2.getMobileNumber())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (!user1.getTelephoneNumber().equals(user2.getTelephoneNumber())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (!user1.getUserName().equals(user2.getUserName())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (!user1.getDepartmentIds().equals(user2.getDepartmentIds())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n \t}\n }"
  }
]
