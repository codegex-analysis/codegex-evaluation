[
  {
    "sha": "6e0e8e92bac9957a8a9f0cf534dbe86fe622cf6f",
    "filename": "application-diagram-ui/src/main/resources/Diagram/DiagramEditSheet.xml",
    "status": "modified",
    "additions": 29,
    "deletions": 23,
    "changes": 52,
    "blob_url": "https://github.com/xwikisas/application-diagram/blob/0274c79fb7ace91a38bf43aea09934ded22f20ac/application-diagram-ui/src/main/resources/Diagram/DiagramEditSheet.xml",
    "raw_url": "https://github.com/xwikisas/application-diagram/raw/0274c79fb7ace91a38bf43aea09934ded22f20ac/application-diagram-ui/src/main/resources/Diagram/DiagramEditSheet.xml",
    "contents_url": "https://api.github.com/repos/xwikisas/application-diagram/contents/application-diagram-ui/src/main/resources/Diagram/DiagramEditSheet.xml?ref=0274c79fb7ace91a38bf43aea09934ded22f20ac",
    "patch": "@@ -993,7 +993,7 @@ define('diagram-link-editor', [\n           // less accurate.\n           var containerWidth = this.state.initialWidth;\n           var prevNode = $(fo.parentNode).prev()[0];\n-          if (prevNode.nodeName == 'rect') {\n+          if (prevNode &amp;&amp; prevNode.nodeName == 'rect') {\n             var containerWidth = prevNode.width.baseVal.valueAsString;\n           }\n           try {\n@@ -1065,7 +1065,7 @@ define('diagram-image-editor', ['xwiki-utils', 'diagram-link-handler', 'draw.io'\n   // Override for uploading the image as attachment instead of encode it to Base64.\n   var originalImportFiles = EditorUi.prototype.importFiles;\n   EditorUi.prototype.importFiles = function(files, x, y, maxSize, fn, resultFn, filterFn, barrierFn, resizeDialog,\n-      maxBytes, resampleThreshold, ignoreEmbeddedXml) {\n+      maxBytes, resampleThreshold, ignoreEmbeddedXml, evt) {\n     let importFilesArgs = arguments;\n     if (fn) {\n       let editorUi = this;\n@@ -1149,16 +1149,13 @@ define('diagram-url-io', ['diagram-utils', 'draw.io'], function(diagramUtils) {\n   };\n \n   // Custom diagram import from URL.\n-  var originalLoadUrl = EditorUi.prototype.loadUrl;\n-  EditorUi.prototype.loadUrl = function(url, success, error, forceBinary, retry, dataUriPrefix) {\n+  var loadUrl = function(url) {\n+    var diagramXML = null;\n     let exportedUrl = getParameterValueFromURL('url', url);\n     if (exportedUrl) {\n-      let diagramXML = diagramUtils.getDiagramXMLFromURL(exportedUrl);\n-      if (diagramXML) {\n-        return success(diagramXML);\n-      }\n+      diagramXML = diagramUtils.getDiagramXMLFromURL(exportedUrl);\n     }\n-    return originalLoadUrl.apply(this, arguments);\n+    return diagramXML;\n   };\n \n   // Custom diagram export as URL (using the current host).\n@@ -1181,6 +1178,10 @@ define('diagram-url-io', ['diagram-utils', 'draw.io'], function(diagramUtils) {\n     }\n     return rawURL;\n   }\n+\n+  return {\n+    loadUrl: loadUrl\n+  };\n });\n \n /**\n@@ -1229,12 +1230,12 @@ define('diagram-editor', [\n   'jquery',\n   'diagram-store',\n   'diagram-utils',\n+  'diagram-url-io',\n   'diagram-graph-xml-filter',\n   'diagram-link-editor',\n   'diagram-image-editor',\n-  'diagram-url-io',\n   'diagram-external-services'\n-], function($, diagramStore, diagramUtils) {\n+], function($, diagramStore, diagramUtils, diagramUrlIO) {\n \n   // These variables are used to decide if an image should be uploaded at original resolution or\n   // should be declined for being too big.\n@@ -1247,28 +1248,43 @@ define('diagram-editor', [\n   //\n   var createDiagramEditor = function(options) {\n     options = options || {};\n+    // Todo: this is needed since we do not use drafts and it would create the file to soon, leading to the file being\n+    // opened in a new window.\n+    EditorUi.enableDrafts = false;\n     var editor = new Editor(/* chromeless: */ uiTheme === 'min', options.themes, /* model: */ null, /* graph: */ null,\n       /* editable: */ true);\n     var editorUI = new App(editor, options.container);\n     // This is usefull for debugging the diagram editor from the JavaScript console.\n     $(editorUI.container).data('diagramEditor', editorUI).trigger('diagramEditorCreated', editorUI);\n     // Fix the editor UI before loading the diagram because layout changes can influence the way the shapes are drawn.\n     fixEditorUI(editorUI);\n+    fixLoadUrl(editorUI);\n     var file = diagramStore.createFile(editorUI, options.input, options.fileName, options.documentReference);\n     // The first letter of the file name is used to determine the storage type. Let's use 'X' for XWiki storage.\n     editorUI.loadFile('X' + options.fileName, true, file);\n     return editorUI;\n   };\n \n   var fixEditorUI = function(editorUI) {\n-    hideFooter(editorUI);\n     cleanMenu(editorUI);\n     fixKeyboardShortcutsAction(editorUI);\n     removeCompactModeToggle(editorUI);\n     fixFullScreenToggle(editorUI);\n     fixEditorButtons($(editorUI.container));\n   };\n \n+  var fixLoadUrl = function(editorUI) {\n+    // Custom diagram import from URL.\n+    var originalLoadUrl = editorUI.editor.loadUrl;\n+    editorUI.editor.loadUrl = function(url, success, error, forceBinary, retry, dataUriPrefix, noBinary, headers) {\n+      var diagramXML = diagramUrlIO.loadUrl(url);\n+      if (diagramXML != null) {\n+        return success(diagramXML);\n+      }\n+      return originalLoadUrl.apply(this, arguments);\n+    };\n+  };\n+\n   //\n   // Disable the tabbed UI (setting urlParams['pages'] to '0' is not enough..)\n   //\n@@ -1308,16 +1324,6 @@ define('diagram-editor', [\n     return originalAddItem.apply(this, arguments);\n   };\n \n-  //\n-  // Hide the editor footer.\n-  //\n-  var hideFooter = function(editorUI) {\n-    // We call this just in case the footer is visible.\n-    editorUI.hideFooter();\n-    // Make sure the diagram editor doesn't leave space for the footer.\n-    editorUI.footerHeight = 0;\n-  };\n-\n   //\n   // Clean the editor menu by removing the features that are not needed.\n   //\n@@ -1384,7 +1390,7 @@ define('diagram-editor', [\n   //\n   var removeCompactModeToggle = function(editorUI) {\n     if (typeof editorUI.toggleCompactMode === 'function') {\n-      editorUI.toggleCompactMode(true);\n+      editorUI.toggleCompactMode(/* visible: */ false);\n       var buttons = $(editorUI.container).find('.geToolbarContainer &gt; a.geButton');\n       buttons.last().remove();\n       buttons.css('right', function(index, value) {"
  },
  {
    "sha": "92dc041c42be905ed751492929f725fbaedd97ec",
    "filename": "application-diagram-ui/src/main/resources/Diagram/DiagramSheet.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/xwikisas/application-diagram/blob/0274c79fb7ace91a38bf43aea09934ded22f20ac/application-diagram-ui/src/main/resources/Diagram/DiagramSheet.xml",
    "raw_url": "https://github.com/xwikisas/application-diagram/raw/0274c79fb7ace91a38bf43aea09934ded22f20ac/application-diagram-ui/src/main/resources/Diagram/DiagramSheet.xml",
    "contents_url": "https://api.github.com/repos/xwikisas/application-diagram/contents/application-diagram-ui/src/main/resources/Diagram/DiagramSheet.xml?ref=0274c79fb7ace91a38bf43aea09934ded22f20ac",
    "patch": "@@ -265,7 +265,6 @@ define('diagram-setup', ['diagram-config'], function(diagramConfig) {\n   window.DriveLibrary = window.DropboxLibrary = window.GitHubLibrary = window.OneDriveLibrary = window.TrelloLibrary\n     = false;\n \n-  var suffix = diagramConfig.debug ? '' : '.min';\n   var mxGraphEditorBasePath = diagramConfig.mxGraphEditorBasePath;\n   require.config({\n     paths: {\n@@ -275,19 +274,20 @@ define('diagram-setup', ['diagram-config'], function(diagramConfig) {\n       'sanitizer': mxGraphEditorBasePath + 'sanitizer/sanitizer.min',\n       'spin': drawIOBasePath + 'js/spin/spin.min',\n       'jszip': drawIOBasePath + 'js/jszip/jszip.min',\n-      'mxgraph-init': drawIOBasePath + 'js/draw.io.init' + suffix,\n-      'mxgraph-client': mxBasePath + 'mxClient.bundle' + suffix,\n-      'mxgraph-editor': mxGraphEditorBasePath + 'mxGraphEditor' + suffix,\n-      'mxgraph-viewer': mxGraphEditorBasePath + 'mxGraphViewer' + suffix,\n-      'draw.io': drawIOBasePath + 'js/draw.io' + suffix,\n-      'draw.io.viewer': drawIOBasePath + 'js/draw.io.viewer' + suffix,\n+      'rough': drawIOBasePath + 'js/rough/rough.min',\n+      'mxgraph-init': drawIOBasePath + 'js/draw.io.init.min',\n+      'mxgraph-client': mxBasePath + 'mxClient.bundle.min',\n+      'mxgraph-editor': mxGraphEditorBasePath + 'mxGraphEditor.min',\n+      'mxgraph-viewer': mxGraphEditorBasePath + 'mxGraphViewer.min',\n+      'draw.io': drawIOBasePath + 'js/draw.io.min',\n+      'draw.io.viewer': drawIOBasePath + 'js/draw.io.viewer.min',\n       'resourceSelector': new XWiki.Document('WebHome', 'Diagram.ResourceSelector').getURL('jsx', 'minify=' + !diagramConfig.debug)\n     },\n     shim: {\n       'mxgraph-client': ['mxgraph-init'],\n       'mxgraph-editor': ['mxgraph-client', 'jscolor', 'sanitizer'],\n       'mxgraph-viewer': ['mxgraph-client', 'sanitizer'],\n-      'draw.io': ['mxgraph-editor', 'base64', 'pako-global', 'spin-global', 'jszip-global'],\n+      'draw.io': ['mxgraph-editor', 'base64', 'pako-global', 'spin-global', 'jszip-global', 'rough'],\n       'draw.io.viewer': ['mxgraph-viewer', 'pako-global', 'spin-global'],\n     }\n   })"
  },
  {
    "sha": "ea7c9a2750958d9bfc7055a2d795619817a2d315",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/xwikisas/application-diagram/blob/0274c79fb7ace91a38bf43aea09934ded22f20ac/pom.xml",
    "raw_url": "https://github.com/xwikisas/application-diagram/raw/0274c79fb7ace91a38bf43aea09934ded22f20ac/pom.xml",
    "contents_url": "https://api.github.com/repos/xwikisas/application-diagram/contents/pom.xml?ref=0274c79fb7ace91a38bf43aea09934ded22f20ac",
    "patch": "@@ -44,7 +44,7 @@\n     <tag>HEAD</tag>\n   </scm>\n   <properties>\n-    <draw.io.version>12.3.3-2</draw.io.version>\n+    <draw.io.version>14.4.3</draw.io.version>\n     <licensing.version>1.16.1</licensing.version>\n   </properties>\n   <modules>"
  }
]
