[
  {
    "sha": "5246b5993b89a89cbe37901c0b128b763d04acd8",
    "filename": "HW08-serialization/build.gradle",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/build.gradle",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/build.gradle",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/build.gradle?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1,34 @@\n+plugins {\n+    id 'java'\n+}\n+\n+sourceCompatibility = JavaVersion.VERSION_15\n+targetCompatibility = JavaVersion.VERSION_15\n+\n+dependencies {\n+    implementation 'com.google.guava:guava'\n+    implementation 'com.fasterxml.jackson.core:jackson-databind'\n+    implementation 'javax.json:javax.json-api'\n+    implementation group: 'org.glassfish', name: 'javax.json', version: '1.1.4'\n+    implementation 'com.google.protobuf:protobuf-java-util'\n+\n+    testImplementation ('org.junit.jupiter:junit-jupiter-api')\n+    testImplementation ('org.junit.jupiter:junit-jupiter-engine')\n+    testImplementation ('org.junit.jupiter:junit-jupiter-params')\n+    testImplementation ('org.assertj:assertj-core')\n+    testImplementation ('org.mockito:mockito-core')\n+    testImplementation ('org.mockito:mockito-junit-jupiter')\n+}\n+\n+test {\n+    useJUnitPlatform()\n+    testLogging {\n+        events \"passed\", \"skipped\", \"failed\"\n+    }\n+}\n+\n+tasks.withType(JavaCompile) {\n+    options.with {\n+        encoding = 'UTF-8'\n+    }\n+}"
  },
  {
    "sha": "413fb721902e14a7c3d27265772c66b72d0267ab",
    "filename": "HW08-serialization/src/main/java/ru/otus/dataprocessor/FileLoader.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/FileLoader.java",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/FileLoader.java",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/src/main/java/ru/otus/dataprocessor/FileLoader.java?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.otus.dataprocessor;\n+\n+import ru.otus.model.Measurement;\n+\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.json.Json;\n+import javax.json.JsonArray;\n+\n+public class FileLoader implements Loader {\n+\n+    private final String fileName;\n+\n+    public FileLoader(String fileName) {\n+        this.fileName = fileName;\n+    }\n+\n+    @Override\n+    public List<Measurement> load() throws IOException {\n+        //читает файл, парсит и возвращает результат\n+        var fis = new FileInputStream(fileName);\n+        var reader = Json.createReader(fis);\n+        var personObject = (JsonArray) reader.read();\n+        reader.close();\n+        var measurementList = new ArrayList<Measurement>();\n+        for (var jsonElement : personObject) {\n+            var measurement = new Measurement(jsonElement.asJsonObject().getString(\"name\")\n+                    , jsonElement.asJsonObject().getInt(\"value\"));\n+            measurementList.add(measurement);\n+        }\n+\n+        return measurementList;\n+    }\n+\n+\n+}"
  },
  {
    "sha": "db06333df044c2ee5eff6171f4da777275e89eb5",
    "filename": "HW08-serialization/src/main/java/ru/otus/dataprocessor/FileProcessException.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/FileProcessException.java",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/FileProcessException.java",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/src/main/java/ru/otus/dataprocessor/FileProcessException.java?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.dataprocessor;\n+\n+public class FileProcessException extends RuntimeException {\n+    public FileProcessException(Exception ex) {\n+        super(ex);\n+    }\n+\n+    public FileProcessException(String msg) {\n+        super(msg);\n+    }\n+}"
  },
  {
    "sha": "f737fef6f104cd5acc54b12f6d072d5d0d4cd21a",
    "filename": "HW08-serialization/src/main/java/ru/otus/dataprocessor/FileSerializer.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/FileSerializer.java",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/FileSerializer.java",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/src/main/java/ru/otus/dataprocessor/FileSerializer.java?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.otus.dataprocessor;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Map;\n+\n+public class FileSerializer implements Serializer {\n+\n+    private final String fileName;\n+    private final ObjectMapper mapper = new ObjectMapper();\n+\n+    public FileSerializer(String fileName) {\n+        this.fileName = fileName;\n+    }\n+\n+    @Override\n+    public void serialize(Map<String, Double> data) throws IOException {\n+        //формирует результирующий json и сохраняет его в файл\n+        var file = new File(fileName);\n+        mapper.writeValue(file, data);\n+    }\n+}"
  },
  {
    "sha": "41a2a7ad8426315756d6b5fa832d618aac8a50f8",
    "filename": "HW08-serialization/src/main/java/ru/otus/dataprocessor/Loader.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/Loader.java",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/Loader.java",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/src/main/java/ru/otus/dataprocessor/Loader.java?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.dataprocessor;\n+\n+import ru.otus.model.Measurement;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+public interface Loader {\n+\n+    List<Measurement> load() throws IOException;\n+}"
  },
  {
    "sha": "58e05a6c8dfe374b6d31f6015338bbcd86867dda",
    "filename": "HW08-serialization/src/main/java/ru/otus/dataprocessor/Processor.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/Processor.java",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/Processor.java",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/src/main/java/ru/otus/dataprocessor/Processor.java?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.dataprocessor;\n+\n+import ru.otus.model.Measurement;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface Processor {\n+\n+    Map<String, Double> process(List<Measurement> data);\n+}"
  },
  {
    "sha": "d58c9847d635bbcc5dd301837d26f6a25e664b9e",
    "filename": "HW08-serialization/src/main/java/ru/otus/dataprocessor/ProcessorAggregator.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/ProcessorAggregator.java",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/ProcessorAggregator.java",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/src/main/java/ru/otus/dataprocessor/ProcessorAggregator.java?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1,21 @@\n+package ru.otus.dataprocessor;\n+\n+import ru.otus.model.Measurement;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+\n+public class ProcessorAggregator implements Processor {\n+\n+    @Override\n+    public Map<String, Double> process(List<Measurement> data) {\n+        //группирует выходящий список по name, при этом суммирует поля value\n+        var resultMap = new TreeMap<String, Double>();\n+        for (var measurement : data) {\n+            var aggregate = resultMap.getOrDefault(measurement.getName(), 0d);\n+            resultMap.put(measurement.getName(), aggregate + measurement.getValue());\n+        }\n+        return resultMap;\n+    }\n+}"
  },
  {
    "sha": "f99916d44219d4ffff5dfa92668f517c38c6e021",
    "filename": "HW08-serialization/src/main/java/ru/otus/dataprocessor/Serializer.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/Serializer.java",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/dataprocessor/Serializer.java",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/src/main/java/ru/otus/dataprocessor/Serializer.java?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1,9 @@\n+package ru.otus.dataprocessor;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+public interface Serializer {\n+\n+    void serialize(Map<String, Double> data) throws IOException;\n+}"
  },
  {
    "sha": "3d82f8c55e7b997321a781c91540b6b4b22200d4",
    "filename": "HW08-serialization/src/main/java/ru/otus/model/Measurement.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/model/Measurement.java",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/main/java/ru/otus/model/Measurement.java",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/src/main/java/ru/otus/model/Measurement.java?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1,29 @@\n+package ru.otus.model;\n+\n+\n+//Допустим, этот класс библиотечный, его нельзя менять\n+public class Measurement {\n+    private final String name;\n+    private final double value;\n+\n+    public Measurement(String name, double value) {\n+        this.name = name;\n+        this.value = value;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public double getValue() {\n+        return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Measurement{\" +\n+                \"name='\" + name + '\\'' +\n+                \", value=\" + value +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "c22f2860840b57e05f2f169415c74a65d26e6b7d",
    "filename": "HW08-serialization/src/test/java/ru/otus/dataprocessor/ProcessorTest.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/test/java/ru/otus/dataprocessor/ProcessorTest.java",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/test/java/ru/otus/dataprocessor/ProcessorTest.java",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/src/test/java/ru/otus/dataprocessor/ProcessorTest.java?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1,48 @@\n+package ru.otus.dataprocessor;\n+\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import static org.assertj.core.api.AssertionsForInterfaceTypes.assertThat;\n+\n+class ProcessorTest {\n+\n+    //Надо реализовать методы классов и убедиться, что тест проходит\n+\n+    @Test\n+   // @Disabled // Эту аннотацию надо убрать\n+    @DisplayName(\"Из файла читается json, обрабатывается, результат сериализуется в строку\")\n+    void processingTest(@TempDir Path tempDir) throws IOException {\n+        System.out.println(tempDir);\n+\n+        //given\n+        var inputDataFileName = \"inputData.json\";\n+        var outputDataFileName = \"outputData.json\";\n+        var fullOutputFilePath = String.format(\"%s%s%s\",tempDir, File.separator, outputDataFileName);\n+\n+        var loader = new FileLoader(inputDataFileName);\n+        var processor = new ProcessorAggregator();\n+        var serializer = new FileSerializer(fullOutputFilePath);\n+\n+        //when\n+        var loadedMeasurements = loader.load();\n+        var aggregatedMeasurements = processor.process(loadedMeasurements);\n+        serializer.serialize(aggregatedMeasurements);\n+\n+        //then\n+        assertThat(loadedMeasurements.size()).isEqualTo(9);\n+        assertThat(aggregatedMeasurements.entrySet().size()).isEqualTo(3);\n+\n+        var serializedOutput = Files.readString(Paths.get(fullOutputFilePath));\n+        //обратите внимание: важен порядок ключей\n+        assertThat(serializedOutput).isEqualTo(\"{\\\"val1\\\":3.0,\\\"val2\\\":30.0,\\\"val3\\\":33.0}\");\n+    }\n+}"
  },
  {
    "sha": "f0482566f2beb603d48cc51ea079a07741976a76",
    "filename": "HW08-serialization/src/test/resources/inputData.json",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/test/resources/inputData.json",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/HW08-serialization/src/test/resources/inputData.json",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/HW08-serialization/src/test/resources/inputData.json?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -0,0 +1 @@\n+[{\"name\":\"val1\",\"value\":0.0},{\"name\":\"val1\",\"value\":1.0},{\"name\":\"val1\",\"value\":2.0},{\"name\":\"val2\",\"value\":0.0},{\"name\":\"val2\",\"value\":10.0},{\"name\":\"val2\",\"value\":20.0},{\"name\":\"val3\",\"value\":10.0},{\"name\":\"val3\",\"value\":11.0},{\"name\":\"val3\",\"value\":12.0}]"
  },
  {
    "sha": "a93ef71ef30ee0468e23a8c1fe16385698005471",
    "filename": "README.md",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/README.md",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/README.md",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/README.md?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -2,3 +2,7 @@\n hw1 - gradle \n hw2 - collections\n hw3 - reflection\n+hw5 - class-loader\n+hw6 - solid\n+hw7 - patterns\n+hw8 - serialization"
  },
  {
    "sha": "448b6d392af43293bdb4e741cd15475ce7842cae",
    "filename": "settings.gradle",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Sinetskiy/otus_java_prof_2021/blob/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/settings.gradle",
    "raw_url": "https://github.com/Sinetskiy/otus_java_prof_2021/raw/9b734d6295e6f1422bc301e1bfa0cfd138ca0433/settings.gradle",
    "contents_url": "https://api.github.com/repos/Sinetskiy/otus_java_prof_2021/contents/settings.gradle?ref=9b734d6295e6f1422bc301e1bfa0cfd138ca0433",
    "patch": "@@ -4,3 +4,5 @@ include 'HW02-collections'\n include 'HW03-reflection'\n include 'HW05-class-loader'\n include 'HW06-solid'\n+\n+include 'HW08-serialization'"
  }
]
