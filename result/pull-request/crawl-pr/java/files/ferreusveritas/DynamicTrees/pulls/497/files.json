[
  {
    "sha": "c5fa32141fe51b1ed60adebf486aa4c61f2053a2",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 11,
    "deletions": 20,
    "changes": 31,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/build.gradle",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/build.gradle",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/build.gradle?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -5,7 +5,7 @@ buildscript {\n         mavenCentral()\n     }\n     dependencies {\n-        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true\n+        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true\n     }\n }\n \n@@ -38,24 +38,21 @@ version = \"${config.mc_version}-${config.mod_version}\"\n group = config.package_group\n archivesBaseName = config.mod_name\n \n-sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.\n+java.toolchain.languageVersion = JavaLanguageVersion.of(8)\n \n minecraft {\n-    mappings channel: 'snapshot', version: \"${config.mappings_version}\"\n+    mappings channel: 'snapshot', version: \"${config.mappings_version}-${config.mc_version}\"\n \n     accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')\n \n     runs {\n         client {\n             workingDirectory project.file('run')\n \n-            // Recommended logging data for a userdev environment\n             property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'\n-\n-            // Recommended logging level for the console\n             property 'forge.logging.console.level', 'debug'\n \n-            // For Serene Seasons as it uses Mixins\n+            // For Serene Seasons as it uses Mixins.\n             properties 'mixin.env.disableRefMap' : 'true'\n \n             mods {\n@@ -68,10 +65,7 @@ minecraft {\n         server {\n             workingDirectory project.file('run')\n \n-            // Recommended logging data for a userdev environment\n             property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'\n-\n-            // Recommended logging level for the console\n             property 'forge.logging.console.level', 'debug'\n \n             mods {\n@@ -84,10 +78,7 @@ minecraft {\n         data {\n             workingDirectory project.file('run')\n \n-            // Recommended logging data for a userdev environment\n             property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'\n-\n-            // Recommended logging level for the console\n             property 'forge.logging.console.level', 'debug'\n \n             args '--mod', 'dynamictrees', '--all', '--output', file('src/generated/resources/')\n@@ -127,7 +118,7 @@ jar {\n         attributes([\n                 \"Specification-Title\": project.name,\n                 \"Specification-Vendor\": \"ferreusveritas\",\n-                \"Specification-Version\": \"${version}\",\n+                \"Specification-Version\": \"1\",\n                 \"Implementation-Title\": project.name,\n                 \"Implementation-Version\": \"${version}\",\n                 \"Implementation-Vendor\" :\"ferreusveritas\",\n@@ -137,20 +128,20 @@ jar {\n }\n \n task sourcesJar(type: Jar) {\n-    classifier = \"sources\"\n+    archiveClassifier.set(\"sources\")\n     from sourceSets.main.allJava\n }\n \n-def reobfFile = file(\"$buildDir/reobfJar/output.jar\")\n-def reobfArtifact = artifacts.add('default', reobfFile) {\n-    type 'jar'\n-    builtBy 'reobfJar'\n+jar.finalizedBy('reobfJar')\n+\n+artifacts {\n+    archives sourcesJar\n }\n \n publishing {\n     publications {\n         mavenJava(MavenPublication) {\n-            artifact reobfArtifact\n+            artifact jar\n         }\n     }\n     repositories {"
  },
  {
    "sha": "1d20725f1df5d475fa07b1ad99209b063873c0ed",
    "filename": "gradle.properties",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/gradle.properties",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/gradle.properties",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/gradle.properties?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -1,13 +1,13 @@\n mod_name=DynamicTrees\n-mod_version=0.1.3\n+mod_version=0.1.4-CTD_B17\n package_group=com.ferreusveritas.dynamictrees\n \n mc_version=1.16.5\n-forge_version=36.0.42\n-mappings_version=20201028-1.16.3\n+forge_version=36.1.0\n+mappings_version=20210309\n \n hwyla_version=1.10.11-B78_1.16.2\n-jei_version=7.6.1.71\n+jei_version=7.6.1.73\n patchouli_version=1.16.4-50\n \n org.gradle.jvmargs=-Xmx6G"
  },
  {
    "sha": "b581f761ddd8f8989d5e98f637d6c02d57e3e311",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/gradle/wrapper/gradle-wrapper.properties?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-4.9-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.8.1-all.zip"
  },
  {
    "sha": "6e1975c73a825cd8fb5b5da87aef59658666c51d",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/DynamicTrees.java",
    "status": "modified",
    "additions": 21,
    "deletions": 75,
    "changes": 96,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/DynamicTrees.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/DynamicTrees.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/DynamicTrees.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -1,27 +1,25 @@\n package com.ferreusveritas.dynamictrees;\n \n import com.ferreusveritas.dynamictrees.api.TreeRegistry;\n-import com.ferreusveritas.dynamictrees.blocks.leaves.LeavesPropertiesJson;\n-import com.ferreusveritas.dynamictrees.cells.CellKits;\n+import com.ferreusveritas.dynamictrees.api.registry.RegistryHandler;\n import com.ferreusveritas.dynamictrees.compat.CompatHandler;\n import com.ferreusveritas.dynamictrees.event.handlers.EventHandlers;\n import com.ferreusveritas.dynamictrees.init.DTClient;\n import com.ferreusveritas.dynamictrees.init.DTConfigs;\n import com.ferreusveritas.dynamictrees.init.DTRegistries;\n import com.ferreusveritas.dynamictrees.trees.Species;\n import com.ferreusveritas.dynamictrees.worldgen.TreeGenerator;\n-import net.minecraft.block.Block;\n import net.minecraft.block.BlockState;\n-import net.minecraft.block.Blocks;\n+import net.minecraft.util.ResourceLocation;\n import net.minecraftforge.api.distmarker.Dist;\n import net.minecraftforge.eventbus.api.IEventBus;\n-import net.minecraftforge.fml.DeferredWorkQueue;\n import net.minecraftforge.fml.DistExecutor;\n import net.minecraftforge.fml.ModLoadingContext;\n import net.minecraftforge.fml.common.Mod;\n import net.minecraftforge.fml.config.ModConfig;\n import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;\n import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;\n+import net.minecraftforge.fml.event.lifecycle.ParallelDispatchEvent;\n import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;\n \n @Mod(DynamicTrees.MOD_ID)\n@@ -40,54 +38,15 @@\n \t\tTHICKNESS,\n \t\tVOLUME\n \t}\n-\t\n-\tpublic enum VanillaWoodTypes {\n-\t\toak,\n-\t\tspruce,\n-\t\tbirch,\n-\t\tjungle,\n-\t\tdark_oak,\n-\t\tacacia,\n-\t\twarped,\n-\t\tcrimson;\n-\n-\t\tpublic Block getLog() {\n-\t\t\tswitch(this) {\n-\t\t\t\tdefault:\n-\t\t\t\tcase oak: return Blocks.OAK_LOG;\n-\t\t\t\tcase birch: return Blocks.BIRCH_LOG;\n-\t\t\t\tcase spruce: return Blocks.SPRUCE_LOG;\n-\t\t\t\tcase jungle: return Blocks.JUNGLE_LOG;\n-\t\t\t\tcase dark_oak: return Blocks.DARK_OAK_LOG;\n-\t\t\t\tcase acacia: return Blocks.ACACIA_LOG;\n-\t\t\t\tcase warped: return Blocks.WARPED_STEM;\n-\t\t\t\tcase crimson: return Blocks.CRIMSON_STEM;\n-\t\t\t}\n-\t\t}\n \n-\t\tpublic Block getStrippedLog() {\n-\t\t\tswitch (this) {\n-\t\t\t\tdefault:\n-\t\t\t\tcase oak: return Blocks.STRIPPED_OAK_LOG;\n-\t\t\t\tcase birch: return Blocks.STRIPPED_BIRCH_LOG;\n-\t\t\t\tcase spruce: return Blocks.STRIPPED_SPRUCE_LOG;\n-\t\t\t\tcase jungle: return Blocks.STRIPPED_JUNGLE_LOG;\n-\t\t\t\tcase dark_oak: return Blocks.STRIPPED_DARK_OAK_LOG;\n-\t\t\t\tcase acacia: return Blocks.STRIPPED_ACACIA_LOG;\n-\t\t\t\tcase warped: return Blocks.STRIPPED_WARPED_STEM;\n-\t\t\t\tcase crimson: return Blocks.STRIPPED_CRIMSON_STEM;\n-\t\t\t}\n-\t\t}\n-\t}\n-\t\n \tpublic enum EnumDestroyMode {\n \t\tSLOPPY,\n \t\tSET_RADIUS,\n \t\tHARVEST,\n \t\tROT,\n \t\tOVERFLOW\n \t}\n-\t\n+\n \tpublic DynamicTrees() {\n \t\tfinal IEventBus modEventBus = FMLJavaModLoadingContext.get().getModEventBus();\n \t\tfinal ModLoadingContext loadingContext = ModLoadingContext.get();\n@@ -96,38 +55,30 @@ public DynamicTrees() {\n \t\tloadingContext.registerConfig(ModConfig.Type.COMMON, DTConfigs.COMMON_CONFIG);\n \t\tloadingContext.registerConfig(ModConfig.Type.CLIENT, DTConfigs.CLIENT_CONFIG);\n \n-\t\tDistExecutor.runWhenOn(Dist.CLIENT, ()->()-> clientStart(modEventBus));\n+\t\tDistExecutor.safeRunWhenOn(Dist.CLIENT, () -> DTClient::clientStart);\n \n-\t\tCellKits.setup();\n \t\tTreeGenerator.setup();\n-\t\t\n-\t\tDTRegistries.setupBlocks();\n-\t\tDTRegistries.setupItems();\n-\t\t\n-\t\tDTRegistries.setupEntities();\n-\t\t\n+\n+\t\tfinal RegistryHandler registryHandler = new RegistryHandler(MOD_ID);\n+\t\tRegistryHandler.REGISTRY.register(registryHandler);\n+\t\tmodEventBus.register(registryHandler);\n+\n+\t\tDTRegistries.setup();\n+\n \t\tmodEventBus.addListener(this::commonSetup);\n \t\tmodEventBus.addListener(this::clientSetup);\n+\t\tmodEventBus.addListener(this::parallelDispatch);\n \n \t\tEventHandlers.registerCommon();\n \t\tCompatHandler.init();\n \t}\n \n-\t//TODO: thick ring stitching\n-\tprivate static void clientStart(IEventBus modEventBus) {\n-\t\t//modEventBus.addListener(EventPriority.NORMAL, false, ColorHandlerEvent.Block.class, setupEvent -> {\n-\t\t\t//IResourceManager manager = Minecraft.getInstance().getResourceManager();\n-\t\t\t//if (manager instanceof IReloadableResourceManager){\n-\t\t\t//\tThickRingTextureManager.uploader = new ThickRingSpriteUploader(Minecraft.getInstance().textureManager);\n-\t\t\t//\t((IReloadableResourceManager) manager).addReloadListener(ThickRingTextureManager.uploader);\n-\t\t\t//}\n-\t\t//});\n+\tprivate void clientSetup(final FMLClientSetupEvent event) {\n+\t\tDTClient.setup();\n \t}\n \n-\t@SuppressWarnings(\"deprecation\")\n \tprivate void commonSetup(final FMLCommonSetupEvent event) {\n-\t\tDeferredWorkQueue.runLater(this::registerDendroRecipes);\n-\n+\t\t// TODO: Fix this for new Json system.\n \t\tfor (Species species : Species.REGISTRY) {\n \t\t\tfinal BlockState primitiveSaplingState = species.getPrimitiveSapling();\n \n@@ -136,17 +87,12 @@ private void commonSetup(final FMLCommonSetupEvent event) {\n \t\t}\n \t}\n \n-\tprivate void clientSetup(final FMLClientSetupEvent event) {\n-\t\tDTClient.setup();\n-\t}\n-\t\n-\tprivate void registerDendroRecipes () {\n-\t\tDTRegistries.dendroPotion.registerRecipes();\n+\tprivate void parallelDispatch(final ParallelDispatchEvent event) {\n+\t\tevent.enqueueWork(() -> DTRegistries.DENDRO_POTION.registerRecipes());\n \t}\n-\t\n-\tpublic void cleanUp() {\n-\t\tLeavesPropertiesJson.cleanUp();\n-\t\tTreeRegistry.cleanupCellKit();\n+\n+\tpublic static ResourceLocation resLoc (final String path) {\n+\t\treturn new ResourceLocation(MOD_ID, path);\n \t}\n \n }"
  },
  {
    "sha": "92ed33dfc943fd7336aad282f328cffde5ef5f1b",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/IPostRotGenFeature.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/IPostRotGenFeature.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/IPostRotGenFeature.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/IPostRotGenFeature.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -0,0 +1,33 @@\n+package com.ferreusveritas.dynamictrees.api;\n+\n+import com.ferreusveritas.dynamictrees.systems.genfeatures.GenFeature;\n+import com.ferreusveritas.dynamictrees.systems.genfeatures.config.ConfiguredGenFeature;\n+import com.ferreusveritas.dynamictrees.trees.Species;\n+\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.IWorld;\n+\n+import java.util.Random;\n+\n+/**\n+ * {@link GenFeature} implementation can implement this to generate after a branch has rotted.\n+ *\n+ * @author Harley O'Connor\n+ */\n+public interface IPostRotGenFeature {\n+\n+    /**\n+     * Executed from {@link Species#rot(IWorld, BlockPos, int, int, Random, boolean)}, allowing actions\n+     * after the tree has rotted.\n+     *\n+     * @param configuredGenFeature The {@link ConfiguredGenFeature} generating this.\n+     * @param world The {@link IWorld} object.\n+     * @param pos The {@link BlockPos} of the rot.\n+     * @param neighborCount The number of neighbours.\n+     * @param radius The radius of the branch.\n+     * @param random A {@link Random} object.\n+     * @param rapid True if this postRot is happening under a generation scenario as opposed to natural tree updates.\n+     */\n+    void postRot(final ConfiguredGenFeature<?> configuredGenFeature, final IWorld world, final BlockPos pos, final int neighborCount, final int radius, final Random random, final boolean rapid);\n+\n+}"
  },
  {
    "sha": "dae038600f10abd8b1bbed1066c8464efe626f8f",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/TreeHelper.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/TreeHelper.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/TreeHelper.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/TreeHelper.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -143,7 +143,7 @@ public static BlockPos dereferenceTrunkShell(World world, BlockPos pos) {\n \t\t\n \t\tBlockState blockState = world.getBlockState(pos);\n \t\t\n-\t\tif(blockState.getBlock() == DTRegistries.trunkShellBlock) {\n+\t\tif(blockState.getBlock() == DTRegistries.TRUNK_SHELL) {\n \t\t\tTrunkShellBlock.ShellMuse muse = ((TrunkShellBlock)blockState.getBlock()).getMuse(world, blockState, pos);\n \t\t\tif(muse != null) {\n \t\t\t\treturn muse.pos;"
  },
  {
    "sha": "a5b3fec97a2b3961bac42a89774d39d0fa44ae5c",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/TreeRegistry.java",
    "status": "modified",
    "additions": 41,
    "deletions": 47,
    "changes": 88,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/TreeRegistry.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/TreeRegistry.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/TreeRegistry.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -1,13 +1,13 @@\n package com.ferreusveritas.dynamictrees.api;\n \n import com.ferreusveritas.dynamictrees.DynamicTrees;\n-import com.ferreusveritas.dynamictrees.api.cells.ICellKit;\n+import com.ferreusveritas.dynamictrees.api.cells.CellKit;\n import com.ferreusveritas.dynamictrees.api.treedata.IDropCreator;\n import com.ferreusveritas.dynamictrees.api.treedata.IDropCreatorStorage;\n import com.ferreusveritas.dynamictrees.growthlogic.GrowthLogicKit;\n import com.ferreusveritas.dynamictrees.systems.dropcreators.StorageDropCreator;\n+import com.ferreusveritas.dynamictrees.trees.Family;\n import com.ferreusveritas.dynamictrees.trees.Species;\n-import com.ferreusveritas.dynamictrees.trees.TreeFamily;\n import net.minecraft.block.BlockState;\n import net.minecraft.util.ResourceLocation;\n \n@@ -25,20 +25,17 @@\n public class TreeRegistry {\n \n \tpublic static final IDropCreatorStorage GLOBAL_DROP_CREATOR_STORAGE = new StorageDropCreator();\n-\tprivate static HashMap<ResourceLocation, ICellKit> CELL_KIT_REGISTRY = new HashMap<>();\n-\tprivate static HashMap<ResourceLocation, GrowthLogicKit> GROWTH_LOGIC_KIT_REGISTRY = new HashMap<>();\n \n \t//////////////////////////////\n \t// SPECIES REGISTRY\n \t//////////////////////////////\n \n \tpublic static Species findSpecies(final String name) {\n-\t\treturn findSpecies(new ResourceLocation(name));\n+\t\treturn findSpecies(getResLoc(name));\n \t}\n \n \tpublic static Species findSpecies(final ResourceLocation name) {\n-\t\tfinal Species species = Species.REGISTRY.getValue(name);\n-\t\treturn species == null ? Species.NULL_SPECIES : species;\n+\t\treturn Species.REGISTRY.get(name);\n \t}\n \n \t/**\n@@ -50,13 +47,10 @@ public static Species findSpecies(final ResourceLocation name) {\n \t */\n \tpublic static Species findSpeciesSloppy(final String name) {\n \n-\t\tResourceLocation resourceLocation = new ResourceLocation(name);\n-\t\tif(DynamicTrees.MINECRAFT.equals(resourceLocation.getNamespace())) {//Minecraft(Mojang) isn't likely to have registered any Dynamic Tree species.\n-\t\t\tresourceLocation = new ResourceLocation(DynamicTrees.MOD_ID, resourceLocation.getPath());//Search DynamicTrees Domain instead\n-\t\t}\n+\t\tfinal ResourceLocation resourceLocation = getResLoc(name);\n \n \t\t//Search specific domain first\n-\t\tif (Species.REGISTRY.containsKey(resourceLocation)) {\n+\t\tif (Species.REGISTRY.has(resourceLocation)) {\n \t\t\treturn findSpecies(resourceLocation);\n \t\t}\n \n@@ -71,7 +65,7 @@ public static Species findSpeciesSloppy(final String name) {\n \t}\n \n \tpublic static List<ResourceLocation> getSpeciesDirectory() {\n-\t\treturn new ArrayList<>(Species.REGISTRY.getKeys());\n+\t\treturn new ArrayList<>(Species.REGISTRY.getRegistryNames());\n \t}\n \n \t/**\n@@ -98,7 +92,7 @@ public static Species findSpeciesSloppy(final String name) {\n \tpublic static List<Species> getPotionTransformableSpecies () {\n \t\tfinal List<Species> speciesList = getTransformableSpecies();\n \t\tspeciesList.removeIf(species -> {\n-\t\t\tTreeFamily family = species.getFamily();\n+\t\t\tfinal Family family = species.getFamily();\n \n \t\t\t// Remove the species if it doesn't have seeds, or if it's not the common species and its seed is the same as the common species'.\n \t\t\treturn !species.hasSeed() || (species != family.getCommonSpecies() && species.getSeed() == family.getCommonSpecies().getSeed());\n@@ -121,7 +115,7 @@ public static void registerSaplingReplacer(BlockState state, Species species) {\n \t// DROP HANDLING\n \t//////////////////////////////\n \n-\tpublic static final ResourceLocation globalName = new ResourceLocation(DynamicTrees.MOD_ID, \"global\");\n+\tpublic static final ResourceLocation GLOBAL = DynamicTrees.resLoc(\"global\");\n \n \t/**\n \t * This exists so that mods not interested in making Dynamic Trees can still add drops to\n@@ -130,72 +124,72 @@ public static void registerSaplingReplacer(BlockState state, Species species) {\n \t * @param dropCreator The {@link IDropCreator} to register.\n \t */\n \tpublic static boolean registerDropCreator(@Nullable final ResourceLocation speciesName, final IDropCreator dropCreator) {\n-\t\tif(speciesName == null || speciesName.equals(globalName)) {\n+\t\tif (speciesName == null || speciesName.equals(GLOBAL)) {\n \t\t\treturn GLOBAL_DROP_CREATOR_STORAGE.addDropCreator(dropCreator);\n \t\t} else {\n \t\t\treturn findSpecies(speciesName).addDropCreator(dropCreator);\n \t\t}\n \t}\n \n \tpublic static boolean registerGlobalDropCreator(final IDropCreator dropCreator){\n-\t\treturn registerDropCreator(globalName, dropCreator);\n+\t\treturn registerDropCreator(GLOBAL, dropCreator);\n \t}\n \n-\tpublic static boolean removeDropCreator(@Nullable final ResourceLocation speciesName, ResourceLocation dropCreatorName) {\n-\t\tif(speciesName == null || speciesName.equals(globalName)) {\n+\tpublic static boolean removeDropCreator(@Nullable final ResourceLocation speciesName, final ResourceLocation dropCreatorName) {\n+\t\tif (speciesName == null || speciesName.equals(GLOBAL)) {\n \t\t\treturn GLOBAL_DROP_CREATOR_STORAGE.remDropCreator(dropCreatorName);\n \t\t} else {\n \t\t\treturn findSpecies(speciesName).remDropCreator(dropCreatorName);\n \t\t}\n \t}\n \n \tpublic static Map<ResourceLocation, Map<ResourceLocation, IDropCreator>> getDropCreatorsMap() {\n-\t\tMap<ResourceLocation, Map<ResourceLocation, IDropCreator>> dir = new HashMap<>();\n-\t\tdir.put(globalName, GLOBAL_DROP_CREATOR_STORAGE.getDropCreators());\n+\t\tfinal Map<ResourceLocation, Map<ResourceLocation, IDropCreator>> dir = new HashMap<>();\n+\t\tdir.put(GLOBAL, GLOBAL_DROP_CREATOR_STORAGE.getDropCreators());\n \t\tSpecies.REGISTRY.forEach(species -> dir.put(species.getRegistryName(), species.getDropCreators()));\n \t\treturn dir;\n \t}\n \n \t//////////////////////////////\n-\t// CELLKIT HANDLING\n+\t// CELL KIT HANDLING\n \t//////////////////////////////\n \n-\tpublic static ICellKit registerCellKit(ResourceLocation name, ICellKit kit) {\n-\t\treturn CELL_KIT_REGISTRY.computeIfAbsent(name, k -> kit);\n-\t}\n-\n-\tpublic static ICellKit findCellKit(ResourceLocation name) {\n-\t\treturn CELL_KIT_REGISTRY.get(name);\n+\tpublic static CellKit findCellKit(String name) {\n+\t\treturn findCellKit(getResLoc(name));\n \t}\n \n-\tpublic static ICellKit findCellKit(String name) {\n-\t\tResourceLocation kitLocation = new ResourceLocation(name);\n-\t\tif(DynamicTrees.MINECRAFT.equals(kitLocation.getNamespace())) {//Minecraft doesn't register leaves properties\n-\t\t\tkitLocation = new ResourceLocation(DynamicTrees.MOD_ID, kitLocation.getPath());//Default to \"dynamictrees\" instead\n-\t\t}\n-\t\treturn findCellKit(kitLocation);\n-\t}\n-\n-\tpublic static void cleanupCellKit() {\n-\t\tCELL_KIT_REGISTRY = new HashMap<>();\n+\tpublic static CellKit findCellKit(ResourceLocation name) {\n+\t\treturn CellKit.REGISTRY.get(name);\n \t}\n \n \t//////////////////////////////\n-\t// GROWTHLOGICKIT HANDLING\n+\t// GROWTH LOGIC KIT HANDLING\n \t//////////////////////////////\n \n-\t@Nullable\n+\tpublic static GrowthLogicKit findGrowthLogicKit(final String name) {\n+\t\treturn findGrowthLogicKit(getResLoc(name));\n+\t}\n+\n \tpublic static GrowthLogicKit findGrowthLogicKit(final ResourceLocation name) {\n-\t\treturn GrowthLogicKit.REGISTRY.getValue(name);\n+\t\treturn GrowthLogicKit.REGISTRY.get(name);\n+\t}\n+\n+\tpublic static ResourceLocation getResLoc (final String resLocStr) {\n+\t\treturn processResLoc(new ResourceLocation(resLocStr));\n \t}\n \n-\t@Nullable\n-\tpublic static GrowthLogicKit findGrowthLogicKit(String name) {\n-\t\tResourceLocation kitLocation = new ResourceLocation(name);\n-\t\tif(\"minecraft\".equals(kitLocation.getNamespace())) {//Minecraft doesn't register leaves properties\n-\t\t\tkitLocation = new ResourceLocation(DynamicTrees.MOD_ID, kitLocation.getPath());//Default to \"dynamictrees\" instead\n+\t/**\n+\t * Changes namespace of resource location to \"dynamictrees\" as a default if it is set to Minecraft.\n+\t * This is safe since Minecraft won't (or shouldn't) have used any of our registries.\n+\t *\n+\t * @param resourceLocation The {@link ResourceLocation} to process.\n+\t * @return The {@link ResourceLocation} object.\n+\t */\n+\tprivate static ResourceLocation processResLoc(final ResourceLocation resourceLocation) {\n+\t\tif (DynamicTrees.MINECRAFT.equals(resourceLocation.getNamespace())) {\n+\t\t\treturn DynamicTrees.resLoc(resourceLocation.getPath());\n \t\t}\n-\t\treturn findGrowthLogicKit(kitLocation);\n+\t\treturn resourceLocation;\n \t}\n \n }"
  },
  {
    "sha": "3818a468273ad87c251fbf98efee999dcdb59635",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/WorldGenRegistry.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/WorldGenRegistry.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/WorldGenRegistry.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/WorldGenRegistry.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -2,7 +2,7 @@\n \n import com.ferreusveritas.dynamictrees.DynamicTrees;\n import com.ferreusveritas.dynamictrees.api.events.TreeCancelRegistryEvent;\n-import com.ferreusveritas.dynamictrees.init.DTDataPackRegistries;\n+import com.ferreusveritas.dynamictrees.resources.DTResourceRegistries;\n import com.ferreusveritas.dynamictrees.worldgen.canceller.ITreeCanceller;\n import com.ferreusveritas.dynamictrees.api.events.JsonCapabilityRegistryEvent;\n import com.ferreusveritas.dynamictrees.init.DTConfigs;\n@@ -97,7 +97,7 @@ private static void loadJsonTreeCanceller () {\n \n \tpublic static boolean validateBiomeDataBases() {\n \t\tif (WorldGenRegistry.isWorldGenEnabled()) {\n-\t\t\treturn DTDataPackRegistries.BIOME_DATABASE_MANAGER.validateDatabases();\n+\t\t\treturn DTResourceRegistries.getBiomeDatabaseManager().validateDatabases();\n \t\t}\n \t\treturn true;\n \t}"
  },
  {
    "sha": "118baa654b415ea08ce2f383e3d6767f189876e5",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/cells/CellKit.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/cells/CellKit.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/cells/CellKit.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/cells/CellKit.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -0,0 +1,47 @@\n+package com.ferreusveritas.dynamictrees.api.cells;\n+\n+import com.ferreusveritas.dynamictrees.cells.LeafClusters;\n+import com.ferreusveritas.dynamictrees.init.DTTrees;\n+import com.ferreusveritas.dynamictrees.util.Registry;\n+import com.ferreusveritas.dynamictrees.util.RegistryEntry;\n+import com.ferreusveritas.dynamictrees.util.SimpleVoxmap;\n+import net.minecraft.util.ResourceLocation;\n+\n+public abstract class CellKit extends RegistryEntry<CellKit> {\n+\n+\tpublic static final ICellSolver NULL_CELL_SOLVER = cells -> 0;\n+\n+\tpublic static final CellKit NULL_CELL_KIT = new CellKit(DTTrees.NULL) {\n+\t\t@Override public ICell getCellForLeaves(int hydro) { return CellNull.NULL_CELL; }\n+\t\t@Override public ICell getCellForBranch(int radius, int meta) { return CellNull.NULL_CELL; }\n+\t\t@Override public ICellSolver getCellSolver() { return NULL_CELL_SOLVER; }\n+\t\t@Override public SimpleVoxmap getLeafCluster() { return LeafClusters.NULL_MAP; }\n+\t\t@Override public int getDefaultHydration() { return 0; }\n+\t};\n+\n+\t/**\n+\t * Central registry for all {@link CellKit} objects.\n+\t */\n+\tpublic static final Registry<CellKit> REGISTRY = new Registry<>(CellKit.class, NULL_CELL_KIT);\n+\n+\tpublic CellKit(final ResourceLocation registryName) {\n+\t\tthis.setRegistryName(registryName);\n+\t}\n+\n+\tpublic abstract ICell getCellForLeaves(int distance);\n+\n+\tpublic abstract ICell getCellForBranch(int radius, int meta);\n+\n+\tpublic abstract ICellSolver getCellSolver();\n+\t\n+\t/** A voxel map of leaves blocks that are \"stamped\" on to the tree during generation */\n+\tpublic abstract SimpleVoxmap getLeafCluster();\n+\t\n+\t/** The default hydration level of a newly created leaf block [default = 4] **/\n+\tpublic abstract int getDefaultHydration();\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn \"CellKit{registryName=\" + this.getRegistryName() + \"}\";\n+\t}\n+}"
  },
  {
    "sha": "14228f56b99394e7c8cca6a03267c844cdf0f7a4",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/cells/CellNull.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/cells/CellNull.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/cells/CellNull.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/cells/CellNull.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -6,11 +6,10 @@\n  * Cell that always returns 0\n  * \n  * @author ferreusveritas\n- *\n  */\n public class CellNull implements ICell {\n \n-\tpublic static final CellNull NULLCELL = new CellNull();\n+\tpublic static final CellNull NULL_CELL = new CellNull();\n \t\n \t@Override\n \tpublic int getValue() {"
  },
  {
    "sha": "d0caedffa1f92177cefb930a069bfdd307a4a84c",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICell.java",
    "status": "modified",
    "additions": 12,
    "deletions": 5,
    "changes": 17,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICell.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICell.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICell.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -4,10 +4,17 @@\n \n public interface ICell {\n \n-\t//This is the actual value of the cell.\n-\tpublic int getValue();\n-\t\n-\t//This is the value the cell returns for a side\n-\tpublic int getValueFromSide(Direction side);\n+\t/**\n+\t * @return The actual value of the cell.\n+\t */\n+\tint getValue();\n+\n+\t/**\n+\t * Gets the value the cell returns for the given side.\n+\t *\n+\t * @param side The side's {@link Direction}.\n+\t * @return The value for the given side.\n+\t */\n+\tint getValueFromSide(Direction side);\n \t\n }"
  },
  {
    "sha": "a254ed8bd1ef1b1f9ec934ffe1dbe397ea736690",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICellKit.java",
    "status": "removed",
    "additions": 0,
    "deletions": 19,
    "changes": 19,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/07bb3aaa87c934919dc7a1cc2e75885268e239ba/src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICellKit.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/07bb3aaa87c934919dc7a1cc2e75885268e239ba/src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICellKit.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICellKit.java?ref=07bb3aaa87c934919dc7a1cc2e75885268e239ba",
    "patch": "@@ -1,19 +0,0 @@\n-package com.ferreusveritas.dynamictrees.api.cells;\n-\n-import com.ferreusveritas.dynamictrees.util.SimpleVoxmap;\n-\n-public interface ICellKit {\n-\n-\tICell getCellForLeaves(int distance);\n-\t\n-\tICell getCellForBranch(int radius, int meta);\n-\t\n-\tICellSolver getCellSolver();\n-\t\n-\t/** A voxel map of leaves blocks that are \"stamped\" on to the tree during generation */\n-\tSimpleVoxmap getLeafCluster();\n-\t\n-\t/** The default hydration level of a newly created leaf block [default = 4]**/\n-\tint getDefaultHydration();\n-\t\n-}"
  },
  {
    "sha": "b982e2ae3295c12f3d23d58327e5db24f4e70955",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICellSolver.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICellSolver.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICellSolver.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/cells/ICellSolver.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -5,8 +5,8 @@\n \t/**\n \t * Solves the center cell from values of the surrounding 6 cells.\n \t * \n-\t * @param cells An array of 6 cells, one for each of the 6 sides of a cube\n-\t * @return the calculated solution for the center cell\n+\t * @param cells An array of 6 cells, one for each of the 6 sides of a cube.\n+\t * @return the calculated solution for the center cell.\n \t */\n \tint solve(ICell[] cells);\n \t"
  },
  {
    "sha": "e2030448c3dff7aa4ad2d6bb289bfd76f2882b05",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/client/ModelHelper.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/client/ModelHelper.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/client/ModelHelper.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/client/ModelHelper.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -2,7 +2,7 @@\n \n import com.ferreusveritas.dynamictrees.blocks.branches.BranchBlock;\n import com.ferreusveritas.dynamictrees.blocks.branches.SurfaceRootBlock;\n-import com.ferreusveritas.dynamictrees.trees.TreeFamily;\n+import com.ferreusveritas.dynamictrees.trees.Family;\n import net.minecraft.block.Block;\n import net.minecraft.block.Blocks;\n import net.minecraft.client.Minecraft;\n@@ -23,7 +23,7 @@\n \t *\n \t * @param tree\n \t */\n-\tpublic static void regModel(TreeFamily tree) {\n+\tpublic static void regModel(Family tree) {\n \t\tBranchBlock branchBlock = tree.getDynamicBranch();\n \t\tModelResourceLocation modelLocation = getBranchModelResourceLocation(branchBlock);\n "
  },
  {
    "sha": "8543bd21679708325b53ee653370869d7300e728",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/network/INodeInspector.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/network/INodeInspector.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/network/INodeInspector.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/network/INodeInspector.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -8,7 +8,8 @@\n \n public interface INodeInspector {\n \n-\tpublic boolean run(BlockState blockState, IWorld world, BlockPos pos, Direction fromDir);\n+\tboolean run(BlockState blockState, IWorld world, BlockPos pos, Direction fromDir);\n+\n+\tboolean returnRun(BlockState blockState, IWorld world, BlockPos pos, Direction fromDir);\n \n-\tpublic boolean returnRun(BlockState blockState, IWorld world, BlockPos pos, Direction fromDir);\n }"
  },
  {
    "sha": "5efc657e46fb49c972b906fed040eddf22f68c9a",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/registry/RegistryHandler.java",
    "status": "added",
    "additions": 160,
    "deletions": 0,
    "changes": 160,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/registry/RegistryHandler.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/registry/RegistryHandler.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/registry/RegistryHandler.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -0,0 +1,160 @@\n+package com.ferreusveritas.dynamictrees.api.registry;\n+\n+import com.ferreusveritas.dynamictrees.DynamicTrees;\n+import com.ferreusveritas.dynamictrees.util.Registry;\n+import com.ferreusveritas.dynamictrees.util.RegistryEntry;\n+import com.ferreusveritas.dynamictrees.util.ResourceLocationUtils;\n+import com.google.common.collect.Maps;\n+import net.minecraft.block.Block;\n+import net.minecraft.item.Item;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraftforge.event.RegistryEvent;\n+import net.minecraftforge.eventbus.api.SubscribeEvent;\n+import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;\n+import org.apache.logging.log4j.LogManager;\n+\n+import java.util.Map;\n+\n+/**\n+ * Handles registries for the given mod ID in the constructor. Add-ons should instantiate\n+ * one of these in their constructor, registering it to {@link #REGISTRY} and the mod event\n+ * bus which can be obtained from {@link FMLJavaModLoadingContext#getModEventBus()}.\n+ *\n+ * <p>The main purpose of this is to prevent Forge from complaining about blocks and items\n+ * for a different mod ID having their registry names set when the active mod container\n+ * is <tt>dynamictrees</tt>, but it also provides an easy way to register items and blocks.</p>\n+ *\n+ * @author Harley O'Connor\n+ */\n+public class RegistryHandler extends RegistryEntry<RegistryHandler> {\n+\n+    public static final Registry<RegistryHandler> REGISTRY = new Registry<>(RegistryHandler.class, new RegistryHandler(\"null\").nullEntry(), true);\n+\n+    /**\n+     * Gets the {@link RegistryHandler} for the given mod ID, or the null registry handler\n+     * if it doesn't exist.\n+     *\n+     * @param modId The mod ID of the mod to get the {@link RegistryHandler} for.\n+     * @return The {@link RegistryHandler} object.\n+     */\n+    public static RegistryHandler get(final String modId) {\n+        return REGISTRY.get(new ResourceLocation(modId, modId));\n+    }\n+\n+    /**\n+     * Gets the {@link RegistryHandler} for the given mod ID, or defaults to the Dynamic Trees\n+     * one if it doesn't exist.\n+     *\n+     * @param modId The mod ID of the mod to get the {@link RegistryHandler} for.\n+     * @return The {@link RegistryHandler} object.\n+     */\n+    public static RegistryHandler getOrCorrected(final String modId) {\n+        final RegistryHandler handler = get(modId);\n+        return handler.isValid() ? handler : get(DynamicTrees.MOD_ID);\n+    }\n+\n+    /**\n+     * Ensures the given registry name is 'correct'. This will change the namespace to\n+     * <tt>dynamictrees</tt> if the namespace for the given {@link ResourceLocation}\n+     * doesn't have a {@link RegistryHandler} registered, so that we don't register\n+     * blocks or items to mod without a {@link RegistryHandler} (non-add-on mods).\n+     *\n+     * @param registryName The {@link ResourceLocation} registry name.\n+     * @return The correct {@link ResourceLocation} registry name.\n+     */\n+    public static ResourceLocation correctRegistryName (ResourceLocation registryName) {\n+        if (!get(registryName.getNamespace()).isValid())\n+            registryName = ResourceLocationUtils.namespace(registryName, DynamicTrees.MOD_ID);\n+        return registryName;\n+    }\n+\n+    /**\n+     * Adds a {@link Block} to be registered with the given registry name, for the namespace\n+     * of that registry name. {@link Block#setRegistryName(ResourceLocation)} will be called\n+     * by us on the correct registry event to prevent Forge from complaining - so it\n+     * shouldn't have been called on the block already!\n+     *\n+     * @param registryName The {@link ResourceLocation} registry name to set for the block.\n+     * @param block The {@link Block} object to register.\n+     * @param <T> The {@link Class} of the {@link Block}.\n+     * @return The {@link Block}, allowing for this to be called in-line.\n+     */\n+    public static <T extends Block> T addBlock(ResourceLocation registryName, final T block) {\n+        registryName = correctRegistryName(registryName);\n+        get(registryName.getNamespace()).putBlock(registryName, block);\n+        return block;\n+    }\n+\n+    /**\n+     * Adds an {@link Item} to be registered with the given registry name, for the namespace\n+     * of that registry name. {@link Item#setRegistryName(ResourceLocation)} will be called\n+     * by us on the correct registry event to prevent Forge from complaining - so it\n+     * shouldn't have been called on the block already!\n+     *\n+     * @param registryName The {@link ResourceLocation} registry name to set for the block.\n+     * @param item The {@link Item} object to register.\n+     * @param <T> The {@link Class} of the {@link Item}.\n+     * @return The {@link Item}, allowing for this to be called in-line.\n+     */\n+    public static <T extends Item> T addItem(ResourceLocation registryName, final T item) {\n+        registryName = correctRegistryName(registryName);\n+        get(registryName.getNamespace()).putItem(registryName, item);\n+        return item;\n+    }\n+\n+    protected final Map<ResourceLocation, Block> blocks = Maps.newHashMap();\n+    protected final Map<ResourceLocation, Item> items = Maps.newHashMap();\n+\n+    /**\n+     * Instantiates a new {@link RegistryHandler} object for the given mod ID. This should\n+     * be registered using {@link Registry#register(RegistryEntry)} on {@link #REGISTRY}.\n+     * It will also need to be registered to the mod event bus, which can be grabbed from\n+     * {@link FMLJavaModLoadingContext#getModEventBus()}, so the registry events are fired.\n+     *\n+     * @param modId The mod ID for the relevant mod.\n+     */\n+    public RegistryHandler(final String modId) {\n+        super(new ResourceLocation(modId, modId));\n+    }\n+\n+    public void putBlock(final ResourceLocation registryName, final Block block) {\n+        if (this.warnIfInvalid(\"Block\", registryName)) {\n+            return;\n+        }\n+\n+        this.blocks.put(registryName, block);\n+    }\n+\n+    public void putItem(final ResourceLocation registryName, final Item item) {\n+        if (this.warnIfInvalid(\"Item\", registryName)) {\n+            return;\n+        }\n+\n+        this.items.put(registryName, item);\n+    }\n+\n+    /**\n+     * Checks if this {@link RegistryHandler} is valid, and if not prints a warning to the\n+     * console.\n+     *\n+     * @param type The type of registry being added.\n+     * @param registryName The {@link ResourceLocation} registry name.\n+     * @return True if it was invalid.\n+     */\n+    private boolean warnIfInvalid(final String type, final ResourceLocation registryName) {\n+        if (!this.isValid())\n+            LogManager.getLogger().warn(\"{} '{}' was added to null registry handler.\", type, registryName);\n+        return !this.isValid();\n+    }\n+\n+    @SubscribeEvent\n+    public void onBlockRegistry (final RegistryEvent.Register<Block> event) {\n+        this.blocks.forEach((resourceLocation, block) -> event.getRegistry().register(block.setRegistryName(resourceLocation)));\n+    }\n+\n+    @SubscribeEvent\n+    public void onItemRegistry (final RegistryEvent.Register<Item> event) {\n+        this.items.forEach(((resourceLocation, item) -> event.getRegistry().register(item.setRegistryName(resourceLocation))));\n+    }\n+\n+}"
  },
  {
    "sha": "06d84f74a268c017cad6961da0a31e8eeec29fda",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/seasons/ISeasonGrowthCalculator.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/seasons/ISeasonGrowthCalculator.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/seasons/ISeasonGrowthCalculator.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/seasons/ISeasonGrowthCalculator.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -1,7 +1,7 @@\n package com.ferreusveritas.dynamictrees.api.seasons;\n \n /***\n- * Provides a means to calculate temperate and tropical growth rate values\n+ * Provides a means to calculate temperate and tropical growth rate values.\n  * \n  * @author ferreusveritas\n  */"
  },
  {
    "sha": "1e86e8ad0f81fba4a6728923bb4b09206179c716",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/seasons/ISeasonManager.java",
    "status": "modified",
    "additions": 9,
    "deletions": 9,
    "changes": 18,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/seasons/ISeasonManager.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/seasons/ISeasonManager.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/seasons/ISeasonManager.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -4,26 +4,26 @@\n import net.minecraft.world.World;\n \n /**\n- * Manages Seasonal output rates\n+ * Manages Seasonal output rates.\n  *  \n  * @author ferreusveritas\n  */\n public interface ISeasonManager {\n \t\n-\tpublic void updateTick(World world, long worldTicks);\n+\tvoid updateTick(World world, long worldTicks);\n \t\n-\tpublic void flushMappings();\n+\tvoid flushMappings();\n \t\n-\tpublic float getGrowthFactor(World world, BlockPos rootPos, float offset);\n+\tfloat getGrowthFactor(World world, BlockPos rootPos, float offset);\n \t\n-\tpublic float getSeedDropFactor(World world, BlockPos rootPos, float offset);\n+\tfloat getSeedDropFactor(World world, BlockPos rootPos, float offset);\n \t\n-\tpublic float getFruitProductionFactor(World world, BlockPos rootPos, float offset, boolean getAsScan);\n+\tfloat getFruitProductionFactor(World world, BlockPos rootPos, float offset, boolean getAsScan);\n \t\n-\tpublic Float getSeasonValue(World world, BlockPos rootPos);\n+\tFloat getSeasonValue(World world, BlockPos rootPos);\n \t\n-\tpublic boolean isTropical(World world, BlockPos rootPos);\n+\tboolean isTropical(World world, BlockPos rootPos);\n \t\n-\tpublic boolean shouldSnowMelt(World world, BlockPos pos);\n+\tboolean shouldSnowMelt(World world, BlockPos pos);\n \t\n }"
  },
  {
    "sha": "bbd4e0f0ae9da5fd51df1f0f4ced4d83e20660db",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/substances/IEmptiable.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/substances/IEmptiable.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/substances/IEmptiable.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/substances/IEmptiable.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -6,15 +6,14 @@\n  * An emptiable is a container that contains a substance that when consumed leaves a reusable container.  Such as a potion and a glass bottle.\n  * \n  * @author ferreusveritas\n- *\n  */\n public interface IEmptiable {\n \n \t/**\n-\t * The container item this object returns when a substance is emptied\n+\t * The container item this object returns when a substance is emptied.\n \t * \n-\t * @return\n+\t * @return An {@link ItemStack} for the item.\n \t */\n-\tpublic ItemStack getEmptyContainer();\n+\tItemStack getEmptyContainer();\n \t\n }"
  },
  {
    "sha": "28c9c254bcd4bddaa6fcf9af1b682e822886da4a",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/substances/ISubstanceEffect.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/substances/ISubstanceEffect.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/substances/ISubstanceEffect.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/substances/ISubstanceEffect.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -7,7 +7,6 @@\n  * A substance effect is like a potion effect but for trees.\n  * \n  * @author ferreusveritas\n- *\n  */\n public interface ISubstanceEffect {\n \t\n@@ -18,7 +17,7 @@\n \t * @param rootPos\n \t * @return true for success.  false otherwise\n \t */\n-\tpublic boolean apply(World world, BlockPos rootPos);\n+\tboolean apply(World world, BlockPos rootPos);\n \t\n \t/**\n \t * For a continuously updating effect.\n@@ -28,20 +27,20 @@\n \t * @param deltaTicks\n \t * @return true to stay alive. false to kill effector\n \t */\n-\tpublic boolean update(World world, BlockPos rootPos, int deltaTicks);\n+\tboolean update(World world, BlockPos rootPos, int deltaTicks);\n \t\n \t/**\n \t * Get the name of the effect.  Used to compare existing effects in the environment.\n \t * \n \t * @return the name of the effect.\n \t */\n-\tpublic String getName();\n+\tString getName();\n \t\n \t/**\n \t * Determines if the effect is continuous or instant\n \t * \n \t * @return true if continuous, false if instant\n \t */\n-\tpublic boolean isLingering();\n+\tboolean isLingering();\n \t\n }"
  },
  {
    "sha": "136a5242dbf5eedb2c10da60443907f236f94829",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/substances/ISubstanceEffectProvider.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/substances/ISubstanceEffectProvider.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/substances/ISubstanceEffectProvider.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/substances/ISubstanceEffectProvider.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -6,10 +6,9 @@\n  * An interface for items that can have an effect on trees when right clicked.  Such as a tree potion.\n  * \n  * @author ferreusveritas\n- *\n  */\n public interface ISubstanceEffectProvider {\n \n-\tpublic ISubstanceEffect getSubstanceEffect(ItemStack itemStack);\n+\tISubstanceEffect getSubstanceEffect(ItemStack itemStack);\n \t\n }\n\\ No newline at end of file"
  },
  {
    "sha": "c6cd51e32b23b9b9616d4d238e44e61514733aba",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IBiomeSuitabilityDecider.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IBiomeSuitabilityDecider.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IBiomeSuitabilityDecider.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IBiomeSuitabilityDecider.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -15,12 +15,12 @@\n  */\n public interface IBiomeSuitabilityDecider {\n \n-\tpublic Decision getBiomeSuitability(World world, Biome biome, Species tree, BlockPos pos);\n+\tDecision getBiomeSuitability(World world, Biome biome, Species tree, BlockPos pos);\n \n \t/** Decision interface for handling the event */\n-\tpublic class Decision {\n-\t\tprivate boolean handled;//The handling indicator\n-\t\tprivate float suitability;//The payload\n+\tclass Decision {\n+\t\tprivate final boolean handled; // The handling indicator\n+\t\tprivate float suitability; // The payload\n \n \t\t/** Create via this constructor to leave the event unhandled so another decider can potentially handle it. */\n \t\tpublic Decision() {"
  },
  {
    "sha": "f961bfaaceca5db28e14cf8bd501fe2a7cec9bc6",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IDropCreator.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IDropCreator.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IDropCreator.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IDropCreator.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -3,8 +3,8 @@\n import com.ferreusveritas.dynamictrees.blocks.branches.BranchBlock;\n import com.ferreusveritas.dynamictrees.blocks.leaves.DynamicLeavesBlock;\n import com.ferreusveritas.dynamictrees.systems.nodemappers.NetVolumeNode;\n+import com.ferreusveritas.dynamictrees.trees.Family;\n import com.ferreusveritas.dynamictrees.trees.Species;\n-import com.ferreusveritas.dynamictrees.trees.TreeFamily;\n import net.minecraft.item.ItemStack;\n import net.minecraft.util.ResourceLocation;\n import net.minecraft.util.math.BlockPos;\n@@ -33,7 +33,7 @@\n \tList<ItemStack> getHarvestDrop(World world, Species species, BlockPos leafPos, Random random, List<ItemStack> dropList, int soilLife, int fortune);\n \n \t/**\n-\t * Gets a {@link List} of voluntary drops.  Voluntary drops are {@link ItemStack}s that fall from the {@link TreeFamily} at\n+\t * Gets a {@link List} of voluntary drops.  Voluntary drops are {@link ItemStack}s that fall from the {@link Family} at\n \t * random with no player interaction.\n \t *\n \t * @param world"
  },
  {
    "sha": "06baffb98485abdf0eb38be8ac70a281ce4d89ce",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IDropCreatorStorage.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IDropCreatorStorage.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IDropCreatorStorage.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/IDropCreatorStorage.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -6,12 +6,12 @@\n \n public interface IDropCreatorStorage extends IDropCreator {\n \n-\tpublic boolean addDropCreator(IDropCreator dropCreator);\n+\tboolean addDropCreator(IDropCreator dropCreator);\n \n-\tpublic IDropCreator findDropCreator(ResourceLocation name);\n+\tIDropCreator findDropCreator(ResourceLocation name);\n \t\n-\tpublic boolean remDropCreator(ResourceLocation name);\n+\tboolean remDropCreator(ResourceLocation name);\n \t\n-\tpublic Map<ResourceLocation, IDropCreator> getDropCreators();\n+\tMap<ResourceLocation, IDropCreator> getDropCreators();\n \t\n }"
  },
  {
    "sha": "e9eada5c2991d24d3c6b55099b121726be39d95f",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/treedata/ILeavesProperties.java",
    "status": "removed",
    "additions": 0,
    "deletions": 75,
    "changes": 75,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/07bb3aaa87c934919dc7a1cc2e75885268e239ba/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/ILeavesProperties.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/07bb3aaa87c934919dc7a1cc2e75885268e239ba/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/ILeavesProperties.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/ILeavesProperties.java?ref=07bb3aaa87c934919dc7a1cc2e75885268e239ba",
    "patch": "@@ -1,75 +0,0 @@\n-package com.ferreusveritas.dynamictrees.api.treedata;\n-\n-import com.ferreusveritas.dynamictrees.api.cells.ICellKit;\n-import com.ferreusveritas.dynamictrees.blocks.branches.BranchBlock;\n-import com.ferreusveritas.dynamictrees.blocks.leaves.DynamicLeavesBlock;\n-import com.ferreusveritas.dynamictrees.trees.TreeFamily;\n-import net.minecraft.block.BlockState;\n-import net.minecraft.item.ItemStack;\n-import net.minecraft.util.Direction;\n-import net.minecraft.util.math.BlockPos;\n-import net.minecraft.world.IBlockDisplayReader;\n-import net.minecraft.world.IBlockReader;\n-import net.minecraft.world.World;\n-import net.minecraftforge.api.distmarker.Dist;\n-import net.minecraftforge.api.distmarker.OnlyIn;\n-\n-import java.util.Random;\n-\n-public interface ILeavesProperties {\n-\n-\t/** The type of tree these leaves connect to */\n-\tILeavesProperties setTree(TreeFamily tree);\n-\n-\t/** This is needed so the {@link DynamicLeavesBlock} knows if it can pull hydro from a branch */\n-\tTreeFamily getTree();\n-\n-\t/** The primitive(vanilla) leaves are used for many purposes including rendering, drops, and some other basic behavior. */\n-\tBlockState getPrimitiveLeaves();\n-\n-\t/** cached ItemStack of primitive leaves(what is returned when leaves are sheared) */\n-\tItemStack getPrimitiveLeavesItemStack();\n-\n-\tILeavesProperties setDynamicLeavesState(BlockState state);\n-\n-\tBlockState getDynamicLeavesState();\n-\n-\tBlockState getDynamicLeavesState(int distance);\n-\n-\tboolean hasDynamicLeavesBlock();\n-\n-\tint getFlammability();\n-\n-\tint getFireSpreadSpeed();\n-\n-\t/** Maximum amount of leaves in a stack before the bottom-most leaf block dies. Set to zero to disable smothering. [default = 4] **/\n-\tint getSmotherLeavesMax();\n-\n-\t/** Minimum amount of light necessary for a leaves block to be created. [default = 13] **/\n-\tint getLightRequirement();\n-\n-\t/** A CellKit for leaves automata */\n-\tICellKit getCellKit();\n-\n-\t@OnlyIn(Dist.CLIENT)\n-\tint foliageColorMultiplier(BlockState state, IBlockDisplayReader reader, BlockPos pos);\n-\n-\t/**\n-\t * Allows the leaves to perform a specific needed behavior or to optionally cancel the update\n-\t *\n-\t * @param worldIn\n-\t * @param pos\n-\t * @param state\n-\t * @param rand\n-\t * @return return true to allow the normal DynamicLeavesBlock update to occur\n-\t */\n-\tboolean updateTick(World worldIn, BlockPos pos, BlockState state, Random rand);\n-\n-\tint getRadiusForConnection(BlockState blockState, IBlockReader blockReader, BlockPos pos, BranchBlock from, Direction side, int fromRadius);\n-\n-\tenum FoliageTypes {\n-\t\tLEAVES,\n-\t\tFUNGUS,\n-\t\tWART\n-\t}\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "98cbf9918ab84fab5305f61f38101f1fa5d0689f",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/treedata/ITreePart.java",
    "status": "modified",
    "additions": 76,
    "deletions": 75,
    "changes": 151,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/ITreePart.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/ITreePart.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/treedata/ITreePart.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -3,7 +3,8 @@\n import com.ferreusveritas.dynamictrees.api.cells.ICell;\n import com.ferreusveritas.dynamictrees.api.network.MapSignal;\n import com.ferreusveritas.dynamictrees.blocks.branches.BranchBlock;\n-import com.ferreusveritas.dynamictrees.trees.TreeFamily;\n+import com.ferreusveritas.dynamictrees.blocks.leaves.LeavesProperties;\n+import com.ferreusveritas.dynamictrees.trees.Family;\n import net.minecraft.block.BlockState;\n import net.minecraft.util.Direction;\n import net.minecraft.util.math.BlockPos;\n@@ -15,104 +16,104 @@\n public interface ITreePart {\n \n \t/**\n-\t* Get a cell that provides the level of hydration to neighboring structures\n-\t*\n-\t* @param blockAccess Readonly access to blocks\n-\t* @param pos Position of the cell\n-\t* @param blockState the blockState of the block we are getting the cell from\n-\t* @param dir The direction of the request(opposite the direction of the requester)\n-\t* @param leavesProperties The tree data of the leaves the request came from\n-\t* @return Cell for getting hydration level\n-\t*/\n-\tICell getHydrationCell(IBlockReader blockAccess, BlockPos pos, BlockState blockState, Direction dir, ILeavesProperties leavesProperties);\n+\t * Get a cell that provides the level of hydration to neighboring structures\n+\t *\n+\t * @param blockAccess Readonly access to blocks\n+\t * @param pos Position of the cell\n+\t * @param blockState the blockState of the block we are getting the cell from\n+\t * @param dir The direction of the request(opposite the direction of the requester)\n+\t * @param leavesProperties The tree data of the leaves the request came from\n+\t * @return Cell for getting hydration level\n+\t */\n+\tICell getHydrationCell(IBlockReader blockAccess, BlockPos pos, BlockState blockState, Direction dir, LeavesProperties leavesProperties);\n \n \t/**\n-\t* The signal that is passed from the root of the tree to the tip of a branch to create growth.\n-\t*\n-\t* @param world The current world\n-\t* @param pos Position\n-\t* @param signal Signal structure that keeps track of the growth path\n-\t* @return Signal parameter for chaining\n-\t*/\n+\t * The signal that is passed from the root of the tree to the tip of a branch to create growth.\n+\t *\n+\t * @param world The current world\n+\t * @param pos Position\n+\t * @param signal Signal structure that keeps track of the growth path\n+\t * @return Signal parameter for chaining\n+\t */\n \tGrowSignal growSignal(World world, BlockPos pos, GrowSignal signal);\n \n \t/**\n-\t* The probability that the branch logic will follow into this block as part of it's path.\n-\t*\n-\t* @param blockAccess Readonly access to blocks\n-\t* @param pos Position\n-\t* @param from The branch making the request\n-\t* @return Probability weight used to determine if the growth path will take this block as a path next.\n-\t*/\n+\t * The probability that the branch logic will follow into this block as part of it's path.\n+\t *\n+\t * @param blockAccess Readonly access to blocks\n+\t * @param pos Position\n+\t * @param from The branch making the request\n+\t * @return Probability weight used to determine if the growth path will take this block as a path next.\n+\t */\n \tint probabilityForBlock(BlockState blockState, IBlockReader blockAccess, BlockPos pos, BranchBlock from);\n \n \t/**\n-\t* The radius of the part that a neighbor is expected to connect with\n-\t* @param world The current world\n-\t* @param pos Position\n-\t* @param from The branch making the request\n-\t* @param side The side the block is requesting(relative to the requesting block)\n-\t* @param fromRadius The radius of the branch requesting connection data\n-\t* @return Radius of the connection point to this block from the branch\n-\t*/\n+\t * The radius of the part that a neighbor is expected to connect with\n+\t * @param world The current world\n+\t * @param pos Position\n+\t * @param from The branch making the request\n+\t * @param side The side the block is requesting(relative to the requesting block)\n+\t * @param fromRadius The radius of the branch requesting connection data\n+\t * @return Radius of the connection point to this block from the branch\n+\t */\n \tint getRadiusForConnection(BlockState blockState, IBlockReader world, BlockPos pos, BranchBlock from, Direction side, int fromRadius);\n \n \t/**\n-\t* Used to get the radius of branches.. all other treeparts will/should return 0\n-\t* @param blockState the blockState of the block we are trying to get the radius of.\n-\t* @return Radius of the treepart(branch)\n-\t*/\n+\t * Used to get the radius of branches.. all other treeparts will/should return 0\n+\t * @param blockState the blockState of the block we are trying to get the radius of.\n+\t * @return Radius of the treepart(branch)\n+\t */\n \tint getRadius(BlockState blockState);\n \n \t/**\n-\t * Whether this node should be analyzed or not.\n-\t * Branches should always be true.  Leaves should always be false.\n-\t * Other types may vary in return depending on implementation.\n-\t *\n-\t * @return\n-\t */\n+\t  * Whether this node should be analyzed or not.\n+\t  * Branches should always be true.  Leaves should always be false.\n+\t  * Other types may vary in return depending on implementation.\n+\t  *\n+\t  * @return\n+\t  */\n \tboolean shouldAnalyse(BlockState blockState, IBlockReader blockAccess, BlockPos pos);\n \n \t/**\n-\t* Configurable general purpose branch network scanner to gather data and/or perform operations\n-\t*\n-\t* @param world The current world\n-\t* @param pos Position\n-\t* @param fromDir The direction that should not be analyzed.  Pass null to analyse in all directions\n-\t* @param signal The Mapping Signal object to gather data and/or perform operations\n-\t* @return\n-\t*/\n+\t * Configurable general purpose branch network scanner to gather data and/or perform operations\n+\t *\n+\t * @param world The current world\n+\t * @param pos Position\n+\t * @param fromDir The direction that should not be analyzed.  Pass null to analyse in all directions\n+\t * @param signal The Mapping Signal object to gather data and/or perform operations\n+\t * @return\n+\t */\n \tMapSignal analyse(BlockState blockState, IWorld world, BlockPos pos, Direction fromDir, MapSignal signal);\n \n \t/**\n-\t* Get the appropriate {@link TreeFamily} this block is used to build.\n-\t*\n-\t* @param blockAccess Readonly access to blocks\n-\t* @param pos Position\n-\t* @return DynamicTree\n-\t*/\n-\tTreeFamily getFamily(BlockState blockState, IBlockReader blockAccess, BlockPos pos);\n+\t * Get the appropriate {@link Family} this block is used to build.\n+\t *\n+\t * @param blockAccess Readonly access to blocks\n+\t * @param pos Position\n+\t * @return DynamicTree\n+\t */\n+\tFamily getFamily(BlockState blockState, IBlockReader blockAccess, BlockPos pos);\n \n \t/**\n-\t* A branch requires 2 or more adjacent supporting neighbors at least one of which must be another branch\n-\t* Valid supports are other branches(always), leaves(for twigs), and rooty dirt(under special circumstances)\n-\t* return value is nybbled neighbor values. High Nybble(0xF0) is count of branches only, Low Nybble(0x0F) is any valid reinforcing treepart(including branches)\n-\t*\n-\t* @param blockAccess Readonly access to blocks\n-\t* @param branch The branch making the request\n-\t* @param pos Position\n-\t* @param dir The direction of the request(opposite the direction of the requester)\n-\t* @param radius The radius of the branch requesting support\n-\t* @return Neighbor values in Nybble pair ( (#branches & 0xF0) | (#treeparts & 0x0F) )\n-\t*/\n+\t * A branch requires 2 or more adjacent supporting neighbors at least one of which must be another branch\n+\t * Valid supports are other branches(always), leaves(for twigs), and rooty dirt(under special circumstances)\n+\t * return value is nybbled neighbor values. High Nybble(0xF0) is count of branches only, Low Nybble(0x0F) is any valid reinforcing treepart(including branches)\n+\t *\n+\t * @param blockAccess Readonly access to blocks\n+\t * @param branch The branch making the request\n+\t * @param pos Position\n+\t * @param dir The direction of the request(opposite the direction of the requester)\n+\t * @param radius The radius of the branch requesting support\n+\t * @return Neighbor values in Nybble pair ( (#branches & 0xF0) | (#treeparts & 0x0F) )\n+\t */\n \tint branchSupport(BlockState blockState, IBlockReader blockAccess, BranchBlock branch, BlockPos pos, Direction dir, int radius);\n \n-\tpublic enum TreePartType {\n-\t\tNULL,//Not an official tree part\n-\t\tROOT,//Anything based off of BlockRooty\n-\t\tBRANCH,//Anything based off of BlockBranch\n-\t\tLEAVES,//Anything based off of BlockDynamicLeaves\n-\t\tOTHER//Anything else\n+\tenum TreePartType {\n+\t\tNULL, // Not an official tree part\n+\t\tROOT, // Anything based off of BlockRooty\n+\t\tBRANCH, // Anything based off of BlockBranch\n+\t\tLEAVES, // Anything based off of BlockDynamicLeaves\n+\t\tOTHER // Anything else\n \t}\n \n \tTreePartType getTreePartType();"
  },
  {
    "sha": "e69b13e717ed5813911d6527acbc595d261a07f2",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IIfTrueApplier.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IIfTrueApplier.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IIfTrueApplier.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IIfTrueApplier.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -0,0 +1,10 @@\n+package com.ferreusveritas.dynamictrees.api.treepacks;\n+\n+/**\n+ * @author Harley O'Connor\n+ */\n+public interface IIfTrueApplier<T> {\n+\n+    void apply (final T object);\n+\n+}"
  },
  {
    "sha": "e1172eb8266a24feafa5781b8e32963edf489490",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IJsonApplierManager.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IJsonApplierManager.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IJsonApplierManager.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IJsonApplierManager.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -0,0 +1,17 @@\n+package com.ferreusveritas.dynamictrees.api.treepacks;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.eventbus.api.Event;\n+\n+/**\n+ * @author Harley O'Connor\n+ */\n+public interface IJsonApplierManager {\n+\n+    void registerAppliers();\n+\n+    default void fireEvent (final Event event) {\n+        MinecraftForge.EVENT_BUS.post(event);\n+    }\n+\n+}"
  },
  {
    "sha": "b5eeb452a3b701d8be138705a0ac5a98319c68c8",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IPropertyApplier.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IPropertyApplier.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IPropertyApplier.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IPropertyApplier.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -1,8 +1,6 @@\n-package com.ferreusveritas.dynamictrees.api.datapacks;\n+package com.ferreusveritas.dynamictrees.api.treepacks;\n \n /**\n- *\n- *\n  * @author Harley O'Connor\n  */\n public interface IPropertyApplier<T, V> {",
    "previous_filename": "src/main/java/com/ferreusveritas/dynamictrees/api/datapacks/IPropertyApplier.java"
  },
  {
    "sha": "85f374678578bf9471eb726d99e73ce58c005a87",
    "filename": "src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IVoidPropertyApplier.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ferreusveritas/DynamicTrees/blob/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IVoidPropertyApplier.java",
    "raw_url": "https://github.com/ferreusveritas/DynamicTrees/raw/82520d5b369067479c06c53efe25b2b0c23c9505/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IVoidPropertyApplier.java",
    "contents_url": "https://api.github.com/repos/ferreusveritas/DynamicTrees/contents/src/main/java/com/ferreusveritas/dynamictrees/api/treepacks/IVoidPropertyApplier.java?ref=82520d5b369067479c06c53efe25b2b0c23c9505",
    "patch": "@@ -1,4 +1,4 @@\n-package com.ferreusveritas.dynamictrees.api.datapacks;\n+package com.ferreusveritas.dynamictrees.api.treepacks;\n \n /**\n  * An implementation of {@link IPropertyApplier} that assumes the application was",
    "previous_filename": "src/main/java/com/ferreusveritas/dynamictrees/api/datapacks/IVoidPropertyApplier.java"
  }
]
