[
  {
    "sha": "14f2317bd45c5f2664dc32b1a64ab64df5d95576",
    "filename": "embedded-kafka/README.adoc",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Playtika/testcontainers-spring-boot/blob/bf2c15f6d111cd6bc8d844ad177794b9f78ebf45/embedded-kafka/README.adoc",
    "raw_url": "https://github.com/Playtika/testcontainers-spring-boot/raw/bf2c15f6d111cd6bc8d844ad177794b9f78ebf45/embedded-kafka/README.adoc",
    "contents_url": "https://api.github.com/repos/Playtika/testcontainers-spring-boot/contents/embedded-kafka/README.adoc?ref=bf2c15f6d111cd6bc8d844ad177794b9f78ebf45",
    "patch": "@@ -33,10 +33,10 @@\n Containers for `embedded-kafka` and `embedded-zookeper` bind their volumes to host filesystem.\n By default, to your projects `target` folder. You can configure binding using properties:\n \n-* `embedded.zookeeper.fileSystemBind.enabled` `(true|false, default is 'true')`\n+* `embedded.zookeeper.fileSystemBind.enabled` `(true|false, default is 'false')`\n * `embedded.zookeeper.fileSystemBind.dataFolder` `(default : target/embedded-zk-data)`\n * `embedded.zookeeper.fileSystemBind.txnLogsFolder` `(default : target/embedded-zk-txn-logs)`\n-* `embedded.kafka.fileSystemBind.enabled` `(true|false, default is 'true')`\n+* `embedded.kafka.fileSystemBind.enabled` `(true|false, default is 'false')`\n * `embedded.kafka.fileSystemBind.dataFolder` `(default : target/embedded-kafka-data)`\n \n ==== Produces"
  },
  {
    "sha": "07a66d6a54b07b7903f6aca2a8d674cd56fdc43e",
    "filename": "embedded-kafka/src/main/java/com/playtika/test/kafka/properties/KafkaConfigurationProperties.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Playtika/testcontainers-spring-boot/blob/bf2c15f6d111cd6bc8d844ad177794b9f78ebf45/embedded-kafka/src/main/java/com/playtika/test/kafka/properties/KafkaConfigurationProperties.java",
    "raw_url": "https://github.com/Playtika/testcontainers-spring-boot/raw/bf2c15f6d111cd6bc8d844ad177794b9f78ebf45/embedded-kafka/src/main/java/com/playtika/test/kafka/properties/KafkaConfigurationProperties.java",
    "contents_url": "https://api.github.com/repos/Playtika/testcontainers-spring-boot/contents/embedded-kafka/src/main/java/com/playtika/test/kafka/properties/KafkaConfigurationProperties.java?ref=bf2c15f6d111cd6bc8d844ad177794b9f78ebf45",
    "patch": "@@ -83,7 +83,7 @@ private void init() {\n \n     @Data\n     public static final class FileSystemBind {\n-        private boolean enabled = true;\n+        private boolean enabled = false;\n         private String dataFolder = \"target/embedded-kafka-data\";\n     }\n "
  },
  {
    "sha": "fbca3b73df530967fe112c6f23d367ee732c597e",
    "filename": "embedded-kafka/src/main/java/com/playtika/test/kafka/properties/ZookeeperConfigurationProperties.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Playtika/testcontainers-spring-boot/blob/bf2c15f6d111cd6bc8d844ad177794b9f78ebf45/embedded-kafka/src/main/java/com/playtika/test/kafka/properties/ZookeeperConfigurationProperties.java",
    "raw_url": "https://github.com/Playtika/testcontainers-spring-boot/raw/bf2c15f6d111cd6bc8d844ad177794b9f78ebf45/embedded-kafka/src/main/java/com/playtika/test/kafka/properties/ZookeeperConfigurationProperties.java",
    "contents_url": "https://api.github.com/repos/Playtika/testcontainers-spring-boot/contents/embedded-kafka/src/main/java/com/playtika/test/kafka/properties/ZookeeperConfigurationProperties.java?ref=bf2c15f6d111cd6bc8d844ad177794b9f78ebf45",
    "patch": "@@ -41,7 +41,7 @@\n \n     @Data\n     public static final class FileSystemBind {\n-        private boolean enabled = true;\n+        private boolean enabled = false;\n         private String dataFolder = \"target/embedded-zk-data\";\n         private String txnLogsFolder = \"target/embedded-zk-txn-logs\";\n     }"
  },
  {
    "sha": "0ec010d4ae8a948ebe83f726144edab3d01531ee",
    "filename": "embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 12,
    "changes": 18,
    "blob_url": "https://github.com/Playtika/testcontainers-spring-boot/blob/bf2c15f6d111cd6bc8d844ad177794b9f78ebf45/embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaTest.java",
    "raw_url": "https://github.com/Playtika/testcontainers-spring-boot/raw/bf2c15f6d111cd6bc8d844ad177794b9f78ebf45/embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaTest.java",
    "contents_url": "https://api.github.com/repos/Playtika/testcontainers-spring-boot/contents/embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaTest.java?ref=bf2c15f6d111cd6bc8d844ad177794b9f78ebf45",
    "patch": "@@ -27,9 +27,9 @@\n     @Autowired\n     protected NetworkTestOperations kafkaNetworkTestOperations;\n     @Autowired\n-    private ZookeeperConfigurationProperties zookeeperProperties;\n+    protected ZookeeperConfigurationProperties zookeeperProperties;\n     @Autowired\n-    private KafkaConfigurationProperties kafkaProperties;\n+    protected KafkaConfigurationProperties kafkaProperties;\n \n     @Test\n     @DisplayName(\"creates topics on startup\")\n@@ -86,20 +86,14 @@ public void shouldEmulateLatencyOnSend() throws Exception {\n     }\n \n     @AfterAll\n-    public void shouldBindToFileSystem() throws Exception {\n+    public void afterAll() throws Exception {\n         Path projectDir = projectDir();\n         Path zookeeperDataFolder = projectDir.resolve(zookeeperProperties.getFileSystemBind().getDataFolder());\n         Path zookeeperTxnLogsFolder = projectDir.resolve(zookeeperProperties.getFileSystemBind().getTxnLogsFolder());\n         Path kafkaDataFolder = projectDir.resolve(kafkaProperties.getFileSystemBind().getDataFolder());\n \n-        assertThat(zookeeperDataFolder.toFile())\n-                .isDirectory()\n-                .isNotEmptyDirectory();\n-        assertThat(zookeeperTxnLogsFolder.toFile())\n-                .isDirectory()\n-                .isNotEmptyDirectory();\n-        assertThat(kafkaDataFolder.toFile())\n-                .isDirectory()\n-                .isNotEmptyDirectory();\n+        assertThat(zookeeperDataFolder.toFile()).doesNotExist();\n+        assertThat(zookeeperTxnLogsFolder.toFile()).doesNotExist();\n+        assertThat(kafkaDataFolder.toFile()).doesNotExist();\n     }\n }"
  },
  {
    "sha": "7ef3814f4c59c279d2df877213a5e3efaee1c5ea",
    "filename": "embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaWithBindingTest.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/Playtika/testcontainers-spring-boot/blob/bf2c15f6d111cd6bc8d844ad177794b9f78ebf45/embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaWithBindingTest.java",
    "raw_url": "https://github.com/Playtika/testcontainers-spring-boot/raw/bf2c15f6d111cd6bc8d844ad177794b9f78ebf45/embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaWithBindingTest.java",
    "contents_url": "https://api.github.com/repos/Playtika/testcontainers-spring-boot/contents/embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaWithBindingTest.java?ref=bf2c15f6d111cd6bc8d844ad177794b9f78ebf45",
    "patch": "@@ -0,0 +1,37 @@\n+package com.playtika.test.kafka;\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.TestInstance;\n+import org.springframework.test.context.TestPropertySource;\n+\n+import java.nio.file.Path;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@TestPropertySource(properties = {\n+        \"embedded.zookeeper.fileSystemBind.enabled=true\",\n+        \"embedded.kafka.fileSystemBind.enabled=true\",\n+})\n+@TestInstance(TestInstance.Lifecycle.PER_CLASS)\n+@DisplayName(\"Test that embedded-kafka with filesystem binding\")\n+public class EmbeddedKafkaWithBindingTest extends EmbeddedKafkaTest {\n+\n+    @AfterAll\n+    public void afterAll() throws Exception {\n+        Path projectDir = projectDir();\n+        Path zookeeperDataFolder = projectDir.resolve(zookeeperProperties.getFileSystemBind().getDataFolder());\n+        Path zookeeperTxnLogsFolder = projectDir.resolve(zookeeperProperties.getFileSystemBind().getTxnLogsFolder());\n+        Path kafkaDataFolder = projectDir.resolve(kafkaProperties.getFileSystemBind().getDataFolder());\n+\n+        assertThat(zookeeperDataFolder.toFile())\n+                .isDirectory()\n+                .isNotEmptyDirectory();\n+        assertThat(zookeeperTxnLogsFolder.toFile())\n+                .isDirectory()\n+                .isNotEmptyDirectory();\n+        assertThat(kafkaDataFolder.toFile())\n+                .isDirectory()\n+                .isNotEmptyDirectory();\n+    }\n+}"
  },
  {
    "sha": "ef111ea617fa1237abb6691a92ea8952bf08bb93",
    "filename": "embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaWithoutBindingTest.java",
    "status": "removed",
    "additions": 0,
    "deletions": 46,
    "changes": 46,
    "blob_url": "https://github.com/Playtika/testcontainers-spring-boot/blob/299aadd0650b2675a59a2b32c68da688c3064869/embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaWithoutBindingTest.java",
    "raw_url": "https://github.com/Playtika/testcontainers-spring-boot/raw/299aadd0650b2675a59a2b32c68da688c3064869/embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaWithoutBindingTest.java",
    "contents_url": "https://api.github.com/repos/Playtika/testcontainers-spring-boot/contents/embedded-kafka/src/test/java/com/playtika/test/kafka/EmbeddedKafkaWithoutBindingTest.java?ref=299aadd0650b2675a59a2b32c68da688c3064869",
    "patch": "@@ -1,46 +0,0 @@\n-package com.playtika.test.kafka;\n-\n-import com.playtika.test.kafka.properties.KafkaConfigurationProperties;\n-import com.playtika.test.kafka.properties.ZookeeperConfigurationProperties;\n-import org.junit.jupiter.api.AfterAll;\n-import org.junit.jupiter.api.DisplayName;\n-import org.junit.jupiter.api.TestInstance;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.test.context.TestPropertySource;\n-\n-import java.nio.file.Path;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-\n-@TestPropertySource(properties = {\n-        \"embedded.zookeeper.fileSystemBind.enabled=false\",\n-        \"embedded.zookeeper.fileSystemBind.dataFolder=target/embedded-zk-data-without-binding\",\n-        \"embedded.zookeeper.fileSystemBind.txnLogsFolder=target/embedded-zk-txn-logs-without-binding\",\n-\n-        \"embedded.kafka.fileSystemBind.enabled=false\",\n-        \"embedded.kafka.fileSystemBind.dataFolder=target/embedded-kafka-data-without-binding\"\n-})\n-@TestInstance(TestInstance.Lifecycle.PER_CLASS)\n-@DisplayName(\"Test that embedded-kafka without filesystem binding\")\n-public class EmbeddedKafkaWithoutBindingTest extends EmbeddedKafkaTest {\n-    @Autowired\n-    private ZookeeperConfigurationProperties zookeeperProperties;\n-\n-    @Autowired\n-    private KafkaConfigurationProperties kafkaProperties;\n-\n-    @AfterAll\n-    public void shouldBindToFileSystem() throws Exception {\n-        Path projectDir = projectDir();\n-        Path zookeeperDataFolder = projectDir.resolve(zookeeperProperties.getFileSystemBind().getDataFolder());\n-        Path zookeeperTxnLogsFolder = projectDir.resolve(zookeeperProperties.getFileSystemBind().getTxnLogsFolder());\n-        Path kafkaDataFolder = projectDir.resolve(kafkaProperties.getFileSystemBind().getDataFolder());\n-\n-        assertThat(zookeeperDataFolder.toFile())\n-                .doesNotExist();\n-        assertThat(zookeeperTxnLogsFolder.toFile())\n-                .doesNotExist();\n-        assertThat(kafkaDataFolder.toFile())\n-                .doesNotExist();\n-    }\n-}"
  }
]
