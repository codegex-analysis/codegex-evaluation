[
  {
    "sha": "935d92433d25ae9d5b816a1d6bd08395eab7d2e3",
    "filename": ".circleci/config.yml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/.circleci/config.yml",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/.circleci/config.yml",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/.circleci/config.yml?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -62,8 +62,8 @@ jobs:\n           name: Install MarkLogic Docker\n           command: |\n             echo \"$DOCKER_PASSWORD\" | docker login -u \"$DOCKER_USERNAME\" --password-stdin\n-            docker pull store/marklogicdb/marklogic-server:10.0-5.1-dev-centos\n-            docker run -d --privileged -p 0.0.0.0:7997-8002:7997-8002 -p 0.0.0.0:8010-8015:8010-8015 store/marklogicdb/marklogic-server:10.0-5.1-dev-centos\n+            docker pull store/marklogicdb/marklogic-server:10.0-6.1-dev-centos\n+            docker run -d --privileged -p 0.0.0.0:7997-8002:7997-8002 -p 0.0.0.0:8010-8015:8010-8015 store/marklogicdb/marklogic-server:10.0-6.1-dev-centos\n             ./.travis/setup-marklogic.sh\n       - run:\n           name: Run tests"
  },
  {
    "sha": "1c628a74ca4b54e31ad89387bff5af7f29604c5c",
    "filename": "middle-tier/src/main/java/com/marklogic/envision/dataServices/Triples.java",
    "status": "modified",
    "additions": 10,
    "deletions": 6,
    "changes": 16,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/java/com/marklogic/envision/dataServices/Triples.java",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/java/com/marklogic/envision/dataServices/Triples.java",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/middle-tier/src/main/java/com/marklogic/envision/dataServices/Triples.java?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -32,7 +32,7 @@ private TriplesImpl(DatabaseClient dbClient) {\n             }\n \n             @Override\n-            public com.fasterxml.jackson.databind.JsonNode browseTriples(String qtext, Integer page, Integer subjectsPerPage, Integer linksPerSubject, String sort) {\n+            public com.fasterxml.jackson.databind.JsonNode browseTriples(String qtext, Integer page, Integer subjectsPerPage, Integer linksPerSubject, String sort, String dedup) {\n               return BaseProxy.JsonDocumentType.toJsonNode(\n                 baseProxy\n                 .request(\"browseTriples.sjs\", BaseProxy.ParameterValuesKind.MULTIPLE_ATOMICS)\n@@ -42,15 +42,16 @@ private TriplesImpl(DatabaseClient dbClient) {\n                     BaseProxy.atomicParam(\"page\", false, BaseProxy.IntegerType.fromInteger(page)),\n                     BaseProxy.atomicParam(\"subjectsPerPage\", false, BaseProxy.IntegerType.fromInteger(subjectsPerPage)),\n                     BaseProxy.atomicParam(\"linksPerSubject\", true, BaseProxy.IntegerType.fromInteger(linksPerSubject)),\n-                    BaseProxy.atomicParam(\"sort\", false, BaseProxy.StringType.fromString(sort)))\n+                    BaseProxy.atomicParam(\"sort\", false, BaseProxy.StringType.fromString(sort)),\n+                    BaseProxy.atomicParam(\"dedup\", false, BaseProxy.StringType.fromString(dedup)))\n                 .withMethod(\"POST\")\n                 .responseSingle(false, Format.JSON)\n                 );\n             }\n \n \n             @Override\n-            public com.fasterxml.jackson.databind.JsonNode getRelated(String item, String itemId, Boolean isIRI, String qtext, String predicate, Integer maxRelated) {\n+            public com.fasterxml.jackson.databind.JsonNode getRelated(String item, String itemId, Boolean isIRI, String qtext, String predicate, Integer maxRelated, Boolean filterText) {\n               return BaseProxy.JsonDocumentType.toJsonNode(\n                 baseProxy\n                 .request(\"getRelated.sjs\", BaseProxy.ParameterValuesKind.MULTIPLE_ATOMICS)\n@@ -61,7 +62,8 @@ private TriplesImpl(DatabaseClient dbClient) {\n                     BaseProxy.atomicParam(\"isIRI\", false, BaseProxy.BooleanType.fromBoolean(isIRI)),\n                     BaseProxy.atomicParam(\"qtext\", true, BaseProxy.StringType.fromString(qtext)),\n                     BaseProxy.atomicParam(\"predicate\", true, BaseProxy.StringType.fromString(predicate)),\n-                    BaseProxy.atomicParam(\"maxRelated\", false, BaseProxy.IntegerType.fromInteger(maxRelated)))\n+                    BaseProxy.atomicParam(\"maxRelated\", false, BaseProxy.IntegerType.fromInteger(maxRelated)),\n+                    BaseProxy.atomicParam(\"filterText\", false, BaseProxy.BooleanType.fromBoolean(filterText)))\n                 .withMethod(\"POST\")\n                 .responseSingle(false, Format.JSON)\n                 );\n@@ -80,9 +82,10 @@ private TriplesImpl(DatabaseClient dbClient) {\n    * @param subjectsPerPage\tprovides input\n    * @param linksPerSubject\tprovides input\n    * @param sort\tprovides input\n+   * @param dedup\tprovides input\n    * @return\tas output\n    */\n-    com.fasterxml.jackson.databind.JsonNode browseTriples(String qtext, Integer page, Integer subjectsPerPage, Integer linksPerSubject, String sort);\n+    com.fasterxml.jackson.databind.JsonNode browseTriples(String qtext, Integer page, Integer subjectsPerPage, Integer linksPerSubject, String sort, String dedup);\n \n   /**\n    * Invokes the getRelated operation on the database server\n@@ -93,8 +96,9 @@ private TriplesImpl(DatabaseClient dbClient) {\n    * @param qtext\tprovides input\n    * @param predicate\tprovides input\n    * @param maxRelated\tprovides input\n+   * @param filterText\tprovides input\n    * @return\tas output\n    */\n-    com.fasterxml.jackson.databind.JsonNode getRelated(String item, String itemId, Boolean isIRI, String qtext, String predicate, Integer maxRelated);\n+    com.fasterxml.jackson.databind.JsonNode getRelated(String item, String itemId, Boolean isIRI, String qtext, String predicate, Integer maxRelated, Boolean filterText);\n \n }"
  },
  {
    "sha": "db1d80c24a0cfae365ccde5c5fa912d337c8511d",
    "filename": "middle-tier/src/main/java/com/marklogic/envision/explore/TriplesController.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/java/com/marklogic/envision/explore/TriplesController.java",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/java/com/marklogic/envision/explore/TriplesController.java",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/middle-tier/src/main/java/com/marklogic/envision/explore/TriplesController.java?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -25,13 +25,17 @@ JsonNode getTriples(HttpServletRequest request) throws IOException {\n \t\tif (!node.get(\"qtext\").isNull()) {\n \t\t\tqtext = node.get(\"qtext\").asText();\n \t\t}\n+\t\tString dedup = null;\n+\t\tif (!node.get(\"dedup\").isNull()) {\n+\t\t\tdedup = node.get(\"dedup\").asText();\n+\t\t}\n \t\tint page = node.get(\"page\").asInt();\n \t\tint subjectsPerPage = node.get(\"subjectsPerPage\").asInt();\n \t\tint linksPerSubject = node.get(\"linksPerSubject\").asInt();\n \t\tString sort = node.get(\"sort\").asText();\n \t\tString database = node.get(\"database\").asText();\n \t\tDatabaseClient client = getProperClient(database);\n-\t\treturn Triples.on(client).browseTriples(qtext, page, subjectsPerPage, linksPerSubject, sort);\n+\t\treturn Triples.on(client).browseTriples(qtext, page, subjectsPerPage, linksPerSubject, sort, dedup);\n \t}\n \n \tprivate DatabaseClient getProperClient(String database) {\n@@ -67,7 +71,12 @@ JsonNode getRelated(HttpServletRequest request) throws IOException {\n \t\t}\n \t\tint maxRelated = node.get(\"maxRelated\").asInt();\n \n+\t\tboolean filterText = false;\n+\t\tif (node.get(\"filterText\") != null && node.get(\"filterText\").isBoolean()) {\n+\t\t\tfilterText = node.get(\"filterText\").asBoolean();\n+\t\t}\n+\n \t\tDatabaseClient client = getProperClient(database);\n-\t\treturn Triples.on(client).getRelated(item, itemId, isIRI, qtext, predicate, maxRelated);\n+\t\treturn Triples.on(client).getRelated(item, itemId, isIRI, qtext, predicate, maxRelated, filterText);\n \t}\n }"
  },
  {
    "sha": "1e72846e423fe1c37dcbb9f3f7ce4184ff304cdf",
    "filename": "middle-tier/src/main/resources/envision-modules/root/envision/triples/browseTriples.api",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/resources/envision-modules/root/envision/triples/browseTriples.api",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/resources/envision-modules/root/envision/triples/browseTriples.api",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/middle-tier/src/main/resources/envision-modules/root/envision/triples/browseTriples.api?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -22,7 +22,11 @@\n       {\n         \"datatype\": \"string\",\n         \"name\": \"sort\"\n-      }\n+      },\n+\t\t\t{\n+\t\t\t\t\"datatype\": \"string\",\n+\t\t\t\t\"name\": \"dedup\"\n+\t\t\t}\n     ],\n     \"return\": {\n       \"datatype\": \"jsonDocument\","
  },
  {
    "sha": "091f434e4224e63e7b666ea6e90fbb2a6b21d3b2",
    "filename": "middle-tier/src/main/resources/envision-modules/root/envision/triples/browseTriples.sjs",
    "status": "modified",
    "additions": 65,
    "deletions": 117,
    "changes": 182,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/resources/envision-modules/root/envision/triples/browseTriples.sjs",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/resources/envision-modules/root/envision/triples/browseTriples.sjs",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/middle-tier/src/main/resources/envision-modules/root/envision/triples/browseTriples.sjs?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -1,144 +1,92 @@\n+'use strict';\n+\n+const triplesLib = require('triplesLib.sjs');\n+\n var qtext;\n var page;\n var subjectsPerPage;\n var linksPerSubject;\n var sort;\n+var dedup;\n \n let start = ((page - 1) * subjectsPerPage)\n-let queries = []\n-\n-if (qtext && qtext !== '') {\n-\tqueries.push(cts.wordQuery(qtext));\n+dedup = (dedup == 'on') ? 'on' : 'off';\n+sort = sort || 'default'\n+subjectsPerPage = subjectsPerPage ? subjectsPerPage : 10;\n+linksPerSubject = linksPerSubject ? linksPerSubject : 10;\n+\n+/**\n+ * Find the distinct subjects based on their predicate frequency and query text.\n+ */\n+const op = require('/MarkLogic/optic');\n+const s = op.col('s');\n+const p = op.col('p');\n+const o = op.col('o');\n+\n+let trip =\n+\t  op.fromTriples([op.pattern(s, p, o)], null, null, { 'dedup': dedup })\n+\t    .where(op.as('isIRI', op.sem.isIRI(s)));\n+\n+if (qtext) {\n+\ttrip = trip.where(cts.wordQuery(qtext, ['case-insensitive']));\n }\n \n-function createTitle(s) {\n-\tlet label = s.toString()\n-\tif (label.match('#')) {\n-\t\tlabel = label.split('#')[1]\n-\t}\n-\treturn label\n-}\n+let countR = trip.groupBy(null, [op.count('count', s)]).result();\n+let count = fn.head(countR).count\n+\n+trip = trip.groupBy(s, [op.count('pCount', p)]);\n \n-function createLabel(s) {\n-\tlet label = createTitle(s)\n-\tif (label.match('/')) {\n-\t\tconst splits = label.split('/')\n-\t\tlabel = splits[splits.length - 1]\n-\t}\n-\tif (label.length <= 15) {\n-\t\treturn label\n-\t}\n-\treturn label.slice(0, 15) + '...'\n+if (sort == 'most-connected') {\n+\ttrip = trip.orderBy(op.desc('pCount'));\n+} else if (sort == 'least-connected') {\n+\ttrip = trip.orderBy(op.asc('pCount'));\n }\n \n-let nodes = {}\n-let edges = {}\n-\n-let textFilter = \"\"\n-if (qtext && qtext !== '') {\n-\ttextFilter = `\n-\tfilter (\n-\t\tcts:contains(?s, cts:word-query((\"${qtext}\"), \"case-insensitive\")) ||\n-\t\tcts:contains(?p, cts:word-query((\"${qtext}\"), \"case-insensitive\")) ||\n-\t\tcts:contains(?o, cts:word-query((\"${qtext}\"), \"case-insensitive\"))\n-\t  )\n-\t`\n+trip = trip.offset(start);\n+\n+if (subjectsPerPage && subjectsPerPage > -1) {\n+\ttrip = trip.limit(subjectsPerPage);\n }\n \n-let count = sem.sparql(`\n-PREFIX cts: <http://marklogic.com/cts#>\n-SELECT distinct (COUNT(?s) AS ?count) where {\n-\t?s ?p ?o\n-\tfilter isIRI(?s)\n-\t${textFilter}\n+let iris = [];\n+for (let item of trip.result()) {\n+\tiris.push(item.s)\n }\n-`).toArray()[0].count\n \n-sort = sort || 'DESC'\n+/**\n+ * Find the distinct links to these node filtered by the query text.\n+ */\n+const s2 = op.col('s');\n+const p2 = op.col('p');\n+const o2 = op.col('o');\n+\n+let r2 = op.fromTriples([op.pattern(s2, p2, o2)], null, null, { 'dedup': dedup });\n \n-let subjectQuery = `\n-PREFIX cts: <http://marklogic.com/cts#>\n-SELECT distinct ?s (COUNT(?p) AS ?count) where {\n-\t?s ?p ?o\n-\tfilter isIRI(?s)\n-\t${textFilter}\n+if (iris && iris.length > 0) {\n+\tr2 = r2.where(op.in(s2, iris));\n }\n-GROUP BY ?s\n-ORDER BY ${sort}(?count)\n-LIMIT ${subjectsPerPage}\n-OFFSET ${start}\n-`\n-let iris = sem.sparql(subjectQuery)\n-  .toArray()\n-  .map(t => t.s)\n-\n-let limit = ''\n-if (linksPerSubject > 0) {\n-\tlimit = `LIMIT ${linksPerSubject}`\n+if (qtext && qtext != '') {\n+\tr2 = r2.where(cts.wordQuery(qtext));\n }\n \n-sem.sparql(`\n-\tPREFIX cts: <http://marklogic.com/cts#>\n-\tSELECT distinct ?s ?o ?p\n-\t\twhere {\n-\t\t?s ?p ?o .\n-\t\tfilter(?s = ?x)\n-\t\t${textFilter}\n-\t}\n-\t${limit}\n-`, { x: iris })\n-  .toArray()\n-  .forEach(t => {\n-\t\tconst fromId = xdmp.md5(t.s)\n-\n-\t\tif (!nodes[fromId]) {\n-\t\t\tnodes[fromId] = {\n-\t\t\t\tid: fromId,\n-\t\t\t\tlabel: createLabel(t.s),\n-\t\t\t\ttitle: createTitle(t.s),\n-\t\t\t\torig: t.s,\n-\t\t\t\tisIRI: sem.isIRI(t.s)\n-\t\t\t}\n-\n-\t\t\tconst allPredicatesQuery = `\n-\t\t\tPREFIX cts: <http://marklogic.com/cts#>\n-\t\t\tSELECT distinct ?p\n-\t\t\twhere {\n-\t\t\t\t?s ?p ?o\n-\t\t\t}\n-\t\t\t`\n-\t\t\tnodes[fromId].predicates = sem.sparql(allPredicatesQuery, { s: t.s })\n-\t\t\t\t.toArray()\n-\t\t\t\t.map(t => t.p)\n-\t\t}\n-\n-\t\tconst toId = sem.isIRI(t.o) ? xdmp.md5(t.o) : xdmp.md5(`${t.s}-${t.p}-${t.o}`)\n-\t\tnodes[toId] = {\n-\t\t\tid: toId,\n-\t\t\tlabel: createLabel(t.o),\n-\t\t\ttitle: createTitle(t.o),\n-\t\t\torig: t.o,\n-\t\t\tisIRI: sem.isIRI(t.o)\n-\t\t}\n-\n-\t\tconst edgeId = xdmp.md5(`${t.s}-${t.p}-${t.o}`)\n-\t\tedges[edgeId] = {\n-\t\t\tid: edgeId,\n-\t\t\tlabel: createLabel(t.p),\n-\t\t\ttitle: createTitle(t.p),\n-\t\t\tfrom: fromId,\n-\t\t\tto: toId,\n-\t\t\torig: t.p,\n-\t\t\tisIRI: sem.isIRI(t.p)\n-\t\t}\n-  })\n+r2 = r2.where(op.as('isIRI', op.sem.isIRI(s2)));\n+r2 = (linksPerSubject && linksPerSubject > 0) ? r2.limit(linksPerSubject) : r2;\n \n+/**\n+ * Iterate the result set and create the nodes and edges to plot the graph.\n+ */\n+let nodesAndEdges = triplesLib.buildNodesAndEdges(r2.result());\n+\n+/**\n+ * Build response payload.\n+ */\n let resp = {\n \tpage: page,\n \tsubjectsPerPage: subjectsPerPage,\n-\tlinksPerSubject: linksPerSubject || 'all' ,\n-\tnodes: nodes,\n-\tedges: edges,\n+\tlinksPerSubject: linksPerSubject || 'all',\n+\tnodes: nodesAndEdges.nodes,\n+\tedges: nodesAndEdges.edges,\n \ttotal: count\n }\n+\n resp"
  },
  {
    "sha": "6655c50ea8576c89445aeac38a21ae0e85e5a448",
    "filename": "middle-tier/src/main/resources/envision-modules/root/envision/triples/getRelated.api",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/resources/envision-modules/root/envision/triples/getRelated.api",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/resources/envision-modules/root/envision/triples/getRelated.api",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/middle-tier/src/main/resources/envision-modules/root/envision/triples/getRelated.api?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -26,10 +26,14 @@\n         {\n             \"datatype\": \"int\",\n             \"name\": \"maxRelated\"\n-        }\n+        },\n+\t\t\t\t{\n+\t\t\t\t\t\"datatype\": \"boolean\",\n+\t\t\t\t\t\"name\": \"filterText\"\n+\t\t\t\t}\n     ],\n     \"return\": {\n         \"datatype\": \"jsonDocument\",\n         \"$javaClass\": \"com.fasterxml.jackson.databind.JsonNode\"\n     }\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "48947a18a777548b72093255da34ef498c298b9f",
    "filename": "middle-tier/src/main/resources/envision-modules/root/envision/triples/getRelated.sjs",
    "status": "modified",
    "additions": 39,
    "deletions": 98,
    "changes": 137,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/resources/envision-modules/root/envision/triples/getRelated.sjs",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/resources/envision-modules/root/envision/triples/getRelated.sjs",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/middle-tier/src/main/resources/envision-modules/root/envision/triples/getRelated.sjs?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -1,52 +1,23 @@\n+'use strict';\n+\n+const triplesLib = require('triplesLib.sjs');\n+\n var item;\n var itemId;\n var isIRI;\n var qtext;\n var predicate;\n var maxRelated;\n+var filterText;\n \n-function createTitle(s) {\n-\tlet label = s.toString()\n-\tif (label.match('#')) {\n-\t\tlabel = label.split('#')[1]\n-\t}\n-\treturn label\n-}\n-\n-function createLabel(s) {\n-\tlet label = createTitle(s)\n-\tif (label.match('/')) {\n-\t\tconst splits = label.split('/')\n-\t\tlabel = splits[splits.length - 1]\n-\t}\n-\tif (label.length <= 15) {\n-\t\treturn label\n-\t}\n-\treturn label.slice(0, 15) + '...'\n-}\n-\n-function getPredicates(iri) {\n-\tconst allPredicatesQuery = `\n-\tPREFIX cts: <http://marklogic.com/cts#>\n-\tSELECT distinct ?p\n-\twhere {\n-\t\t?s ?p ?o .\n-\t\t?x ?p ?o .\n-\t\tfilter(?s = ?x)\n-\t}\n-\t`\n-\tlet bindings = {\n-\t\tx: iri\n-\t}\n-\treturn sem.sparql(allPredicatesQuery, bindings)\n-\t\t.toArray().map(t => t.p)\n-}\n-\n-let nodes = {}\n-let edges = {}\n+var isString = typeof item == 'string';\n \n+/**\n+ * Find the distinct triples based on the user item being in either the subject or object.\n+ * Filter the results also based on the user's query text.\n+ */\n let textFilter = \"\"\n-if (qtext && qtext !== '' && predicate == null) {\n+if (qtext && qtext !== '' && predicate == null && filterText == true) {\n \ttextFilter = `\n \tfilter (\n \t\tcts:contains(?s, cts:word-query((\"${qtext}\"), \"case-insensitive\")) ||\n@@ -56,78 +27,48 @@ if (qtext && qtext !== '' && predicate == null) {\n \t`\n }\n \n-let predFilter = \"\"\n+let predicateBind = '';\n if (predicate != null) {\n-\tpredFilter = `\n-\tfilter (?p = <${predicate}>)\n-\t`\n+\tpredicateBind = 'BIND(<' + predicate + '> as ?p)';\n }\n \n-let limit = ''\n+let limit = '';\n if (maxRelated > 0) {\n \tlimit = `LIMIT ${maxRelated}`\n }\n \n-\n-let bindings = {\n-    x: isIRI ? sem.iri(item) : item\n+let bindItem = item;\n+if (isIRI) {\n+\tbindItem = '<' + item + '>'\n+} else if (isString) {\n+\tbindItem = '\"' + item + '\"';\n }\n+\n const query = `\n PREFIX cts: <http://marklogic.com/cts#>\n-SELECT * where {\n-\t?s ?p ?o .\n-\tFILTER (?o = ?x || ?s = ?x)\n-\tFILTER isIRI(?s)\n+SELECT DISTINCT ?s ?p ?o {\n+    {\n+      SELECT ?s ?p ?o {\n+        BIND(${bindItem} as ?o)\n+        ${predicateBind}\n+        ?s ?p ?o\n+        FILTER isIri(?s)\n+      }\n+    } UNION {\n+       SELECT * {\n+         BIND(${bindItem} as ?s)\n+         ${predicateBind}\n+         ?s ?p ?o\n+       }\n+    }\n \t${textFilter}\n-\t${predFilter}\n }\n ${limit}\n `\n-let iris = sem.sparql(query, bindings)\n-  .toArray()\n-  .forEach(t => {\n-\tconst fromId = xdmp.md5(t.s)\n-\tif (!nodes[fromId]) {\n-\t\tnodes[fromId] = {\n-\t\t\tid: fromId,\n-\t\t\tlabel: createLabel(t.s),\n-\t\t\ttitle: createTitle(t.s),\n-\t\t\torig: t.s,\n-\t\t\tisIRI: sem.isIRI(t.s)\n-\t\t}\n \n-\t\tnodes[fromId].predicates = getPredicates(t.s)\n-\t}\n+/**\n+ * Iterate the result set and create the nodes and edges to plot the graph.\n+ */\n+let resp = triplesLib.buildNodesAndEdges(sem.sparql(query));\n \n-\tconst toId = sem.isIRI(t.o) ? xdmp.md5(t.o) : xdmp.md5(`${t.s}-${t.p}-${t.o}`)\n-\tif (!nodes[toId]) {\n-\t\tnodes[toId] = {\n-\t\t\tid: toId,\n-\t\t\tlabel: createLabel(t.o),\n-\t\t\ttitle: createTitle(t.o),\n-\t\t\torig: t.o,\n-\t\t\tisIRI: sem.isIRI(t.o)\n-\t\t}\n-\n-\t\tif (sem.isIRI(t.o)) {\n-\t\t\tnodes[toId].predicates = getPredicates(t.o)\n-\t\t}\n-\t}\n-\n-\tconst edgeId = xdmp.md5(`${t.s}-${t.p}-${t.o}`)\n-    edges[edgeId] ={\n-\t\tid: edgeId,\n-\t\tlabel: createLabel(t.p),\n-\t\ttitle: createTitle(t.p),\n-\t\tfrom: fromId,\n-\t\tto: toId,\n-\t\torig: t.p,\n-\t\tisIRI: sem.isIRI(t.p)\n-\t}\n-  })\n-\n-let resp = {\n-\tnodes: nodes,\n-\tedges: edges,\n-}\n resp"
  },
  {
    "sha": "e6c05a1ea0d8f8304ea9a1cac8af39ec185698f5",
    "filename": "middle-tier/src/main/resources/envision-modules/root/envision/triples/triplesLib.sjs",
    "status": "added",
    "additions": 127,
    "deletions": 0,
    "changes": 127,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/resources/envision-modules/root/envision/triples/triplesLib.sjs",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/main/resources/envision-modules/root/envision/triples/triplesLib.sjs",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/middle-tier/src/main/resources/envision-modules/root/envision/triples/triplesLib.sjs?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -0,0 +1,127 @@\n+'use strict';\n+\n+/**\n+ * Create a title based on the subject IRI.\n+ * @param subject - Subject of a Triple\n+ * @returns a string representation of a title. Anything after the hash mark of a IRI if present.\n+ */\n+function createTitle(subject) {\n+\tlet label = subject.toString()\n+\tif (label.match('#')) {\n+\t\tlabel = label.split('#')[1]\n+\t}\n+\treturn label\n+}\n+\n+/**\n+ * Creates a label for a node. If a RDF Schema label is available it is used.\n+ * @param subject - Subject of a Triple\n+ * @returns a string representation of a label.\n+ */\n+function createLabel(subject) {\n+\tlet rdfLabel = fn.head(sem.sparql(`\n+\tSELECT DISTINCT ?label\n+\tWHERE {\n+\t\t ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label\n+\t}\n+\tLIMIT 1\n+ `, { 's': (sem.isIRI(subject)) ? sem.iri(subject) : subject}))\n+\n+\tlet label = null;\n+\tif (rdfLabel != null) {\n+\t\tlabel = rdfLabel.label;\n+\t} else {\n+\t\tlabel = createTitle(subject)\n+\t\tif (label.match('/')) {\n+\t\t\tconst splits = label.split('/')\n+\t\t\tlabel = splits[splits.length - 1]\n+\t\t}\n+\t}\n+\n+\tif (label.length <= 15) {\n+\t\treturn label\n+\t}\n+\n+\treturn (label) ? fn.substring(label, 0, 15)  + '...' : '';\n+}\n+\n+/**\n+ * Finds all predicates for a given subject.\n+ * @param subject - Subject of a Triple\n+ * @returns a distinct list of predicates for a given subject.\n+ */\n+function getPredicates(subject) {\n+\tconst allPredicatesQuery = `\n+\t\tSELECT DISTINCT ?p\n+\t\twhere {\n+\t\t\t?s ?p ?o .\n+\t\t}\n+\t`\n+\tlet bindings = {\n+\t\t's': subject\n+\t}\n+\n+\tlet result = sem.sparql(allPredicatesQuery, bindings);\n+\tlet predicates = [];\n+\tfor (let triple of result) {\n+\t\tpredicates.push(triple.p);\n+\t}\n+\n+\treturn predicates;\n+}\n+\n+/**\n+ * Builds a set of Nodes and Edges for a given sequence of triples.\n+ * @param triples - A Sequence of Semantic Triples.\n+ * @returns an object containing the nodes and edges to be plotted on the Web UI.\n+ */\n+function buildNodesAndEdges(triples) {\n+\tlet nodes = {}\n+\tlet edges = {}\n+\n+\tfor (let triple of triples) {\n+\n+\t\tconst fromId = xdmp.md5(triple.s)\n+\t\tnodes[fromId] = {\n+\t\t\t'id': fromId,\n+\t\t\t'label': createLabel(triple.s),\n+\t\t\t'title': createTitle(triple.s),\n+\t\t\t'orig': triple.s,\n+\t\t\t'isIRI': sem.isIRI(triple.s)\n+\t\t}\n+\t\tnodes[fromId].predicates = getPredicates(triple.s)\n+\n+\t\tconst toId = sem.isIRI(triple.o) ? xdmp.md5(triple.o) : xdmp.md5(`${triple.s}-${triple.p}-${triple.o}`)\n+\t\tnodes[toId] = {\n+\t\t\t'id': toId,\n+\t\t\t'label': createLabel(triple.o),\n+\t\t\t'title': createTitle(triple.o),\n+\t\t\t'orig': triple.o,\n+\t\t\t'isIRI': sem.isIRI(triple.o)\n+\t\t};\n+\n+\t\tif (sem.isIRI(triple.o)) {\n+\t\t\tnodes[toId].predicates = getPredicates(triple.o);\n+\t\t}\n+\n+\t\tconst edgeId = xdmp.md5(`${triple.s}-${triple.p}-${triple.o}`)\n+\t\tedges[edgeId] = {\n+\t\t\t'id': edgeId,\n+\t\t\t'label': createLabel(triple.p),\n+\t\t\t'title': createTitle(triple.p),\n+\t\t\t'from': fromId,\n+\t\t\t'to': toId,\n+\t\t\t'orig': triple.p,\n+\t\t\t'isIRI': sem.isIRI(triple.p)\n+\t\t};\n+\t}\n+\n+\treturn {\n+\t\t'nodes': nodes,\n+\t\t'edges': edges\n+\t};\n+}\n+\n+module.exports = {\n+\tbuildNodesAndEdges: buildNodesAndEdges\n+};"
  },
  {
    "sha": "ce1fd9afd3158d6dc7a02a4ec404b7fc9af9200d",
    "filename": "middle-tier/src/test/java/com/marklogic/envision/TestBrowseTriples.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/test/java/com/marklogic/envision/TestBrowseTriples.java",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/test/java/com/marklogic/envision/TestBrowseTriples.java",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/middle-tier/src/test/java/com/marklogic/envision/TestBrowseTriples.java?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -47,9 +47,9 @@ void teardown() {\n \n \t@Test\n \tvoid bug144() throws Exception {\n-\t\tJsonNode resp = Triples.on(getFinalClient()).browseTriples(\"ID-f27d7d86-1b2f-4352-bd9c-73820ea0755c\", 1, 10, 100, \"DESC\");\n+\t\tJsonNode resp = Triples.on(getFinalClient()).browseTriples(\"ID-f27d7d86-1b2f-4352-bd9c-73820ea0755c\", 1, 10, 100, \"most-connected\", \"on\");\n \t\tSystem.out.println(objectMapper.writeValueAsString(resp));\n-\t\tjsonAssertEquals(getResource(\"output/know/browseOutput.json\"), resp, false);\n+\t\tjsonAssertEquals(getResource(\"output/know/browseOutputNew.json\"), resp, false);\n \t}\n \n }"
  },
  {
    "sha": "d9a613335ee260e185798de65bc3ef9871e811ac",
    "filename": "middle-tier/src/test/java/com/marklogic/envision/controllers/TriplesControllerTests.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/test/java/com/marklogic/envision/controllers/TriplesControllerTests.java",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/test/java/com/marklogic/envision/controllers/TriplesControllerTests.java",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/middle-tier/src/test/java/com/marklogic/envision/controllers/TriplesControllerTests.java?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -36,7 +36,7 @@ void getTriples() throws Exception {\n \n \t\tlogin();\n \n-\t\tpostJson(GET_TRIPLES_URL, \"{\\\"page\\\": 1, \\\"qtext\\\": null, \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"DESC\\\", \\\"database\\\": \\\"final\\\"}\")\n+\t\tpostJson(GET_TRIPLES_URL, \"{\\\"page\\\": 1, \\\"qtext\\\": null, \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"most-connected\\\",  \\\"dedup\\\": \\\"on\\\", \\\"database\\\": \\\"final\\\"}\")\n \t\t\t.andDo(\n \t\t\t\tresult -> {\n \t\t\t\t\tassertEquals(\"application/json;charset=UTF-8\", result.getResponse().getHeader(\"Content-Type\"));\n@@ -49,7 +49,7 @@ void getTriples() throws Exception {\n \t\tHubClient hubClient = getNonAdminHubClient();\n \t\tmodelService.saveModel(hubClient, getResourceStream(\"models/model.json\"));\n \n-\t\tpostJson(GET_TRIPLES_URL, \"{\\\"page\\\": 1, \\\"qtext\\\": null, \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"DESC\\\", \\\"database\\\": \\\"final\\\"}\")\n+\t\tpostJson(GET_TRIPLES_URL, \"{\\\"page\\\": 1, \\\"qtext\\\": null, \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"most-connected\\\",  \\\"dedup\\\": \\\"on\\\", \\\"database\\\": \\\"final\\\"}\")\n \t\t\t.andDo(\n \t\t\t\tresult -> {\n \t\t\t\t\tassertEquals(\"application/json;charset=UTF-8\", result.getResponse().getHeader(\"Content-Type\"));\n@@ -59,22 +59,22 @@ void getTriples() throws Exception {\n \t\t\t\t})\n \t\t\t.andExpect(status().isOk());\n \n-\t\tpostJson(GET_TRIPLES_URL, \"{\\\"page\\\": 1, \\\"qtext\\\": \\\"Department\\\", \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"DESC\\\", \\\"database\\\": \\\"final\\\"}\")\n+\t\tpostJson(GET_TRIPLES_URL, \"{\\\"page\\\": 1, \\\"qtext\\\": \\\"Department\\\", \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"most-connected\\\", \\\"dedup\\\": \\\"on\\\", \\\"database\\\": \\\"final\\\"}\")\n \t\t\t.andDo(\n \t\t\t\tresult -> {\n \t\t\t\t\tassertEquals(\"application/json;charset=UTF-8\", result.getResponse().getHeader(\"Content-Type\"));\n \t\t\t\t\tJsonNode response = readJsonObject(result.getResponse().getContentAsString());\n-\t\t\t\t\tassertEquals(35, response.get(\"total\").asInt());\n+\t\t\t\t\tassertEquals(67, response.get(\"total\").asInt());\n \t\t\t\t\tassertEquals(1, response.get(\"page\").asInt());\n \t\t\t\t})\n \t\t\t.andExpect(status().isOk());\n \n-\t\tpostJson(GET_TRIPLES_URL, \"{\\\"page\\\": 2, \\\"qtext\\\": \\\"Department\\\", \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"DESC\\\", \\\"database\\\": \\\"final\\\"}\")\n+\t\tpostJson(GET_TRIPLES_URL, \"{\\\"page\\\": 2, \\\"qtext\\\": \\\"Department\\\", \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"most-connected\\\", \\\"dedup\\\": \\\"on\\\", \\\"database\\\": \\\"final\\\"}\")\n \t\t\t.andDo(\n \t\t\t\tresult -> {\n \t\t\t\t\tassertEquals(\"application/json;charset=UTF-8\", result.getResponse().getHeader(\"Content-Type\"));\n \t\t\t\t\tJsonNode response = readJsonObject(result.getResponse().getContentAsString());\n-\t\t\t\t\tassertEquals(35, response.get(\"total\").asInt());\n+\t\t\t\t\tassertEquals(67, response.get(\"total\").asInt());\n \t\t\t\t\tassertEquals(2, response.get(\"page\").asInt());\n \t\t\t\t})\n \t\t\t.andExpect(status().isOk());\n@@ -87,7 +87,7 @@ void getTriples() throws Exception {\n //\n //\t\tlogin();\n //\n-//\t\tpostJson(GET_RELATED_TRIPLES_URL, \"{\\\"page\\\": 1, \\\"qtext\\\": null, \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"DESC\\\", \\\"database\\\": \\\"final\\\"}\")\n+//\t\tpostJson(GET_RELATED_TRIPLES_URL, \"{\\\"page\\\": 1, \\\"qtext\\\": null, \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"most-connected\\\", \\\"dedup\\\": \\\"on\\\", \\\"database\\\": \\\"final\\\"}\")\n //\t\t\t.andDo(\n //\t\t\t\tresult -> {\n //\t\t\t\t\tassertEquals(\"application/json;charset=UTF-8\", result.getResponse().getHeader(\"Content-Type\"));\n@@ -100,7 +100,7 @@ void getTriples() throws Exception {\n //\t\tHubClient hubClient = getNonAdminHubClient();\n //\t\tmodelService.saveModel(hubClient, getResourceStream(\"models/model.json\"));\n //\n-//\t\tpostJson(GET_TRIPLES_URL, \"{\\\"page\\\": 1, \\\"qtext\\\": null, \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"DESC\\\", \\\"database\\\": \\\"final\\\"}\")\n+//\t\tpostJson(GET_TRIPLES_URL, \"{\\\"page\\\": 1, \\\"qtext\\\": null, \\\"subjectsPerPage\\\": 1, \\\"linksPerSubject\\\": 1, \\\"sort\\\": \\\"most-connected\\\", \\\"dedup\\\": \\\"on\\\", \\\"database\\\": \\\"final\\\"}\")\n //\t\t\t.andDo(\n //\t\t\t\tresult -> {\n //\t\t\t\t\tassertEquals(\"application/json;charset=UTF-8\", result.getResponse().getHeader(\"Content-Type\"));"
  },
  {
    "sha": "810a17b4352dc91fb74239f35c060b9bb6fd9fff",
    "filename": "middle-tier/src/test/resources/output/know/browseOutputNew.json",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/test/resources/output/know/browseOutputNew.json",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/middle-tier/src/test/resources/output/know/browseOutputNew.json",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/middle-tier/src/test/resources/output/know/browseOutputNew.json?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -0,0 +1,82 @@\n+{\n+\t\"page\": 1,\n+\t\"subjectsPerPage\": 10,\n+\t\"linksPerSubject\": 100,\n+\t\"nodes\": {\n+\t\t\"7c61b1a56eafe6035fdeae9c15856c81\": {\n+\t\t\t\"id\": \"7c61b1a56eafe6035fdeae9c15856c81\",\n+\t\t\t\"label\": \"ID-f27d7d86-1b...\",\n+\t\t\t\"title\": \"/Taxonomy/ID-f27d7d86-1b2f-4352-bd9c-73820ea0755c.json\",\n+\t\t\t\"orig\": \"/Taxonomy/ID-f27d7d86-1b2f-4352-bd9c-73820ea0755c.json\",\n+\t\t\t\"isIRI\": true,\n+\t\t\t\"predicates\": [\n+\t\t\t\t\"http://agriculture.gov.au/Taxonomy/hasCommonName\"\n+\t\t\t]\n+\t\t},\n+\t\t\"dceab5333a5f2d578ab8faf9252fec4c\": {\n+\t\t\t\"id\": \"dceab5333a5f2d578ab8faf9252fec4c\",\n+\t\t\t\"label\": \"Wilt\",\n+\t\t\t\"title\": \"Wilt\",\n+\t\t\t\"orig\": \"Wilt\",\n+\t\t\t\"isIRI\": true,\n+\t\t\t\"predicates\": []\n+\t\t},\n+\t\t\"39d59d9a830bdd617456785c7aae7051\": {\n+\t\t\t\"id\": \"39d59d9a830bdd617456785c7aae7051\",\n+\t\t\t\"label\": \"doc.json\",\n+\t\t\t\"title\": \"/doc.json\",\n+\t\t\t\"orig\": \"/doc.json\",\n+\t\t\t\"isIRI\": true,\n+\t\t\t\"predicates\": [\n+\t\t\t\t\"http://unittest.com/isCool\",\n+\t\t\t\t\"http://unittest.com/shouldBeThere\"\n+\t\t\t]\n+\t\t},\n+\t\t\"ea77c15e3daf849dbd96a5ce0907b9f0\": {\n+\t\t\t\"id\": \"ea77c15e3daf849dbd96a5ce0907b9f0\",\n+\t\t\t\"label\": \"ID-f27d7d86-1b...\",\n+\t\t\t\"title\": \"ID-f27d7d86-1b2f-4352-bd9c-73820ea0755c\",\n+\t\t\t\"orig\": \"ID-f27d7d86-1b2f-4352-bd9c-73820ea0755c\",\n+\t\t\t\"isIRI\": true,\n+\t\t\t\"predicates\": []\n+\t\t},\n+\t\t\"419107f1667df41b85d4eef9455ae41a\": {\n+\t\t\t\"id\": \"419107f1667df41b85d4eef9455ae41a\",\n+\t\t\t\"label\": \"anywhere\",\n+\t\t\t\"title\": \"anywhere\",\n+\t\t\t\"orig\": \"anywhere\",\n+\t\t\t\"isIRI\": true,\n+\t\t\t\"predicates\": []\n+\t\t}\n+\t},\n+\t\"edges\": {\n+\t\t\"4850608565c9348360380178cb0a7e5b\": {\n+\t\t\t\"id\": \"4850608565c9348360380178cb0a7e5b\",\n+\t\t\t\"label\": \"hasCommonName\",\n+\t\t\t\"title\": \"http://agriculture.gov.au/Taxonomy/hasCommonName\",\n+\t\t\t\"from\": \"7c61b1a56eafe6035fdeae9c15856c81\",\n+\t\t\t\"to\": \"dceab5333a5f2d578ab8faf9252fec4c\",\n+\t\t\t\"orig\": \"http://agriculture.gov.au/Taxonomy/hasCommonName\",\n+\t\t\t\"isIRI\": true\n+\t\t},\n+\t\t\"281895cc24e402c7e037343fcdd7a86f\": {\n+\t\t\t\"id\": \"281895cc24e402c7e037343fcdd7a86f\",\n+\t\t\t\"label\": \"isCool\",\n+\t\t\t\"title\": \"http://unittest.com/isCool\",\n+\t\t\t\"from\": \"39d59d9a830bdd617456785c7aae7051\",\n+\t\t\t\"to\": \"ea77c15e3daf849dbd96a5ce0907b9f0\",\n+\t\t\t\"orig\": \"http://unittest.com/isCool\",\n+\t\t\t\"isIRI\": true\n+\t\t},\n+\t\t\"d5c84f05ad0009ffa73d200172b98086\": {\n+\t\t\t\"id\": \"d5c84f05ad0009ffa73d200172b98086\",\n+\t\t\t\"label\": \"shouldBeThere\",\n+\t\t\t\"title\": \"http://unittest.com/shouldBeThere\",\n+\t\t\t\"from\": \"39d59d9a830bdd617456785c7aae7051\",\n+\t\t\t\"to\": \"419107f1667df41b85d4eef9455ae41a\",\n+\t\t\t\"orig\": \"http://unittest.com/shouldBeThere\",\n+\t\t\t\"isIRI\": true\n+\t\t}\n+\t},\n+\t\"total\": 3\n+}"
  },
  {
    "sha": "3e3a07f2d77420a2b240aa52ce4c0b923655d5b8",
    "filename": "ui/package-lock.json",
    "status": "modified",
    "additions": 81,
    "deletions": 62,
    "changes": 143,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/ui/package-lock.json",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/ui/package-lock.json",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/ui/package-lock.json?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -3710,16 +3710,6 @@\n           \"integrity\": \"sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA==\",\n           \"dev\": true\n         },\n-        \"ansi-styles\": {\n-          \"version\": \"4.3.0\",\n-          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n-          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n-          \"dev\": true,\n-          \"optional\": true,\n-          \"requires\": {\n-            \"color-convert\": \"^2.0.1\"\n-          }\n-        },\n         \"cacache\": {\n           \"version\": \"13.0.1\",\n           \"resolved\": \"https://registry.npmjs.org/cacache/-/cacache-13.0.1.tgz\",\n@@ -3746,34 +3736,6 @@\n             \"unique-filename\": \"^1.1.1\"\n           }\n         },\n-        \"chalk\": {\n-          \"version\": \"4.1.0\",\n-          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.0.tgz\",\n-          \"integrity\": \"sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==\",\n-          \"dev\": true,\n-          \"optional\": true,\n-          \"requires\": {\n-            \"ansi-styles\": \"^4.1.0\",\n-            \"supports-color\": \"^7.1.0\"\n-          }\n-        },\n-        \"color-convert\": {\n-          \"version\": \"2.0.1\",\n-          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n-          \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n-          \"dev\": true,\n-          \"optional\": true,\n-          \"requires\": {\n-            \"color-name\": \"~1.1.4\"\n-          }\n-        },\n-        \"color-name\": {\n-          \"version\": \"1.1.4\",\n-          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n-          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n-          \"dev\": true,\n-          \"optional\": true\n-        },\n         \"debug\": {\n           \"version\": \"4.3.1\",\n           \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.1.tgz\",\n@@ -3820,18 +3782,6 @@\n             \"supports-color\": \"^7.0.0\"\n           }\n         },\n-        \"loader-utils\": {\n-          \"version\": \"2.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/loader-utils/-/loader-utils-2.0.0.tgz\",\n-          \"integrity\": \"sha512-rP4F0h2RaWSvPEkD7BLDFQnvSf+nK+wr3ESUjNTyAGobqrijmW92zc+SO6d4p4B1wh7+B/Jg1mkQe5NYUEHtHQ==\",\n-          \"dev\": true,\n-          \"optional\": true,\n-          \"requires\": {\n-            \"big.js\": \"^5.2.2\",\n-            \"emojis-list\": \"^3.0.0\",\n-            \"json5\": \"^2.1.2\"\n-          }\n-        },\n         \"locate-path\": {\n           \"version\": \"5.0.0\",\n           \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n@@ -3945,18 +3895,6 @@\n             \"terser\": \"^4.6.12\",\n             \"webpack-sources\": \"^1.4.3\"\n           }\n-        },\n-        \"vue-loader-v16\": {\n-          \"version\": \"npm:vue-loader@16.1.2\",\n-          \"resolved\": \"https://registry.npmjs.org/vue-loader/-/vue-loader-16.1.2.tgz\",\n-          \"integrity\": \"sha512-8QTxh+Fd+HB6fiL52iEVLKqE9N1JSlMXLR92Ijm6g8PZrwIxckgpqjPDWRP5TWxdiPaHR+alUWsnu1ShQOwt+Q==\",\n-          \"dev\": true,\n-          \"optional\": true,\n-          \"requires\": {\n-            \"chalk\": \"^4.1.0\",\n-            \"hash-sum\": \"^2.0.0\",\n-            \"loader-utils\": \"^2.0.0\"\n-          }\n         }\n       }\n     },\n@@ -21616,6 +21554,87 @@\n         }\n       }\n     },\n+    \"vue-loader-v16\": {\n+      \"version\": \"npm:vue-loader@16.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/vue-loader/-/vue-loader-16.1.2.tgz\",\n+      \"integrity\": \"sha512-8QTxh+Fd+HB6fiL52iEVLKqE9N1JSlMXLR92Ijm6g8PZrwIxckgpqjPDWRP5TWxdiPaHR+alUWsnu1ShQOwt+Q==\",\n+      \"dev\": true,\n+      \"optional\": true,\n+      \"requires\": {\n+        \"chalk\": \"^4.1.0\",\n+        \"hash-sum\": \"^2.0.0\",\n+        \"loader-utils\": \"^2.0.0\"\n+      },\n+      \"dependencies\": {\n+        \"ansi-styles\": {\n+          \"version\": \"4.3.0\",\n+          \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n+          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n+          \"dev\": true,\n+          \"optional\": true,\n+          \"requires\": {\n+            \"color-convert\": \"^2.0.1\"\n+          }\n+        },\n+        \"chalk\": {\n+          \"version\": \"4.1.0\",\n+          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.0.tgz\",\n+          \"integrity\": \"sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==\",\n+          \"dev\": true,\n+          \"optional\": true,\n+          \"requires\": {\n+            \"ansi-styles\": \"^4.1.0\",\n+            \"supports-color\": \"^7.1.0\"\n+          }\n+        },\n+        \"color-convert\": {\n+          \"version\": \"2.0.1\",\n+          \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n+          \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n+          \"dev\": true,\n+          \"optional\": true,\n+          \"requires\": {\n+            \"color-name\": \"~1.1.4\"\n+          }\n+        },\n+        \"color-name\": {\n+          \"version\": \"1.1.4\",\n+          \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n+          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n+          \"dev\": true,\n+          \"optional\": true\n+        },\n+        \"has-flag\": {\n+          \"version\": \"4.0.0\",\n+          \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n+          \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n+          \"dev\": true,\n+          \"optional\": true\n+        },\n+        \"loader-utils\": {\n+          \"version\": \"2.0.0\",\n+          \"resolved\": \"https://registry.npmjs.org/loader-utils/-/loader-utils-2.0.0.tgz\",\n+          \"integrity\": \"sha512-rP4F0h2RaWSvPEkD7BLDFQnvSf+nK+wr3ESUjNTyAGobqrijmW92zc+SO6d4p4B1wh7+B/Jg1mkQe5NYUEHtHQ==\",\n+          \"dev\": true,\n+          \"optional\": true,\n+          \"requires\": {\n+            \"big.js\": \"^5.2.2\",\n+            \"emojis-list\": \"^3.0.0\",\n+            \"json5\": \"^2.1.2\"\n+          }\n+        },\n+        \"supports-color\": {\n+          \"version\": \"7.2.0\",\n+          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n+          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n+          \"dev\": true,\n+          \"optional\": true,\n+          \"requires\": {\n+            \"has-flag\": \"^4.0.0\"\n+          }\n+        }\n+      }\n+    },\n     \"vue-moment\": {\n       \"version\": \"4.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/vue-moment/-/vue-moment-4.1.0.tgz\","
  },
  {
    "sha": "0ee5810195b771624443b8977a8bcbc43c70a5d0",
    "filename": "ui/src/api/TriplesApi.js",
    "status": "modified",
    "additions": 10,
    "deletions": 8,
    "changes": 18,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/ui/src/api/TriplesApi.js",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/ui/src/api/TriplesApi.js",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/ui/src/api/TriplesApi.js?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -6,7 +6,7 @@ export default {\n \n \tcancelTriples: null,\n \tcancelRelated: null,\n-\tgetTriples(qtext, page, subjectsPerPage, linksPerSubject, database, sort) {\n+\tgetTriples(qtext, page, subjectsPerPage, linksPerSubject, database, sort, dedup) {\n \t\tqtext = qtext !== undefined ? qtext : ''\n \n \t\tif (this.cancelTriples) {\n@@ -20,8 +20,9 @@ export default {\n \t\t\t\tpage: page,\n \t\t\t\tsubjectsPerPage: subjectsPerPage,\n \t\t\t\tlinksPerSubject: linksPerSubject,\n-                database: database,\n-                sort: sort\n+\t\t\t\tdatabase: database,\n+\t\t\t\tsort: sort,\n+\t\t\t\tdedup: dedup\n \t\t\t},\n \t\t\t{\n \t\t\t\tcancelToken: new CancelToken(c => this.cancelTriples = c)\n@@ -36,21 +37,22 @@ export default {\n \t\t\treturn error\n \t\t})\n     },\n-    getRelated(item, itemId, isIRI, database, maxRelated, qtext, predicate) {\n+    getRelated(item, itemId, isIRI, database, maxRelated, qtext, predicate, filterText) {\n         if (this.cancelRelated) {\n \t\t\tthis.cancelRelated()\n         }\n-        \n+\n \t\treturn axios.post(\n \t\t\t'/api/triples/related',\n \t\t\t{\n-                item: item,\n-                itemId: itemId,\n+\t\t\t\titem: item,\n+\t\t\t\titemId: itemId,\n \t\t\t\tisIRI: isIRI,\n \t\t\t\tmaxRelated: maxRelated,\n \t\t\t\tdatabase: database,\n \t\t\t\tqtext: qtext,\n-\t\t\t\tpredicate: predicate\n+\t\t\t\tpredicate: predicate,\n+\t\t\t\tfilterText: filterText\n \t\t\t},\n \t\t\t{\n \t\t\t\tcancelToken: new CancelToken(c => this.cancelRelated = c)"
  },
  {
    "sha": "39211dae2522703423153131b90be68a4c4ce4ae",
    "filename": "ui/src/store.js",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/ui/src/store.js",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/ui/src/store.js",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/ui/src/store.js?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -547,18 +547,18 @@ const triples = {\n \t\t}\n \t},\n \tactions: {\n-\t\tbrowse({ commit, state }, { database, sort }) {\n+\t\tbrowse({ commit, state }, { database, sort, dedup }) {\n \t\t\treturn triplesApi\n-\t\t\t\t.getTriples(state.qtext, state.page, state.subjectsPerPage, state.linksPerSubject, database, sort)\n+\t\t\t\t.getTriples(state.qtext, state.page, state.subjectsPerPage, state.linksPerSubject, database, sort, dedup)\n \t\t\t\t.then(response => {\n \t\t\t\t\tif (response) {\n \t\t\t\t\t\tcommit('setDocs', response)\n \t\t\t\t\t}\n \t\t\t\t});\n \t\t},\n-\t\tgetRelated({ commit, state }, { item, itemId, isIRI, database, predicate }) {\n+\t\tgetRelated({ commit, state }, { item, itemId, isIRI, database, predicate, filterText}) {\n \t\t\treturn triplesApi\n-\t\t\t\t.getRelated(item, itemId, isIRI, database, state.maxRelated, state.qtext, predicate)\n+\t\t\t\t.getRelated(item, itemId, isIRI, database, state.maxRelated, state.qtext, predicate, filterText)\n \t\t\t\t.then(response => {\n \t\t\t\t\tif (response) {\n \t\t\t\t\t\tcommit('addDocs', response)"
  },
  {
    "sha": "91d3880b0bb64669fbae3cd717d43b542d1be015",
    "filename": "ui/src/views/KnowPage.vue",
    "status": "modified",
    "additions": 43,
    "deletions": 6,
    "changes": 49,
    "blob_url": "https://github.com/marklogic-community/data-hub-central-community/blob/1d6ace23a5f36ea664719a042d363b950a6b1d05/ui/src/views/KnowPage.vue",
    "raw_url": "https://github.com/marklogic-community/data-hub-central-community/raw/1d6ace23a5f36ea664719a042d363b950a6b1d05/ui/src/views/KnowPage.vue",
    "contents_url": "https://api.github.com/repos/marklogic-community/data-hub-central-community/contents/ui/src/views/KnowPage.vue?ref=1d6ace23a5f36ea664719a042d363b950a6b1d05",
    "patch": "@@ -78,6 +78,14 @@\n \t\t\t\t\t\t\tlabel=\"Sort\"\n \t\t\t\t\t\t\tv-model=\"currentSort\"\n \t\t\t\t\t\t\trequired\n+\t\t\t\t\t\t></v-select>\n+\t\t\t\t\t\t\t<v-select\n+\t\t\t\t\t\t\t:items=\"dedup\"\n+\t\t\t\t\t\t\titem-text=\"label\"\n+\t\t\t\t\t\t\titem-value=\"value\"\n+\t\t\t\t\t\t\tlabel=\"Deduplicate Triples\"\n+\t\t\t\t\t\t\tv-model=\"currentDedup\"\n+\t\t\t\t\t\t\trequired\n \t\t\t\t\t\t></v-select>\n \t\t\t\t\t\t<div class=\"trip-view\" v-if=\"currentTriple\">\n \t\t\t\t\t\t\t<div v-if=\"currentTriple.s\">{{currentTriple.s.orig}}</div>\n@@ -194,13 +202,27 @@ export default {\n \t\t\t\t}\n \t\t\t],\n \t\t\tsorts: [\n+\t\t\t\t{\n+\t\t\t\t\tlabel: 'Default',\n+\t\t\t\t\tvalue: 'default'\n+\t\t\t\t},\n \t\t\t\t{\n \t\t\t\t\tlabel: 'Least Connected First',\n-\t\t\t\t\tvalue: 'ASC'\n+\t\t\t\t\tvalue: 'least-connected'\n \t\t\t\t},\n \t\t\t\t{\n \t\t\t\t\tlabel: 'Most Connected First',\n-\t\t\t\t\tvalue: 'DESC'\n+\t\t\t\t\tvalue: 'most-connected'\n+\t\t\t\t}\n+\t\t\t],\n+\t\t\tdedup: [\n+\t\t\t\t{\n+\t\t\t\t\tlabel: 'On',\n+\t\t\t\t\tvalue: 'on'\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\tlabel: 'Off',\n+\t\t\t\t\tvalue: 'off'\n \t\t\t\t}\n \t\t\t],\n \t\t\trightClickMenu: null,\n@@ -210,7 +232,8 @@ export default {\n \t\t\ttitle: 'Explore',\n \t\t\tcolors: {},\n \t\t\tcurrentDatabase: 'final',\n-\t\t\tcurrentSort: 'DESC',\n+\t\t\tcurrentSort: 'default',\n+\t\t\tcurrentDedup: 'off',\n \t\t\tqtext: '',\n \t\t\tgraphOptions: {\n \t\t\t\tautoResize: false,\n@@ -314,6 +337,9 @@ export default {\n \t\t},\n \t\tcurrentSort() {\n \t\t\tthis.getTriples()\n+\t\t},\n+\t\tcurrentDedup() {\n+\t\t\tthis.getTriples()\n \t\t}\n \t},\n \tmounted: function() {\n@@ -353,7 +379,8 @@ export default {\n \t\t\tthis.$store\n \t\t\t\t.dispatch('triples/browse', {\n \t\t\t\t\tdatabase: this.currentDatabase,\n-\t\t\t\t\tsort: this.currentSort\n+\t\t\t\t\tsort: this.currentSort,\n+\t\t\t\t\tdedup: this.currentDedup\n \t\t\t\t})\n \t\t\t\t.then(() => {\n \t\t\t\t\tthis.searchPending = false;\n@@ -426,18 +453,27 @@ export default {\n \t\t\t\t\t\t\t\tpredicate: p\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t})\n+\n+\t\t\t\t\t\tpredicates.unshift( {\n+\t\t\t\t\t\t\tlabel: 'All (Search-Filtered)',\n+\t\t\t\t\t\t\tfilterText: true,\n+\t\t\t\t\t\t\taction: 'expand',\n+\t\t\t\t\t\t\tnode: node\n+\t\t\t\t\t\t})\n+\n \t\t\t\t\t\tpredicates.unshift( {\n \t\t\t\t\t\t\tlabel: 'All',\n+\t\t\t\t\t\t\tfilterText: false,\n \t\t\t\t\t\t\taction: 'expand',\n \t\t\t\t\t\t\tnode: node\n \t\t\t\t\t\t})\n \t\t\t\t\t}\n \n-\n \t\t\t\t\tthis.rightClickItems = [\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tlabel: 'Get Related',\n \t\t\t\t\t\t\taction: 'expand',\n+\t\t\t\t\t\t\tfilterText: false,\n \t\t\t\t\t\t\tnode: node,\n \t\t\t\t\t\t\tsubmenu: predicates\n \t\t\t\t\t\t},\n@@ -476,7 +512,8 @@ export default {\n \t\t\t\t\titemId: rel.node.id,\n \t\t\t\t\tisIRI: rel.node.isIRI,\n \t\t\t\t\tdatabase: this.currentDatabase,\n-\t\t\t\t\tpredicate: rel.predicate || null\n+\t\t\t\t\tpredicate: rel.predicate || null,\n+\t\t\t\t\tfilterText: rel.filterText\n \t\t\t\t})\n \t\t}\n \t}"
  }
]
