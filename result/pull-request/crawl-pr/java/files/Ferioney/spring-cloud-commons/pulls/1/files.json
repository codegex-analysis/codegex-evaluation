[
  {
    "sha": "5f089c11f4e303fbde5b1b23dfdfbeb77eb533fc",
    "filename": "spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/CaffeineBasedLoadBalancerCacheManager.java",
    "status": "modified",
    "additions": 36,
    "deletions": 10,
    "changes": 46,
    "blob_url": "https://github.com/Ferioney/spring-cloud-commons/blob/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/CaffeineBasedLoadBalancerCacheManager.java",
    "raw_url": "https://github.com/Ferioney/spring-cloud-commons/raw/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/CaffeineBasedLoadBalancerCacheManager.java",
    "contents_url": "https://api.github.com/repos/Ferioney/spring-cloud-commons/contents/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/CaffeineBasedLoadBalancerCacheManager.java?ref=18eb95102abfb7b2a64d70a14aa9f90157224de3",
    "patch": "@@ -18,9 +18,15 @@\n \n import com.github.benmanes.caffeine.cache.Caffeine;\n \n+import org.springframework.cache.Cache;\n+import org.springframework.cache.caffeine.CaffeineCache;\n import org.springframework.cache.caffeine.CaffeineCacheManager;\n import org.springframework.util.StringUtils;\n \n+import java.util.Collection;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n import static org.springframework.cloud.loadbalancer.core.CachingServiceInstanceListSupplier.SERVICE_INSTANCE_CACHE_NAME;\n \n /**\n@@ -30,25 +36,45 @@\n  * @author Olga Maciaszek-Sharma\n  * @since 2.2.0\n  * @see <a href=\"https://github.com/ben-manes/caffeine>Caffeine</a>\n- * @see CaffeineCacheManager\n  * @see Caffeine\n  */\n-public class CaffeineBasedLoadBalancerCacheManager extends CaffeineCacheManager implements LoadBalancerCacheManager {\n+public class CaffeineBasedLoadBalancerCacheManager implements LoadBalancerCacheManager {\n+\n+\tprivate final ConcurrentMap<String, Cache> cacheMap = new ConcurrentHashMap<>(16);\n \n \tpublic CaffeineBasedLoadBalancerCacheManager(String cacheName, LoadBalancerCacheProperties properties) {\n-\t\tsuper(cacheName);\n-\t\tif (!StringUtils.isEmpty(properties.getCaffeine().getSpec())) {\n-\t\t\tsetCacheSpecification(properties.getCaffeine().getSpec());\n-\t\t}\n-\t\telse {\n-\t\t\tsetCaffeine(Caffeine.newBuilder().initialCapacity(properties.getCapacity())\n-\t\t\t\t\t.expireAfterWrite(properties.getTtl()).softValues());\n-\t\t}\n+\t\tproperties.getInstances().forEach((serviceId, serviceProperties) -> {\n+\t\t\tif (!StringUtils.isEmpty(serviceProperties.getCaffeine().getSpec())) {\n+\t\t\t\tcacheMap.put(serviceId, new CaffeineCache(serviceId, Caffeine.from(serviceProperties.getCaffeine().getSpec())\n+\t\t\t\t\t\t.softValues()\n+\t\t\t\t\t\t.build()));\n+\t\t\t} else {\n+\t\t\t\tcacheMap.put(serviceId, new CaffeineCache(serviceId, Caffeine.newBuilder()\n+\t\t\t\t\t\t.initialCapacity(serviceProperties.getCapacity())\n+\t\t\t\t\t\t.expireAfterWrite(serviceProperties.getTtl())\n+\t\t\t\t\t\t.softValues()\n+\t\t\t\t\t\t.build()));\n+\t\t\t}\n+\t\t});\n \n+\t\tcacheMap.put(cacheName, new CaffeineCache(cacheName, Caffeine.newBuilder()\n+\t\t\t\t.initialCapacity(properties.getCapacity())\n+\t\t\t\t.expireAfterWrite(properties.getTtl())\n+\t\t\t\t.softValues()\n+\t\t\t\t.build()));\n \t}\n \n \tpublic CaffeineBasedLoadBalancerCacheManager(LoadBalancerCacheProperties properties) {\n \t\tthis(SERVICE_INSTANCE_CACHE_NAME, properties);\n \t}\n \n+\t@Override\n+\tpublic Cache getCache(String s) {\n+\t\treturn cacheMap.get(s);\n+\t}\n+\n+\t@Override\n+\tpublic Collection<String> getCacheNames() {\n+\t\treturn cacheMap.keySet();\n+\t}\n }"
  },
  {
    "sha": "faffd853c06f6a7bb6c710bd9b1a1d76aba1d266",
    "filename": "spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/DefaultLoadBalancerCacheManager.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Ferioney/spring-cloud-commons/blob/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/DefaultLoadBalancerCacheManager.java",
    "raw_url": "https://github.com/Ferioney/spring-cloud-commons/raw/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/DefaultLoadBalancerCacheManager.java",
    "contents_url": "https://api.github.com/repos/Ferioney/spring-cloud-commons/contents/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/DefaultLoadBalancerCacheManager.java?ref=18eb95102abfb7b2a64d70a14aa9f90157224de3",
    "patch": "@@ -19,6 +19,7 @@\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n@@ -59,6 +60,17 @@ public DefaultLoadBalancerCacheManager(LoadBalancerCacheProperties loadBalancerC\n \n \tpublic DefaultLoadBalancerCacheManager(LoadBalancerCacheProperties loadBalancerCacheProperties) {\n \t\tthis(loadBalancerCacheProperties, SERVICE_INSTANCE_CACHE_NAME);\n+\t\tcacheMap.putAll(createInstanceCaches(loadBalancerCacheProperties.getInstances()).stream()\n+\t\t\t\t.collect(Collectors.toMap(DefaultLoadBalancerCache::getName, cache -> cache)));\n+\t}\n+\n+\tprivate Set<DefaultLoadBalancerCache> createInstanceCaches(Map<String, LoadBalancerCacheProperties> instances) {\n+\t\treturn instances.keySet().stream()\n+\t\t\t\t.map(serviceName -> new DefaultLoadBalancerCache(serviceName,\n+\t\t\t\t\t\tnew ConcurrentHashMapWithTimedEviction<>(instances.get(serviceName).getCapacity(),\n+\t\t\t\t\t\t\t\tnew DelayedTaskEvictionScheduler<>(aScheduledDaemonThreadExecutor())),\n+\t\t\t\t\t\tinstances.get(serviceName).getTtl().toMillis(), false))\n+\t\t\t\t.collect(Collectors.toSet());\n \t}\n \n \tprivate Set<DefaultLoadBalancerCache> createCaches(String[] cacheNames,"
  },
  {
    "sha": "cb3ee0b9cd2b43689cc6b03f30e8fd0a98190941",
    "filename": "spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/LoadBalancerCacheProperties.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Ferioney/spring-cloud-commons/blob/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/LoadBalancerCacheProperties.java",
    "raw_url": "https://github.com/Ferioney/spring-cloud-commons/raw/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/LoadBalancerCacheProperties.java",
    "contents_url": "https://api.github.com/repos/Ferioney/spring-cloud-commons/contents/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/cache/LoadBalancerCacheProperties.java?ref=18eb95102abfb7b2a64d70a14aa9f90157224de3",
    "patch": "@@ -17,6 +17,8 @@\n package org.springframework.cloud.loadbalancer.cache;\n \n import java.time.Duration;\n+import java.util.HashMap;\n+import java.util.Map;\n \n import org.springframework.boot.context.properties.ConfigurationProperties;\n \n@@ -29,6 +31,16 @@\n @ConfigurationProperties(\"spring.cloud.loadbalancer.cache\")\n public class LoadBalancerCacheProperties {\n \n+\tprivate Map<String, LoadBalancerCacheProperties> instances = new HashMap<>();\n+\n+\tpublic Map<String, LoadBalancerCacheProperties> getInstances() {\n+\t\treturn instances;\n+\t}\n+\n+\tpublic void setInstances(Map<String, LoadBalancerCacheProperties> instances) {\n+\t\tthis.instances = instances;\n+\t}\n+\n \tprivate Caffeine caffeine = new Caffeine();\n \n \t/**"
  },
  {
    "sha": "0b8d6e9d9ade64a939ae2cb1df09075f4dca3f05",
    "filename": "spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/core/CachingServiceInstanceListSupplier.java",
    "status": "modified",
    "additions": 7,
    "deletions": 3,
    "changes": 10,
    "blob_url": "https://github.com/Ferioney/spring-cloud-commons/blob/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/core/CachingServiceInstanceListSupplier.java",
    "raw_url": "https://github.com/Ferioney/spring-cloud-commons/raw/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/core/CachingServiceInstanceListSupplier.java",
    "contents_url": "https://api.github.com/repos/Ferioney/spring-cloud-commons/contents/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/core/CachingServiceInstanceListSupplier.java?ref=18eb95102abfb7b2a64d70a14aa9f90157224de3",
    "patch": "@@ -53,8 +53,10 @@\n \tpublic CachingServiceInstanceListSupplier(ServiceInstanceListSupplier delegate, CacheManager cacheManager) {\n \t\tsuper(delegate);\n \t\tthis.serviceInstances = CacheFlux.lookup(key -> {\n-\t\t\t// TODO: configurable cache name\n-\t\t\tCache cache = cacheManager.getCache(SERVICE_INSTANCE_CACHE_NAME);\n+\t\t\tCache cache = cacheManager.getCache(delegate.getServiceId()) != null\n+\t\t\t\t\t? cacheManager.getCache(delegate.getServiceId())\n+\t\t\t\t\t: cacheManager.getCache(SERVICE_INSTANCE_CACHE_NAME);\n+\n \t\t\tif (cache == null) {\n \t\t\t\tif (log.isErrorEnabled()) {\n \t\t\t\t\tlog.error(\"Unable to find cache: \" + SERVICE_INSTANCE_CACHE_NAME);\n@@ -68,7 +70,9 @@ public CachingServiceInstanceListSupplier(ServiceInstanceListSupplier delegate,\n \t\t\treturn Flux.just(list).materialize().collectList();\n \t\t}, delegate.getServiceId()).onCacheMissResume(delegate.get().take(1))\n \t\t\t\t.andWriteWith((key, signals) -> Flux.fromIterable(signals).dematerialize().doOnNext(instances -> {\n-\t\t\t\t\tCache cache = cacheManager.getCache(SERVICE_INSTANCE_CACHE_NAME);\n+\t\t\t\t\tCache cache = cacheManager.getCache(delegate.getServiceId()) != null\n+\t\t\t\t\t\t\t? cacheManager.getCache(delegate.getServiceId())\n+\t\t\t\t\t\t\t: cacheManager.getCache(SERVICE_INSTANCE_CACHE_NAME);\n \t\t\t\t\tif (cache == null) {\n \t\t\t\t\t\tif (log.isErrorEnabled()) {\n \t\t\t\t\t\t\tlog.error(\"Unable to find cache for writing: \" + SERVICE_INSTANCE_CACHE_NAME);"
  },
  {
    "sha": "c96ddac731184ab2d335be0d73498a14f761578f",
    "filename": "spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/cache/CaffeineBasedLoadBalancerCacheManagerTest.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/Ferioney/spring-cloud-commons/blob/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/cache/CaffeineBasedLoadBalancerCacheManagerTest.java",
    "raw_url": "https://github.com/Ferioney/spring-cloud-commons/raw/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/cache/CaffeineBasedLoadBalancerCacheManagerTest.java",
    "contents_url": "https://api.github.com/repos/Ferioney/spring-cloud-commons/contents/spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/cache/CaffeineBasedLoadBalancerCacheManagerTest.java?ref=18eb95102abfb7b2a64d70a14aa9f90157224de3",
    "patch": "@@ -0,0 +1,25 @@\n+package org.springframework.cloud.loadbalancer.cache;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.springframework.cloud.loadbalancer.core.CachingServiceInstanceListSupplier.SERVICE_INSTANCE_CACHE_NAME;\n+\n+public class CaffeineBasedLoadBalancerCacheManagerTest {\n+\n+\t@Test\n+\tvoid shouldCreateCaffeineCacheForMultipleServices() {\n+\t\tfinal LoadBalancerCacheProperties cacheProperties = new LoadBalancerCacheProperties();\n+\t\tfinal Map<String, LoadBalancerCacheProperties> instances = new HashMap<>();\n+\t\tinstances.put(\"testService\", new LoadBalancerCacheProperties());\n+\t\tcacheProperties.setInstances(instances);\n+\n+\t\tfinal LoadBalancerCacheManager cacheManager = new CaffeineBasedLoadBalancerCacheManager(cacheProperties);\n+\t\tassertThat(cacheManager.getCache(SERVICE_INSTANCE_CACHE_NAME)).isNotNull();\n+\t\tassertThat(cacheManager.getCache(\"testService\")).isNotNull();\n+\t\tassertThat(cacheManager.getCache(\"lostService\")).isNull();\n+\t}\n+}"
  },
  {
    "sha": "228f56dadbd5c3263611c623d7422f57851380bb",
    "filename": "spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/cache/DefaultLoadBalancerCacheManagerTests.java",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/Ferioney/spring-cloud-commons/blob/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/cache/DefaultLoadBalancerCacheManagerTests.java",
    "raw_url": "https://github.com/Ferioney/spring-cloud-commons/raw/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/cache/DefaultLoadBalancerCacheManagerTests.java",
    "contents_url": "https://api.github.com/repos/Ferioney/spring-cloud-commons/contents/spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/cache/DefaultLoadBalancerCacheManagerTests.java?ref=18eb95102abfb7b2a64d70a14aa9f90157224de3",
    "patch": "@@ -17,13 +17,16 @@\n package org.springframework.cloud.loadbalancer.cache;\n \n import java.time.Duration;\n+import java.util.HashMap;\n+import java.util.Map;\n \n import org.junit.jupiter.api.Test;\n \n import org.springframework.cache.CacheManager;\n \n import static org.assertj.core.api.Assertions.assertThat;\n import static org.assertj.core.api.Assertions.assertThatCode;\n+import static org.assertj.core.api.Assertions.in;\n import static org.springframework.cloud.loadbalancer.core.CachingServiceInstanceListSupplier.SERVICE_INSTANCE_CACHE_NAME;\n \n /**\n@@ -66,4 +69,18 @@ void shouldOnlyCreateOneCacheWithGivenName() {\n \t\tassertThat(cacheManager.getCache(\"test\")).isInstanceOf(DefaultLoadBalancerCache.class);\n \t}\n \n+\t@Test\n+\tvoid shouldCreateLoadBalancerCacheForMultipleServices() {\n+\t\tfinal LoadBalancerCacheProperties properties = new LoadBalancerCacheProperties();\n+\n+\t\tfinal Map<String, LoadBalancerCacheProperties> instances = new HashMap<>();\n+\t\tinstances.put(\"testService\", new LoadBalancerCacheProperties());\n+\t\tproperties.setInstances(instances);\n+\t\tfinal DefaultLoadBalancerCacheManager cacheManager = new DefaultLoadBalancerCacheManager(properties);\n+\n+\t\tassertThat(cacheManager.getCacheNames()).hasSize(2);\n+\t\tassertThat(cacheManager.getCache(SERVICE_INSTANCE_CACHE_NAME)).isNotNull();\n+\t\tassertThat(cacheManager.getCache(\"testService\")).isNotNull();\n+\t\tassertThat(cacheManager.getCache(\"lostService\")).isNull();\n+\t}\n }"
  },
  {
    "sha": "a19ed34be519ec6104a0838cb73dfb0df396318a",
    "filename": "spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfigurationTests.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/Ferioney/spring-cloud-commons/blob/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfigurationTests.java",
    "raw_url": "https://github.com/Ferioney/spring-cloud-commons/raw/18eb95102abfb7b2a64d70a14aa9f90157224de3/spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfigurationTests.java",
    "contents_url": "https://api.github.com/repos/Ferioney/spring-cloud-commons/contents/spring-cloud-loadbalancer/src/test/java/org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfigurationTests.java?ref=18eb95102abfb7b2a64d70a14aa9f90157224de3",
    "patch": "@@ -28,6 +28,7 @@\n import org.springframework.cache.caffeine.CaffeineCacheManager;\n import org.springframework.cache.concurrent.ConcurrentMapCacheManager;\n import org.springframework.cache.support.NoOpCacheManager;\n+import org.springframework.cloud.loadbalancer.cache.CaffeineBasedLoadBalancerCacheManager;\n import org.springframework.cloud.loadbalancer.cache.DefaultLoadBalancerCacheManager;\n import org.springframework.context.annotation.Configuration;\n \n@@ -48,7 +49,7 @@ void shouldAutoEnableCaching() {\n \t\tcontextRunner.run(context -> {\n \t\t\tassertThat(context.getBeansOfType(CacheManager.class)).hasSize(1);\n \t\t\tassertThat(((CacheManager) context.getBean(\"caffeineLoadBalancerCacheManager\")).getCacheNames()).hasSize(1);\n-\t\t\tassertThat(context.getBean(\"caffeineLoadBalancerCacheManager\")).isInstanceOf(CaffeineCacheManager.class);\n+\t\t\tassertThat(context.getBean(\"caffeineLoadBalancerCacheManager\")).isInstanceOf(CaffeineBasedLoadBalancerCacheManager.class);\n \t\t\tassertThat(((CacheManager) context.getBean(\"caffeineLoadBalancerCacheManager\")).getCacheNames())\n \t\t\t\t\t.contains(\"CachingServiceInstanceListSupplierCache\");\n \t\t});\n@@ -61,7 +62,7 @@ void caffeineLoadBalancerCacheShouldNotOverrideCacheTypeSetting() {\n \n \t\tcontextRunner.run(context -> {\n \t\t\tassertThat(context.getBeansOfType(CacheManager.class)).hasSize(2);\n-\t\t\tassertThat(context.getBean(\"caffeineLoadBalancerCacheManager\")).isInstanceOf(CaffeineCacheManager.class);\n+\t\t\tassertThat(context.getBean(\"caffeineLoadBalancerCacheManager\")).isInstanceOf(CaffeineBasedLoadBalancerCacheManager.class);\n \t\t\tassertThat(context.getBeansOfType(CacheManager.class).get(\"cacheManager\"))\n \t\t\t\t\t.isInstanceOf(NoOpCacheManager.class);\n "
  }
]
