[
  {
    "sha": "19d10db5f850c8b64d5133c5e37311acb1357cd5",
    "filename": "java/BasicTest.java",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/se2p/ps-wise-2021-public-tests/blob/fe18d6751677f169ea1a178efd0ce8e09daab9e7/java/BasicTest.java",
    "raw_url": "https://github.com/se2p/ps-wise-2021-public-tests/raw/fe18d6751677f169ea1a178efd0ce8e09daab9e7/java/BasicTest.java",
    "contents_url": "https://api.github.com/repos/se2p/ps-wise-2021-public-tests/contents/java/BasicTest.java?ref=fe18d6751677f169ea1a178efd0ce8e09daab9e7",
    "patch": "@@ -218,6 +218,22 @@ public void testNonRectangularConfiguration() throws Exception {\n                 exitCode);\n     }\n \n+    @Test(timeout = 3000)\n+    public void testMissingNewLineInLastLineOfConfiguration() throws Exception {\n+        final File boardCfgFile = tempFolder.newFile(\"simple.cfg\");\n+\n+        try (PrintWriter out = new PrintWriter(boardCfgFile)) {\n+            out.println(\"...\");\n+            out.print(\"..*\");\n+        }\n+\n+        Map<String, Object> result = MinesweeperTestUtils.execute(boardCfgFile, Collections.emptyList());\n+        int exitCode = (Integer) result.get(\"exitCode\");\n+\n+        Assert.assertEquals(MinesweeperTestUtils.MINESWEEPER_CLASS_NAME\n+                + \" accepted configuration that is missing new line character in last line\", 2, exitCode);\n+    }\n+\n     @Test(timeout = 3000)\n     public void testBoardWithoutMines() throws Exception {\n         // Setup: Provide the configuration file"
  }
]
