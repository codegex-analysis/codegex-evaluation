[
  {
    "sha": "773454e39145b4582f4b81b79d388a0a5e80e54f",
    "filename": ".github/workflows/build.yml",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/.github/workflows/build.yml",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/.github/workflows/build.yml",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/.github/workflows/build.yml?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -12,7 +12,7 @@ jobs:\n       - uses: actions/checkout@v2\n       - uses: actions/setup-java@v1\n         with:\n-          java-version: 14\n+          java-version: 16\n       - uses: actions/cache@v1\n         with:\n           path: ~/.m2/repository\n@@ -28,10 +28,10 @@ jobs:\n         if: github.repository == 'cryptomator/cryptomator'\n         run: |\n           curl -o ~/codacy-coverage-reporter.jar https://repo.maven.apache.org/maven2/com/codacy/codacy-coverage-reporter/7.1.0/codacy-coverage-reporter-7.1.0-assembly.jar\n-          $JAVA_HOME/bin/java -jar ~/codacy-coverage-reporter.jar report -l Java -r main/commons/target/site/jacoco/jacoco.xml --partial\n-          $JAVA_HOME/bin/java -jar ~/codacy-coverage-reporter.jar report -l Java -r main/ui/target/site/jacoco/jacoco.xml --partial\n-          $JAVA_HOME/bin/java -jar ~/codacy-coverage-reporter.jar report -l Java -r main/launcher/target/site/jacoco/jacoco.xml --partial\n-          $JAVA_HOME/bin/java -jar ~/codacy-coverage-reporter.jar final\n+          $JAVA_HOME/bin/java --illegal-access=permit -jar ~/codacy-coverage-reporter.jar report -l Java -r main/commons/target/site/jacoco/jacoco.xml --partial\n+          $JAVA_HOME/bin/java --illegal-access=permit -jar ~/codacy-coverage-reporter.jar report -l Java -r main/ui/target/site/jacoco/jacoco.xml --partial\n+          $JAVA_HOME/bin/java --illegal-access=permit -jar ~/codacy-coverage-reporter.jar report -l Java -r main/launcher/target/site/jacoco/jacoco.xml --partial\n+          $JAVA_HOME/bin/java --illegal-access=permit -jar ~/codacy-coverage-reporter.jar final\n         env:\n           CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}\n       - name: Assemble buildkit-linux.zip"
  },
  {
    "sha": "feca1b9ffba196744b7cd00f7a072537171a4bb8",
    "filename": ".idea/misc.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/.idea/misc.xml",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/.idea/misc.xml?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -8,7 +8,7 @@\n       </list>\n     </option>\n   </component>\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_14\" default=\"false\" project-jdk-name=\"14\" project-jdk-type=\"JavaSDK\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_16\" project-jdk-name=\"16\" project-jdk-type=\"JavaSDK\">\n     <output url=\"file://$PROJECT_DIR$/out\" />\n   </component>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "63c72c42189ef644a4f46273eba7c992150ad0a7",
    "filename": "README.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/README.md",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/README.md",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/README.md?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -65,7 +65,7 @@ For more information on the security details visit [cryptomator.org](https://doc\n \n ### Dependencies\n \n-* JDK 14 (e.g. adoptopenjdk)\n+* JDK 16 (e.g. adoptopenjdk)\n * Maven 3\n * Optional: OS-dependent build tools for native packaging (see [Windows](https://github.com/cryptomator/cryptomator-win), [OS X](https://github.com/cryptomator/cryptomator-osx), [Linux](https://github.com/cryptomator/builder-containers))\n "
  },
  {
    "sha": "2a0a42ecb7f0dce3810eebb716bcb55749d19315",
    "filename": "main/commons/src/main/java/org/cryptomator/common/CommonsModule.java",
    "status": "modified",
    "additions": 6,
    "deletions": 4,
    "changes": 10,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/CommonsModule.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/CommonsModule.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/commons/src/main/java/org/cryptomator/common/CommonsModule.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -47,10 +47,12 @@\n \t@Named(\"licensePublicKey\")\n \tstatic String provideLicensePublicKey() {\n \t\t// in PEM format without the dash-escaped begin/end lines\n-\t\treturn \"MIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQB7NfnqiZbg2KTmoflmZ71PbXru7oW\" //\n-\t\t\t\t+ \"fmnV2yv3eDjlDfGruBrqz9TtXBZV/eYWt31xu1osIqaT12lKBvZ511aaAkIBeOEV\" //\n-\t\t\t\t+ \"gwcBIlJr6kUw7NKzeJt7r2rrsOyQoOG2nWc/Of/NBqA3mIZRHk5Aq1YupFdD26QE\" //\n-\t\t\t\t+ \"r0DzRyj4ixPIt38CQB8=\";\n+\t\treturn \"\"\"\n+\t\t\t\tMIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQB7NfnqiZbg2KTmoflmZ71PbXru7oW\\\n+\t\t\t\tfmnV2yv3eDjlDfGruBrqz9TtXBZV/eYWt31xu1osIqaT12lKBvZ511aaAkIBeOEV\\\n+\t\t\t\tgwcBIlJr6kUw7NKzeJt7r2rrsOyQoOG2nWc/Of/NBqA3mIZRHk5Aq1YupFdD26QE\\\n+\t\t\t\tr0DzRyj4ixPIt38CQB8=\\\n+\t\t\t\t\"\"\";\n \t}\n \n \t@Provides"
  },
  {
    "sha": "38bf8e1916dd2ca8dcbea69d2cb4c009252c6ec8",
    "filename": "main/commons/src/main/java/org/cryptomator/common/LicenseChecker.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/LicenseChecker.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/LicenseChecker.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/commons/src/main/java/org/cryptomator/common/LicenseChecker.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -33,8 +33,8 @@ private static ECPublicKey decodePublicKey(String pemEncodedPublicKey) {\n \t\ttry {\n \t\t\tbyte[] keyBytes = BaseEncoding.base64().decode(pemEncodedPublicKey);\n \t\t\tPublicKey key = KeyFactory.getInstance(\"EC\").generatePublic(new X509EncodedKeySpec(keyBytes));\n-\t\t\tif (key instanceof ECPublicKey) {\n-\t\t\t\treturn (ECPublicKey) key;\n+\t\t\tif (key instanceof ECPublicKey k) {\n+\t\t\t\treturn k;\n \t\t\t} else {\n \t\t\t\tthrow new IllegalStateException(\"Key not an EC public key.\");\n \t\t\t}"
  },
  {
    "sha": "b273bb6420b7dfe39563323af7eb91dbc0ebde67",
    "filename": "main/commons/src/main/java/org/cryptomator/common/settings/VaultSettings.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/settings/VaultSettings.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/settings/VaultSettings.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/commons/src/main/java/org/cryptomator/common/settings/VaultSettings.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -173,8 +173,7 @@ public int hashCode() {\n \n \t@Override\n \tpublic boolean equals(Object obj) {\n-\t\tif (obj instanceof VaultSettings && obj.getClass().equals(this.getClass())) {\n-\t\t\tVaultSettings other = (VaultSettings) obj;\n+\t\tif (obj instanceof VaultSettings other && obj.getClass().equals(this.getClass())) {\n \t\t\treturn Objects.equals(this.id, other.id);\n \t\t} else {\n \t\t\treturn false;"
  },
  {
    "sha": "98a6cf21b7a5d791154d3f8367bee9959a272ca4",
    "filename": "main/commons/src/main/java/org/cryptomator/common/vaults/Vault.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/vaults/Vault.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/vaults/Vault.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/commons/src/main/java/org/cryptomator/common/vaults/Vault.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -355,8 +355,7 @@ public int hashCode() {\n \n \t@Override\n \tpublic boolean equals(Object obj) {\n-\t\tif (obj instanceof Vault && obj.getClass().equals(this.getClass())) {\n-\t\t\tfinal Vault other = (Vault) obj;\n+\t\tif (obj instanceof Vault other && obj.getClass().equals(this.getClass())) {\n \t\t\treturn Objects.equals(this.vaultSettings, other.vaultSettings);\n \t\t} else {\n \t\t\treturn false;"
  },
  {
    "sha": "3fd6f4e238fbaf528a97610b49b8799815588d13",
    "filename": "main/commons/src/main/java/org/cryptomator/common/vaults/VaultListChangeListener.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/vaults/VaultListChangeListener.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/vaults/VaultListChangeListener.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/commons/src/main/java/org/cryptomator/common/vaults/VaultListChangeListener.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -22,10 +22,10 @@ public VaultListChangeListener(ObservableList<VaultSettings> vaultSettingsList)\n \tpublic void onChanged(Change<? extends Vault> c) {\n \t\twhile (c.next()) {\n \t\t\tif (c.wasAdded()) {\n-\t\t\t\tList<VaultSettings> addedSettings = c.getAddedSubList().stream().map(Vault::getVaultSettings).collect(Collectors.toList());\n+\t\t\t\tList<VaultSettings> addedSettings = c.getAddedSubList().stream().map(Vault::getVaultSettings).toList();\n \t\t\t\tvaultSettingsList.addAll(c.getFrom(), addedSettings);\n \t\t\t} else if (c.wasRemoved()) {\n-\t\t\t\tList<VaultSettings> removedSettings = c.getRemoved().stream().map(Vault::getVaultSettings).collect(Collectors.toList());\n+\t\t\t\tList<VaultSettings> removedSettings = c.getRemoved().stream().map(Vault::getVaultSettings).toList();\n \t\t\t\tvaultSettingsList.removeAll(removedSettings);\n \t\t\t}\n \t\t}"
  },
  {
    "sha": "b7c10a4d4ac4f0f22fdd7a25e4d724e1ec4070c4",
    "filename": "main/commons/src/main/java/org/cryptomator/common/vaults/VaultListManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/vaults/VaultListManager.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/main/java/org/cryptomator/common/vaults/VaultListManager.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/commons/src/main/java/org/cryptomator/common/vaults/VaultListManager.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -79,7 +79,7 @@ private VaultSettings newVaultSettings(Path path) {\n \t}\n \n \tprivate void addAll(Collection<VaultSettings> vaultSettings) {\n-\t\tCollection<Vault> vaults = vaultSettings.stream().map(this::create).collect(Collectors.toList());\n+\t\tCollection<Vault> vaults = vaultSettings.stream().map(this::create).toList();\n \t\tvaultList.addAll(vaults);\n \t}\n "
  },
  {
    "sha": "b68d4a63159f6b7aaad7363655ad7ced1ef6185f",
    "filename": "main/commons/src/test/java/org/cryptomator/common/EnvironmentTest.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/test/java/org/cryptomator/common/EnvironmentTest.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/test/java/org/cryptomator/common/EnvironmentTest.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/commons/src/test/java/org/cryptomator/common/EnvironmentTest.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -32,7 +32,7 @@ void init() {\n \tpublic void testSettingsPath() {\n \t\tSystem.setProperty(\"cryptomator.settingsPath\", \"~/.config/Cryptomator/settings.json:~/.Cryptomator/settings.json\");\n \n-\t\tList<Path> result = env.getSettingsPath().collect(Collectors.toList());\n+\t\tList<Path> result = env.getSettingsPath().toList();\n \t\tMatcherAssert.assertThat(result, Matchers.hasSize(2));\n \t\tMatcherAssert.assertThat(result, Matchers.contains(Paths.get(\"/home/testuser/.config/Cryptomator/settings.json\"), //\n \t\t\t\tPaths.get(\"/home/testuser/.Cryptomator/settings.json\")));\n@@ -43,7 +43,7 @@ public void testSettingsPath() {\n \tpublic void testIpcPortPath() {\n \t\tSystem.setProperty(\"cryptomator.ipcPortPath\", \"~/.config/Cryptomator/ipcPort.bin:~/.Cryptomator/ipcPort.bin\");\n \n-\t\tList<Path> result = env.getIpcPortPath().collect(Collectors.toList());\n+\t\tList<Path> result = env.getIpcPortPath().toList();\n \t\tMatcherAssert.assertThat(result, Matchers.hasSize(2));\n \t\tMatcherAssert.assertThat(result, Matchers.contains(Paths.get(\"/home/testuser/.config/Cryptomator/ipcPort.bin\"), //\n \t\t\t\tPaths.get(\"/home/testuser/.Cryptomator/ipcPort.bin\")));\n@@ -54,7 +54,7 @@ public void testIpcPortPath() {\n \tpublic void testKeychainPath() {\n \t\tSystem.setProperty(\"cryptomator.keychainPath\", \"~/AppData/Roaming/Cryptomator/keychain.json\");\n \n-\t\tList<Path> result = env.getKeychainPath().collect(Collectors.toList());\n+\t\tList<Path> result = env.getKeychainPath().toList();\n \t\tMatcherAssert.assertThat(result, Matchers.hasSize(1));\n \t\tMatcherAssert.assertThat(result, Matchers.contains(Paths.get(\"/home/testuser/AppData/Roaming/Cryptomator/keychain.json\")));\n \t}\n@@ -88,7 +88,7 @@ public void testRelativeLogDir() {\n \t\t@DisplayName(\"test.path.property=\")\n \t\tpublic void testEmptyList() {\n \t\t\tSystem.setProperty(\"test.path.property\", \"\");\n-\t\t\tList<Path> result = env.getPaths(\"test.path.property\").collect(Collectors.toList());\n+\t\t\tList<Path> result = env.getPaths(\"test.path.property\").toList();\n \n \t\t\tMatcherAssert.assertThat(result, Matchers.hasSize(0));\n \t\t}\n@@ -97,7 +97,7 @@ public void testEmptyList() {\n \t\t@DisplayName(\"test.path.property=/foo/bar/test\")\n \t\tpublic void testSingleAbsolutePath() {\n \t\t\tSystem.setProperty(\"test.path.property\", \"/foo/bar/test\");\n-\t\t\tList<Path> result = env.getPaths(\"test.path.property\").collect(Collectors.toList());\n+\t\t\tList<Path> result = env.getPaths(\"test.path.property\").toList();\n \n \t\t\tMatcherAssert.assertThat(result, Matchers.hasSize(1));\n \t\t\tMatcherAssert.assertThat(result, Matchers.hasItem(Paths.get(\"/foo/bar/test\")));\n@@ -107,7 +107,7 @@ public void testSingleAbsolutePath() {\n \t\t@DisplayName(\"test.path.property=~/test\")\n \t\tpublic void testSingleHomeRelativePath() {\n \t\t\tSystem.setProperty(\"test.path.property\", \"~/test\");\n-\t\t\tList<Path> result = env.getPaths(\"test.path.property\").collect(Collectors.toList());\n+\t\t\tList<Path> result = env.getPaths(\"test.path.property\").toList();\n \n \t\t\tMatcherAssert.assertThat(result, Matchers.hasSize(1));\n \t\t\tMatcherAssert.assertThat(result, Matchers.hasItem(Paths.get(\"/home/testuser/test\")));\n@@ -117,7 +117,7 @@ public void testSingleHomeRelativePath() {\n \t\t@DisplayName(\"test.path.property=~/test:~/test2:/foo/bar/test\")\n \t\tpublic void testMultiplePaths() {\n \t\t\tSystem.setProperty(\"test.path.property\", \"~/test:~/test2:/foo/bar/test\");\n-\t\t\tList<Path> result = env.getPaths(\"test.path.property\").collect(Collectors.toList());\n+\t\t\tList<Path> result = env.getPaths(\"test.path.property\").toList();\n \n \t\t\tMatcherAssert.assertThat(result, Matchers.hasSize(3));\n \t\t\tMatcherAssert.assertThat(result, Matchers.contains(Paths.get(\"/home/testuser/test\"), //"
  },
  {
    "sha": "066126ccfff199f4da4dd4780e8910a4bba24587",
    "filename": "main/commons/src/test/java/org/cryptomator/common/LicenseCheckerTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 4,
    "changes": 10,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/test/java/org/cryptomator/common/LicenseCheckerTest.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/test/java/org/cryptomator/common/LicenseCheckerTest.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/commons/src/test/java/org/cryptomator/common/LicenseCheckerTest.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -9,10 +9,12 @@\n \n class LicenseCheckerTest {\n \n-\tprivate static final String PUBLIC_KEY = \"MIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQBgc4HZz+/fBbC7lmEww0AO3NK9wVZ\" //\n-\t\t\t+ \"PDZ0VEnsaUFLEYpTzb90nITtJUcPUbvOsdZIZ1Q8fnbquAYgxXL5UgHMoywAib47\" //\n-\t\t\t+ \"6MkyyYgPk0BXZq3mq4zImTRNuaU9slj9TVJ3ScT3L1bXwVuPJDzpr5GOFpaj+WwM\" //\n-\t\t\t+ \"Al8G7CqwoJOsW7Kddns=\";\n+\tprivate static final String PUBLIC_KEY = \"\"\"\n+\t\t\tMIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQBgc4HZz+/fBbC7lmEww0AO3NK9wVZ\\\n+\t\t\tPDZ0VEnsaUFLEYpTzb90nITtJUcPUbvOsdZIZ1Q8fnbquAYgxXL5UgHMoywAib47\\\n+\t\t\t6MkyyYgPk0BXZq3mq4zImTRNuaU9slj9TVJ3ScT3L1bXwVuPJDzpr5GOFpaj+WwM\\\n+\t\t\tAl8G7CqwoJOsW7Kddns=\\\n+\t\t\t\"\"\";\n \n \tprivate LicenseChecker licenseChecker;\n "
  },
  {
    "sha": "a03eb1d57af5398ab301cedd450c77e768ac1629",
    "filename": "main/commons/src/test/java/org/cryptomator/common/settings/SettingsJsonAdapterTest.java",
    "status": "modified",
    "additions": 12,
    "deletions": 7,
    "changes": 19,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/test/java/org/cryptomator/common/settings/SettingsJsonAdapterTest.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/commons/src/test/java/org/cryptomator/common/settings/SettingsJsonAdapterTest.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/commons/src/test/java/org/cryptomator/common/settings/SettingsJsonAdapterTest.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -21,13 +21,18 @@\n \n \t@Test\n \tpublic void testDeserialize() throws IOException {\n-\t\tString vault1Json = \"{\\\"id\\\": \\\"1\\\", \\\"path\\\": \\\"/vault1\\\", \\\"mountName\\\": \\\"vault1\\\", \\\"winDriveLetter\\\": \\\"X\\\"}\";\n-\t\tString vault2Json = \"{\\\"id\\\": \\\"2\\\", \\\"path\\\": \\\"/vault2\\\", \\\"mountName\\\": \\\"vault2\\\", \\\"winDriveLetter\\\": \\\"Y\\\"}\";\n-\t\tString json = \"{\\\"directories\\\": [\" + vault1Json + \",\" + vault2Json + \"],\" //\n-\t\t\t\t+ \"\\\"checkForUpdatesEnabled\\\": true,\"//\n-\t\t\t\t+ \"\\\"port\\\": 8080,\"//\n-\t\t\t\t+ \"\\\"numTrayNotifications\\\": 42,\"//\n-\t\t\t\t+ \"\\\"preferredVolumeImpl\\\": \\\"FUSE\\\"}\";\n+\t\tString json = \"\"\"\n+\t\t\t\t{\n+\t\t\t\t\t\"directories\": [\n+\t\t\t\t\t\t{\"id\": \"1\", \"path\": \"/vault1\", \"mountName\": \"vault1\", \"winDriveLetter\": \"X\"},\n+\t\t\t\t\t\t{\"id\": \"2\", \"path\": \"/vault2\", \"mountName\": \"vault2\", \"winDriveLetter\": \"Y\"}\n+\t\t\t\t\t],\n+\t\t\t\t\t\"checkForUpdatesEnabled\": true,\n+\t\t\t\t\t\"port\": 8080,\n+\t\t\t\t\t\"numTrayNotifications\": 42,\n+\t\t\t\t\t\"preferredVolumeImpl\": \"FUSE\"\n+\t\t\t\t}\n+\t\t\t\t\"\"\";\n \n \t\tSettings settings = adapter.fromJson(json);\n "
  },
  {
    "sha": "9d1e3144d5ba18e821fc9059dacb256cf6fc30e8",
    "filename": "main/launcher/src/main/java/org/cryptomator/launcher/FileOpenRequestHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/launcher/src/main/java/org/cryptomator/launcher/FileOpenRequestHandler.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/launcher/src/main/java/org/cryptomator/launcher/FileOpenRequestHandler.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/launcher/src/main/java/org/cryptomator/launcher/FileOpenRequestHandler.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -41,7 +41,7 @@ public FileOpenRequestHandler(@Named(\"launchEventQueue\") BlockingQueue<AppLaunch\n \t}\n \n \tprivate void openFiles(OpenFilesEvent evt) {\n-\t\tCollection<Path> pathsToOpen = evt.getFiles().stream().map(File::toPath).collect(Collectors.toList());\n+\t\tCollection<Path> pathsToOpen = evt.getFiles().stream().map(File::toPath).toList();\n \t\tAppLaunchEvent launchEvent = new AppLaunchEvent(AppLaunchEvent.EventType.OPEN_FILE, pathsToOpen);\n \t\ttryToEnqueueFileOpenRequest(launchEvent);\n \t}\n@@ -59,7 +59,7 @@ void handleLaunchArgs(FileSystem fs, String[] args) {\n \t\t\t\tLOG.trace(\"Argument not a valid path: {}\", str);\n \t\t\t\treturn null;\n \t\t\t}\n-\t\t}).filter(Objects::nonNull).collect(Collectors.toList());\n+\t\t}).filter(Objects::nonNull).toList();\n \t\tif (!pathsToOpen.isEmpty()) {\n \t\t\tAppLaunchEvent launchEvent = new AppLaunchEvent(AppLaunchEvent.EventType.OPEN_FILE, pathsToOpen);\n \t\t\ttryToEnqueueFileOpenRequest(launchEvent);"
  },
  {
    "sha": "0b24e0e247659cac9ec519d5dade0829a48f668d",
    "filename": "main/launcher/src/main/java/org/cryptomator/logging/LoggerModule.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/launcher/src/main/java/org/cryptomator/logging/LoggerModule.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/launcher/src/main/java/org/cryptomator/logging/LoggerModule.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/launcher/src/main/java/org/cryptomator/logging/LoggerModule.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -47,8 +47,8 @@\n \t@Singleton\n \tstatic LoggerContext provideLoggerContext() {\n \t\tILoggerFactory loggerFactory = LoggerFactory.getILoggerFactory();\n-\t\tif (loggerFactory instanceof LoggerContext) {\n-\t\t\treturn (LoggerContext) loggerFactory;\n+\t\tif (loggerFactory instanceof LoggerContext context) {\n+\t\t\treturn context;\n \t\t} else {\n \t\t\tthrow new IllegalStateException(\"SLF4J not bound to Logback.\");\n \t\t}"
  },
  {
    "sha": "1e48da8a7ab365dbf4f1855a88948086fd715607",
    "filename": "main/pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/pom.xml",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/pom.xml",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/pom.xml?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -22,7 +22,7 @@\n \n \t<properties>\n \t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-\t\t<project.jdk.version>14</project.jdk.version>\n+\t\t<project.jdk.version>16</project.jdk.version>\n \n \t\t<!-- cryptomator dependencies -->\n \t\t<cryptomator.cryptofs.version>1.9.14</cryptomator.cryptofs.version>"
  },
  {
    "sha": "7f6daa44defbaca7bbc07bb6bdf37806201b20b6",
    "filename": "main/ui/src/main/java/org/cryptomator/ui/common/DefaultSceneFactory.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/ui/src/main/java/org/cryptomator/ui/common/DefaultSceneFactory.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/ui/src/main/java/org/cryptomator/ui/common/DefaultSceneFactory.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/ui/src/main/java/org/cryptomator/ui/common/DefaultSceneFactory.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -42,8 +42,8 @@ protected void configureRoot(Parent root) {\n \tprotected void configureScene(Scene scene) {\n \t\tscene.windowProperty().addListener(observable -> {\n \t\t\tWindow window = scene.getWindow();\n-\t\t\tif (window instanceof Stage) {\n-\t\t\t\tsetupDefaultAccelerators(scene, (Stage) window);\n+\t\t\tif (window instanceof Stage s) {\n+\t\t\t\tsetupDefaultAccelerators(scene, s);\n \t\t\t}\n \t\t});\n \t}"
  },
  {
    "sha": "c1b5fbd45c906ad1cd5156eb2e7993bc49029390",
    "filename": "main/ui/src/main/java/org/cryptomator/ui/unlock/UnlockWorkflow.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/ui/src/main/java/org/cryptomator/ui/unlock/UnlockWorkflow.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/ui/src/main/java/org/cryptomator/ui/unlock/UnlockWorkflow.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/ui/src/main/java/org/cryptomator/ui/unlock/UnlockWorkflow.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -76,8 +76,8 @@\n \n \t\tsetOnFailed(event -> {\n \t\t\tThrowable throwable = event.getSource().getException();\n-\t\t\tif (throwable instanceof InvalidMountPointException) {\n-\t\t\t\thandleInvalidMountPoint((InvalidMountPointException) throwable);\n+\t\t\tif (throwable instanceof InvalidMountPointException e) {\n+\t\t\t\thandleInvalidMountPoint(e);\n \t\t\t} else {\n \t\t\t\thandleGenericError(throwable);\n \t\t\t}"
  },
  {
    "sha": "3ea028bf2abb8ca963649a2a4a700a788ba77437",
    "filename": "main/ui/src/test/java/org/cryptomator/ui/recoverykey/RecoveryKeyFactoryTest.java",
    "status": "modified",
    "additions": 10,
    "deletions": 6,
    "changes": 16,
    "blob_url": "https://github.com/Nicholas282787728/cryptomator/blob/31e938de6af795c585df5f2cd11d8d025738efd9/main/ui/src/test/java/org/cryptomator/ui/recoverykey/RecoveryKeyFactoryTest.java",
    "raw_url": "https://github.com/Nicholas282787728/cryptomator/raw/31e938de6af795c585df5f2cd11d8d025738efd9/main/ui/src/test/java/org/cryptomator/ui/recoverykey/RecoveryKeyFactoryTest.java",
    "contents_url": "https://api.github.com/repos/Nicholas282787728/cryptomator/contents/main/ui/src/test/java/org/cryptomator/ui/recoverykey/RecoveryKeyFactoryTest.java?ref=31e938de6af795c585df5f2cd11d8d025738efd9",
    "patch": "@@ -48,18 +48,22 @@ public void testValidateValidateRecoveryKeyWithTooShortInput() {\n \t@Test\n \t@DisplayName(\"validateRecoveryKey() with invalid checksum\")\n \tpublic void testValidateValidateRecoveryKeyWithInvalidCrc() {\n-\t\tboolean result = inTest.validateRecoveryKey(\"pathway lift abuse plenty export texture gentleman landscape beyond ceiling around leaf cafe\" //\n-\t\t\t\t+ \" charity border breakdown victory surely computer cat linger restrict infer crowd live computer true written amazed investor boot\" //\n-\t\t\t\t+ \" depth left theory snow whereby terminal weekly reject happiness circuit partial cup wrong\");\n+\t\tboolean result = inTest.validateRecoveryKey(\"\"\"\n+\t\t\t\tpathway lift abuse plenty export texture gentleman landscape beyond ceiling around leaf cafe charity \\\n+\t\t\t\tborder breakdown victory surely computer cat linger restrict infer crowd live computer true written amazed \\\n+\t\t\t\tinvestor boot depth left theory snow whereby terminal weekly reject happiness circuit partial cup wrong \\\n+\t\t\t\t\"\"\");\n \t\tAssertions.assertFalse(result);\n \t}\n \n \t@Test\n \t@DisplayName(\"validateRecoveryKey() with valid input\")\n \tpublic void testValidateValidateRecoveryKeyWithValidKey() {\n-\t\tboolean result = inTest.validateRecoveryKey(\"pathway lift abuse plenty export texture gentleman landscape beyond ceiling around leaf cafe\" //\n-\t\t\t\t+ \" charity border breakdown victory surely computer cat linger restrict infer crowd live computer true written amazed investor boot\" //\n-\t\t\t\t+ \" depth left theory snow whereby terminal weekly reject happiness circuit partial cup ad\");\n+\t\tboolean result = inTest.validateRecoveryKey(\"\"\"\n+\t\t\t\tpathway lift abuse plenty export texture gentleman landscape beyond ceiling around leaf cafe charity \\\n+\t\t\t\tborder breakdown victory surely computer cat linger restrict infer crowd live computer true written amazed \\\n+\t\t\t\tinvestor boot depth left theory snow whereby terminal weekly reject happiness circuit partial cup ad \\\n+\t\t\t\t\"\"\");\n \t\tAssertions.assertTrue(result);\n \t}\n "
  }
]
