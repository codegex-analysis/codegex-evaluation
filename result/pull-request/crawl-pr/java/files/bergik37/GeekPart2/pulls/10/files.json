[
  {
    "sha": "30e242e6d4c18423248f81b9cc3decbec5884ad7",
    "filename": "src/lessons8/oneClients/App1.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/oneClients/App1.java",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/oneClients/App1.java",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/oneClients/App1.java?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -7,18 +7,19 @@\n import javafx.stage.Stage;\n \n public class App1 extends Application {\n+    public static void main(String[] args) throws Exception {\n+        launch(args);\n+    }\n+\n     @Override\n     public void start(Stage primaryStage) {\n         try {\n             Parent root = FXMLLoader.load(getClass().getResource(\"app/sample.fxml\"));\n             primaryStage.setTitle(\"Chat_v0.3\");\n             primaryStage.setScene(new Scene(root));\n             primaryStage.show();\n-        } catch(Exception e) {\n+        } catch (Exception e) {\n             e.printStackTrace();\n         }\n     }\n-    public static void main(String[] args) throws Exception  {\n-        launch(args);\n-    }\n }"
  },
  {
    "sha": "507eef109a5decf3195f50e59d2d3683af894c90",
    "filename": "src/lessons8/oneClients/app/Controller.java",
    "status": "modified",
    "additions": 3,
    "deletions": 7,
    "changes": 10,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/oneClients/app/Controller.java",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/oneClients/app/Controller.java",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/oneClients/app/Controller.java?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -13,23 +13,19 @@\n \n public class Controller extends View implements Initializable {\n \n+    Button bt = new Button();\n+    EchoServer echoServer = new EchoServer();\n     @FXML\n     private TextArea output_text;\n     @FXML\n     private TextField write_text;\n     @FXML\n     private Button send_Button;\n-\n-\n-    Button bt=new Button();\n+    private final Model model = new Model();\n \n     public void initialize(URL location, ResourceBundle resources) {\n     }\n \n-    private Model model = new Model();\n-\n-    EchoServer echoServer = new EchoServer();\n-\n     private void go() {\n \n         model.setButton(send_Button);"
  },
  {
    "sha": "6522a9f5d339cbf80e663fd494f088edf537190f",
    "filename": "src/lessons8/oneClients/app/Model.java",
    "status": "modified",
    "additions": 15,
    "deletions": 20,
    "changes": 35,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/oneClients/app/Model.java",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/oneClients/app/Model.java",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/oneClients/app/Model.java?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -14,18 +14,22 @@\n \n     private final String SERVER_ADDRESS = \"localhost\";\n     private final int SERVER_PORT = 8102;\n-    private Socket socket;\n-    private Button send_Button;\n     boolean isAuthorized = false;\n-\n-\n-\n     DataInputStream dis;\n     DataOutputStream dos;\n-\n+    private Socket socket;\n+    private Button send_Button;\n     private TextField input_text;\n     private TextArea output_text;\n \n+    public Model() {\n+        try {\n+            connection();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n     void setTextField(TextField s) {\n         input_text = s;\n     }\n@@ -38,14 +42,6 @@ void setButton(Button s) {\n         send_Button = s;\n     }\n \n-    public Model() {\n-        try {\n-            connection();\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n     public void connection() throws IOException {\n         socket = new Socket(SERVER_ADDRESS, SERVER_PORT);\n         dis = new DataInputStream(socket.getInputStream());\n@@ -56,12 +52,12 @@ public void connection() throws IOException {\n                     String message = dis.readUTF();\n                     if (message.startsWith(\"/authok\")) {\n                         isAuthorized = true;\n-                        output_text.appendText(message+\"\\n\");\n+                        output_text.appendText(message + \"\\n\");\n                         break;\n                     }\n-                    output_text.appendText(message+\"\\n\");\n+                    output_text.appendText(message + \"\\n\");\n                 }\n-                while (isAuthorized){\n+                while (isAuthorized) {\n                     String messageFromServer = dis.readUTF();\n                     output_text.appendText(messageFromServer + \"\\n\");\n                 }\n@@ -75,7 +71,7 @@ public void send() {\n         if (input_text.getText() != null && !input_text.getText().trim().isEmpty()) {\n             try {\n                 dos.writeUTF(input_text.getText());\n-                if(input_text.getText().equals(\"/end\")) {\n+                if (input_text.getText().equals(\"/end\")) {\n                     isAuthorized = false;\n                     closeConnection();\n                 }\n@@ -86,7 +82,6 @@ public void send() {\n     }\n \n \n-\n     private void closeConnection() {\n         try {\n             dis.close();\n@@ -95,7 +90,7 @@ private void closeConnection() {\n         } catch (IOException ignored) {\n         }\n     }\n-    }\n+}\n \n \n "
  },
  {
    "sha": "8cdc8eaccd1688e8d261697bd90310535fe7a15c",
    "filename": "src/lessons8/oneClients/app/sample.fxml",
    "status": "modified",
    "additions": 8,
    "deletions": 5,
    "changes": 13,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/oneClients/app/sample.fxml",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/oneClients/app/sample.fxml",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/oneClients/app/sample.fxml?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -5,14 +5,17 @@\n <?import javafx.scene.control.TextField?>\n <?import javafx.scene.layout.Pane?>\n <?import javafx.scene.text.Font?>\n-<Pane prefHeight=\"600.0\" prefWidth=\"800.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"lessons7.oneClients.app.Controller\">\n+<Pane xmlns:fx=\"http://javafx.com/fxml/1\" prefHeight=\"600.0\" prefWidth=\"800.0\" xmlns=\"http://javafx.com/javafx/11.0.1\"\n+      fx:controller=\"lessons7.oneClients.app.Controller\">\n     <children>\n-        <Button fx:id=\"send_Button\" layoutX=\"661.0\" layoutY=\"549.0\" mnemonicParsing=\"false\" onAction=\"#send\" onKeyPressed=\"#send\" prefHeight=\"39.0\" prefWidth=\"129.0\" text=\"Send\">\n+        <Button fx:id=\"send_Button\" layoutX=\"661.0\" layoutY=\"549.0\" mnemonicParsing=\"false\" onAction=\"#send\"\n+                onKeyPressed=\"#send\" prefHeight=\"39.0\" prefWidth=\"129.0\" text=\"Send\">\n             <font>\n-                <Font size=\"18.0\" />\n+                <Font size=\"18.0\"/>\n             </font>\n         </Button>\n-        <TextField fx:id=\"write_text\" layoutX=\"15.0\" layoutY=\"550.0\" prefHeight=\"39.0\" prefWidth=\"640.0\" promptText=\"your message\" />\n-        <TextArea fx:id=\"output_text\" layoutX=\"15.0\" layoutY=\"14.0\" prefHeight=\"532.0\" prefWidth=\"775.0\" />\n+        <TextField fx:id=\"write_text\" layoutX=\"15.0\" layoutY=\"550.0\" prefHeight=\"39.0\" prefWidth=\"640.0\"\n+                   promptText=\"your message\"/>\n+        <TextArea fx:id=\"output_text\" layoutX=\"15.0\" layoutY=\"14.0\" prefHeight=\"532.0\" prefWidth=\"775.0\"/>\n     </children>\n </Pane>"
  },
  {
    "sha": "876153679ba33bf92c7f22c8a518e000e54b851d",
    "filename": "src/lessons8/server/AuthService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/server/AuthService.java",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/server/AuthService.java",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/server/AuthService.java?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -2,6 +2,8 @@\n \n public interface AuthService {\n     void start();\n+\n     String getNickByLoginPass(String login, String pass);\n+\n     void stop();\n }"
  },
  {
    "sha": "ea8d54dd4bd9cb89de418ae8980905c0a4b88b55",
    "filename": "src/lessons8/server/BaseAuthService.java",
    "status": "modified",
    "additions": 22,
    "deletions": 18,
    "changes": 40,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/server/BaseAuthService.java",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/server/BaseAuthService.java",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/server/BaseAuthService.java?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -4,38 +4,42 @@\n import java.util.List;\n \n public class BaseAuthService implements AuthService {\n-    private List<Entry> entries;\n+    private final List<Entry> entries;\n \n-    private class Entry {\n-        private String login;\n-        private String pass;\n-        private String nick;\n-\n-        public Entry(String login, String pass, String nick) {\n-            this.login = login;\n-            this.pass = pass;\n-            this.nick = nick;\n-        }\n+    public BaseAuthService() {\n+        entries = new ArrayList<>();\n+        entries.add(new Entry(\"Alex\", \"pass1\", \"@Alex\"));\n+        entries.add(new Entry(\"Roman\", \"pass2\", \"@Roman\"));\n+        entries.add(new Entry(\"Slava\", \"pass3\", \"@Slava\"));\n     }\n \n     @Override\n-    public void start() {System.out.println(\"Сервис аутентификации запущен\");}\n+    public void start() {\n+        System.out.println(\"Сервис аутентификации запущен\");\n+    }\n \n     @Override\n     public void stop() {\n         System.out.println(\"Сервис аутентификации остановлен\");\n     }\n-    public BaseAuthService(){\n-        entries=new ArrayList<>();\n-        entries.add(new Entry(\"Alex\", \"pass1\", \"@Alex\"));\n-        entries.add(new Entry(\"Roman\", \"pass2\", \"@Roman\"));\n-        entries.add(new Entry(\"Slava\", \"pass3\", \"@Slava\"));\n-    }\n+\n     @Override\n     public String getNickByLoginPass(String login, String pass) {\n         for (Entry list : entries) {\n             if (list.login.equals(login) && list.pass.equals(pass)) return list.nick;\n         }\n         return null;\n     }\n+\n+    private class Entry {\n+        private final String login;\n+        private final String pass;\n+        private final String nick;\n+\n+        public Entry(String login, String pass, String nick) {\n+            this.login = login;\n+            this.pass = pass;\n+            this.nick = nick;\n+        }\n+    }\n }"
  },
  {
    "sha": "ea19a22719bc17c107525aebe8157cc933d76ff8",
    "filename": "src/lessons8/server/ClientHandler.java",
    "status": "modified",
    "additions": 46,
    "deletions": 9,
    "changes": 55,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/server/ClientHandler.java",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/server/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/server/ClientHandler.java?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -7,15 +7,12 @@\n \n public class ClientHandler {\n \n-    private MyServer myServer;\n-    private Socket socket;\n-    private DataInputStream in;\n-    private DataOutputStream out;\n+    private final MyServer myServer;\n+    private final Socket socket;\n+    private final DataInputStream in;\n+    private final DataOutputStream out;\n     private String name;\n-\n-    public String getName() {\n-        return name;\n-    }\n+    private boolean isAuthorized;\n \n     public ClientHandler(MyServer myServer, Socket socket) {\n         try {\n@@ -33,11 +30,49 @@ public ClientHandler(MyServer myServer, Socket socket) {\n                 }\n             }).start();\n \n+            new Thread(() -> {\n+\n+                try {\n+\n+                    Thread.sleep(120000);\n+\n+                } catch (InterruptedException e) {\n+\n+                    e.printStackTrace();\n+\n+                }\n+\n+                if (!isAuthorized) {\n+\n+                    System.out.println(\"время на авторизацию вышло\");\n+\n+                    closeConnection();\n+\n+                }\n+\n+            }\n+\n+            ).start();\n+\n         } catch (IOException e) {\n             throw new RuntimeException(\"Проблемы при создании обработчика клиента\");\n         }\n     }\n \n+    public String getName() {\n+        return name;\n+    }\n+\n+    private void closeConnection() {\n+        try {\n+            in.close();\n+            out.close();\n+            socket.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n     public void authentication() throws IOException {\n         while (true) {\n             String str = in.readUTF();\n@@ -48,6 +83,7 @@ public void authentication() throws IOException {\n                 if (nick != null) {\n                     if (!myServer.isNickBusy(nick)) {\n                         sendMsg(\"/authok \" + nick);\n+                        isAuthorized = true;\n                         name = nick;\n                         myServer.broadcastMsg(name + \" зашел в чат\");\n                         myServer.subscribe(this);\n@@ -62,7 +98,7 @@ public void authentication() throws IOException {\n                 sendMsg(\"Your command will be need start with /auth\");\n             }\n         }\n-        }\n+    }\n \n     public void readMessages() throws IOException {\n         while (true) {\n@@ -85,6 +121,7 @@ public void readMessages() throws IOException {\n             }\n         }\n     }\n+\n     public void sendMsg(String msg) {\n         try {\n             out.writeUTF(msg);"
  },
  {
    "sha": "76ce7c4343108c80893200d617c7454ef8a731d0",
    "filename": "src/lessons8/server/MyServer.java",
    "status": "modified",
    "additions": 23,
    "deletions": 17,
    "changes": 40,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/server/MyServer.java",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/server/MyServer.java",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/server/MyServer.java?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -10,36 +10,37 @@\n \n public class MyServer {\n \n-    private final int PORT =8102;\n+    private final int PORT = 8102;\n     private List<ClientHandler> clients;\n     private AuthService authService;\n \n-    public AuthService getAuthService() {\n-        return authService;\n-    }\n-\n-    public MyServer(){\n+    public MyServer() {\n \n-        try (ServerSocket server=new ServerSocket(PORT)){\n-            authService =new BaseAuthService();\n+        try (ServerSocket server = new ServerSocket(PORT)) {\n+            authService = new BaseAuthService();\n             authService.start();\n-            clients=new ArrayList<>();\n-            while (true){\n+            clients = new ArrayList<>();\n+            while (true) {\n                 System.out.println(\"Сервер ожидает подключения\");\n-                Socket socket=server.accept();\n+                Socket socket = server.accept();\n                 System.out.println(socket.getInetAddress().getCanonicalHostName());\n                 System.out.println(\"Клиент подключился\");\n-                new ClientHandler(this,socket);\n+                new ClientHandler(this, socket);\n             }\n-    } catch (IOException e) {\n+        } catch (IOException e) {\n             System.out.println(\"Ошибка в работе сервера\");\n-        }finally {\n-            if(authService!=null){\n+        } finally {\n+            if (authService != null) {\n                 authService.stop();\n             }\n         }\n \n-        }\n+    }\n+\n+    public AuthService getAuthService() {\n+        return authService;\n+    }\n+\n     public synchronized boolean isNickBusy(String nick) {\n         for (ClientHandler c : clients) {\n             if (c.getName().equals(nick)) {\n@@ -48,6 +49,7 @@ public synchronized boolean isNickBusy(String nick) {\n         }\n         return false;\n     }\n+\n     public synchronized void sendMessageToCertainClient(ClientHandler from, String toName, String message) {\n         for (ClientHandler c : clients) {\n             if (c.getName().equals(toName)) {\n@@ -58,7 +60,7 @@ public synchronized void sendMessageToCertainClient(ClientHandler from, String t\n     }\n \n     public synchronized void getOnlineUsersList(ClientHandler clientHandler) {\n-        StringBuilder sb = new StringBuilder(\"\");\n+        StringBuilder sb = new StringBuilder();\n         for (ClientHandler c : clients) {\n             if (!c.equals(clientHandler)) {\n                 sb.append(c.getName()).append(\", \");\n@@ -69,19 +71,23 @@ public synchronized void getOnlineUsersList(ClientHandler clientHandler) {\n         sb.deleteCharAt(size - 2);\n         clientHandler.sendMsg(sb.toString());\n     }\n+\n     public synchronized void broadcastMsg(String msg) {\n         for (ClientHandler o : clients) {\n             o.sendMsg(msg);\n         }\n     }\n+\n     public synchronized void broadcastMessage(String message) {\n         for (ClientHandler c : clients) {\n             c.sendMsg(message);\n         }\n     }\n+\n     public synchronized void unsubscribe(ClientHandler o) {\n         clients.remove(o);\n     }\n+\n     public synchronized void subscribe(ClientHandler o) {\n         clients.add(o);\n     }"
  },
  {
    "sha": "957e97bb465647509f73cde580cab03ed4a9946c",
    "filename": "src/lessons8/twoClients/App2.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/twoClients/App2.java",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/twoClients/App2.java",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/twoClients/App2.java?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -14,11 +14,12 @@ public void start(Stage primaryStage) {\n             primaryStage.setTitle(\"Chat_v0.2\");\n             primaryStage.setScene(new Scene(root));\n             primaryStage.show();\n-        } catch(Exception e) {\n+        } catch (Exception e) {\n             e.printStackTrace();\n         }\n     }\n-    public static void main(String[] args) throws Exception  {\n+\n+    public static void main(String[] args) throws Exception {\n         launch(args);\n     }\n }"
  },
  {
    "sha": "6bf5dbacae35d1973e1a89b4c356c69d4dbd4d59",
    "filename": "src/lessons8/twoClients/app/Controller.java",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/twoClients/app/Controller.java",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/twoClients/app/Controller.java",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/twoClients/app/Controller.java?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -13,21 +13,18 @@\n \n public class Controller extends View implements Initializable {\n \n+    EchoServer echoServer = new EchoServer();\n     @FXML\n     private TextArea output_text;\n     @FXML\n     private TextField write_text;\n     @FXML\n     private Button send_Button;\n-\n+    private final Model model = new Model();\n \n     public void initialize(URL location, ResourceBundle resources) {\n     }\n \n-    private Model model = new Model();\n-\n-    EchoServer echoServer = new EchoServer();\n-\n     private void go() {\n \n         model.setButton(send_Button);"
  },
  {
    "sha": "ea8717c3f6735519bfab9fea9ef4a1356b7e4166",
    "filename": "src/lessons8/twoClients/app/Model.java",
    "status": "modified",
    "additions": 16,
    "deletions": 17,
    "changes": 33,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/twoClients/app/Model.java",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/twoClients/app/Model.java",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/twoClients/app/Model.java?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -13,16 +13,22 @@\n \n     private final String SERVER_ADDRESS = \"localhost\";\n     private final int SERVER_PORT = 8102;\n-    private Socket socket;\n-    private Button send_Button;\n     boolean isAuthorized = false;\n-\n     DataInputStream dis;\n     DataOutputStream dos;\n-\n+    private Socket socket;\n+    private Button send_Button;\n     private TextField input_text;\n     private TextArea output_text;\n \n+    public Model() {\n+        try {\n+            connection();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n     void setTextField(TextField s) {\n         input_text = s;\n     }\n@@ -35,14 +41,6 @@ void setButton(Button s) {\n         send_Button = s;\n     }\n \n-    public Model() {\n-        try {\n-            connection();\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n     public void connection() throws IOException {\n         socket = new Socket(SERVER_ADDRESS, SERVER_PORT);\n         dis = new DataInputStream(socket.getInputStream());\n@@ -53,12 +51,12 @@ public void connection() throws IOException {\n                     String message = dis.readUTF();\n                     if (message.startsWith(\"/authok\")) {\n                         isAuthorized = true;\n-                        output_text.appendText(message+\"\\n\");\n+                        output_text.appendText(message + \"\\n\");\n                         break;\n                     }\n-                    output_text.appendText(message+\"\\n\");\n+                    output_text.appendText(message + \"\\n\");\n                 }\n-                while (isAuthorized){\n+                while (isAuthorized) {\n                     String messageFromServer = dis.readUTF();\n                     output_text.appendText(messageFromServer + \"\\n\");\n                 }\n@@ -72,7 +70,7 @@ public void send() {\n         if (input_text.getText() != null && !input_text.getText().trim().isEmpty()) {\n             try {\n                 dos.writeUTF(input_text.getText());\n-                if(input_text.getText().equals(\"/end\")) {\n+                if (input_text.getText().equals(\"/end\")) {\n                     isAuthorized = false;\n                     closeConnection();\n                 }\n@@ -81,6 +79,7 @@ public void send() {\n             }\n         }\n     }\n+\n     private void closeConnection() {\n         try {\n             dis.close();\n@@ -89,7 +88,7 @@ private void closeConnection() {\n         } catch (IOException ignored) {\n         }\n     }\n-    }\n+}\n \n \n "
  },
  {
    "sha": "90e95ea41da2b5dddb25e13864645365b05bc20e",
    "filename": "src/lessons8/twoClients/app/sample.fxml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/bergik37/GeekPart2/blob/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/twoClients/app/sample.fxml",
    "raw_url": "https://github.com/bergik37/GeekPart2/raw/61ded05baebaae4f2b30b44abce9a652e125641e/src/lessons8/twoClients/app/sample.fxml",
    "contents_url": "https://api.github.com/repos/bergik37/GeekPart2/contents/src/lessons8/twoClients/app/sample.fxml?ref=61ded05baebaae4f2b30b44abce9a652e125641e",
    "patch": "@@ -5,7 +5,7 @@\n <?import javafx.scene.control.TextField?>\n <?import javafx.scene.layout.Pane?>\n <?import javafx.scene.text.Font?>\n-<Pane prefHeight=\"600.0\" prefWidth=\"800.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\"\n+<Pane xmlns:fx=\"http://javafx.com/fxml/1\" prefHeight=\"600.0\" prefWidth=\"800.0\" xmlns=\"http://javafx.com/javafx/11.0.1\"\n       fx:controller=\"lessons7.twoClients.app.Controller\">\n     <children>\n         <Button fx:id=\"send_Button\" layoutX=\"661.0\" layoutY=\"549.0\" mnemonicParsing=\"false\" onAction=\"#send\""
  }
]
