[
  {
    "sha": "f0d5ac0bd6d0acdf6ee86ef85259a5b93e54b828",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 17,
    "deletions": 2,
    "changes": 19,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/build.gradle",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/build.gradle",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/build.gradle?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -61,6 +61,7 @@ subprojects {\n \n     tasks.withType(JavaCompile) {\n         options.compilerArgs << \"-Xlint:unchecked\" << \"-Xlint:deprecation\" << \"-XDignore.symbol.file\"\n+        dependsOn(processResources)\n     }\n \n     configurations {\n@@ -103,6 +104,7 @@ subprojects {\n         implementation \"com.github.seancfoley:ipaddress:5.3.3\"\n \n         // Tests - JUnit 5\n+\n         testImplementation \"org.junit.jupiter:junit-jupiter-params:5.7.1\"\n         testImplementation \"org.junit.jupiter:junit-jupiter-api:5.7.1\"\n         testRuntimeOnly \"org.junit.jupiter:junit-jupiter-engine:5.7.1\"\n@@ -141,7 +143,6 @@ subprojects {\n     delombok.encoding = \"UTF-8\"\n     compileJava.options.encoding = \"UTF-8\"\n     compileTestJava.options.encoding = \"UTF-8\"\n-    javadoc.options.encoding = \"UTF-8\"\n \n \n     // Run the license formatter and font data copier before compiling the source code. \n@@ -160,6 +161,11 @@ subprojects {\n             }\n         }\n     }\n+\n+    tasks.withType(Javadoc) {\n+        options.addBooleanOption(\"quiet\", true)\n+        options.encoding = \"UTF-8\"\n+    }\n }\n \n // Root build: create uber jar from subproject outputs\n@@ -230,15 +236,24 @@ aggregateJavadoc.options.encoding = \"UTF-8\"\n         archived: https://web.archive.org/web/20210117193942/https://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html\n     which, in turn, references this: https://github.com/GPars/GPars/blob/7cddf7cf2fec1fd66ef800edccfc03315d078a2b/build.gradle#L209\n  */\n-if (JavaVersion.current().isJava8Compatible()) {\n+// We probably want to use Doxygen instead because fuck this shit\n+if (JavaVersion.current().isJava11Compatible()) {\n     allprojects {\n         tasks.withType(Javadoc) {\n             // options.addStringOption(\"Xdoclint:-html\", \"-quiet\")\n             options.addBooleanOption(\"Xdoclint:-html\", true)\n+            options.addBooleanOption(\"-frames\", true)\n         }\n     }\n }\n \n+task browseJavadoc {\n+    dependsOn javadoc\n+    doLast {\n+        java.awt.Desktop.desktop.browse new URI((\"file:///\" << System.getProperty(\"user.dir\").replace('\\\\','/') << \"/build/docs/javadoc/index.html\").toString())\n+    }\n+}\n+\n tasks.publish.dependsOn build\n \n publishing {"
  },
  {
    "sha": "2ff57980ba8dd1f8ddcd2fbe33f95e627aab9147",
    "filename": "bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/command/BukkitCommandBuilder.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/command/BukkitCommandBuilder.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/command/BukkitCommandBuilder.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/command/BukkitCommandBuilder.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -13,13 +13,13 @@\n \n import com.dumbdogdiner.stickyapi.StickyAPI;\n import com.dumbdogdiner.stickyapi.bukkit.util.SoundUtil;\n-import com.dumbdogdiner.stickyapi.common.arguments.Arguments;\n-import com.dumbdogdiner.stickyapi.common.command.CommandBuilder;\n-import com.dumbdogdiner.stickyapi.common.command.ExitCode;\n-import com.dumbdogdiner.stickyapi.common.ServerVersion;\n-import com.dumbdogdiner.stickyapi.common.util.NotificationType;\n-import com.dumbdogdiner.stickyapi.common.util.reflection.ReflectionUtil;\n-import com.dumbdogdiner.stickyapi.common.util.StringUtil;\n+import com.dumbdogdiner.stickyapi.arguments.Arguments;\n+import com.dumbdogdiner.stickyapi.command.CommandBuilder;\n+import com.dumbdogdiner.stickyapi.command.ExitCode;\n+import com.dumbdogdiner.stickyapi.ServerVersion;\n+import com.dumbdogdiner.stickyapi.util.NotificationType;\n+import com.dumbdogdiner.stickyapi.util.reflection.ReflectionUtil;\n+import com.dumbdogdiner.stickyapi.util.StringUtil;\n import com.google.common.collect.ImmutableList;\n \n import org.bukkit.command.Command;"
  },
  {
    "sha": "181dde5d6571c17dc591b5de89c584ac088b05d8",
    "filename": "bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/command/ExitCode.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/command/ExitCode.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/command/ExitCode.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/command/ExitCode.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -9,9 +9,9 @@\n /**\n  * Enum based exit codes for StickyAPI command classes.\n  * \n- * @deprecated use {@link com.dumbdogdiner.stickyapi.common.command.ExitCode} as\n+ * @deprecated use {@link com.dumbdogdiner.stickyapi.command.ExitCode} as\n  *             this will be removed in the next release\n- * @see ExitCode {@link com.dumbdogdiner.stickyapi.common.command.ExitCode}\n+ * @see ExitCode {@link com.dumbdogdiner.stickyapi.command.ExitCode}\n  */\n @Deprecated\n public enum ExitCode {"
  },
  {
    "sha": "94d0f9ab5ae9de10592d1dd0493dd5c1e0e7a728",
    "filename": "bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/item/BookAndQuillBuilder.java",
    "status": "modified",
    "additions": 4,
    "deletions": 9,
    "changes": 13,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/item/BookAndQuillBuilder.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/item/BookAndQuillBuilder.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/item/BookAndQuillBuilder.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -4,12 +4,9 @@\n  */\n package com.dumbdogdiner.stickyapi.bukkit.item;\n \n-import com.dumbdogdiner.stickyapi.common.nbt.NbtCompoundTag;\n-import com.dumbdogdiner.stickyapi.common.nbt.NbtJsonTag;\n-import com.dumbdogdiner.stickyapi.common.nbt.NbtListTag;\n-import com.dumbdogdiner.stickyapi.common.nbt.NbtStringTag;\n-import com.dumbdogdiner.stickyapi.common.util.TextUtil;\n-import com.dumbdogdiner.stickyapi.common.util.StringUtil;\n+import com.dumbdogdiner.stickyapi.nbt.NbtCompoundTag;\n+import com.dumbdogdiner.stickyapi.nbt.NbtListTag;\n+import com.dumbdogdiner.stickyapi.util.TextUtil;\n import com.google.common.base.Preconditions;\n import com.google.gson.JsonArray;\n import com.google.gson.JsonObject;\n@@ -20,13 +17,11 @@\n import org.bukkit.Bukkit;\n import org.bukkit.Material;\n import org.bukkit.inventory.ItemStack;\n-import org.bukkit.inventory.meta.ItemMeta;\n+\n import org.jetbrains.annotations.NotNull;\n import org.jetbrains.annotations.Nullable;\n import org.jetbrains.annotations.VisibleForTesting;\n \n-import java.awt.print.Book;\n-import java.util.Collections;\n import java.util.StringJoiner;\n \n /**"
  },
  {
    "sha": "61c3711440dc66e312d67c28124d574dcc96d695",
    "filename": "bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/item/WrittenBookBuilder.java",
    "status": "modified",
    "additions": 5,
    "deletions": 6,
    "changes": 11,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/item/WrittenBookBuilder.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/item/WrittenBookBuilder.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/item/WrittenBookBuilder.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -4,11 +4,11 @@\n  */\n package com.dumbdogdiner.stickyapi.bukkit.item;\n \n-import com.dumbdogdiner.stickyapi.common.nbt.NbtCompoundTag;\n-import com.dumbdogdiner.stickyapi.common.nbt.NbtListTag;\n-import com.dumbdogdiner.stickyapi.common.nbt.NbtStringTag;\n-import com.dumbdogdiner.stickyapi.common.util.TextUtil;\n-import com.dumbdogdiner.stickyapi.common.util.StringUtil;\n+import com.dumbdogdiner.stickyapi.nbt.NbtCompoundTag;\n+import com.dumbdogdiner.stickyapi.nbt.NbtListTag;\n+import com.dumbdogdiner.stickyapi.nbt.NbtStringTag;\n+import com.dumbdogdiner.stickyapi.util.TextUtil;\n+import com.dumbdogdiner.stickyapi.util.StringUtil;\n import com.google.common.base.Preconditions;\n import com.google.gson.JsonArray;\n import com.google.gson.JsonObject;\n@@ -25,7 +25,6 @@\n import org.jetbrains.annotations.Nullable;\n import org.jetbrains.annotations.VisibleForTesting;\n \n-import java.util.Collections;\n import java.util.StringJoiner;\n \n /**"
  },
  {
    "sha": "0c48637251f1fd00ea317fafba7e6a5d9d2fa0f7",
    "filename": "bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/PlayerSelector.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/PlayerSelector.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/PlayerSelector.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/PlayerSelector.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -4,7 +4,7 @@\n  */\n package com.dumbdogdiner.stickyapi.bukkit.util;\n \n-import com.dumbdogdiner.stickyapi.common.util.MathUtil;\n+import com.dumbdogdiner.stickyapi.util.MathUtil;\n import org.bukkit.Bukkit;\n import org.bukkit.GameMode;\n import org.bukkit.Location;"
  },
  {
    "sha": "b49d2a75c757e212d4476bebcd22d7855c63df96",
    "filename": "bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/ServerUtil.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/ServerUtil.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/ServerUtil.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/ServerUtil.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -8,8 +8,8 @@\n \n import com.destroystokyo.paper.Title;\n \n-import com.dumbdogdiner.stickyapi.common.translation.Translation;\n-import com.dumbdogdiner.stickyapi.common.util.reflection.ReflectionUtil;\n+import com.dumbdogdiner.stickyapi.translation.Translation;\n+import com.dumbdogdiner.stickyapi.util.reflection.ReflectionUtil;\n \n import org.bukkit.Bukkit;\n import org.bukkit.Server;"
  },
  {
    "sha": "fa5adc1ff6a552bcb222795e6bb5900ddd5ad552",
    "filename": "bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/SoundUtil.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/SoundUtil.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/SoundUtil.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/SoundUtil.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -5,7 +5,7 @@\n package com.dumbdogdiner.stickyapi.bukkit.util;\n \n import com.dumbdogdiner.stickyapi.StickyAPI;\n-import com.dumbdogdiner.stickyapi.common.util.NotificationType;\n+import com.dumbdogdiner.stickyapi.util.NotificationType;\n \n import org.bukkit.Sound;\n import org.bukkit.command.CommandSender;"
  },
  {
    "sha": "5b958ccbc208b45fda09bddbaf4d262c3744e616",
    "filename": "bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/StartupUtil.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/StartupUtil.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/StartupUtil.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bukkit/src/main/java/com/dumbdogdiner/stickyapi/bukkit/util/StartupUtil.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -8,7 +8,7 @@\n \n import javax.annotation.Nullable;\n \n-import com.dumbdogdiner.stickyapi.common.translation.LocaleProvider;\n+import com.dumbdogdiner.stickyapi.translation.LocaleProvider;\n import org.bukkit.plugin.java.JavaPlugin;\n import org.jetbrains.annotations.NotNull;\n "
  },
  {
    "sha": "c18901d337b67f9d6fa79a9358ccb20c6ba200de",
    "filename": "bukkit/src/test/java/com/dumbdogdiner/stickyapi/bukkit/item/WrittenBookBuilderTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/test/java/com/dumbdogdiner/stickyapi/bukkit/item/WrittenBookBuilderTest.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bukkit/src/test/java/com/dumbdogdiner/stickyapi/bukkit/item/WrittenBookBuilderTest.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bukkit/src/test/java/com/dumbdogdiner/stickyapi/bukkit/item/WrittenBookBuilderTest.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -4,11 +4,10 @@\n  */\n package com.dumbdogdiner.stickyapi.bukkit.item;\n \n-import com.dumbdogdiner.stickyapi.common.nbt.NbtCompoundTag;\n-import com.dumbdogdiner.stickyapi.common.nbt.NbtJsonTag;\n-import com.dumbdogdiner.stickyapi.common.nbt.NbtListTag;\n-import com.dumbdogdiner.stickyapi.common.nbt.NbtStringTag;\n-import com.dumbdogdiner.stickyapi.common.util.StringUtil;\n+import com.dumbdogdiner.stickyapi.nbt.NbtCompoundTag;\n+import com.dumbdogdiner.stickyapi.nbt.NbtJsonTag;\n+import com.dumbdogdiner.stickyapi.nbt.NbtListTag;\n+import com.dumbdogdiner.stickyapi.nbt.NbtStringTag;\n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n import com.google.gson.JsonElement;\n@@ -20,7 +19,6 @@\n import java.io.IOException;\n import java.io.InputStreamReader;\n import java.io.Reader;\n-import java.text.MessageFormat;\n \n public class WrittenBookBuilderTest {\n     private static Reader bookReader;"
  },
  {
    "sha": "3c0fab825717e94d921e7b38cdd7d998dc6fef70",
    "filename": "bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/command/BungeeCommandBuilder.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/command/BungeeCommandBuilder.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/command/BungeeCommandBuilder.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/command/BungeeCommandBuilder.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -15,11 +15,11 @@\n import com.dumbdogdiner.stickyapi.StickyAPI;\n import com.dumbdogdiner.stickyapi.bungeecord.packet.PacketRegistration;\n import com.dumbdogdiner.stickyapi.bungeecord.util.SoundUtil;\n-import com.dumbdogdiner.stickyapi.common.arguments.Arguments;\n-import com.dumbdogdiner.stickyapi.common.command.ExitCode;\n-import com.dumbdogdiner.stickyapi.common.command.CommandBuilder;\n-import com.dumbdogdiner.stickyapi.common.util.NotificationType;\n-import com.dumbdogdiner.stickyapi.common.util.StringUtil;\n+import com.dumbdogdiner.stickyapi.arguments.Arguments;\n+import com.dumbdogdiner.stickyapi.command.ExitCode;\n+import com.dumbdogdiner.stickyapi.command.CommandBuilder;\n+import com.dumbdogdiner.stickyapi.util.NotificationType;\n+import com.dumbdogdiner.stickyapi.util.StringUtil;\n import com.google.common.collect.ImmutableList;\n \n import org.jetbrains.annotations.NotNull;"
  },
  {
    "sha": "c496c6cf3a632f54f8c136f39305ce74c40b61ac",
    "filename": "bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/Sound.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/Sound.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/Sound.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/Sound.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -11,6 +11,8 @@\n  * <p>\n  * These values are subject to change on every new major Minecraft release\n  */\n+\n+// TODO change to code gen\n public enum Sound {\n \n     AMBIENT_BASALT_DELTAS_ADDITIONS(1), AMBIENT_BASALT_DELTAS_LOOP(2), AMBIENT_BASALT_DELTAS_MOOD(3), AMBIENT_CAVE(0),"
  },
  {
    "sha": "e60e40c49176b2dc4ffe30b52a452563fe736121",
    "filename": "bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/SoundUtil.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/SoundUtil.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/SoundUtil.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/SoundUtil.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -6,7 +6,7 @@\n \n import com.dumbdogdiner.stickyapi.StickyAPI;\n import com.dumbdogdiner.stickyapi.bungeecord.packet.SoundPacket;\n-import com.dumbdogdiner.stickyapi.common.util.NotificationType;\n+import com.dumbdogdiner.stickyapi.util.NotificationType;\n \n import org.jetbrains.annotations.NotNull;\n "
  },
  {
    "sha": "fe15cae1b0832e5085c179fe5febd8488ba6d3f7",
    "filename": "bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/StartupUtil.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/StartupUtil.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/StartupUtil.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/bungee/src/main/java/com/dumbdogdiner/stickyapi/bungeecord/util/StartupUtil.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -7,7 +7,7 @@\n import java.io.File;\n \n import com.dumbdogdiner.stickyapi.annotation.Untested;\n-import com.dumbdogdiner.stickyapi.common.translation.LocaleProvider;\n+import com.dumbdogdiner.stickyapi.translation.LocaleProvider;\n \n import org.jetbrains.annotations.NotNull;\n import org.jetbrains.annotations.Nullable;"
  },
  {
    "sha": "a8bea53ff5b9b96f56dda41118791b87c0d6d7a9",
    "filename": "common/build.gradle",
    "status": "modified",
    "additions": 41,
    "deletions": 17,
    "changes": 58,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/build.gradle",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/build.gradle",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/build.gradle?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -28,6 +28,7 @@ dependencies {\n     These is also an accompanying test at (test src) com.dumbdogdiner.stickyapi.StickyAPITest\n  */\n \n+\n // Set the timestamp format\n def dataBuildTimestamp = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"\n \n@@ -58,25 +59,48 @@ task processSourceTokens(type: Sync) {\n // Use the filter task as the input for compileJava\n compileJava.source = processSourceTokens.outputs\n \n-\n-/*\n-    Font Width Info\n-    ----------\n-    This task serves to copy width data from the default Minecraft font into the final jar.\n-    This data is generated by <https://github.com/DumbDogDiner/mc-font-extractor>.\n+/**\n+ * Task to clean generated resources\n  */\n \n-// Font Width Info\n-task copyMCFontExtractor(type: Copy) {\n-    def path = project.configurations.compile.find {it.name.startsWith(\"mc-font-extractor\") }\n-    println(\"common: Found font data at: \" + path)\n-    from file(path)\n-    // into file(\"src/main/resources\")\n-    // - Please keep this comment for future reference.\n-    // - This is how we would do this if we weren't also adding build info (see processSourceTokens, above comments)\n-    destinationDir file(\"src/main/resources/generated/\")\n-    rename \"mc-font-extractor-main-mojangles_width_data.json\", \"mojangles_width_data.json\"\n+task cleanGeneratedResources(type: Delete) {\n+    delete(\"src/main/resources/generated/\")\n+}\n+\n+clean {\n+    dependsOn(cleanGeneratedResources)\n+}\n+configure(cleanGeneratedResources){\n+    group = \"Build\"\n+    description = \"Clean generated/downloaded resource files\"\n }\n \n // Run the license formatter and font data copier before compiling the source code.\n-tasks.compileJava.dependsOn licenseFormatMain, licenseFormatTest, copyMCFontExtractor\n+tasks.compileJava.dependsOn licenseFormatMain, licenseFormatTest, processResources\n+\n+task downloadTextures(type: Download){\n+    sourceUrl = \"https://dumbdogdiner.github.io/mc-heads-resource/textures.json\"\n+    target = file(\"src/main/resources/generated/textures.json\")\n+}\n+\n+task downloadFontWidths(type: Download){\n+    sourceUrl = \"https://dumbdogdiner.github.io/mc-font-extractor/main/mojangles_width_data.json\"\n+    target = file(\"src/main/resources/generated/mojangles_width_data.json\")\n+}\n+\n+processResources {\n+    dependsOn(downloadTextures, downloadFontWidths)\n+}\n+\n+class Download extends DefaultTask {\n+    @Input\n+    String sourceUrl\n+\n+    @OutputFile\n+    File target\n+\n+    @TaskAction\n+    void download() {\n+        ant.get(src: sourceUrl, dest: target, verbose: true)\n+    }\n+}"
  },
  {
    "sha": "6967311dc4d80c5c7c10bd4cbbaa01f86e70923c",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/ServerVersion.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/ServerVersion.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/ServerVersion.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/ServerVersion.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,7 +2,7 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common;\n+package com.dumbdogdiner.stickyapi;\n \n /**\n  * Utility class for fetching version data.",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/ServerVersion.java"
  },
  {
    "sha": "a34e2a0b20c0f871f1b6b694bd40715ec00f72a6",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/annotation/Broken.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/annotation/Broken.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/annotation/Broken.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/annotation/Broken.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -0,0 +1,12 @@\n+/*\n+ * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n+ * Licensed under the MIT license, see LICENSE for more information...\n+ */\n+package com.dumbdogdiner.stickyapi.annotation;\n+\n+/**\n+ * Denotes a method, class, or interface that is currently broken. Optionally links to a page about the issue\n+ */\n+public @interface Broken {\n+    public String issuepage() default \"\";\n+}"
  },
  {
    "sha": "3b7f65894329017be79e70f1808d9e7f6109c3f1",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/arguments/Arguments.java",
    "status": "renamed",
    "additions": 23,
    "deletions": 23,
    "changes": 46,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/arguments/Arguments.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/arguments/Arguments.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/arguments/Arguments.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,7 +2,7 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.arguments;\n+package com.dumbdogdiner.stickyapi.arguments;\n \n import java.sql.Timestamp;\n import java.util.ArrayList;\n@@ -11,9 +11,9 @@\n import java.util.HashMap;\n import java.util.List;\n \n-import com.dumbdogdiner.stickyapi.common.util.Debugger;\n-import com.dumbdogdiner.stickyapi.common.util.NumberUtil;\n-import com.dumbdogdiner.stickyapi.common.util.TimeUtil;\n+import com.dumbdogdiner.stickyapi.util.Debugger;\n+import com.dumbdogdiner.stickyapi.util.NumberUtil;\n+import com.dumbdogdiner.stickyapi.util.TimeUtil;\n \n import lombok.Getter;\n import org.jetbrains.annotations.NotNull;\n@@ -68,7 +68,7 @@ public Arguments(@NotNull List<String> args) {\n      * \n      * @since 1.4.6\n      * @param flag The name of this flag, and flag to register\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalFlag(@NotNull String flag) {\n         return optionalFlag(flag, flag);\n@@ -79,7 +79,7 @@ public Arguments optionalFlag(@NotNull String flag) {\n      * \n      * @param name The name of this flag\n      * @param flag The flag to register\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalFlag(@NotNull String name, @NotNull String flag) {\n         debug.print(\"Looking for optional flag \" + name + \"...\");\n@@ -102,7 +102,7 @@ public Arguments optionalFlag(@NotNull String name, @NotNull String flag) {\n      * \n      * @param name The name of this flag\n      * @param flag The flag to register\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments requiredFlag(@NotNull String name, @NotNull String flag) {\n         debug.print(\"Looking for required flag \" + name + \"...\");\n@@ -141,7 +141,7 @@ private Arguments optionalStringImplementation(String name, String fallback) {\n      * \n      * @param name     The name of this string\n      * @param fallback the default value you want for the argument\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalString(@NotNull String name, @NotNull String fallback) {\n         // noinspection ConstantConditions\n@@ -152,7 +152,7 @@ public Arguments optionalString(@NotNull String name, @NotNull String fallback)\n      * Create an optional string argument.\n      * \n      * @param name The name of this string\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalString(String name) {\n         return optionalStringImplementation(name, null);\n@@ -162,7 +162,7 @@ public Arguments optionalString(String name) {\n      * Create a required string argument.\n      * \n      * @param name The name of this string\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments requiredString(String name) {\n         debug.print(\"Looking for required string \" + name + \"...\");\n@@ -216,7 +216,7 @@ private Arguments optionalSentenceImplementation(String name, String fallback, i\n      * remaining length of current unparsed arguments.\n      * \n      * @param name The name of this sentence\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalSentence(@NotNull String name) {\n         debug.print(\"Using default length: \" + String.valueOf(unparsedArgs.size() - position));\n@@ -229,7 +229,7 @@ public Arguments optionalSentence(@NotNull String name) {\n      * \n      * @param name     The name of this sentence\n      * @param fallback The fallback sentence to use if one is not provided\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalSentence(@NotNull String name, @Nullable String fallback) {\n         debug.print(\"Using default length: \" + String.valueOf(unparsedArgs.size() - position));\n@@ -242,7 +242,7 @@ public Arguments optionalSentence(@NotNull String name, @Nullable String fallbac\n      * @param name     The name of the sentence to create\n      * @param fallback The fallback sentence to use if one is not provided\n      * @param length   The length of the sentence\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalSentence(@NotNull String name, @Nullable String fallback, @NotNull int length) {\n         if (fallback != null) {\n@@ -258,7 +258,7 @@ public Arguments optionalSentence(@NotNull String name, @Nullable String fallbac\n      * \n      * @param name   The name of the sentence to create\n      * @param length The length of the sentence\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalSentence(@NotNull String name, @NotNull int length) {\n         optionalSentenceImplementation(name, null, length);\n@@ -270,7 +270,7 @@ public Arguments optionalSentence(@NotNull String name, @NotNull int length) {\n      * remaining unparsed arguments.\n      * \n      * @param name Name of the argument\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments requiredSentence(@NotNull String name) {\n         debug.print(\"Using default length: \" + String.valueOf(unparsedArgs.size() - position));\n@@ -282,7 +282,7 @@ public Arguments requiredSentence(@NotNull String name) {\n      * \n      * @param name   Name of the argument\n      * @param length Maximum length in words of the sentence\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments requiredSentence(@NotNull String name, @NotNull int length) {\n         int end = position + length;\n@@ -318,7 +318,7 @@ public Arguments requiredSentence(@NotNull String name, @NotNull int length) {\n      * Create an optional timestamp argument. (e.g. 1w2d5s)\n      * \n      * @param name Name of the argument\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalTimeString(@NotNull String name) {\n         debug.print(\"Looking for optional timestamp \" + name + \"...\");\n@@ -337,7 +337,7 @@ public Arguments optionalTimeString(@NotNull String name) {\n      * Create a required timestamp argument. (e.g. 1w2d5s)\n      * \n      * @param name Name of the argument\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments requiredTimeString(@NotNull String name) {\n         debug.print(\"Looking for required timestamp \" + name + \"...\");\n@@ -373,7 +373,7 @@ private Arguments optionalIntImplementation(@NotNull String name, @NotNull Integ\n      * Create an optional integer argument.\n      * \n      * @param name Name of the argument\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalInt(@NotNull String name) {\n         optionalIntImplementation(name, null);\n@@ -385,7 +385,7 @@ public Arguments optionalInt(@NotNull String name) {\n      * \n      * @param name     Name of the argument\n      * @param fallback The fallback integer to use if one is not provided\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalInt(@NotNull String name, @NotNull Integer fallback) {\n         if (fallback != null) {\n@@ -400,7 +400,7 @@ public Arguments optionalInt(@NotNull String name, @NotNull Integer fallback) {\n      * Create a required integer\n      * \n      * @param name The name of the integer to create\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments requiredInt(@NotNull String name) {\n         debug.print(\"Looking for optional required \" + name + \"...\");\n@@ -422,7 +422,7 @@ public Arguments requiredInt(@NotNull String name) {\n      * Create an optional duration argument.\n      * \n      * @param name The name of the duration to create\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments optionalDuration(@NotNull String name) {\n         debug.print(\"Looking for optional duration \" + name + \"...\");\n@@ -442,7 +442,7 @@ public Arguments optionalDuration(@NotNull String name) {\n      * Create a required duration argument.\n      * \n      * @param name The name of the duration to create\n-     * @return {@link com.dumbdogdiner.stickyapi.common.arguments.Arguments}\n+     * @return {@link Arguments}\n      */\n     public Arguments requiredDuration(@NotNull String name) {\n         debug.print(\"Looking for required duration \" + name + \"...\");",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/arguments/Arguments.java"
  },
  {
    "sha": "378814e0d6610f06b9190639494390198638b797",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/arguments/package-info.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/arguments/package-info.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/arguments/package-info.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/arguments/package-info.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -5,4 +5,4 @@\n /**\n  * Classes dedicated to parsing command arguments\n  */\n-package com.dumbdogdiner.stickyapi.common.arguments;\n+package com.dumbdogdiner.stickyapi.arguments;",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/arguments/package-info.java"
  },
  {
    "sha": "17b5d4749449d8742b3e3241d9da159edcb25ccb",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/cache/Cache.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/cache/Cache.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/cache/Cache.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/cache/Cache.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,14 +2,14 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.cache;\n+package com.dumbdogdiner.stickyapi.cache;\n \n import java.util.Collection;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.Callable;\n import java.util.concurrent.FutureTask;\n \n-import com.dumbdogdiner.stickyapi.common.util.Debugger;\n+import com.dumbdogdiner.stickyapi.util.Debugger;\n \n import org.jetbrains.annotations.NotNull;\n ",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/cache/Cache.java"
  },
  {
    "sha": "d25378af5de4809f9a6b9fba7d63316d715c14e1",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/cache/Cacheable.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/cache/Cacheable.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/cache/Cacheable.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/cache/Cacheable.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,7 +2,7 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.cache;\n+package com.dumbdogdiner.stickyapi.cache;\n \n /**\n  * Mark a class as being cacheable - must provide the <code>getKey()</code>",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/cache/Cacheable.java"
  },
  {
    "sha": "d222980a6376825a2f5713b27e2d743f1f0d1af0",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/cache/package-info.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/cache/package-info.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/cache/package-info.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/cache/package-info.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -5,4 +5,4 @@\n /**\n  * Classes dedicated to caching Java objects\n  */\n-package com.dumbdogdiner.stickyapi.common.cache;\n+package com.dumbdogdiner.stickyapi.cache;",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/cache/package-info.java"
  },
  {
    "sha": "3e218594546f04bc22f1387520e4694b48b3f8e0",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/chat/ChatMessage.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/chat/ChatMessage.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/chat/ChatMessage.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/chat/ChatMessage.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,10 +2,10 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.chat;\n+package com.dumbdogdiner.stickyapi.chat;\n \n-import com.dumbdogdiner.stickyapi.common.translation.Translation;\n-import com.dumbdogdiner.stickyapi.common.util.url.URLUtil;\n+import com.dumbdogdiner.stickyapi.translation.Translation;\n+import com.dumbdogdiner.stickyapi.util.url.URLUtil;\n \n import org.jetbrains.annotations.NotNull;\n ",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/chat/ChatMessage.java"
  },
  {
    "sha": "84ecf6a7e9693806ecbd6388a32cecd5634398d5",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/command/CommandBuilder.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/command/CommandBuilder.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/command/CommandBuilder.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/command/CommandBuilder.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,7 +2,7 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.command;\n+package com.dumbdogdiner.stickyapi.command;\n \n import java.util.ArrayList;\n import java.util.HashMap;",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/command/CommandBuilder.java"
  },
  {
    "sha": "782fc35192c7350d78f2134d3fafc91149e76bfa",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/command/ExitCode.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/command/ExitCode.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/command/ExitCode.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/command/ExitCode.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,7 +2,7 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.command;\n+package com.dumbdogdiner.stickyapi.command;\n \n /**\n  * Enum based exit codes for StickyAPI command classes.",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/command/ExitCode.java"
  },
  {
    "sha": "fd2b988b16edf6b7051f82e54014883173c0cb48",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/configuration/Configuration.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/Configuration.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/Configuration.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/Configuration.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,7 +2,7 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.configuration;\n+package com.dumbdogdiner.stickyapi.configuration;\n \n import java.util.Map;\n import org.jetbrains.annotations.NotNull;\n@@ -51,7 +51,7 @@\n      * This method will not hold a reference to the specified Configuration, nor\n      * will it automatically update if that Configuration ever changes. If you\n      * require this, you should set the default source with\n-     * {@link #setDefaults(com.dumbdogdiner.stickyapi.common.configuration.Configuration)}.\n+     * {@link #setDefaults(Configuration)}.\n      *\n      * @param defaults A configuration holding a list of defaults to copy.\n      * @throws IllegalArgumentException Thrown if defaults is null or this.",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/configuration/Configuration.java"
  },
  {
    "sha": "c6ab73895682bcbc123d900c05856d68cc2422c4",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/configuration/ConfigurationOptions.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/ConfigurationOptions.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/ConfigurationOptions.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/ConfigurationOptions.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,7 +2,7 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.configuration;\n+package com.dumbdogdiner.stickyapi.configuration;\n \n import org.jetbrains.annotations.NotNull;\n ",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/configuration/ConfigurationOptions.java"
  },
  {
    "sha": "129501417d7390e1651c398eaa9a3ed502a1c96d",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/configuration/ConfigurationSection.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/ConfigurationSection.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/ConfigurationSection.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/ConfigurationSection.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,13 +2,13 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.configuration;\n+package com.dumbdogdiner.stickyapi.configuration;\n \n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n \n-import com.dumbdogdiner.stickyapi.common.configuration.serialization.ConfigurationSerializable;\n+import com.dumbdogdiner.stickyapi.configuration.serialization.ConfigurationSerializable;\n \n import org.jetbrains.annotations.NotNull;\n import org.jetbrains.annotations.Nullable;",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/configuration/ConfigurationSection.java"
  },
  {
    "sha": "a8a33d0a311495cb0d382a1396be6f712982d9cc",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/configuration/InvalidConfigurationException.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/InvalidConfigurationException.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/InvalidConfigurationException.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/InvalidConfigurationException.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,7 +2,7 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.configuration;\n+package com.dumbdogdiner.stickyapi.configuration;\n \n /**\n  * Exception thrown when attempting to load an invalid {@link Configuration}",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/configuration/InvalidConfigurationException.java"
  },
  {
    "sha": "ffab1b0ec680a649ebdc99096078467b9bd4e0ce",
    "filename": "common/src/main/java/com/dumbdogdiner/stickyapi/configuration/MemoryConfiguration.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DumbDogDiner/StickyAPI/blob/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/MemoryConfiguration.java",
    "raw_url": "https://github.com/DumbDogDiner/StickyAPI/raw/05c3e5708a9551132dc5e35562da7913e4ebbc60/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/MemoryConfiguration.java",
    "contents_url": "https://api.github.com/repos/DumbDogDiner/StickyAPI/contents/common/src/main/java/com/dumbdogdiner/stickyapi/configuration/MemoryConfiguration.java?ref=05c3e5708a9551132dc5e35562da7913e4ebbc60",
    "patch": "@@ -2,7 +2,7 @@\n  * Copyright (c) 2020-2021 DumbDogDiner <dumbdogdiner.com>. All rights reserved.\n  * Licensed under the MIT license, see LICENSE for more information...\n  */\n-package com.dumbdogdiner.stickyapi.common.configuration;\n+package com.dumbdogdiner.stickyapi.configuration;\n \n import java.util.Map;\n import org.apache.commons.lang.Validate;",
    "previous_filename": "common/src/main/java/com/dumbdogdiner/stickyapi/common/configuration/MemoryConfiguration.java"
  }
]
