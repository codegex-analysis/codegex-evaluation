[
  {
    "sha": "806eb4e597884625410381be82b527b6bb0169a3",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/FoodServiceApplication.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/FoodServiceApplication.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/FoodServiceApplication.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/FoodServiceApplication.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,17 @@\n+package com.kodilla.good.patterns.challenge3;\n+\n+import com.kodilla.good.patterns.challenge3.engine.OrderProcessor;\n+import com.kodilla.good.patterns.challenge3.model.Order;\n+import com.kodilla.good.patterns.challenge3.model.OrderRetriever;\n+import com.kodilla.good.patterns.challenge3.produce.*;\n+\n+public class FoodServiceApplication {\n+\n+    public static void main(String[] args) {\n+        OrderRetriever orderRetriever = new OrderRetriever();\n+        Order order = orderRetriever.retrieve();\n+        OrderProcessor orderProcessor = new OrderProcessor(new HealthyShop(), new HealthyShopOffer(new HealthyShop()));\n+        orderProcessor.processor(order);\n+    }\n+}\n+"
  },
  {
    "sha": "e8312efbe6201ed433568c28bb9d97ce21839d63",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/engine/OrderProcessor.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/engine/OrderProcessor.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/engine/OrderProcessor.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/engine/OrderProcessor.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,31 @@\n+package com.kodilla.good.patterns.challenge3.engine;\n+\n+import com.kodilla.good.patterns.challenge3.model.Order;\n+import com.kodilla.good.patterns.challenge3.produce.Food2Door;\n+import com.kodilla.good.patterns.challenge3.produce.Offer;\n+\n+public class OrderProcessor {\n+\n+    private final Food2Door food2Door;\n+    private final Offer offer;\n+\n+    public OrderProcessor(Food2Door food2Door, Offer offer) {\n+        this.food2Door = food2Door;\n+        this.offer = offer;\n+    }\n+\n+    public void processor(Order order) {\n+        if (order == null || order.getProduct() == null || order.getQuantity() == null) return;\n+        offer.addProduct();\n+        food2Door.printProducerInfo(food2Door.producerInfo());\n+        food2Door.printProducts(food2Door.getProducts());\n+        food2Door.printOrderProduct(order.getProduct(), order.getQuantity());\n+        food2Door.process(order.getProduct(), order.getQuantity());\n+        if (food2Door.getOrdered()) {\n+            food2Door.printOrderConfirmed();\n+        } else {\n+            food2Door.printOrderRejected();\n+        }\n+    }\n+}\n+"
  },
  {
    "sha": "610073f66be5c9a11b6e7648be0a7d9746373ad1",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Order.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Order.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Order.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Order.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,44 @@\n+package com.kodilla.good.patterns.challenge3.model;\n+\n+import java.util.Objects;\n+\n+public class Order {\n+\n+    private final Product product;\n+    private final Quantity quantity;\n+\n+    public Order(Product product, Quantity quantity) {\n+        this.product = product;\n+        this.quantity = quantity;\n+    }\n+\n+    public Product getProduct() {\n+        return product;\n+    }\n+\n+    public Quantity getQuantity() {\n+        return quantity;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        Order order = (Order) o;\n+        return Objects.equals(product, order.product) && Objects.equals(quantity, order.quantity);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(product, quantity);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Order{\" +\n+                \"product=\" + product +\n+                \", quantity=\" + quantity +\n+                '}';\n+    }\n+}\n+"
  },
  {
    "sha": "34899e52463e6c6c78328e2ab12ca117fe0124dc",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/OrderRetriever.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/OrderRetriever.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/OrderRetriever.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/OrderRetriever.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,11 @@\n+package com.kodilla.good.patterns.challenge3.model;\n+\n+public class OrderRetriever {\n+\n+    public Order retrieve() {\n+        Product product = new Product(\"product2\");\n+        Quantity quantity = new Quantity(100, \"kg\");\n+        return new Order(product, quantity);\n+    }\n+}\n+"
  },
  {
    "sha": "2cb6c023d8748108fa75bd0b54c41776b5f5a912",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Product.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Product.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Product.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Product.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,37 @@\n+package com.kodilla.good.patterns.challenge3.model;\n+\n+import java.util.Objects;\n+\n+public class Product {\n+\n+    String productKind;\n+\n+    public Product(String productKind) {\n+        this.productKind = productKind;\n+    }\n+\n+    public String getProductKind() {\n+        return productKind;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        Product that = (Product) o;\n+        return Objects.equals(productKind, that.productKind);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(productKind);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Product{\" +\n+                \"productKind='\" + productKind + '\\'' +\n+                '}';\n+    }\n+}\n+"
  },
  {
    "sha": "2d07eb93f58518ca35fbfe40803705a8f856241d",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Quantity.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Quantity.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Quantity.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/model/Quantity.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,44 @@\n+package com.kodilla.good.patterns.challenge3.model;\n+\n+import java.util.Objects;\n+\n+public class Quantity {\n+\n+    private final int quantity;\n+    private final String unit;\n+\n+    public Quantity(int quantity, String unit) {\n+        this.quantity = quantity;\n+        this.unit = unit;\n+    }\n+\n+    public int getQuantity() {\n+        return quantity;\n+    }\n+\n+    public String getUnit() {\n+        return unit;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        Quantity that = (Quantity) o;\n+        return quantity == that.quantity;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(quantity);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Quantity{\" +\n+                \"quantity=\" + quantity +\n+                \", unit='\" + unit + '\\'' +\n+                '}';\n+    }\n+}\n+"
  },
  {
    "sha": "b461b4113e39c1b0f0c3114140c3f4741ad12a89",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/ExtraFoodShop.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/ExtraFoodShop.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/ExtraFoodShop.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/ExtraFoodShop.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,62 @@\n+package com.kodilla.good.patterns.challenge3.produce;\n+\n+import com.kodilla.good.patterns.challenge3.model.Product;\n+import com.kodilla.good.patterns.challenge3.model.Quantity;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class ExtraFoodShop implements Food2Door {\n+\n+    private static Map<Product, Quantity> products;\n+    private boolean ordered;\n+\n+    public ExtraFoodShop() {\n+        this.products = new LinkedHashMap<>();\n+    }\n+\n+    @Override\n+    public Map<Product, Quantity> getProducts() {\n+        return products;\n+    }\n+\n+    @Override\n+    public boolean getOrdered() {\n+        return ordered;\n+    }\n+\n+    @Override\n+    public String producerInfo() {\n+        return \"ExtraFoodShop\";\n+    }\n+\n+    @Override\n+    public void addProduct(Product product, Quantity quantity) {\n+        products.put(product, quantity);\n+    }\n+\n+    @Override\n+    public void process(Product productOrder, Quantity quantityOrder) {\n+        if (quantityOrder.getQuantity() > products.get(productOrder).getQuantity()) {\n+            ordered = false;\n+        } else {\n+            products.put(productOrder, new Quantity(products.get(productOrder).getQuantity() - quantityOrder.getQuantity(), quantityOrder.getUnit()));\n+            ordered = true;\n+        }\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        ExtraFoodShop that = (ExtraFoodShop) o;\n+        return ordered == that.ordered && Objects.equals(products, that.products);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(products, ordered);\n+    }\n+}\n+"
  },
  {
    "sha": "89990223825b4a51ae40c2861b173b112e830a84",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/ExtraFoodShopOffer.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/ExtraFoodShopOffer.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/ExtraFoodShopOffer.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/ExtraFoodShopOffer.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,35 @@\n+package com.kodilla.good.patterns.challenge3.produce;\n+\n+import com.kodilla.good.patterns.challenge3.model.Product;\n+import com.kodilla.good.patterns.challenge3.model.Quantity;\n+\n+import java.util.Objects;\n+\n+public class ExtraFoodShopOffer implements Offer {\n+\n+    private final Food2Door food2Door;\n+\n+    public ExtraFoodShopOffer(Food2Door food2Door) {\n+        this.food2Door = food2Door;\n+    }\n+\n+    @Override\n+    public void addProduct() {\n+        food2Door.addProduct(new Product(\"product1\"), new Quantity(1000, \"pieces\"));\n+        food2Door.addProduct(new Product(\"product2\"), new Quantity(150, \"kg\"));\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        ExtraFoodShopOffer that = (ExtraFoodShopOffer) o;\n+        return Objects.equals(food2Door, that.food2Door);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(food2Door);\n+    }\n+}\n+"
  },
  {
    "sha": "e80922af9dbd78a90e059102936de130e83041b5",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/Food2Door.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/Food2Door.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/Food2Door.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/Food2Door.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,39 @@\n+package com.kodilla.good.patterns.challenge3.produce;\n+\n+import com.kodilla.good.patterns.challenge3.model.Product;\n+import com.kodilla.good.patterns.challenge3.model.Quantity;\n+\n+import java.util.Map;\n+\n+public interface Food2Door {\n+\n+    Map<Product, Quantity> getProducts();\n+\n+    default void printProducts(Map<Product, Quantity> products) {\n+        System.out.println(products);\n+    }\n+\n+    boolean getOrdered();\n+\n+    String producerInfo();\n+\n+    default void printProducerInfo(String producerInfo) {\n+        System.out.println(producerInfo);\n+    }\n+\n+    default void printOrderProduct(Product product, Quantity quantity) {\n+        System.out.println(\"The order is: \" + product + \" \" + quantity);\n+    }\n+\n+    void addProduct(Product product, Quantity quantity);\n+\n+    void process(Product productOrder, Quantity quantityOrder);\n+\n+    default void printOrderConfirmed() {\n+        System.out.println(\"The order has been confirmed.\");\n+    }\n+    default void printOrderRejected() {\n+        System.out.println(\"The order has been rejected.\");\n+    }\n+}\n+"
  },
  {
    "sha": "e3188f9271a127da8423a8a28b04b2834b2e8ac7",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/GlutenFreeShop.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/GlutenFreeShop.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/GlutenFreeShop.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/GlutenFreeShop.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,62 @@\n+package com.kodilla.good.patterns.challenge3.produce;\n+\n+import com.kodilla.good.patterns.challenge3.model.Product;\n+import com.kodilla.good.patterns.challenge3.model.Quantity;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class GlutenFreeShop implements Food2Door {\n+\n+    private static Map<Product, Quantity> products;\n+    private boolean ordered;\n+\n+    public GlutenFreeShop() {\n+        this.products = new LinkedHashMap<>();\n+    }\n+\n+    @Override\n+    public Map<Product, Quantity> getProducts() {\n+        return products;\n+    }\n+\n+    @Override\n+    public boolean getOrdered() {\n+        return ordered;\n+    }\n+\n+    @Override\n+    public String producerInfo() {\n+        return \"GlutenFreeShop\";\n+    }\n+\n+    @Override\n+    public void addProduct(Product product, Quantity quantity) {\n+        products.put(product, quantity);\n+    }\n+\n+    @Override\n+    public void process(Product productOrder, Quantity quantityOrder) {\n+        if (quantityOrder.getQuantity() > products.get(productOrder).getQuantity()) {\n+            ordered = false;\n+        } else {\n+            products.put(productOrder, new Quantity(products.get(productOrder).getQuantity() - quantityOrder.getQuantity(), quantityOrder.getUnit()));\n+            ordered = true;\n+        }\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        GlutenFreeShop that = (GlutenFreeShop) o;\n+        return ordered == that.ordered && Objects.equals(products, that.products);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(products, ordered);\n+    }\n+}\n+"
  },
  {
    "sha": "4930d6e302c4a2134611dd828d1067f529e91cb8",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/GlutenFreeShopOffer.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/GlutenFreeShopOffer.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/GlutenFreeShopOffer.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/GlutenFreeShopOffer.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,35 @@\n+package com.kodilla.good.patterns.challenge3.produce;\n+\n+import com.kodilla.good.patterns.challenge3.model.Product;\n+import com.kodilla.good.patterns.challenge3.model.Quantity;\n+\n+import java.util.Objects;\n+\n+public class GlutenFreeShopOffer implements Offer {\n+\n+    private final Food2Door food2Door;\n+\n+    public GlutenFreeShopOffer(Food2Door food2Door) {\n+        this.food2Door = food2Door;\n+    }\n+\n+    @Override\n+    public void addProduct() {\n+        food2Door.addProduct(new Product(\"product1\"), new Quantity(1500, \"kg\"));\n+        food2Door.addProduct(new Product(\"product2\"), new Quantity(850, \"pieces\"));\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        GlutenFreeShopOffer that = (GlutenFreeShopOffer) o;\n+        return Objects.equals(food2Door, that.food2Door);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(food2Door);\n+    }\n+}\n+"
  },
  {
    "sha": "e50ae243df49cb437a73a290645910985af1a6fc",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/HealthyShop.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/HealthyShop.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/HealthyShop.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/HealthyShop.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,62 @@\n+package com.kodilla.good.patterns.challenge3.produce;\n+\n+import com.kodilla.good.patterns.challenge3.model.Product;\n+import com.kodilla.good.patterns.challenge3.model.Quantity;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class HealthyShop implements Food2Door {\n+\n+    private static Map<Product, Quantity> products;\n+    private boolean ordered;\n+\n+    public HealthyShop() {\n+        this.products = new LinkedHashMap<>();\n+    }\n+\n+    @Override\n+    public Map<Product, Quantity> getProducts() {\n+        return products;\n+    }\n+\n+    @Override\n+    public boolean getOrdered() {\n+        return ordered;\n+    }\n+\n+    @Override\n+    public String producerInfo() {\n+        return \"HealthyShop\";\n+    }\n+\n+    @Override\n+    public void addProduct(Product product, Quantity quantity) {\n+        products.put(product, quantity);\n+    }\n+\n+    @Override\n+    public void process(Product productOrder, Quantity quantityOrder) {\n+        if (quantityOrder.getQuantity() > products.get(productOrder).getQuantity()) {\n+            ordered = false;\n+        } else {\n+            products.put(productOrder, new Quantity(products.get(productOrder).getQuantity() - quantityOrder.getQuantity(), quantityOrder.getUnit()));\n+            ordered = true;\n+        }\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        HealthyShop that = (HealthyShop) o;\n+        return ordered == that.ordered && Objects.equals(products, that.products);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(products, ordered);\n+    }\n+}\n+"
  },
  {
    "sha": "a8175add072b318557a7f70bf074c8a00164d0b1",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/HealthyShopOffer.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/HealthyShopOffer.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/HealthyShopOffer.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/HealthyShopOffer.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,35 @@\n+package com.kodilla.good.patterns.challenge3.produce;\n+\n+import com.kodilla.good.patterns.challenge3.model.Product;\n+import com.kodilla.good.patterns.challenge3.model.Quantity;\n+\n+import java.util.Objects;\n+\n+public class HealthyShopOffer implements Offer {\n+\n+    private final Food2Door food2Door;\n+\n+    public HealthyShopOffer(Food2Door food2Door) {\n+        this.food2Door = food2Door;\n+    }\n+\n+    @Override\n+    public void addProduct() {\n+        food2Door.addProduct(new Product(\"product1\"), new Quantity(200, \"kg\"));\n+        food2Door.addProduct(new Product(\"product2\"), new Quantity(230, \"pieces\"));\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        HealthyShopOffer that = (HealthyShopOffer) o;\n+        return Objects.equals(food2Door, that.food2Door);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(food2Door);\n+    }\n+}\n+"
  },
  {
    "sha": "53371bf3f37020b3209c0e1c525dcd07f81b4bc5",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/Offer.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/Offer.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/Offer.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/produce/Offer.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,7 @@\n+package com.kodilla.good.patterns.challenge3.produce;\n+\n+public interface Offer {\n+\n+    void addProduct();\n+}\n+"
  },
  {
    "sha": "8b3292b0cf92f2567f791c4f7a1cb063d8ddda11",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/ProducerAdder.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/ProducerAdder.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/ProducerAdder.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/ProducerAdder.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,21 @@\n+package com.kodilla.good.patterns.challenge3.repository;\n+\n+import com.kodilla.good.patterns.challenge3.produce.ExtraFoodShop;\n+import com.kodilla.good.patterns.challenge3.produce.GlutenFreeShop;\n+import com.kodilla.good.patterns.challenge3.produce.HealthyShop;\n+\n+public class ProducerAdder {\n+\n+    private final Repository producerRepository;\n+\n+    public ProducerAdder() {\n+        producerRepository = new ProducerRepository();\n+    }\n+\n+    public void addToRepository() {\n+        producerRepository.add(new ExtraFoodShop());\n+        producerRepository.add(new HealthyShop());\n+        producerRepository.add(new GlutenFreeShop());\n+    }\n+}\n+"
  },
  {
    "sha": "88824b2e632c5ef790a1968a22349dcdf67f68ad",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/ProducerRepository.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/ProducerRepository.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/ProducerRepository.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/ProducerRepository.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,20 @@\n+package com.kodilla.good.patterns.challenge3.repository;\n+\n+import com.kodilla.good.patterns.challenge3.produce.Food2Door;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class ProducerRepository implements Repository {\n+\n+    private static Set<Food2Door> producers = new HashSet<>();\n+\n+    public void add(Food2Door producer) {\n+        producers.add(producer);\n+    }\n+\n+    public Set<Food2Door> getProducers() {\n+        return producers;\n+    }\n+}\n+"
  },
  {
    "sha": "fe16b792ff914d718876beff48385eb14d481c7e",
    "filename": "kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/Repository.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/barteknat/barteknat-kodilla/blob/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/Repository.java",
    "raw_url": "https://github.com/barteknat/barteknat-kodilla/raw/f36b716fde1283906286aae3e3e32c66c33ff9ec/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/Repository.java",
    "contents_url": "https://api.github.com/repos/barteknat/barteknat-kodilla/contents/kodilla-good-patterns/src/main/java/com/kodilla/good/patterns/challenge3/repository/Repository.java?ref=f36b716fde1283906286aae3e3e32c66c33ff9ec",
    "patch": "@@ -0,0 +1,13 @@\n+package com.kodilla.good.patterns.challenge3.repository;\n+\n+import com.kodilla.good.patterns.challenge3.produce.Food2Door;\n+\n+import java.util.Set;\n+\n+public interface Repository {\n+\n+    void add(Food2Door producer);\n+\n+    Set<Food2Door> getProducers();\n+}\n+"
  }
]
