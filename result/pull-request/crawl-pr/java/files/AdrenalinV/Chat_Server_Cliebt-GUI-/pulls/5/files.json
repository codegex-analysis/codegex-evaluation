[
  {
    "sha": "48e8499c147b7cbc7b5164c48b260a8c30f5732d",
    "filename": ".idea/compiler.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/.idea/compiler.xml",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/.idea/compiler.xml?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -2,6 +2,7 @@\n <project version=\"4\">\n   <component name=\"CompilerConfiguration\">\n     <annotationProcessing>\n+      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\n       <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n         <sourceOutputDir name=\"target/generated-sources/annotations\" />\n         <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />"
  },
  {
    "sha": "0506917f66c046671e043650676cfc1616775613",
    "filename": "ClientGui/pom.xml",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/ClientGui/pom.xml",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/ClientGui/pom.xml",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/ClientGui/pom.xml?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -2,8 +2,12 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-    <groupId>GB.ru</groupId>\n-    <version>1.0-SNAPSHOT</version>\n+    <parent>\n+        <artifactId>ChatGui</artifactId>\n+        <groupId>GB.ru</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+\n     <modelVersion>4.0.0</modelVersion>\n \n     <artifactId>ClientGui</artifactId>"
  },
  {
    "sha": "7ef3cca798bf0d9fafd2f7b8f33a422c4fd4f5c2",
    "filename": "CoreMsg/pom.xml",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/CoreMsg/pom.xml",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/CoreMsg/pom.xml",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/CoreMsg/pom.xml?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -3,9 +3,11 @@\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \n-\n+<parent>\n+    <artifactId>ChatGui</artifactId>\n     <groupId>GB.ru</groupId>\n     <version>1.0-SNAPSHOT</version>\n+</parent>\n \n     <modelVersion>4.0.0</modelVersion>\n "
  },
  {
    "sha": "e4861586f07ab96238bc06e306cc6a5347d7c7d3",
    "filename": "serverChat/pom.xml",
    "status": "modified",
    "additions": 21,
    "deletions": 5,
    "changes": 26,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/pom.xml",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/pom.xml",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/serverChat/pom.xml?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -2,9 +2,12 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-\n+<parent>\n+    <artifactId>ChatGui</artifactId>\n     <groupId>GB.ru</groupId>\n     <version>1.0-SNAPSHOT</version>\n+</parent>\n+\n     <modelVersion>4.0.0</modelVersion>\n \n     <artifactId>serverChat</artifactId>\n@@ -26,11 +29,24 @@\n             <version>4.4</version>\n             <scope>test</scope>\n         </dependency>\n-        <!-- https://mvnrepository.com/artifact/log4j/log4j -->\n+        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-api</artifactId>\n+            <version>2.14.0</version>\n+        </dependency>\n+        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-core</artifactId>\n+            <version>2.14.0</version>\n+        </dependency>\n+        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->\n         <dependency>\n-            <groupId>log4j</groupId>\n-            <artifactId>log4j</artifactId>\n-            <version>1.2.17</version>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>1.18.18</version>\n+            <scope>provided</scope>\n         </dependency>\n     </dependencies>\n "
  },
  {
    "sha": "bb133874f26cd780c3ee33442ba0d6a45c861fe2",
    "filename": "serverChat/src/main/java/BaseAuthService.java",
    "status": "modified",
    "additions": 15,
    "deletions": 6,
    "changes": 21,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/java/BaseAuthService.java",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/java/BaseAuthService.java",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/serverChat/src/main/java/BaseAuthService.java?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -1,9 +1,12 @@\n \n+\n import java.nio.charset.StandardCharsets;\n import java.security.MessageDigest;\n import java.security.NoSuchAlgorithmException;\n import java.sql.*;\n \n+import org.apache.logging.log4j.Logger;\n+import org.apache.logging.log4j.LogManager;\n \n interface AuthService {\n     void start() throws SQLException;\n@@ -12,14 +15,16 @@\n \n     void createUser(String userName, String plainUserPassword);\n \n-    void updateNickName(String newNickName,String oldNickName) ;\n+    void updateNickName(String newNickName, String oldNickName);\n \n     boolean existUser(String userName);\n \n     void stop();\n }\n \n+\n public class BaseAuthService implements AuthService {\n+    public static final Logger log = LogManager.getLogger(BaseAuthService.class.getName());\n     private static final String INIT_DB = \"CREATE TABLE IF NOT EXISTS users (id INTEGER  PRIMARY KEY AUTOINCREMENT NOT NULL, login TEXT UNIQUE NOT NULL, pass TEXT NOT NULL, nickName TEXT UNIQUE NOT NULL)\";\n     private static final String EXIST_USER = \"SELECT * FROM users WHERE login=?\";\n     private static final String ADD_USER = \"INSERT INTO users(login, pass, nickName) VALUES (?, ?, ?)\";\n@@ -28,11 +33,12 @@\n     private static final String SUPER_SECRET_SALT = \"MY_MOM_MAKES_COFFEE\";\n \n     public void createUser(String userName, String plainUserPassword) {\n+        log.trace(\"create new user: {}\", userName);\n         try (Connection connection = DataSource.getConnection();\n              PreparedStatement ps = connection.prepareStatement(ADD_USER)) {\n             ps.setString(1, userName);\n             ps.setString(2, getPassword(plainUserPassword));\n-            ps.setString(3,userName);\n+            ps.setString(3, userName);\n             ps.executeUpdate();\n         } catch (SQLException e) {\n             e.printStackTrace();\n@@ -41,7 +47,8 @@ public void createUser(String userName, String plainUserPassword) {\n \n \n     @Override\n-    public void updateNickName(String newNickName,String oldNickName) {\n+    public void updateNickName(String newNickName, String oldNickName) {\n+        log.trace(\"Update nickName user: {} newNikName: {}\", oldNickName, newNickName);\n         try (Connection con = DataSource.getConnection();\n              PreparedStatement ps = con.prepareStatement(UPDATE_NICKNAME)) {\n             ps.setString(1, newNickName);\n@@ -75,6 +82,7 @@ public static String bytesToHex(byte[] bytes) {\n \n \n     private String getNickName(String userName, String cipheredPassword) {\n+        log.trace(\"get nickName user: {}\", userName);\n         String nickName = null;\n         try (Connection connection = DataSource.getConnection();\n              PreparedStatement ps = connection.prepareStatement(GET_NICK_BY_LOGIN_PASS)) {\n@@ -92,6 +100,7 @@ private String getNickName(String userName, String cipheredPassword) {\n \n     @Override\n     public boolean existUser(String userName) {\n+        log.trace(\"exist nickName user: {}\", userName);\n         boolean isExist = false;\n         try (Connection con = DataSource.getConnection();\n              PreparedStatement ps = con.prepareStatement(EXIST_USER)) {\n@@ -111,19 +120,19 @@ public void start() throws SQLException {\n         try (Connection con = DataSource.getConnection();\n              Statement st = con.createStatement()) {\n             st.executeUpdate(INIT_DB);\n-            System.out.println(\"[DEBUG] сервис аутентификации запущен\");\n+            log.debug(\"сервис аутентификации запущен\");\n         }\n \n     }\n \n     @Override\n     public void stop() {\n-        System.out.println(\"[DEBUG] сервис аутентификации остановлен\");\n+        log.debug(\"сервис аутентификации остановлен\");\n     }\n \n \n     @Override\n     public String getNickByLoginPass(String login, String pass) {\n-        return getNickName(login,getPassword(pass));\n+        return getNickName(login, getPassword(pass));\n     }\n }"
  },
  {
    "sha": "8b3ee640657cbc0b8a619ab17f049dbd37695873",
    "filename": "serverChat/src/main/java/ClientHandler.java",
    "status": "modified",
    "additions": 17,
    "deletions": 3,
    "changes": 20,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/java/ClientHandler.java",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/java/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/serverChat/src/main/java/ClientHandler.java?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -1,11 +1,15 @@\n \n+import lombok.extern.log4j.Log4j2;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.net.Socket;\n-import java.sql.SQLException;\n-\n+@Log4j2\n public class ClientHandler implements Runnable {\n+    public static final Logger slog = LogManager.getLogger(\"Secure\");\n     private final ServerChat server;\n     private final Socket socket;\n     private ObjectOutputStream out;\n@@ -34,12 +38,16 @@ public void run() {\n             tA.start();\n             tA.join(WAIT_TIME_MS);\n             if (tA.isAlive()) {\n+                log.trace(\"timeout expired\");\n                 sendMsg(TextMessage.of(\"Service\", \"Соединение разорвано.\"));\n                 sendMsg(new QuitRequest());\n             }\n+            org.apache.logging.log4j.ThreadContext.put(\"user\", nickName);\n+            log.info(\"authentication completed\");\n             while (true) {\n                 msg = in.readObject();\n                 if (msg instanceof QuitRequest) {              // отправка при закрытие клиента\n+                    log.trace(\"request quit\");\n                     out.writeObject(msg);\n                     out.flush();\n                 } else if (msg instanceof TextMessage) {      //  сообщения\n@@ -55,11 +63,13 @@ public void run() {\n                         server.getAuthService().updateNickName(uMSG.getNewNick(), this.nickName);\n                         this.nickName= uMSG.getNewNick();\n                         server.getUsersList();\n+                        log.info(\"Update nickName\");\n+                        org.apache.logging.log4j.ThreadContext.put(\"user\", nickName);\n                     }\n                 }\n             }\n         } catch (ClassNotFoundException | IOException | InterruptedException ioException) {\n-            System.err.println(\"Handled connection was broken\");\n+            log.debug(\"user connection was broken\");\n             try {\n                 server.removeClient(this);\n             } catch (IOException e) {\n@@ -85,18 +95,22 @@ public void authentication() throws IOException, ClassNotFoundException {\n                         out.writeObject(aMSG);\n                         out.flush();\n                         nickName = nick;\n+                        slog.info(\"authentication completed User: {} nikName: {}\",aMSG.getLogin(),nickName);\n                         server.addClient(this);\n                         return;\n                     } else {\n                         sendMsg(TextMessage.of(\"Service\", \"Учетная запись уже используется\"));\n+                        slog.warn(\"authentication error User: {} already in use\",aMSG.getLogin());\n                         sendMsg(aMSG);\n \n                     }\n                 } else {\n                     if (server.getAuthService().existUser(aMSG.getLogin())) {\n                         sendMsg(TextMessage.of(\"Service\", \"Неверный пароль.\"));\n+                        slog.warn(\"authentication error User: {} password: {}\",aMSG.getLogin(),aMSG.getPass());\n                     } else {\n                         sendMsg(TextMessage.of(\"Service\", \"Пользователь не найден.\"));\n+                        slog.warn(\"authentication error User: {} not found\",aMSG.getLogin());\n                         sendMsg(aMSG);\n                         sendMsg(CreateUserRequest.of());\n                     }"
  },
  {
    "sha": "d682bfe6b886beb94f9b6cac2212a2976bfefdee",
    "filename": "serverChat/src/main/java/DataSource.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/java/DataSource.java",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/java/DataSource.java",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/serverChat/src/main/java/DataSource.java?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -1,10 +1,12 @@\n \n \n+import lombok.extern.log4j.Log4j2;\n+\n import java.sql.Connection;\n import java.sql.DriverManager;\n import java.sql.SQLException;\n \n-\n+@Log4j2\n public class DataSource {\n     private static final String URL=\"jdbc:sqlite:users.db\";\n \n@@ -14,6 +16,7 @@\n             Class.forName(\"org.sqlite.JDBC\");\n         } catch (ClassNotFoundException e) {\n             e.printStackTrace();\n+            log.fatal(\"Database Driver initialization Error\");\n             throw new RuntimeException(\"Database Driver initialization Error\");\n         }\n "
  },
  {
    "sha": "b2686aefc27ccf517f6daac694cb23cde1a629b5",
    "filename": "serverChat/src/main/java/Lesson_6.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/java/Lesson_6.java",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/java/Lesson_6.java",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/serverChat/src/main/java/Lesson_6.java?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -0,0 +1,35 @@\n+import java.util.Arrays;\n+\n+public class Lesson_6 {\n+    public static void main(String[] args) {\n+\n+\n+    }\n+\n+    public static int[] arrayAfterFour(int[] arr) throws RuntimeException {\n+        for (int i = arr.length - 1; i >= 0; i--) {\n+            if (arr[i] == 4) {\n+                return Arrays.copyOfRange(arr, i + 1, arr.length);\n+            }\n+        }\n+        throw new IllegalArgumentException();\n+    }\n+\n+    public static boolean arrayByOneAndFour(int[] arr) {\n+        boolean existOne = false;\n+        boolean existFour = false;\n+        for (int j : arr) {\n+            switch (j) {\n+                case 1:\n+                    existOne = true;\n+                    break;\n+                case 4:\n+                    existFour = true;\n+                    break;\n+                default:\n+                    return false;\n+            }\n+        }\n+        return existFour && existOne;\n+    }\n+}"
  },
  {
    "sha": "6d340e3d5c8221fe98c29807b2c6bae589ebd485",
    "filename": "serverChat/src/main/java/ServerChat.java",
    "status": "modified",
    "additions": 6,
    "deletions": 4,
    "changes": 10,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/java/ServerChat.java",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/java/ServerChat.java",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/serverChat/src/main/java/ServerChat.java?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -1,11 +1,13 @@\n+import lombok.extern.log4j.Log4j2;\n+\n import java.io.IOException;\n import java.net.ServerSocket;\n import java.net.Socket;\n import java.sql.SQLException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.concurrent.ConcurrentLinkedDeque;\n-\n+@Log4j2\n public class ServerChat {\n     private static final int DEFAULT_PORT = 8189;\n     private final ConcurrentLinkedDeque<ClientHandler> clients;\n@@ -24,12 +26,12 @@ public ServerChat(int port) throws SQLException {\n         try (ServerSocket server = new ServerSocket(port)) {\n             while (true) {\n                 Socket socket = server.accept();\n-                System.out.println(\"[DEBUG] Client accepted\");\n+                log.debug(\"Client accepted\");\n                 ClientHandler handler = new ClientHandler(this, socket);\n                 new Thread(handler).start();\n             }\n         } catch (IOException e) {\n-            System.err.println(\"Server was broken\");\n+            log.fatal(\"Server was broken\");\n         } finally {\n             if (authService != null) {\n                 authService.stop();\n@@ -67,7 +69,7 @@ public static void main(String[] args) {\n     // удаление клиента\n     public void removeClient(ClientHandler clientHandler) throws IOException {\n         clients.remove(clientHandler);\n-        System.out.println(\"[DEBUG] client removed from broadcast server\");\n+        log.debug(\"Client removed from broadcast server\");\n         getUsersList();\n \n     }"
  },
  {
    "sha": "baf0114331b32be17066dc1ee8855de8664f1711",
    "filename": "serverChat/src/main/resources/log4j2.xml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/resources/log4j2.xml",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/resources/log4j2.xml",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/serverChat/src/main/resources/log4j2.xml?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"WARN\">\n+    <Appenders>\n+        <Console name=\"Console\">\n+            <PatternLayout pattern=\"%X{user} %d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n\"/>\n+        </Console>\n+        <File name=\"File\" fileName=\"logs/ServerSecure.log\">\n+            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n\"/>\n+        </File>\n+    </Appenders>\n+    <Loggers>\n+        <Root level=\"debug\">\n+            <AppenderRef ref=\"Console\"/>\n+        </Root>\n+        <Logger name=\"Secure\" level=\"warn\" additivity=\"false\">\n+            <AppenderRef ref=\"File\"/>\n+        </Logger>\n+    </Loggers>\n+</Configuration>\n\\ No newline at end of file"
  },
  {
    "sha": "b3657860754183fa46fdf9cc8b2b3da56328a728",
    "filename": "serverChat/src/main/test/Lesson_6Test.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/blob/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/test/Lesson_6Test.java",
    "raw_url": "https://github.com/AdrenalinV/Chat_Server_Cliebt-GUI-/raw/25b74308d374c89b62a5d1c747582f1c075d11b6/serverChat/src/main/test/Lesson_6Test.java",
    "contents_url": "https://api.github.com/repos/AdrenalinV/Chat_Server_Cliebt-GUI-/contents/serverChat/src/main/test/Lesson_6Test.java?ref=25b74308d374c89b62a5d1c747582f1c075d11b6",
    "patch": "@@ -0,0 +1,49 @@\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class Lesson_6Test {\n+\n+    @Test\n+    public void toearrayAfterFour() {\n+        int[] arr = Lesson_6.arrayAfterFour(new int[]{1, 4, 3, 6, 4, 9, 4, 56, 7});\n+        int[] referenceArr = new int[]{56, 7};\n+        Assert.assertArrayEquals(arr, referenceArr);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void exceptionarrayAfterFour() throws RuntimeException {\n+        int[] arr = Lesson_6.arrayAfterFour(new int[]{1, 2, 3, 6, 58, 9, 7, 56, 7});\n+\n+    }\n+\n+    @Test\n+    public void lastarrayAfterFour() {\n+        int[] arr = Lesson_6.arrayAfterFour(new int[]{1, 2, 3, 6, 58, 9, 7, 56, 4});\n+        int[] referenceArr = new int[]{};\n+        Assert.assertArrayEquals(arr, referenceArr);\n+    }\n+\n+    @Test\n+    public void firstarrayAfterFour() {\n+        int[] arr = Lesson_6.arrayAfterFour(new int[]{4, 2, 3, 6, 58, 9, 7, 56, 7});\n+        int[] referenceArr = new int[]{2, 3, 6, 58, 9, 7, 56, 7};\n+        Assert.assertArrayEquals(arr, referenceArr);\n+    }\n+    @Test\n+    public void truearrayByOneAndFour(){\n+        Assert.assertTrue(Lesson_6.arrayByOneAndFour(new int[]{1, 4, 1, 4, 1, 4, 1, 4, 1}));\n+    }\n+    @Test\n+    public void falsearrayByOneAndFour(){\n+        Assert.assertFalse(Lesson_6.arrayByOneAndFour(new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1}));\n+    }\n+    @Test\n+    public void false2arrayByOneAndFour(){\n+        Assert.assertFalse(Lesson_6.arrayByOneAndFour(new int[]{1, 4, 5, 1, 1, 1, 1, 1, 1}));\n+    }\n+    @Test\n+    public void false3arrayByOneAndFour(){\n+        Assert.assertFalse(Lesson_6.arrayByOneAndFour(new int[]{4, 4, 4, 4, 4, 4, 4, 4, 4}));\n+    }\n+\n+}"
  }
]
