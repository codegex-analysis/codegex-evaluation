[
  {
    "sha": "c58d7e524a228f410abad65954ef82544293577c",
    "filename": "src/main/java/com/rankerapp/db/converters/ListCategoryConverter.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/nirkraw/Ranqet/blob/57822d8ec46725d51c9a3d0e11408a86d30e45d4/src/main/java/com/rankerapp/db/converters/ListCategoryConverter.java",
    "raw_url": "https://github.com/nirkraw/Ranqet/raw/57822d8ec46725d51c9a3d0e11408a86d30e45d4/src/main/java/com/rankerapp/db/converters/ListCategoryConverter.java",
    "contents_url": "https://api.github.com/repos/nirkraw/Ranqet/contents/src/main/java/com/rankerapp/db/converters/ListCategoryConverter.java?ref=57822d8ec46725d51c9a3d0e11408a86d30e45d4",
    "patch": "@@ -0,0 +1,27 @@\n+package com.rankerapp.db.converters;\n+\n+import com.rankerapp.db.model.ListCategory;\n+\n+import javax.persistence.AttributeConverter;\n+import javax.persistence.Converter;\n+\n+@Converter(autoApply = true)\n+public class ListCategoryConverter implements AttributeConverter<ListCategory, String> {\n+    \n+    @Override\n+    public String convertToDatabaseColumn(ListCategory attribute) {\n+        if (attribute == null) {\n+            return null;\n+        }\n+        return attribute.name();\n+    }\n+    \n+    @Override\n+    public ListCategory convertToEntityAttribute(String dbData) {\n+        try {\n+            return ListCategory.valueOf(dbData);\n+        } catch (IllegalArgumentException e) {\n+            return ListCategory.MISC;\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "06518b7f79450c62c5c61b3ef32f877139f6074b",
    "filename": "src/main/java/com/rankerapp/db/model/ListCategory.java",
    "status": "modified",
    "additions": 9,
    "deletions": 1,
    "changes": 10,
    "blob_url": "https://github.com/nirkraw/Ranqet/blob/57822d8ec46725d51c9a3d0e11408a86d30e45d4/src/main/java/com/rankerapp/db/model/ListCategory.java",
    "raw_url": "https://github.com/nirkraw/Ranqet/raw/57822d8ec46725d51c9a3d0e11408a86d30e45d4/src/main/java/com/rankerapp/db/model/ListCategory.java",
    "contents_url": "https://api.github.com/repos/nirkraw/Ranqet/contents/src/main/java/com/rankerapp/db/model/ListCategory.java?ref=57822d8ec46725d51c9a3d0e11408a86d30e45d4",
    "patch": "@@ -5,12 +5,16 @@\n \n public enum ListCategory {\n     SPORTS(\"SPORTS\"),\n+    @Deprecated\n     MUSIC(\"MUSIC\"),\n     MOVIES_TV(\"MOVIES_TV\"),\n+    @Deprecated\n     FUN(\"FUN\"),\n     MISC(\"MISC\"),\n+    @Deprecated\n     POLITICS(\"POLITICS\"),\n     SOCIAL(\"SOCIAL\"),\n+    @Deprecated\n     BUSINESS(\"BUSINESS\");\n \n     private final String value;\n@@ -31,6 +35,10 @@ public String toString() {\n     }\n \n     public com.rankerapp.transport.model.ListCategory toTransportModel() {\n-        return com.rankerapp.transport.model.ListCategory.valueOf(value);\n+        try {\n+            return com.rankerapp.transport.model.ListCategory.valueOf(value);\n+        } catch (IllegalArgumentException e) {\n+            return com.rankerapp.transport.model.ListCategory.MISC;\n+        }\n     }\n }"
  },
  {
    "sha": "341601311a74048f6e35adca3a86afe24bd8f3e4",
    "filename": "src/main/java/com/rankerapp/resource/RankerAppResource.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/nirkraw/Ranqet/blob/57822d8ec46725d51c9a3d0e11408a86d30e45d4/src/main/java/com/rankerapp/resource/RankerAppResource.java",
    "raw_url": "https://github.com/nirkraw/Ranqet/raw/57822d8ec46725d51c9a3d0e11408a86d30e45d4/src/main/java/com/rankerapp/resource/RankerAppResource.java",
    "contents_url": "https://api.github.com/repos/nirkraw/Ranqet/contents/src/main/java/com/rankerapp/resource/RankerAppResource.java?ref=57822d8ec46725d51c9a3d0e11408a86d30e45d4",
    "patch": "@@ -60,6 +60,7 @@ public void togglePrivacyForList(@PathVariable(value = \"listId\") String listId,\n \n     @CrossOrigin(origins = \"http://localhost:3000\")\n     @GetMapping(\"/lists/top\")\n+    @Deprecated // in favor of getLists()\n     public GenericListsResponse getTopLists(@RequestParam(value = \"category\", required = false) ListCategory listCategory) {\n         if (Objects.isNull(listCategory)) {\n             return listFetcher.getTopLists();\n@@ -69,6 +70,7 @@ public GenericListsResponse getTopLists(@RequestParam(value = \"category\", requir\n \n     @CrossOrigin(origins = \"http://localhost:3000\")\n     @GetMapping(\"/lists/new\")\n+    @Deprecated // in favor of getLists()\n     public GenericListsResponse getNewLists() {\n         return listFetcher.getNewLists();\n     }\n@@ -109,7 +111,7 @@ public GenericListsResponse searchForListsByName(@RequestParam(value = \"query\")\n \n     @CrossOrigin(origins = \"http://localhost:3000\")\n     @GetMapping(\"/lists/user/{userId}/all\")\n-    // TODO: Separate these out into individual endpoints\n+    @Deprecated // in favor of getUserLists\n     public GetAllUserListsResponse getAllUserLists(@PathVariable(value = \"userId\") String userId,\n             @RequestParam(value = \"sessionToken\") String sessionToken) {\n         if (StringUtils.isEmpty(sessionToken)) {"
  },
  {
    "sha": "1ad83131271d01bd7bd684a819a2a3a9bb4642cb",
    "filename": "src/main/java/com/rankerapp/transport/model/ListCategory.java",
    "status": "modified",
    "additions": 1,
    "deletions": 5,
    "changes": 6,
    "blob_url": "https://github.com/nirkraw/Ranqet/blob/57822d8ec46725d51c9a3d0e11408a86d30e45d4/src/main/java/com/rankerapp/transport/model/ListCategory.java",
    "raw_url": "https://github.com/nirkraw/Ranqet/raw/57822d8ec46725d51c9a3d0e11408a86d30e45d4/src/main/java/com/rankerapp/transport/model/ListCategory.java",
    "contents_url": "https://api.github.com/repos/nirkraw/Ranqet/contents/src/main/java/com/rankerapp/transport/model/ListCategory.java?ref=57822d8ec46725d51c9a3d0e11408a86d30e45d4",
    "patch": "@@ -5,12 +5,8 @@\n     NEW,\n     POPULAR,\n     SPORTS,\n-    MUSIC,\n     MOVIES_TV,\n-    FUN,\n     MISC,\n-    POLITICS,\n-    SOCIAL,\n-    BUSINESS\n+    SOCIAL\n \n }"
  }
]
