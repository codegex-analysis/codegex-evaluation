[
  {
    "sha": "7ffa4ba111552b2ef6eaa65093f1bd4a79d512dc",
    "filename": "server/src/main/java/lsfusion/server/data/sql/adapter/DataAdapter.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/lsfusion/platform/blob/479efbfc6cc4e4a2732f681aeb9fd114a04997ef/server/src/main/java/lsfusion/server/data/sql/adapter/DataAdapter.java",
    "raw_url": "https://github.com/lsfusion/platform/raw/479efbfc6cc4e4a2732f681aeb9fd114a04997ef/server/src/main/java/lsfusion/server/data/sql/adapter/DataAdapter.java",
    "contents_url": "https://api.github.com/repos/lsfusion/platform/contents/server/src/main/java/lsfusion/server/data/sql/adapter/DataAdapter.java?ref=479efbfc6cc4e4a2732f681aeb9fd114a04997ef",
    "patch": "@@ -42,6 +42,7 @@\n     public final SQLSyntax syntax;\n \n     public String server;\n+    public Integer port;\n     public String instance;\n     public String dataBase;\n     public String userID;\n@@ -50,13 +51,14 @@\n \n     protected abstract void ensureDB(boolean cleanDB) throws Exception;\n \n-    protected DataAdapter(SQLSyntax syntax, String dataBase, String server, String instance, String userID, String password, Long connectTimeout, boolean cleanDB) throws Exception {\n+    protected DataAdapter(SQLSyntax syntax, String dataBase, String server, Integer port, String instance, String userID, String password, Long connectTimeout, boolean cleanDB) throws Exception {\n \n         Class.forName(syntax.getClassName());\n \n         this.syntax = syntax;\n         \n         this.dataBase = dataBase;\n+        this.port = port;\n         this.server = server;\n         this.userID = userID;\n         this.password = password;"
  },
  {
    "sha": "4b25be0075878f4c14fd9acb1c9f34f4f3b9e328",
    "filename": "server/src/main/java/lsfusion/server/data/sql/adapter/PostgreDataAdapter.java",
    "status": "modified",
    "additions": 11,
    "deletions": 11,
    "changes": 22,
    "blob_url": "https://github.com/lsfusion/platform/blob/479efbfc6cc4e4a2732f681aeb9fd114a04997ef/server/src/main/java/lsfusion/server/data/sql/adapter/PostgreDataAdapter.java",
    "raw_url": "https://github.com/lsfusion/platform/raw/479efbfc6cc4e4a2732f681aeb9fd114a04997ef/server/src/main/java/lsfusion/server/data/sql/adapter/PostgreDataAdapter.java",
    "contents_url": "https://api.github.com/repos/lsfusion/platform/contents/server/src/main/java/lsfusion/server/data/sql/adapter/PostgreDataAdapter.java?ref=479efbfc6cc4e4a2732f681aeb9fd114a04997ef",
    "patch": "@@ -37,20 +37,20 @@\n     private String binPath;\n     private String dumpDir;\n \n-    public PostgreDataAdapter(String dataBase, String server, String userID, String password) throws Exception {\n-        this(dataBase, server, userID, password, false);\n+    public PostgreDataAdapter(String dataBase, String server, Integer port, String userID, String password) throws Exception {\n+        this(dataBase, server, port, userID, password, false);\n     }\n \n-    public PostgreDataAdapter(String dataBase, String server, String userID, String password, boolean cleanDB) throws Exception{\n-        this(dataBase, server, userID, password, null, null, null, cleanDB);\n+    public PostgreDataAdapter(String dataBase, String server, Integer port, String userID, String password, boolean cleanDB) throws Exception{\n+        this(dataBase, server, port, userID, password, null, null, null, cleanDB);\n     }\n \n-    public PostgreDataAdapter(String dataBase, String server, String userID, String password, Long connectTimeout, String binPath, String dumpDir) throws Exception {\n-        this(dataBase, server, userID, password, connectTimeout, binPath, dumpDir, false);\n+    public PostgreDataAdapter(String dataBase, String server, Integer port, String userID, String password, Long connectTimeout, String binPath, String dumpDir) throws Exception {\n+        this(dataBase, server, port, userID, password, connectTimeout, binPath, dumpDir, false);\n     }\n \n-    public PostgreDataAdapter(String dataBase, String server, String userID, String password, Long connectTimeout, String binPath, String dumpDir, boolean cleanDB) throws Exception {\n-        super(PostgreSQLSyntax.instance, dataBase, server, null, userID, password, connectTimeout, cleanDB);\n+    public PostgreDataAdapter(String dataBase, String server, Integer port, String userID, String password, Long connectTimeout, String binPath, String dumpDir, boolean cleanDB) throws Exception {\n+        super(PostgreSQLSyntax.instance, dataBase, server, port, null, userID, password, connectTimeout, cleanDB);\n \n         this.defaultBinPath = binPath;\n         this.defaultDumpDir = dumpDir;\n@@ -71,7 +71,7 @@ public void ensureDB(boolean cleanDB) throws Exception {\n         Connection connect = null;\n         while(connect == null) {\n             try {\n-                connect = DriverManager.getConnection(\"jdbc:postgresql://\" + server + \"/postgres?user=\" + userID + \"&password=\" + password);\n+                connect = DriverManager.getConnection(\"jdbc:postgresql://\" + server + \":\" + port + \"/postgres?user=\" + userID + \"&password=\" + password);\n             } catch (PSQLException e) {\n                 ServerLoggers.startLogger.error(String.format(\"%s (host: %s, user: %s)\", e.getMessage(), server, userID));\n                 logger.error(\"EnsureDB error: \", e);\n@@ -129,7 +129,7 @@ protected String getPath() {\n     public Connection startConnection() throws SQLException {\n         long started = System.currentTimeMillis();\n         try {\n-            return DriverManager.getConnection(\"jdbc:postgresql://\" + server + \"/\" + dataBase.toLowerCase() + \"?user=\" + userID + \"&password=\" + password + \"&connectTimeout=\" + (int) (connectTimeout / 1000));\n+            return DriverManager.getConnection(\"jdbc:postgresql://\" + server + \":\" + port + \"/\" + dataBase.toLowerCase() + \"?user=\" + userID + \"&password=\" + password + \"&connectTimeout=\" + (int) (connectTimeout / 1000));\n         } finally {\n             long elapsed = System.currentTimeMillis() - started;\n             if(elapsed > connectTimeout)\n@@ -318,7 +318,7 @@ public void dropDB(String dbName) throws IOException {\n     public List<List<List<Object>>> readCustomRestoredColumns(String dbName, String table, List<String> keys, List<String> columns) throws SQLException {\n         List<List<Object>> dataKeys = new ArrayList<>();\n         List<List<Object>> dataColumns = new ArrayList<>();\n-        try(Connection connection = DriverManager.getConnection(\"jdbc:postgresql://\" + server + \"/\" + dbName.toLowerCase() + \"?user=\" + userID + \"&password=\" + password)) {\n+        try(Connection connection = DriverManager.getConnection(\"jdbc:postgresql://\" + server + \":\" + port + \"/\" + dbName.toLowerCase() + \"?user=\" + userID + \"&password=\" + password)) {\n             try (Statement statement = connection.createStatement()) {\n                 String column = \"\";\n                 for(String k : keys)"
  },
  {
    "sha": "0a7d1b0072c41bf2e255cb0191927bfe51969535",
    "filename": "server/src/main/java/lsfusion/server/physics/admin/service/action/UploadToDBAction.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/lsfusion/platform/blob/479efbfc6cc4e4a2732f681aeb9fd114a04997ef/server/src/main/java/lsfusion/server/physics/admin/service/action/UploadToDBAction.java",
    "raw_url": "https://github.com/lsfusion/platform/raw/479efbfc6cc4e4a2732f681aeb9fd114a04997ef/server/src/main/java/lsfusion/server/physics/admin/service/action/UploadToDBAction.java",
    "contents_url": "https://api.github.com/repos/lsfusion/platform/contents/server/src/main/java/lsfusion/server/physics/admin/service/action/UploadToDBAction.java?ref=479efbfc6cc4e4a2732f681aeb9fd114a04997ef",
    "patch": "@@ -29,6 +29,7 @@ public void executeInternal(final ExecutionContext<ClassPropertyInterface> conte\n         try {\n             String type = (String) findProperty(\"uploadStaticNameType[]\").read(context);\n             String host = (String) findProperty(\"uploadHost[]\").read(context);\n+            Integer port = (Integer) findProperty(\"uploadPort[]\").read(context);\n             String user = (String) findProperty(\"uploadUser[]\").read(context);\n             String password = (String) findProperty(\"uploadPassword[]\").read(context);\n             String db = (String) findProperty(\"uploadDB[]\").read(context);\n@@ -37,7 +38,7 @@ public void executeInternal(final ExecutionContext<ClassPropertyInterface> conte\n             final DataAdapter adapter;\n             try {\n                 if(type.trim().equals(\"Service_DBType.POSTGRE\"))\n-                    adapter = new PostgreDataAdapter(db, host, user, password);\n+                    adapter = new PostgreDataAdapter(db, host, port, user, password);\n //                else if(type.trim().equals(\"Service_DBType.MSSQL\"))\n //                    adapter = new MSSQLDataAdapter(db, host, user, password, instance);\n                 else"
  },
  {
    "sha": "fb3e5f55a53f3d7093854304b5fed30cfb029190",
    "filename": "server/src/main/resources/lsfusion.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/lsfusion/platform/blob/479efbfc6cc4e4a2732f681aeb9fd114a04997ef/server/src/main/resources/lsfusion.xml",
    "raw_url": "https://github.com/lsfusion/platform/raw/479efbfc6cc4e4a2732f681aeb9fd114a04997ef/server/src/main/resources/lsfusion.xml",
    "contents_url": "https://api.github.com/repos/lsfusion/platform/contents/server/src/main/resources/lsfusion.xml?ref=479efbfc6cc4e4a2732f681aeb9fd114a04997ef",
    "patch": "@@ -144,6 +144,7 @@\n     <bean id=\"dataAdapter\" class=\"lsfusion.server.data.sql.adapter.PostgreDataAdapter\">\n         <constructor-arg value=\"${db.name:lsfusion}\"/>\n         <constructor-arg value=\"${db.server:localhost}\"/>\n+        <constructor-arg value=\"${db.port:5432}\"/>\n         <constructor-arg value=\"${db.user:postgres}\"/>\n         <constructor-arg value=\"${db.password:}\"/>\n         <constructor-arg value=\"${db.connectTimeout:1000}\"/>"
  }
]
