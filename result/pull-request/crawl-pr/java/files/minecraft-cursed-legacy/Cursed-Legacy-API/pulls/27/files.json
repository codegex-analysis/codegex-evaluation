[
  {
    "sha": "aa7d40569272be4cf190c424bce8501fc187c702",
    "filename": "src/main/java/io/github/minecraftcursedlegacy/impl/registry/RegistryImpl.java",
    "status": "modified",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/minecraft-cursed-legacy/Cursed-Legacy-API/blob/ad45f05325217e247b3afd5621250ab220e45bed/src/main/java/io/github/minecraftcursedlegacy/impl/registry/RegistryImpl.java",
    "raw_url": "https://github.com/minecraft-cursed-legacy/Cursed-Legacy-API/raw/ad45f05325217e247b3afd5621250ab220e45bed/src/main/java/io/github/minecraftcursedlegacy/impl/registry/RegistryImpl.java",
    "contents_url": "https://api.github.com/repos/minecraft-cursed-legacy/Cursed-Legacy-API/contents/src/main/java/io/github/minecraftcursedlegacy/impl/registry/RegistryImpl.java?ref=ad45f05325217e247b3afd5621250ab220e45bed",
    "patch": "@@ -37,6 +37,14 @@ private static int nextTileId() {\n \t}\n \n \tprivate static class TileRegistry extends Registry<Tile> {\n+\t\tprivate final Map<Tile, Boolean> ticksRandomly = new HashMap<>();\n+\t\tprivate final Map<Tile, Boolean> isFullOpaque = new HashMap<>();\n+\t\tprivate final Map<Tile, Boolean> hasTileEntity = new HashMap<>();\n+\t\tprivate final Map<Tile, Integer> field_1941 = new HashMap<>();\n+\t\tprivate final Map<Tile, Boolean> field_1942 = new HashMap<>();\n+\t\tprivate final Map<Tile, Integer> field_1943 = new HashMap<>();\n+\t\tprivate final Map<Tile, Boolean> field_1944 = new HashMap<>();\n+\n \t\tprivate TileRegistry(Id registryName) {\n \t\t\tsuper(Tile.class, registryName, null);\n \n@@ -77,7 +85,26 @@ protected int getStartSerialisedId() {\n \t\t@Override\n \t\tprotected void beforeRemap() {\n \t\t\tint size = Tile.BY_ID.length;\n+\n+\t\t\tfor (int i = 0; i < size; i++) {\n+\t\t\t\tTile tile = Tile.BY_ID[i];\n+\t\t\t\tticksRandomly.put(tile, Tile.TICKS_RANDOMLY[i]);\n+\t\t\t\tisFullOpaque.put(tile, Tile.FULL_OPAQUE[i]);\n+\t\t\t\thasTileEntity.put(tile, Tile.HAS_TILE_ENTITY[i]);\n+\t\t\t\tfield_1941.put(tile, Tile.field_1941[i]);\n+\t\t\t\tfield_1942.put(tile, Tile.field_1942[i]);\n+\t\t\t\tfield_1943.put(tile, Tile.field_1943[i]);\n+\t\t\t\tfield_1944.put(tile, Tile.field_1944[i]);\n+\t\t\t}\n+\n \t\t\tSystem.arraycopy(new Tile[size], 0, Tile.BY_ID, 0, size);\n+\t\t\tSystem.arraycopy(new boolean[size], 0, Tile.TICKS_RANDOMLY, 0, size);\n+\t\t\tSystem.arraycopy(new boolean[size], 0, Tile.FULL_OPAQUE, 0, size);\n+\t\t\tSystem.arraycopy(new boolean[size], 0, Tile.HAS_TILE_ENTITY, 0, size);\n+\t\t\tSystem.arraycopy(new int[size], 0, Tile.field_1941, 0, size);\n+\t\t\tSystem.arraycopy(new boolean[size], 0, Tile.field_1942, 0, size);\n+\t\t\tSystem.arraycopy(new int[size], 0, Tile.field_1943, 0, size);\n+\t\t\tSystem.arraycopy(new boolean[size], 0, Tile.field_1944, 0, size);\n \t\t}\n \n \t\t@Override\n@@ -91,6 +118,14 @@ protected void onRemap(Tile remappedValue, int newSerialisedId) {\n \t\t\tif (tileItem != null) {\n \t\t\t\t((ParentIdSetter) tileItem).setParentId(newSerialisedId);\n \t\t\t}\n+\n+\t\t\tTile.TICKS_RANDOMLY[newSerialisedId] = ticksRandomly.getOrDefault(remappedValue, false);\n+\t\t\tTile.FULL_OPAQUE[newSerialisedId] = isFullOpaque.getOrDefault(remappedValue, false);\n+\t\t\tTile.HAS_TILE_ENTITY[newSerialisedId] = hasTileEntity.getOrDefault(remappedValue, false);\n+\t\t\tTile.field_1941[newSerialisedId] = field_1941.getOrDefault(remappedValue, 0);\n+\t\t\tTile.field_1942[newSerialisedId] = field_1942.getOrDefault(remappedValue, false);\n+\t\t\tTile.field_1943[newSerialisedId] = field_1943.getOrDefault(remappedValue, 0);\n+\t\t\tTile.field_1944[newSerialisedId] = field_1944.getOrDefault(remappedValue, false);\n \t\t}\n \t}\n "
  }
]
