[
  {
    "sha": "a72b757d6c8cca123bb6eb99d4c9ad44c971c043",
    "filename": "frontend/chat-plugin/BUILD",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/chat-plugin/BUILD",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/chat-plugin/BUILD",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/chat-plugin/BUILD?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -10,6 +10,7 @@ load(\"@io_bazel_rules_docker//container:container.bzl\", \"container_image\")\n \n module_deps = [\n     \"//frontend/assets\",\n+    \"//frontend/sharedServices\",\n     \"//lib/typescript/types\",\n     \"//lib/typescript/httpclient\",\n     \"//lib/typescript/render\","
  },
  {
    "sha": "8d6fd6d482defe91330b248266bafc7075295d8a",
    "filename": "frontend/chat-plugin/src/components/chat/index.tsx",
    "status": "modified",
    "additions": 6,
    "deletions": 3,
    "changes": 9,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/chat-plugin/src/components/chat/index.tsx",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/chat-plugin/src/components/chat/index.tsx",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/chat-plugin/src/components/chat/index.tsx?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -160,11 +160,14 @@ const Chat = (props: Props) => {\n                         props.airyMessageProp\n                           ? () => props.airyMessageProp(ctrl)\n                           : () => (\n-                              <MessageInfoWrapper fromContact={isFromContact(message)} isChatPlugin={true}>\n+                              <MessageInfoWrapper\n+                                fromContact={isFromContact(message)}\n+                                isChatPlugin={true}\n+                                lastInGroup={lastInGroup}>\n                                 <SourceMessage\n-                                  message={message}\n+                                  contentType=\"message\"\n+                                  renderedContent={message}\n                                   source=\"chatplugin\"\n-                                  lastInGroup={lastInGroup}\n                                   invertSides={true}\n                                   commandCallback={commandCallback}\n                                 />"
  },
  {
    "sha": "596faa218b4dd47959dbe3276c488b003f551183",
    "filename": "frontend/sharedServices/BUILD",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/sharedServices/BUILD",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/sharedServices/BUILD",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/sharedServices/BUILD?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -0,0 +1,21 @@\n+load(\"//tools/lint:web.bzl\", \"web_lint\")\n+load(\"@com_github_airyhq_bazel_tools//lint:buildifier.bzl\", \"check_pkg\")\n+load(\"@com_github_airyhq_bazel_tools//web:typescript.bzl\", \"ts_web_library\")\n+\n+package(default_visibility = [\"//visibility:public\"])\n+\n+module_deps = [\n+    \"//frontend/assets\",\n+]\n+\n+ts_web_library(\n+    name = \"sharedServices\",\n+    deps = module_deps + [\n+        \"@npm//@types/react\",\n+        \"@npm//react\",\n+    ],\n+)\n+\n+check_pkg(name = \"buildifier\")\n+\n+web_lint()"
  },
  {
    "sha": "93ef601a666926d6786659b5eba3262fb17b5d79",
    "filename": "frontend/sharedServices/fallbackImage.ts",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/sharedServices/fallbackImage.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/sharedServices/fallbackImage.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/sharedServices/fallbackImage.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -0,0 +1,14 @@\n+import _, {SyntheticEvent} from 'react';\n+\n+export const fallbackImage = (event: SyntheticEvent<HTMLImageElement, Event>, source: string) => {\n+  event.currentTarget.src =\n+    source === 'mediaImage'\n+      ? `https://s3.amazonaws.com/assets.airy.co/fallbackMediaImage.svg`\n+      : `https://s3.amazonaws.com/assets.airy.co/${source}_avatar.svg`;\n+\n+  if (source === 'mediaImage') {\n+    event.currentTarget.style.objectFit = 'contain';\n+  }\n+\n+  event.currentTarget.alt = 'fallback image';\n+};"
  },
  {
    "sha": "379b7ff989c90e8e2864ee16fe52da5a48bb4314",
    "filename": "frontend/sharedServices/index.ts",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/sharedServices/index.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/sharedServices/index.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/sharedServices/index.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -0,0 +1 @@\n+export * from './fallbackImage';"
  },
  {
    "sha": "4e99b92e189997d142e275b76630bd694dbea782",
    "filename": "frontend/ui/BUILD",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/BUILD",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/BUILD",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/BUILD?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -10,6 +10,7 @@ check_pkg(name = \"buildifier\")\n \n module_deps = [\n     \"//frontend/assets\",\n+    \"//frontend/sharedServices\",\n     \"//lib/typescript/types\",\n     \"//lib/typescript/httpclient\",\n     \"//lib/typescript/render\","
  },
  {
    "sha": "ad134273a332ef9b09d698181d4c11a72d31e2ed",
    "filename": "frontend/ui/src/actions/templates/index.ts",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/actions/templates/index.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/actions/templates/index.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/actions/templates/index.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -6,14 +6,15 @@ import {HttpClientInstance} from '../../InitializeAiryApi';\n \n const LIST_TEMPLATES = 'LIST_TEMPLATES';\n \n-export const listTemplatesAction = createAction(LIST_TEMPLATES, (templates: Template[]) => templates)();\n+export const listTemplatesAction = createAction(LIST_TEMPLATES, (source: string, templates: Template[]) => ({\n+  source,\n+  templates,\n+}))<{source: string; templates: Template[]}>();\n \n export function listTemplates(requestPayload: ListTemplatesRequestPayload) {\n   return function (dispatch: Dispatch<any>) {\n     return HttpClientInstance.listTemplates(requestPayload).then((response: Template[]) => {\n-      if (response.length > 0) {\n-        dispatch(listTemplatesAction(response));\n-      }\n+      dispatch(listTemplatesAction(requestPayload.source, response));\n \n       return Promise.resolve(true);\n     });"
  },
  {
    "sha": "e4c43f5202ae6b636f839c85dc67a4a75162fc42",
    "filename": "frontend/ui/src/components/AvatarImage/index.tsx",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/components/AvatarImage/index.tsx",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/components/AvatarImage/index.tsx",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/components/AvatarImage/index.tsx?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -14,7 +14,7 @@ const AvatarImage = (props: AvatarProps) => {\n \n   return (\n     <div className={styles.avatar}>\n-      <img className={styles.avatarImage} src={contact.avatarUrl || fallbackAvatar} />\n+      <img className={styles.avatarImage} src={(contact && contact.avatarUrl) || fallbackAvatar} />\n     </div>\n   );\n };"
  },
  {
    "sha": "744bc1a565d7e4adff517873c4385da62ad625bf",
    "filename": "frontend/ui/src/pages/Channels/ConnectedChannelsBySourceCard/index.tsx",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Channels/ConnectedChannelsBySourceCard/index.tsx",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Channels/ConnectedChannelsBySourceCard/index.tsx",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/pages/Channels/ConnectedChannelsBySourceCard/index.tsx?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -4,7 +4,7 @@ import {RouteComponentProps, withRouter} from 'react-router-dom';\n import {LinkButton} from '@airyhq/components';\n import {Channel, SourceType} from 'httpclient';\n import {SourceTypeInfo} from '../MainPage';\n-import {fallbackImage} from '../../../services/image/index';\n+import {fallbackImage} from 'sharedServices/fallbackImage';\n import {ReactComponent as PlusCircleIcon} from 'assets/images/icons/plus-circle.svg';\n \n import styles from './index.module.scss';"
  },
  {
    "sha": "a9b061c2eb2026298fb6ec8323284a49bd4c0a2a",
    "filename": "frontend/ui/src/pages/Channels/ConnectedChannelsList/ChannelListItem/index.tsx",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Channels/ConnectedChannelsList/ChannelListItem/index.tsx",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Channels/ConnectedChannelsList/ChannelListItem/index.tsx",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/pages/Channels/ConnectedChannelsList/ChannelListItem/index.tsx?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -1,9 +1,9 @@\n import React, {useState} from 'react';\n import _, {connect, ConnectedProps} from 'react-redux';\n import {RouteComponentProps, withRouter} from 'react-router-dom';\n+import {fallbackImage} from 'sharedServices/fallbackImage';\n \n import {disconnectChannel} from '../../../../actions/channel';\n-import {fallbackImage} from '../../../../services/image/index';\n \n import {SettingsModal, Button} from '@airyhq/components';\n import {Channel, SourceType} from 'httpclient';"
  },
  {
    "sha": "16535ded94ea9ecf161f3933ddb5726391d2be5c",
    "filename": "frontend/ui/src/pages/Inbox/MessageInput/index.tsx",
    "status": "modified",
    "additions": 17,
    "deletions": 12,
    "changes": 29,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/MessageInput/index.tsx",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/MessageInput/index.tsx",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/pages/Inbox/MessageInput/index.tsx?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -14,7 +14,7 @@ import {ReactComponent as TemplateAlt} from 'assets/images/icons/template-alt.sv\n import {ReactComponent as Close} from 'assets/images/icons/close.svg';\n \n import {StateModel} from '../../../reducers';\n-import {getTextMessagePayload, RenderedContent, Template} from 'httpclient';\n+import {getTextMessagePayload, Template, SourceType} from 'httpclient';\n import {listTemplates} from '../../../actions/templates';\n import {cyMessageSendButton, cyMessageTextArea} from 'handles';\n \n@@ -28,11 +28,11 @@ const mapStateToProps = (state: StateModel) => {\n };\n \n const connector = connect(mapStateToProps, mapDispatchToProps);\n-type MessageInputProps = {sourceType: string};\n+type MessageInputProps = {sourceType: SourceType};\n \n interface SelectedTemplate {\n-  message: RenderedContent;\n-  source: string;\n+  message: Template;\n+  source: SourceType;\n }\n \n const MessageInput = (props: MessageInputProps & ConnectedProps<typeof connector>) => {\n@@ -47,6 +47,9 @@ const MessageInput = (props: MessageInputProps & ConnectedProps<typeof connector\n   const sendButtonRef = useRef(null);\n   const emojiDiv = useRef<HTMLDivElement>(null);\n \n+  const conversationIdParams = useParams();\n+  const currentConversationId: string = conversationIdParams[Object.keys(conversationIdParams)[0]];\n+\n   const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>): void => {\n     setInput(e.target.value);\n   };\n@@ -59,9 +62,6 @@ const MessageInput = (props: MessageInputProps & ConnectedProps<typeof connector\n     }\n   }, [input]);\n \n-  const conversationIdParams = useParams();\n-  const currentConversationId: string = conversationIdParams[Object.keys(conversationIdParams)[0]];\n-\n   const sendMessage = () => {\n     if (selectedTemplate) {\n       setSelectedTemplate(null);\n@@ -130,21 +130,22 @@ const MessageInput = (props: MessageInputProps & ConnectedProps<typeof connector\n     };\n \n     const selectTemplate = (template: Template) => {\n-      const jsonTemplate = JSON.parse(template.content) as any;\n+      const jsonTemplate = template.content;\n \n       if (\n         jsonTemplate.message.text &&\n         !jsonTemplate.message.suggestions &&\n         !jsonTemplate.message.quick_replies &&\n-        !jsonTemplate.message.containsRichText\n+        !jsonTemplate.message.containsRichText &&\n+        !jsonTemplate.message.attachments &&\n+        !jsonTemplate.message.attachment\n       ) {\n         setInput(jsonTemplate.message.text);\n         setIsShowingTemplateModal(false);\n       } else {\n         setInput('');\n         setIsShowingTemplateModal(false);\n-        const templateContent = JSON.parse(template.content) as any;\n-        setSelectedTemplate({message: {id: template.id, content: templateContent}, source: template.source});\n+        setSelectedTemplate({message: template, source: template.source});\n       }\n       sendButtonRef.current.focus();\n     };\n@@ -216,7 +217,11 @@ const MessageInput = (props: MessageInputProps & ConnectedProps<typeof connector\n               <button className={styles.removeTemplateButton} onClick={() => setSelectedTemplate(null)}>\n                 <Close />\n               </button>\n-              <SourceMessage message={selectedTemplate.message} source={selectedTemplate.source} />\n+              <SourceMessage\n+                renderedContent={selectedTemplate.message}\n+                source={selectedTemplate.source}\n+                contentType=\"template\"\n+              />\n             </div>\n           )}\n         </div>"
  },
  {
    "sha": "3b32edf2481be0c5bced6a2cd7d15dea1b13708c",
    "filename": "frontend/ui/src/pages/Inbox/Messenger/ConversationMetadata/index.tsx",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/Messenger/ConversationMetadata/index.tsx",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/Messenger/ConversationMetadata/index.tsx",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/pages/Inbox/Messenger/ConversationMetadata/index.tsx?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -184,7 +184,7 @@ const ConversationMetadata = (props: ConnectedProps<typeof connector>) => {\n               <AvatarImage contact={contact} />\n             </div>\n \n-            <div className={styles.displayName}>{contact.displayName}</div>\n+            <div className={styles.displayName}>{contact && contact.displayName}</div>\n           </div>\n           <div className={styles.tags}>\n             <div className={styles.tagsHeader}>"
  },
  {
    "sha": "f95ed5f063d71abf14f0cec0a561fab6e07ddaad",
    "filename": "frontend/ui/src/pages/Inbox/Messenger/MessageList/index.tsx",
    "status": "modified",
    "additions": 9,
    "deletions": 15,
    "changes": 24,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/Messenger/MessageList/index.tsx",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/Messenger/MessageList/index.tsx",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/pages/Inbox/Messenger/MessageList/index.tsx?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -5,7 +5,7 @@ import {debounce} from 'lodash-es';\n import {withRouter} from 'react-router-dom';\n import {cyMessageList} from 'handles';\n \n-import {Message} from 'httpclient';\n+import {Message, getSource, isFromContact} from 'httpclient';\n import {SourceMessage} from 'render';\n \n import {StateModel} from '../../../../reducers';\n@@ -16,10 +16,8 @@ import styles from './index.module.scss';\n import {formatDateOfMessage} from '../../../../services/format/date';\n import {getCurrentConversation, getCurrentMessages} from '../../../../selectors/conversations';\n import {ConversationRouteProps} from '../../index';\n-import {isSameDay} from 'dates';\n-import {getSource, isFromContact, RenderedContent} from 'httpclient';\n import {MessageInfoWrapper} from 'render/components/MessageInfoWrapper';\n-import {formatTime} from 'dates';\n+import {formatTime, isSameDay} from 'dates';\n \n type MessageListProps = ConnectedProps<typeof connector>;\n \n@@ -96,7 +94,7 @@ const MessageList = (props: MessageListProps) => {\n     messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n   };\n \n-  const hasDateChanged = (prevMessage: RenderedContent, message: RenderedContent) => {\n+  const hasDateChanged = (prevMessage: Message, message: Message) => {\n     if (prevMessage == null) {\n       return true;\n     }\n@@ -145,8 +143,10 @@ const MessageList = (props: MessageListProps) => {\n       }\n \n       const entireHeightScrolled =\n+        messageListRef &&\n+        messageListRef.current &&\n         messageListRef.current.scrollHeight - 1 <=\n-        messageListRef.current.clientHeight + messageListRef.current.scrollTop;\n+          messageListRef.current.clientHeight + messageListRef.current.scrollTop;\n \n       if (stickBottom !== entireHeightScrolled) {\n         setStickBottom(entireHeightScrolled);\n@@ -159,13 +159,12 @@ const MessageList = (props: MessageListProps) => {\n   return (\n     <div className={styles.messageList} ref={messageListRef} onScroll={handleScroll} data-cy={cyMessageList}>\n       {messages &&\n-        messages.map((message: RenderedContent, index: number) => {\n+        messages.map((message: Message, index: number) => {\n           const prevMessage = messages[index - 1];\n           const nextMessage = messages[index + 1];\n-          const shouldShowContact = !isFromContact(prevMessage) && !isFromContact(message);\n+\n           const lastInGroup = nextMessage ? isFromContact(message) !== isFromContact(nextMessage) : true;\n \n-          const contactToShow = shouldShowContact ? conversation.metadata.contact : null;\n           const sentAt = lastInGroup ? formatTime(message.sentAt) : null;\n \n           return (\n@@ -181,12 +180,7 @@ const MessageList = (props: MessageListProps) => {\n                 sentAt={sentAt}\n                 lastInGroup={lastInGroup}\n                 isChatPlugin={false}>\n-                <SourceMessage\n-                  source={getSource(conversation)}\n-                  message={message}\n-                  contact={contactToShow}\n-                  lastInGroup={lastInGroup}\n-                />\n+                <SourceMessage source={getSource(conversation)} renderedContent={message} contentType=\"message\" />\n               </MessageInfoWrapper>\n             </div>\n           );"
  },
  {
    "sha": "07ccd1e855e908c2bd411f539fd2bdc41edb4f71",
    "filename": "frontend/ui/src/pages/Inbox/Messenger/MessengerContainer/index.tsx",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/Messenger/MessengerContainer/index.tsx",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/Messenger/MessengerContainer/index.tsx",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/pages/Inbox/Messenger/MessengerContainer/index.tsx?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -9,6 +9,7 @@ import styles from './index.module.scss';\n import ConversationMetadata from '../ConversationMetadata';\n import MessageInput from '../../MessageInput';\n import {allConversations, getCurrentConversation} from '../../../../selectors/conversations';\n+import {SourceType} from 'httpclient';\n \n const mapStateToProps = (state: StateModel, ownProps) => ({\n   conversations: allConversations(state),\n@@ -31,7 +32,7 @@ const MessengerContainer = ({conversations, currentConversation}: MessengerConta\n       ) : (\n         <div className={styles.messageDisplay}>\n           <MessageList />\n-          {currentConversation && <MessageInput sourceType={currentConversation.channel.source} />}\n+          {currentConversation && <MessageInput sourceType={currentConversation.channel.source as SourceType} />}\n         </div>\n       )}\n     </div>"
  },
  {
    "sha": "1f6d2e82b5276a6597cd8c5c54ac6173eae4b8d8",
    "filename": "frontend/ui/src/pages/Inbox/TemplateSelector/index.module.scss",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/TemplateSelector/index.module.scss",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/TemplateSelector/index.module.scss",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/pages/Inbox/TemplateSelector/index.module.scss?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -90,13 +90,15 @@\n   flex-grow: 1;\n   display: flex;\n   flex-direction: column;\n+  max-height: 350px;\n }\n \n .notFoundImage {\n   flex-grow: 1;\n   background-size: contain;\n   background-repeat: no-repeat;\n   background-position: center;\n+  height: 200px;\n }\n \n .notFoundText {"
  },
  {
    "sha": "f2982eb60ec238829a483b6995fd7e2eaddd0aca",
    "filename": "frontend/ui/src/pages/Inbox/TemplateSelector/index.tsx",
    "status": "modified",
    "additions": 13,
    "deletions": 14,
    "changes": 27,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/TemplateSelector/index.tsx",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/pages/Inbox/TemplateSelector/index.tsx",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/pages/Inbox/TemplateSelector/index.tsx?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -3,7 +3,7 @@ import _, {connect, ConnectedProps} from 'react-redux';\n import styles from './index.module.scss';\n import {listTemplates} from '../../../actions/templates';\n import {SearchField, ErrorNotice} from '@airyhq/components';\n-import {Template} from 'httpclient';\n+import {Template, SourceType} from 'httpclient';\n import {StateModel} from '../../../reducers';\n import emptyState from 'assets/images/empty-state/templates-empty-state.png';\n import notFoundState from 'assets/images/not-found/templates-not-found.png';\n@@ -16,6 +16,7 @@ const mapDispatchToProps = {\n const mapStateToProps = (state: StateModel) => {\n   return {\n     templates: state.data.templates.all,\n+    templatesSource: state.data.templates.source,\n   };\n };\n \n@@ -24,14 +25,14 @@ const connector = connect(mapStateToProps, mapDispatchToProps);\n type Props = {\n   onClose: () => void;\n   selectTemplate: (t: Template) => void;\n-  sourceType: string;\n+  sourceType: SourceType;\n } & ConnectedProps<typeof connector>;\n \n-const TemplateSelector = ({listTemplates, onClose, templates, selectTemplate, sourceType}: Props) => {\n+const TemplateSelector = ({listTemplates, onClose, templates, selectTemplate, sourceType, templatesSource}: Props) => {\n   const [searchQuery, setSearchQuery] = useState('');\n   const [templatesList, setTemplatesList] = useState(templates);\n-  const [loading, setLoading] = useState(true);\n   const [listTemplatesError, setListTemplatesError] = useState(false);\n+\n   const componentRef = useRef(null);\n \n   const keyDown = useCallback(\n@@ -74,13 +75,11 @@ const TemplateSelector = ({listTemplates, onClose, templates, selectTemplate, so\n \n   useEffect(() => {\n     const listAllTemplatesFromSourcePayload = {source: sourceType};\n-    let abort = false;\n+    let abort;\n \n-    if (templates.length === 0 && loading) {\n+    if (sourceType !== templatesSource) {\n       listTemplates(listAllTemplatesFromSourcePayload)\n-        .then(() => {\n-          if (templates.length === 0 && !abort) setLoading(false);\n-        })\n+        .then()\n         .catch(() => {\n           if (!abort) setListTemplatesError(true);\n         });\n@@ -89,7 +88,7 @@ const TemplateSelector = ({listTemplates, onClose, templates, selectTemplate, so\n     return () => {\n       abort = true;\n     };\n-  }, [templates, loading]);\n+  }, [sourceType, templatesSource]);\n \n   const renderEmpty = () => {\n     return (\n@@ -123,9 +122,9 @@ const TemplateSelector = ({listTemplates, onClose, templates, selectTemplate, so\n \n   return (\n     <div className={styles.component} ref={componentRef}>\n-      {listTemplatesError && !searchQuery ? (\n+      {listTemplatesError ? (\n         renderError()\n-      ) : !loading && templates.length === 0 && !searchQuery ? (\n+      ) : templates.length === 0 && sourceType === templatesSource ? (\n         renderEmpty()\n       ) : (\n         <>\n@@ -144,8 +143,8 @@ const TemplateSelector = ({listTemplates, onClose, templates, selectTemplate, so\n           ) : (\n             <div className={styles.templateList}>\n               {templatesList &&\n+                templatesList.length &&\n                 templatesList.map((template, id) => {\n-                  const templateContent = JSON.parse(template.content) as any;\n                   return (\n                     <div\n                       className={styles.templatePreviewWrapper}\n@@ -154,7 +153,7 @@ const TemplateSelector = ({listTemplates, onClose, templates, selectTemplate, so\n                         selectTemplate(template);\n                       }}>\n                       <div className={styles.tempatePreviewName}>{template.name}</div>\n-                      <SourceMessage message={{id: template.id, content: templateContent}} source={template.source} />\n+                      <SourceMessage renderedContent={template} source={template.source} contentType=\"template\" />\n                     </div>\n                   );\n                 })}"
  },
  {
    "sha": "c0cc0f3d6cdd3a62ca87fb793a9ed5905a8f6af3",
    "filename": "frontend/ui/src/reducers/data/templates/index.ts",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/reducers/data/templates/index.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/reducers/data/templates/index.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/reducers/data/templates/index.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -11,6 +11,7 @@ export type TemplateState = {\n \n export type Templates = {\n   all: Template[];\n+  source: string;\n };\n \n const defaultState = {\n@@ -22,7 +23,8 @@ export default function templatesReducer(state = defaultState, action: Action):\n     case getType(actions.listTemplatesAction):\n       return {\n         ...state,\n-        all: action.payload,\n+        all: action.payload.templates,\n+        source: action.payload.source,\n       };\n \n     default:"
  },
  {
    "sha": "6dbb8721967463c672f8fff1bfbc5af8a4745eeb",
    "filename": "frontend/ui/src/services/format/date.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/services/format/date.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/frontend/ui/src/services/format/date.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/services/format/date.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -1,4 +1,4 @@\n-import {Message, RenderedContent} from 'httpclient';\n+import {Message} from 'httpclient';\n \n export function dateFormat(date: Date) {\n   const now = new Date();\n@@ -94,7 +94,7 @@ export function formatTimeOfMessageWithHours(message: Message) {\n   return '';\n }\n \n-export function formatDateOfMessage(message: RenderedContent) {\n+export function formatDateOfMessage(message: Message) {\n   if (!message) {\n     return '';\n   }"
  },
  {
    "sha": "1546345cfc19e9b55b49d5e9d1a4dced459f7a9d",
    "filename": "frontend/ui/src/services/image/index.ts",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/airyhq/airy/blob/b4d42a3c2259008049bc0192c5af99225f550782/frontend/ui/src/services/image/index.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/b4d42a3c2259008049bc0192c5af99225f550782/frontend/ui/src/services/image/index.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/frontend/ui/src/services/image/index.ts?ref=b4d42a3c2259008049bc0192c5af99225f550782",
    "patch": "@@ -1,6 +0,0 @@\n-import _, {SyntheticEvent} from 'react';\n-\n-export const fallbackImage = (event: SyntheticEvent<HTMLImageElement, Event>, source: string) => {\n-  event.currentTarget.src = `https://s3.amazonaws.com/assets.airy.co/${source}_avatar.svg`;\n-  event.currentTarget.alt = 'fallback image';\n-};"
  },
  {
    "sha": "518b61ff7d72b1f39982e0a308d8405b35881f50",
    "filename": "lib/typescript/httpclient/endpoints/listTemplates.ts",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/endpoints/listTemplates.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/endpoints/listTemplates.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/httpclient/endpoints/listTemplates.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -9,7 +9,7 @@ export default HttpClient.prototype.listTemplates = async function listTemplates\n ) {\n   const response = await this.doFetchFromBackend('templates.list', {\n     name: requestPayload.name,\n-    source_type: requestPayload.source,\n+    source: requestPayload.source,\n   });\n \n   return camelcaseKeys(response.data);"
  },
  {
    "sha": "e6c2f560bbcdb4f822ebb33ff1822a580415a317",
    "filename": "lib/typescript/httpclient/model/Content.ts",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/model/Content.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/model/Content.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/httpclient/model/Content.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -0,0 +1,13 @@\n+import {Template} from './Template';\n+import {Message, SenderType} from './Message';\n+\n+export interface Content {\n+  id: string;\n+  content: any;\n+}\n+\n+export type RenderedContentUnion = Message | Template;\n+\n+export function isFromContact(message: RenderedContentUnion) {\n+  if (message && 'senderType' in message) return message?.senderType === SenderType.sourceContact;\n+}"
  },
  {
    "sha": "1e8144283f787203ad66d079143531eeb0098cd3",
    "filename": "lib/typescript/httpclient/model/Message.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 11,
    "changes": 13,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/model/Message.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/model/Message.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/httpclient/model/Message.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -1,13 +1,6 @@\n /* eslint-disable @typescript-eslint/no-var-requires */\n const camelcaseKeys = require('camelcase-keys');\n-\n-export enum Source {\n-  facebook = 'facebook',\n-  google = 'google',\n-  chatplugin = 'chatplugin',\n-  smsTwilio = 'twilio.sms',\n-  whatsappTwilio = 'twilio.whatsapp',\n-}\n+import {Content} from './Content';\n \n export enum MessageType {\n   audio = 'audio',\n@@ -35,9 +28,7 @@ export enum SenderType {\n   appUser = 'app_user',\n }\n \n-export interface Message {\n-  id: string;\n-  content: any;\n+export interface Message extends Content {\n   deliveryState: MessageState;\n   senderType: SenderType;\n   sentAt: Date;"
  },
  {
    "sha": "60a5257d82d687fd659df21a487f3329f2ea7ac9",
    "filename": "lib/typescript/httpclient/model/RenderedContent.ts",
    "status": "removed",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/airyhq/airy/blob/b4d42a3c2259008049bc0192c5af99225f550782/lib/typescript/httpclient/model/RenderedContent.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/b4d42a3c2259008049bc0192c5af99225f550782/lib/typescript/httpclient/model/RenderedContent.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/httpclient/model/RenderedContent.ts?ref=b4d42a3c2259008049bc0192c5af99225f550782",
    "patch": "@@ -1,13 +0,0 @@\n-import {MessageState, SenderType} from './Message';\n-\n-export interface RenderedContent {\n-  id: string;\n-  content: any;\n-  deliveryState?: MessageState;\n-  senderType?: SenderType;\n-  sentAt?: Date;\n-}\n-\n-export function isFromContact(message: RenderedContent) {\n-  return message?.senderType === SenderType.sourceContact;\n-}"
  },
  {
    "sha": "4db6a633f6b3e181a72dc6519bdad498ef19eeb5",
    "filename": "lib/typescript/httpclient/model/Template.ts",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/model/Template.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/model/Template.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/httpclient/model/Template.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -1,8 +1,7 @@\n-import {Source} from './Message';\n+import {SourceType} from './Channel';\n+import {Content} from './Content';\n \n-export interface Template {\n-  id: string;\n+export interface Template extends Content {\n   name: string;\n-  source: Source;\n-  content: string;\n+  source: SourceType;\n }"
  },
  {
    "sha": "0e195e8ec15207487da824d9d07c87cb6a5a2b53",
    "filename": "lib/typescript/httpclient/model/index.ts",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/model/index.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/model/index.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/httpclient/model/index.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -10,4 +10,4 @@ export * from './Pagination';\n export * from './Tag';\n export * from './User';\n export * from './Template';\n-export * from './RenderedContent';\n+export * from './Content';"
  },
  {
    "sha": "92f2ff320f1b2d5dfb587aaa2966215467aa03d0",
    "filename": "lib/typescript/httpclient/payload/ListTemplatesRequestPayload.ts",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/payload/ListTemplatesRequestPayload.ts",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/httpclient/payload/ListTemplatesRequestPayload.ts",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/httpclient/payload/ListTemplatesRequestPayload.ts?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -1,4 +1,6 @@\n+import {SourceType} from '../model/Channel';\n+\n export interface ListTemplatesRequestPayload {\n   name?: string;\n-  source: string;\n+  source: SourceType;\n }"
  },
  {
    "sha": "495d8eb0c4f637d13520cebb48ebd2aca21d631e",
    "filename": "lib/typescript/render/BUILD",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/render/BUILD",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/render/BUILD",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/render/BUILD?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -8,6 +8,7 @@ ts_web_library(\n     name = \"render\",\n     deps = [\n         \"//frontend/assets\",\n+        \"//frontend/sharedServices\",\n         \"//lib/typescript/dates\",\n         \"//lib/typescript/httpclient\",\n         \"//lib/typescript/types\","
  },
  {
    "sha": "8a597cd87e791116c3b21c9191cbfbfc3d2ab5b1",
    "filename": "lib/typescript/render/components/Carousel/index.module.scss",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/render/components/Carousel/index.module.scss",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/render/components/Carousel/index.module.scss",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/render/components/Carousel/index.module.scss?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -3,7 +3,6 @@\n \n .wrapper {\n   display: flex;\n-  align-items: flex-end;\n   flex-direction: column;\n   margin-top: 5px;\n   overflow: hidden;\n@@ -15,7 +14,6 @@\n   flex-direction: row;\n   overflow: hidden;\n   max-width: 100%;\n-  align-items: flex-end;\n }\n \n .buttonScroll {"
  },
  {
    "sha": "c31f29ab991ab7f7fe93656e5b176d5c1bfa7910",
    "filename": "lib/typescript/render/components/Image/index.module.scss",
    "status": "modified",
    "additions": 1,
    "deletions": 54,
    "changes": 55,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/render/components/Image/index.module.scss",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/render/components/Image/index.module.scss",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/render/components/Image/index.module.scss?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -1,63 +1,10 @@\n-@import 'assets/scss/fonts.scss';\n-@import 'assets/scss/colors.scss';\n-\n .wrapper {\n   display: flex;\n   flex: none;\n-}\n-\n-.messageListItem {\n-  display: flex;\n-  align-self: flex-end;\n-  width: 100%;\n-  overflow-wrap: break-word;\n-  word-break: break-word;\n-}\n-\n-.messageAvatar {\n-  width: 40px;\n-  height: 40px;\n-  margin: 6px 8px 0 0;\n-}\n-\n-.messageListUserContainer {\n-  display: flex;\n-  flex-direction: row;\n-}\n-\n-.messageListItemUser {\n-  align-self: flex-start;\n-  text-align: left;\n-  position: relative;\n-}\n-\n-.messageListItemUserImage {\n-  display: inline-flex;\n-  margin-top: 5px;\n-  border-radius: 8px;\n-  overflow: hidden;\n-}\n-\n-.messageListItemMember {\n   margin-top: 5px;\n-  justify-content: flex-end;\n-  width: 100%;\n-  text-align: right;\n-}\n-\n-.messageListItemMemberImage {\n-  display: inline-flex;\n-  position: relative;\n-  text-align: left;\n-  border-radius: 8px;\n-  overflow: hidden;\n-}\n-\n-.messageTime {\n-  @include font-s;\n-  color: var(--color-text-gray);\n }\n \n .messageListItemImageBlock {\n   max-width: 100%;\n+  border-radius: 8px;\n }"
  },
  {
    "sha": "226e7f9c15d7b8846a49665ae5bd46b321183c20",
    "filename": "lib/typescript/render/components/Image/index.tsx",
    "status": "modified",
    "additions": 9,
    "deletions": 20,
    "changes": 29,
    "blob_url": "https://github.com/airyhq/airy/blob/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/render/components/Image/index.tsx",
    "raw_url": "https://github.com/airyhq/airy/raw/809db6acd8b67e66775df6571faccc2c96608b1a/lib/typescript/render/components/Image/index.tsx",
    "contents_url": "https://api.github.com/repos/airyhq/airy/contents/lib/typescript/render/components/Image/index.tsx?ref=809db6acd8b67e66775df6571faccc2c96608b1a",
    "patch": "@@ -1,30 +1,19 @@\n import React from 'react';\n import styles from './index.module.scss';\n-import {DefaultMessageRenderingProps} from '../index';\n+import {fallbackImage} from 'sharedServices/fallbackImage';\n \n-type ImageRenderProps = DefaultMessageRenderingProps & {\n+type ImageRenderProps = {\n   imageUrl: string;\n   altText?: string;\n };\n \n-export const Image = ({fromContact, imageUrl, altText}: ImageRenderProps) => (\n+export const Image = ({imageUrl, altText}: ImageRenderProps) => (\n   <div className={styles.wrapper}>\n-    <div className={styles.messageListItem}>\n-      {!fromContact ? (\n-        <div className={styles.messageListItemMember}>\n-          <div className={styles.messageListItemMemberImage}>\n-            <img className={styles.messageListItemImageBlock} src={imageUrl} alt={altText ?? null} />\n-          </div>\n-        </div>\n-      ) : (\n-        <div className={styles.messageListUserContainer}>\n-          <div className={styles.messageListItemUser}>\n-            <div className={styles.messageListItemUserImage}>\n-              <img className={styles.messageListItemImageBlock} src={imageUrl} />\n-            </div>\n-          </div>\n-        </div>\n-      )}\n-    </div>\n+    <img\n+      className={styles.messageListItemImageBlock}\n+      src={imageUrl}\n+      alt={altText ?? null}\n+      onError={(event: React.SyntheticEvent<HTMLImageElement, Event>) => fallbackImage(event, 'mediaImage')}\n+    />\n   </div>\n );"
  }
]
