[
  {
    "sha": "f95543cf1b15bb34dae0904f8fb1093d6503b505",
    "filename": "doc/src/main/asciidoc/index.adoc",
    "status": "modified",
    "additions": 26,
    "deletions": 21,
    "changes": 47,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/doc/src/main/asciidoc/index.adoc",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/doc/src/main/asciidoc/index.adoc",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/doc/src/main/asciidoc/index.adoc?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -35,11 +35,16 @@ Then in JSyntrax it has been reimplemented in Java in order to simplify installa\n \r\n ==== JSyntrax vs. Syntrax\r\n \r\n-Why did you reimplement Syntrax?:: The problem with Syntrax is that it requires Pycairo and Pango which may be difficult to install, especially on Windows. JSyntrax requires only JDK 11, which is easily available for many platforms.\r\n+Why did you reimplement Syntrax?:: The problem with Syntrax is that it requires Pycairo and Pango which may be difficult to install, especially on Windows.\r\n+ JSyntrax requires only JDK 11, which is easily available for many platforms.\r\n \r\n-What output formats are supported?:: Unlike original Syntrax, that can output to many bitmap and vector formats, JSyntrax only produces SVG. This can be changed in the future.\r\n+What output formats are supported?:: Unlike original Syntrax, that can output to many bitmap and vector formats, JSyntrax only produces SVG.\r\n+ This can be changed in the future.\r\n \r\n-Can I build my Syntrax specs with JSyntrax?:: Yes, after only a couple of minor tweaks. If you use url maps, refer to <<hyperlinked,hyperlinked text>> section for Groovy-specific DSL which is a bit different from what was in original Syntrax.\r\n+Can I build my Syntrax specs with JSyntrax?:: Yes, after only a couple of minor tweaks.\r\n+ If you use url maps, refer to <<Specification language>> section for Groovy-specific DSL which is a bit different from what was in original Syntrax.\r\n+ Also, `text_mod` attribute in  <<Styling diagrams>> is not supported (the author of the original Syntrax warned about potential security issues with this attribute).\r\n+ Instead, if a style regexp pattern contains a capturing group, the node text will contain the contents of this capturing group only.\r\n \r\n Why your executable file is called `syntrax`?:: This is made intentionally in order to use https://asciidoctor.org/docs/asciidoctor-diagram/[AsciiDoctor Diagram] integration facility. JSyntrax executable has exactly the same command line arguments as Syntrax.\r\n \r\n@@ -64,17 +69,19 @@ and it will generate a diagram in any of the supported output formats.\n \r\n \r\n ----\r\n-usage: syntrax [-h] [-i <arg>] [-o <arg>] [-s <arg>] [--scale <arg>] [-t]\r\n-       [--title <arg>]\r\n+usage: syntrax [--get-style] [-h] [-i <arg>] [-o <arg>] [-s <arg>] [--scale\r\n+       <arg>] [-t] [--title <arg>] [-v]\r\n Railroad diagram generator.\r\n Options\r\n+      --get-style        Create default style .ini\r\n    -h,--help             Show this help message and exit\r\n    -i,--input <arg>      Diagram spec file\r\n    -o,--output <arg>     Output file\r\n    -s,--style <arg>      Style config .ini file\r\n       --scale <arg>      Scale image\r\n    -t,--transparent      Transparent background\r\n       --title <arg>      Diagram title\r\n+   -v,--version          JSyntrax version\r\n ----\r\n \r\n \r\n@@ -300,25 +307,22 @@ shadow_fill = (0, 0, 0, 127)\n title_font = ('Sans', 22, 'bold')\r\n \r\n [bubble]\r\n-pattern = '^\\w'\r\n+pattern = '^(\\w+)'\r\n shape = 'bubble'\r\n-text_mod = None\r\n font = ('Sans', 14, 'bold')\r\n text_color = (0, 0, 0)\r\n fill = (179, 229, 252)\r\n \r\n [box]\r\n-pattern = '^/'\r\n+pattern = '^/(.*)'\r\n shape = 'box'\r\n-text_mod = 'lambda txt: txt[1:]'\r\n font = ('Times', 14, 'italic')\r\n text_color = (0, 0, 0)\r\n fill = (144, 164, 174)\r\n \r\n [token]\r\n-pattern = '.'\r\n+pattern = '(.*)'\r\n shape = 'bubble'\r\n-text_mod = None\r\n font = ('Sans', 16, 'bold')\r\n text_color = (0, 0, 0)\r\n fill = (179, 229, 252)\r\n@@ -346,21 +350,20 @@ shadow_fill = (0, 0, 0, 127)\n title_font = ('Sans', 22, 'bold')\r\n \r\n [hex_bubble]                 ; User-defined style name\r\n-pattern = '^\\w'\r\n+pattern = '^(\\w+)'\r\n shape = 'hex'                ; Hexagon shape for node\r\n font = ('Sans', 14, 'bold')\r\n fill = (255,0,0,127)         ; Alpha component for transparent fills\r\n \r\n [box]\r\n-pattern = '^/'\r\n+pattern = '^/(.*)'\r\n shape = 'box'\r\n-text_mod = 'lambda txt: txt[1:]'\r\n font = ('Sans', 14, 'bold')\r\n text_color = (100, 100, 100)\r\n fill = '#88AAEE'\r\n \r\n [token]\r\n-pattern = '.'\r\n+pattern = '(.*)'\r\n shape = 'bubble'\r\n font = ('Times', 16, 'italic')\r\n fill = (0,255,0,127)\r\n@@ -437,16 +440,18 @@ Any number of node types can be defined provided they have distinct patterns to\n The node sections contain the following keys:\r\n \r\n pattern::\r\n-A regex pattern to match the node text to a style.\r\n+A regex pattern to match the node text to a style. Notes about pattern format:\r\n+ - Must satisfy https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html[regex java semantics]\r\n+ - Matches the whole input sequence exclusively (input `\"</>Hello\"` corresponds to this: `\"</>.*\"`, not this: `\"</>\"`)\r\n+ - You may not want to see control characters of your regex in diagram output. To omit them, use https://docs.oracle.com/javase/tutorial/essential/regex/groups.html[capture groups] to wrap the content you want to display. Examples:\r\n+ ** `<b>(.*)</b>` - matches `<b>my_text</b>` and will display `my_text`\r\n+ ** `^/(.+)` --> `/my_text` --> `my_text`\r\n+ ** `\"^</(.*)>\"` --> `\"</my_text>\"` --> `\"my_text\"`\r\n+ - If given input sequence does not match specified expression, default style will be used.\r\n \r\n shape::\r\n Node outline shape. Must be \"bubble\", \"box\", or \"hex\".\r\n \r\n-text_mod::\r\n-Optional lambda expression for transforming text from the specification into the output diagram. \r\n-This allows you to include additional characters to match against to select the node type and then remove them from the final diagram. \r\n-It takes the node text string as a single argument and returns the modified text.\r\n-\r\n font::\r\n Font style for the node.\r\n \r"
  },
  {
    "sha": "fee324901cf76aaa7ac7fa175c473d1d34ac33ff",
    "filename": "jsyntrax/checkstyle.xml",
    "status": "added",
    "additions": 174,
    "deletions": 0,
    "changes": 174,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/checkstyle.xml",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/checkstyle.xml",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/checkstyle.xml?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -0,0 +1,174 @@\n+<?xml version=\"1.0\"?>\r\n+<!DOCTYPE module PUBLIC\r\n+        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\r\n+        \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\r\n+\r\n+<!--\r\n+  This file is derived from\r\n+  https://raw.githubusercontent.com/checkstyle/checkstyle/master/src/main/resources/sun_checks.xml\r\n+-->\r\n+\r\n+<module name=\"Checker\">\r\n+\r\n+    <property name=\"severity\" value=\"error\"/>\r\n+\r\n+    <property name=\"fileExtensions\" value=\"java, properties, xml\"/>\r\n+\r\n+    <!-- Excludes all 'module-info.java' files              -->\r\n+    <!-- See https://checkstyle.org/config_filefilters.html -->\r\n+    <module name=\"BeforeExecutionExclusionFileFilter\">\r\n+        <property name=\"fileNamePattern\" value=\"module\\-info\\.java$\"/>\r\n+    </module>\r\n+\r\n+    <!-- https://checkstyle.org/config_filters.html#SuppressionFilter -->\r\n+    <module name=\"SuppressionFilter\">\r\n+        <property name=\"file\" value=\"${org.checkstyle.sun.suppressionfilter.config}\"\r\n+                  default=\"checkstyle-suppressions.xml\"/>\r\n+        <property name=\"optional\" value=\"true\"/>\r\n+    </module>\r\n+\r\n+    <!-- Checks whether files end with a new line.                        -->\r\n+    <!-- See https://checkstyle.org/config_misc.html#NewlineAtEndOfFile -->\r\n+    <module name=\"NewlineAtEndOfFile\"/>\r\n+\r\n+    <!-- Checks for Size Violations.                    -->\r\n+    <!-- See https://checkstyle.org/config_sizes.html -->\r\n+    <module name=\"FileLength\"/>\r\n+    <module name=\"LineLength\">\r\n+        <property name=\"max\" value=\"120\"/>\r\n+        <property name=\"fileExtensions\" value=\"java\"/>\r\n+    </module>\r\n+\r\n+    <!-- Checks for whitespace                               -->\r\n+    <!-- See https://checkstyle.org/config_whitespace.html -->\r\n+    <module name=\"FileTabCharacter\"/>\r\n+\r\n+    <!-- Miscellaneous other checks.                   -->\r\n+    <!-- See https://checkstyle.org/config_misc.html -->\r\n+    <module name=\"RegexpSingleline\">\r\n+        <property name=\"format\" value=\"\\s+$\"/>\r\n+        <property name=\"minimum\" value=\"0\"/>\r\n+        <property name=\"maximum\" value=\"0\"/>\r\n+        <property name=\"message\" value=\"Line has trailing spaces.\"/>\r\n+    </module>\r\n+\r\n+    <!-- Checks for Headers                                -->\r\n+    <!-- See https://checkstyle.org/config_header.html   -->\r\n+    <!-- <module name=\"Header\"> -->\r\n+    <!--   <property name=\"headerFile\" value=\"${checkstyle.header.file}\"/> -->\r\n+    <!--   <property name=\"fileExtensions\" value=\"java\"/> -->\r\n+    <!-- </module> -->\r\n+\r\n+    <module name=\"TreeWalker\">\r\n+\r\n+        <!-- Checks for Naming Conventions.                  -->\r\n+        <!-- See https://checkstyle.org/config_naming.html -->\r\n+        <module name=\"ConstantName\"/>\r\n+        <module name=\"LocalFinalVariableName\"/>\r\n+        <module name=\"LocalVariableName\"/>\r\n+        <module name=\"MemberName\"/>\r\n+        <module name=\"MethodName\"/>\r\n+        <module name=\"PackageName\"/>\r\n+        <module name=\"ParameterName\"/>\r\n+        <module name=\"StaticVariableName\"/>\r\n+        <module name=\"TypeName\"/>\r\n+\r\n+        <!-- Checks for imports                              -->\r\n+        <!-- See https://checkstyle.org/config_imports.html -->\r\n+        <module name=\"AvoidStarImport\"/>\r\n+        <module name=\"IllegalImport\"/> <!-- defaults to sun.* packages -->\r\n+        <module name=\"RedundantImport\"/>\r\n+        <module name=\"UnusedImports\">\r\n+            <property name=\"processJavadoc\" value=\"false\"/>\r\n+        </module>\r\n+\r\n+        <!-- Checks for Size Violations.                    -->\r\n+        <!-- See https://checkstyle.org/config_sizes.html -->\r\n+        <module name=\"MethodLength\"/>\r\n+        <module name=\"ParameterNumber\">\r\n+            <property name=\"max\" value=\"11\"/>\r\n+        </module>\r\n+\r\n+        <!-- Checks for whitespace                               -->\r\n+        <!-- See https://checkstyle.org/config_whitespace.html -->\r\n+        <module name=\"EmptyForIteratorPad\"/>\r\n+        <module name=\"GenericWhitespace\"/>\r\n+        <module name=\"MethodParamPad\"/>\r\n+        <module name=\"NoWhitespaceAfter\"/>\r\n+        <module name=\"NoWhitespaceBefore\"/>\r\n+        <module name=\"OperatorWrap\"/>\r\n+        <module name=\"ParenPad\"/>\r\n+        <module name=\"TypecastParenPad\"/>\r\n+        <module name=\"WhitespaceAfter\"/>\r\n+        <module name=\"WhitespaceAround\"/>\r\n+\r\n+        <!-- Modifier Checks                                    -->\r\n+        <!-- See https://checkstyle.org/config_modifiers.html -->\r\n+        <module name=\"ModifierOrder\"/>\r\n+        <module name=\"RedundantModifier\"/>\r\n+\r\n+        <!-- Checks for blocks. You know, those {}'s         -->\r\n+        <!-- See https://checkstyle.org/config_blocks.html -->\r\n+        <!-- <module name=\"AvoidNestedBlocks\"/> -->\r\n+        <module name=\"EmptyBlock\"/>\r\n+        <module name=\"LeftCurly\"/>\r\n+        <module name=\"NeedBraces\">\r\n+            <property name=\"allowSingleLineStatement\" value=\"true\"/>\r\n+            <property name=\"tokens\" value=\"LITERAL_DEFAULT, LAMBDA\"/>\r\n+            <property name=\"allowEmptyLoopBody\" value=\"true\"/>\r\n+        </module>\r\n+        <module name=\"RightCurly\"/>\r\n+\r\n+        <!-- Checks for common coding problems               -->\r\n+        <!-- See https://checkstyle.org/config_coding.html -->\r\n+        <module name=\"NoFinalizer\"/>\r\n+        <module name=\"NoClone\"/>\r\n+        <module name=\"EmptyStatement\"/>\r\n+        <module name=\"EqualsHashCode\"/>\r\n+        <module name=\"IllegalInstantiation\"/>\r\n+        <module name=\"InnerAssignment\"/>\r\n+        <!--\r\n+        <module name=\"MagicNumber\">\r\n+            <property name=\"ignoreNumbers\" value=\"-1, 0, 1, 2, 3, 4, 5, 6, 7\"/>\r\n+            <property name=\"ignoreHashCodeMethod\" value=\"true\"/>\r\n+            <property name=\"ignoreFieldDeclaration\" value=\"true\"/>\r\n+            <property name=\"ignoreAnnotation\" value=\"true\"/>\r\n+        </module>\r\n+        -->\r\n+        <module name=\"MultipleVariableDeclarations\"/>\r\n+        <module name=\"SimplifyBooleanExpression\"/>\r\n+        <module name=\"SimplifyBooleanReturn\"/>\r\n+\r\n+        <!-- Checks for class design                         -->\r\n+        <!-- See https://checkstyle.org/config_design.html -->\r\n+        <!-- <module name=\"DesignForExtension\"/> -->\r\n+        <module name=\"FinalClass\"/>\r\n+        <module name=\"HideUtilityClassConstructor\"/>\r\n+        <module name=\"InterfaceIsType\"/>\r\n+        <module name=\"VisibilityModifier\">\r\n+            <property\r\n+                    name=\"publicMemberPattern\"\r\n+                    value=\".{2}|.{1}\"/>\r\n+        </module>\r\n+\r\n+\r\n+        <!-- Miscellaneous other checks.                   -->\r\n+        <!-- See https://checkstyle.org/config_misc.html -->\r\n+        <module name=\"ArrayTypeStyle\"/>\r\n+        <module name=\"TodoComment\"/>\r\n+        <module name=\"UpperEll\"/>\r\n+        <module name=\"EqualsAvoidNull\"/>\r\n+        <module name=\"StringLiteralEquality\"/>\r\n+        <module name=\"UnnecessaryParentheses\"/>\r\n+\r\n+\r\n+        <!-- Prohibited (outdated) APIs -->\r\n+        <module name=\"IllegalType\">\r\n+            <property name=\"illegalClassNames\"\r\n+                      value=\"java.lang.StringBuffer, StringBuffer,\r\n+                      java.util.Vector, Vector, java.util.Hashtable, Hastable\"/>\r\n+        </module>\r\n+\r\n+    </module>\r\n+\r\n+</module>\r"
  },
  {
    "sha": "daa7e9b2bea91e4f4b9b558ecbad70fe44ea043f",
    "filename": "jsyntrax/pom.xml",
    "status": "modified",
    "additions": 67,
    "deletions": 2,
    "changes": 69,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/pom.xml",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/pom.xml",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/pom.xml?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -12,6 +12,7 @@\n     <artifactId>jsyntrax</artifactId>\n     <packaging>jar</packaging>\n     <name>jsyntrax</name>\n+\n     \n     <properties>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n@@ -21,6 +22,13 @@\n         <maven.surefire.plugin.version>2.22.2</maven.surefire.plugin.version>\n         <junit.version>5.7.0</junit.version>\n         <maven.assembly.plugin.version>3.3.0</maven.assembly.plugin.version>\n+\n+        <assertj.core.version>3.19.0</assertj.core.version>\n+        <approvaltests.version>9.5.0</approvaltests.version>\n+        <jacoco.maven.plugin.version>0.8.6</jacoco.maven.plugin.version>\n+        <checkstyle.maven.plugin.version>3.1.2</checkstyle.maven.plugin.version>\n+        <checkstyle.version>8.40</checkstyle.version>\n+        <lombok.version>1.18.16</lombok.version>\n     </properties>\n \n     <dependencies>\n@@ -40,12 +48,26 @@\n             <version>${junit.version}</version>\n             <scope>test</scope>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>org.assertj</groupId>\n+            <artifactId>assertj-core</artifactId>\n+            <version>${assertj.core.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n         <dependency>\n             <groupId>com.approvaltests</groupId>\n             <artifactId>approvaltests</artifactId>\n-            <version>9.5.0</version>\n+            <version>${approvaltests.version}</version>\n             <scope>test</scope>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-checkstyle-plugin</artifactId>\n+            <version>${checkstyle.maven.plugin.version}</version>\n+            <type>maven-plugin</type>\n+        </dependency>\n     </dependencies>\n \n \n@@ -82,6 +104,7 @@\n                             <id>syntrax</id>\n                         </program>\n                     </programs>\n+\n                     <!--silence reflective access warnings for Java 11-->\n                     <extraJvmArguments>--add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED</extraJvmArguments>\n                     <repositoryName>lib</repositoryName>\n@@ -116,7 +139,7 @@\n                 </configuration>\n             </plugin>\n \n-            <!-- maven-eclipse-plugin  -->\n+            <!-- maven-eclipse-plugin -->\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-eclipse-plugin</artifactId>\n@@ -138,6 +161,9 @@\n                 <version>3.2.0</version>\n                 <configuration>\n                     <archive>\n+                        <manifestEntries>\n+                            <Implementation-Version>${revision}</Implementation-Version>\n+                        </manifestEntries>>\n                         <manifest>\n                             <addClasspath>true</addClasspath>\n                             <classpathPrefix>lib/</classpathPrefix>\n@@ -152,6 +178,45 @@\n                 <artifactId>maven-surefire-plugin</artifactId>\n                 <version>${maven.surefire.plugin.version}</version>\n             </plugin>\n+\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <version>${jacoco.maven.plugin.version}</version>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>prepare-agent</goal>\n+                            <goal>report</goal>\n+                        </goals>\n+                    </execution>\n+\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-checkstyle-plugin</artifactId>\n+                <version>${checkstyle.maven.plugin.version}</version>\n+                <executions>\n+                    <execution>\n+                        <id>verify-style</id>\n+                        <phase>process-classes</phase>\n+                        <goals>\n+                            <goal>check</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <configLocation>checkstyle.xml</configLocation>\n+                </configuration>\n+                <dependencies>\n+                    <dependency>\n+                        <groupId>com.puppycrawl.tools</groupId>\n+                        <artifactId>checkstyle</artifactId>\n+                        <version>${checkstyle.version}</version>\n+                    </dependency>\n+                </dependencies>\n+            </plugin>\n         </plugins>\n     </build>\n </project>"
  },
  {
    "sha": "204cd0a763487ca2fcb6a11ceaeec84ab41437c1",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/InputArguments.java",
    "status": "modified",
    "additions": 41,
    "deletions": 18,
    "changes": 59,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/InputArguments.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/InputArguments.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/InputArguments.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,6 +1,11 @@\n package org.atpfivt.jsyntrax;\n \n-import groovyjarjarcommonscli.*;\n+import groovyjarjarcommonscli.CommandLine;\n+import groovyjarjarcommonscli.HelpFormatter;\n+import groovyjarjarcommonscli.Option;\n+import groovyjarjarcommonscli.Options;\n+import groovyjarjarcommonscli.ParseException;\n+import groovyjarjarcommonscli.PosixParser;\n \n import java.io.PrintWriter;\n import java.nio.file.Path;\n@@ -11,44 +16,54 @@\n \n public class InputArguments {\n \n-    private static final Options options;\n-    private static final Map<Option, BiConsumer<InputArguments, String>> optionsMap;\n+    private static final Options OPTIONS;\n+    private static final Map<Option, BiConsumer<InputArguments, String>> OPTIONS_MAP;\n     private boolean help;\n     private Path input;\n     private Path output;\n     private Path style;\n     private String title;\n+    private String version;\n     private boolean transparent;\n     private double scale = 1.0;\n+    private boolean getDefaultStyle = false;\n \n     static {\n-        options = new Options();\n-        optionsMap = new LinkedHashMap<>();\n-        optionsMap.put(new Option(\"h\", \"help\", false, \"Show this help message and exit\"),\n+        OPTIONS = new Options();\n+        OPTIONS_MAP = new LinkedHashMap<>();\n+        OPTIONS_MAP.put(new Option(\"h\", \"help\", false, \"Show this help message and exit\"),\n                 (o, s) -> o.help = true);\n-        optionsMap.put(new Option(\"i\", \"input\", true, \"Diagram spec file\"),\n+        OPTIONS_MAP.put(new Option(\"i\", \"input\", true, \"Diagram spec file\"),\n                 (o, s) -> o.input = Paths.get(s));\n-        optionsMap.put(new Option(\"o\", \"output\", true, \"Output file\"),\n+        OPTIONS_MAP.put(new Option(\"o\", \"output\", true, \"Output file\"),\n                 (o, s) -> o.output = Paths.get(s));\n-        optionsMap.put(new Option(\"s\", \"style\", true, \"Style config .ini file\"),\n+        OPTIONS_MAP.put(new Option(\"s\", \"style\", true, \"Style config .ini file\"),\n                 (o, s) -> o.style = Paths.get(s));\n-        optionsMap.put(new Option(null, \"title\", true, \"Diagram title\"),\n+        OPTIONS_MAP.put(new Option(null, \"title\", true, \"Diagram title\"),\n                 (o, s) -> o.title = s);\n-        optionsMap.put(new Option(\"t\", \"transparent\", false, \"Transparent background\"),\n+        OPTIONS_MAP.put(new Option(\"t\", \"transparent\", false, \"Transparent background\"),\n                 (o, s) -> o.transparent = true);\n-        optionsMap.put(new Option(null, \"scale\", true, \"Scale image\"),\n-                (o, s) -> o.scale = Double.parseDouble(s)\n+        OPTIONS_MAP.put(new Option(null, \"scale\", true, \"Scale image\"),\n+                (o, s) -> o.scale = Double.parseDouble(s));\n+        OPTIONS_MAP.put(new Option(\"v\", \"version\", false, \"Release version\"),\n+                (o, s) -> {\n+                    o.version = \"JSyntrax \" + Main.class\n+                            .getPackage()\n+                            .getImplementationVersion();\n+                }\n         );\n+        OPTIONS_MAP.put(new Option(null, \"get-style\", false, \"Create default style .ini\"),\n+                (o, s) -> o.getDefaultStyle = true);\n     }\n \n     InputArguments(String... args) throws ParseException {\n-        for (Option o : optionsMap.keySet()) {\n-            options.addOption(o);\n+        for (Option o : OPTIONS_MAP.keySet()) {\n+            OPTIONS.addOption(o);\n         }\n-        CommandLine commandLine = new PosixParser().parse(options, args);\n+        CommandLine commandLine = new PosixParser().parse(OPTIONS, args);\n \n         for (Option o : commandLine.getOptions()) {\n-            optionsMap.getOrDefault(o, (x, s) -> {\n+            OPTIONS_MAP.getOrDefault(o, (x, s) -> {\n             }).accept(this, o.getValue());\n         }\n         //Any argument not associated with a flag is assumed to be the input file name\n@@ -61,7 +76,7 @@ public static void writeHelp(PrintWriter writer) {\n         final HelpFormatter helpFormatter = new HelpFormatter();\n         helpFormatter.printHelp(writer, 80, \"syntrax\",\n                 \"Railroad diagram generator.\\n\\nOptions\",\n-                options, 3, 5, null, true);\n+                OPTIONS, 3, 5, null, true);\n         writer.flush();\n     }\n \n@@ -92,4 +107,12 @@ public boolean isTransparent() {\n     public double getScale() {\n         return scale;\n     }\n+\n+    public String getVersion() {\n+        return version;\n+    }\n+\n+    public boolean getDefaultStyleProperty() {\n+        return getDefaultStyle;\n+    }\n }"
  },
  {
    "sha": "854f7f19379af7793e024e7144d45ca6c7622c70",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/Main.java",
    "status": "modified",
    "additions": 45,
    "deletions": 12,
    "changes": 57,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/Main.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/Main.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/Main.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -4,17 +4,24 @@\n import org.atpfivt.jsyntrax.generators.SVGCanvas;\n import org.atpfivt.jsyntrax.generators.SVGCanvasBuilder;\n import org.atpfivt.jsyntrax.groovy_parser.Parser;\n-import org.atpfivt.jsyntrax.styles.Style;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n import org.atpfivt.jsyntrax.units.Unit;\n import org.codehaus.groovy.control.CompilationFailedException;\n \n+import java.io.BufferedReader;\n import java.io.IOException;\n+import java.io.InputStreamReader;\n import java.io.PrintWriter;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.stream.Collectors;\n \n-public class Main {\n-    public static void main(String... args) {\n+public final class Main {\n+    public static final String JSYNTRAX_INI = \"jsyntrax.ini\";\n+\n+    private Main() { }\n+\n+    public static void main(String... args) throws IOException, NoSuchFieldException, IllegalAccessException {\n         // parse command line arguments\n         InputArguments iArgs;\n         try {\n@@ -25,6 +32,30 @@ public static void main(String... args) {\n             return;\n         }\n \n+        // print version if specified\n+        String version = iArgs.getVersion();\n+        if (version != null) {\n+            System.out.println(iArgs.getVersion());\n+            return;\n+        }\n+\n+        // get-style\n+        if (iArgs.getDefaultStyleProperty()) {\n+            String config = new BufferedReader(new InputStreamReader(\n+                    Main.class.getResourceAsStream(\"/\" + JSYNTRAX_INI)))\n+                    .lines()\n+                    .collect(Collectors.joining(\"\\n\"))\n+                    + \"\\n\";\n+            Path destPath = Path.of(System.getProperty(\"user.dir\"), JSYNTRAX_INI);\n+            if (Files.exists(destPath)) {\n+                System.out.printf(\"Ini file \\\"%s\\\" exists%n\", JSYNTRAX_INI);\n+            } else {\n+                System.out.printf(\"Creating ini with default styles in \\\"%s\\\"%n\", JSYNTRAX_INI);\n+                Files.writeString(destPath, config);\n+            }\n+            return;\n+        }\n+\n         // write help if needed\n         if (iArgs.isHelp()) {\n             InputArguments.writeHelp(new PrintWriter(System.out));\n@@ -37,12 +68,21 @@ public static void main(String... args) {\n         }\n \n         // parse style file\n-        Style style = new Style(iArgs.getScale(), iArgs.isTransparent());\n+        StyleConfig style;\n         if (iArgs.getStyle() != null) {\n-            if (!style.updateByFile(iArgs.getStyle())) {\n+            try {\n+                style = new StyleConfig(\n+                        iArgs.getScale(),\n+                        iArgs.isTransparent(),\n+                        iArgs.getStyle());\n+            } catch (Exception e) {\n                 System.out.println(\"Failed parsing style file\");\n                 return;\n             }\n+        } else {\n+            style = new StyleConfig(\n+                    iArgs.getScale(),\n+                    iArgs.isTransparent());\n         }\n \n         // read script\n@@ -82,23 +122,19 @@ public static void main(String... args) {\n     }\n \n     static boolean checkPathsFromArgs(InputArguments iArgs) {\n-\n         Path input = iArgs.getInput();\n         Path output = iArgs.getOutput();\n         Path style = iArgs.getStyle();\n-\n         // check input path\n         if (!(input != null && Files.isRegularFile(input) && Files.isReadable(input))) {\n             System.out.printf(\"Cannot read input file %s%n\", input);\n             return false;\n         }\n-\n         // check output path\n         if (output == null) {\n             System.out.println(\"No output file set\");\n             return false;\n         }\n-\n         if (!Files.exists(output)) {\n             try {\n                 Files.createFile(output);\n@@ -108,18 +144,15 @@ static boolean checkPathsFromArgs(InputArguments iArgs) {\n             }\n             System.out.printf(\"Output file %s was created%n\", output);\n         }\n-\n         if (!(Files.isRegularFile(output) && Files.isWritable(output))) {\n             System.out.printf(\"Cannot write to %s%n\", output);\n             return false;\n         }\n-\n         // check style path\n         if (style != null && !(Files.isRegularFile(style) && Files.isReadable(style))) {\n             System.out.printf(\"Cannot read style file %s%n\", style);\n             return false;\n         }\n-\n         return true;\n     }\n }"
  },
  {
    "sha": "37e32288337317a83ac66f0c63d194e5f8976eb0",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/SVGCanvas.java",
    "status": "modified",
    "additions": 36,
    "deletions": 36,
    "changes": 72,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/SVGCanvas.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/SVGCanvas.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/SVGCanvas.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -2,27 +2,28 @@\n \n import org.atpfivt.jsyntrax.generators.elements.Element;\n import org.atpfivt.jsyntrax.styles.NodeStyle;\n-import org.atpfivt.jsyntrax.styles.Style;\n-import org.atpfivt.jsyntrax.util.Algorithm;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n+import org.atpfivt.jsyntrax.util.StringUtils;\n import org.atpfivt.jsyntrax.util.Pair;\n \n-import java.awt.*;\n+import java.awt.Color;\n+import java.awt.Font;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Optional;\n \n public class SVGCanvas {\n-    private final Style style;\n+    private final StyleConfig style;\n     private final HashMap<String, Integer> tagcnt = new HashMap<>();\n     private final ArrayList<Element> elements = new ArrayList<>();\n \n-    public SVGCanvas(Style style) {\n+    public SVGCanvas(StyleConfig style) {\n         this.style = style;\n     }\n \n     // default prefix = \"x\", default suffix = \"\"\n-    public String new_tag(String prefix, String suffix) {\n+    public String newTag(String prefix, String suffix) {\n         String f = prefix + \"___\" + suffix;\n         Integer value = tagcnt.getOrDefault(f, 0);\n         tagcnt.put(f, value + 1);\n@@ -52,10 +53,10 @@ public void dropTag(final String tag) {\n     public void moveByTag(String tag, int dx, int dy) {\n         for (Element e : elements) {\n             if (e.isTagged(tag)) {\n-                e.start.f += dx;\n-                e.start.s += dy;\n-                e.end.f += dx;\n-                e.end.s += dy;\n+                e.getStart().f += dx;\n+                e.getStart().s += dy;\n+                e.getEnd().f += dx;\n+                e.getEnd().s += dy;\n             }\n         }\n     }\n@@ -75,22 +76,21 @@ public void scaleByTag(String tag, double scale) {\n     public Pair<Pair<Integer, Integer>, Pair<Integer, Integer>> getBoundingBoxByTag(String tag) {\n         Pair<Integer, Integer> start = null;\n         Pair<Integer, Integer> end = null;\n-        for (Element e: this.elements)\n-        {\n+        for (Element e: this.elements) {\n             if (e.isTagged(tag)) {\n                 if (start == null) {\n-                    start = new Pair<>(e.start);\n-                    end = new Pair<>(e.end);\n+                    start = new Pair<>(e.getStart());\n+                    end = new Pair<>(e.getEnd());\n                 }\n-                start.f = Math.min(start.f, e.start.f);\n-                start.f = Math.min(start.f, e.end.f);\n-                start.s = Math.min(start.s, e.start.s);\n-                start.s = Math.min(start.s, e.end.s);\n-\n-                end.f = Math.max(end.f, e.start.f);\n-                end.f = Math.max(end.f, e.end.f);\n-                end.s = Math.max(end.s, e.start.s);\n-                end.s = Math.max(end.s, e.end.s);\n+                start.f = Math.min(start.f, e.getStart().f);\n+                start.f = Math.min(start.f, e.getEnd().f);\n+                start.s = Math.min(start.s, e.getStart().s);\n+                start.s = Math.min(start.s, e.getEnd().s);\n+\n+                end.f = Math.max(end.f, e.getStart().f);\n+                end.f = Math.max(end.f, e.getEnd().f);\n+                end.s = Math.max(end.s, e.getStart().s);\n+                end.s = Math.max(end.s, e.getEnd().s);\n             }\n         }\n         return new Pair<>(start, end);\n@@ -105,19 +105,19 @@ public String generateSVG() {\n         // move to picture to (0, 0)\n         moveByTag(\"all\", -res.f.f, -res.f.s);\n         scaleByTag(\"all\", scale);\n-        moveByTag(\"all\", style.padding, style.padding);\n+        moveByTag(\"all\", style.getPadding(), style.getPadding());\n \n         res = getBoundingBoxByTag(\"all\");\n         Pair<Integer, Integer> end = res.s;\n \n-        int W = end.f + style.padding;\n-        int H = end.s + style.padding;\n+        int w = end.f + style.getPadding();\n+        int h = end.s + style.getPadding();\n \n         // collect fonts\n         HashMap<String, Pair<Font, Color>> fonts = new HashMap<>();\n-        fonts.put(\"title_font\", new Pair<>(this.style.title_font, this.style.text_color));\n-        for (NodeStyle ns : this.style.nodeStyles) {\n-            fonts.put(ns.name + \"_font\", new Pair<>(ns.font, ns.text_color));\n+        fonts.put(\"title_font\", new Pair<>(this.style.getTitleFont(), this.style.getTextColor()));\n+        for (NodeStyle ns : this.style.getNodeStyles()) {\n+            fonts.put(ns.getName() + \"_font\", new Pair<>(ns.getFont(), ns.getTextColor()));\n         }\n \n         // header\n@@ -126,8 +126,8 @@ public String generateSVG() {\n         sb.append(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n\");\n         sb.append(\"xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n\");\n         sb.append(\"xml:space=\\\"preserve\\\"\\n\");\n-        sb.append(\"width=\\\"\").append(W).append(\"\\\" \")\n-                .append(\"height=\\\"\").append(H).append(\"\\\" \")\n+        sb.append(\"width=\\\"\").append(w).append(\"\\\" \")\n+                .append(\"height=\\\"\").append(h).append(\"\\\" \")\n                 .append(\"version=\\\"1.1\\\">\\n\");\n         // styles\n         sb.append(\"<style type=\\\"text/css\\\">\\n\");\n@@ -136,7 +136,7 @@ public String generateSVG() {\n         for (Map.Entry<String, Pair<Font, Color>> fontPair : fonts.entrySet()) {\n             String fontName = fontPair.getKey();\n             String fontFamily = fontPair.getValue().f.getName();\n-            String fontSize = Integer.toString((int)(fontPair.getValue().f.getSize() * scale));\n+            String fontSize = Integer.toString((int) (fontPair.getValue().f.getSize() * scale));\n             String fontWeight = \"normal\";\n             if ((fontPair.getValue().f.getStyle() & Font.BOLD) == Font.BOLD) {\n                 fontWeight = \"bold\";\n@@ -146,7 +146,7 @@ public String generateSVG() {\n                 fontStyle = \"italic\";\n             }\n \n-            String hex = Algorithm.toHex(fontPair.getValue().s);\n+            String hex = StringUtils.toHex(fontPair.getValue().s);\n \n             sb.append(\".\").append(fontName).append(\" \");\n             sb.append(\"{fill:\").append(hex).append(\"; text-anchor:middle;\\n\");\n@@ -167,7 +167,7 @@ public String generateSVG() {\n         sb.append(\"<defs>\\n\");\n         sb.append(\"<marker id=\\\"arrow\\\" markerWidth=\\\"5\\\" markerHeight=\\\"4\\\" \")\n                 .append(\"refX=\\\"2.5\\\" refY=\\\"2\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\">\\n\");\n-        String hex = Algorithm.toHex(this.style.line_color);\n+        String hex = StringUtils.toHex(this.style.getLineColor());\n         sb.append(\"<path d=\\\"M0,0 L0.5,2 L0,4 L4.5,2 z\\\" fill=\\\"\").append(hex).append(\"\\\" />\\n\");\n         sb.append(\"</marker>\\n</defs>\\n\");\n \n@@ -177,8 +177,8 @@ public String generateSVG() {\n         }\n         for (Element e : this.elements) {\n \n-            if (style.shadow) {\n-                e.addShadow(sb, this.style);\n+            if (style.isShadow()) {\n+                e.addShadow(sb,  this.style);\n             }\n             e.toSVG(sb, this.style);\n         }"
  },
  {
    "sha": "5bbec44358e0d330ced1014c7645a00a417aedcd",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/SVGCanvasBuilder.java",
    "status": "modified",
    "additions": 231,
    "deletions": 208,
    "changes": 439,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/SVGCanvasBuilder.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/SVGCanvasBuilder.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/SVGCanvasBuilder.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,9 +1,17 @@\n package org.atpfivt.jsyntrax.generators;\n \n import org.atpfivt.jsyntrax.Configuration;\n-import org.atpfivt.jsyntrax.generators.elements.*;\n+import org.atpfivt.jsyntrax.generators.elements.ArcElement;\n+import org.atpfivt.jsyntrax.generators.elements.BoxBubbleElement;\n+import org.atpfivt.jsyntrax.generators.elements.BubbleElement;\n+import org.atpfivt.jsyntrax.generators.elements.BubbleElementBase;\n+import org.atpfivt.jsyntrax.generators.elements.Element;\n+import org.atpfivt.jsyntrax.generators.elements.HexBubbleElement;\n+import org.atpfivt.jsyntrax.generators.elements.LineElement;\n+import org.atpfivt.jsyntrax.generators.elements.OvalElement;\n+import org.atpfivt.jsyntrax.generators.elements.TitleElement;\n import org.atpfivt.jsyntrax.styles.NodeStyle;\n-import org.atpfivt.jsyntrax.styles.Style;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n import org.atpfivt.jsyntrax.units.Unit;\n import org.atpfivt.jsyntrax.units.nodes.Bullet;\n import org.atpfivt.jsyntrax.units.nodes.Node;\n@@ -24,6 +32,7 @@\n import java.awt.Font;\n import java.awt.font.FontRenderContext;\n import java.awt.geom.Rectangle2D;\n+import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -32,17 +41,18 @@\n /**\n  * @brief class for building canvas by Unit\n  */\n-public class SVGCanvasBuilder implements Visitor {\n-    private Map<String, String> urlMap;\n-    private Style style;\n+public final class SVGCanvasBuilder implements Visitor {\n+    private Map<String, String> urlMap = Collections.emptyMap();;\n+    private StyleConfig style;\n     private SVGCanvas canvas;\n \n-    public SVGCanvasBuilder() {\n-        this.style = new Style(1, false);\n+    public SVGCanvasBuilder()\n+            throws IllegalAccessException, NoSuchFieldException, IOException {\n+        this.style = new StyleConfig(1, false);\n         this.urlMap = Collections.emptyMap();\n     }\n \n-    public SVGCanvasBuilder withStyle(Style style) {\n+    public SVGCanvasBuilder withStyle(StyleConfig style) {\n         this.style = style;\n         return this;\n     }\n@@ -66,41 +76,47 @@ public SVGCanvas generateSVG(Unit root) {\n         Pair<Pair<Integer, Integer>, Pair<Integer, Integer>> bbox =\n                 canvas.getBoundingBoxByTag(tag);\n \n-        String titleTag = canvas.new_tag(\"x\", \"-title\");\n-        Element e = new TitleElement(title, style.title_font, \"title_font\", titleTag);\n+        String titleTag = canvas.newTag(\"x\", \"-title\");\n+        Element e = new TitleElement(\n+                title,\n+                style.getTitleFont(),\n+                \"title_font\",\n+                titleTag\n+        );\n         canvas.addElement(e);\n \n         // set left / middle / right location\n-        switch (style.title_pos) {\n+        switch (style.getTitlePos()) {\n             case bl:\n             case tl:\n-                canvas.moveByTag(titleTag, 2 * style.padding, 0);\n+                canvas.moveByTag(titleTag, 2 * style.getPadding(), 0);\n                 break;\n             case bm:\n             case tm:\n-                canvas.moveByTag(titleTag, (bbox.f.f + bbox.s.f - e.end.f) / 2\n-                        - 2 * style.padding, 0);\n+                canvas.moveByTag(titleTag,\n+                        (bbox.f.f + bbox.s.f - e.getEnd().f) / 2\n+                        - 2 * style.getPadding(), 0);\n                 break;\n             case br:\n             case tr:\n-                canvas.moveByTag(titleTag, bbox.s.f - e.end.f - 2 * style.padding, 0);\n+                canvas.moveByTag(titleTag,\n+                        bbox.s.f - e.getEnd().f - 2 * style.getPadding(), 0);\n                 break;\n         }\n \n         // set top / bottom location\n-        switch (style.title_pos) {\n+        switch (style.getTitlePos()) {\n             case tl:\n             case tm:\n             case tr:\n-                canvas.moveByTag(tag, 0, e.end.s + 2 * style.padding);\n+                canvas.moveByTag(tag, 0, e.getEnd().s + 2 * style.getPadding());\n                 break;\n             case bl:\n             case bm:\n             case br:\n-                canvas.moveByTag(titleTag, 0, bbox.s.s + 2 * style.padding);\n+                canvas.moveByTag(titleTag, 0, bbox.s.s + 2 * style.getPadding());\n                 break;\n         }\n-\n         return canvas;\n     }\n \n@@ -127,10 +143,10 @@ private UnitEndPoint getDiagramParseResult(Unit unit, boolean ltor) {\n \n     @Override\n     public void visitNoneNode(NoneNode unit) {\n-        String tag = this.canvas.new_tag(\"x\", \"\");\n+        String tag = this.canvas.newTag(\"x\", \"\");\n \n         Element e = new LineElement(new Pair<>(0, 0), new Pair<>(1, 0),\n-                null, this.style.outline_width, tag);\n+                null, this.style.getOutlineWidth(), tag);\n         e.setStart(new Pair<>(0, 0));\n         e.setEnd(new Pair<>(1, 0));\n         this.canvas.addElement(e);\n@@ -149,13 +165,13 @@ public void visitNode(Node unit) {\n         String txt = unit.toString();\n \n         NodeStyle ns = this.style.getNodeStyle(txt);\n-        txt = ns.modify(txt);\n+        txt = ns.unwrapTextContent(txt);\n \n-        Font font = ns.font;\n-        String fontName = ns.name + \"_font\";\n+        Font font = ns.getFont();\n+        String fontName = ns.getName() + \"_font\";\n \n-        Color fill = ns.fill;\n-        Color textColor = ns.text_color;\n+        Color fill = ns.getFill();\n+        Color textColor = ns.getTextColor();\n \n         Pair<Integer, Integer> textSize = getTextSize(txt, font);\n         int x0 = -textSize.f / 2;\n@@ -170,7 +186,7 @@ public void visitNode(Node unit) {\n         int rgt = x1;\n         int top = y1 - 2 * rad;\n \n-        if (ns.shape.equals(\"bubble\") || ns.shape.equals(\"hex\")) {\n+        if (ns.getShape().equals(\"bubble\") || ns.getShape().equals(\"hex\")) {\n             lft += rad / 2 - 2;\n             rgt -= rad / 2 - 2;\n         } else {\n@@ -183,64 +199,64 @@ public void visitNode(Node unit) {\n             rgt = lft;\n         }\n \n-        String tag = this.canvas.new_tag(\"x\", \"-box\");\n-\n+        String tag = this.canvas.newTag(\"x\", \"-box\");\n         Pair<Integer, Integer> start;\n         Pair<Integer, Integer> end;\n \n         BubbleElementBase b;\n         String href = this.urlMap.get(txt);\n-        switch (ns.shape) {\n+        switch (ns.getShape()) {\n             case \"bubble\":\n                 start = new Pair<>(lft - rad, top);\n                 end = new Pair<>(rgt + rad, y1);\n-                b = new BubbleElement(start, end, href, txt, new Pair<>(x0, y0), font,\n-                        fontName, textColor, this.style.outline_width, fill, tag);\n+                b = new BubbleElement(start, end, href,\n+                        txt, new Pair<>(x0, y0), font,\n+                        fontName, textColor, this.style.getOutlineWidth(), fill, tag);\n                 break;\n             case \"hex\":\n                 start = new Pair<>(lft - rad, top);\n                 end = new Pair<>(rgt + rad, y1);\n-                b = new HexBubbleElement(start, end, href, txt, new Pair<>(x0, y0), font,\n-                        fontName, textColor, this.style.outline_width, fill, tag);\n+                b = new HexBubbleElement(start, end, href,\n+                        txt, new Pair<>(x0, y0), font,\n+                        fontName, textColor, this.style.getOutlineWidth(), fill, tag);\n                 break;\n-            default:\n+            default: {\n                 start = new Pair<>(lft, top);\n                 end = new Pair<>(rgt, y1);\n-                b = new BoxBubbleElement(start, end, href, txt, new Pair<>(x0, y0), font,\n-                        fontName, textColor, this.style.outline_width, fill, tag);\n+                b = new BoxBubbleElement(start, end, href,\n+                        txt, new Pair<>(x0, y0), font,\n+                        fontName, textColor, this.style.getOutlineWidth(), fill, tag);\n                 break;\n+            }\n         }\n         this.canvas.addElement(b);\n \n         x0 = start.f;\n         x1 = end.f;\n-\n         int width = x1 - x0;\n-\n         this.canvas.moveByTag(tag, -x0, 2);\n-\n         setUnitEndPoint(new UnitEndPoint(tag, new Pair<>(width, 0)));\n     }\n \n     @Override\n     public void visitBullet(Bullet unit) {\n-        String tag = this.canvas.new_tag(\"x\", \"\");\n-        int w = this.style.outline_width;\n+        String tag = this.canvas.newTag(\"x\", \"\");\n+        int w = this.style.getOutlineWidth();\n         int r = w + 1;\n         this.canvas.addElement(\n                 new OvalElement(new Pair<>(0, -r), new Pair<>(2 * r, r),\n-                        w, this.style.bullet_fill, tag));\n+                        w, this.style.getBulletFill(), tag));\n \n         setUnitEndPoint(new UnitEndPoint(tag, new Pair<>(2 * r, 0)));\n     }\n \n     @Override\n     public void visitLine(Line line) {\n         boolean ltor = getLtor();\n-        String tag = this.canvas.new_tag(\"x\", \"\");\n+        String tag = this.canvas.newTag(\"x\", \"\");\n \n-        int sep = this.style.h_sep;\n-        int width = this.style.line_width;\n+        int sep = this.style.getHSep();\n+        int width = this.style.getLineWidth();\n         Pair<Integer, Integer> pos = new Pair<>(0, 0);\n \n         int unitNum = 0;\n@@ -298,9 +314,9 @@ public void visitLine(Line line) {\n     @Override\n     public void visitToploop(Toploop loop) {\n         boolean ltor = getLtor();\n-        String tag = this.canvas.new_tag(\"x\", \"\");\n+        String tag = this.canvas.newTag(\"x\", \"\");\n \n-        int sep = this.style.v_sep;\n+        int sep = this.style.getVSep();\n         int vsep = sep / 2;\n \n         // parse forward\n@@ -338,20 +354,27 @@ public void visitToploop(Toploop loop) {\n             bexx += dx;\n             this.canvas.addElement(\n                     new LineElement(new Pair<>(0, dy), new Pair<>(dx, dy),\n-                            null, this.style.line_width, bt));\n+                            null, this.style.getLineWidth(), bt));\n             this.canvas.addElement(\n-                    new LineElement(new Pair<>(bexx, bexy), new Pair<>(fx1, bexy),\n-                            (ltor || dx < 2 * vsep ? null : \"first\"), this.style.line_width, bt));\n+                    new LineElement(\n+                            new Pair<>(bexx, bexy),\n+                            new Pair<>(fx1, bexy),\n+                            ltor || dx < 2 * vsep ? null : \"first\",\n+                            this.style.getLineWidth(), bt));\n             mxx = fexx;\n         } else if (bw > fw) {\n             this.canvas.moveByTag(ft, dx, 0);\n             fexx += dx;\n             this.canvas.addElement(\n-                    new LineElement(new Pair<>(0, 0), new Pair<>(dx, fexy),\n-                            null, this.style.line_width, ft));\n+                    new LineElement(\n+                            new Pair<>(0, 0),\n+                            new Pair<>(dx, fexy),\n+                            null, this.style.getLineWidth(), ft));\n             this.canvas.addElement(\n-                    new LineElement(new Pair<>(fexx, fexy), new Pair<>(bx1, fexy),\n-                            null, this.style.line_width, ft));\n+                    new LineElement(\n+                            new Pair<>(fexx, fexy),\n+                            new Pair<>(bx1, fexy),\n+                            null, this.style.getLineWidth(), ft));\n             mxx = bexx;\n         } else {\n             mxx = fexx;\n@@ -368,7 +391,7 @@ public void visitToploop(Toploop loop) {\n         mxx += sep;\n         this.canvas.addElement(\n                 new LineElement(new Pair<>(0, 0), new Pair<>(sep, 0),\n-                        null, this.style.line_width, tag));\n+                        null, this.style.getLineWidth(), tag));\n \n         drawLeftTurnBack(tag, sep, 0, dy, ltor ? \"up\" : \"down\");\n         drawRightTurnBack(tag, mxx, fexy, bexy, ltor ? \"down\" : \"up\");\n@@ -378,16 +401,16 @@ public void visitToploop(Toploop loop) {\n \n         this.canvas.addElement(\n                 new LineElement(new Pair<>(mxx, fexy), new Pair<>(x1, fexy),\n-                        null, this.style.line_width, tag));\n+                        null, this.style.getLineWidth(), tag));\n \n         setUnitEndPoint(new UnitEndPoint(tag, new Pair<>(x1, fexy)));\n     }\n \n     @Override\n     public void visitLoop(Loop loop) {\n         boolean ltor = getLtor();\n-        String tag = this.canvas.new_tag(\"x\", \"\");\n-        int sep = this.style.v_sep;\n+        String tag = this.canvas.newTag(\"x\", \"\");\n+        int sep = this.style.getVSep();\n         int vsep = sep / 2;\n \n         // parse forward\n@@ -426,21 +449,21 @@ public void visitLoop(Loop loop) {\n                 bexx += dx;\n                 this.canvas.addElement(\n                         new LineElement(new Pair<>(0, dy), new Pair<>(dx, dy),\n-                                null, this.style.line_width, bt));\n+                                null, this.style.getLineWidth(), bt));\n                 this.canvas.addElement(\n                         new LineElement(new Pair<>(bexx, bexy), new Pair<>(fexx, bexy),\n-                                \"first\", this.style.line_width, bt));\n+                                \"first\", this.style.getLineWidth(), bt));\n             } else {\n                 dx = (fw - bw) / 2;\n                 this.canvas.moveByTag(bt, dx, 0);\n                 bexx += dx;\n \n                 this.canvas.addElement(\n                         new LineElement(new Pair<>(0, dy), new Pair<>(dx, dy),\n-                                ltor || dx < 2 * vsep ? null : \"last\", this.style.line_width, bt));\n+                                ltor || dx < 2 * vsep ? null : \"last\", this.style.getLineWidth(), bt));\n                 this.canvas.addElement(\n                         new LineElement(new Pair<>(bexx, bexy), new Pair<>(fx1, bexy),\n-                                !ltor || dx < 2 * vsep ? null : \"first\", this.style.line_width, bt));\n+                                !ltor || dx < 2 * vsep ? null : \"first\", this.style.getLineWidth(), bt));\n             }\n             mxx = fexx;\n         } else if (bw > fw) {\n@@ -449,10 +472,10 @@ public void visitLoop(Loop loop) {\n             fexx += dx;\n             this.canvas.addElement(\n                     new LineElement(new Pair<>(0, 0), new Pair<>(dx, fexy),\n-                            ltor ? \"last\" : \"first\", this.style.line_width, ft));\n+                            ltor ? \"last\" : \"first\", this.style.getLineWidth(), ft));\n             this.canvas.addElement(\n                     new LineElement(new Pair<>(fexx, fexy), new Pair<>(bx1, fexy),\n-                            null, this.style.line_width, ft));\n+                            null, this.style.getLineWidth(), ft));\n             mxx = bexx;\n         } else {\n             mxx = fexx;\n@@ -470,25 +493,25 @@ public void visitLoop(Loop loop) {\n         mxx += sep;\n         this.canvas.addElement(\n                 new LineElement(new Pair<>(0, 0), new Pair<>(sep, 0),\n-                        null, this.style.line_width, tag));\n+                        null, this.style.getLineWidth(), tag));\n \n         drawLeftTurnBack(tag, sep, 0, dy, ltor ? \"up\" : \"down\");\n         drawRightTurnBack(tag, mxx, fexy, bexy, ltor ? \"down\" : \"up\");\n \n-        int exit_x = mxx + this.style.max_radius;\n+        int exitX = mxx + this.style.getMaxRadius();\n         this.canvas.addElement(\n-                new LineElement(new Pair<>(mxx, fexy), new Pair<>(exit_x, fexy),\n-                        null, this.style.line_width, tag));\n+                new LineElement(new Pair<>(mxx, fexy), new Pair<>(exitX, fexy),\n+                        null, this.style.getLineWidth(), tag));\n \n-        setUnitEndPoint(new UnitEndPoint(tag, new Pair<>(exit_x, fexy)));\n+        setUnitEndPoint(new UnitEndPoint(tag, new Pair<>(exitX, fexy)));\n     }\n \n     @Override\n     public void visitChoice(Choice choice) {\n         boolean ltor = getLtor();\n-        String tag = this.canvas.new_tag(\"x\", \"\");\n+        String tag = this.canvas.newTag(\"x\", \"\");\n \n-        int sep = this.style.v_sep;\n+        int sep = this.style.getVSep();\n         int vsep = sep / 2;\n \n         int n = choice.getUnits().size();\n@@ -540,14 +563,14 @@ public void visitChoice(Choice choice) {\n             if (i == 0) {\n                 this.canvas.addElement(\n                         new LineElement(new Pair<>(0, 0), new Pair<>(dx, 0),\n-                                ltor && dx > x2 ? \"last\" : null, this.style.line_width, tag));\n+                                ltor && dx > x2 ? \"last\" : null, this.style.getLineWidth(), tag));\n                 this.canvas.addElement(\n                         new LineElement(new Pair<>(texx, texy), new Pair<>(x5 + 1, texy),\n-                                ltor ? null : \"first\", this.style.line_width, tag));\n+                                ltor ? null : \"first\", this.style.getLineWidth(), tag));\n                 exy = texy;\n                 this.canvas.addElement(\n                         new ArcElement(new Pair<>(-sep, 0), new Pair<>(sep, sep * 2),\n-                                this.style.line_width, 90, -90, tag));\n+                                this.style.getLineWidth(), 90, -90, tag));\n                 btm = ty1;\n             } else {\n                 int dy = Math.max(btm - ty0 + vsep, 2 * sep);\n@@ -556,29 +579,29 @@ public void visitChoice(Choice choice) {\n                 if (dx > x2) {\n                     this.canvas.addElement(\n                             new LineElement(new Pair<>(x2, dy), new Pair<>(dx, dy),\n-                                    ltor ? \"last\" : null, this.style.line_width, tag));\n+                                    ltor ? \"last\" : null, this.style.getLineWidth(), tag));\n                     this.canvas.addElement(\n                             new LineElement(new Pair<>(texx, texy), new Pair<>(x3, texy),\n-                                    ltor ? null : \"first\", this.style.line_width, tag));\n+                                    ltor ? null : \"first\", this.style.getLineWidth(), tag));\n                 }\n                 int y1 = dy - 2 * sep;\n                 this.canvas.addElement(\n                         new ArcElement(new Pair<>(sep, y1), new Pair<>(sep + 2 * sep, dy),\n-                                this.style.line_width, 180, 90, tag));\n+                                this.style.getLineWidth(), 180, 90, tag));\n                 int y2 = texy - 2 * sep;\n                 this.canvas.addElement(\n                         new ArcElement(new Pair<>(x3 - sep, y2), new Pair<>(x4, texy),\n-                                this.style.line_width, 270, 90, tag));\n+                                this.style.getLineWidth(), 270, 90, tag));\n                 if (i + 1 == n) {\n                     this.canvas.addElement(\n                             new ArcElement(new Pair<>(x4, exy), new Pair<>(x4 + 2 * sep, exy + 2 * sep),\n-                                    this.style.line_width, 180, -90, tag));\n+                                    this.style.getLineWidth(), 180, -90, tag));\n                     this.canvas.addElement(\n                             new LineElement(new Pair<>(sep, dy - sep), new Pair<>(sep, sep),\n-                                    null, this.style.line_width, tag));\n+                                    null, this.style.getLineWidth(), tag));\n                     this.canvas.addElement(\n                             new LineElement(new Pair<>(x4, texy - sep), new Pair<>(x4, exy + sep),\n-                                    null, this.style.line_width, tag));\n+                                    null, this.style.getLineWidth(), tag));\n                 }\n                 btm = ty1 + dy;\n             }\n@@ -618,41 +641,41 @@ public void visitOpt(Opt opt) {\n      */\n     private void parseStack(Stack stack) {\n         boolean ltor = getLtor();\n-        String tag = this.canvas.new_tag(\"x\", \"\");\n+        String tag = this.canvas.newTag(\"x\", \"\");\n \n-        int sep = this.style.v_sep * 2;\n+        int sep = this.style.getVSep() * 2;\n         int btm = 0;\n         int n = stack.getUnits().size();\n         if (n == 0) {\n             setUnitEndPoint(null);\n             return;\n         }\n-        int next_bypass_y = 0;\n-        int bypass_x = 0;\n-        int bypass_y;\n-        int exit_x = 0;\n-        int exit_y = 0;\n+        int nextBypassY = 0;\n+        int bypassX = 0;\n+        int bypassY;\n+        int exitX = 0;\n+        int exitY = 0;\n         int w;\n         int e2;\n         int e3;\n         int ex2;\n-        int enter_x;\n-        int enter_y;\n-        int back_y;\n-        int mid_y;\n+        int enterX;\n+        int enterY;\n+        int backY;\n+        int midY;\n         int bypass = 0;\n \n         for (int i = 0; i < n; ++i) {\n             Unit unit = stack.getUnits().get(i);\n             Unit term;\n-            bypass_y = next_bypass_y;\n+            bypassY = nextBypassY;\n             if (i != 0 && indent >= 0 && unit.getUnits().size() != 0 && unit instanceof Opt) {\n                 bypass = 1;\n                 term = new Line(unit.getUnits());\n             } else {\n                 bypass = 0;\n                 term = unit;\n-                next_bypass_y = 0;\n+                nextBypassY = 0;\n             }\n \n             UnitEndPoint ep = getDiagramParseResult(term, ltor);\n@@ -666,57 +689,57 @@ private void parseStack(Stack stack) {\n             int tx1 = box.s.f;\n \n             if (i == 0) {\n-                exit_x = exx;\n-                exit_y = exy;\n+                exitX = exx;\n+                exitY = exy;\n             } else {\n-                enter_y = btm - ty0 + sep * 2 + 2;\n+                enterY = btm - ty0 + sep * 2 + 2;\n                 if (bypass == 1) {\n-                    next_bypass_y = enter_y - this.style.max_radius;\n+                    nextBypassY = enterY - this.style.getMaxRadius();\n                 }\n                 if (indent < 0) {\n                     w = tx1 - tx0;\n-                    enter_x = exit_x - w + sep * indent;\n+                    enterX = exitX - w + sep * indent;\n                     ex2 = sep * 2 - indent;\n-                    if (ex2 > enter_x) {\n-                        enter_x = ex2;\n+                    if (ex2 > enterX) {\n+                        enterX = ex2;\n                     }\n                 } else {\n-                    enter_x = sep * 2 + indent;\n+                    enterX = sep * 2 + indent;\n                 }\n-                back_y = btm + sep + 1;\n+                backY = btm + sep + 1;\n \n-                if (bypass_y > 0) {\n-                    mid_y = (bypass_y + this.style.max_radius + back_y) / 2;\n+                if (bypassY > 0) {\n+                    midY = (bypassY + this.style.getMaxRadius() + backY) / 2;\n                     this.canvas.addElement(\n-                            new LineElement(new Pair<>(bypass_x, bypass_y), new Pair<>(bypass_x, mid_y),\n-                                    \"last\", this.style.line_width, tag));\n+                            new LineElement(new Pair<>(bypassX, bypassY), new Pair<>(bypassX, midY),\n+                                    \"last\", this.style.getLineWidth(), tag));\n                     this.canvas.addElement(\n-                            new LineElement(new Pair<>(bypass_x, mid_y),\n-                                    new Pair<>(bypass_x, back_y + this.style.max_radius),\n-                                    null, this.style.line_width, tag));\n+                            new LineElement(new Pair<>(bypassX, midY),\n+                                    new Pair<>(bypassX, backY + this.style.getMaxRadius()),\n+                                    null, this.style.getLineWidth(), tag));\n                 }\n \n-                this.canvas.moveByTag(t, enter_x, enter_y);\n-                e2 = exit_x + sep;\n+                this.canvas.moveByTag(t, enterX, enterY);\n+                e2 = exitX + sep;\n                 this.canvas.addElement(\n-                        new LineElement(new Pair<>(exit_x, exit_y), new Pair<>(e2, exit_y),\n-                                null, this.style.line_width, tag));\n-                drawRightTurnBack(tag, e2, exit_y, back_y, \"down\");\n-                e3 = enter_x - sep;\n-                bypass_x = e3 - this.style.max_radius;\n+                        new LineElement(new Pair<>(exitX, exitY), new Pair<>(e2, exitY),\n+                                null, this.style.getLineWidth(), tag));\n+                drawRightTurnBack(tag, e2, exitY, backY, \"down\");\n+                e3 = enterX - sep;\n+                bypassX = e3 - this.style.getMaxRadius();\n                 int emid = (e2 + e3) / 2;\n                 this.canvas.addElement(\n-                        new LineElement(new Pair<>(e2, back_y), new Pair<>(emid, back_y),\n-                                \"last\", this.style.line_width, tag));\n+                        new LineElement(new Pair<>(e2, backY), new Pair<>(emid, backY),\n+                                \"last\", this.style.getLineWidth(), tag));\n                 this.canvas.addElement(\n-                        new LineElement(new Pair<>(emid, back_y), new Pair<>(e3, back_y),\n-                                null, this.style.line_width, tag));\n-                drawLeftTurnBack(tag, e3, back_y, enter_y, \"down\");\n+                        new LineElement(new Pair<>(emid, backY), new Pair<>(e3, backY),\n+                                null, this.style.getLineWidth(), tag));\n+                drawLeftTurnBack(tag, e3, backY, enterY, \"down\");\n                 this.canvas.addElement(\n-                        new LineElement(new Pair<>(e3, enter_y), new Pair<>(enter_x, enter_y),\n-                                \"last\", this.style.line_width, tag));\n-                exit_x = enter_x + exx;\n-                exit_y = enter_y + exy;\n+                        new LineElement(new Pair<>(e3, enterY), new Pair<>(enterX, enterY),\n+                                \"last\", this.style.getLineWidth(), tag));\n+                exitX = enterX + exx;\n+                exitY = enterY + exy;\n             }\n \n             // retag\n@@ -726,45 +749,45 @@ private void parseStack(Stack stack) {\n         }\n \n         if (bypass == 1) {\n-            int fwd_y = btm + sep + 1;\n-            mid_y = (next_bypass_y + this.style.max_radius + fwd_y) / 2;\n-            int descender_x = exit_x + this.style.max_radius;\n+            int fwdY = btm + sep + 1;\n+            midY = (nextBypassY + this.style.getMaxRadius() + fwdY) / 2;\n+            int descenderX = exitX + this.style.getMaxRadius();\n             this.canvas.addElement(\n-                    new LineElement(new Pair<>(bypass_x, next_bypass_y), new Pair<>(bypass_x, mid_y),\n-                            \"last\", this.style.line_width, tag));\n+                    new LineElement(new Pair<>(bypassX, nextBypassY), new Pair<>(bypassX, midY),\n+                            \"last\", this.style.getLineWidth(), tag));\n             this.canvas.addElement(\n-                    new LineElement(new Pair<>(bypass_x, mid_y),\n-                            new Pair<>(bypass_x, fwd_y - this.style.max_radius),\n-                            null, this.style.line_width, tag));\n+                    new LineElement(new Pair<>(bypassX, midY),\n+                            new Pair<>(bypassX, fwdY - this.style.getMaxRadius()),\n+                            null, this.style.getLineWidth(), tag));\n             this.canvas.addElement(\n-                    new ArcElement(new Pair<>(bypass_x, fwd_y - 2 * this.style.max_radius),\n-                            new Pair<>(bypass_x + 2 * this.style.max_radius, fwd_y),\n-                            this.style.line_width, 180, 90, tag));\n+                    new ArcElement(new Pair<>(bypassX, fwdY - 2 * this.style.getMaxRadius()),\n+                            new Pair<>(bypassX + 2 * this.style.getMaxRadius(), fwdY),\n+                            this.style.getLineWidth(), 180, 90, tag));\n             this.canvas.addElement(\n-                    new ArcElement(new Pair<>(exit_x - this.style.max_radius, exit_y),\n-                            new Pair<>(descender_x, exit_y + 2 * this.style.max_radius),\n-                            this.style.line_width, 90, -90, tag));\n+                    new ArcElement(new Pair<>(exitX - this.style.getMaxRadius(), exitY),\n+                            new Pair<>(descenderX, exitY + 2 * this.style.getMaxRadius()),\n+                            this.style.getLineWidth(), 90, -90, tag));\n             this.canvas.addElement(\n-                    new ArcElement(new Pair<>(descender_x, fwd_y - 2 * this.style.max_radius),\n-                            new Pair<>(descender_x + 2 * this.style.max_radius, fwd_y),\n-                            this.style.line_width, 180, 90, tag));\n-            exit_x += 2 * this.style.max_radius;\n-            int half_x = (exit_x + indent) / 2;\n+                    new ArcElement(new Pair<>(descenderX, fwdY - 2 * this.style.getMaxRadius()),\n+                            new Pair<>(descenderX + 2 * this.style.getMaxRadius(), fwdY),\n+                            this.style.getLineWidth(), 180, 90, tag));\n+            exitX += 2 * this.style.getMaxRadius();\n+            int halfX = (exitX + indent) / 2;\n             this.canvas.addElement(\n-                    new LineElement(new Pair<>(bypass_x + this.style.max_radius, fwd_y),\n-                            new Pair<>(half_x, fwd_y),\n-                            \"last\", this.style.line_width, tag));\n+                    new LineElement(new Pair<>(bypassX + this.style.getMaxRadius(), fwdY),\n+                            new Pair<>(halfX, fwdY),\n+                            \"last\", this.style.getLineWidth(), tag));\n             this.canvas.addElement(\n-                    new LineElement(new Pair<>(half_x, fwd_y), new Pair<>(exit_x, fwd_y),\n-                            null, this.style.line_width, tag));\n+                    new LineElement(new Pair<>(halfX, fwdY), new Pair<>(exitX, fwdY),\n+                            null, this.style.getLineWidth(), tag));\n             this.canvas.addElement(\n-                    new LineElement(new Pair<>(descender_x, exit_y + this.style.max_radius),\n-                            new Pair<>(descender_x, fwd_y - this.style.max_radius),\n-                            \"last\", this.style.line_width, tag));\n-            exit_y = fwd_y;\n+                    new LineElement(new Pair<>(descenderX, exitY + this.style.getMaxRadius()),\n+                            new Pair<>(descenderX, fwdY - this.style.getMaxRadius()),\n+                            \"last\", this.style.getLineWidth(), tag));\n+            exitY = fwdY;\n         }\n \n-        setUnitEndPoint(new UnitEndPoint(tag, new Pair<>(exit_x, exit_y)));\n+        setUnitEndPoint(new UnitEndPoint(tag, new Pair<>(exitX, exitY)));\n     }\n \n     @Override\n@@ -781,106 +804,106 @@ public void visitRightstack(Rightstack unit) {\n \n     @Override\n     public void visitIndentstack(Indentstack unit) {\n-        int sep = this.style.h_sep * unit.getIndent();\n+        int sep = this.style.getHSep() * unit.getIndent();\n         setIndent(sep);\n         parseStack(unit);\n     }\n \n-    private void drawLeftTurnBack(String tag, int x, int y0_, int y1_, String flow) {\n-        int y0 = Math.min(y0_, y1_);\n-        int y1 = Math.max(y0_, y1_);\n+    private void drawLeftTurnBack(String tag, int x, int yy0, int yy1, String flow) {\n+        int y0 = Math.min(yy0, yy1);\n+        int y1 = Math.max(yy0, yy1);\n \n-        if (y1 - y0 > 3 * this.style.max_radius) {\n-            int xr0 = x - this.style.max_radius;\n-            int xr1 = x + this.style.max_radius;\n+        if (y1 - y0 > 3 * this.style.getMaxRadius()) {\n+            int xr0 = x - this.style.getMaxRadius();\n+            int xr1 = x + this.style.getMaxRadius();\n             this.canvas.addElement(\n-                    new ArcElement(new Pair<>(xr0, y0), new Pair<>(xr1, y0 + 2 * this.style.max_radius),\n-                            this.style.line_width, 90, 90, tag));\n-            int yr0 = y0 + this.style.max_radius;\n-            int yr1 = y1 - this.style.max_radius;\n-            if (Math.abs(yr1 - yr0) > 2 * this.style.max_radius) {\n-                int half_y = (yr0 + yr1) / 2;\n-                if (flow.equals(\"down\")) {\n+                    new ArcElement(new Pair<>(xr0, y0), new Pair<>(xr1, y0 + 2 * this.style.getMaxRadius()),\n+                            this.style.getLineWidth(), 90, 90, tag));\n+            int yr0 = y0 + this.style.getMaxRadius();\n+            int yr1 = y1 - this.style.getMaxRadius();\n+            if (Math.abs(yr1 - yr0) > 2 * this.style.getMaxRadius()) {\n+                int halfY = (yr0 + yr1) / 2;\n+                if (\"down\".equals(flow)) {\n                     this.canvas.addElement(\n-                            new LineElement(new Pair<>(xr0, yr0), new Pair<>(xr0, half_y),\n-                                    \"last\", this.style.line_width, tag));\n+                            new LineElement(new Pair<>(xr0, yr0), new Pair<>(xr0, halfY),\n+                                    \"last\", this.style.getLineWidth(), tag));\n                     this.canvas.addElement(\n-                            new LineElement(new Pair<>(xr0, half_y), new Pair<>(xr0, yr1),\n-                                    null, this.style.line_width, tag));\n+                            new LineElement(new Pair<>(xr0, halfY), new Pair<>(xr0, yr1),\n+                                    null, this.style.getLineWidth(), tag));\n                 } else {\n                     this.canvas.addElement(\n-                            new LineElement(new Pair<>(xr0, yr1), new Pair<>(xr0, half_y),\n-                                    \"last\", this.style.line_width, tag));\n+                            new LineElement(new Pair<>(xr0, yr1), new Pair<>(xr0, halfY),\n+                                    \"last\", this.style.getLineWidth(), tag));\n                     this.canvas.addElement(\n-                            new LineElement(new Pair<>(xr0, half_y), new Pair<>(xr0, yr0),\n-                                    null, this.style.line_width, tag));\n+                            new LineElement(new Pair<>(xr0, halfY), new Pair<>(xr0, yr0),\n+                                    null, this.style.getLineWidth(), tag));\n                 }\n             } else {\n                 this.canvas.addElement(\n                         new LineElement(new Pair<>(xr0, yr0), new Pair<>(xr0, yr1),\n-                                null, this.style.line_width, tag));\n+                                null, this.style.getLineWidth(), tag));\n             }\n \n             this.canvas.addElement(\n-                    new ArcElement(new Pair<>(xr0, y1 - 2 * this.style.max_radius), new Pair<>(xr1, y1),\n-                            this.style.line_width, 180, 90, tag));\n+                    new ArcElement(new Pair<>(xr0, y1 - 2 * this.style.getMaxRadius()), new Pair<>(xr1, y1),\n+                            this.style.getLineWidth(), 180, 90, tag));\n         } else {\n             int r = (y1 - y0) / 2;\n             int x0 = x - r;\n             int x1 = x + r;\n             this.canvas.addElement(\n                     new ArcElement(new Pair<>(x0, y0), new Pair<>(x1, y1),\n-                            this.style.line_width, 90, 180, tag));\n+                            this.style.getLineWidth(), 90, 180, tag));\n         }\n     }\n \n-    private void drawRightTurnBack(String tag, int x, int y0_, int y1_, String flow) {\n-        int y0 = Math.min(y0_, y1_);\n-        int y1 = Math.max(y0_, y1_);\n+    private void drawRightTurnBack(String tag, int x, int yy0, int yy1, String flow) {\n+        int y0 = Math.min(yy0, yy1);\n+        int y1 = Math.max(yy0, yy1);\n \n-        if (y1 - y0 > 3 * this.style.max_radius) {\n-            int xr0 = x - this.style.max_radius;\n-            int xr1 = x + this.style.max_radius;\n+        if (y1 - y0 > 3 * this.style.getMaxRadius()) {\n+            int xr0 = x - this.style.getMaxRadius();\n+            int xr1 = x + this.style.getMaxRadius();\n \n             this.canvas.addElement(\n-                    new ArcElement(new Pair<>(xr0, y0), new Pair<>(xr1, y0 + 2 * this.style.max_radius),\n-                            this.style.line_width, 90, -90, tag));\n-            int yr0 = y0 + this.style.max_radius;\n-            int yr1 = y1 - this.style.max_radius;\n-\n-            if (Math.abs(yr1 - yr0) > 2 * this.style.max_radius) {\n-                int half_y = (yr1 + yr0) / 2;\n-                if (flow.equals(\"down\")) {\n+                    new ArcElement(new Pair<>(xr0, y0), new Pair<>(xr1, y0 + 2 * this.style.getMaxRadius()),\n+                            this.style.getLineWidth(), 90, -90, tag));\n+            int yr0 = y0 + this.style.getMaxRadius();\n+            int yr1 = y1 - this.style.getMaxRadius();\n+\n+            if (Math.abs(yr1 - yr0) > 2 * this.style.getMaxRadius()) {\n+                int halfY = (yr1 + yr0) / 2;\n+                if (\"down\".equals(flow)) {\n                     this.canvas.addElement(\n-                            new LineElement(new Pair<>(xr1, yr0), new Pair<>(xr1, half_y),\n-                                    \"last\", this.style.line_width, tag));\n+                            new LineElement(new Pair<>(xr1, yr0), new Pair<>(xr1, halfY),\n+                                    \"last\", this.style.getLineWidth(), tag));\n                     this.canvas.addElement(\n-                            new LineElement(new Pair<>(xr1, half_y), new Pair<>(xr1, yr1),\n-                                    null, this.style.line_width, tag));\n+                            new LineElement(new Pair<>(xr1, halfY), new Pair<>(xr1, yr1),\n+                                    null, this.style.getLineWidth(), tag));\n                 } else {\n                     this.canvas.addElement(\n-                            new LineElement(new Pair<>(xr1, yr1), new Pair<>(xr1, half_y),\n-                                    \"last\", this.style.line_width, tag));\n+                            new LineElement(new Pair<>(xr1, yr1), new Pair<>(xr1, halfY),\n+                                    \"last\", this.style.getLineWidth(), tag));\n                     this.canvas.addElement(\n-                            new LineElement(new Pair<>(xr1, half_y), new Pair<>(xr1, yr0),\n-                                    null, this.style.line_width, tag));\n+                            new LineElement(new Pair<>(xr1, halfY), new Pair<>(xr1, yr0),\n+                                    null, this.style.getLineWidth(), tag));\n                 }\n             } else {\n                 this.canvas.addElement(\n                         new LineElement(new Pair<>(xr1, yr0), new Pair<>(xr1, yr1),\n-                                null, this.style.line_width, tag));\n+                                null, this.style.getLineWidth(), tag));\n             }\n \n             this.canvas.addElement(\n-                    new ArcElement(new Pair<>(xr0, y1 - 2 * this.style.max_radius), new Pair<>(xr1, y1),\n-                            this.style.line_width, 0, -90, tag));\n+                    new ArcElement(new Pair<>(xr0, y1 - 2 * this.style.getMaxRadius()), new Pair<>(xr1, y1),\n+                            this.style.getLineWidth(), 0, -90, tag));\n         } else {\n             int r = (y1 - y0) / 2;\n             int x0 = x - r;\n             int x1 = x + r;\n             this.canvas.addElement(\n                     new ArcElement(new Pair<>(x0, y0), new Pair<>(x1, y1),\n-                            this.style.line_width, 90, -180, tag));\n+                            this.style.getLineWidth(), 90, -180, tag));\n         }\n     }\n "
  },
  {
    "sha": "e128491290ecb70a903d29cd4deb124c168a47b0",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/ArcElement.java",
    "status": "modified",
    "additions": 17,
    "deletions": 14,
    "changes": 31,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/ArcElement.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/ArcElement.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/ArcElement.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,26 +1,29 @@\n package org.atpfivt.jsyntrax.generators.elements;\n \n-import org.atpfivt.jsyntrax.styles.Style;\n-import org.atpfivt.jsyntrax.util.Algorithm;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n+import org.atpfivt.jsyntrax.util.StringUtils;\n import org.atpfivt.jsyntrax.util.Pair;\n \n public class ArcElement extends Element {\n     public ArcElement(Pair<Integer, Integer> start, Pair<Integer, Integer> end,\n                       int width, int startAngle, int extentAngle, String tag) {\n         super(tag);\n-        super.start = start;\n-        super.end = end;\n+        super.setStart(start);\n+        super.setEnd(end);\n         this.width = width;\n         this.startAngle = startAngle;\n         this.extentAngle = extentAngle;\n     }\n \n     @Override\n-    public void toSVG(StringBuilder sb, Style style) {\n-        int x0 = super.start.f;\n-        int y0 = super.start.s;\n-        int x1 = super.end.f;\n-        int y1 = super.end.s;\n+    public void addShadow(StringBuilder sb, StyleConfig style) { }\n+\n+    @Override\n+    public void toSVG(StringBuilder sb, StyleConfig style) {\n+        int x0 = super.getStart().f;\n+        int y0 = super.getStart().s;\n+        int x1 = super.getEnd().f;\n+        int y1 = super.getEnd().s;\n \n         int xc = (x0 + x1) / 2;\n         int yc = (y0 + y1) / 2;\n@@ -38,8 +41,8 @@ public void toSVG(StringBuilder sb, Style style) {\n         double startRad = Math.toRadians(this.startAngle);\n         double stopRad = Math.toRadians(stop);\n \n-        String attributes = \"stroke=\\\"\" + Algorithm.toHex(style.line_color) + \"\\\" \" +\n-                \"stroke-width=\\\"\" + this.width + \"\\\" fill=\\\"none\\\"\";\n+        String attributes = \"stroke=\\\"\" + StringUtils.toHex(style.getLineColor()) + \"\\\" \"\n+                + \"stroke-width=\\\"\" + this.width + \"\\\" fill=\\\"none\\\"\";\n \n         int xs = (int) (xc + rad * Math.cos(startRad));\n         int ys = (int) (yc - rad * Math.sin(startRad));\n@@ -58,7 +61,7 @@ public void scale(double scale) {\n         width *= scale;\n     }\n \n-    int width;\n-    int startAngle;\n-    int extentAngle;\n+    private int width;\n+    private int startAngle;\n+    private final int extentAngle;\n }"
  },
  {
    "sha": "f7240f7667f1f87db8d128db1a1efa9630e8d2f4",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BoxBubbleElement.java",
    "status": "modified",
    "additions": 19,
    "deletions": 19,
    "changes": 38,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BoxBubbleElement.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BoxBubbleElement.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BoxBubbleElement.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,7 +1,7 @@\n package org.atpfivt.jsyntrax.generators.elements;\n \n-import org.atpfivt.jsyntrax.styles.Style;\n-import org.atpfivt.jsyntrax.util.Algorithm;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n+import org.atpfivt.jsyntrax.util.StringUtils;\n import org.atpfivt.jsyntrax.util.Pair;\n \n import java.awt.Color;\n@@ -15,31 +15,31 @@ public BoxBubbleElement(Pair<Integer, Integer> start, Pair<Integer, Integer> end\n     }\n \n     @Override\n-    public void addShadow(StringBuilder sb, Style style) {\n-        int x0 = super.start.f + super.width + 1;\n-        int y0 = super.start.s + super.width + 1;\n-        int x1 = super.end.f + super.width + 1;\n-        int y1 = super.end.s + super.width + 1;\n+    public void addShadow(StringBuilder sb, StyleConfig style) {\n+        int x0 = super.getStart().f + super.getWidth() + 1;\n+        int y0 = super.getStart().s + super.getWidth() + 1;\n+        int x1 = super.getEnd().f + super.getWidth() + 1;\n+        int y1 = super.getEnd().s + super.getWidth() + 1;\n \n-        String attributes = \"fill=\\\"\" + Algorithm.toHex(style.shadow_fill) + \"\\\" \" +\n-                \"fill-opacity=\\\"\" + Algorithm.fillOpacity(style.shadow_fill) + \"\\\"\";\n+        String attributes = \"fill=\\\"\" + StringUtils.toHex(style.getShadowFill()) + \"\\\" \"\n+                + \"fill-opacity=\\\"\" + StringUtils.fillOpacity(style.getShadowFill()) + \"\\\"\";\n \n         sb.append(\"<rect x=\\\"\").append(x0).append(\"\\\" y=\\\"\").append(y0)\n                 .append(\"\\\" width=\\\"\").append(x1 - x0).append(\"\\\" height=\\\"\").append(y1 - y0)\n                 .append(\"\\\" \").append(attributes).append(\" />\\n\");\n     }\n \n     @Override\n-    public void toSVG(StringBuilder sb, Style style) {\n-        int x0 = super.start.f;\n-        int y0 = super.start.s;\n-        int x1 = super.end.f;\n-        int y1 = super.end.s;\n-\n-        String attributes = \"stroke=\\\"\" + Algorithm.toHex(style.line_color) + \"\\\" \" +\n-                \"stroke-width=\\\"\" + this.width + \"\\\" \" +\n-                \"fill=\\\"\" + Algorithm.toHex(this.fill) + \"\\\" \" +\n-                \"fill-opacity=\\\"\" + Algorithm.fillOpacity(this.fill) + \"\\\"\";\n+    public void toSVG(StringBuilder sb, StyleConfig style) {\n+        int x0 = super.getStart().f;\n+        int y0 = super.getStart().s;\n+        int x1 = super.getEnd().f;\n+        int y1 = super.getEnd().s;\n+\n+        String attributes = \"stroke=\\\"\" + StringUtils.toHex(style.getLineColor()) + \"\\\" \"\n+                + \"stroke-width=\\\"\" + this.getWidth() + \"\\\" \"\n+                + \"fill=\\\"\" + StringUtils.toHex(this.getFill()) + \"\\\" \"\n+                + \"fill-opacity=\\\"\" + StringUtils.fillOpacity(this.getFill()) + \"\\\"\";\n \n         sb.append(\"<rect x=\\\"\").append(x0).append(\"\\\" y=\\\"\").append(y0)\n                 .append(\"\\\" width=\\\"\").append(x1 - x0).append(\"\\\" height=\\\"\").append(y1 - y0)"
  },
  {
    "sha": "5c2c1df9f17ef87261ce0bae5e6057a2136b7a69",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BubbleElement.java",
    "status": "modified",
    "additions": 20,
    "deletions": 22,
    "changes": 42,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BubbleElement.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BubbleElement.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BubbleElement.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,7 +1,7 @@\n package org.atpfivt.jsyntrax.generators.elements;\n \n-import org.atpfivt.jsyntrax.styles.Style;\n-import org.atpfivt.jsyntrax.util.Algorithm;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n+import org.atpfivt.jsyntrax.util.StringUtils;\n import org.atpfivt.jsyntrax.util.Pair;\n \n import java.awt.Color;\n@@ -15,14 +15,14 @@ public BubbleElement(Pair<Integer, Integer> start, Pair<Integer, Integer> end, S\n     }\n \n     @Override\n-    public void addShadow(StringBuilder sb, Style style) {\n-        int x0 = super.start.f + this.width + 1;\n-        int y0 = super.start.s + this.width + 1;\n-        int x1 = super.end.f + this.width + 1;\n-        int y1 = super.end.s + this.width + 1;\n+    public void addShadow(StringBuilder sb, StyleConfig style) {\n+        int x0 = super.getStart().f + this.getWidth() + 1;\n+        int y0 = super.getStart().s + this.getWidth() + 1;\n+        int x1 = super.getEnd().f + this.getWidth() + 1;\n+        int y1 = super.getEnd().s + this.getWidth() + 1;\n \n-        String attributes = \"fill=\\\"\" + Algorithm.toHex(style.shadow_fill) + \"\\\" \" +\n-                \"fill-opacity=\\\"\" + Algorithm.fillOpacity(style.shadow_fill) + \"\\\"\";\n+        String attributes = \"fill=\\\"\" + StringUtils.toHex(style.getShadowFill()) + \"\\\" \"\n+                + \"fill-opacity=\\\"\" + StringUtils.fillOpacity(style.getShadowFill()) + \"\\\"\";\n \n         int rad = (y1 - y0) / 2;\n         int lft = x0 + rad;\n@@ -38,8 +38,7 @@ public void addShadow(StringBuilder sb, Style style) {\n                     .append(\"cy=\\\"\").append(yc).append(\"\\\" \")\n                     .append(\"r=\\\"\").append(rad).append(\"\\\" \")\n                     .append(attributes).append(\" />\\n\");\n-        }\n-        else {\n+        } else {\n             // Rounded bubble\n             sb.append(\"<path d=\\\"M\").append(lft).append(\",\").append(y1)\n                     .append(\" A\").append(rad).append(\",\").append(rad)\n@@ -51,16 +50,16 @@ public void addShadow(StringBuilder sb, Style style) {\n     }\n \n     @Override\n-    public void toSVG(StringBuilder sb, Style style) {\n-        int x0 = super.start.f;\n-        int y0 = super.start.s;\n-        int x1 = super.end.f;\n-        int y1 = super.end.s;\n+    public void toSVG(StringBuilder sb, StyleConfig style) {\n+        int x0 = super.getStart().f;\n+        int y0 = super.getStart().s;\n+        int x1 = super.getEnd().f;\n+        int y1 = super.getEnd().s;\n \n-        String attributes = \"stroke=\\\"\" + Algorithm.toHex(style.line_color) + \"\\\" \" +\n-                \"stroke-width=\\\"\" + this.width + \"\\\" \" +\n-                \"fill=\\\"\" + Algorithm.toHex(this.fill) + \"\\\" \" +\n-                \"fill-opacity=\\\"\" + Algorithm.fillOpacity(this.fill) + \"\\\"\";\n+        String attributes = \"stroke=\\\"\" + StringUtils.toHex(style.getLineColor()) + \"\\\" \"\n+                + \"stroke-width=\\\"\" + this.getWidth() + \"\\\" \"\n+                + \"fill=\\\"\" + StringUtils.toHex(this.getFill()) + \"\\\" \"\n+                + \"fill-opacity=\\\"\" + StringUtils.fillOpacity(this.getFill()) + \"\\\"\";\n \n         int rad = (y1 - y0) / 2;\n         int lft = x0 + rad;\n@@ -76,8 +75,7 @@ public void toSVG(StringBuilder sb, Style style) {\n                 .append(\"cy=\\\"\").append(yc).append(\"\\\" \")\n                 .append(\"r=\\\"\").append(rad).append(\"\\\" \")\n                 .append(attributes).append(\" />\\n\");\n-        }\n-        else {\n+        } else {\n             // Rounded bubble\n             sb.append(\"<path d=\\\"M\").append(lft).append(\",\").append(y1)\n                     .append(\" A\").append(rad).append(\",\").append(rad)"
  },
  {
    "sha": "abe0504bfe64e64f1c176ab06d6411b7788216b1",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BubbleElementBase.java",
    "status": "modified",
    "additions": 101,
    "deletions": 40,
    "changes": 141,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BubbleElementBase.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BubbleElementBase.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/BubbleElementBase.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,69 +1,130 @@\n package org.atpfivt.jsyntrax.generators.elements;\n \n-import org.atpfivt.jsyntrax.styles.Style;\n-import org.atpfivt.jsyntrax.util.Algorithm;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n+import org.atpfivt.jsyntrax.util.StringUtils;\n import org.atpfivt.jsyntrax.util.Pair;\n-\n import java.awt.Color;\n import java.awt.Font;\n \n-public class BubbleElementBase extends Element {\n+public abstract class BubbleElementBase extends Element {\n \n     public BubbleElementBase(Pair<Integer, Integer> start, Pair<Integer, Integer> end, String href,\n                              String text, Pair<Integer, Integer> textPos, Font font, String fontName,\n                              Color textColor, int width, Color fill, String tag) {\n         super(tag);\n-        super.start = start;\n-        super.end = end;\n-        this.href = href;\n-        this.text = text;\n-        this.textPos = textPos;\n-        this.font = font;\n-        this.fontName = fontName;\n-        this.textColor = textColor;\n-        this.width = width;\n-        this.fill = fill;\n+        super.setStart(start);\n+        super.setEnd(end);\n+        this.setHref(href);\n+        this.setText(text);\n+        this.setTextPos(textPos);\n+        this.setFont(font);\n+        this.setFontName(fontName);\n+        this.setTextColor(textColor);\n+        this.setWidth(width);\n+        this.setFill(fill);\n     }\n \n-    void addXMLText(StringBuilder sb, Style style) {\n-        int x0 = super.start.f;\n-        int y0 = super.start.s;\n-        int x1 = super.end.f;\n-        int y1 = super.end.s;\n+    void addXMLText(StringBuilder sb, StyleConfig style) {\n+        int x0 = super.getStart().f;\n+        int y0 = super.getStart().s;\n+        int x1 = super.getEnd().f;\n+        int y1 = super.getEnd().s;\n \n         int x = (x0 + x1) / 2;\n-        int y = (y0 + y1) / 2 + (int)(Math.abs(textPos.s) * 0.25 + style.getScale() * 2);\n+        int y = (y0 + y1) / 2 + (int) (Math.abs(getTextPos().s) * 0.25 + style.getScale() * 2);\n \n-        String txt = Algorithm.escapeXML(text);\n-        if (this.href == null) {\n-            sb.append(\"<text class=\\\"\").append(fontName).append(\"\\\" x=\\\"\").append(x)\n+        String txt = StringUtils.escapeXML(getText());\n+        if (this.getHref() == null) {\n+            sb.append(\"<text class=\\\"\").append(getFontName()).append(\"\\\" x=\\\"\").append(x)\n                     .append(\"\\\" y=\\\"\").append(y).append(\"\\\">\").append(txt).append(\"</text>\\n\");\n-        }\n-        else {\n-            String link = Algorithm.escapeXML(this.href);\n+        } else {\n+            String link = StringUtils.escapeXML(this.getHref());\n             sb.append(\"<a xlink:href=\\\"\").append(link).append(\"\\\" target=\\\"_parent\\\">\")\n-                    .append(\"<text class=\\\"\").append(fontName).append(\" link\\\" x=\\\"\").append(x)\n+                    .append(\"<text class=\\\"\").append(getFontName()).append(\" link\\\" x=\\\"\").append(x)\n                     .append(\"\\\" y=\\\"\").append(y).append(\"\\\">\").append(txt).append(\"</text></a>\\n\");\n         }\n     }\n \n     @Override\n     public void scale(double scale) {\n         super.scale(scale);\n-        width *= scale;\n-        textPos.f = (int)(textPos.f * scale);\n-        textPos.s = (int)(textPos.s * scale);\n-        if (font != null) {\n-            font = font.deriveFont((float) (font.getSize() * scale));\n+        setWidth((int) (getWidth() * scale));\n+        getTextPos().f = (int) (getTextPos().f * scale);\n+        getTextPos().s = (int) (getTextPos().s * scale);\n+        if (getFont() != null) {\n+            setFont(getFont().deriveFont((float) (getFont().getSize() * scale)));\n         }\n     }\n+    private String href;\n+    private String text;\n+    private Pair<Integer, Integer> textPos;\n+    private Font font;\n+    private String fontName;\n+    private Color textColor;\n+    private int width;\n+    private Color fill;\n+\n+    public String getHref() {\n+        return href;\n+    }\n+\n+    public void setHref(String href) {\n+        this.href = href;\n+    }\n+\n+    public String getText() {\n+        return text;\n+    }\n+\n+    public void setText(String text) {\n+        this.text = text;\n+    }\n+\n+    public Pair<Integer, Integer> getTextPos() {\n+        return textPos;\n+    }\n+\n+    public void setTextPos(Pair<Integer, Integer> textPos) {\n+        this.textPos = textPos;\n+    }\n \n-    String href;\n-    String text;\n-    Pair<Integer, Integer> textPos;\n-    Font font;\n-    String fontName;\n-    Color textColor;\n-    int width;\n-    Color fill;\n+    public Font getFont() {\n+        return font;\n+    }\n+\n+    public void setFont(Font font) {\n+        this.font = font;\n+    }\n+\n+    public String getFontName() {\n+        return fontName;\n+    }\n+\n+    public void setFontName(String fontName) {\n+        this.fontName = fontName;\n+    }\n+\n+    public Color getTextColor() {\n+        return textColor;\n+    }\n+\n+    public void setTextColor(Color textColor) {\n+        this.textColor = textColor;\n+    }\n+\n+    public int getWidth() {\n+        return width;\n+    }\n+\n+    public void setWidth(int width) {\n+        this.width = width;\n+    }\n+\n+    public Color getFill() {\n+        return fill;\n+    }\n+\n+    public void setFill(Color fill) {\n+        this.fill = fill;\n+    }\n }"
  },
  {
    "sha": "b30e00a8b5628d3df14a245a4fe4bfafdb444b0c",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/Element.java",
    "status": "modified",
    "additions": 20,
    "deletions": 14,
    "changes": 34,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/Element.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/Element.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/Element.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,6 +1,6 @@\n package org.atpfivt.jsyntrax.generators.elements;\n \n-import org.atpfivt.jsyntrax.styles.Style;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n import org.atpfivt.jsyntrax.util.Pair;\n \n import java.util.HashSet;\n@@ -9,15 +9,21 @@\n \n public class Element {\n     public Element(String tag) {\n-        addTag(tag);\n+        tags.add(tag);\n     }\n \n-    public Pair<Integer, Integer> getStart() { return this.start; }\n     public void setStart(Pair<Integer, Integer> start) {\n         this.start = start;\n     }\n \n-    public Pair<Integer, Integer> getEnd() {return this.end;}\n+    public Pair<Integer, Integer> getStart() {\n+        return start;\n+    }\n+\n+    public Pair<Integer, Integer> getEnd() {\n+        return this.end;\n+    }\n+\n     public void setEnd(Pair<Integer, Integer> end) {\n         this.end = end;\n     }\n@@ -31,28 +37,28 @@ public void delTag(String tag) {\n     }\n \n     public boolean isTagged(String tag) {\n-        if (tag.equals(\"all\")) {\n+        if (\"all\".equals(tag)) {\n             return true;\n         }\n         return tags.contains(tag);\n     }\n \n-    public void addShadow(StringBuilder sb, Style style) {}\n+    public void addShadow(StringBuilder sb, StyleConfig style) { }\n \n-    public void toSVG(StringBuilder sb, Style style) {}\n+    public void toSVG(StringBuilder sb, StyleConfig style) { }\n \n     public void scale(double scale) {\n-        start.f = (int)(start.f * scale);\n-        start.s = (int)(start.s * scale);\n-        end.f = (int)(end.f * scale);\n-        end.s = (int)(end.s * scale);\n+        getStart().f = (int) (getStart().f * scale);\n+        getStart().s = (int) (getStart().s * scale);\n+        getEnd().f = (int) (getEnd().f * scale);\n+        getEnd().s = (int) (getEnd().s * scale);\n     }\n \n     public Optional<String> getAnyTag() {\n         return tags.stream().findAny();\n     }\n \n-    public Pair<Integer, Integer> start = null;\n-    public Pair<Integer, Integer> end = null;\n-    final Set<String> tags = new HashSet<>();\n+    private Pair<Integer, Integer> start = null;\n+    private Pair<Integer, Integer> end = null;\n+    private final Set<String> tags = new HashSet<>();\n }"
  },
  {
    "sha": "bea478f1cf71c0e1c0598f92dec7d155b011605a",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/HexBubbleElement.java",
    "status": "modified",
    "additions": 28,
    "deletions": 28,
    "changes": 56,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/HexBubbleElement.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/HexBubbleElement.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/HexBubbleElement.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,7 +1,7 @@\n package org.atpfivt.jsyntrax.generators.elements;\n \n-import org.atpfivt.jsyntrax.styles.Style;\n-import org.atpfivt.jsyntrax.util.Algorithm;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n+import org.atpfivt.jsyntrax.util.StringUtils;\n import org.atpfivt.jsyntrax.util.Pair;\n \n import java.awt.Color;\n@@ -15,14 +15,14 @@ public HexBubbleElement(Pair<Integer, Integer> start, Pair<Integer, Integer> end\n     }\n \n     @Override\n-    public void addShadow(StringBuilder sb, Style style) {\n-        int x0 = super.start.f + super.width + 1;\n-        int y0 = super.start.s + super.width + 1;\n-        int x1 = super.end.f + super.width + 1;\n-        int y1 = super.end.s + super.width + 1;\n+    public void addShadow(StringBuilder sb, StyleConfig style) {\n+        int x0 = super.getStart().f + super.getWidth() + 1;\n+        int y0 = super.getStart().s + super.getWidth() + 1;\n+        int x1 = super.getEnd().f + super.getWidth() + 1;\n+        int y1 = super.getEnd().s + super.getWidth() + 1;\n \n-        String attributes = \"fill=\\\"\" + Algorithm.toHex(style.shadow_fill) + \"\\\" \" +\n-                \"fill-opacity=\\\"\" + Algorithm.fillOpacity(style.shadow_fill) + \"\\\"\";\n+        String attributes = \"fill=\\\"\" + StringUtils.toHex(style.getShadowFill()) + \"\\\" \"\n+                + \"fill-opacity=\\\"\" + StringUtils.fillOpacity(style.getShadowFill()) + \"\\\"\";\n \n         int rad = (y1 - y0) / 2;\n         int lft = x0 + rad;\n@@ -37,25 +37,25 @@ public void addShadow(StringBuilder sb, Style style) {\n             rgt = yc;\n         }\n \n-        sb.append(\"<path d=\\\"M\").append(lft-rpad).append(\",\").append(y1)\n-                .append(\" H\").append(rgt+rpad).append(\" L\").append(rgt+rad)\n-                .append(\",\").append(yc).append(\" L\").append(rgt+rpad)\n-                .append(\",\").append(y0).append(\" H\").append(lft-rpad)\n-                .append(\" L\").append(lft-rad).append(\",\").append(yc)\n+        sb.append(\"<path d=\\\"M\").append(lft - rpad).append(\",\").append(y1)\n+                .append(\" H\").append(rgt + rpad).append(\" L\").append(rgt + rad)\n+                .append(\",\").append(yc).append(\" L\").append(rgt + rpad)\n+                .append(\",\").append(y0).append(\" H\").append(lft - rpad)\n+                .append(\" L\").append(lft - rad).append(\",\").append(yc)\n                 .append(\" z\\\" \").append(attributes).append(\" />\\n\");\n     }\n \n     @Override\n-    public void toSVG(StringBuilder sb, Style style) {\n-        int x0 = super.start.f;\n-        int y0 = super.start.s;\n-        int x1 = super.end.f;\n-        int y1 = super.end.s;\n+    public void toSVG(StringBuilder sb, StyleConfig style) {\n+        int x0 = super.getStart().f;\n+        int y0 = super.getStart().s;\n+        int x1 = super.getEnd().f;\n+        int y1 = super.getEnd().s;\n \n-        String attributes = \"stroke=\\\"\" + Algorithm.toHex(style.line_color) + \"\\\" \" +\n-                \"stroke-width=\\\"\" + this.width + \"\\\" \" +\n-                \"fill=\\\"\" + Algorithm.toHex(this.fill) + \"\\\" \" +\n-                \"fill-opacity=\\\"\" + Algorithm.fillOpacity(this.fill) + \"\\\"\";\n+        String attributes = \"stroke=\\\"\" + StringUtils.toHex(style.getLineColor()) + \"\\\" \"\n+                + \"stroke-width=\\\"\" + this.getWidth() + \"\\\" \"\n+                + \"fill=\\\"\" + StringUtils.toHex(this.getFill()) + \"\\\" \"\n+                + \"fill-opacity=\\\"\" + StringUtils.fillOpacity(this.getFill()) + \"\\\"\";\n \n         int rad = (y1 - y0) / 2;\n         int lft = x0 + rad;\n@@ -70,11 +70,11 @@ public void toSVG(StringBuilder sb, Style style) {\n             rgt = yc;\n         }\n \n-        sb.append(\"<path d=\\\"M\").append(lft-rpad).append(\",\").append(y1)\n-                .append(\" H\").append(rgt+rpad).append(\" L\").append(rgt+rad)\n-                .append(\",\").append(yc).append(\" L\").append(rgt+rpad)\n-                .append(\",\").append(y0).append(\" H\").append(lft-rpad)\n-                .append(\" L\").append(lft-rad).append(\",\").append(yc)\n+        sb.append(\"<path d=\\\"M\").append(lft - rpad).append(\",\").append(y1)\n+                .append(\" H\").append(rgt + rpad).append(\" L\").append(rgt + rad)\n+                .append(\",\").append(yc).append(\" L\").append(rgt + rpad)\n+                .append(\",\").append(y0).append(\" H\").append(lft - rpad)\n+                .append(\" L\").append(lft - rad).append(\",\").append(yc)\n                 .append(\" z\\\" \").append(attributes).append(\" />\\n\");\n \n         // Add text"
  },
  {
    "sha": "9c8fd1c6d1706497b8a992336cee5ad6a9dc1fbd",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/LineElement.java",
    "status": "modified",
    "additions": 27,
    "deletions": 21,
    "changes": 48,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/LineElement.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/LineElement.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/LineElement.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,47 +1,53 @@\n package org.atpfivt.jsyntrax.generators.elements;\n \n-import org.atpfivt.jsyntrax.styles.Style;\n-import org.atpfivt.jsyntrax.util.Algorithm;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n+import org.atpfivt.jsyntrax.util.StringUtils;\n import org.atpfivt.jsyntrax.util.Pair;\n \n public class LineElement extends Element {\n \n     public LineElement(Pair<Integer, Integer> start, Pair<Integer, Integer> end,\n                        String arrow, int width, String tag) {\n         super(tag);\n-        super.start = start;\n-        super.end = end;\n+        super.setStart(start);\n+        super.setEnd(end);\n         this.arrow = arrow;\n         this.width = width;\n     }\n \n     @Override\n-    public void toSVG(StringBuilder sb, Style style) {\n-        String attributes = \"stroke=\\\"\" + Algorithm.toHex(style.line_color) + \"\\\" \" + \"stroke-width=\\\"\" + this.width + \"\\\"\";\n+    public void addShadow(StringBuilder sb, StyleConfig style) {\n+\n+    }\n+\n+    @Override\n+    public void toSVG(StringBuilder sb, StyleConfig style) {\n+        String attributes = \"stroke=\\\"\" + StringUtils.toHex(style.getLineColor())\n+                + \"\\\" \" + \"stroke-width=\\\"\" + this.width + \"\\\"\";\n \n         if (arrow != null) {\n             attributes += \" marker-end=\\\"url(#arrow)\\\"\";\n-            if (arrow.equals(\"first\")) {\n+            if (\"first\".equals(arrow)) {\n                 // swap\n-                Pair<Integer, Integer> tmp = super.start;\n-                super.start = super.end;\n-                super.end = tmp;\n+                Pair<Integer, Integer> tmp = super.getStart();\n+                super.setStart(super.getEnd());\n+                super.setEnd(tmp);\n             }\n             double len = Math.sqrt(\n-                    (super.end.f - super.start.f) * (super.end.f - super.start.f) +\n-                            (super.end.s - super.start.s) * (super.end.s - super.start.s)\n+                    (super.getEnd().f - super.getStart().f) * (super.getEnd().f - super.getStart().f)\n+                            + (super.getEnd().s - super.getStart().s) * (super.getEnd().s - super.getStart().s)\n             );\n             len -= 4;\n-            double angle = Math.atan2(super.end.s - super.start.s, super.end.f - super.start.f);\n+            double angle = Math.atan2(super.getEnd().s - super.getStart().s, super.getEnd().f - super.getStart().f);\n \n-            super.end.f = (int)(super.start.f + len * Math.cos(angle));\n-            super.end.s = (int)(super.start.s + len * Math.sin(angle));\n+            super.getEnd().f = (int) (super.getStart().f + len * Math.cos(angle));\n+            super.getEnd().s = (int) (super.getStart().s + len * Math.sin(angle));\n         }\n         sb.append(\"<line \")\n-                .append(\"x1=\\\"\").append(super.start.f).append(\"\\\" \")\n-                .append(\"y1=\\\"\").append(super.start.s).append(\"\\\" \")\n-                .append(\"x2=\\\"\").append(super.end.f).append(\"\\\" \")\n-                .append(\"y2=\\\"\").append(super.end.s).append(\"\\\" \")\n+                .append(\"x1=\\\"\").append(super.getStart().f).append(\"\\\" \")\n+                .append(\"y1=\\\"\").append(super.getStart().s).append(\"\\\" \")\n+                .append(\"x2=\\\"\").append(super.getEnd().f).append(\"\\\" \")\n+                .append(\"y2=\\\"\").append(super.getEnd().s).append(\"\\\" \")\n                 .append(attributes).append(\" />\\n\");\n     }\n \n@@ -51,6 +57,6 @@ public void scale(double scale) {\n         width *= scale;\n     }\n \n-    String arrow;\n-    int width;\n+    private final String arrow;\n+    private int width;\n }"
  },
  {
    "sha": "775e10bd506e9a11dea532988b18195db6adbeab",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/OvalElement.java",
    "status": "modified",
    "additions": 39,
    "deletions": 19,
    "changes": 58,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/OvalElement.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/OvalElement.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/OvalElement.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,33 +1,37 @@\n package org.atpfivt.jsyntrax.generators.elements;\n \n-import org.atpfivt.jsyntrax.styles.Style;\n-import org.atpfivt.jsyntrax.util.Algorithm;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n+import org.atpfivt.jsyntrax.util.StringUtils;\n import org.atpfivt.jsyntrax.util.Pair;\n-\n-import java.awt.*;\n+import java.awt.Color;\n \n /**\n  * @details Need only for bullets\n  */\n public class OvalElement extends Element {\n     public OvalElement(Pair<Integer, Integer> start, Pair<Integer, Integer> end, int width, Color fill, String tag) {\n         super(tag);\n-        super.start = start;\n-        super.end = end;\n-        this.width = width;\n-        this.fill = fill;\n+        super.setStart(start);\n+        super.setEnd(end);\n+        this.setWidth(width);\n+        this.setFill(fill);\n     }\n \n     @Override\n-    public void toSVG(StringBuilder sb, Style style) {\n-        int x0 = super.start.f;\n-        int y0 = super.start.s;\n-        int x1 = super.end.f;\n-        int y1 = super.end.s;\n+    public void addShadow(StringBuilder sb, StyleConfig style) {\n \n-        String attributes = \"stroke=\\\"\" + Algorithm.toHex(style.line_color) + \"\\\" \" +\n-                \"stroke-width=\\\"\" + this.width + \"\\\" \" +\n-                \"fill=\\\"\" + Algorithm.toHex(this.fill) + \"\\\"\";\n+    }\n+\n+    @Override\n+    public void toSVG(StringBuilder sb, StyleConfig style) {\n+        int x0 = super.getStart().f;\n+        int y0 = super.getStart().s;\n+        int x1 = super.getEnd().f;\n+        int y1 = super.getEnd().s;\n+\n+        String attributes = \"stroke=\\\"\" + StringUtils.toHex(style.getLineColor()) + \"\\\" \"\n+                + \"stroke-width=\\\"\" + this.getWidth() + \"\\\" \"\n+                + \"fill=\\\"\" + StringUtils.toHex(this.getFill()) + \"\\\"\";\n \n         int xc = (x0 + x1) / 2;\n         int yc = (y0 + y1) / 2;\n@@ -41,9 +45,25 @@ public void toSVG(StringBuilder sb, Style style) {\n     @Override\n     public void scale(double scale) {\n         super.scale(scale);\n-        width *= scale;\n+        setWidth((int) (getWidth() * scale));\n     }\n \n-    int width;\n-    Color fill;\n+    private int width;\n+    private Color fill;\n+\n+    public int getWidth() {\n+        return width;\n+    }\n+\n+    public void setWidth(int width) {\n+        this.width = width;\n+    }\n+\n+    public Color getFill() {\n+        return fill;\n+    }\n+\n+    public void setFill(Color fill) {\n+        this.fill = fill;\n+    }\n }"
  },
  {
    "sha": "b72ce428f2b13d224d69230bafe70a4b60ca7512",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/TitleElement.java",
    "status": "modified",
    "additions": 10,
    "deletions": 4,
    "changes": 14,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/TitleElement.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/TitleElement.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/generators/elements/TitleElement.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,21 +1,27 @@\n package org.atpfivt.jsyntrax.generators.elements;\n \n import org.atpfivt.jsyntrax.generators.SVGCanvasBuilder;\n-import org.atpfivt.jsyntrax.styles.Style;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n import org.atpfivt.jsyntrax.util.Pair;\n \n-import java.awt.*;\n+import java.awt.Color;\n+import java.awt.Font;\n \n public class TitleElement extends BubbleElementBase {\n     public TitleElement(String text, Font textFont, String fontName, String tag) {\n \n-        super(new Pair<>(0, 0), SVGCanvasBuilder.getTextSize(text,textFont),\n+        super(new Pair<>(0, 0), SVGCanvasBuilder.getTextSize(text, textFont),\n                 null, text, new Pair<>(0, 0), null, fontName, new Color(0, 0, 0),\n                 0, new Color(255, 255, 255), tag);\n     }\n \n     @Override\n-    public void toSVG(StringBuilder sb, Style style) {\n+    public void addShadow(StringBuilder sb, StyleConfig style) {\n+\n+    }\n+\n+    @Override\n+    public void toSVG(StringBuilder sb, StyleConfig style) {\n         // Add text\n         addXMLText(sb, style);\n     }"
  },
  {
    "sha": "e24b4ea4c1b9d920466e846bf22c3757bda9aaa5",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/groovy_parser/Parser.groovy",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/groovy_parser/Parser.groovy",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/groovy_parser/Parser.groovy",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/groovy_parser/Parser.groovy?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -2,7 +2,6 @@ package org.atpfivt.jsyntrax.groovy_parser\n \n import org.atpfivt.jsyntrax.Configuration\n import org.atpfivt.jsyntrax.units.Unit\n-import org.atpfivt.jsyntrax.units.tracks.Track\n import org.codehaus.groovy.control.CompilationFailedException\n import org.codehaus.groovy.control.CompilerConfiguration\n "
  },
  {
    "sha": "6a8c0317be95fa4f3a54a265cb367b4d4fbd5de7",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeBoxStyle.java",
    "status": "modified",
    "additions": 8,
    "deletions": 13,
    "changes": 21,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeBoxStyle.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeBoxStyle.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeBoxStyle.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,20 +1,15 @@\n package org.atpfivt.jsyntrax.styles;\n \n-import java.awt.*;\n-import java.util.regex.*;\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.util.regex.Pattern;\n \n public class NodeBoxStyle extends NodeStyle {\n     public NodeBoxStyle() {\n-        super.name = \"box\";\n-        super.shape = \"box\";\n-        super.pattern = Pattern.compile(\"^/.\");\n-        super.font = new Font(\"Times\", Font.ITALIC, 14);\n-        super.fill = new Color(144, 164, 174);\n+        super.setName(\"box\");\n+        super.setShape(\"box\");\n+        super.setPattern(Pattern.compile(\"^/(.*)\"));\n+        super.setFont(new Font(\"Times\", Font.ITALIC, 14));\n+        super.setFill(new Color(144, 164, 174));\n     }\n-\n-    @Override\n-    public String modify(String txt) {\n-        return txt.substring(1);\n-    }\n-\n }"
  },
  {
    "sha": "9621cb16e5c1fd8519a984aa179b5c7e3a0efb15",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeBubbleStyle.java",
    "status": "modified",
    "additions": 9,
    "deletions": 8,
    "changes": 17,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeBubbleStyle.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeBubbleStyle.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeBubbleStyle.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,16 +1,17 @@\n package org.atpfivt.jsyntrax.styles;\n \n-import java.awt.*;\n-import java.util.regex.*;\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.util.regex.Pattern;\n \n public class NodeBubbleStyle extends NodeStyle {\n \n     public NodeBubbleStyle() {\n-        super.name = \"bubble\";\n-        super.shape = \"bubble\";\n-        super.pattern = Pattern.compile(\"^\\\\w\");\n-        super.font = new Font(\"Sans\",Font.BOLD, 14);\n-        super.text_color = new Color(0,0,0);\n-        super.fill = new Color(179,229,252);\n+        super.setName(\"bubble\");\n+        super.setShape(\"bubble\");\n+        super.setPattern(Pattern.compile(\"^(\\\\w.*)\"));\n+        super.setFont(new Font(\"Sans\", Font.BOLD,  14));\n+        super.setTextColor(new Color(0, 0, 0));\n+        super.setFill(new Color(179, 229, 252));\n     }\n }"
  },
  {
    "sha": "9d2b223b40f3e03612290c6351f0ab6ce98a20f1",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeHexStyle.java",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeHexStyle.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeHexStyle.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeHexStyle.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,14 +1,15 @@\n package org.atpfivt.jsyntrax.styles;\n \n-import java.awt.*;\n+import java.awt.Color;\n+import java.awt.Font;\n import java.util.regex.Pattern;\n \n public class NodeHexStyle extends NodeStyle {\n     public NodeHexStyle() {\n-        super.name = \"hex\";\n-        super.shape = \"hex\";\n-        super.pattern = Pattern.compile(\"^\\\\w\");\n-        super.font = new Font(\"Sans\", Font.BOLD, 14);\n-        super.fill = new Color(255, 0, 0, 127);\n+        super.setName(\"hex\");\n+        super.setShape(\"hex\");\n+        super.setPattern(Pattern.compile(\"\\\\w+\"));\n+        super.setFont(new Font(\"Sans\", Font.BOLD, 14));\n+        super.setFill(new Color(255, 0, 0, 127));\n     }\n }"
  },
  {
    "sha": "e2b0f81203f3f628ff0763b3a771efb527db310a",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeStyle.java",
    "status": "modified",
    "additions": 76,
    "deletions": 11,
    "changes": 87,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeStyle.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeStyle.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeStyle.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,22 +1,87 @@\n package org.atpfivt.jsyntrax.styles;\n \n-import java.awt.*;\n+import java.awt.Color;\n+import java.awt.Font;\n import java.util.regex.Pattern;\n \n public class NodeStyle {\n-    public boolean match(String txt) {\n-        if (pattern == null) {\n+    public final boolean match(String txt) {\n+        if (getPattern() == null) {\n             return true;\n         }\n-        return pattern.matcher(txt).find();\n+        return getPattern().matcher(txt).matches();\n     }\n \n-    public String modify(String txt) { return txt; }\n+    // gets plain text from regex groups, defined in pattern by user\n+    // returns text \"as is\" if no groups found or pattern is not defined\n+    public final String unwrapTextContent(String txt) {\n+        if (getPattern() == null) {\n+            return txt;\n+        }\n+        var matcher = getPattern().matcher(txt);\n+        StringBuilder unwrappedTxt = new StringBuilder();\n+\n+        if (matcher.groupCount() == 0 || !matcher.find()) {\n+            return txt;\n+        }\n+        for (int i = 1; i <= matcher.groupCount(); i++) {\n+            unwrappedTxt.append(matcher.group(i));\n+        }\n+        return unwrappedTxt.toString();\n+    }\n+\n+    private String name = \"unknown\";\n+    private String shape = \"bubble\";\n+    private Font font = new Font(\"Sans\", Font.BOLD,  14);\n+    private Color textColor = new Color(0, 0, 0);\n+    private Color fill = new Color(144, 164, 174);\n+    private Pattern pattern = null;\n+\n+    public final String getName() {\n+        return name;\n+    }\n \n-    public String name = \"unknown\";\n-    public String shape = \"bubble\";\n-    public Font font = new Font(\"Sans\",Font.BOLD, 14);\n-    public Color text_color = new Color(0,0,0);\n-    public Color fill = new Color(144,164,174);\n-    public Pattern pattern = null;\n+    public final void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public final String getShape() {\n+        return shape;\n+    }\n+\n+    public final void setShape(String shape) {\n+        this.shape = shape;\n+    }\n+\n+    public final Font getFont() {\n+        return font;\n+    }\n+\n+    public final void setFont(Font font) {\n+        this.font = font;\n+    }\n+\n+    public final Color getTextColor() {\n+        return textColor;\n+    }\n+\n+    public final void setTextColor(Color textColor) {\n+        this.textColor = textColor;\n+    }\n+\n+    public final Color getFill() {\n+        return fill;\n+    }\n+\n+    public final void setFill(Color fill) {\n+        this.fill = fill;\n+    }\n+\n+    public final Pattern getPattern() {\n+        return pattern;\n+    }\n+\n+    public final void setPattern(Pattern pattern) {\n+        this.pattern = pattern;\n+    }\n }"
  },
  {
    "sha": "9c07345117b42d1fa694c12e0273816b17ad8600",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeTokenStyle.java",
    "status": "modified",
    "additions": 8,
    "deletions": 7,
    "changes": 15,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeTokenStyle.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeTokenStyle.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/NodeTokenStyle.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,15 +1,16 @@\n package org.atpfivt.jsyntrax.styles;\n \n-import java.awt.*;\n-import java.util.regex.*;\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.util.regex.Pattern;\n \n public class NodeTokenStyle extends NodeStyle {\n     public NodeTokenStyle() {\n         super();\n-        super.name = \"token\";\n-        super.shape = \"bubble\";\n-        this.pattern = Pattern.compile(\".\");\n-        super.font = new Font(\"Sans\",Font.BOLD, 16);\n-        super.fill = new Color(179, 229, 252);\n+        super.setName(\"token\");\n+        super.setShape(\"bubble\");\n+        this.setPattern(Pattern.compile(\"(.)\"));\n+        super.setFont(new Font(\"Sans\", Font.BOLD, 16));\n+        super.setFill(new Color(179, 229, 252));\n     }\n }"
  },
  {
    "sha": "0ad9d74e58838adfacdc10dcb9a2db43bbfc8b48",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/Style.java",
    "status": "removed",
    "additions": 0,
    "deletions": 84,
    "changes": 84,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/1f4958ab177efe4da72d88dd7187732164cd8742/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/Style.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/1f4958ab177efe4da72d88dd7187732164cd8742/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/Style.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/Style.java?ref=1f4958ab177efe4da72d88dd7187732164cd8742",
    "patch": "@@ -1,84 +0,0 @@\n-package org.atpfivt.jsyntrax.styles;\n-\n-import java.awt.Color;\n-import java.awt.Font;\n-import java.nio.file.Path;\n-import java.util.List;\n-\n-public class Style {\n-    public Style(double scale, boolean transparent) {\n-        updateByConfig(new StyleConfig());\n-        this.scale = scale;\n-        this.transparent = transparent;\n-    }\n-\n-    public NodeStyle getNodeStyle(String txt) {\n-        for (NodeStyle ns : nodeStyles) {\n-            if (ns.match(txt)) {\n-                return ns;\n-            }\n-        }\n-        return defNodeStyle;\n-    }\n-\n-    public boolean updateByFile(Path style) {\n-        StyleConfig cfg;\n-        try {\n-           cfg = new StyleConfig(style);\n-        } catch (Exception e) {\n-            System.out.println(\"Got Exception: \" + e.getMessage());\n-            return false;\n-        }\n-        updateByConfig(cfg);\n-        return true;\n-    }\n-\n-    private void updateByConfig(StyleConfig cfg) {\n-        line_width = cfg.line_width;\n-        line_color = cfg.line_color;\n-        outline_width = cfg.outline_width;\n-        padding = cfg.padding;\n-        max_radius = cfg.max_radius;\n-        h_sep = cfg.h_sep;\n-        v_sep = cfg.v_sep;\n-        arrows = cfg.arrows;\n-        title_pos = cfg.title_pos;\n-        bullet_fill = cfg.bullet_fill;\n-        text_color = cfg.text_color;\n-        shadow = cfg.shadow;\n-        shadow_fill = cfg.shadow_fill;\n-        title_font = cfg.title_font;\n-\n-        nodeStyles = cfg.nodeStyles;\n-    }\n-\n-    public int line_width;\n-    public Color line_color;\n-    public int outline_width;\n-    public int padding;\n-    public int max_radius;\n-    public int h_sep;\n-    public int v_sep;\n-    public boolean arrows;\n-    public TitlePosition title_pos;\n-    public Color bullet_fill;\n-    public Color text_color;\n-    public boolean shadow;\n-    public Color shadow_fill;\n-    public Font title_font;\n-\n-    private final double scale;\n-    private final boolean transparent;\n-\n-    public List<NodeStyle> nodeStyles;\n-\n-    private static final NodeStyle defNodeStyle = new NodeStyle();\n-\n-    public double getScale() {\n-        return scale;\n-    }\n-\n-    public boolean isTransparent() {\n-        return transparent;\n-    }\n-}"
  },
  {
    "sha": "7673c1db1b8a891516d34bb2215a13076b3d0ed8",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/StyleConfig.java",
    "status": "modified",
    "additions": 247,
    "deletions": 94,
    "changes": 341,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/StyleConfig.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/StyleConfig.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/styles/StyleConfig.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,147 +1,300 @@\n package org.atpfivt.jsyntrax.styles;\n \n+import org.atpfivt.jsyntrax.Main;\n+import org.atpfivt.jsyntrax.util.StringUtils;\n import org.ini4j.Profile.Section;\n import org.ini4j.Wini;\n \n-import java.awt.*;\n+import java.awt.Color;\n+import java.awt.Font;\n import java.io.IOException;\n+import java.lang.reflect.Field;\n import java.nio.file.Path;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.function.Function;\n-import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-public class StyleConfig {\n-    public StyleConfig() {\n-        nodeStyles = new ArrayList<>(List.of(\n-                new NodeBubbleStyle(),\n-                new NodeBoxStyle(),\n-                new NodeTokenStyle(),\n-                new NodeHexStyle()));\n-    }\n \n-    public StyleConfig(Path style) throws IllegalAccessException, NoSuchFieldException, IOException {\n-        this();\n-        Wini ini = new Wini(style.toFile());\n-        if (ini.containsKey(\"style\")) {\n-            parseStyleArgs(ini.get(\"style\"));\n-        }\n-\n-        nodeStyles.clear();\n+public final class StyleConfig {\n+    private int lineWidth = 2;\n+    private int outlineWidth = 2;\n+    private int padding = 5;\n+    private Color lineColor = new Color(0, 0, 0);\n+    private int maxRadius = 9;\n+    private int hSep = 17;\n+    private int vSep = 9;\n+    private boolean arrows = true;\n+    private TitlePosition titlePos = TitlePosition.tl;\n+    private Color bulletFill = new Color(255, 255, 255);\n+    private Color textColor = new Color(0, 0, 0);\n+    private boolean shadow = true;\n+    private Color shadowFill = new Color(0, 0, 0, 127);\n+    private Font titleFont = new Font(\"Sans\", Font.BOLD, 22);\n+    private double scale;\n+    private boolean transparency;\n+    private NodeStyle defNodeStyle = new NodeStyle();\n+    private List<NodeStyle> nodeStyles = new ArrayList<>(List.of(\n+            new NodeBubbleStyle(),\n+            new NodeBoxStyle(),\n+            new NodeTokenStyle(),\n+            new NodeHexStyle()\n+    ));\n \n-        for (Section s : ini.values()) {\n-            if (s.getName().equals(\"style\")) {\n-                continue;\n-            }\n-            // this is custom node style\n-            NodeStyle ns = new NodeStyle();\n-            ns.name = s.getName();\n-            parseNodeStyle(s, ns);\n-            nodeStyles.add(ns);\n-        }\n-    }\n \n-    private void parseStyleArgs(Section s) throws NoSuchFieldException, IllegalAccessException {\n+    private void parseStyleArgs(Section s)\n+            throws NoSuchFieldException, IllegalAccessException {\n         parseField(s, this, \"line_width\", Integer::parseInt);\n         parseField(s, this, \"outline_width\", Integer::parseInt);\n         parseField(s, this, \"padding\", Integer::parseInt);\n-        parseField(s, this, \"line_color\", StyleConfig::colorFromString);\n+        parseField(s, this, \"line_color\", StringUtils::colorFromString);\n         parseField(s, this, \"max_radius\", Integer::parseInt);\n         parseField(s, this, \"h_sep\", Integer::parseInt);\n         parseField(s, this, \"v_sep\", Integer::parseInt);\n         parseField(s, this, \"arrows\", Boolean::parseBoolean);\n-        parseField(s, this, \"title_pos\", (String v) ->\n-                TitlePosition.valueOf(v.substring(1, v.length() - 1)));\n-        parseField(s, this, \"bullet_fill\", StyleConfig::colorFromString);\n-        parseField(s, this, \"text_color\", StyleConfig::colorFromString);\n+        parseField(s, this, \"title_pos\", (String v) -> {\n+            return TitlePosition.valueOf(v.substring(1, v.length() - 1));\n+        });\n+        parseField(s, this, \"bullet_fill\", StringUtils::colorFromString);\n+        parseField(s, this, \"text_color\", StringUtils::colorFromString);\n         parseField(s, this, \"shadow\", Boolean::parseBoolean);\n-        parseField(s, this, \"shadow_fill\", StyleConfig::colorFromString);\n-        parseField(s, this, \"title_font\", StyleConfig::fontFromString);\n+        parseField(s, this, \"shadow_fill\", StringUtils::colorFromString);\n+        parseField(s, this, \"title_font\", StringUtils::fontFromString);\n     }\n \n+\n     private void parseNodeStyle(Section s, NodeStyle ns)\n             throws NoSuchFieldException, IllegalAccessException {\n-        Function<String, Object> patFunc = (String v) -> Pattern.compile(v.substring(1, v.length() - 1));\n+        Function<String, Object> patFunc = (String v) -> {\n+            return Pattern.compile(v.substring(1, v.length() - 1));\n+        };\n         parseField(s, ns, \"pattern\", patFunc);\n-        parseField(s, ns, \"shape\", (String v) -> v.substring(1, v.length() - 1));\n-        parseField(s, ns, \"font\", StyleConfig::fontFromString);\n-        parseField(s, ns, \"text_color\", StyleConfig::colorFromString);\n-        parseField(s, ns, \"fill\", StyleConfig::colorFromString);\n+        parseField(s, ns, \"shape\", (String v) -> {\n+            return v.substring(1, v.length() - 1);\n+        });\n+        parseField(s, ns, \"font\", StringUtils::fontFromString);\n+        parseField(s, ns, \"text_color\", StringUtils::colorFromString);\n+        parseField(s, ns, \"fill\", StringUtils::colorFromString);\n     }\n \n-    private static void parseField(Section s, Object obj,\n-                                   String name, Function<String, Object> parser)\n+\n+    private void parseField(Section s, Object obj,\n+                            String propertyName, Function<String, Object> parser)\n             throws NoSuchFieldException, IllegalAccessException {\n-        if (s.containsKey(name)) {\n-            obj.getClass().getDeclaredField(name).set(obj,\n-                    parser.apply(s.get(name)));\n+        if (s.containsKey(propertyName)) {\n+            Field field = obj.getClass()\n+                    .getDeclaredField(StringUtils.snakeToCamelCase(propertyName));\n+            field.setAccessible(true);\n+            field.set(obj, parser.apply(s.get(propertyName)));\n         }\n     }\n \n-    final static Pattern fontPattern = Pattern.compile(\n-            \"\\\\(\\\\s*'([a-zA-Z]+)'\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*'([a-zA-Z ]+)'\\\\s*\\\\)\");\n \n-    static Font fontFromString(String txt) {\n-        Matcher matcher = fontPattern.matcher(txt.trim());\n+    public StyleConfig(double scale, boolean transparency) throws\n+            IOException, NoSuchFieldException, IllegalAccessException {\n+        this.setTransparency(transparency);\n+        this.setScale(scale);\n \n-        if (!matcher.matches()) {\n-            throw new IllegalArgumentException(\"Invalid font style in config\");\n+        Wini config = new Wini(Main.class\n+                .getResourceAsStream(\"/jsyntrax.ini\")\n+        );\n+        if (config.containsKey(\"style\")) {\n+            parseStyleArgs(config.get(\"style\"));\n         }\n+    }\n+\n \n-        String name = matcher.group(1);\n+    public StyleConfig(double scale, boolean transparency, Path style)\n+            throws IllegalAccessException, NoSuchFieldException, IOException {\n+        this.setTransparency(transparency);\n+        this.setScale(scale);\n \n-        int style = Font.PLAIN;\n-        String styleText = matcher.group(3).toLowerCase();\n-        if (styleText.contains(\"bold\")) {\n-            style |= Font.BOLD;\n+        Wini ini = new Wini(style.toFile());\n+        if (ini.containsKey(\"style\")) {\n+            parseStyleArgs(ini.get(\"style\"));\n         }\n-        if (styleText.contains(\"italic\")) {\n-            style |= Font.ITALIC;\n+        getNodeStyles().clear();\n+        for (Section s : ini.values()) {\n+            if (s.getName().equals(\"style\")) {\n+                continue;\n+            }\n+            // this is custom node style\n+            NodeStyle ns = new NodeStyle();\n+            ns.setName(s.getName());\n+            parseNodeStyle(s, ns);\n+            getNodeStyles().add(ns);\n         }\n+    }\n \n-        int size = Integer.parseInt(matcher.group(2));\n \n-        return new Font(name, style, size);\n+    public NodeStyle getNodeStyle(String txt) {\n+        for (NodeStyle ns : getNodeStyles()) {\n+            if (ns.match(txt)) {\n+                return ns;\n+            }\n+        }\n+        return getDefNodeStyle();\n     }\n \n-    final static Pattern colorPattern = Pattern.compile(\n-            \"\\\\(\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(,\\\\s*(\\\\d+)\\\\s*)?\\\\)\");\n \n-    static Color colorFromString(String txt) {\n-        Matcher matcher = colorPattern.matcher(txt.trim());\n-        if (!matcher.matches()) {\n-            throw new IllegalArgumentException(\"Invalid color style in config\");\n-        }\n+    public boolean getArrows() {\n+        return isArrows();\n+    }\n \n-        int r = Integer.parseInt(matcher.group(1));\n-        int g = Integer.parseInt(matcher.group(2));\n-        int b = Integer.parseInt(matcher.group(3));\n-        int a;\n-        if (matcher.group(5) == null) {\n-            a = 255;\n-        } else {\n-            a = Integer.parseInt(matcher.group(5));\n-        }\n+    public int getLineWidth() {\n+        return lineWidth;\n+    }\n+\n+    public int getOutlineWidth() {\n+        return outlineWidth;\n+    }\n \n-        return new Color(r, g, b, a);\n+    public int getPadding() {\n+        return padding;\n     }\n \n+    public Color getLineColor() {\n+        return lineColor;\n+    }\n+\n+    public int getMaxRadius() {\n+        return maxRadius;\n+    }\n \n-    public int line_width = 2;\n-    public int outline_width = 2;\n-    public int padding = 5;\n-    public Color line_color = new Color(0, 0, 0);\n-    public int max_radius = 9;\n-    public int h_sep = 17;\n-    public int v_sep = 9;\n-    public boolean arrows = true;\n-    public TitlePosition title_pos = TitlePosition.tl;\n-    public Color bullet_fill = new Color(255, 255, 255);\n-    public Color text_color = new Color(0, 0, 0);\n-    public boolean shadow = true;\n-    public Color shadow_fill = new Color(0, 0, 0, 127);\n-    public Font title_font = new Font(\"Sans\", Font.BOLD, 22);\n+    public int getHSep() {\n+        return gethSep();\n+    }\n+\n+    public int getVSep() {\n+        return getvSep();\n+    }\n+\n+    public TitlePosition getTitlePos() {\n+        return titlePos;\n+    }\n+\n+    public Color getBulletFill() {\n+        return bulletFill;\n+    }\n+\n+    public Color getTextColor() {\n+        return textColor;\n+    }\n+\n+    public boolean isShadow() {\n+        return shadow;\n+    }\n+\n+    public Color getShadowFill() {\n+        return shadowFill;\n+    }\n \n-    public final List<NodeStyle> nodeStyles;\n+    public Font getTitleFont() {\n+        return titleFont;\n+    }\n+\n+    public List<NodeStyle> getNodeStyles() {\n+        return nodeStyles;\n+    }\n+\n+    public double getScale() {\n+        return scale;\n+    }\n+\n+    public boolean isTransparent() {\n+        return isTransparency();\n+    }\n+\n+    public int gethSep() {\n+        return hSep;\n+    }\n+\n+    public int getvSep() {\n+        return vSep;\n+    }\n+\n+    public boolean isArrows() {\n+        return arrows;\n+    }\n+\n+    public boolean isTransparency() {\n+        return transparency;\n+    }\n+\n+    public void setLineWidth(int lineWidth) {\n+        this.lineWidth = lineWidth;\n+    }\n+\n+    public void setOutlineWidth(int outlineWidth) {\n+        this.outlineWidth = outlineWidth;\n+    }\n+\n+    public void setPadding(int padding) {\n+        this.padding = padding;\n+    }\n+\n+    public void setLineColor(Color lineColor) {\n+        this.lineColor = lineColor;\n+    }\n+\n+    public void setMaxRadius(int maxRadius) {\n+        this.maxRadius = maxRadius;\n+    }\n+\n+    public void sethSep(int hSep) {\n+        this.hSep = hSep;\n+    }\n+\n+    public void setvSep(int vSep) {\n+        this.vSep = vSep;\n+    }\n+\n+    public void setArrows(boolean arrows) {\n+        this.arrows = arrows;\n+    }\n+\n+    public void setTitlePos(TitlePosition titlePos) {\n+        this.titlePos = titlePos;\n+    }\n+\n+    public void setBulletFill(Color bulletFill) {\n+        this.bulletFill = bulletFill;\n+    }\n+\n+    public void setTextColor(Color textColor) {\n+        this.textColor = textColor;\n+    }\n+\n+    public void setShadow(boolean shadow) {\n+        this.shadow = shadow;\n+    }\n+\n+    public void setShadowFill(Color shadowFill) {\n+        this.shadowFill = shadowFill;\n+    }\n+\n+    public void setTitleFont(Font titleFont) {\n+        this.titleFont = titleFont;\n+    }\n+\n+    public void setScale(double scale) {\n+        this.scale = scale;\n+    }\n+\n+    public void setTransparency(boolean transparency) {\n+        this.transparency = transparency;\n+    }\n+\n+    public NodeStyle getDefNodeStyle() {\n+        return defNodeStyle;\n+    }\n+\n+    public void setDefNodeStyle(NodeStyle defNodeStyle) {\n+        this.defNodeStyle = defNodeStyle;\n+    }\n+\n+    public void setNodeStyles(List<NodeStyle> nodeStyles) {\n+        this.nodeStyles = nodeStyles;\n+    }\n }\n+"
  },
  {
    "sha": "05325bd1f24e7d68099615d440cb21de2fcd4dd2",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/Unit.java",
    "status": "modified",
    "additions": 11,
    "deletions": 11,
    "changes": 22,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/Unit.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/Unit.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/Unit.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -9,17 +9,17 @@\n import java.util.List;\n \n public interface Unit {\n-  void accept(Visitor visitor);\n+    void accept(Visitor visitor);\n \n-  default List<Unit> getUnits() {\n-    return Collections.emptyList();\n-  }\n+    default List<Unit> getUnits() {\n+      return Collections.emptyList();\n+    }\n \n-  default Configuration getConfiguration(){\n-    return new Configuration(this.getTrack());\n-  }\n+    default Configuration getConfiguration() {\n+        return new Configuration(this.getTrack());\n+    }\n \n-  default Track getTrack() {\n-    return new Line(this);\n-  }\n-}\n\\ No newline at end of file\n+    default Track getTrack() {\n+      return new Line(this);\n+    }\n+}"
  },
  {
    "sha": "6feeda921f0ff379852e47a23263ca71fed59211",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/Bullet.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/Bullet.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/Bullet.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/Bullet.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -6,7 +6,7 @@\n import org.atpfivt.jsyntrax.visitors.Visitor;\n \n public class Bullet implements Unit {\n-    public Bullet() {}\n+    public Bullet() { }\n \n     @Override\n     public void accept(Visitor visitor) {"
  },
  {
    "sha": "7b356f4e81195f0765fba2ac9265024caa15189b",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/Node.java",
    "status": "modified",
    "additions": 13,
    "deletions": 13,
    "changes": 26,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/Node.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/Node.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/Node.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -1,36 +1,36 @@\n package org.atpfivt.jsyntrax.units.nodes;\n \n-import org.atpfivt.jsyntrax.styles.Style;\n+import org.atpfivt.jsyntrax.styles.StyleConfig;\n import org.atpfivt.jsyntrax.units.Unit;\n import org.atpfivt.jsyntrax.units.tracks.Line;\n import org.atpfivt.jsyntrax.units.tracks.Track;\n import org.atpfivt.jsyntrax.visitors.Visitor;\n \n public class Node implements Unit {\n-  private Style style;\n+  private StyleConfig style;\n   private final String text;\n-  boolean is_link = false;\n+  private boolean isLink = false;\n \n   public Node(String text) {\n     this.text = text;\n   }\n \n-  public Node(Style style, String text) {\n-    this.style = style;\n-    this.text = text;\n-    this.is_link = false;  // FIXME: replace with slash checker\n-  }\n+//  public Node(StyleConfig style, String text) {\n+//    this.style = style;\n+//    this.text = text;\n+//    this.is_link = false;  // FIXME: replace with slash checker\n+//  }\n \n   public boolean isLink() {\n-    return is_link;\n+    return isLink;\n   }\n \n   public void setLink() {\n-    is_link = true;\n+    isLink = true;\n   }\n \n   public void unsetLink() {\n-    is_link = false;\n+    isLink = false;\n   }\n \n   @Override\n@@ -46,11 +46,11 @@ public Track getTrack() {\n     return new Line(this);\n   }\n \n-  public Style getStyle() {\n+  public StyleConfig getStyle() {\n     return style;\n   }\n \n-  public void setStyle(Style style) {\n+  public void setStyle(StyleConfig style) {\n     this.style = style;\n   }\n }"
  },
  {
    "sha": "7799efd16397930ad030b499a3778231600a3693",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/NoneNode.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/NoneNode.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/NoneNode.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/nodes/NoneNode.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -6,7 +6,9 @@\n  * @brief special class for parse None in syntrax language\n  */\n public class NoneNode extends Node {\n-    public NoneNode() { super(\"\"); }\n+    public NoneNode() {\n+        super(\"\");\n+    }\n \n     public void accept(Visitor visitor) {\n         visitor.visitNoneNode(this);"
  },
  {
    "sha": "a08af50bcf131247440a6c89d1b65e0647645273",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/tracks/Track.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/tracks/Track.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/tracks/Track.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/tracks/Track.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -6,7 +6,7 @@\n import java.util.stream.Collectors;\n \n public abstract class Track implements Unit {\n-  protected final List<Unit> units;\n+  private final List<Unit> units;\n \n   public Track(List<Unit> units) {\n     this.units = units;\n@@ -19,13 +19,13 @@ public Track(List<Unit> units) {\n \n   @Override\n   public String toString() {\n-    return \"< \" + this.getClass().getSimpleName() +\n-        \"[ \" +\n-        units.stream().map(Object::toString)\n+    return \"< \" + this.getClass().getSimpleName()\n+            + \"[ \" + units.stream().map(Object::toString)\n             .collect(Collectors.joining(\"\\n\"))\n-        + \" ]\" + \" >\";\n+            + \" ]\" + \" >\";\n   }\n \n+  @Override\n   public Track getTrack() {\n     return this;\n   }"
  },
  {
    "sha": "76b6fccd842a502408acd52944b0f88bd457b760",
    "filename": "jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/tracks/opt/Opt.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/atp-mipt/jsyntrax/blob/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/tracks/opt/Opt.java",
    "raw_url": "https://github.com/atp-mipt/jsyntrax/raw/2aa6dc6687200955243c3f0f0e85f1559b4931d2/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/tracks/opt/Opt.java",
    "contents_url": "https://api.github.com/repos/atp-mipt/jsyntrax/contents/jsyntrax/src/main/java/org/atpfivt/jsyntrax/units/tracks/opt/Opt.java?ref=2aa6dc6687200955243c3f0f0e85f1559b4931d2",
    "patch": "@@ -14,11 +14,10 @@ public Opt(List<Unit> units) {\n \n   @Override\n   public String toString() {\n-    return \"< \" + this.getClass().getSimpleName() +\n-        \" [ \" +\n-        units.stream().map(Object::toString)\n+    return \"< \" + this.getClass().getSimpleName()\n+            + \" [ \" + getUnits().stream().map(Object::toString)\n             .collect(Collectors.joining(\"\\n\"))\n-        + \" ]\" + \" >\";\n+            + \" ]\" + \" >\";\n   }\n \n   public void accept(Visitor visitor) {"
  }
]
