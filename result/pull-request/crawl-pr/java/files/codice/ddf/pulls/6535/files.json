[
  {
    "sha": "0e155a4f8111131794afe0a868670d3d5d55c2d8",
    "filename": "catalog/ui/catalog-ui-search/src/main/java/org/codice/ddf/catalog/ui/config/ConfigurationApplication.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/codice/ddf/blob/efbddff261b7338b8d582a7e66f503f0b549aa25/catalog/ui/catalog-ui-search/src/main/java/org/codice/ddf/catalog/ui/config/ConfigurationApplication.java",
    "raw_url": "https://github.com/codice/ddf/raw/efbddff261b7338b8d582a7e66f503f0b549aa25/catalog/ui/catalog-ui-search/src/main/java/org/codice/ddf/catalog/ui/config/ConfigurationApplication.java",
    "contents_url": "https://api.github.com/repos/codice/ddf/contents/catalog/ui/catalog-ui-search/src/main/java/org/codice/ddf/catalog/ui/config/ConfigurationApplication.java?ref=efbddff261b7338b8d582a7e66f503f0b549aa25",
    "patch": "@@ -180,6 +180,8 @@\n \n   private int maximumUploadSize = 1_048_576;\n \n+  private String logoutUrl = \"\";\n+\n   private List<String> readOnly =\n       ImmutableList.of(\n           \"checksum\",\n@@ -583,6 +585,7 @@ public void destroy() {\n     config.put(\"useHyphensInUuid\", uuidGenerator.useHyphens());\n     config.put(\"i18n\", i18n);\n     config.put(\"attributeSuggestionList\", attributeSuggestionList);\n+    config.put(\"logoutUrl\", logoutUrl);\n     return config;\n   }\n \n@@ -1297,4 +1300,12 @@ public String getBasicSearchMatchType() {\n   public void setBasicSearchMatchType(String basicSearchMatchType) {\n     this.basicSearchMatchType = basicSearchMatchType;\n   }\n+\n+  public void setLogoutUrl(String logoutUrl) {\n+    this.logoutUrl = logoutUrl;\n+  }\n+\n+  public String getLogoutUrl() {\n+    return logoutUrl;\n+  }\n }"
  },
  {
    "sha": "450af4f89d9a34a41541dbd7bd5b407f4a8582e1",
    "filename": "catalog/ui/catalog-ui-search/src/main/resources/OSGI-INF/metatype/org.codice.ddf.catalog.ui.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/codice/ddf/blob/efbddff261b7338b8d582a7e66f503f0b549aa25/catalog/ui/catalog-ui-search/src/main/resources/OSGI-INF/metatype/org.codice.ddf.catalog.ui.xml",
    "raw_url": "https://github.com/codice/ddf/raw/efbddff261b7338b8d582a7e66f503f0b549aa25/catalog/ui/catalog-ui-search/src/main/resources/OSGI-INF/metatype/org.codice.ddf.catalog.ui.xml",
    "contents_url": "https://api.github.com/repos/codice/ddf/contents/catalog/ui/catalog-ui-search/src/main/resources/OSGI-INF/metatype/org.codice.ddf.catalog.ui.xml?ref=efbddff261b7338b8d582a7e66f503f0b549aa25",
    "patch": "@@ -336,6 +336,13 @@\n             cardinality=\"100\"\n             required=\"false\">\n         </AD>\n+        <AD id=\"logoutUrl\"\n+            name=\"Logout Url\"\n+            description=\"URL used for logging users out of the system when logging out of the Search UI. To use the default logout behavior, leave this field empty.\"\n+            type=\"String\"\n+            required=\"false\"\n+            default=\"\">\n+        </AD>\n     </OCD>\n \n     <Designate pid=\"org.codice.ddf.catalog.ui\">"
  },
  {
    "sha": "00f29952255adef0e2a569d76902afb61e3cce33",
    "filename": "catalog/ui/search-ui-app/src/main/resources/etc/org.codice.ddf.catalog.ui.config",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/codice/ddf/blob/efbddff261b7338b8d582a7e66f503f0b549aa25/catalog/ui/search-ui-app/src/main/resources/etc/org.codice.ddf.catalog.ui.config",
    "raw_url": "https://github.com/codice/ddf/raw/efbddff261b7338b8d582a7e66f503f0b549aa25/catalog/ui/search-ui-app/src/main/resources/etc/org.codice.ddf.catalog.ui.config",
    "contents_url": "https://api.github.com/repos/codice/ddf/contents/catalog/ui/search-ui-app/src/main/resources/etc/org.codice.ddf.catalog.ui.config?ref=efbddff261b7338b8d582a7e66f503f0b549aa25",
    "patch": "@@ -70,8 +70,9 @@ uiName=\"Intrigue\"\n relevanceScoresEnabled=B\"false\"\n relevancePrecision=I\"5\"\n logoEnabled=B\"false\"\n+logoutUrl=\"\"\n autoMergeTime=I\"16\"\n spellcheckEnabled=B\"false\"\n phoneticsEnabled=B\"false\"\n metacardPreviewEnabled=B\"true\"\n-clientValidationEnabled=B\"true\"\n+clientValidationEnabled=B\"true\"\n\\ No newline at end of file"
  },
  {
    "sha": "e47860bfefa4e37b2e1f32e96e33d9520cd2c39a",
    "filename": "platform/security/servlet/security-servlet-logout/pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/codice/ddf/blob/efbddff261b7338b8d582a7e66f503f0b549aa25/platform/security/servlet/security-servlet-logout/pom.xml",
    "raw_url": "https://github.com/codice/ddf/raw/efbddff261b7338b8d582a7e66f503f0b549aa25/platform/security/servlet/security-servlet-logout/pom.xml",
    "contents_url": "https://api.github.com/repos/codice/ddf/contents/platform/security/servlet/security-servlet-logout/pom.xml?ref=efbddff261b7338b8d582a7e66f503f0b549aa25",
    "patch": "@@ -139,7 +139,7 @@\n                                         <limit implementation=\"org.codice.jacoco.LenientLimit\">\n                                             <counter>BRANCH</counter>\n                                             <value>COVEREDRATIO</value>\n-                                            <minimum>0.71</minimum>\n+                                            <minimum>0.70</minimum>\n                                         </limit>\n                                         <limit implementation=\"org.codice.jacoco.LenientLimit\">\n                                             <counter>COMPLEXITY</counter>"
  },
  {
    "sha": "6283fdf0f825341d0f801659e064ce893b63a4fb",
    "filename": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java",
    "status": "modified",
    "additions": 2,
    "deletions": 31,
    "changes": 33,
    "blob_url": "https://github.com/codice/ddf/blob/efbddff261b7338b8d582a7e66f503f0b549aa25/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java",
    "raw_url": "https://github.com/codice/ddf/raw/efbddff261b7338b8d582a7e66f503f0b549aa25/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java",
    "contents_url": "https://api.github.com/repos/codice/ddf/contents/platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java?ref=efbddff261b7338b8d582a7e66f503f0b549aa25",
    "patch": "@@ -17,7 +17,6 @@\n import ddf.security.common.SecurityTokenHolder;\n import ddf.security.common.audit.SecurityLogger;\n import java.io.IOException;\n-import java.net.URISyntaxException;\n import java.security.cert.X509Certificate;\n import java.util.Arrays;\n import java.util.Enumeration;\n@@ -27,8 +26,6 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n-import org.apache.http.client.utils.URIBuilder;\n-import org.apache.logging.log4j.util.Strings;\n import org.apache.shiro.subject.Subject;\n import org.apache.shiro.util.ThreadContext;\n import org.slf4j.Logger;\n@@ -37,8 +34,6 @@\n public class LocalLogoutServlet extends HttpServlet {\n   private static final Logger LOGGER = LoggerFactory.getLogger(LocalLogoutServlet.class);\n \n-  private String redirectUrl = \"\";\n-\n   @Override\n   protected void doGet(HttpServletRequest request, HttpServletResponse response)\n       throws ServletException {\n@@ -50,13 +45,11 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n \n     boolean mustCloseBrowser = (checkForBasic(request) || checkForPki(request));\n \n-    String message =\n-        String.format(\n-            \"{ \\\"mustCloseBrowser\\\": %b, \\\"redirectUrl\\\": \\\"%s\\\" }\",\n-            mustCloseBrowser, getRedirectUrlMessage());\n+    String message = String.format(\"{ \\\"mustCloseBrowser\\\": %b }\", mustCloseBrowser);\n \n     response.setStatus(HttpServletResponse.SC_OK);\n     response.setContentType(\"application/json\");\n+\n     try {\n       response.getWriter().write(message);\n       response.flushBuffer();\n@@ -111,26 +104,4 @@ private void deleteJSessionId(HttpServletResponse response) {\n     cookie.setComment(\"EXPIRING COOKIE at \" + System.currentTimeMillis());\n     response.addCookie(cookie);\n   }\n-\n-  private String getRedirectUrlMessage() {\n-    String redirectUrlMessage = \"\";\n-    if (Strings.isNotBlank(redirectUrl)) {\n-      try {\n-        URIBuilder redirectUrlBuilder = new URIBuilder(redirectUrl);\n-        redirectUrlMessage =\n-            redirectUrlBuilder == null ? \"\" : redirectUrlBuilder.build().toString();\n-      } catch (URISyntaxException e) {\n-        LOGGER.debug(\n-            \"Invalid URL of {} set for logout redirect URL. Users will not be redirected to {} upon logout.\",\n-            redirectUrl,\n-            redirectUrl,\n-            e);\n-      }\n-    }\n-    return redirectUrlMessage;\n-  }\n-\n-  public void setRedirectUrl(String redirectUrl) {\n-    this.redirectUrl = redirectUrl;\n-  }\n }"
  },
  {
    "sha": "23da691a7e93158d94714a4981f1af3c5cca7d49",
    "filename": "platform/security/servlet/security-servlet-logout/src/main/resources/OSGI-INF/blueprint/blueprint.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/codice/ddf/blob/efbddff261b7338b8d582a7e66f503f0b549aa25/platform/security/servlet/security-servlet-logout/src/main/resources/OSGI-INF/blueprint/blueprint.xml",
    "raw_url": "https://github.com/codice/ddf/raw/efbddff261b7338b8d582a7e66f503f0b549aa25/platform/security/servlet/security-servlet-logout/src/main/resources/OSGI-INF/blueprint/blueprint.xml",
    "contents_url": "https://api.github.com/repos/codice/ddf/contents/platform/security/servlet/security-servlet-logout/src/main/resources/OSGI-INF/blueprint/blueprint.xml?ref=efbddff261b7338b8d582a7e66f503f0b549aa25",
    "patch": "@@ -34,9 +34,7 @@\n \n     <reference id=\"securityManager\" interface=\"ddf.security.service.SecurityManager\"/>\n \n-    <bean id=\"logoutServlet\" class=\"org.codice.ddf.security.servlet.logout.LocalLogoutServlet\">\n-        <property name=\"redirectUrl\" value=\"\"/>\n-    </bean>\n+    <bean id=\"logoutServlet\" class=\"org.codice.ddf.security.servlet.logout.LocalLogoutServlet\"/>\n \n     <service ref=\"logoutServlet\" interface=\"javax.servlet.Servlet\">\n         <service-properties>"
  },
  {
    "sha": "3f6bfeb46efc990203ee612799579c5a7bbddc08",
    "filename": "platform/security/servlet/security-servlet-logout/src/test/java/org/codice/ddf/security/servlet/logout/LogoutServletTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 54,
    "changes": 57,
    "blob_url": "https://github.com/codice/ddf/blob/efbddff261b7338b8d582a7e66f503f0b549aa25/platform/security/servlet/security-servlet-logout/src/test/java/org/codice/ddf/security/servlet/logout/LogoutServletTest.java",
    "raw_url": "https://github.com/codice/ddf/raw/efbddff261b7338b8d582a7e66f503f0b549aa25/platform/security/servlet/security-servlet-logout/src/test/java/org/codice/ddf/security/servlet/logout/LogoutServletTest.java",
    "contents_url": "https://api.github.com/repos/codice/ddf/contents/platform/security/servlet/security-servlet-logout/src/test/java/org/codice/ddf/security/servlet/logout/LogoutServletTest.java?ref=efbddff261b7338b8d582a7e66f503f0b549aa25",
    "patch": "@@ -34,7 +34,6 @@\n import javax.servlet.http.HttpSession;\n import org.apache.shiro.subject.Subject;\n import org.apache.shiro.util.ThreadContext;\n-import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n \n@@ -69,11 +68,6 @@ public void testsetup() throws Exception {\n     System.setProperty(\"security.audit.roles\", \"none\");\n   }\n \n-  @After\n-  public void testCleanup() {\n-    localLogoutServlet.setRedirectUrl(\"\");\n-  }\n-\n   @Test\n   public void testLocalLogoutBasicAuth() {\n     // Used for detecting basic auth\n@@ -91,7 +85,7 @@ public void testLocalLogoutBasicAuth() {\n       fail(e.getMessage());\n     }\n     verify(httpSession).invalidate();\n-    verify(printWriter).write(\"{ \\\"mustCloseBrowser\\\": true, \\\"redirectUrl\\\": \\\"\\\" }\");\n+    verify(printWriter).write(\"{ \\\"mustCloseBrowser\\\": true }\");\n   }\n \n   @Test\n@@ -113,7 +107,7 @@ public void testLocalLogoutPkiAuth() {\n       fail(e.getMessage());\n     }\n     verify(httpSession).invalidate();\n-    verify(printWriter).write(\"{ \\\"mustCloseBrowser\\\": true, \\\"redirectUrl\\\": \\\"\\\" }\");\n+    verify(printWriter).write(\"{ \\\"mustCloseBrowser\\\": true }\");\n   }\n \n   @Test\n@@ -134,52 +128,7 @@ public void testLocalLogoutNotBasicOrPki() {\n       fail(e.getMessage());\n     }\n     verify(httpSession).invalidate();\n-    verify(printWriter).write(\"{ \\\"mustCloseBrowser\\\": false, \\\"redirectUrl\\\": \\\"\\\" }\");\n-  }\n-\n-  @Test\n-  public void testLocalLogoutredirectUrlNotBasicOrPki() {\n-    // Used for detecting basic auth\n-    localLogoutServlet.setRedirectUrl(\"redirectUrlAddress.com\");\n-    when(request.getHeaders(anyString()))\n-        .thenReturn(Collections.enumeration(Collections.emptyList()));\n-\n-    // used for detecting pki\n-    when(request.getAttribute(\"javax.servlet.request.X509Certificate\")).thenReturn(null);\n-\n-    SecurityTokenHolder securityTokenHolder = mock(SecurityTokenHolder.class);\n-    when(httpSession.getAttribute(SecurityConstants.SECURITY_TOKEN_KEY))\n-        .thenReturn(securityTokenHolder);\n-    try {\n-      localLogoutServlet.doGet(request, response);\n-    } catch (ServletException e) {\n-      fail(e.getMessage());\n-    }\n-    verify(httpSession).invalidate();\n-    verify(printWriter)\n-        .write(\"{ \\\"mustCloseBrowser\\\": false, \\\"redirectUrl\\\": \\\"redirectUrlAddress.com\\\" }\");\n-  }\n-\n-  @Test\n-  public void testLocalLogoutInvalidredirectUrl() {\n-    // Used for detecting basic auth\n-    localLogoutServlet.setRedirectUrl(\"/redirect    UrlAddress\");\n-    when(request.getHeaders(anyString()))\n-        .thenReturn(Collections.enumeration(Collections.emptyList()));\n-\n-    // used for detecting pki\n-    when(request.getAttribute(\"javax.servlet.request.X509Certificate\")).thenReturn(null);\n-\n-    SecurityTokenHolder securityTokenHolder = mock(SecurityTokenHolder.class);\n-    when(httpSession.getAttribute(SecurityConstants.SECURITY_TOKEN_KEY))\n-        .thenReturn(securityTokenHolder);\n-    try {\n-      localLogoutServlet.doGet(request, response);\n-    } catch (ServletException e) {\n-      fail(e.getMessage());\n-    }\n-    verify(httpSession).invalidate();\n-    verify(printWriter).write(\"{ \\\"mustCloseBrowser\\\": false, \\\"redirectUrl\\\": \\\"\\\" }\");\n+    verify(printWriter).write(\"{ \\\"mustCloseBrowser\\\": false }\");\n   }\n \n   @Test()"
  },
  {
    "sha": "fefa29f2e237fa1baf7e9ea55dbb47ee2f714fd6",
    "filename": "ui/packages/catalog-ui-search/src/main/webapp/react-component/user/container.tsx",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/codice/ddf/blob/efbddff261b7338b8d582a7e66f503f0b549aa25/ui/packages/catalog-ui-search/src/main/webapp/react-component/user/container.tsx",
    "raw_url": "https://github.com/codice/ddf/raw/efbddff261b7338b8d582a7e66f503f0b549aa25/ui/packages/catalog-ui-search/src/main/webapp/react-component/user/container.tsx",
    "contents_url": "https://api.github.com/repos/codice/ddf/contents/ui/packages/catalog-ui-search/src/main/webapp/react-component/user/container.tsx?ref=efbddff261b7338b8d582a7e66f503f0b549aa25",
    "patch": "@@ -15,6 +15,7 @@\n import * as React from 'react'\n import UserComponent from './presentation'\n const user = require('../../component/singletons/user-instance.js')\n+const properties = require('../../js/properties.js')\n \n interface State {\n   username: string\n@@ -32,7 +33,12 @@ class UserContainer extends React.Component<{}, State> {\n     }\n   }\n   signOut() {\n-    window.location.href = '../../logout?service=' + window.location.href\n+    if (properties.logoutUrl && properties.logoutUrl != '') {\n+      window.location.href = properties.logoutUrl\n+    } else {\n+      window.location.href =\n+        '../../logout/?service=' + encodeURIComponent(window.location.href)\n+    }\n   }\n   render() {\n     const { username, isGuest, email } = this.state"
  },
  {
    "sha": "12f9e9d9043688a6d7c59ec22b460044e06b0c57",
    "filename": "ui/packages/security-logout/src/main/webapp/js/main.js",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/codice/ddf/blob/efbddff261b7338b8d582a7e66f503f0b549aa25/ui/packages/security-logout/src/main/webapp/js/main.js",
    "raw_url": "https://github.com/codice/ddf/raw/efbddff261b7338b8d582a7e66f503f0b549aa25/ui/packages/security-logout/src/main/webapp/js/main.js",
    "contents_url": "https://api.github.com/repos/codice/ddf/contents/ui/packages/security-logout/src/main/webapp/js/main.js?ref=efbddff261b7338b8d582a7e66f503f0b549aa25",
    "patch": "@@ -63,9 +63,6 @@ async function logout(actions) {\n \n   if (localLogoutAction) {\n     const response = await $.ajax(localLogoutAction.url)\n-    if (response.redirectUrl && response.redirectUrl != '') {\n-      window.location.href = response.redirectUrl\n-    }\n     if (response.mustCloseBrowser === true) {\n       $('#close-browser-msg').show()\n       return"
  }
]
