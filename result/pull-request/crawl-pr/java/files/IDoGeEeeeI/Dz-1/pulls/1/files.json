[
  {
    "sha": "d2bd7da109ae05f49305eeb9cd8cf7da6cf8f9e7",
    "filename": ".idea/.gitignore",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/.idea/.gitignore",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/.idea/.gitignore?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,8 @@\n+# Default ignored files\n+/shelf/\n+/workspace.xml\n+# Datasource local storage ignored files\n+/../../../:\\Rain\\.idea/dataSources/\n+/dataSources.local.xml\n+# Editor-based HTTP Client requests\n+/httpRequests/"
  },
  {
    "sha": "652e9630b57df868ddd25a3996b32b95b2f449d3",
    "filename": ".idea/compiler.xml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/.idea/compiler.xml",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/.idea/compiler.xml?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"CompilerConfiguration\">\n+    <annotationProcessing>\n+      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n+        <sourceOutputDir name=\"target/generated-sources/annotations\" />\n+        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n+        <outputRelativeToContentRoot value=\"true\" />\n+        <module name=\"Rain\" />\n+      </profile>\n+    </annotationProcessing>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "712ab9d985c20018a0c97b93d2148ac1ffe588a5",
    "filename": ".idea/jarRepositories.xml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/.idea/jarRepositories.xml",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/.idea/jarRepositories.xml",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/.idea/jarRepositories.xml?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"RemoteRepositoriesConfiguration\">\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Central Repository\" />\n+      <option name=\"url\" value=\"https://repo.maven.apache.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Maven Central repository\" />\n+      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"jboss.community\" />\n+      <option name=\"name\" value=\"JBoss Community repository\" />\n+      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\n+    </remote-repository>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "4b661a5ffc3c46924b456f0eac25ea4c6e9b4047",
    "filename": ".idea/misc.xml",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/.idea/misc.xml",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/.idea/misc.xml?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n+  <component name=\"MavenProjectsManager\">\n+    <option name=\"originalFiles\">\n+      <list>\n+        <option value=\"$PROJECT_DIR$/pom.xml\" />\n+      </list>\n+    </option>\n+  </component>\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n+    <output url=\"file://$PROJECT_DIR$/out\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "78b2cc53b203f0b97534bb1184cdc7b474339fb4",
    "filename": "Rain.iml",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain.iml",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain.iml",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain.iml?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,2 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\" />\n\\ No newline at end of file"
  },
  {
    "sha": "26d33521af10bcc7fd8cea344038eaaeb78d0ef5",
    "filename": "Rain1/.idea/.gitignore",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/.idea/.gitignore",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/.idea/.gitignore?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,3 @@\n+# Default ignored files\n+/shelf/\n+/workspace.xml"
  },
  {
    "sha": "5f5174726466d94d098f6abf3c4be548ff6381e0",
    "filename": "Rain1/.idea/compiler.xml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/.idea/compiler.xml",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/.idea/compiler.xml?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"CompilerConfiguration\">\n+    <annotationProcessing>\n+      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n+        <sourceOutputDir name=\"target/generated-sources/annotations\" />\n+        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n+        <outputRelativeToContentRoot value=\"true\" />\n+        <module name=\"Rain1\" />\n+      </profile>\n+    </annotationProcessing>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "712ab9d985c20018a0c97b93d2148ac1ffe588a5",
    "filename": "Rain1/.idea/jarRepositories.xml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/.idea/jarRepositories.xml",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/.idea/jarRepositories.xml",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/.idea/jarRepositories.xml?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"RemoteRepositoriesConfiguration\">\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Central Repository\" />\n+      <option name=\"url\" value=\"https://repo.maven.apache.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Maven Central repository\" />\n+      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"jboss.community\" />\n+      <option name=\"name\" value=\"JBoss Community repository\" />\n+      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\n+    </remote-repository>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "4b661a5ffc3c46924b456f0eac25ea4c6e9b4047",
    "filename": "Rain1/.idea/misc.xml",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/.idea/misc.xml",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/.idea/misc.xml?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n+  <component name=\"MavenProjectsManager\">\n+    <option name=\"originalFiles\">\n+      <list>\n+        <option value=\"$PROJECT_DIR$/pom.xml\" />\n+      </list>\n+    </option>\n+  </component>\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n+    <output url=\"file://$PROJECT_DIR$/out\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "78b2cc53b203f0b97534bb1184cdc7b474339fb4",
    "filename": "Rain1/Rain1.iml",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/Rain1.iml",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/Rain1.iml",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/Rain1.iml?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,2 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\" />\n\\ No newline at end of file"
  },
  {
    "sha": "7f336d8e438808b08a9d6e99e08ec94cb0cdc05b",
    "filename": "Rain1/pom.xml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/pom.xml",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/pom.xml",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/pom.xml?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.example</groupId>\n+    <artifactId>Rain1</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <properties>\n+        <maven.compiler.source>8</maven.compiler.source>\n+        <maven.compiler.target>8</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "2be7c7d8699c94030564e68231d8660fcdf77531",
    "filename": "Rain1/src/main/java/Less1.java",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/src/main/java/Less1.java",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/src/main/java/Less1.java",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/src/main/java/Less1.java?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,82 @@\n+import java.util.Scanner;\n+\n+public class Less1 {\n+    public static void main(String[] args) {\n+        byte aa = 127;\n+        char bb = 'k';\n+        int cc = 17457;\n+        long dd = 3131341;\n+        float ee = 3.1415f;\n+        double ff = 2.7312;\n+        String gg = \"лол\";\n+        short hh = 13;\n+        boolean ii = true;\n+        float a, b, c, d;\n+        a = (float) Math.random(); // (float) - превращает Math.random() из double в float\n+        b = (float) Math.random();\n+        c = (float) Math.random();\n+        d = (float) Math.random();\n+        int p = 7;\n+        int s = 9;\n+        int fff = 666;\n+\n+\n+        foo3(a,b,c,d);\n+        foo4(p,s);\n+        foo5(fff);\n+        foo6(fff);\n+        foo7();\n+        foo8();\n+\n+    }\n+\n+    public static void foo3(float a, float b, float c, float d) {\n+        float x;\n+        x = (a * (b + (c / d)));\n+        System.out.println(\"Значение задания 3 = \" + \" \" + x);\n+    }\n+\n+    public static void foo4(int p, int s) {\n+        boolean z;\n+        if (p + s >= 10 && p + s <= 20)\n+            z = true;\n+        else\n+            z = false;\n+        System.out.println(\"Значение задания 4 =\" + \" \" + z);\n+    }\n+\n+    public static void foo5(int fff) {\n+        System.out.print(\"Значение задания 5 =\" + \" \");\n+        if (0 <= fff)\n+            System.out.println(\"число положительное\");\n+        else\n+            System.out.println(\"число отрицательное\");\n+    }\n+\n+    public static boolean foo6(int fff) {\n+        if (fff >= 0) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    public static void foo7() {\n+        System.out.println(\"Введите имя\");\n+        Scanner name = new Scanner(System.in);\n+        String nam1 = name.nextLine();\n+        System.out.println(\"Значение задания 7 =\" + \" \" + \"Привет, \" + nam1);\n+    }\n+\n+    public static void foo8() {\n+        System.out.println(\"введите год\");\n+        Scanner years = new Scanner(System.in);\n+        int u = years.nextInt();\n+        if (u % 4 == 0 && u % 100 != 0)\n+            System.out.println(u + \" \" + \"Високосный год \");\n+        else if (u % 100 == 0 && u % 400 == 0)\n+            System.out.println(u + \" \" + \"Високосный год \");\n+        else\n+            System.out.println(u + \" \" + \"Не Високосный год \");\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "58b8f01ca965bc2f96f2b1a5cc46affe6f3e3b50",
    "filename": "Rain1/src/main/java/Less2.java",
    "status": "added",
    "additions": 214,
    "deletions": 0,
    "changes": 214,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/src/main/java/Less2.java",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/src/main/java/Less2.java",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/src/main/java/Less2.java?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,214 @@\n+import java.util.Arrays;\n+import java.util.Scanner;\n+\n+public class Less2 {\n+    public static void main(String[] args) {\n+// номера foo совпадают с номерами заданий\n+        foo1();\n+        foo2();\n+        foo3();\n+        foo4();\n+        foo5();\n+        foo6();\n+        foo7();\n+    }\n+    public static  void  foo1(){\n+        int arr1[]=new int[10];\n+        for (int i =0;i<arr1.length;i++){\n+            int f=(int)(Math.random()*10);\n+//            System.out.print(\" \"+f);\n+            if(f>5)\n+                arr1[i]=1;\n+            else\n+                arr1[i]=0;\n+        }\n+//        System.out.println(Arrays.toString(arr));//исходный массив(чтоб проверить)\n+        for(int i =0;i<arr1.length;i++){\n+            if(arr1[i]==0)\n+                arr1[i]=1;\n+            else\n+                arr1[i]=0;\n+        }\n+        System.out.print(\"ответ на 1 номер = \"+\" \");\n+        System.out.println(Arrays.toString(arr1));\n+\n+    }\n+    public static void foo2(){\n+        int arr2[]=new int[8];\n+\n+        for (int i =0;i<arr2.length;i++){\n+            arr2[i]=i*3;\n+        }\n+        System.out.print(\"ответ на 2 номер = \"+\" \");\n+        System.out.println(Arrays.toString(arr2));\n+\n+    }\n+    public static void foo3(){\n+        int arr3[]={1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};\n+\n+        for (int i =0;i<arr3.length;i++){\n+            if (arr3[i]<6)\n+                arr3[i]*=2;\n+        }\n+        System.out.print(\"ответ на 3 номер = \"+\" \");\n+        System.out.println(Arrays.toString(arr3));\n+    }\n+    public  static void foo4(){\n+        System.out.println(\"ответ на 4 номер = \"+\" \");\n+        int u= (int)(Math.random()*10);\n+        if (u < 3) //ограничивает размер массива (min = 3x3)\n+            u = 3;\n+//        System.out.println(u); //проверочный вывод количество столбов и строчек\n+        int arr4[][]=new int[u][u];\n+        for (int i=0;i<arr4.length;i++) {\n+            for (int j = 0; j < arr4.length; j++) {\n+                if (i == j||i+j==arr4.length-1)//arr4.length-1 потому что j < arr4.length (знак <, а не <=)\n+                    arr4[i][j] = 1;\n+                else arr4[i][j] = 0;\n+                System.out.print(arr4[i][j] + \" \");\n+            }\n+            System.out.println();\n+        }\n+        System.out.println();\n+    }\n+    public static void foo5(){\n+        System.out.println(\"ответ на 5 номер = \"+\" \");\n+        int d= (int)(Math.random()*10);\n+        if(d<4) //ограничил мин массива до 4,  с массивом 2 и 3 скучно\n+            d=4;\n+        int arr5[]= new int[d];\n+        for (int i =0;i<arr5.length;i++) {\n+            arr5[i] =(int)(Math.random()*10);//от 0 дo 10\n+        }\n+        System.out.println(\"данный массив = \"+ Arrays.toString(arr5));//проверка массива\n+        int t=-1;//min\n+        int y=11;//max\n+        for (int i =0;i<arr5.length;i++) {\n+            if(arr5[i]>t)\n+                t=arr5[i];\n+            if(arr5[i]<y)\n+                y=arr5[i];\n+        }\n+        System.out.println(\"max = \"+t);\n+        System.out.println(\"min = \"+y);\n+    }\n+\n+    public static void foo6() {\n+        System.out.println();\n+        System.out.println(\"ответ на 6 номер = \"+\" \");\n+//-------------------------------------------------------------------------------------------------------------------\n+//        int arr6[]= {2, 2, 2, 1, 2, 2, 10, 1};// значение из метадички\n+//-------------------------------------------------------------------------------------------------------------------\n+\n+//----------------------------------------------------------------------------------------------------------------------------------------------\n+        int k= (int)(Math.random()*10);\n+        if(k<5)\n+            k=5;\n+        int arr6[]=new int[k];\n+        for (int i =0;i<arr6.length;i++) {\n+            arr6[i] =(int)(Math.random()*10);//от 0 дo 10\n+        }\n+// я содал массив который заполняется рандомно, но выше есть пример массива, который можно использовать для проверки задания, он подписан как из методички\n+//p.s. зачем это все? просто у массива, которого рандомные значения, может долго не подбираться значение в ответе  True\n+//----------------------------------------------------------------------------------------------------------------------------------------------\n+        System.out.println(\"данный массив = \"+ Arrays.toString(arr6)); // массив\n+\n+\n+        int g=0;\n+        int lef=0;\n+        for (int i =0;i<arr6.length;i++) {\n+            g += arr6[i];\n+        }\n+//        System.out.println(g);     // сумма чимсел массива\n+\n+\n+        String b=\"\";\n+        int j=0;\n+        int z;\n+        for (int i =1;i<arr6.length;i++) {\n+            lef=0;\n+//            j = arr6.length+i - arr6.length ;//колличество цифр в левой части\n+            j = i ;//колличество цифр в левой части\n+            for (z=0;z<j;z++) {  // сумма левой части массива\n+                lef += arr6[z];\n+            }\n+            if(lef==(g-lef)){  //проверка сумм левой и правой части\n+                b=\"true\";\n+                break;\n+            }\n+            else\n+                b=\"false\";\n+//            System.out.print(z + \"=\"+ lef+ \" \"); // просмотр сумм левых частей\n+        }\n+        System.out.println(b);\n+        System.out.println();\n+    }\n+\n+    public static void foo7(){ // 4 дня сидел над этим заданием\n+        System.out.println(\"ответ на 7 номер = \"+\" \");\n+        System.out.print(\"исходный массив (рандомный) = \");\n+\n+\n+\n+        int arr7[] = {0, 1, 2, 3, 4, 5, 6};//заданный массив, с ним проще определить: правильно или нет, но можно использовать который ниже(рандомный)\n+\n+//        int o= (int)(Math.random()*10);\n+//        if(o<5)\n+//            o=5;\n+//        int arr7[]=new int[o];\n+//        for (int i =0;i<arr7.length;i++) {\n+//            arr7[i] =(int)(Math.random()*10);//от 0 дo 10\n+//        }\n+\n+        System.out.println(Arrays.toString(arr7));\n+        System.out.println(\"введите число для сдвига\");\n+        Scanner num = new Scanner(System.in);\n+        int n = num.nextInt();\n+        int e=0;\n+    if(n<0) {\n+        n = Math.abs(n);\n+        if (n> arr7.length){\n+            int ee = n/arr7.length;//для чисел  n>2*length\n+            n=n-arr7.length*ee;\n+        }\n+        for (int i = 0; i < n / 2; i++) {// меняет n переменных в начале массива\n+            e = arr7[i];\n+            arr7[i] = arr7[n - i - 1];\n+            arr7[n - i - 1] = e;\n+        }\n+        for (int i = n; i <= (arr7.length+n-1) / 2; i++) {// меняет n-length переменных в начале массива\n+            e = arr7[i];\n+            arr7[i] = arr7[arr7.length - i + n - 1];\n+            arr7[arr7.length - i + n - 1] = e;\n+        }\n+        for (int i = 0; i < arr7.length / 2; i++) {  //разворачивает массив\n+            e = arr7[i];\n+            arr7[i] = arr7[arr7.length - i - 1];\n+            arr7[arr7.length - i - 1] = e;\n+        }\n+    }\n+    else if(n>0){\n+        if (n> arr7.length){\n+            int ee = n/arr7.length;//для чисел  n>2*length\n+            n=n-arr7.length*ee;\n+        }\n+        for (int i = 0; i < arr7.length / 2; i++) {\n+            e = arr7[i];\n+            arr7[i] = arr7[arr7.length - i - 1];\n+            arr7[arr7.length - i - 1] = e;\n+        }\n+        for (int i = 0; i < n / 2; i++) {\n+            e = arr7[i];\n+            arr7[i] = arr7[n - i - 1];\n+            arr7[n - i - 1] = e;\n+        }\n+        for (int i = n; i <= (arr7.length+n-1) / 2; i++) {\n+            e = arr7[i];\n+            arr7[i] = arr7[arr7.length - i + n - 1];\n+            arr7[arr7.length - i + n - 1] = e;\n+        }\n+    }\n+        num.close();\n+        System.out.println(Arrays.toString(arr7));\n+    }\n+}"
  },
  {
    "sha": "7118b8c74614372bc33fadc313bc51bcbe13f1da",
    "filename": "Rain1/src/main/java/Less3.java",
    "status": "added",
    "additions": 97,
    "deletions": 0,
    "changes": 97,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/src/main/java/Less3.java",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/src/main/java/Less3.java",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/src/main/java/Less3.java?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,97 @@\n+import java.util.Random;\n+import java.util.Scanner;\n+\n+public class Less3 {\n+    public static final String[] words = {\"apple\", \"orange\", \"lemon\", \"banana\", \"apricot\", \"avocado\", \"broccoli\", \"carrot\", \"cherry\", \"garlic\", \"grape\", \"melon\", \"leak\", \"kiwi\", \"mango\", \"mushroom\", \"nut\", \"olive\", \"pea\", \"peanut\", \"pear\", \"pepper\", \"pineapple\", \"pumpkin\", \"potato\"};\n+    public static final Scanner sc = new Scanner(System.in);\n+\n+\n+    public static void main(String[] args) {\n+        foo1();\n+    }\n+\n+\n+    public static void foo1() {\n+        System.out.println(\"компьютер загадал слово по теме фрукт, ваша задача угадать его\");\n+\n+\n+        Random f = new Random();\n+        int x = f.nextInt(25);\n+        String word_comp = words[x];//выбранное компом\n+        System.out.println(\"проверка=\" + word_comp);\n+        System.out.println();\n+\n+\n+\n+        String between[]= {\"\\u0023\"};//# между угаданных букв\n+        char exit[] = new char[15];//массив для вывода\n+//        for (int i=0;i<exit.length;i++){\n+//            exit[i]='2';\n+//        }\n+        String exit2[] = new String[15];//массив c #\n+        for (int i = 0; i < exit2.length; i++) {\n+            exit2[i] = \"\\u0023\";\n+        }\n+\n+\n+\n+\n+        for (;;) {\n+            String word_person = sc.nextLine();// выбронное человеком\n+            if (word_person.length() >= word_comp.length()) {\n+                for (int i = 0; i < word_comp.length(); i++) {\n+                    char b = word_person.charAt(i);\n+                    char a = word_comp.charAt(i);\n+                    if (a == b) {\n+                        exit[i] = a;\n+                    }\n+                    else {\n+                        exit[i]='1';\n+                    }\n+                }\n+            } else if (word_person.length() < word_comp.length()) {\n+                for (int i = 0; i < word_person.length(); i++) {\n+                    char b = word_person.charAt(i);\n+                    char a = word_comp.charAt(i);\n+                    if (a == b) {\n+                        exit[i] = a;\n+                    }\n+                    else {\n+                        exit[i]='1';\n+                    }\n+                }\n+            }\n+\n+\n+\n+//вывод\n+            if (word_comp.equals(word_person)) {\n+                for (int i = 0; i < word_comp.length(); i++) {\n+                    System.out.print(exit[i]);\n+                }\n+                System.out.println(\"  вы угадали!!\");\n+                break;\n+            } else {\n+                for (int i = 0; i < word_comp.length(); i++) {\n+                    if(exit[i]=='1'){\n+                        System.out.print(between[0]);//если внутри слова буква не правильная\n+                        continue;\n+                    }\n+                    System.out.print(exit[i]);\n+                }\n+                for (int i = 0; i < exit2.length; i++) {\n+                    System.out.print(exit2[i]);\n+                }\n+                System.out.println();\n+                System.out.println(\"часть слова ты угадал, но попробуй еще\");\n+            }\n+\n+            System.out.println();\n+        }\n+\n+\n+\n+        sc.close();\n+\n+        }\n+    }"
  },
  {
    "sha": "b4dd5431888383950fb906c0374d5e84dd08ef35",
    "filename": "Rain1/target/classes/Less1.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/target/classes/Less1.class",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/target/classes/Less1.class",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/target/classes/Less1.class?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0"
  },
  {
    "sha": "bfb6c417b942a84684abd0ac6ab63b2e582ca1a0",
    "filename": "Rain1/target/classes/Less2.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/target/classes/Less2.class",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/target/classes/Less2.class",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/target/classes/Less2.class?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0"
  },
  {
    "sha": "9479a87d1f998dafdaaa0e0eccf476dc9646e71a",
    "filename": "Rain1/target/classes/Less3.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/target/classes/Less3.class",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/Rain1/target/classes/Less3.class",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/Rain1/target/classes/Less3.class?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0"
  },
  {
    "sha": "9b05de43daa528ea8ed6faab7ca8ff3b2ff47fe5",
    "filename": "pom.xml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/pom.xml",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/pom.xml",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/pom.xml?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.example</groupId>\n+    <artifactId>Rain</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <properties>\n+        <maven.compiler.source>8</maven.compiler.source>\n+        <maven.compiler.target>8</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "ff98f5c7b9f56b1d362555673f204bce9c8a8cef",
    "filename": "src/main/java/Naf.java",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/src/main/java/Naf.java",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/src/main/java/Naf.java",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/src/main/java/Naf.java?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0",
    "patch": "@@ -0,0 +1,82 @@\n+import java.util.Scanner;\n+\n+public class Naf {\n+    public static void main(String[] args) {\n+        byte aa = 127;\n+        char bb = 'k';\n+        int cc = 17457;\n+        long dd = 3131341;\n+        float ee = 3.1415f;\n+        double ff = 2.7312;\n+        String gg = \"лол\";\n+        short hh = 13;\n+        boolean ii = true;\n+        float a, b, c, d;\n+        a = (float) Math.random(); // (float) - превращает Math.random() из double в float\n+        b = (float) Math.random();\n+        c = (float) Math.random();\n+        d = (float) Math.random();\n+        int p = 7;\n+        int s = 9;\n+        int fff = 666;\n+\n+\n+        foo3(a,b,c,d);\n+        foo4(p,s);\n+        foo5(fff);\n+        foo6(fff);\n+        foo7();\n+        foo8();\n+\n+    }\n+\n+    public static void foo3(float a, float b, float c, float d) {\n+        float x;\n+        x = (a * (b + (c / d)));\n+        System.out.println(\"Значение задания 3 = \" + \" \" + x);\n+    }\n+\n+    public static void foo4(int p, int s) {\n+        boolean z;\n+        if (p + s >= 10 && p + s <= 20)\n+            z = true;\n+        else\n+            z = false;\n+        System.out.println(\"Значение задания 4 =\" + \" \" + z);\n+    }\n+\n+    public static void foo5(int fff) {\n+        System.out.print(\"Значение задания 5 =\" + \" \");\n+        if (0 <= fff)\n+            System.out.println(\"число положительное\");\n+        else\n+            System.out.println(\"число отрицательное\");\n+    }\n+\n+    public static boolean foo6(int fff) {\n+        if (fff >= 0) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    public static void foo7() {\n+        System.out.println(\"Введите имя\");\n+        Scanner name = new Scanner(System.in);\n+        String nam1 = name.nextLine();\n+        System.out.println(\"Значение задания 7 =\" + \" \" + \"Привет, \" + nam1);\n+    }\n+\n+    public static void foo8() {\n+        System.out.println(\"введите год\");\n+        Scanner years = new Scanner(System.in);\n+        int u = years.nextInt();\n+        if (u % 4 == 0 && u % 100 != 0)\n+            System.out.println(u + \" \" + \"Високосный год \");\n+        else if (u % 100 == 0 && u % 400 == 0)\n+            System.out.println(u + \" \" + \"Високосный год \");\n+        else\n+            System.out.println(u + \" \" + \"Не Високосный год \");\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ae294f67dd1e28216debf7658cd32004ca06df02",
    "filename": "target/classes/Naf.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/IDoGeEeeeI/Dz-1/blob/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/target/classes/Naf.class",
    "raw_url": "https://github.com/IDoGeEeeeI/Dz-1/raw/f80a70c3b25ab4f9a5ac593196e13233e50e08b0/target/classes/Naf.class",
    "contents_url": "https://api.github.com/repos/IDoGeEeeeI/Dz-1/contents/target/classes/Naf.class?ref=f80a70c3b25ab4f9a5ac593196e13233e50e08b0"
  }
]
