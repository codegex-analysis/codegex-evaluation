[
  {
    "sha": "6f34afc7b5160272c4a7abc2fb0c97a5e1822af7",
    "filename": "homework6/pom.xml",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/pom.xml",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/pom.xml",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/pom.xml?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,63 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.4.0</version>\n+        <relativePath/> <!-- lookup parent from repository -->\n+    </parent>\n+    <groupId>ru.otus</groupId>\n+    <artifactId>homework6</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <properties>\n+        <maven.compiler.source>11</maven.compiler.source>\n+        <maven.compiler.target>11</maven.compiler.target>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-test</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <version>${junit-jupiter.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.shell</groupId>\n+            <artifactId>spring-shell-starter</artifactId>\n+            <version>2.0.1.RELEASE</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <version>1.4.200</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-api</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-data-jpa</artifactId>\n+        </dependency>\n+\n+    </dependencies>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "1001f1f299bdc0d8750d8cb09e7059fb11023575",
    "filename": "homework6/src/main/java/otus/Application.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/Application.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/Application.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/Application.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,11 @@\n+package otus;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class Application {\n+    public static void main(String[] args) {\n+        SpringApplication.run(Application.class, args);\n+    }\n+}"
  },
  {
    "sha": "ff67113754f641feb8b1c6aed8bbbdb0aaa6fa28",
    "filename": "homework6/src/main/java/otus/domain/Author.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/domain/Author.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/domain/Author.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/domain/Author.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,47 @@\n+package otus.domain;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"authors\")\n+public class Author {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"author_id\")\n+    private Long authorId;\n+\n+    @Column(name = \"author_name\", nullable = false, unique = true)\n+    private String authorName;\n+\n+    public Author() {\n+    }\n+\n+    public Author(Long authorId, String authorName) {\n+        this.authorId = authorId;\n+        this.authorName = authorName;\n+    }\n+\n+    public Long getAuthorId() {\n+        return authorId;\n+    }\n+\n+    public void setAuthorId(Long authorId) {\n+        this.authorId = authorId;\n+    }\n+\n+    public String getAuthorName() {\n+        return authorName;\n+    }\n+\n+    public void setAuthorName(String authorName) {\n+        this.authorName = authorName;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Author{\" +\n+                \"authorId=\" + authorId +\n+                \", authorName='\" + authorName + '\\'' +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "3a94a700a033b2dcf398316c9710d95bcea03895",
    "filename": "homework6/src/main/java/otus/domain/Book.java",
    "status": "added",
    "additions": 102,
    "deletions": 0,
    "changes": 102,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/domain/Book.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/domain/Book.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/domain/Book.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,102 @@\n+package otus.domain;\n+\n+import org.hibernate.annotations.BatchSize;\n+\n+import javax.persistence.*;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Entity\n+@Table(name = \"books\")\n+@NamedEntityGraph(name = \"books-entity-graph\",\n+            subgraphs = {\n+        @NamedSubgraph(name = \"genre-subgraph\",\n+                attributeNodes = @NamedAttributeNode(value = \"genre\", subgraph = \"genre-subgraph\")),\n+        @NamedSubgraph(name = \"author-subgraph\",\n+                attributeNodes = @NamedAttributeNode(value = \"author\", subgraph = \"author-subgraph\"))\n+            })\n+\n+public class Book {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @Column(name = \"name\", unique = true, nullable = false)\n+    private String name;\n+\n+    @ManyToOne(targetEntity = Genre.class, cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"genre_id\")\n+    private Genre genre;\n+\n+    @ManyToOne(targetEntity = Author.class, cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"author_id\")\n+    private Author author;\n+\n+    @OneToMany(targetEntity = Comment.class, cascade = CascadeType.ALL, fetch = FetchType.LAZY)\n+    @BatchSize(size = 10)\n+    @JoinColumn(name = \"comment_id\")\n+    private List<Comment> comments;\n+\n+    public Book() {\n+    }\n+\n+    public Book(Long id, String name, Genre genre, Author author, List<Comment> comments) {\n+        this.id = id;\n+        this.name = name;\n+        this.genre = genre;\n+        this.author = author;\n+        this.comments = comments;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Genre getGenre() {\n+        return genre;\n+    }\n+\n+    public void setGenre(Genre genre) {\n+        this.genre = genre;\n+    }\n+\n+    public Author getAuthor() {\n+        return author;\n+    }\n+\n+    public void setAuthor(Author author) {\n+        this.author = author;\n+    }\n+\n+    public List<Comment> getComments() {\n+        return comments;\n+    }\n+\n+    public void setComments(List<Comment> comments) {\n+        this.comments = comments;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Book{\" +\n+                \"id=\" + id +\n+                \", name='\" + name + '\\'' +\n+                \", genre=\" + genre +\n+                \", author=\" + author +\n+                \", comments=\" + comments +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "dc3b203aa629b86fa701f0110707298d23209872",
    "filename": "homework6/src/main/java/otus/domain/Comment.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/domain/Comment.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/domain/Comment.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/domain/Comment.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,48 @@\n+package otus.domain;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"comments\")\n+public class Comment {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"comment_id\")\n+    private Long id;\n+\n+    @Column(name = \"comment\")\n+    private String comment;\n+\n+    public Comment() {\n+    }\n+\n+    public Comment(Long id, String comment) {\n+        this.id = id;\n+        this.comment = comment;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getComment() {\n+        return comment;\n+    }\n+\n+    public void setComment(String comment) {\n+        this.comment = comment;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Comment{\" +\n+                \"id=\" + id +\n+                \", comment='\" + comment + '\\'' +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "a7e044f043b906c344ee8a3fe0bf266e3cd4c987",
    "filename": "homework6/src/main/java/otus/domain/Genre.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/domain/Genre.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/domain/Genre.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/domain/Genre.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,47 @@\n+package otus.domain;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"genres\")\n+public class Genre {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"genre_id\")\n+    private Long genreId;\n+\n+    @Column(name = \"genre_name\", nullable = false, unique = true)\n+    private String genreName;\n+\n+    public Genre() {\n+    }\n+\n+    public Genre(Long genreId, String genreName) {\n+        this.genreId = genreId;\n+        this.genreName = genreName;\n+    }\n+\n+    public Long getGenreId() {\n+        return genreId;\n+    }\n+\n+    public void setGenreId(Long genreId) {\n+        this.genreId = genreId;\n+    }\n+\n+    public String getGenreName() {\n+        return genreName;\n+    }\n+\n+    public void setGenreName(String genreName) {\n+        this.genreName = genreName;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Genre{\" +\n+                \"genreId=\" + genreId +\n+                \", genreName='\" + genreName + '\\'' +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "39ffdf2e2c9c871976418b90fac8618db12cf6e1",
    "filename": "homework6/src/main/java/otus/repository/AuthorRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/AuthorRepository.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/AuthorRepository.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/repository/AuthorRepository.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,14 @@\n+package otus.repository;\n+\n+import otus.domain.Author;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface AuthorRepository {\n+    Optional<Author> findAuthorById(Long id);\n+    List<Author> findAuthorByName(String name);\n+    void updateAuthorById(Author author);\n+    Author saveAuthor(Author author);\n+    void deleteAuthorById(Author author);\n+}"
  },
  {
    "sha": "b717746662aacff7a45588af120100699308e1b1",
    "filename": "homework6/src/main/java/otus/repository/BookRepository.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/BookRepository.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/BookRepository.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/repository/BookRepository.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,15 @@\n+package otus.repository;\n+\n+import otus.domain.Book;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface BookRepository {\n+    Optional<Book> findBookById(Long id);\n+    List<Book> findBookByName(String name);\n+    Book saveBook(Book book);\n+    void deleteBookById(Book book);\n+    void updateBook(Book book);\n+    List<Book> findAllBooks();\n+}"
  },
  {
    "sha": "6bf9368b6523009f09bba4e59cf46519a63f8b05",
    "filename": "homework6/src/main/java/otus/repository/CommentRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/CommentRepository.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/CommentRepository.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/repository/CommentRepository.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,14 @@\n+package otus.repository;\n+\n+import otus.domain.Comment;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface CommentRepository {\n+    Optional<Comment> findCommentById(Long id);\n+    List<Comment> findCommentByName(String name);\n+    void updateCommentById(Comment comment);\n+    Comment saveComment(Comment comment);\n+    void deleteCommentById(Comment comment);\n+}"
  },
  {
    "sha": "f2cf27823e6f4f167c989e4854cc6f82f96a68f1",
    "filename": "homework6/src/main/java/otus/repository/GenreRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/GenreRepository.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/GenreRepository.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/repository/GenreRepository.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,14 @@\n+package otus.repository;\n+\n+import otus.domain.Genre;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface GenreRepository {\n+    Genre saveGenre(Genre genre);\n+    void updateGenreById(Genre genre);\n+    Optional<Genre> findGenreById(Long id);\n+    List<Genre> findGenreByName(String name);\n+    void deleteGenreById(Genre genre);\n+}"
  },
  {
    "sha": "abfd0a7f44b08c8b385fb1a775df564f243af63c",
    "filename": "homework6/src/main/java/otus/repository/impl/AuthorRepositoryJpa.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/impl/AuthorRepositoryJpa.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/impl/AuthorRepositoryJpa.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/repository/impl/AuthorRepositoryJpa.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,62 @@\n+package otus.repository.impl;\n+\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+import otus.domain.Author;\n+import otus.repository.AuthorRepository;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.Query;\n+import javax.persistence.TypedQuery;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Repository\n+public class AuthorRepositoryJpa implements AuthorRepository {\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+    @Override\n+    public Optional<Author> findAuthorById(Long id) {\n+        return Optional.ofNullable(em.find(Author.class, id));\n+    }\n+\n+    @Override\n+    public List<Author> findAuthorByName(String name) {\n+        TypedQuery<Author> query = em.createQuery(\"select a \" +\n+                        \"from Author a \" +\n+                        \"where a.authorName = :name\",\n+                Author.class);\n+        query.setParameter(\"name\", name);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void updateAuthorById(Author author) {\n+        em.merge(author);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public Author saveAuthor(Author author) {\n+        if(author.getAuthorId() <= 0){\n+            em.persist(author);\n+            return author;\n+        }else {\n+            return em.merge(author);\n+        }\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void deleteAuthorById(Author author) {\n+        if(em.contains(author)){\n+            em.remove(author);\n+        }else{\n+            em.remove(em.merge(author));\n+        }\n+    }\n+}"
  },
  {
    "sha": "96537fb8fffd026ecbd92289335641ebc11f99e1",
    "filename": "homework6/src/main/java/otus/repository/impl/BookRepositoryJpa.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/impl/BookRepositoryJpa.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/impl/BookRepositoryJpa.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/repository/impl/BookRepositoryJpa.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,71 @@\n+package otus.repository.impl;\n+\n+import org.hibernate.Hibernate;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+import otus.domain.Book;\n+import otus.repository.BookRepository;\n+\n+import javax.persistence.*;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Repository\n+public class BookRepositoryJpa implements BookRepository {\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+    @Override\n+    @Transactional\n+    public Optional<Book> findBookById(Long id) {\n+        Optional<Book> book = Optional.ofNullable(em.find(Book.class, id));\n+        book.ifPresent(value -> Hibernate.initialize(value.getComments()));\n+        return book;    }\n+\n+    @Override\n+    public List<Book> findBookByName(String name) {\n+        EntityGraph<?> entityGraph = em.getEntityGraph(\"books-entity-graph\");\n+        TypedQuery<Book> query = em.createQuery(\"select b from Book b join fetch b.author join fetch b.genre join fetch b.comments where b.name = :name\", Book.class);\n+        query.setParameter(\"name\", name);\n+        query.setHint(\"javax.persistence.fetchgraph\", entityGraph);\n+        return query.getResultList();\n+\n+    }\n+\n+    @Override\n+    @Transactional\n+    public Book saveBook(Book book) {\n+        if(book.getId() <= 0){\n+            em.persist(book);\n+            return book;\n+        }else {\n+            return em.merge(book);\n+        }\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void deleteBookById(Book book) {\n+        if(em.contains(book)){\n+            em.remove(book);\n+        }else{\n+            em.remove(em.merge(book));\n+        }\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void updateBook(Book book) {\n+        em.merge(book);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public List<Book> findAllBooks() {\n+        EntityGraph<?> entityGraph = em.getEntityGraph(\"books-entity-graph\");\n+        TypedQuery<Book> query = em.createQuery(\"select b from Book b join fetch b.author join fetch b.genre join fetch b.comments\", Book.class);\n+        query.setHint(\"javax.persistence.fetchgraph\", entityGraph);\n+        return query.getResultList();\n+    }\n+}"
  },
  {
    "sha": "3aeba1938dfceb2de9ce2818b0aa751be0e0deb7",
    "filename": "homework6/src/main/java/otus/repository/impl/CommentRepositoryJpa.java",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/impl/CommentRepositoryJpa.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/impl/CommentRepositoryJpa.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/repository/impl/CommentRepositoryJpa.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,63 @@\n+package otus.repository.impl;\n+\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+import otus.domain.Comment;\n+import otus.repository.CommentRepository;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.Query;\n+import javax.persistence.TypedQuery;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Repository\n+public class CommentRepositoryJpa implements CommentRepository {\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+\n+    @Override\n+    public Optional<Comment> findCommentById(Long id) {\n+        return Optional.ofNullable(em.find(Comment.class, id));\n+    }\n+\n+    @Override\n+    public List<Comment> findCommentByName(String name) {\n+        TypedQuery<Comment> query = em.createQuery(\"select c \" +\n+                        \"from Comment c \" +\n+                        \"where c.comment = :name\",\n+                Comment.class);\n+        query.setParameter(\"name\", name);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void updateCommentById(Comment comment) {\n+        em.merge(comment);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public Comment saveComment(Comment comment) {\n+        if(comment.getId() <= 0){\n+            em.persist(comment);\n+            return comment;\n+        }else {\n+            return em.merge(comment);\n+        }\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void deleteCommentById(Comment comment) {\n+        if(em.contains(comment)){\n+            em.remove(comment);\n+        }else{\n+            em.remove(em.merge(comment));\n+        }\n+    }\n+}"
  },
  {
    "sha": "6ebb25e921d0826099b94b62f68c0f32fb1f1179",
    "filename": "homework6/src/main/java/otus/repository/impl/GenreRepositoryJpa.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/impl/GenreRepositoryJpa.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/repository/impl/GenreRepositoryJpa.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/repository/impl/GenreRepositoryJpa.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,62 @@\n+package otus.repository.impl;\n+\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+import otus.domain.Genre;\n+import otus.repository.GenreRepository;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.Query;\n+import javax.persistence.TypedQuery;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Repository\n+public class GenreRepositoryJpa implements GenreRepository {\n+\n+    @PersistenceContext\n+    private EntityManager em;\n+\n+    @Override\n+    @Transactional\n+    public Genre saveGenre(Genre genre) {\n+        if(genre.getGenreId() <= 0){\n+            em.persist(genre);\n+            return genre;\n+        }else {\n+            return em.merge(genre);\n+        }\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void updateGenreById(Genre genre) {\n+        em.merge(genre);\n+    }\n+\n+    @Override\n+    public Optional<Genre> findGenreById(Long id) {\n+        return Optional.ofNullable(em.find(Genre.class, id));\n+    }\n+\n+    @Override\n+    public List<Genre> findGenreByName(String name) {\n+        TypedQuery<Genre> query = em.createQuery(\"select g \" +\n+                        \"from Genre g \" +\n+                        \"where g.genreName = :name\",\n+                Genre.class);\n+        query.setParameter(\"name\", name);\n+        return query.getResultList();\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void deleteGenreById(Genre genre) {\n+        if(em.contains(genre)){\n+            em.remove(genre);\n+        }else{\n+            em.remove(em.merge(genre));\n+        }\n+    }\n+}"
  },
  {
    "sha": "0fb03a5da78d88be58f9cf69b507b06fe4860510",
    "filename": "homework6/src/main/java/otus/shell/ShellController.java",
    "status": "added",
    "additions": 122,
    "deletions": 0,
    "changes": 122,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/shell/ShellController.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/java/otus/shell/ShellController.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/java/otus/shell/ShellController.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,122 @@\n+//package otus.shell;\n+//\n+//import org.springframework.shell.standard.ShellComponent;\n+//import org.springframework.shell.standard.ShellMethod;\n+//import org.springframework.shell.standard.ShellOption;\n+//import org.springframework.transaction.annotation.Transactional;\n+//import otus.domain.Author;\n+//import otus.domain.Book;\n+//import otus.domain.Comment;\n+//import otus.domain.Genre;\n+//import otus.repository.AuthorRepository;\n+//import otus.repository.BookRepository;\n+//import otus.repository.CommentRepository;\n+//import otus.repository.GenreRepository;\n+//\n+//import java.util.List;\n+//import java.util.Optional;\n+//\n+//@ShellComponent\n+//public class ShellController {\n+//\n+//    private final AuthorRepository authorRepository;\n+//    private final BookRepository bookRepository;\n+//    private final CommentRepository commentRepository;\n+//    private final GenreRepository genreRepository;\n+//\n+//    public ShellController(AuthorRepository authorRepository, BookRepository bookRepository, CommentRepository commentRepository, GenreRepository genreRepository) {\n+//        this.authorRepository = authorRepository;\n+//        this.bookRepository = bookRepository;\n+//        this.commentRepository = commentRepository;\n+//        this.genreRepository = genreRepository;\n+//    }\n+//\n+//\n+//    @ShellMethod(value = \"Welcome to library.\", key = {\"start\"})\n+//    public String welcomeCommand(){\n+//        return \"Welcome to our library.\";\n+//    }\n+//\n+//    @ShellMethod(value = \"Add book\", key = {\"save_book\"})\n+//    public String addBookCommand(@ShellOption() Book book){\n+//\n+//        bookRepository.saveBook(book);\n+//\n+//        return \"Book added to library.\";\n+//    }\n+//\n+//    @ShellMethod(value = \"Add author\", key = {\"save_author\"})\n+//    public String addAuthorCommand(@ShellOption() Author author){\n+//\n+//        authorRepository.saveAuthor(author);\n+//\n+//        return \"Author added to library.\";\n+//    }\n+//\n+//    @ShellMethod(value = \"Add genre\", key = {\"save_genre\"})\n+//    public String addGenreCommand(@ShellOption() Genre genre){\n+//\n+//        genreRepository.saveGenre(genre);\n+//\n+//        return \"Genre added to library.\";\n+//    }\n+//\n+//    @ShellMethod(value = \"Add comment\", key = {\"save_comment\"})\n+//    public String addGenreCommand(@ShellOption()Comment comment){\n+//\n+//        commentRepository.saveComment(comment);\n+//\n+//        return \"Comment added for book.\";\n+//    }\n+//\n+//    @Transactional\n+//    @ShellMethod(value = \"Update book name by id\", key = {\"update_book\"})\n+//    public String updateBookNameByIdCommand(@ShellOption() Long id,\n+//                                            @ShellOption() String name){\n+//        Optional<Book> bookById = bookRepository.findBookById(id);\n+//        bookById.get().setName(name);\n+//        bookRepository.updateBook(bookById.get());\n+//        return \"Book with id \" + id + \" successful updated.\";\n+//    }\n+//\n+//    @ShellMethod(value = \"Delete book by id\", key = {\"delete_book\"})\n+//    public String deleteBookByIdCommand(@ShellOption() Long id){\n+//        bookRepository.deleteBookById(new Book(id,null,null,null,null));\n+//        return \"Book with id \" + id + \" successful deleted.\";\n+//    }\n+//\n+//    @ShellMethod(value = \"Get book by name\", key = {\"find_book_by_name\"})\n+//    public String getBookByNameCommand(@ShellOption() String bookName){\n+//        List<Book> books = bookRepository.findBookByName(bookName);\n+//\n+//        return books.toString();\n+//    }\n+//\n+//    @ShellMethod(value = \"Get book by id\", key = {\"find_book_by_id\"})\n+//    public String getBookByIdCommand(@ShellOption() Long bookId){\n+//        Optional<Book> books = bookRepository.findBookById(bookId);\n+//\n+//        return books.toString();\n+//    }\n+//\n+//    @ShellMethod(value = \"Get all comments for book by book id\", key = {\"find_all_comments_for_book\"})\n+//    public void getAllCommentForBook(@ShellOption() Long bookId){\n+//        Optional<Book> books = bookRepository.findBookById(bookId);\n+//\n+//        books.stream().forEach(System.out::println);\n+//    }\n+//\n+//    @ShellMethod(value = \"Delete comment by id\", key = {\"del_com\"})\n+//    public String deleteCommentById(@ShellOption() Long id){\n+//        commentRepository.deleteCommentById(new Comment(id,null));\n+//\n+//        return \"comment deleted\";\n+//    }\n+//\n+//    @ShellMethod(value = \"Delete comment by id\", key = {\"find_all_books\"})\n+//    public void findAllBooks(){\n+//        List<Book> allBooks = bookRepository.findAllBooks();\n+//\n+//        allBooks.forEach(System.out::println);\n+//    }\n+//}"
  },
  {
    "sha": "3802eb6b5475404bdedd1fbb5fa221c093687356",
    "filename": "homework6/src/main/resources/application.yml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/resources/application.yml",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/resources/application.yml?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,16 @@\n+spring:\n+  datasource:\n+    url: jdbc:h2:mem:testdb\n+\n+  jpa:\n+    generate-ddl: false\n+    hibernate:\n+      ddl-auto: none\n+\n+    show-sql: true\n+\n+  h2:\n+    console:\n+      path: /h2-console\n+      settings:\n+        web-allow-others: true\n\\ No newline at end of file"
  },
  {
    "sha": "ee694ed2eef90e2b128eb5d5fc66a181cd6626b5",
    "filename": "homework6/src/main/resources/data.sql",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/resources/data.sql",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/resources/data.sql",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/resources/data.sql?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,7 @@\n+insert into authors (author_id, author_name) values (1, 'Михаил Булгаков');\n+insert into authors (author_id, author_name) values (2, 'Лев Толстой');\n+insert into genres (genre_id, genre_name) values (1, 'роман');\n+insert into genres (genre_id, genre_name) values (2, 'фантастика');\n+insert into comments (comment_id, comment) values (1, 'Хорошая книга');\n+insert into comments (comment_id, comment) values (2, 'Прекрасная книга');\n+insert into books (id, name, genre_id, author_id, comment_id) values (1, 'Мастер и Маргарита',1,1,1);"
  },
  {
    "sha": "b1cd55486616514687bbe4eca72b74146fdd940b",
    "filename": "homework6/src/main/resources/schema.sql",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/resources/schema.sql",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/main/resources/schema.sql",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/main/resources/schema.sql?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,8 @@\n+DROP TABLE IF EXISTS books, authors, genres, comments;\n+CREATE TABLE authors(author_id BIGINT SERIAL PRIMARY KEY, author_name VARCHAR(255));\n+CREATE TABLE genres(genre_id BIGINT SERIAL PRIMARY KEY, genre_name VARCHAR(255));\n+CREATE TABLE comments(comment_id BIGINT SERIAL PRIMARY KEY, comment VARCHAR(255));\n+CREATE TABLE books(id BIGINT SERIAL PRIMARY KEY , name VARCHAR(255), comment_id BIGINT, genre_id BIGINT, author_id BIGINT,\n+                   FOREIGN KEY (genre_id) REFERENCES genres(genre_id),\n+                   FOREIGN KEY(author_id) REFERENCES authors(author_id),\n+                   FOREIGN KEY(comment_id) REFERENCES comments(comment_id));\n\\ No newline at end of file"
  },
  {
    "sha": "5d6707f70cde93741a57affe396d81187d2aafe3",
    "filename": "homework6/src/test/java/otus/AuthorRepositoryJpaTest.java",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/java/otus/AuthorRepositoryJpaTest.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/java/otus/AuthorRepositoryJpaTest.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/test/java/otus/AuthorRepositoryJpaTest.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,68 @@\n+package otus;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;\n+import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;\n+import org.springframework.context.annotation.Import;\n+import otus.domain.Author;\n+import otus.repository.impl.AuthorRepositoryJpa;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+\n+\n+@DataJpaTest\n+@Import(AuthorRepositoryJpa.class)\n+public class AuthorRepositoryJpaTest {\n+\n+    public static final long AUTHOR_ID_FIRST = 1L;\n+    public static final long AUTHOR_ID_SECOND = 2L;\n+    public static final long AUTHOR_ID_THIRD = 3L;\n+    public static final String AUTHOR_NAME_FIRST = \"Михаил Булгаков\";\n+    public static final String AUTHOR_NAME_SECOND = \"Александр Грибоедов\";\n+    public static final String AUTHOR_NAME_THIRD = \"Иван Тургенев\";\n+    @Autowired\n+    private AuthorRepositoryJpa repository;\n+\n+    @Autowired\n+    private TestEntityManager em;\n+\n+    @Test\n+    void shouldFindAuthorById() {\n+        Optional<Author> author = repository.findAuthorById(AUTHOR_ID_FIRST);\n+        assertThat(author).isPresent().get().hasFieldOrPropertyWithValue(\"authorName\", AUTHOR_NAME_FIRST);\n+    }\n+\n+    @Test\n+    void shouldFindAuthorByName() {\n+        List<Author> author = repository.findAuthorByName(AUTHOR_NAME_FIRST);\n+        assertThat(author.get(0).getAuthorId()).isEqualTo(AUTHOR_ID_FIRST);\n+    }\n+\n+    @Test\n+    void shouldUpdateAuthorById() {\n+        repository.updateAuthorById(new Author(AUTHOR_ID_FIRST, AUTHOR_NAME_SECOND));\n+        Author author = em.find(Author.class, AUTHOR_ID_FIRST);\n+        assertThat(author.getAuthorName()).isEqualTo(AUTHOR_NAME_SECOND);\n+    }\n+\n+    @Test\n+    void shouldSaveAuthorById() {\n+        repository.saveAuthor(new Author(AUTHOR_ID_THIRD, AUTHOR_NAME_THIRD));\n+        Author author = em.find(Author.class, AUTHOR_ID_THIRD);\n+        assertThat(author.getAuthorName()).isEqualTo(AUTHOR_NAME_THIRD);\n+    }\n+\n+    @Test\n+    void shouldDeleteAuthorById(){\n+        Author authorForDelete = new Author(AUTHOR_ID_THIRD,AUTHOR_NAME_THIRD);\n+        repository.deleteAuthorById(authorForDelete);\n+        Author authorForCheck = em.find(Author.class, AUTHOR_ID_THIRD);\n+        assertThat(authorForCheck).isNull();\n+    }\n+\n+}"
  },
  {
    "sha": "a655e503566086d1d9cff39e04676c41287c8623",
    "filename": "homework6/src/test/java/otus/BookRepositoryJpaTest.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/java/otus/BookRepositoryJpaTest.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/java/otus/BookRepositoryJpaTest.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/test/java/otus/BookRepositoryJpaTest.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,78 @@\n+package otus;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;\n+import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;\n+import org.springframework.context.annotation.Import;\n+import otus.domain.Author;\n+import otus.domain.Book;\n+import otus.domain.Comment;\n+import otus.domain.Genre;\n+import otus.repository.impl.BookRepositoryJpa;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+\n+@DataJpaTest\n+@Import(BookRepositoryJpa.class)\n+public class BookRepositoryJpaTest {\n+\n+    private static final Long BOOK_ID_FIRST = 1L;\n+    private static final Long BOOK_ID_SECOND = 2L;\n+    private static final String BOOK_NAME_FIRST = \"Мастер и Маргарита\";\n+    private static final String BOOK_NAME_SECOND = \"Вредные советы\";\n+    private static final String BOOK_GENRE = \"стихи\";\n+    private static final String BOOK_AUTHOR = \"Григорий Остер\";\n+    private static final String BOOK_COMMENT = \"Забавная книга\";\n+\n+    @Autowired\n+    private BookRepositoryJpa repository;\n+\n+    @Autowired\n+    private TestEntityManager em;\n+\n+    @Test\n+    void shouldFindAllBooks(){\n+        List<Book> allBooks = repository.findAllBooks();\n+        assertThat(allBooks.size()).isEqualTo(1);\n+    }\n+\n+    @Test\n+    void shouldFindBookById(){\n+        Optional<Book> book = repository.findBookById(BOOK_ID_FIRST);\n+        assertThat(book).isPresent().get().hasFieldOrPropertyWithValue(\"name\",BOOK_NAME_FIRST);\n+    }\n+\n+    @Test\n+    void shouldFindBookByName(){\n+        List<Book> book = repository.findBookByName(BOOK_NAME_FIRST);\n+        assertThat(book.get(0).getId()).isEqualTo(BOOK_ID_FIRST);\n+    }\n+\n+    @Test\n+    void shouldSaveBook(){\n+        repository.saveBook(new Book(BOOK_ID_SECOND,BOOK_NAME_SECOND,new Genre(0L,BOOK_GENRE),\n+                new Author(0L,BOOK_AUTHOR),\n+                List.of(new Comment(0L,BOOK_COMMENT))));\n+        Book book = em.find(Book.class, BOOK_ID_SECOND);\n+        assertThat(book.getName()).isEqualTo(BOOK_NAME_SECOND);\n+    }\n+\n+    @Test\n+    void shouldUpdateBookNameById(){\n+        Book bookForUpdate = em.find(Book.class, BOOK_ID_FIRST);\n+        repository.updateBook(new Book(BOOK_ID_FIRST,BOOK_NAME_SECOND, bookForUpdate.getGenre(), bookForUpdate.getAuthor(),bookForUpdate.getComments()));\n+        Book bookForCheck = em.find(Book.class, BOOK_ID_FIRST);\n+        assertThat(bookForCheck.getName()).isEqualTo(BOOK_NAME_SECOND);\n+    }\n+    @Test\n+    void shouldDeleteBookById(){\n+        repository.deleteBookById(new Book(BOOK_ID_FIRST, BOOK_NAME_FIRST,null,null,null));\n+        Book book = em.find(Book.class, BOOK_ID_FIRST);\n+        assertThat(book).isNull();\n+    }\n+}"
  },
  {
    "sha": "528fa41efebc80477982c9e72b3914ef7912eab2",
    "filename": "homework6/src/test/java/otus/CommentRepositoryJpaTest.java",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/java/otus/CommentRepositoryJpaTest.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/java/otus/CommentRepositoryJpaTest.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/test/java/otus/CommentRepositoryJpaTest.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,65 @@\n+package otus;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;\n+import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;\n+import org.springframework.context.annotation.Import;\n+import otus.domain.Comment;\n+import otus.repository.impl.CommentRepositoryJpa;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@DataJpaTest\n+@Import(CommentRepositoryJpa.class)\n+public class CommentRepositoryJpaTest {\n+\n+    public static final Long COMMENT_ID_FIRST = 1L;\n+    public static final Long COMMENT_ID_SECOND = 2L;\n+    public static final Long COMMENT_ID_THIRD = 3L;\n+    public static final String COMMENT_FIRST = \"Хорошая книга\";\n+    public static final String COMMENT_SECOND = \"Интересная книга\";\n+    public static final String COMMENT_THIRD = \"Отличная книга\";\n+\n+    @Autowired\n+    private CommentRepositoryJpa repository;\n+    @Autowired\n+    private TestEntityManager em;\n+\n+    @Test\n+    void shouldFindCommentById(){\n+        Optional<Comment> comment = repository.findCommentById(COMMENT_ID_FIRST);\n+        assertThat(comment).isPresent().get().hasFieldOrPropertyWithValue(\"comment\", COMMENT_FIRST);\n+    }\n+\n+    @Test\n+    void shouldFindCommentByName(){\n+        List<Comment> comment = repository.findCommentByName(COMMENT_FIRST);\n+        assertThat(comment.get(0).getId()).isEqualTo(COMMENT_ID_FIRST);\n+    }\n+\n+    @Test\n+    void shouldUpdateCommentById(){\n+        repository.updateCommentById(new Comment(COMMENT_ID_FIRST,COMMENT_THIRD));\n+        Comment comment = em.find(Comment.class, COMMENT_ID_FIRST);\n+        assertThat(comment.getComment()).isEqualTo(COMMENT_THIRD);\n+    }\n+\n+    @Test\n+    void shouldDeleteCommentById(){\n+        repository.deleteCommentById(new Comment(COMMENT_ID_SECOND,COMMENT_SECOND));\n+        Comment comment = em.find(Comment.class, COMMENT_ID_SECOND);\n+        assertThat(comment).isNull();\n+    }\n+\n+    @Test\n+    void shouldSaveCommentById(){\n+        repository.saveComment(new Comment(COMMENT_ID_THIRD,COMMENT_SECOND));\n+        Comment comment = em.find(Comment.class, COMMENT_ID_THIRD);\n+        assertThat(comment.getComment()).isEqualTo(COMMENT_SECOND);\n+    }\n+    \n+}"
  },
  {
    "sha": "6e22ef2c30a2a7b84efad5040906257a713f7a15",
    "filename": "homework6/src/test/java/otus/GenreRepositoryJpaTest.java",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/java/otus/GenreRepositoryJpaTest.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/java/otus/GenreRepositoryJpaTest.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/test/java/otus/GenreRepositoryJpaTest.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,65 @@\n+package otus;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;\n+import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;\n+import org.springframework.context.annotation.Import;\n+import otus.domain.Genre;\n+import otus.repository.impl.GenreRepositoryJpa;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@DataJpaTest\n+@Import(GenreRepositoryJpa.class)\n+public class GenreRepositoryJpaTest {\n+\n+    private static final Long GENRE_ID_FIRST = 1L;\n+    private static final Long GENRE_ID_SECOND = 2L;\n+    private static final Long GENRE_ID_THIRD = 3L;\n+    private static final String GENRE_NAME_FIRST = \"роман\";\n+    private static final String GENRE_NAME_SECOND = \"повесть\";\n+    private static final String GENRE_NAME_THIRD = \"поэма\";\n+\n+    @Autowired\n+    private GenreRepositoryJpa repository;\n+    @Autowired\n+    private TestEntityManager em;\n+\n+    @Test\n+    void shouldFindGenreById(){\n+        Optional<Genre> genre = repository.findGenreById(GENRE_ID_FIRST);\n+        assertThat(genre).isPresent().get().hasFieldOrPropertyWithValue(\"genreName\", GENRE_NAME_FIRST);\n+    }\n+\n+    @Test\n+    void shouldFindGenreByName(){\n+        List<Genre> genre = repository.findGenreByName(GENRE_NAME_FIRST);\n+        assertThat(genre.get(0).getGenreId()).isEqualTo(GENRE_ID_FIRST);\n+    }\n+\n+    @Test\n+    void shouldUpdateGenreById(){\n+        repository.updateGenreById(new Genre(GENRE_ID_FIRST,GENRE_NAME_THIRD));\n+        Genre genre = em.find(Genre.class, GENRE_ID_FIRST);\n+        assertThat(genre.getGenreName()).isEqualTo(GENRE_NAME_THIRD);\n+    }\n+\n+    @Test\n+    void shouldSaveGenreById(){\n+        repository.saveGenre(new Genre(GENRE_ID_THIRD,GENRE_NAME_SECOND));\n+        Genre genre = em.find(Genre.class, GENRE_ID_THIRD);\n+        assertThat(genre.getGenreName()).isEqualTo(GENRE_NAME_SECOND);\n+    }\n+\n+    @Test\n+    void shouldDeleteGenreById(){\n+        repository.deleteGenreById(new Genre(GENRE_ID_THIRD,GENRE_NAME_THIRD));\n+        Genre genre = em.find(Genre.class, GENRE_ID_THIRD);\n+        assertThat(genre).isNull();\n+    }\n+\n+}"
  },
  {
    "sha": "d732e446e7a4e8a28e84b2f72a0d1072d7fdae87",
    "filename": "homework6/src/test/resources/otus/application.yml",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/resources/otus/application.yml",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/resources/otus/application.yml",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/test/resources/otus/application.yml?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,12 @@\n+spring:\n+  datasource:\n+    url: jdbc:h2:mem:testdb\n+    initialization-mode: always\n+    data: test-data.sql\n+\n+  jpa:\n+    generate-ddl: false\n+    hibernate:\n+      ddl-auto: none\n+\n+    show-sql: true\n\\ No newline at end of file"
  },
  {
    "sha": "857eab642c4b6fcc2e3a7938af586444a4e78248",
    "filename": "homework6/src/test/resources/otus/test_data.sql",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/resources/otus/test_data.sql",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework6/src/test/resources/otus/test_data.sql",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework6/src/test/resources/otus/test_data.sql?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,7 @@\n+insert into authors (author_id, author_name) values (1, 'Михаил Булгаков');\n+insert into authors (author_id, author_name) values (2, 'Лев Толстой');\n+insert into genres (genre_id, genre_name) values (1, 'роман');\n+insert into genres (genre_id, genre_name) values (2, 'фантастика');\n+insert into comments (comment_id, comments) values (1, 'Хорошая книга');\n+insert into comments (comment_id, comments) values (2, 'Прекрасная книга');\n+insert into books (id, name, genre_id, author_id, comment_id) values (1, 'Мастер и Маргарита',1,1,1);"
  },
  {
    "sha": "c25d9eb304e05e744e3e0282adbf613d9e218e43",
    "filename": "homework7/pom.xml",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/pom.xml",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/pom.xml",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework7/pom.xml?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,57 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.4.0</version>\n+        <relativePath/> <!-- lookup parent from repository -->\n+    </parent>\n+\n+    <groupId>ru.otus</groupId>\n+    <artifactId>homework7</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <properties>\n+        <maven.compiler.source>11</maven.compiler.source>\n+        <maven.compiler.target>11</maven.compiler.target>\n+    </properties>\n+\n+    <dependencies>\n+    <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-test</artifactId>\n+        <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+        <groupId>org.junit.jupiter</groupId>\n+        <artifactId>junit-jupiter-api</artifactId>\n+        <version>${junit-jupiter.version}</version>\n+        <scope>test</scope>\n+    </dependency>\n+\n+    <dependency>\n+        <groupId>org.springframework.shell</groupId>\n+        <artifactId>spring-shell-starter</artifactId>\n+        <version>2.0.1.RELEASE</version>\n+    </dependency>\n+\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+        </dependency>\n+\n+    <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-data-jpa</artifactId>\n+    </dependency>\n+</dependencies>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "e933d17ce5ad260b2175ce22fc66c0f6be31f40c",
    "filename": "homework7/src/main/java/ru/otus/Application.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/src/main/java/ru/otus/Application.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/src/main/java/ru/otus/Application.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework7/src/main/java/ru/otus/Application.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class Application {\n+    public static void main(String[] args) {\n+        SpringApplication.run(Application.class, args);\n+    }\n+}"
  },
  {
    "sha": "1a1a6fd24cebda4cffa4197264d11ea2c54e27a6",
    "filename": "homework7/src/main/java/ru/otus/domain/Author.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/src/main/java/ru/otus/domain/Author.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/src/main/java/ru/otus/domain/Author.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework7/src/main/java/ru/otus/domain/Author.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.otus.domain;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"authors\")\n+public class Author {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"author_id\")\n+    private Long id;\n+\n+    @Column(name = \"author_name\", nullable = false, unique = true)\n+    private String name;\n+\n+    public Author() {\n+    }\n+\n+    public Author(Long id, String name) {\n+        this.id = id;\n+        this.name = name;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"
  },
  {
    "sha": "9a9f2957ecbda8e6dc731a2520fb2062fed342fa",
    "filename": "homework7/src/main/java/ru/otus/domain/Book.java",
    "status": "added",
    "additions": 101,
    "deletions": 0,
    "changes": 101,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/src/main/java/ru/otus/domain/Book.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/src/main/java/ru/otus/domain/Book.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework7/src/main/java/ru/otus/domain/Book.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,101 @@\n+package ru.otus.domain;\n+\n+import org.hibernate.annotations.Fetch;\n+import org.hibernate.annotations.FetchMode;\n+\n+import javax.persistence.*;\n+import java.util.List;\n+\n+@Entity\n+@Table(name = \"books\")\n+@NamedEntityGraph(name = \"books-entity-graph\",\n+        subgraphs = {\n+                @NamedSubgraph(name = \"genre-subgraph\",\n+                        attributeNodes = @NamedAttributeNode(value = \"genre\", subgraph = \"genre-subgraph\")),\n+                @NamedSubgraph(name = \"author-subgraph\",\n+                        attributeNodes = @NamedAttributeNode(value = \"author\", subgraph = \"author-subgraph\"))\n+        })\n+\n+public class Book {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @Column(name = \"name\", unique = true, nullable = false)\n+    private String name;\n+\n+    @ManyToOne(targetEntity = Genre.class, cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"genre_id\")\n+    private Genre genre;\n+\n+    @ManyToOne(targetEntity = Author.class, cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"author_id\")\n+    private Author author;\n+\n+    @OneToMany(targetEntity = Comment.class, cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"comment_id\")\n+    private List<Comment> comments;\n+\n+    public Book() {\n+    }\n+\n+    public Book(Long id, String name, Genre genre, Author author, List<Comment> comments) {\n+        this.id = id;\n+        this.name = name;\n+        this.genre = genre;\n+        this.author = author;\n+        this.comments = comments;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Genre getGenre() {\n+        return genre;\n+    }\n+\n+    public void setGenre(Genre genre) {\n+        this.genre = genre;\n+    }\n+\n+    public Author getAuthor() {\n+        return author;\n+    }\n+\n+    public void setAuthor(Author author) {\n+        this.author = author;\n+    }\n+\n+    public List<Comment> getComments() {\n+        return comments;\n+    }\n+\n+    public void setComments(List<Comment> comments) {\n+        this.comments = comments;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Book{\" +\n+                \"id=\" + id +\n+                \", name='\" + name + '\\'' +\n+                \", genre=\" + genre +\n+                \", author=\" + author +\n+                \", comments=\" + comments +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "3b855733caca979786da0813f54db4de6116a172",
    "filename": "homework7/src/main/java/ru/otus/domain/Comment.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/src/main/java/ru/otus/domain/Comment.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/src/main/java/ru/otus/domain/Comment.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework7/src/main/java/ru/otus/domain/Comment.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,40 @@\n+package ru.otus.domain;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"comments\")\n+public class Comment {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"comment_id\")\n+    private Long id;\n+\n+    @Column(name = \"comment\")\n+    private String comment;\n+\n+    public Comment() {\n+    }\n+\n+    public Comment(Long id, String comment) {\n+        this.id = id;\n+        this.comment = comment;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getComment() {\n+        return comment;\n+    }\n+\n+    public void setComment(String comment) {\n+        this.comment = comment;\n+    }\n+}"
  },
  {
    "sha": "95a18c965b102c756ce67573218dabbce569fb33",
    "filename": "homework7/src/main/java/ru/otus/domain/Genre.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/dimagodima/spring-2020-11/blob/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/src/main/java/ru/otus/domain/Genre.java",
    "raw_url": "https://github.com/dimagodima/spring-2020-11/raw/56aaa85e9ce2541c89cae794539a8cfecf967b00/homework7/src/main/java/ru/otus/domain/Genre.java",
    "contents_url": "https://api.github.com/repos/dimagodima/spring-2020-11/contents/homework7/src/main/java/ru/otus/domain/Genre.java?ref=56aaa85e9ce2541c89cae794539a8cfecf967b00",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.otus.domain;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"genres\")\n+public class Genre {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"genre_id\")\n+    private Long id;\n+\n+    @Column(name = \"genre_name\", nullable = false, unique = true)\n+    private String name;\n+\n+    public Genre() {\n+    }\n+\n+    public Genre(Long id, String name) {\n+        this.id = id;\n+        this.name = name;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"
  }
]
