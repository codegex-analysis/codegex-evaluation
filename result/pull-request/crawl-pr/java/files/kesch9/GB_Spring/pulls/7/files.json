[
  {
    "sha": "7aca89446a8970b3c7263207ce1a4348527afb7f",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/.gitignore",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/.gitignore",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/.gitignore?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -31,3 +31,9 @@ build/\n \n ### VS Code ###\n .vscode/\n+\n+### Custom ###\n+*MavenWrapperDownloader.java\n+!.mvn/*\n+!.mvnw/*\n+mvnw.cmd\n\\ No newline at end of file"
  },
  {
    "sha": "549e00a2a96fa9d7c5dbc9859664a78d980158c2",
    "filename": "HomeWorks/Spring_Data/product/.gitignore",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/.gitignore",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/.gitignore",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/.gitignore?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,33 @@\n+HELP.md\n+target/\n+!.mvn/wrapper/maven-wrapper.jar\n+!**/src/main/**/target/\n+!**/src/test/**/target/\n+\n+### STS ###\n+.apt_generated\n+.classpath\n+.factorypath\n+.project\n+.settings\n+.springBeans\n+.sts4-cache\n+\n+### IntelliJ IDEA ###\n+.idea\n+*.iws\n+*.iml\n+*.ipr\n+\n+### NetBeans ###\n+/nbproject/private/\n+/nbbuild/\n+/dist/\n+/nbdist/\n+/.nb-gradle/\n+build/\n+!**/src/main/**/build/\n+!**/src/test/**/build/\n+\n+### VS Code ###\n+.vscode/"
  },
  {
    "sha": "a45eb6ba269cd38f8965cef786729790945d9537",
    "filename": "HomeWorks/Spring_Data/product/.mvn/wrapper/MavenWrapperDownloader.java",
    "status": "added",
    "additions": 118,
    "deletions": 0,
    "changes": 118,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/.mvn/wrapper/MavenWrapperDownloader.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/.mvn/wrapper/MavenWrapperDownloader.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/.mvn/wrapper/MavenWrapperDownloader.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2007-present the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.net.*;\n+import java.io.*;\n+import java.nio.channels.*;\n+import java.util.Properties;\n+\n+public class MavenWrapperDownloader {\n+\n+    private static final String WRAPPER_VERSION = \"0.5.6\";\n+    /**\n+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.\n+     */\n+    private static final String DEFAULT_DOWNLOAD_URL = \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/\"\n+            + WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \".jar\";\n+\n+    /**\n+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to\n+     * use instead of the default one.\n+     */\n+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =\n+            \".mvn/wrapper/maven-wrapper.properties\";\n+\n+    /**\n+     * Path where the maven-wrapper.jar will be saved to.\n+     */\n+    private static final String MAVEN_WRAPPER_JAR_PATH =\n+            \".mvn/wrapper/maven-wrapper.jar\";\n+\n+    /**\n+     * Name of the property which should be used to override the default download url for the wrapper.\n+     */\n+    private static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";\n+\n+    public static void main(String args[]) {\n+        System.out.println(\"- Downloader started\");\n+        File baseDirectory = new File(args[0]);\n+        System.out.println(\"- Using base directory: \" + baseDirectory.getAbsolutePath());\n+\n+        // If the maven-wrapper.properties exists, read it and check if it contains a custom\n+        // wrapperUrl parameter.\n+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);\n+        String url = DEFAULT_DOWNLOAD_URL;\n+        if (mavenWrapperPropertyFile.exists()) {\n+            FileInputStream mavenWrapperPropertyFileInputStream = null;\n+            try {\n+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\n+                Properties mavenWrapperProperties = new Properties();\n+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);\n+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);\n+            } catch (IOException e) {\n+                System.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");\n+            } finally {\n+                try {\n+                    if (mavenWrapperPropertyFileInputStream != null) {\n+                        mavenWrapperPropertyFileInputStream.close();\n+                    }\n+                } catch (IOException e) {\n+                    // Ignore ...\n+                }\n+            }\n+        }\n+        System.out.println(\"- Downloading from: \" + url);\n+\n+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);\n+        if (!outputFile.getParentFile().exists()) {\n+            if (!outputFile.getParentFile().mkdirs()) {\n+                System.out.println(\n+                        \"- ERROR creating output directory '\" + outputFile.getParentFile().getAbsolutePath() + \"'\");\n+            }\n+        }\n+        System.out.println(\"- Downloading to: \" + outputFile.getAbsolutePath());\n+        try {\n+            downloadFileFromURL(url, outputFile);\n+            System.out.println(\"Done\");\n+            System.exit(0);\n+        } catch (Throwable e) {\n+            System.out.println(\"- Error downloading\");\n+            e.printStackTrace();\n+            System.exit(1);\n+        }\n+    }\n+\n+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {\n+        if (System.getenv(\"MVNW_USERNAME\") != null && System.getenv(\"MVNW_PASSWORD\") != null) {\n+            String username = System.getenv(\"MVNW_USERNAME\");\n+            char[] password = System.getenv(\"MVNW_PASSWORD\").toCharArray();\n+            Authenticator.setDefault(new Authenticator() {\n+                @Override\n+                protected PasswordAuthentication getPasswordAuthentication() {\n+                    return new PasswordAuthentication(username, password);\n+                }\n+            });\n+        }\n+        URL website = new URL(urlString);\n+        ReadableByteChannel rbc;\n+        rbc = Channels.newChannel(website.openStream());\n+        FileOutputStream fos = new FileOutputStream(destination);\n+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);\n+        fos.close();\n+        rbc.close();\n+    }\n+\n+}"
  },
  {
    "sha": "2cc7d4a55c0cd0092912bf49ae38b3a9e3fd0054",
    "filename": "HomeWorks/Spring_Data/product/.mvn/wrapper/maven-wrapper.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/.mvn/wrapper/maven-wrapper.jar",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/.mvn/wrapper/maven-wrapper.jar",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/.mvn/wrapper/maven-wrapper.jar?ref=0672ec937e18f1f3c05851a23c192a413007bdde"
  },
  {
    "sha": "642d572ce90e5085986bdd9c9204b9404f028084",
    "filename": "HomeWorks/Spring_Data/product/.mvn/wrapper/maven-wrapper.properties",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/.mvn/wrapper/maven-wrapper.properties?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,2 @@\n+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip\n+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
  },
  {
    "sha": "a16b5431b4c3cab50323a3f558003fd0abd87dad",
    "filename": "HomeWorks/Spring_Data/product/mvnw",
    "status": "added",
    "additions": 310,
    "deletions": 0,
    "changes": 310,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/mvnw",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/mvnw",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/mvnw?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,310 @@\n+#!/bin/sh\n+# ----------------------------------------------------------------------------\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#    https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+# ----------------------------------------------------------------------------\n+\n+# ----------------------------------------------------------------------------\n+# Maven Start Up Batch script\n+#\n+# Required ENV vars:\n+# ------------------\n+#   JAVA_HOME - location of a JDK home dir\n+#\n+# Optional ENV vars\n+# -----------------\n+#   M2_HOME - location of maven2's installed home dir\n+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+#     e.g. to debug Maven itself, use\n+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+# ----------------------------------------------------------------------------\n+\n+if [ -z \"$MAVEN_SKIP_RC\" ] ; then\n+\n+  if [ -f /etc/mavenrc ] ; then\n+    . /etc/mavenrc\n+  fi\n+\n+  if [ -f \"$HOME/.mavenrc\" ] ; then\n+    . \"$HOME/.mavenrc\"\n+  fi\n+\n+fi\n+\n+# OS specific support.  $var _must_ be set to either true or false.\n+cygwin=false;\n+darwin=false;\n+mingw=false\n+case \"`uname`\" in\n+  CYGWIN*) cygwin=true ;;\n+  MINGW*) mingw=true;;\n+  Darwin*) darwin=true\n+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n+    if [ -z \"$JAVA_HOME\" ]; then\n+      if [ -x \"/usr/libexec/java_home\" ]; then\n+        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n+      else\n+        export JAVA_HOME=\"/Library/Java/Home\"\n+      fi\n+    fi\n+    ;;\n+esac\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  if [ -r /etc/gentoo-release ] ; then\n+    JAVA_HOME=`java-config --jre-home`\n+  fi\n+fi\n+\n+if [ -z \"$M2_HOME\" ] ; then\n+  ## resolve links - $0 may be a link to maven's home\n+  PRG=\"$0\"\n+\n+  # need this for relative symlinks\n+  while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+      PRG=\"$link\"\n+    else\n+      PRG=\"`dirname \"$PRG\"`/$link\"\n+    fi\n+  done\n+\n+  saveddir=`pwd`\n+\n+  M2_HOME=`dirname \"$PRG\"`/..\n+\n+  # make it fully qualified\n+  M2_HOME=`cd \"$M2_HOME\" && pwd`\n+\n+  cd \"$saveddir\"\n+  # echo Using m2 at $M2_HOME\n+fi\n+\n+# For Cygwin, ensure paths are in UNIX format before anything is touched\n+if $cygwin ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\n+fi\n+\n+# For Mingw, ensure paths are in UNIX format before anything is touched\n+if $mingw ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ]; then\n+  javaExecutable=\"`which javac`\"\n+  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n+    # readlink(1) is not available as standard on Solaris 10.\n+    readLink=`which readlink`\n+    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n+      if $darwin ; then\n+        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n+      else\n+        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n+      fi\n+      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n+      JAVA_HOME=\"$javaHome\"\n+      export JAVA_HOME\n+    fi\n+  fi\n+fi\n+\n+if [ -z \"$JAVACMD\" ] ; then\n+  if [ -n \"$JAVA_HOME\"  ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+      # IBM's JDK on AIX uses strange locations for the executables\n+      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+      JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+  else\n+    JAVACMD=\"`which java`\"\n+  fi\n+fi\n+\n+if [ ! -x \"$JAVACMD\" ] ; then\n+  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n+  echo \"  We cannot execute $JAVACMD\" >&2\n+  exit 1\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  echo \"Warning: JAVA_HOME environment variable is not set.\"\n+fi\n+\n+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n+\n+# traverses directory structure from process work directory to filesystem root\n+# first directory with .mvn subdirectory is considered project base directory\n+find_maven_basedir() {\n+\n+  if [ -z \"$1\" ]\n+  then\n+    echo \"Path not specified to find_maven_basedir\"\n+    return 1\n+  fi\n+\n+  basedir=\"$1\"\n+  wdir=\"$1\"\n+  while [ \"$wdir\" != '/' ] ; do\n+    if [ -d \"$wdir\"/.mvn ] ; then\n+      basedir=$wdir\n+      break\n+    fi\n+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n+    if [ -d \"${wdir}\" ]; then\n+      wdir=`cd \"$wdir/..\"; pwd`\n+    fi\n+    # end of workaround\n+  done\n+  echo \"${basedir}\"\n+}\n+\n+# concatenates all lines of a file\n+concat_lines() {\n+  if [ -f \"$1\" ]; then\n+    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n+  fi\n+}\n+\n+BASE_DIR=`find_maven_basedir \"$(pwd)\"`\n+if [ -z \"$BASE_DIR\" ]; then\n+  exit 1;\n+fi\n+\n+##########################################################################################\n+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+# This allows using the maven wrapper in projects that prohibit checking in binary data.\n+##########################################################################################\n+if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n+    fi\n+else\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n+    fi\n+    if [ -n \"$MVNW_REPOURL\" ]; then\n+      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    else\n+      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    fi\n+    while IFS=\"=\" read key value; do\n+      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n+      esac\n+    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Downloading from: $jarUrl\"\n+    fi\n+    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n+    if $cygwin; then\n+      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n+    fi\n+\n+    if command -v wget > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found wget ... using wget\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n+        else\n+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n+        fi\n+    elif command -v curl > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found curl ... using curl\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        else\n+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        fi\n+\n+    else\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Falling back to using Java to download\"\n+        fi\n+        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n+        # For Cygwin, switch paths to Windows format before running javac\n+        if $cygwin; then\n+          javaClass=`cygpath --path --windows \"$javaClass\"`\n+        fi\n+        if [ -e \"$javaClass\" ]; then\n+            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n+                fi\n+                # Compiling the Java class\n+                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n+            fi\n+            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                # Running the downloader\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Running MavenWrapperDownloader.java ...\"\n+                fi\n+                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n+            fi\n+        fi\n+    fi\n+fi\n+##########################################################################################\n+# End of extension\n+##########################################################################################\n+\n+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\n+if [ \"$MVNW_VERBOSE\" = true ]; then\n+  echo $MAVEN_PROJECTBASEDIR\n+fi\n+MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n+  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\n+fi\n+\n+# Provide a \"standardized\" way to retrieve the CLI args that will\n+# work with both Windows and non-Windows executions.\n+MAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\n+export MAVEN_CMD_LINE_ARGS\n+\n+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+exec \"$JAVACMD\" \\\n+  $MAVEN_OPTS \\\n+  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n+  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\""
  },
  {
    "sha": "c8d43372c986d97911cdc21bd87e0cbe3d83bdda",
    "filename": "HomeWorks/Spring_Data/product/mvnw.cmd",
    "status": "added",
    "additions": 182,
    "deletions": 0,
    "changes": 182,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/mvnw.cmd",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/mvnw.cmd",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/mvnw.cmd?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,182 @@\n+@REM ----------------------------------------------------------------------------\n+@REM Licensed to the Apache Software Foundation (ASF) under one\n+@REM or more contributor license agreements.  See the NOTICE file\n+@REM distributed with this work for additional information\n+@REM regarding copyright ownership.  The ASF licenses this file\n+@REM to you under the Apache License, Version 2.0 (the\n+@REM \"License\"); you may not use this file except in compliance\n+@REM with the License.  You may obtain a copy of the License at\n+@REM\n+@REM    https://www.apache.org/licenses/LICENSE-2.0\n+@REM\n+@REM Unless required by applicable law or agreed to in writing,\n+@REM software distributed under the License is distributed on an\n+@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+@REM KIND, either express or implied.  See the License for the\n+@REM specific language governing permissions and limitations\n+@REM under the License.\n+@REM ----------------------------------------------------------------------------\n+\n+@REM ----------------------------------------------------------------------------\n+@REM Maven Start Up Batch script\n+@REM\n+@REM Required ENV vars:\n+@REM JAVA_HOME - location of a JDK home dir\n+@REM\n+@REM Optional ENV vars\n+@REM M2_HOME - location of maven2's installed home dir\n+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+@REM     e.g. to debug Maven itself, use\n+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+@REM ----------------------------------------------------------------------------\n+\n+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n+@echo off\n+@REM set title of command window\n+title %0\n+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n+@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n+\n+@REM set %HOME% to equivalent of $HOME\n+if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n+\n+@REM Execute a user defined script before this one\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n+@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n+if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n+:skipRcPre\n+\n+@setlocal\n+\n+set ERROR_CODE=0\n+\n+@REM To isolate internal variables from possible post scripts, we use another setlocal\n+@setlocal\n+\n+@REM ==== START VALIDATION ====\n+if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n+\n+echo.\n+echo Error: JAVA_HOME not found in your environment. >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+:OkJHome\n+if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n+\n+echo.\n+echo Error: JAVA_HOME is set to an invalid directory. >&2\n+echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+@REM ==== END VALIDATION ====\n+\n+:init\n+\n+@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n+@REM Fallback to current working directory if not found.\n+\n+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n+IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n+\n+set EXEC_DIR=%CD%\n+set WDIR=%EXEC_DIR%\n+:findBaseDir\n+IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n+cd ..\n+IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n+set WDIR=%CD%\n+goto findBaseDir\n+\n+:baseDirFound\n+set MAVEN_PROJECTBASEDIR=%WDIR%\n+cd \"%EXEC_DIR%\"\n+goto endDetectBaseDir\n+\n+:baseDirNotFound\n+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n+cd \"%EXEC_DIR%\"\n+\n+:endDetectBaseDir\n+\n+IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n+\n+@setlocal EnableExtensions EnableDelayedExpansion\n+for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n+\n+:endReadAdditionalConfig\n+\n+SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n+set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+\n+FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n+    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n+)\n+\n+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n+if exist %WRAPPER_JAR% (\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Found %WRAPPER_JAR%\n+    )\n+) else (\n+    if not \"%MVNW_REPOURL%\" == \"\" (\n+        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    )\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n+        echo Downloading from: %DOWNLOAD_URL%\n+    )\n+\n+    powershell -Command \"&{\"^\n+\t\t\"$webclient = new-object System.Net.WebClient;\"^\n+\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n+\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n+\t\t\"}\"^\n+\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n+\t\t\"}\"\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Finished downloading %WRAPPER_JAR%\n+    )\n+)\n+@REM End of extension\n+\n+@REM Provide a \"standardized\" way to retrieve the CLI args that will\n+@REM work with both Windows and non-Windows executions.\n+set MAVEN_CMD_LINE_ARGS=%*\n+\n+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n+if ERRORLEVEL 1 goto error\n+goto end\n+\n+:error\n+set ERROR_CODE=1\n+\n+:end\n+@endlocal & set ERROR_CODE=%ERROR_CODE%\n+\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n+@REM check for post script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\n+if exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n+:skipRcPost\n+\n+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\n+if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n+\n+if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n+\n+exit /B %ERROR_CODE%"
  },
  {
    "sha": "1ff7c13a7c3bb8012f11565f28d70bfd9a47c776",
    "filename": "HomeWorks/Spring_Data/product/pom.xml",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/pom.xml",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/pom.xml",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/pom.xml?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,87 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.4.3</version>\n+        <relativePath/> <!-- lookup parent from repository -->\n+    </parent>\n+    <groupId>ru.geekbrains.spring</groupId>\n+    <artifactId>product</artifactId>\n+    <version>0.0.1-SNAPSHOT</version>\n+    <name>product</name>\n+    <description>Demo project for Spring Data</description>\n+    <properties>\n+        <java.version>11</java.version>\n+    </properties>\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-data-jpa</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.flywaydb</groupId>\n+            <artifactId>flyway-core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.validation</groupId>\n+            <artifactId>validation-api</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.mapstruct</groupId>\n+            <artifactId>mapstruct</artifactId>\n+            <version>1.4.1.Final</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-test</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springdoc</groupId>\n+            <artifactId>springdoc-openapi-ui</artifactId>\n+            <version>1.5.5</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <version>3.5.1</version>\n+                <configuration>\n+                    <annotationProcessorPaths>\n+                        <path>\n+                            <groupId>org.projectlombok</groupId>\n+                            <artifactId>lombok</artifactId>\n+                            <version>1.18.16</version>\n+                        </path>\n+                        <path>\n+                            <groupId>org.mapstruct</groupId>\n+                            <artifactId>mapstruct-processor</artifactId>\n+                            <version>1.4.1.Final</version>\n+                        </path>\n+                    </annotationProcessorPaths>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+</project>"
  },
  {
    "sha": "a046c3ce95617c824b82eb426d3a9d59cf741d54",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/ProductApplication.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/ProductApplication.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/ProductApplication.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/ProductApplication.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.geekbrains.spring.product;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class ProductApplication {\n+\n+    public static void main(String[] args) {\n+        SpringApplication.run(ProductApplication.class, args);\n+    }\n+\n+}"
  },
  {
    "sha": "4d509b986f6eb221ee218af398d865ce42eafb6d",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/CartController.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/CartController.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/CartController.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/CartController.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,49 @@\n+package ru.geekbrains.spring.product.controller;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+import ru.geekbrains.spring.product.exceptions.ResourceNotFoundException;\n+import ru.geekbrains.spring.product.model.dtos.ProductDto;\n+import ru.geekbrains.spring.product.services.CartService;\n+import ru.geekbrains.spring.product.services.ProductService;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequestMapping(\"/api/v1/carts\")\n+public class CartController {\n+\n+    @Autowired\n+    private ProductService productService;\n+\n+    @Autowired\n+    private CartService cartService;\n+\n+    @GetMapping\n+    public List<ProductDto> getProductsInCart(){\n+        return cartService.getCart();\n+    }\n+\n+    @GetMapping(\"/add/{id}\")\n+    public void addToCart(@PathVariable Long id) {\n+        ProductDto productDto = productService.findProductDtoById(id).\n+                orElseThrow(() -> new ResourceNotFoundException(\n+                        \"Product with id: \"\n+                        + id +\n+                        \" doesn't exist\"));\n+        cartService.addProduct(productDto);\n+    }\n+\n+    @GetMapping(\"/delete/{id}\")\n+    public void deleteFromCart(@PathVariable Long id) {\n+        ProductDto productDto = productService.findProductDtoById(id).\n+                orElseThrow(() -> new ResourceNotFoundException(\n+                        \"Product with id: \"\n+                                + id +\n+                                \" doesn't exist\"));\n+        cartService.deleteProduct(productDto);\n+    }\n+\n+}"
  },
  {
    "sha": "50b898b9ff0a74d60dfa7c04366c107ba4837652",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/ProductControllerV1.java",
    "status": "added",
    "additions": 84,
    "deletions": 0,
    "changes": 84,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/ProductControllerV1.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/ProductControllerV1.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/ProductControllerV1.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,84 @@\n+package ru.geekbrains.spring.product.controller;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Sort;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.validation.annotation.Validated;\n+import org.springframework.web.bind.annotation.*;\n+import org.springframework.web.server.ResponseStatusException;\n+import ru.geekbrains.spring.product.model.dtos.ProductDto;\n+import ru.geekbrains.spring.product.model.entities.Product;\n+import ru.geekbrains.spring.product.services.ProductService;\n+import ru.geekbrains.spring.product.utils.ValuesAllowed;\n+\n+import org.hibernate.exception.ConstraintViolationException;\n+import java.util.List;\n+\n+@Validated\n+@RestController\n+@RequestMapping(\"/api/v1/products\")\n+public class ProductControllerV1 {\n+\n+    @Autowired\n+    private ProductService productService;\n+\n+\n+    //1. Добавить пагинацию (с обработкой неправильных значений т.е. возвращать не пустой массив).\n+    //2. Сделать сортировку по цене (в обе стороны).\n+    //3*. Сделать сортировку и по цене, и по имени (на основе входящих параметров в обе стороны). + обработка исключений\n+    // 4**. Сделать выбор приоритета сортировки на основе параметров запроса.\n+    @GetMapping\n+    public Page<Product> getAll(@RequestParam(defaultValue = \"1\") Integer page,\n+                                @RequestParam(defaultValue = \"10\") Integer size,\n+                                @RequestParam(defaultValue = \"ASC\") Sort.Direction direction,\n+                                @RequestParam(defaultValue = \"cost, name\") @ValuesAllowed(values = {\"name\", \"cost\"}) String... sortNames) {\n+        Page<Product> products = productService.getAllPage(page-1, size, direction, sortNames);\n+        if(!products.hasContent()) {\n+            throw new ResponseStatusException(HttpStatus.BAD_REQUEST,\n+                    String.format(\"Total page = [%d,] total element = [%d]\",\n+                    products.getTotalPages(),\n+                            products.getTotalElements()));\n+        }\n+        return products;\n+    }\n+\n+    //4.** Добавить поиск товара по имени (причем не по полному имени, а хотя бы по кусочку.\n+    // Например, в качестве параметра поиска передается строка \"тел\", если есть товары\n+    // \"телевизор\" и \"телефон\" возращаются они все). В случае если товары не найдены\n+    // вернуть пустой массив. Поиск должен работать независимо от регистра.\n+    @GetMapping(\"/name\")\n+    public List<Product>getByName(@RequestParam String name){\n+        return productService.getByName(name);\n+    }\n+    //    получение товара по id [ GET .../geek/api/v1/{id} ]\n+    @GetMapping(\"/{id}\")\n+    public Product getById(@PathVariable Long id) {\n+        return productService.getById(id);\n+    }\n+\n+    //    создание нового товара [ POST .../geek/pi/v1/products ]\n+    @PostMapping\n+    public Product add(@RequestBody ProductDto product) {\n+        return productService.save(product);\n+    }\n+\n+    //    удаление товара по id.[ GET .../geek/pi/v1/products/{id} ]\n+    @DeleteMapping(\"/{id}\")\n+    public void delete(@PathVariable Long id) {\n+        productService.deleteById(id);\n+    }\n+\n+    @ExceptionHandler(ConstraintViolationException.class)\n+    @ResponseStatus(HttpStatus.BAD_REQUEST)\n+    String handleConstraintViolationException(ConstraintViolationException e) {\n+        return \"Validation error: \" + e.getMessage();\n+    }\n+\n+    @ExceptionHandler(ResponseStatusException.class)\n+    @ResponseStatus(HttpStatus.BAD_REQUEST)\n+    String handleResponseStatusExceptionException(ResponseStatusException e) {\n+        return \"Validation error: \" + e.getMessage();\n+    }\n+\n+}"
  },
  {
    "sha": "1a82b610c0f5a5baca13bdf8ad04b16fdcf99b86",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/ProductControllerV2.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/ProductControllerV2.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/ProductControllerV2.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/controller/ProductControllerV2.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,54 @@\n+package ru.geekbrains.spring.product.controller;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.domain.Page;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.util.MultiValueMap;\n+import org.springframework.web.bind.annotation.*;\n+import ru.geekbrains.spring.product.exceptions.ResourceNotFoundException;\n+import ru.geekbrains.spring.product.model.dtos.ProductDto;\n+import ru.geekbrains.spring.product.model.entities.Product;\n+import ru.geekbrains.spring.product.repositories.specifications.ProductSpecifications;\n+import ru.geekbrains.spring.product.services.ProductService;\n+\n+@RestController\n+@RequestMapping(\"/api/v2/products\")\n+public class ProductControllerV2 {\n+\n+    @Autowired\n+    private  ProductService productService;\n+\n+    @GetMapping\n+    public Page<ProductDto> findAllProducts(\n+            @RequestParam MultiValueMap<String, String> params,\n+            @RequestParam(name = \"p\", defaultValue = \"1\") Integer page\n+    ) {\n+        if (page < 1) {\n+            page = 1;\n+        }\n+        return productService.findAll(ProductSpecifications.build(params), page, 2);\n+    }\n+\n+    // http://localhost:8189/happy/api/v1/products\n+    @GetMapping(\"/{id}\")\n+    public ProductDto findProductById(@PathVariable Long id) {\n+        return productService.findProductDtoById(id).orElseThrow(() -> new ResourceNotFoundException(\"Product with id: \" + id + \" doesn't exist\"));\n+    }\n+\n+    @PostMapping\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public Product saveNewProduct(@RequestBody ProductDto productDto) {\n+        return productService.save(productDto);\n+    }\n+\n+    @PutMapping\n+    public Product updateProduct(@RequestBody ProductDto productDto) {\n+        return productService.save(productDto);\n+    }\n+\n+    @DeleteMapping(\"/{id}\")\n+    public void updateProduct(@PathVariable Long id) {\n+        productService.deleteById(id);\n+    }\n+}"
  },
  {
    "sha": "3c67e9b27a9301e8a5a5b7e767edc4565f131d08",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/ExceptionControllerAdvice.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/ExceptionControllerAdvice.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/ExceptionControllerAdvice.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/ExceptionControllerAdvice.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,34 @@\n+package ru.geekbrains.spring.product.exceptions;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.hibernate.exception.ConstraintViolationException;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.ControllerAdvice;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+\n+@Slf4j\n+@ControllerAdvice\n+public class ExceptionControllerAdvice {\n+\n+    @ExceptionHandler\n+    public ResponseEntity<?> handleResourceNotFoundException(ru.geekbrains.spring.product.exceptions.ResourceNotFoundException e) {\n+        //log.error(e.getMessage());\n+        MarketError err = new MarketError(HttpStatus.NOT_FOUND.value(), e.getMessage());\n+        return new ResponseEntity<>(err, HttpStatus.NOT_FOUND);\n+    }\n+\n+    @ExceptionHandler\n+    public ResponseEntity<?> handleNoAuthException(ru.geekbrains.spring.product.exceptions.NoAuthException e) {\n+        //log.error(e.getMessage());\n+        MarketError err = new MarketError(HttpStatus.UNAUTHORIZED.value(), e.getMessage());\n+        return new ResponseEntity<>(err, HttpStatus.UNAUTHORIZED);\n+    }\n+\n+    @ExceptionHandler\n+    public ResponseEntity<?> handleNoAuthException(ConstraintViolationException e) {\n+        //log.error(e.getMessage());\n+        MarketError err = new MarketError(HttpStatus.BAD_REQUEST.value(), e.getMessage());\n+        return new ResponseEntity<>(err, HttpStatus.BAD_REQUEST);\n+    }\n+}"
  },
  {
    "sha": "9ee1786a571318f0207b974f4e8312c08305743d",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/MarketError.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/MarketError.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/MarketError.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/MarketError.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,18 @@\n+package ru.geekbrains.spring.product.exceptions;\n+\n+import lombok.Data;\n+\n+import java.util.Date;\n+\n+@Data\n+public class MarketError {\n+    private int status;\n+    private String message;\n+    private Date timestamp;\n+\n+    public MarketError(int status, String message) {\n+        this.status = status;\n+        this.message = message;\n+        this.timestamp = new Date();\n+    }\n+}"
  },
  {
    "sha": "a273533ab27cb43a0c22d54da7f16118c3bf79e7",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/NoAuthException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/NoAuthException.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/NoAuthException.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/NoAuthException.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.geekbrains.spring.product.exceptions;\n+\n+public class NoAuthException extends RuntimeException {\n+    public NoAuthException(String message) {\n+        super(message);\n+    }\n+}"
  },
  {
    "sha": "bd3971744153ea3d63b8c41f808dd3833214b2b5",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/ResourceNotFoundException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/ResourceNotFoundException.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/ResourceNotFoundException.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/exceptions/ResourceNotFoundException.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.geekbrains.spring.product.exceptions;\n+\n+public class ResourceNotFoundException extends RuntimeException {\n+    public ResourceNotFoundException(String message) {\n+        super(message);\n+    }\n+}"
  },
  {
    "sha": "7640d6dd89346e2b201e88bf1d20f2c3946d28ac",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/Cart.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/Cart.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/Cart.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/Cart.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,31 @@\n+package ru.geekbrains.spring.product.model;\n+\n+import lombok.Data;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.stereotype.Component;\n+import ru.geekbrains.spring.product.model.dtos.ProductDto;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Getter\n+@NoArgsConstructor\n+@Component\n+@Scope(\"session\")\n+public class Cart {\n+\n+    List<ProductDto> products = new ArrayList<>();\n+\n+    public void add(ProductDto productDto) {\n+        products.add(productDto);\n+    }\n+\n+    public void delete(ProductDto productDto) {\n+        products.remove(productDto);\n+    }\n+\n+\n+\n+}"
  },
  {
    "sha": "d0724e043f1a774e8e4e97d16f329dfe3031bd23",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/dtos/ProductDto.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/dtos/ProductDto.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/dtos/ProductDto.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/dtos/ProductDto.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.geekbrains.spring.product.model.dtos;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@NoArgsConstructor\n+public class ProductDto {\n+    private Long id;\n+    private String title;\n+    private Integer price;\n+\n+}"
  },
  {
    "sha": "e240e46cdabc5637c66a62c4ddf2ed0802633bbc",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/dtos/ProductMapper.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/dtos/ProductMapper.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/dtos/ProductMapper.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/dtos/ProductMapper.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,30 @@\n+package ru.geekbrains.spring.product.model.dtos;\n+\n+import org.mapstruct.Mapper;\n+import org.mapstruct.Mapping;\n+import org.mapstruct.Mappings;\n+import org.mapstruct.Named;\n+import org.mapstruct.factory.Mappers;\n+import ru.geekbrains.spring.product.model.entities.Product;\n+\n+@Mapper(componentModel = \"spring\")\n+public interface ProductMapper {\n+\n+    ProductMapper INSTANCE = Mappers.getMapper(ProductMapper.class);\n+\n+    @Named(\"productToProductDTO\")\n+    @Mappings({\n+            @Mapping(source=\"entity.id\", target=\"id\"),\n+            @Mapping(source=\"entity.title\", target=\"title\"),\n+            @Mapping(source=\"entity.price\", target=\"price\")\n+    })\n+    ProductDto productToProductDTO(Product entity);\n+\n+    @Mappings({\n+            @Mapping(target=\"id\", source=\"dto.id\"),\n+            @Mapping(target=\"title\", source=\"dto.title\"),\n+            @Mapping(target=\"price\", source=\"dto.price\")\n+    })\n+    Product productDTOtoProduct(ProductDto dto);\n+\n+}"
  },
  {
    "sha": "6c99fa5488baba966643d47d85574343779f26b1",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/entities/Product.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/entities/Product.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/entities/Product.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/model/entities/Product.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,37 @@\n+package ru.geekbrains.spring.product.model.entities;\n+\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.hibernate.annotations.CreationTimestamp;\n+import org.hibernate.annotations.UpdateTimestamp;\n+import ru.geekbrains.spring.product.model.dtos.ProductDto;\n+\n+import javax.persistence.*;\n+import java.time.LocalDateTime;\n+\n+@Entity\n+@Table(name = \"products\")\n+@Data\n+@NoArgsConstructor\n+public class Product {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private Long id;\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @Column(name = \"price\")\n+    private Integer price;\n+\n+    @Column(name = \"created_at\")\n+    @CreationTimestamp\n+    private LocalDateTime createdAt;\n+\n+    @Column(name = \"updated_at\")\n+    @UpdateTimestamp\n+    private LocalDateTime updatedAt;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5b652833e738c05980df424b944a99e2513c5ab4",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/repositories/ProductRepository.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/repositories/ProductRepository.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/repositories/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/repositories/ProductRepository.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.geekbrains.spring.product.repositories;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.JpaSpecificationExecutor;\n+import org.springframework.stereotype.Repository;\n+import ru.geekbrains.spring.product.model.entities.Product;\n+\n+import java.util.List;\n+\n+@Repository\n+public interface ProductRepository extends JpaRepository<Product, Long>, JpaSpecificationExecutor<Product> {\n+\n+    Product findProductByTitle(String name);\n+\n+    List<Product> findProductsByTitleContainingIgnoreCase(String name);\n+\n+    List<Product> findProductsByPriceGreaterThan(int min);\n+\n+    List<Product> findProductsByPriceBetween(int min, int max);\n+}"
  },
  {
    "sha": "8ae196fd728229a7a5849a2cb6a8b1002cf2771b",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/repositories/specifications/ProductSpecifications.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/repositories/specifications/ProductSpecifications.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/repositories/specifications/ProductSpecifications.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/repositories/specifications/ProductSpecifications.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,33 @@\n+package ru.geekbrains.spring.product.repositories.specifications;\n+\n+import org.springframework.data.jpa.domain.Specification;\n+import org.springframework.util.MultiValueMap;\n+import ru.geekbrains.spring.product.model.entities.Product;\n+\n+public class ProductSpecifications {\n+    private static Specification<Product> priceGreaterOrEqualsThan(int minPrice) {\n+        return (Specification<Product>) (root, criteriaQuery, criteriaBuilder) -> criteriaBuilder.greaterThanOrEqualTo(root.get(\"price\"), minPrice);\n+    }\n+\n+    private static Specification<Product> priceLesserOrEqualsThan(int maxPrice) {\n+        return (Specification<Product>) (root, criteriaQuery, criteriaBuilder) -> criteriaBuilder.lessThanOrEqualTo(root.get(\"price\"), maxPrice);\n+    }\n+\n+    private static Specification<Product> titleLike(String titlePart) {\n+        return (Specification<Product>) (root, criteriaQuery, criteriaBuilder) -> criteriaBuilder.like(root.get(\"title\"), String.format(\"%%%s%%\", titlePart));\n+    }\n+\n+    public static Specification<Product> build(MultiValueMap<String, String> params) {\n+        Specification<Product> spec = Specification.where(null);\n+        if (params.containsKey(\"min_price\") && !params.getFirst(\"min_price\").isBlank()) {\n+            spec = spec.and(ProductSpecifications.priceGreaterOrEqualsThan(Integer.parseInt(params.getFirst(\"min_price\"))));\n+        }\n+        if (params.containsKey(\"max_price\") && !params.getFirst(\"max_price\").isBlank()) {\n+            spec = spec.and(ProductSpecifications.priceLesserOrEqualsThan(Integer.parseInt(params.getFirst(\"max_price\"))));\n+        }\n+        if (params.containsKey(\"title\") && !params.getFirst(\"title\").isBlank()) {\n+            spec = spec.and(ProductSpecifications.titleLike(params.getFirst(\"title\")));\n+        }\n+        return spec;\n+    }\n+}"
  },
  {
    "sha": "5fbcd2b84002eea493d2ec36d817670b15881bf7",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/CartService.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/CartService.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/CartService.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/CartService.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,35 @@\n+package ru.geekbrains.spring.product.services;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.stereotype.Service;\n+import org.springframework.web.context.annotation.SessionScope;\n+import ru.geekbrains.spring.product.model.Cart;\n+import ru.geekbrains.spring.product.model.dtos.ProductDto;\n+\n+import javax.annotation.Resource;\n+import java.util.List;\n+\n+@Service\n+public class CartService {\n+\n+    @Bean\n+    @SessionScope\n+    public Cart sessionScopedBean() {\n+        return new Cart();\n+    }\n+\n+    @Resource(name = \"sessionScopedBean\")\n+    Cart cart;\n+\n+    public void addProduct(ProductDto productDto) {\n+        cart.add(productDto);\n+    }\n+\n+    public void deleteProduct(ProductDto productDto) {\n+        cart.delete(productDto);\n+    }\n+\n+    public List<ProductDto> getCart() {\n+        return cart.getProducts();\n+    }\n+}"
  },
  {
    "sha": "42848e7dfbf026881998d241011c209000b88d5a",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/MyRequestContextListener.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/MyRequestContextListener.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/MyRequestContextListener.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/MyRequestContextListener.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.geekbrains.spring.product.services;\n+\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.web.context.request.RequestContextListener;\n+\n+import javax.servlet.annotation.WebListener;\n+\n+@Configuration\n+@WebListener\n+public class MyRequestContextListener extends RequestContextListener {\n+}"
  },
  {
    "sha": "37f39867a228f0cb84acb201bf5a84be18aa79b4",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/ProductService.java",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/ProductService.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/ProductService.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/services/ProductService.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,69 @@\n+package ru.geekbrains.spring.product.services;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.mapstruct.BeanMapping;\n+import org.mapstruct.NullValuePropertyMappingStrategy;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.PageRequest;\n+import org.springframework.data.domain.Sort;\n+import org.springframework.data.jpa.domain.Specification;\n+import org.springframework.stereotype.Service;\n+import ru.geekbrains.spring.product.model.dtos.ProductDto;\n+import ru.geekbrains.spring.product.model.dtos.ProductMapper;\n+import ru.geekbrains.spring.product.model.entities.Product;\n+import ru.geekbrains.spring.product.repositories.ProductRepository;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Slf4j\n+@Service\n+public class ProductService {\n+\n+    @Autowired\n+    private ProductRepository productRepository;\n+\n+    public List<Product> getAll(int min) {\n+        return productRepository.findProductsByPriceGreaterThan(min);\n+    }\n+\n+    public List<Product> getAll(int min, int max) {\n+        return productRepository.findProductsByPriceBetween(min, max);\n+    }\n+\n+    public Page<Product> getAllPage(int page, int size, Sort.Direction direction, String... param) {\n+        return productRepository.findAll(PageRequest.of(page, size, direction, param));\n+    }\n+\n+    public Product getById(Long id) {\n+        return productRepository.findById(id).get();\n+    }\n+\n+    public List<Product> getByName(String name) {\n+        return productRepository.findProductsByTitleContainingIgnoreCase(name);\n+    }\n+\n+    public Optional<ProductDto> findProductDtoById(Long id) {\n+        return productRepository.findById(id).map(ProductMapper.INSTANCE::productToProductDTO);\n+    }\n+\n+    public Optional<Product> findProductById(Long id) {\n+        return productRepository.findById(id);\n+    }\n+\n+    public Page<ProductDto> findAll(Specification<Product> spec, int page, int pageSize) {\n+        if(page < 0)\n+            throw new RuntimeException();\n+        return productRepository.findAll(spec, PageRequest.of(page - 1, pageSize)).map(ProductMapper.INSTANCE::productToProductDTO);\n+    }\n+\n+    @BeanMapping(nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)\n+    public Product save(ProductDto dto) {\n+        return productRepository.save(ProductMapper.INSTANCE.productDTOtoProduct(dto));\n+    }\n+\n+    public void deleteById(Long id) {\n+        productRepository.deleteById(id);\n+    }\n+\n+}"
  },
  {
    "sha": "aad2ae7dc4c38b7ee00cc280c34a23f11fe7a39a",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/utils/ValuesAllowed.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/utils/ValuesAllowed.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/utils/ValuesAllowed.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/utils/ValuesAllowed.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.geekbrains.spring.product.utils;\n+\n+import javax.validation.Constraint;\n+import javax.validation.Payload;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target({ElementType.PARAMETER})\n+@Retention(RetentionPolicy.RUNTIME)\n+@Constraint(validatedBy = {ValuesAllowedValidator.class})\n+public @interface ValuesAllowed {\n+\n+    String message() default \"Field value should be from list of \";\n+    Class<?>[] groups() default {};\n+    Class<? extends Payload>[] payload() default {};\n+\n+    String[] values();\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b1b26b96bdca46042943fa772531588dc1329085",
    "filename": "HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/utils/ValuesAllowedValidator.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/utils/ValuesAllowedValidator.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/utils/ValuesAllowedValidator.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/java/ru/geekbrains/spring/product/utils/ValuesAllowedValidator.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,35 @@\n+package ru.geekbrains.spring.product.utils;\n+\n+import javax.validation.ConstraintValidator;\n+import javax.validation.ConstraintValidatorContext;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class ValuesAllowedValidator implements ConstraintValidator<ValuesAllowed, String[]> {\n+\n+    private List<String> expectedValues;\n+    private String returnMessage;\n+\n+    @Override\n+    public void initialize(ValuesAllowed requiredIfChecked) {\n+        expectedValues = Arrays.asList(requiredIfChecked.values());\n+        returnMessage = requiredIfChecked.message().concat(expectedValues.toString());\n+    }\n+\n+    @Override\n+    public boolean isValid(String[] testValues, ConstraintValidatorContext context) {\n+\n+        boolean valid = true;\n+        for(String value : testValues) {\n+            if (expectedValues.contains(value)) continue;\n+            valid = false;\n+            break;\n+        }\n+        if (!valid) {\n+            context.disableDefaultConstraintViolation();\n+            context.buildConstraintViolationWithTemplate(returnMessage)\n+                    .addConstraintViolation();\n+        }\n+        return valid;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "66dbabfa020fd475dfcce3cded4cad420bf45492",
    "filename": "HomeWorks/Spring_Data/product/src/main/resources/application.yaml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/resources/application.yaml",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/resources/application.yaml",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/resources/application.yaml?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,19 @@\n+server:\n+  port: 8189\n+  servlet:\n+    context-path: /geek\n+spring:\n+  datasource:\n+    driver-class-name: org.h2.Driver\n+    url: jdbc:h2:mem:mydatabase;MODE=PostgreSQL\n+    username: sa\n+    password:\n+  jpa:\n+    show-sql: true\n+    properties:\n+      hibernate:\n+        dialect: org.hibernate.dialect.H2Dialect\n+  h2:\n+    console:\n+      enabled: true\n+      path: /h2\n\\ No newline at end of file"
  },
  {
    "sha": "e9ab3507b9059cf344e6b2eabe2ec94c88490e82",
    "filename": "HomeWorks/Spring_Data/product/src/main/resources/db/migration/V1__init.sql",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/resources/db/migration/V1__init.sql",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/main/resources/db/migration/V1__init.sql",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/main/resources/db/migration/V1__init.sql?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,30 @@\n+create table products (\n+                          id                      bigserial primary key,\n+                          title                   varchar(255),\n+                          price                   int,\n+                          created_at              timestamp default current_timestamp,\n+                          updated_at              timestamp default current_timestamp\n+);\n+\n+insert into products (title, price)\n+values\n+('Bread', 24),\n+('Milk', 65),\n+('Cheese', 320),\n+('Cheese2', 322),\n+('Cheese3', 323),\n+('Cheese4', 324),\n+('Cheese5', 325),\n+('Cheese6', 326),\n+('Cheese7', 327),\n+('Cheese8', 328),\n+('Cheese9', 328),\n+('Cheese10', 328),\n+('Cheese11', 328),\n+('Cheese12', 328),\n+('Cheese13', 328),\n+('Cheese14', 328),\n+('Cheese15', 328);\n+\n+\n+"
  },
  {
    "sha": "a1472f65e2fb55dfbb9820027eab6b7e9a8a41bc",
    "filename": "HomeWorks/Spring_Data/product/src/test/java/ru/geekbrains/spring/product/ProductApplicationTests.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/kesch9/GB_Spring/blob/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/test/java/ru/geekbrains/spring/product/ProductApplicationTests.java",
    "raw_url": "https://github.com/kesch9/GB_Spring/raw/0672ec937e18f1f3c05851a23c192a413007bdde/HomeWorks/Spring_Data/product/src/test/java/ru/geekbrains/spring/product/ProductApplicationTests.java",
    "contents_url": "https://api.github.com/repos/kesch9/GB_Spring/contents/HomeWorks/Spring_Data/product/src/test/java/ru/geekbrains/spring/product/ProductApplicationTests.java?ref=0672ec937e18f1f3c05851a23c192a413007bdde",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.geekbrains.spring.product;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+@SpringBootTest\n+class ProductApplicationTests {\n+\n+    @Test\n+    void contextLoads() {\n+    }\n+\n+}"
  }
]
