[
  {
    "sha": "edeffff896c3435dfc461c7f79e3a8bd92556101",
    "filename": "src/main/java/org/java/sepaxml/SEPA.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ecmonline/java-sepa-xml/blob/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/main/java/org/java/sepaxml/SEPA.java",
    "raw_url": "https://github.com/ecmonline/java-sepa-xml/raw/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/main/java/org/java/sepaxml/SEPA.java",
    "contents_url": "https://api.github.com/repos/ecmonline/java-sepa-xml/contents/src/main/java/org/java/sepaxml/SEPA.java?ref=5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d",
    "patch": "@@ -64,6 +64,7 @@ protected void build() {\n         this.nodePmtInf.append(\"CtrlSum\").value(this.getTransactionVolume().doubleValue());\n \n         XMLNode nodePmtTpInf = this.nodePmtInf.append(\"PmtTpInf\");\n+        nodePmtTpInf.append(\"InstrPrty\").value(\"NORM\");\n         nodePmtTpInf.append(\"SvcLvl\").append(\"Cd\").value(\"SEPA\");\n         // nodePmtTpInf.append(\"LclInstrm\").append(\"Cd\").value(\"CORE\"); // only necessary for PAIN 008 (Lastschrift)\n         // nodePmtTpInf.append(\"SeqTp\").append(\"Cd\").value(\"FRST\"); // only necessary for PAIN 008 (Lastschrift)"
  },
  {
    "sha": "15f0fdfff41bf675c056042db240123dcb90437c",
    "filename": "src/main/java/org/java/sepaxml/SEPABankAccount.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/ecmonline/java-sepa-xml/blob/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/main/java/org/java/sepaxml/SEPABankAccount.java",
    "raw_url": "https://github.com/ecmonline/java-sepa-xml/raw/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/main/java/org/java/sepaxml/SEPABankAccount.java",
    "contents_url": "https://api.github.com/repos/ecmonline/java-sepa-xml/contents/src/main/java/org/java/sepaxml/SEPABankAccount.java?ref=5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d",
    "patch": "@@ -3,6 +3,7 @@\n import org.java.sepaxml.format.SEPAFormatFilter;\n import org.java.sepaxml.validator.SEPAValidatorIBAN;\n import org.java.sepaxml.validator.SEPAValidatorBIC;\n+import org.java.sepaxml.validator.exception.SEPAValidatorBICFormatException;\n import org.java.sepaxml.validator.exception.SEPAValidatorIBANFormatException;\n \n public class SEPABankAccount {\n@@ -23,19 +24,17 @@ public String getName() {\n         return name;\n     }\n \n-    public SEPABankAccount(String IBAN, String name) {\n-        this(IBAN, null, name);\n-    }\n-\n     public SEPABankAccount(String IBAN, String BIC, String name) {\n         if (SEPAValidatorIBAN.isValid(IBAN)) {\n             this.IBAN = SEPAFormatFilter.filter(IBAN);\n         } else {\n-                throw new SEPAValidatorIBANFormatException(\"Invalid IBAN: \" + IBAN);\n+            throw new SEPAValidatorIBANFormatException(\"Invalid IBAN: \" + IBAN);\n         }\n \n         if (BIC != null && SEPAValidatorBIC.isValid(BIC)) {\n             this.BIC = SEPAFormatFilter.filterBIC(BIC);\n+        } else {\n+            throw new SEPAValidatorBICFormatException(\"Invalid BIC: \" + BIC);\n         }\n \n         this.name = name;"
  },
  {
    "sha": "446009fc8942872ba3290c8d340c4f2a3164c6c5",
    "filename": "src/main/java/org/java/sepaxml/SEPACreditTransfer.java",
    "status": "modified",
    "additions": 15,
    "deletions": 3,
    "changes": 18,
    "blob_url": "https://github.com/ecmonline/java-sepa-xml/blob/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/main/java/org/java/sepaxml/SEPACreditTransfer.java",
    "raw_url": "https://github.com/ecmonline/java-sepa-xml/raw/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/main/java/org/java/sepaxml/SEPACreditTransfer.java",
    "contents_url": "https://api.github.com/repos/ecmonline/java-sepa-xml/contents/src/main/java/org/java/sepaxml/SEPACreditTransfer.java?ref=5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d",
    "patch": "@@ -17,6 +17,16 @@ public SEPACreditTransfer(SEPABankAccount sender, List<SEPATransaction> transact\n         this.build();\n     }\n \n+    public SEPACreditTransfer(SEPABankAccount sender, List<SEPATransaction> transactions, PaymentMethods paymentMethod) {\n+        this(sender, transactions, new Date(), paymentMethod);\n+    }\n+\n+    public SEPACreditTransfer(SEPABankAccount sender, List<SEPATransaction> transactions, Date executionDate, PaymentMethods paymentMethod) {\n+        super(sender, transactions, executionDate);\n+        super.setPaymentMethod(paymentMethod);\n+        this.build();\n+    }\n+\n     @Override\n     protected String getType() {\n         return \"Db\";\n@@ -47,9 +57,11 @@ protected void addTransactions() {\n                     .append(\"Id\").append(\"IBAN\")\n                     .value(transaction.getBankAccount().getIBAN());\n \n-            nodeCdtTrfTxInf.append(\"RmtInf\")\n-                    .append(\"Ustrd\")\n-                    .value(transaction.getSubject());\n+            if (transaction.getPurpose() != null) {\n+                nodeCdtTrfTxInf.append(\"Purp\")\n+                        .append(\"Cd\")\n+                        .value(transaction.getPurpose().toString());\n+            }\n \n             if (transaction.getRemittance() != null) {\n                 nodeCdtTrfTxInf.append(\"RmtInf\")"
  },
  {
    "sha": "1f987997f6a723c8930ccf44fb7c2a1ce5446487",
    "filename": "src/main/java/org/java/sepaxml/SEPATransaction.java",
    "status": "modified",
    "additions": 158,
    "deletions": 3,
    "changes": 161,
    "blob_url": "https://github.com/ecmonline/java-sepa-xml/blob/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/main/java/org/java/sepaxml/SEPATransaction.java",
    "raw_url": "https://github.com/ecmonline/java-sepa-xml/raw/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/main/java/org/java/sepaxml/SEPATransaction.java",
    "contents_url": "https://api.github.com/repos/ecmonline/java-sepa-xml/contents/src/main/java/org/java/sepaxml/SEPATransaction.java?ref=5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d",
    "patch": "@@ -12,6 +12,152 @@\n \t\tCHF, GBP\n \t}\n \n+\tpublic enum Purpose {\n+\t\tBENE, \t// SEPA Gutschrift Arbeitslosengeld\n+\t\tBONU, \t// SEPA Gutschrift Bonuszahlung\n+\t\tCBFF, \t// SEPA Gutschrift VL-Zahlung / VWL-Zahlung\n+\t\tCHAR, \t// SEPA Gutschrift Spendenzahlung\n+\t\tGOVT, \t// SEPA Gutschrift öffentliche Kassen\n+\t\tPENS, \t// SEPA Gutschrift Rente / Pension\n+\t\tSALA, \t// SEPA Gutschrift Lohn / Gehalt\n+\t\tSSBE, \t// SEPA Gutschrift Sozialleistung\n+\n+\t\tCDCB, \t// Kartenzahlung mit CashBack\n+\t\tCDCD, \t// Cash-Auszahlung\n+\t\tCDCS, \t// Cash-Auszahlung mit Aufgeld\n+\t\tCDOC, \t// Original Kredit\n+\t\tCDQC, \t// Quasi-Geld\n+\t\tETUP, \t// Elektronischer Geldbeutel aufbessern\n+\t\tFCOL, \t// Gebührensammlung\n+\t\tMTUP, \t// Handy aufladen\n+\t\tACCT, \t// Kontoverwaltung\n+\t\tCASH, \t// Cash-Management Überweisung\n+\t\tCOLL, \t// Sammelzahlung\n+\t\tCSDB, \t// Cash-Auszahlung\n+\t\tDEPT, \t// Einzahlung\n+\t\tINTC, \t// interne Firmenzahlung\n+\t\tLIMA, \t// Liquiditätsverwaltung\n+\t\tNETT, \t// Verrechnung\n+\t\tAGRT, \t// landwirtschaftliche Überweisung\n+\t\tAREN, \t// Debitoreneingänge\n+\t\tBEXP, \t// Geschäftsausgaben\n+\t\tBOCE, \t// Umwandlung eines Eingangs bei einer Abwicklungsstelle\n+\t\tCOMC, \t// Handelszahlung\n+\t\tCPYR, \t// Urheberrecht/schutz\n+\t\tGDDS, \t// Einkauf/Verkauf von Waren\n+\t\tGDSV, \t// Einkauf/Verkauf von Waren und Dienstleistungen\n+\t\tGSCB, \t// Einkauf/Verkauf von Waren und Dienstleistungen mit CashBack\n+\t\tLICF, \t// Lizenzgebühr\n+\t\tPOPE, \t// Zahlung am Point of Sale\n+\t\tROYA, \t// Patentgebühr\n+\t\tSCVE, \t// Einkauf/Verkauf von Dienstleistungen\n+\t\tSUBS, \t// Abonnementgebühr\n+\t\tSUPP, \t// Lieferantenzahlung\n+\t\tTRAD, \t// Handelsdienstleistung\n+\t\tCOMT, \t// Konsument für dritte Person konsolidierte Zahlung\n+\t\tCLPR, \t// Autodarlehen Ablösung\n+\t\tDBTC, \t// Lastschriftsammelzahlung\n+\t\tGOVI, \t// Regierungsversicherung\n+\t\tHLRP, \t// Wohnungsdarlehensrückzahlung\n+\t\tINPC, \t// Versicherungsbeitrag Auto\n+\t\tINSU, \t// Versicherungsbeitrag\n+\t\tINTE, \t// Zinsen\n+\t\tLBRI, \t// Versicherung Arbeit\n+\t\tLIFI, \t// Lebensversicherung\n+\t\tLOAN, \t// Darlehen\n+\t\tLOAR, \t// Darlehensrückzahlung\n+\t\tPENO, \t// Zahlung basiert auf einem Vollstreckungsbefehl\n+\t\tPPTI, \t// Hausratversicherung\n+\t\tRINP, \t// Wiederholende Ratenzahlungen\n+\t\tTRFD, \t// Treuhandfond\n+\t\tADMG, \t// administrative Verwaltung/Management\n+\t\tADVA, \t// ansteigende Zahlung\n+\t\tBLDM, \t// Gebäudeinstandhaltung\n+\t\tCCRD, \t// Kreditkartenzahlung\n+\t\tCDBL, \t// Kreditkartenrechnung\n+\t\tCFEE, \t// Annullierungskosten\n+\t\tCOST, \t// Kosten\n+\t\tDCRD, \t// Debit-Kartenzahlung\n+\t\tFAND, \t// Finanzielle Unterstützung bei dem Eintritt von Naturkatastrophen\n+\t\tICCP, \t// Unwiderrufliche Kreditkartenzahlung\n+\t\tIDCP, \t// Unwiderrufliche Debit-Kartenzahlung\n+\t\tIHRP, \t// Raten-/Mieteinkauf-Vereinbarung\n+\t\tINSM, \t// Rate\n+\t\tMSVC, \t// vielfache Dienstleistungstypen\n+\t\tNOWS, \t// Nicht anders vorgeschrieben\n+\t\tOFEE, \t// Eröffnungsgebühr\n+\t\tOTHR, \t// Andere\n+\t\tPADD, \t// davor authorisierte Lastschrift\n+\t\tPTSP, \t// Zahlungsbedingungen\n+\t\tRCKE, \t// nochmals vorgelegte Scheckzahlung\n+\t\tRCPT, \t// Erhaltene Zahlung\n+\t\tREFU, \t// Rückzahlung\n+\t\tRENT, \t// Miete/Pacht\n+\t\tSTDY, \t// Studiengebühr\n+\t\tTELI, \t// Telefon-initiierte Transaktion\n+\t\tWEBI, \t// Internet-initiierte Transaktion\n+\t\tANNI, \t// Wiederkehrende Zahlung\n+\t\tCAFI, \t// Hausmeistergebühr Inhouse\n+\t\tCFDI, \t// Anlagevermögen fällig innerbetrieblich\n+\t\tCMDT, \t// Warenüberweisung\n+\t\tDERI, \t// Derivative\n+\t\tDIVD, \t// Dividende\n+\t\tFREX, \t// Devisenkurs\n+\t\tHEDG, \t// Hedging\n+\t\tPRME, \t// Edelmetall\n+\t\tSAVG, \t// Ersparnisse\n+\t\tSECU, \t// Sicherheiten\n+\t\tSEPI, \t// Sicherheiten Einkauf intern\n+\t\tTREA, \t// Finanzamt-Zahlung\n+\t\tANTS, \t// Narkosedienstleistungen\n+\t\tCVCF, \t// Genesungs-/Heilungseinrichtung\n+\t\tDMEQ, \t// strapazierfähiges Medizinequipment\n+\t\tDNTS, \t// Zahnarzt\n+\t\tHLTC, \t// häusliche Krankenpflege/Hauspflege\n+\t\tHLTI, \t// Krankenversicherung\n+\t\tHSPC, \t// Krankenhauspflege\n+\t\tICRF, \t// Betreuungseinrichtung\n+\t\tLTCF, \t// Langzeitbetreuungseinrichtung\n+\t\tMDCS, \t// Sanitätsdienst\n+\t\tVIEW, \t// Vision Care\n+\t\tALMY, \t// Alimentezahlung\n+\t\tAEMP, \t// aktive Arbeitsmarktpolitik\n+\t\tBECH, \t// Kindergeld\n+\t\tCOMM, \t// Provision\n+\t\tCSLP, \t// Sozialkreditzahlung einer Firma an die Bank\n+\t\tGFRP, \t// Garantie- /Fond- /Rechte-Zahlung\n+\t\tGVEA, \t// Österreichische Regierungsangestellte Kategorie A\n+\t\tGVEB, \t// Österreichische Regierungsangestellte Kategorie B\n+\t\tGVEC, \t// Österreichische Regierungsangestellte Kategorie C\n+\t\tGVED, \t// Österreichische Regierungsangestellte Kategorie D\n+\t\tGWLT, \t// Regierungs-Kriegsgesetze Überweisung\n+\t\tEPAY, \t// paydirekt-Transaktion\n+\t\tPAYR, \t// Gehaltsliste\n+\t\tPRCP, \t// Preiszahlung\n+\t\tRHBS, \t// Rehabilitationsunterstützung\n+\t\tESTX, \t// Erbschaftsteuer\n+\t\tHSTX, \t// Wohnungssteuer\n+\t\tINTX, \t// Einkommenssteuer\n+\t\tNITX, \t// Steuer auf Gewinn\n+\t\tTAXS, \t// Steuerzahlung\n+\t\tVATX, \t// Umsatzsteuerzahlung\n+\t\tWHLD, \t// Quellensteuer\n+\t\tTAXR, \t// Steuerrückzahlung\n+\t\tAIRB, \t// Luftfracht\n+\t\tBUSB, \t// BUS\n+\t\tFERB, \t// Fähre\n+\t\tRLWY, \t// Eisenbahn\n+\t\tCBTV, \t// KabelTV-Rechnung\n+\t\tELEC, \t// Elektrikrechnung\n+\t\tENRG, \t// Energie\n+\t\tGASB, \t// Gasrechnung\n+\t\tNWCH, \t// Netzwerkgebühr\n+\t\tNWCM, \t// Netzwerkkommunikation\n+\t\tOTLC, \t// Andere Telekom bezogene Rechnungen\n+\t\tPHON, \t// Telefonrechnung\n+\t\tWTER  \t// Wasserrechnung\n+\t}\n+\n \tprivate SEPABankAccount bankAccount;\n \n \tprivate String id;\n@@ -24,6 +170,7 @@\n \tprivate Date mandatReferenceDate;\n \n \tprivate Currency currency = Currency.EUR;\n+\tprivate Purpose purpose = Purpose.BENE;\n \tprivate String remittance;\n \n \tpublic SEPATransaction(\n@@ -34,6 +181,7 @@ public SEPATransaction(\n \t\tString mandatReference,\n \t\tDate mandatReferenceDate,\n \t\tCurrency currency,\n+\t\tPurpose purpose,\n \t\tString remittance\n \t) {\n \t\tthis.bankAccount = bankAccount;\n@@ -43,6 +191,7 @@ public SEPATransaction(\n \t\tthis.mandatReference = mandatReference;\n \t\tthis.mandatReferenceDate = mandatReferenceDate;\n \t\tthis.currency = currency;\n+\t\tthis.purpose = purpose;\n \t\tthis.remittance = remittance;\n \t}\n \n@@ -54,15 +203,19 @@ public SEPATransaction(\n \t\t\tString mandatReference,\n \t\t\tDate mandatReferenceDate\n \t) {\n-\t\tthis(bankAccount, value, subject, date, mandatReference, mandatReferenceDate, Currency.EUR, null);\n+\t\tthis(bankAccount, value, subject, date, mandatReference, mandatReferenceDate, Currency.EUR, Purpose.BENE, null);\n \t}\n \n \tpublic SEPATransaction(SEPABankAccount bankAccount, BigDecimal value, String subject) {\n-\t\tthis(bankAccount, value, subject, new Date(), null, null, Currency.EUR, null);\n+\t\tthis(bankAccount, value, subject, new Date(), null, null, Currency.EUR, Purpose.BENE, null);\n \t}\n \n \tpublic SEPATransaction(SEPABankAccount bankAccount, BigDecimal value, String subject, Currency currency) {\n-\t\tthis(bankAccount, value, subject, new Date(), null, null, currency, null);\n+\t\tthis(bankAccount, value, subject, new Date(), null, null, currency, Purpose.BENE, null);\n+\t}\n+\n+\tpublic SEPATransaction(SEPABankAccount bankAccount, BigDecimal value, String subject, Currency currency, Purpose purpose) {\n+\t\tthis(bankAccount, value, subject, new Date(), null, null, currency, purpose, null);\n \t}\n \n \tpublic String getId() {\n@@ -111,5 +264,7 @@ public Currency getCurrency() {\n \t\treturn currency;\n \t}\n \n+\tpublic Purpose getPurpose() { return purpose; }\n+\n \tpublic String getRemittance() { return remittance; }\n }"
  },
  {
    "sha": "e6fc17deaaf147365f358eca14459da190c1bf9b",
    "filename": "src/main/java/org/java/sepaxml/examples/ExampleDirectDebit.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/ecmonline/java-sepa-xml/blob/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/main/java/org/java/sepaxml/examples/ExampleDirectDebit.java",
    "raw_url": "https://github.com/ecmonline/java-sepa-xml/raw/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/main/java/org/java/sepaxml/examples/ExampleDirectDebit.java",
    "contents_url": "https://api.github.com/repos/ecmonline/java-sepa-xml/contents/src/main/java/org/java/sepaxml/examples/ExampleDirectDebit.java?ref=5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d",
    "patch": "@@ -33,6 +33,7 @@ public static void main(String[] args) {\n                             \"MYCOMP11111111\",\n                             new Date(),\n                             SEPATransaction.Currency.EUR,\n+                            SEPATransaction.Purpose.BENE,\n                             \"No Information\"\n                     )\n             );\n@@ -49,6 +50,7 @@ public static void main(String[] args) {\n                             \"MYCOMP22222222\",\n                             new Date(),\n                             SEPATransaction.Currency.EUR,\n+                            SEPATransaction.Purpose.BENE,\n                             \"No Information\"\n                     )\n             );\n@@ -65,6 +67,7 @@ public static void main(String[] args) {\n                             \"MYCOMP11111111\",\n                             new Date(),\n                             SEPATransaction.Currency.EUR,\n+                            SEPATransaction.Purpose.BENE,\n                             \"No Information\"\n                     )\n             );"
  },
  {
    "sha": "68b53c774414ea83f3ab149dd00286f1467cd3ba",
    "filename": "src/test/java/org/java/sepaxml/SEPADirectDebitTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ecmonline/java-sepa-xml/blob/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/test/java/org/java/sepaxml/SEPADirectDebitTest.java",
    "raw_url": "https://github.com/ecmonline/java-sepa-xml/raw/5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d/src/test/java/org/java/sepaxml/SEPADirectDebitTest.java",
    "contents_url": "https://api.github.com/repos/ecmonline/java-sepa-xml/contents/src/test/java/org/java/sepaxml/SEPADirectDebitTest.java?ref=5ffe0ee1672a32f2d9e0080d077421cfbce6cf2d",
    "patch": "@@ -44,6 +44,7 @@ public void transactionVolume() throws ParserConfigurationException, SAXExceptio\n                     \"TTV\",\n                     new Date(),\n                     SEPATransaction.Currency.EUR,\n+                    SEPATransaction.Purpose.BENE,\n                     null));\n         }\n "
  }
]
