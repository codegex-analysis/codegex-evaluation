[
  {
    "sha": "2277f877c5c1ef31a2c9cd9907f62a481ff054e1",
    "filename": "backend/src/main/java/com/huellapositiva/application/controller/ESALContactPersonApiController.java",
    "status": "modified",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/application/controller/ESALContactPersonApiController.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/application/controller/ESALContactPersonApiController.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/application/controller/ESALContactPersonApiController.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -3,24 +3,36 @@\n import com.huellapositiva.application.dto.RegisterESALMemberRequestDto;\n import com.huellapositiva.application.dto.JwtResponseDto;\n import com.huellapositiva.application.dto.ProposalResponseDto;\n+import com.huellapositiva.application.exception.InvalidFieldException;\n import com.huellapositiva.domain.actions.RegisterESALContactPersonAction;\n+import com.huellapositiva.domain.actions.UploadPhotoAction;\n+import com.huellapositiva.domain.exception.EmptyFileException;\n import com.huellapositiva.domain.model.valueobjects.Id;\n import com.huellapositiva.infrastructure.orm.entities.Role;\n import com.huellapositiva.infrastructure.orm.repository.JpaRoleRepository;\n import com.huellapositiva.infrastructure.security.JwtService;\n import io.swagger.v3.oas.annotations.Operation;\n+import io.swagger.v3.oas.annotations.Parameter;\n+import io.swagger.v3.oas.annotations.enums.ParameterIn;\n import io.swagger.v3.oas.annotations.media.Content;\n import io.swagger.v3.oas.annotations.responses.ApiResponse;\n import io.swagger.v3.oas.annotations.responses.ApiResponses;\n+import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.tags.Tag;\n import lombok.AllArgsConstructor;\n import org.springframework.http.HttpHeaders;\n import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.security.core.annotation.AuthenticationPrincipal;\n import org.springframework.validation.annotation.Validated;\n import org.springframework.web.bind.annotation.*;\n+import org.springframework.web.multipart.MultipartFile;\n+import org.springframework.web.server.ResponseStatusException;\n import org.springframework.web.servlet.support.ServletUriComponentsBuilder;\n \n+import javax.annotation.security.RolesAllowed;\n import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n import java.net.URI;\n import java.util.List;\n import java.util.stream.Collectors;\n@@ -37,6 +49,8 @@\n \n     private final JpaRoleRepository jpaRoleRepository;\n \n+    private final UploadPhotoAction uploadPhotoAction;\n+\n     @Operation(\n             summary = \"Register a new ESAL employee\",\n             description = \"Register a new ESAL employee\",\n@@ -83,4 +97,45 @@ public JwtResponseDto registerContactPerson(@Validated @RequestBody RegisterESAL\n     public ProposalResponseDto getMember(@PathVariable Integer id) {\n         throw new UnsupportedOperationException();\n     }\n+\n+    @Operation(\n+            summary = \"Upload contact person Photo\",\n+            description = \"Upload contact person Photo to profile\",\n+            tags = \"user\",\n+            parameters = {\n+                    @Parameter(name = \"X-XSRF-TOKEN\", in = ParameterIn.QUERY, required = true, example = \"a6f5086d-af6b-464f-988b-7a604e46062b\", description = \"For take this value, open your inspector code on your browser, and take the value of the cookie with the name 'XSRF-TOKEN'. Example: a6f5086d-af6b-464f-988b-7a604e46062b\"),\n+                    @Parameter(name = \"XSRF-TOKEN\", in = ParameterIn.COOKIE, required = true, example = \"a6f5086d-af6b-464f-988b-7a604e46062b\", description = \"Same value of X-XSRF-TOKEN\")\n+            },\n+            security = {\n+                    @SecurityRequirement(name = \"accessToken\")\n+            }\n+    )\n+    @ApiResponses(\n+            value = {\n+                    @ApiResponse(\n+                            responseCode = \"204\",\n+                            description = \"No content, uploaded photo successfully\"\n+                    ),\n+                    @ApiResponse(\n+                            responseCode = \"400\",\n+                            description = \"Bad request, photo is not valid\"\n+                    ),\n+                    @ApiResponse(\n+                            responseCode = \"500\",\n+                            description = \"Internal server error, could not fetch the user data due to a connectivity issue.\"\n+                    )\n+            }\n+    )\n+    @PostMapping(path = \"/profile/photo\", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)\n+    @RolesAllowed({\"CONTACT_PERSON\",\"CONTACT_PERSON_NOT_CONFIRMED\"})\n+    @ResponseBody\n+    @ResponseStatus(HttpStatus.NO_CONTENT)\n+    public void uploadPhoto(@RequestPart(\"photo\") MultipartFile photo,\n+                            @Parameter(hidden = true) @AuthenticationPrincipal String accountId) throws IOException {\n+        try {\n+            uploadPhotoAction.executeAsContactPerson(photo, accountId);\n+        } catch (InvalidFieldException | EmptyFileException ex) {\n+            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, ex.getMessage());\n+        }\n+    }\n }"
  },
  {
    "sha": "a8fe9dec59909d6c3e0ba668509bd763508fed9b",
    "filename": "backend/src/main/java/com/huellapositiva/application/controller/VolunteerApiController.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/application/controller/VolunteerApiController.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/application/controller/VolunteerApiController.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/application/controller/VolunteerApiController.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -187,7 +187,7 @@ public void uploadCurriculumVitae(@RequestPart(\"cv\") MultipartFile cv,\n     public void uploadPhoto(@RequestPart(\"photo\") MultipartFile photo,\n                             @Parameter(hidden = true) @AuthenticationPrincipal String accountId) throws IOException {\n         try {\n-            uploadPhotoAction.execute(photo, accountId);\n+            uploadPhotoAction.executeAsVolunteer(photo, accountId);\n         } catch (InvalidFieldException ex) {\n             log.error(ex.getMessage());\n             throw new ResponseStatusException(HttpStatus.BAD_REQUEST, ex.getMessage());"
  },
  {
    "sha": "14793758995dc39240341909ced658730cbb85df",
    "filename": "backend/src/main/java/com/huellapositiva/application/dto/ProposalCancelReasonDto.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/application/dto/ProposalCancelReasonDto.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/application/dto/ProposalCancelReasonDto.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/application/dto/ProposalCancelReasonDto.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -11,7 +11,6 @@\n @Builder\n @AllArgsConstructor\n public class ProposalCancelReasonDto {\n-\n     @Size(max = 500)\n     @Schema(\n             description = \"Reason for cancelling proposal\","
  },
  {
    "sha": "828dae091afc0122a705b1d9b4cbd67634441f38",
    "filename": "backend/src/main/java/com/huellapositiva/domain/actions/UploadPhotoAction.java",
    "status": "modified",
    "additions": 24,
    "deletions": 3,
    "changes": 27,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/domain/actions/UploadPhotoAction.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/domain/actions/UploadPhotoAction.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/domain/actions/UploadPhotoAction.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -1,6 +1,8 @@\n package com.huellapositiva.domain.actions;\n \n+import com.huellapositiva.domain.model.entities.ContactPerson;\n import com.huellapositiva.domain.model.entities.Volunteer;\n+import com.huellapositiva.domain.repository.ContactPersonRepository;\n import com.huellapositiva.domain.repository.VolunteerRepository;\n import com.huellapositiva.domain.service.ImageService;\n import com.huellapositiva.domain.service.RemoteStorageService;\n@@ -17,13 +19,16 @@\n \n     private final VolunteerRepository volunteerRepository;\n \n+    private final ContactPersonRepository contactPersonRepository;\n+\n     private final ImageService imageService;\n \n     public UploadPhotoAction(RemoteStorageService remoteStorageService,\n                              VolunteerRepository volunteerRepository,\n-                             ImageService imageService){\n+                             ContactPersonRepository contactPersonRepository, ImageService imageService){\n         this.remoteStorageService = remoteStorageService;\n         this.volunteerRepository = volunteerRepository;\n+        this.contactPersonRepository = contactPersonRepository;\n         this.imageService = imageService;\n     }\n \n@@ -32,14 +37,30 @@ public UploadPhotoAction(RemoteStorageService remoteStorageService,\n      *\n      * @param photo new photo of profile\n      * @param accountId Account ID of volunteer\n-     * @throws IOException when the cv is corrupted\n+     * @throws IOException when the photo is corrupted\n      */\n-    public void execute(MultipartFile photo, String accountId) throws IOException {\n+    public void executeAsVolunteer(MultipartFile photo, String accountId) throws IOException {\n         imageService.validateProfileImage(photo);\n \n         Volunteer volunteer = volunteerRepository.findByAccountId(accountId);\n         URL photoUrl = remoteStorageService.uploadVolunteerPhoto(photo, volunteer.getId().toString());\n         volunteer.setPhoto(photoUrl);\n         volunteerRepository.updatePhoto(volunteer);\n     }\n+\n+    /**\n+     * Upload and link a profile image to a contact person.\n+     *\n+     * @param photo new photo of profile\n+     * @param accountId Account ID of contact person\n+     * @throws IOException when the photo is corrupted\n+     */\n+    public void executeAsContactPerson(MultipartFile photo, String accountId) throws IOException {\n+        imageService.validateProfileImage(photo);\n+\n+        ContactPerson contactPerson = contactPersonRepository.findByAccountId(accountId);\n+        URL photoUrl = remoteStorageService.uploadContactPersonPhoto(photo, contactPerson.getId().toString());\n+        contactPerson.setPhoto(photoUrl);\n+        contactPersonRepository.updatePhoto(contactPerson);\n+    }\n }"
  },
  {
    "sha": "18a773914e2a06de6638408107c4247860c12f0a",
    "filename": "backend/src/main/java/com/huellapositiva/domain/model/entities/User.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/domain/model/entities/User.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/domain/model/entities/User.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/domain/model/entities/User.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -6,10 +6,14 @@\n import lombok.AllArgsConstructor;\n import lombok.Builder;\n import lombok.Getter;\n+import lombok.Setter;\n+\n+import java.net.URL;\n \n @Builder\n @Getter\n @AllArgsConstructor\n+@Setter\n public class User {\n \n     private final Id accountId;\n@@ -24,6 +28,8 @@\n \n     private String surname;\n \n+    private URL photo;\n+\n     public User(Id accountId, EmailAddress emailAddress, Id id) {\n         this.accountId = accountId;\n         this.emailAddress = emailAddress;"
  },
  {
    "sha": "c8fcd99d811648f7e7757a9896809daa6644e089",
    "filename": "backend/src/main/java/com/huellapositiva/domain/model/entities/Volunteer.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/domain/model/entities/Volunteer.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/domain/model/entities/Volunteer.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/domain/model/entities/Volunteer.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -14,8 +14,6 @@\n \n     private URL curriculumVitae;\n \n-    private URL photo;\n-\n     public Volunteer(Id accountId, EmailAddress emailAddress, Id id) {\n         super(accountId, emailAddress, id);\n     }"
  },
  {
    "sha": "99287cfd27174861244f9ba757437911f3e24645",
    "filename": "backend/src/main/java/com/huellapositiva/domain/repository/ContactPersonRepository.java",
    "status": "modified",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/domain/repository/ContactPersonRepository.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/domain/repository/ContactPersonRepository.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/domain/repository/ContactPersonRepository.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -5,11 +5,14 @@\n import com.huellapositiva.domain.model.valueobjects.EmailAddress;\n import com.huellapositiva.domain.model.valueobjects.Id;\n import com.huellapositiva.infrastructure.orm.entities.JpaContactPerson;\n+import com.huellapositiva.infrastructure.orm.entities.JpaContactPersonProfile;\n import com.huellapositiva.infrastructure.orm.repository.JpaContactPersonRepository;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n+import java.util.NoSuchElementException;\n+\n @Component\n @Transactional\n public class ContactPersonRepository {\n@@ -21,4 +24,39 @@ public ContactPerson findByJoinedEsalId(String esalId) {\n         JpaContactPerson jpaContactPerson = jpaContactPersonRepository.findByEsalId(esalId).orElseThrow(UserNotFoundException::new);\n         return new ContactPerson(new Id(jpaContactPerson.getCredential().getId()), EmailAddress.from(jpaContactPerson.getCredential().getEmail()), new Id(jpaContactPerson.getId()));\n     }\n+\n+    /**\n+     * This method return the contact person full information stored in DB.\n+     *\n+     * @param accountId Account ID of the contact person\n+     */\n+    public ContactPerson findByAccountId(String accountId) {\n+        JpaContactPerson contactPerson = jpaContactPersonRepository.findByAccountIdWithProfile(accountId)\n+                .orElseThrow(() -> new UserNotFoundException(\"Could not find contactPerson with account ID: \" + accountId));\n+\n+        return new ContactPerson(\n+                new Id(contactPerson.getCredential().getId()),\n+                EmailAddress.from(contactPerson.getCredential().getEmail()),\n+                new Id(contactPerson.getId()));\n+    }\n+\n+    /**\n+     * This method store in DB the URL of user profile photo\n+     *\n+     * @param contactPerson The contact person information\n+     */\n+    public void updatePhoto(ContactPerson contactPerson) {\n+        JpaContactPerson jpaContactPerson = jpaContactPersonRepository.findByAccountId(contactPerson.getAccountId().toString())\n+                .orElseThrow(() -> new NoSuchElementException(\"No exists contact person with: \" + contactPerson.getId()));\n+\n+        if (jpaContactPerson.getContactPersonProfile() == null) {\n+            JpaContactPersonProfile jpaContactPersonProfile = JpaContactPersonProfile.builder()\n+                    .id(Id.newId().toString())\n+                    .build();\n+            jpaContactPerson.setContactPersonProfile(jpaContactPersonProfile);\n+        }\n+\n+        jpaContactPerson.getContactPersonProfile().setPhotoUrl(contactPerson.getPhoto().toExternalForm());\n+        jpaContactPersonRepository.save(jpaContactPerson);\n+    }\n }"
  },
  {
    "sha": "57452bc2049674b836e6db66ad4465914e90e140",
    "filename": "backend/src/main/java/com/huellapositiva/domain/service/RemoteStorageService.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/domain/service/RemoteStorageService.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/domain/service/RemoteStorageService.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/domain/service/RemoteStorageService.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -62,6 +62,20 @@ public URL uploadVolunteerPhoto(MultipartFile photo, String volunteerId) throws\n         return storageService.upload(volunteerPhotoRootKey + destinationFileName, photo.getInputStream(), photo.getContentType());\n     }\n \n+    /**\n+     * This method reads the bytes from the photo of a contact person and uploads it to the storage service\n+     *\n+     * @param photo New photo uploaded to the application\n+     * @param contactPersonId Id of the contact person stored in database\n+     * @return URL with the photo location in the storage\n+     * @throws IOException Exception occurred while uploading the image to the cloud\n+     */\n+    public URL uploadContactPersonPhoto(MultipartFile photo, String contactPersonId) throws IOException {\n+        String destinationFileName = Id.newId() + getExtension(photo.getOriginalFilename());\n+        String contactPersonPhotoRootKey = \"photo/contactPerson/\" + contactPersonId + '/';\n+        return storageService.upload(contactPersonPhotoRootKey + destinationFileName, photo.getInputStream(), photo.getContentType());\n+    }\n+\n     /**\n      * This method reads the bytes from the excel and uploads it to the storage service\n      *\n@@ -88,4 +102,5 @@ public URL uploadESALLogo(MultipartFile logo, String esalId) throws IOException\n         String volunteerPhotoRootKey = \"logo/esal/\" + esalId + '/';\n         return storageService.upload(volunteerPhotoRootKey + destinationFileName, logo.getInputStream(), logo.getContentType());\n     }\n+\n }"
  },
  {
    "sha": "f1fb61375d9e28429b71fbf339146e0f3478d782",
    "filename": "backend/src/main/java/com/huellapositiva/infrastructure/orm/entities/JpaContactPersonProfile.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/infrastructure/orm/entities/JpaContactPersonProfile.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/infrastructure/orm/entities/JpaContactPersonProfile.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/infrastructure/orm/entities/JpaContactPersonProfile.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -31,4 +31,7 @@\n \n     @Column(name = \"phone_number\")\n     private String phoneNumber;\n+\n+    @Column(name = \"photo_url\")\n+    private String photoUrl;\n }"
  },
  {
    "sha": "d7976678cd78e242d4551d7d979aa8c83626a6b7",
    "filename": "backend/src/main/java/com/huellapositiva/infrastructure/orm/repository/JpaContactPersonRepository.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/infrastructure/orm/repository/JpaContactPersonRepository.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/java/com/huellapositiva/infrastructure/orm/repository/JpaContactPersonRepository.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/infrastructure/orm/repository/JpaContactPersonRepository.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -1,7 +1,6 @@\n package com.huellapositiva.infrastructure.orm.repository;\n \n-import com.huellapositiva.infrastructure.orm.entities.JpaContactPerson;\n-import com.huellapositiva.infrastructure.orm.entities.JpaESAL;\n+import com.huellapositiva.infrastructure.orm.entities.*;\n import org.springframework.data.jpa.repository.JpaRepository;\n import org.springframework.data.jpa.repository.Modifying;\n import org.springframework.data.jpa.repository.Query;\n@@ -35,4 +34,7 @@\n \n     @Query(\"FROM JpaContactPerson cp LEFT JOIN FETCH cp.joinedEsal je WHERE je.id = :id\")\n     Optional<JpaContactPerson> findByEsalId(@Param(\"id\") String id);\n+\n+    @Query(\"FROM JpaContactPerson cp LEFT JOIN FETCH cp.contactPersonProfile p LEFT JOIN FETCH cp.credential c WHERE c.id = :accountId\")\n+    Optional<JpaContactPerson> findByAccountIdWithProfile(@Param(\"accountId\") String accountId);\n }"
  },
  {
    "sha": "477bf3802376b3a659535117f8b18dcf28ed2025",
    "filename": "backend/src/main/resources/db/migration/common/V1_0_18__Add_Contact_Person_Profile_Photo.sql",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/resources/db/migration/common/V1_0_18__Add_Contact_Person_Profile_Photo.sql",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/main/resources/db/migration/common/V1_0_18__Add_Contact_Person_Profile_Photo.sql",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/resources/db/migration/common/V1_0_18__Add_Contact_Person_Profile_Photo.sql?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -0,0 +1,2 @@\n+ALTER TABLE contact_person_profile\n+    ADD COLUMN photo_url varchar (1030);\n\\ No newline at end of file"
  },
  {
    "sha": "b3f8a228e70a7da5620408178e9535f9bcb46e96",
    "filename": "backend/src/test/java/com/huellapositiva/api/ESALContactPersonControllerShould.java",
    "status": "renamed",
    "additions": 125,
    "deletions": 1,
    "changes": 126,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/test/java/com/huellapositiva/api/ESALContactPersonControllerShould.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/test/java/com/huellapositiva/api/ESALContactPersonControllerShould.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/test/java/com/huellapositiva/api/ESALContactPersonControllerShould.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -3,6 +3,8 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.huellapositiva.application.dto.RegisterESALMemberRequestDto;\n import com.huellapositiva.application.dto.JwtResponseDto;\n+import com.huellapositiva.application.exception.UserNotFoundException;\n+import com.huellapositiva.domain.model.entities.ContactPerson;\n import com.huellapositiva.domain.model.valueobjects.Roles;\n import com.huellapositiva.infrastructure.orm.entities.JpaContactPerson;\n import com.huellapositiva.infrastructure.orm.repository.JpaContactPersonProfileRepository;\n@@ -20,23 +22,31 @@\n import org.springframework.data.util.Pair;\n import org.springframework.http.HttpHeaders;\n import org.springframework.mock.web.MockHttpServletResponse;\n+import org.springframework.mock.web.MockMultipartFile;\n import org.springframework.test.web.servlet.MockMvc;\n \n+import java.io.InputStream;\n import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n import java.util.stream.Stream;\n \n import static com.huellapositiva.util.TestData.*;\n+import static com.huellapositiva.util.TestUtils.loginAndGetJwtTokens;\n import static org.assertj.core.api.Assertions.assertThat;\n import static org.hamcrest.text.MatchesPattern.matchesPattern;\n import static org.springframework.http.MediaType.APPLICATION_JSON;\n+import static org.springframework.http.MediaType.MULTIPART_FORM_DATA;\n+import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.multipart;\n import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.header;\n import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n \n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n @AutoConfigureMockMvc\n @Import(TestData.class)\n-class ESALMemberControllerShould {\n+class ESALContactPersonControllerShould {\n \n     private static final ObjectMapper objectMapper = new ObjectMapper();\n \n@@ -187,4 +197,118 @@ void return_400_when_register_contact_person_with_malformed_data_request(Registe\n                         .build()\n         );\n     }\n+\n+    @Test\n+    void return_204_when_upload_photo_successfully() throws Exception {\n+        JpaContactPerson contactPerson = testData.createESALJpaContactPerson(VALID_NAME, VALID_SURNAME, VALID_PHONE, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        InputStream is = getClass().getClassLoader().getResourceAsStream(\"images/huellapositiva-logo.png\");\n+        mvc.perform(multipart(\"/api/v1/contactperson/profile/photo\")\n+                .file(new MockMultipartFile(\"photo\", \"photo-test.PNG\", \"image/png\", is))\n+                .header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwtResponseDto.getAccessToken())\n+                .contentType(MULTIPART_FORM_DATA)\n+                .with(csrf())\n+                .accept(APPLICATION_JSON))\n+                .andExpect(status().isNoContent());\n+\n+        contactPerson = jpaContactPersonRepository.findByAccountIdWithProfile(contactPerson.getCredential().getId()).orElseThrow(UserNotFoundException::new);\n+        assertThat(contactPerson.getContactPersonProfile().getPhotoUrl()).isNotNull();\n+    }\n+\n+    @Test\n+    void return_204_when_upload_photo_successfully_with_profile() throws Exception {\n+        JpaContactPerson contactPerson = testData.createESALJpaContactPersonWithProfile(VALID_NAME, VALID_SURNAME, VALID_PHONE, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        String originalPhotoUrl = contactPerson.getContactPersonProfile().getPhotoUrl();\n+\n+        InputStream is = getClass().getClassLoader().getResourceAsStream(\"images/huellapositiva-logo.png\");\n+        mvc.perform(multipart(\"/api/v1/contactperson/profile/photo\")\n+                .file(new MockMultipartFile(\"photo\", \"photo-test.PNG\", \"image/png\", is))\n+                .header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwtResponseDto.getAccessToken())\n+                .contentType(MULTIPART_FORM_DATA)\n+                .with(csrf())\n+                .accept(APPLICATION_JSON))\n+                .andExpect(status().isNoContent());\n+\n+        JpaContactPerson updatedContactPerson =\n+                jpaContactPersonRepository.findByAccountIdWithProfile(contactPerson.getCredential().getId()).orElseThrow(UserNotFoundException::new);\n+        String updatedPhotoUrl = updatedContactPerson.getContactPersonProfile().getPhotoUrl();\n+\n+        assertThat(updatedPhotoUrl).isNotNull();\n+        assertThat(updatedPhotoUrl).isNotEqualTo(originalPhotoUrl);\n+    }\n+\n+    @Test\n+    void return_204_when_upload_photo_successfully_with_no_profile() throws Exception {\n+        JpaContactPerson contactPerson = testData.createESALJpaContactPerson(VALID_NAME, VALID_SURNAME, VALID_PHONE, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+\n+        InputStream is = getClass().getClassLoader().getResourceAsStream(\"images/huellapositiva-logo.png\");\n+        mvc.perform(multipart(\"/api/v1/contactperson/profile/photo\")\n+                .file(new MockMultipartFile(\"photo\", \"photo-test.PNG\", \"image/png\", is))\n+                .header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwtResponseDto.getAccessToken())\n+                .contentType(MULTIPART_FORM_DATA)\n+                .with(csrf())\n+                .accept(APPLICATION_JSON))\n+                .andExpect(status().isNoContent());\n+\n+        contactPerson = jpaContactPersonRepository.findByAccountIdWithProfile(contactPerson.getCredential().getId()).orElseThrow(UserNotFoundException::new);\n+        assertThat(contactPerson.getContactPersonProfile().getPhotoUrl()).isNotNull();\n+    }\n+    @Test\n+    void return_400_when_the_photo_uploaded_is_too_big() throws Exception {\n+        testData.createESALJpaContactPersonWithProfile(VALID_NAME, VALID_SURNAME, VALID_PHONE, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+\n+        InputStream is = getClass().getClassLoader().getResourceAsStream(\"images/Sample-png-image-3mb.png\");\n+        mvc.perform(multipart(\"/api/v1/contactperson/profile/photo\")\n+                .file(new MockMultipartFile(\"photo\", \"Sample-png-image-3mb.png\", \"image/png\", is))\n+                .header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwtResponseDto.getAccessToken())\n+                .contentType(MULTIPART_FORM_DATA)\n+                .with(csrf())\n+                .accept(APPLICATION_JSON))\n+                .andExpect(status().isBadRequest());\n+    }\n+\n+    @Test\n+    void return_400_when_the_photo_uploaded_is_oversized() throws Exception {\n+        testData.createESALJpaContactPersonWithProfile(VALID_NAME, VALID_SURNAME, VALID_PHONE, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+\n+        InputStream is = getClass().getClassLoader().getResourceAsStream(\"images/oversized.png\");\n+        mvc.perform(multipart(\"/api/v1/contactperson/profile/photo\")\n+                .file(new MockMultipartFile(\"photo\", \"Sample-png-image-3mb.png\", \"image/png\", is))\n+                .header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwtResponseDto.getAccessToken())\n+                .contentType(MULTIPART_FORM_DATA)\n+                .with(csrf())\n+                .accept(APPLICATION_JSON))\n+                .andExpect(status().isBadRequest());\n+    }\n+\n+    @Test\n+    void return_400_when_uploaded_file_is_not_JPG_JPEG_PNG_GIF() throws Exception {\n+        testData.createESALJpaContactPersonWithProfile(VALID_NAME, VALID_SURNAME, VALID_PHONE, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        InputStream is = getClass().getClassLoader().getResourceAsStream(\"documents/pdf-test.pdf\");\n+        mvc.perform(multipart(\"/api/v1/contactperson/profile/photo\")\n+                .file(new MockMultipartFile(\"photo\", \"pdf-test.pdf\", \"application/pdf\", is))\n+                .header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwtResponseDto.getAccessToken())\n+                .contentType(MULTIPART_FORM_DATA)\n+                .with(csrf())\n+                .accept(APPLICATION_JSON))\n+                .andExpect(status().isBadRequest());\n+    }\n+\n+    @Test\n+    void return_400_when_there_is_not_photo_uploaded() throws Exception {\n+        testData.createESALJpaContactPersonWithProfile(VALID_NAME, VALID_SURNAME, VALID_PHONE, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n+        mvc.perform(multipart(\"/api/v1/contactperson/profile/photo\")\n+                .file(new MockMultipartFile(\"photo\", \"photo-test.PNG\", \"image/png\", InputStream.nullInputStream()))\n+                .header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwtResponseDto.getAccessToken())\n+                .contentType(MULTIPART_FORM_DATA)\n+                .with(csrf())\n+                .accept(APPLICATION_JSON))\n+                .andExpect(status().isBadRequest());\n+    }\n }",
    "previous_filename": "backend/src/test/java/com/huellapositiva/api/ESALMemberControllerShould.java"
  },
  {
    "sha": "50853e6d89619a3e7d3affa6aee65cf85abf6cf0",
    "filename": "backend/src/test/java/com/huellapositiva/api/ProposalControllerShould.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/test/java/com/huellapositiva/api/ProposalControllerShould.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/test/java/com/huellapositiva/api/ProposalControllerShould.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/test/java/com/huellapositiva/api/ProposalControllerShould.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -28,9 +28,7 @@\n \n import javax.persistence.EntityNotFoundException;\n import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.UUID;\n+import java.util.*;\n import java.util.stream.Stream;\n \n import static com.huellapositiva.domain.model.valueobjects.ProposalDate.createClosingProposalDate;"
  },
  {
    "sha": "357d6fdbe36b5a3486039116621472ef24d720fd",
    "filename": "backend/src/test/java/com/huellapositiva/integration/ProposalRepositoryShould.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/test/java/com/huellapositiva/integration/ProposalRepositoryShould.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/test/java/com/huellapositiva/integration/ProposalRepositoryShould.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/test/java/com/huellapositiva/integration/ProposalRepositoryShould.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -13,7 +13,6 @@\n import org.springframework.context.annotation.Import;\n \n import java.util.Calendar;\n-import java.util.UUID;\n \n import static java.util.Calendar.HOUR_OF_DAY;\n import static java.util.Calendar.MINUTE;"
  },
  {
    "sha": "53a9671bb19f2ca03cd8da60d1fe23c074412cd8",
    "filename": "backend/src/test/java/com/huellapositiva/util/TestData.java",
    "status": "modified",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/test/java/com/huellapositiva/util/TestData.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/6159619ec0860d9b3f41375c289d0b59f82e9387/backend/src/test/java/com/huellapositiva/util/TestData.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/test/java/com/huellapositiva/util/TestData.java?ref=6159619ec0860d9b3f41375c289d0b59f82e9387",
    "patch": "@@ -260,6 +260,11 @@ public JpaContactPerson createESALJpaContactPerson(String name, String surname,\n         return jpaContactPersonRepository.save(contactPerson);\n     }\n \n+    public JpaContactPerson createESALJpaContactPersonWithProfile(String name, String surname, String phone_number, String email, String password){\n+        createESALJpaContactPerson(name, surname, phone_number, email, password);\n+        return createContactPersonProfile(email);\n+    }\n+\n     public String createAndLinkESAL(JpaContactPerson contactPerson, JpaESAL esal) {\n         String id = createJpaESAL(esal).getId();\n         jpaContactPersonRepository.updateJoinedESAL(contactPerson.getId(), esal);\n@@ -542,6 +547,22 @@ private JpaVolunteer createVolunteerProfile(String email) {\n         return jpaVolunteer;\n     }\n \n+    private JpaContactPerson createContactPersonProfile(String email) {\n+        JpaContactPersonProfile jpaContactPersonProfile = JpaContactPersonProfile.builder()\n+                .id(Id.newId().toString())\n+                .name(\"nombre\")\n+                .surname(\"apellidos\")\n+                .phoneNumber(\"12412412125\")\n+                .photoUrl(\"Una direccion ahi\")\n+                .build();\n+        jpaContactPersonProfileRepository.save(jpaContactPersonProfile);\n+\n+        JpaContactPerson jpaContactPerson = jpaContactPersonRepository.findByEmail(email).orElseThrow(UserNotFoundException::new);\n+        jpaContactPerson.setContactPersonProfile(jpaContactPersonProfile);\n+\n+        return jpaContactPerson;\n+    }\n+\n     private JpaVolunteer createSubscribedVolunteerProfile(String email) {\n         String id = Id.newId().toString();\n         JpaProfile jpaProfile = JpaProfile.builder()"
  }
]
