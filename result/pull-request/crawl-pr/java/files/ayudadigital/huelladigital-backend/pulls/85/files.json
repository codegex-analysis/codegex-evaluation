[
  {
    "sha": "d8193ce8fb37ac1ba7ece16f7bab8ed62fe3d6c1",
    "filename": "backend/src/main/java/com/huellapositiva/application/controller/ProposalApiController.java",
    "status": "modified",
    "additions": 48,
    "deletions": 2,
    "changes": 50,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/java/com/huellapositiva/application/controller/ProposalApiController.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/java/com/huellapositiva/application/controller/ProposalApiController.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/application/controller/ProposalApiController.java?ref=9a27fb89af6892e6622fce825655582ce9e83930",
    "patch": "@@ -68,6 +68,8 @@\n \n     private final ChangeReviewPendingProposalToPublishedAction changeReviewPendingProposalToPublishedAction;\n \n+    private ChangeStatusToInadequateAction changeStatusToInadequateAction;\n+\n     private final ObjectMapper objectMapper = new ObjectMapper();\n \n     @Operation(\n@@ -178,7 +180,6 @@ public ProposalResponseDto getProposal(@PathVariable String id) {\n                             responseCode = \"410\",\n                             description = \"Gone, the proposal is already closed.\"\n                     )\n-\n             }\n     )\n     @PostMapping(\"/{id}/join\")\n@@ -544,5 +545,50 @@ public void changeStatusVolunteerInProposal(@RequestBody List<ChangeStatusVolunt\n     public void changeReviewPendingProposalToPublished(@RequestBody ChangeStatusProposalRequestDto dto) {\n         changeReviewPendingProposalToPublishedAction.execute(dto.getIdProposal());\n     }\n-}\n \n+    @Operation(\n+            summary = \"Change status of the proposal to Inadequate\",\n+            description = \"The reviser decides to change the status of the proposal from review pending to inadequate after the revision\",\n+            tags = {\"proposals, reviser, contact person\"},\n+            parameters = {\n+                    @Parameter(name = \"X-XSRF-TOKEN\", in = ParameterIn.HEADER, required = true, example = \"ff79038b-3fec-41f0-bab8-6e0d11db986e\", description = \"For taking this value, open your inspector code on your browser, and take the value of the cookie with the name 'XSRF-TOKEN'. Example: a6f5086d-af6b-464f-988b-7a604e46062b\"),\n+                    @Parameter(name = \"XSRF-TOKEN\", in = ParameterIn.COOKIE, required = true, example = \"ff79038b-3fec-41f0-bab8-6e0d11db986e\", description = \"Same value of X-XSRF-TOKEN\")\n+            },\n+            security = {\n+                    @SecurityRequirement(name = \"accessToken\")\n+            }\n+    )\n+    @ApiResponses(\n+            value = {\n+                    @ApiResponse(\n+                            responseCode = \"204\",\n+                            description = \"No Content, proposal status changed to INADEQUATE successfully.\"\n+                    ),\n+                    @ApiResponse(\n+                            responseCode = \"400\",\n+                            description = \"Bad request, changing the proposal status failed because the proposal was not in review pending.\"\n+                    ),\n+                    @ApiResponse(\n+                            responseCode = \"404\",\n+                            description = \"Not Found, the proposal with the given id was not found in the database.\"\n+                    ),\n+                    @ApiResponse(\n+                            responseCode = \"500\",\n+                            description = \"Internal server error, could not fetch the user data due to a connectivity issue.\"\n+                    )\n+            }\n+    )\n+    @PostMapping(\"/changeStatusToInadequate\")\n+    @RolesAllowed(\"REVISER\")\n+    @ResponseStatus(HttpStatus.NO_CONTENT)\n+    public void changeStatusToInadequate(@RequestBody ChangeToInadequateDto dto,\n+                                         @Parameter(hidden = true) @AuthenticationPrincipal String accountId) {\n+        try {\n+            changeStatusToInadequateAction.execute(dto);\n+        } catch (EntityNotFoundException ex) {\n+            throw new ResponseStatusException(HttpStatus.NOT_FOUND, PROPOSAL_DOESNT_EXIST);\n+        } catch (IllegalStateException ex) {\n+            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, \"Status of proposal is not suitable for changing to Inadequate\");\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "419e45334f291e6b64cb44d0ffa675c1022b7d6a",
    "filename": "backend/src/main/java/com/huellapositiva/application/dto/ChangeToInadequateDto.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/java/com/huellapositiva/application/dto/ChangeToInadequateDto.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/java/com/huellapositiva/application/dto/ChangeToInadequateDto.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/application/dto/ChangeToInadequateDto.java?ref=9a27fb89af6892e6622fce825655582ce9e83930",
    "patch": "@@ -0,0 +1,13 @@\n+package com.huellapositiva.application.dto;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+\n+@Data\n+@Builder\n+@AllArgsConstructor\n+public class ChangeToInadequateDto {\n+    String proposalId;\n+    String reason;\n+}"
  },
  {
    "sha": "b86cd1040abcf36d76e1b9138f552f3df3037a82",
    "filename": "backend/src/main/java/com/huellapositiva/domain/actions/ChangeStatusToInadequateAction.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/java/com/huellapositiva/domain/actions/ChangeStatusToInadequateAction.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/java/com/huellapositiva/domain/actions/ChangeStatusToInadequateAction.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/domain/actions/ChangeStatusToInadequateAction.java?ref=9a27fb89af6892e6622fce825655582ce9e83930",
    "patch": "@@ -0,0 +1,38 @@\n+package com.huellapositiva.domain.actions;\n+\n+import com.huellapositiva.application.dto.ChangeToInadequateDto;\n+import com.huellapositiva.domain.model.entities.ContactPerson;\n+import com.huellapositiva.domain.model.entities.Proposal;\n+import com.huellapositiva.domain.repository.ContactPersonRepository;\n+import com.huellapositiva.domain.repository.ProposalRepository;\n+import com.huellapositiva.domain.service.EmailCommunicationService;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import static com.huellapositiva.domain.model.valueobjects.ProposalStatus.INADEQUATE;\n+import static com.huellapositiva.domain.model.valueobjects.ProposalStatus.REVIEW_PENDING;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class ChangeStatusToInadequateAction {\n+\n+    @Autowired\n+    private ProposalRepository proposalRepository;\n+\n+    @Autowired\n+    private EmailCommunicationService emailCommunicationService;\n+\n+    @Autowired\n+    private ContactPersonRepository contactPersonRepository;\n+\n+    public void execute(ChangeToInadequateDto dto) {\n+        Proposal proposal = proposalRepository.fetch(dto.getProposalId());\n+        if(proposal.getStatus() != REVIEW_PENDING)\n+            throw new IllegalStateException();\n+        proposal.setStatus(INADEQUATE);\n+        proposalRepository.save(proposal);\n+\n+        ContactPerson contactPerson = contactPersonRepository.findByJoinedEsalId(proposal.getEsal().getId().getValue());\n+        emailCommunicationService.sendInadequateProposalEmail(contactPerson.getEmailAddress(), proposal.getTitle(), dto.getReason());\n+    }\n+}"
  },
  {
    "sha": "0da3fc61b104f67ce129e1561ed376cf3fdadfbe",
    "filename": "backend/src/main/java/com/huellapositiva/domain/service/EmailCommunicationService.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/java/com/huellapositiva/domain/service/EmailCommunicationService.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/java/com/huellapositiva/domain/service/EmailCommunicationService.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/domain/service/EmailCommunicationService.java?ref=9a27fb89af6892e6622fce825655582ce9e83930",
    "patch": "@@ -118,4 +118,12 @@ public void sendMessageProposalPublished(String email, String proposalTitle) {\n                 PROPOSAL_PUBLISHED_EMAIL_SUBJECT, emailTemplate);\n         emailService.sendEmail(emailMessage);\n     }\n+\n+    public void sendInadequateProposalEmail(EmailAddress emailAddress, String title, String reason) {\n+        final String INADEQUATE_PROPOSAL_EMAIL_SUBJECT = \"Descarga de excel con voluntarios suscritos a la Newsletter\";\n+        EmailTemplate emailTemplate = templateService.getInadequateProposalEmailTemplate(title, reason);\n+        EmailMessage emailMessage = EmailMessage.createFrom(from, emailAddress.toString(),\n+                INADEQUATE_PROPOSAL_EMAIL_SUBJECT, emailTemplate);\n+        emailService.sendEmail(emailMessage);\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "92b1e533b9404eaa83e6c043018f70dd1c3fb986",
    "filename": "backend/src/main/java/com/huellapositiva/infrastructure/TemplateService.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/java/com/huellapositiva/infrastructure/TemplateService.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/java/com/huellapositiva/infrastructure/TemplateService.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/java/com/huellapositiva/infrastructure/TemplateService.java?ref=9a27fb89af6892e6622fce825655582ce9e83930",
    "patch": "@@ -120,4 +120,13 @@ public EmailTemplate getProposalPublishedTemplate(String proposalTitle) {\n         variables.put(\"PROPOSAL_TITLE\", proposalTitle );\n         return new EmailTemplate(template).parse(variables);\n     }\n+\n+    public EmailTemplate getInadequateProposalEmailTemplate(String title, String reason){\n+        String relativePath = \"classpath:templates/emails/inadequateProposalEmail.txt\";\n+        String template = getFileContent(relativePath);\n+        Map<String, String> variables = new HashMap<>();\n+        variables.put(\"TITLE\", title);\n+        variables.put(\"REASON\", reason);\n+        return new EmailTemplate(template).parse(variables);\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "26d5e43041d3bbb6a6b356334f475baecc9ac774",
    "filename": "backend/src/main/resources/templates/emails/inadequateProposalEmail.txt",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/resources/templates/emails/inadequateProposalEmail.txt",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/main/resources/templates/emails/inadequateProposalEmail.txt",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/main/resources/templates/emails/inadequateProposalEmail.txt?ref=9a27fb89af6892e6622fce825655582ce9e83930",
    "patch": "@@ -0,0 +1,6 @@\n+Le informamos que la convocatoria con título ${TITLE} ha sido estimada como inadecuada. Los motivos de esta decisión\n+son los siguientes:\n+\n+${REASON}\n+\n+Un cordial saludo.\n\\ No newline at end of file"
  },
  {
    "sha": "c6e24304088c2516b3ad7f65b6a0ba23b52b52c9",
    "filename": "backend/src/test/java/com/huellapositiva/api/ProposalControllerShould.java",
    "status": "modified",
    "additions": 65,
    "deletions": 2,
    "changes": 67,
    "blob_url": "https://github.com/ayudadigital/huelladigital-backend/blob/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/test/java/com/huellapositiva/api/ProposalControllerShould.java",
    "raw_url": "https://github.com/ayudadigital/huelladigital-backend/raw/9a27fb89af6892e6622fce825655582ce9e83930/backend/src/test/java/com/huellapositiva/api/ProposalControllerShould.java",
    "contents_url": "https://api.github.com/repos/ayudadigital/huelladigital-backend/contents/backend/src/test/java/com/huellapositiva/api/ProposalControllerShould.java?ref=9a27fb89af6892e6622fce825655582ce9e83930",
    "patch": "@@ -4,6 +4,7 @@\n import com.huellapositiva.application.dto.*;\n import com.huellapositiva.application.exception.UserNotFoundException;\n import com.huellapositiva.domain.model.valueobjects.Id;\n+import com.huellapositiva.domain.actions.ChangeStatusToInadequateAction;\n import com.huellapositiva.domain.model.valueobjects.ProposalCategory;\n import com.huellapositiva.domain.model.valueobjects.ProposalStatus;\n import com.huellapositiva.domain.model.valueobjects.Roles;\n@@ -104,7 +105,6 @@ void persist_a_proposal() throws Exception {\n     @Test\n     void return_400_when_date_is_invalid_when_creating_a_proposal() throws Exception {\n         // GIVEN\n-\n         JpaContactPerson contactPerson = testData.createESALJpaContactPerson(VALID_NAME, VALID_SURNAME, VALID_PHONE, DEFAULT_EMAIL, DEFAULT_PASSWORD);\n         testData.createAndLinkESAL(contactPerson, testData.buildJpaESAL(\"Huella Positiva\"));\n         String invalidStartingDate = \"20-01-2021\";\n@@ -371,7 +371,7 @@ void return_410_when_joining_a_non_existent_proposal() throws Exception {\n     void create_proposal_as_reviser() throws Exception {\n         testData.createCredential(DEFAULT_EMAIL, UUID.randomUUID(), DEFAULT_PASSWORD, Roles.REVISER);\n         JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, DEFAULT_EMAIL, DEFAULT_PASSWORD);\n-      \n+\n         JpaContactPerson contactPerson = testData.createESALJpaContactPerson(VALID_NAME, VALID_SURNAME, VALID_PHONE, DEFAULT_ESAL_CONTACT_PERSON_EMAIL, DEFAULT_PASSWORD);\n         testData.createAndLinkESAL(contactPerson, testData.buildJpaESAL(\"Huella Positiva\"));\n         ProposalRequestDto proposalDto = testData.buildProposalDto();\n@@ -895,4 +895,67 @@ void return_409_when_proposal_status_is_no_review_pending(ProposalStatus proposa\n                 FINISHED\n         );\n     }\n+\n+    @Test\n+    void return_204_when_proposal_status_changed_to_inadequate() throws Exception {\n+        testData.createCredential(\"revisor@huellapositiva.com\", UUID.randomUUID(), DEFAULT_PASSWORD, Roles.REVISER);\n+        JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, \"revisor@huellapositiva.com\", DEFAULT_PASSWORD);\n+        JpaProposal jpaProposal = testData.registerESALAndProposal(REVIEW_PENDING);\n+        ChangeToInadequateDto dto = ChangeToInadequateDto.builder()\n+                .proposalId(jpaProposal.getId())\n+                .reason(\"Pandemia\")\n+                .build();\n+\n+        mvc.perform(post(FETCH_PROPOSAL_URI + \"changeStatusToInadequate\")\n+                .header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwtResponseDto.getAccessToken())\n+                .content(objectMapper.writeValueAsString(dto))\n+                .contentType(MediaType.APPLICATION_JSON)\n+                .with(csrf())\n+                .accept(MediaType.APPLICATION_JSON))\n+                .andExpect(status().isNoContent());\n+\n+        JpaProposal proposal = jpaProposalRepository.findByNaturalId(jpaProposal.getId()).orElseThrow(EntityNotFoundException::new);\n+        assertThat(proposal.getStatus().getId()).isEqualTo(INADEQUATE.getId());\n+    }\n+\n+    @Test\n+    void return_400_when_changing_to_inadequate_a_proposal_not_in_review_pending() throws Exception {\n+        testData.createCredential(\"revisor@huellapositiva.com\", UUID.randomUUID(), DEFAULT_PASSWORD, Roles.REVISER);\n+        JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, \"revisor@huellapositiva.com\", DEFAULT_PASSWORD);\n+        JpaProposal jpaProposal = testData.registerESALAndProposal(PUBLISHED);\n+        ChangeToInadequateDto dto = ChangeToInadequateDto.builder()\n+                .proposalId(jpaProposal.getId())\n+                .reason(\"Pandemia\")\n+                .build();\n+\n+        mvc.perform(post(FETCH_PROPOSAL_URI + \"changeStatusToInadequate\")\n+                .header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwtResponseDto.getAccessToken())\n+                .content(objectMapper.writeValueAsString(dto))\n+                .contentType(MediaType.APPLICATION_JSON)\n+                .with(csrf())\n+                .accept(MediaType.APPLICATION_JSON))\n+                .andExpect(status().isBadRequest());\n+\n+        JpaProposal proposal = jpaProposalRepository.findByNaturalId(jpaProposal.getId()).orElseThrow(EntityNotFoundException::new);\n+        assertThat(proposal.getStatus().getId()).isEqualTo(PUBLISHED.getId());\n+    }\n+\n+    @Test\n+    void return_404_when_changing_to_inadequate_a_non_existing_proposal() throws Exception {\n+        testData.createCredential(\"revisor@huellapositiva.com\", UUID.randomUUID(), DEFAULT_PASSWORD, Roles.REVISER);\n+        JwtResponseDto jwtResponseDto = loginAndGetJwtTokens(mvc, \"revisor@huellapositiva.com\", DEFAULT_PASSWORD);\n+        ChangeToInadequateDto dto = ChangeToInadequateDto.builder()\n+                .proposalId(\"999\")\n+                .reason(\"Pandemia\")\n+                .build();\n+\n+        mvc.perform(post(FETCH_PROPOSAL_URI + \"changeStatusToInadequate\")\n+                .header(HttpHeaders.AUTHORIZATION, \"Bearer \" + jwtResponseDto.getAccessToken())\n+                .content(objectMapper.writeValueAsString(dto))\n+                .contentType(MediaType.APPLICATION_JSON)\n+                .with(csrf())\n+                .accept(MediaType.APPLICATION_JSON))\n+                .andExpect(status().isNotFound());\n+\n+    }\n }\n\\ No newline at end of file"
  }
]
