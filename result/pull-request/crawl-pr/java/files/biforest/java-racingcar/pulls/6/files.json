[
  {
    "sha": "6aac0897e07c7efcfbca7117bc9c3c607b428ebb",
    "filename": "src/main/java/Application.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/biforest/java-racingcar/blob/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/Application.java",
    "raw_url": "https://github.com/biforest/java-racingcar/raw/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/Application.java",
    "contents_url": "https://api.github.com/repos/biforest/java-racingcar/contents/src/main/java/Application.java?ref=3887b57aff1a569fb9bfbd0c748e67e75cd77685",
    "patch": "@@ -0,0 +1,14 @@\n+import domain.CarFactory;\n+import domain.RacingCarGame;\n+import ui.Receiver;\n+\n+public class Application {\n+    public static void main(String[] args) {\n+        Receiver receiver = new Receiver();\n+        CarFactory carFactory = new CarFactory(receiver.getCarNames());\n+        RacingCarGame racingCarGame = new RacingCarGame(carFactory.getCars(), receiver.getRound());\n+\n+        racingCarGame.proceedRounds();\n+        racingCarGame.printWinners();\n+    }\n+}"
  },
  {
    "sha": "2797eafd3c2235e54c8a7c5abc6d6a5e400aabb6",
    "filename": "src/main/java/domain/Car.java",
    "status": "modified",
    "additions": 30,
    "deletions": 2,
    "changes": 32,
    "blob_url": "https://github.com/biforest/java-racingcar/blob/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/domain/Car.java",
    "raw_url": "https://github.com/biforest/java-racingcar/raw/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/domain/Car.java",
    "contents_url": "https://api.github.com/repos/biforest/java-racingcar/contents/src/main/java/domain/Car.java?ref=3887b57aff1a569fb9bfbd0c748e67e75cd77685",
    "patch": "@@ -1,12 +1,40 @@\n package domain;\n \n-public class Car {\n+import domain.exception.NotBlankException;\n+\n+public class Car implements Comparable<Car> {\n     private final String name;\n     private int position = 0;\n \n     public Car(String name) {\n         this.name = name;\n+        validateName();\n+    }\n+\n+    public void moveForward() {\n+        position += 1;\n+    }\n+\n+    private void validateName() {\n+        if (name.length() > 5) {\n+            throw new IllegalArgumentException(name + \": 자동차 이름은 5글자 이하여야 합니다.\");\n+        }\n+\n+        if (name.isBlank()) {\n+            throw new NotBlankException(\"공백으로만 이루어진 이름을 생성할 수 없습니다.\");\n+        }\n     }\n \n-    // 추가 기능 구현\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public int getPosition() {\n+        return position;\n+    }\n+\n+    @Override\n+    public int compareTo(Car o) {\n+        return o.position - position;\n+    }\n }"
  },
  {
    "sha": "8a2f71f4ce49c9513e53de9eb2cf44b151325443",
    "filename": "src/main/java/domain/CarFactory.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/biforest/java-racingcar/blob/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/domain/CarFactory.java",
    "raw_url": "https://github.com/biforest/java-racingcar/raw/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/domain/CarFactory.java",
    "contents_url": "https://api.github.com/repos/biforest/java-racingcar/contents/src/main/java/domain/CarFactory.java?ref=3887b57aff1a569fb9bfbd0c748e67e75cd77685",
    "patch": "@@ -0,0 +1,34 @@\n+package domain;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class CarFactory {\n+    public static final String COMMA = \",\";\n+    public static final String BLANK = \" \";\n+    private final List<Car> cars;\n+    private final String[] carNames;\n+\n+    public CarFactory(String input) {\n+        this.carNames = splitCarNames(input);\n+        cars = createCars();\n+    }\n+\n+    private String[] splitCarNames(String input) {\n+        String s = input.replaceAll(BLANK, \"\");\n+        return s.split(COMMA);\n+    }\n+\n+    private List<Car> createCars() {\n+        List<Car> cars = new ArrayList<>();\n+        for (String carName : carNames) {\n+            cars.add(new Car(carName));\n+        }\n+\n+        return cars;\n+    }\n+\n+    public List<Car> getCars() {\n+        return cars;\n+    }\n+}"
  },
  {
    "sha": "6ee8ae7288e00a5c2eadaa50bddce5f822ffc735",
    "filename": "src/main/java/domain/RacingCarGame.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/biforest/java-racingcar/blob/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/domain/RacingCarGame.java",
    "raw_url": "https://github.com/biforest/java-racingcar/raw/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/domain/RacingCarGame.java",
    "contents_url": "https://api.github.com/repos/biforest/java-racingcar/contents/src/main/java/domain/RacingCarGame.java?ref=3887b57aff1a569fb9bfbd0c748e67e75cd77685",
    "patch": "@@ -0,0 +1,72 @@\n+package domain;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+import utils.RandomUtils;\n+\n+public class RacingCarGame {\n+    private static final String RESULT_START_MESSAGE = \"\\n실행 결과\";\n+    private static final String RESULT_END_MESSAGE = \"가 최종 우승했습니다.\";\n+    private static final String COLON = \" : \";\n+    private static final String DASH = \"-\";\n+    private final List<Car> cars;\n+    private final int round;\n+\n+    public RacingCarGame(List<Car> cars, int round) {\n+        this.cars = cars;\n+        this.round = round;\n+    }\n+\n+    private int makeRandomValue() {\n+        return RandomUtils.nextInt(0, 9);\n+    }\n+\n+    private void movePosition(int idx) {\n+        int randomValue = makeRandomValue();\n+        if (randomValue >= 4) {\n+            cars.get(idx).moveForward();\n+        }\n+    }\n+\n+    private void proceedOneRound() {\n+        for (int idx = 0; idx < cars.size(); idx++) {\n+            movePosition(idx);\n+        }\n+    }\n+\n+    public void proceedRounds() {\n+        System.out.println(RESULT_START_MESSAGE);\n+        for (int r = 0; r < round; r++) {\n+            proceedOneRound();\n+            printCurrentPositions();\n+        }\n+    }\n+\n+    private void printCurrentPositions() {\n+        for (Car car : cars) {\n+            System.out.print(car.getName() + COLON);\n+\n+            for (int j = 0; j < car.getPosition(); j++) {\n+                System.out.print(DASH);\n+            }\n+            System.out.println();\n+        }\n+        System.out.println();\n+    }\n+\n+    public void printWinners() {\n+        Collections.sort(cars);\n+\n+        int max = cars.get(0).getPosition();\n+        System.out.print(cars.get(0).getName());\n+\n+        for (int i = 1; i < cars.size(); i++) {\n+            if (cars.get(i).getPosition() < max) {\n+                break;\n+            }\n+            System.out.print(\", \" + cars.get(i).getName());\n+        }\n+        System.out.println(RESULT_END_MESSAGE);\n+    }\n+}"
  },
  {
    "sha": "22740bb42db793c55e94d6c7d70bc53e495119e6",
    "filename": "src/main/java/domain/exception/NotBlankException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/biforest/java-racingcar/blob/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/domain/exception/NotBlankException.java",
    "raw_url": "https://github.com/biforest/java-racingcar/raw/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/domain/exception/NotBlankException.java",
    "contents_url": "https://api.github.com/repos/biforest/java-racingcar/contents/src/main/java/domain/exception/NotBlankException.java?ref=3887b57aff1a569fb9bfbd0c748e67e75cd77685",
    "patch": "@@ -0,0 +1,7 @@\n+package domain.exception;\n+\n+public class NotBlankException extends IllegalArgumentException {\n+    public NotBlankException(String s) {\n+        super(s);\n+    }\n+}"
  },
  {
    "sha": "625944d3067338ceac7205ffc2a099f3cfb556c4",
    "filename": "src/main/java/ui/Receiver.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/biforest/java-racingcar/blob/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/ui/Receiver.java",
    "raw_url": "https://github.com/biforest/java-racingcar/raw/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/ui/Receiver.java",
    "contents_url": "https://api.github.com/repos/biforest/java-racingcar/contents/src/main/java/ui/Receiver.java?ref=3887b57aff1a569fb9bfbd0c748e67e75cd77685",
    "patch": "@@ -0,0 +1,35 @@\n+package ui;\n+\n+import java.util.Scanner;\n+\n+public class Receiver {\n+    public static final String REQUEST_CAR_NAME = \"경주할 자동차 이름을 입력하세요.(이름은 쉼표(,) 기준으로 구분)\";\n+    public static final String REQUEST_ROUND = \"시도할 횟수는 몇회인가요?\";\n+    private static final Scanner scanner = new Scanner(System.in);\n+\n+    private String carNames;\n+    private int round;\n+\n+    public Receiver() {\n+        receiveCarNames();\n+        receiveRound();\n+    }\n+\n+    private void receiveCarNames() {\n+        System.out.println(REQUEST_CAR_NAME);\n+        carNames = scanner.nextLine();\n+    }\n+\n+    private void receiveRound() {\n+        System.out.println(REQUEST_ROUND);\n+        round = scanner.nextInt();\n+    }\n+\n+    public String getCarNames() {\n+        return carNames;\n+    }\n+\n+    public int getRound() {\n+        return round;\n+    }\n+}"
  },
  {
    "sha": "63ba351df8b1e34dba79d7e93df6cf6cf649e325",
    "filename": "src/main/java/utils/RandomUtils.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/biforest/java-racingcar/blob/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/utils/RandomUtils.java",
    "raw_url": "https://github.com/biforest/java-racingcar/raw/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/main/java/utils/RandomUtils.java",
    "contents_url": "https://api.github.com/repos/biforest/java-racingcar/contents/src/main/java/utils/RandomUtils.java?ref=3887b57aff1a569fb9bfbd0c748e67e75cd77685",
    "patch": "@@ -0,0 +1,26 @@\n+package utils;\n+\n+import java.util.Random;\n+\n+public class RandomUtils {\n+    private static final Random RANDOM = new Random();\n+\n+    private RandomUtils() {\n+    }\n+\n+    public static int nextInt(final int startInclusive, final int endInclusive) {\n+        if (startInclusive > endInclusive) {\n+            throw new IllegalArgumentException();\n+        }\n+\n+        if (startInclusive < 0) {\n+            throw new IllegalArgumentException();\n+        }\n+\n+        if (startInclusive == endInclusive) {\n+            return startInclusive;\n+        }\n+\n+        return startInclusive + RANDOM.nextInt(endInclusive - startInclusive + 1);\n+    }\n+}"
  },
  {
    "sha": "78aa889365e7aa8fab84c29278acb4ef184aab50",
    "filename": "src/test/java/domain/CarFactoryTest.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/biforest/java-racingcar/blob/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/test/java/domain/CarFactoryTest.java",
    "raw_url": "https://github.com/biforest/java-racingcar/raw/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/test/java/domain/CarFactoryTest.java",
    "contents_url": "https://api.github.com/repos/biforest/java-racingcar/contents/src/test/java/domain/CarFactoryTest.java?ref=3887b57aff1a569fb9bfbd0c748e67e75cd77685",
    "patch": "@@ -0,0 +1,23 @@\n+package domain;\n+\n+import java.util.List;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+public class CarFactoryTest {\n+\n+    private CarFactory carFactory;\n+    private String input = \" lee, chan, gyu \";\n+\n+    @Test\n+    public void 차를_생성한다() throws Exception {\n+        carFactory = new CarFactory(input);\n+\n+        List<Car> cars = carFactory.getCars();\n+\n+        Assertions.assertThat(cars.get(0).getName()).isEqualTo(\"lee\");\n+        Assertions.assertThat(cars.get(1).getName()).isEqualTo(\"chan\");\n+        Assertions.assertThat(cars.get(2).getName()).isEqualTo(\"gyu\");\n+    }\n+}"
  },
  {
    "sha": "8de9d5a028df39f733aff776f731e32d7195cf12",
    "filename": "src/test/java/domain/CarTest.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/biforest/java-racingcar/blob/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/test/java/domain/CarTest.java",
    "raw_url": "https://github.com/biforest/java-racingcar/raw/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/test/java/domain/CarTest.java",
    "contents_url": "https://api.github.com/repos/biforest/java-racingcar/contents/src/test/java/domain/CarTest.java?ref=3887b57aff1a569fb9bfbd0c748e67e75cd77685",
    "patch": "@@ -0,0 +1,41 @@\n+package domain;\n+\n+import static org.assertj.core.api.Assertions.*;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import domain.exception.NotBlankException;\n+\n+public class CarTest {\n+\n+    private Car car;\n+\n+    @Test\n+    public void moveForward() throws Exception {\n+        String name = \"green\";\n+\n+        car = new Car(name);\n+        car.moveForward();\n+        car.moveForward();\n+\n+        assertThat(car.getPosition()).isEqualTo(2);\n+    }\n+\n+    @Test\n+    public void 이름이_공백인_경우_NotBlankException을_던진다() {\n+        String name = \" \";\n+\n+        assertThatThrownBy(() -> new Car(name))\n+                .isInstanceOf(NotBlankException.class)\n+                .hasMessageContaining(\"공백으로만 이루어진 이름을 생성할 수 없습니다.\");\n+    }\n+\n+    @Test\n+    public void 이름이_5글자_이상인_경우_Exception을_던진다() throws Exception {\n+        String name = \"softee\";\n+\n+        assertThatThrownBy(() -> new Car(name))\n+                .isInstanceOf(IllegalArgumentException.class)\n+                .hasMessageContaining(\"자동차 이름은 5글자 이하여야 합니다.\");\n+    }\n+}"
  },
  {
    "sha": "b880b32ffa7d811dc3fd8508fdd66bc30d78357c",
    "filename": "src/test/java/domain/RacingCarGameTest.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/biforest/java-racingcar/blob/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/test/java/domain/RacingCarGameTest.java",
    "raw_url": "https://github.com/biforest/java-racingcar/raw/3887b57aff1a569fb9bfbd0c748e67e75cd77685/src/test/java/domain/RacingCarGameTest.java",
    "contents_url": "https://api.github.com/repos/biforest/java-racingcar/contents/src/test/java/domain/RacingCarGameTest.java?ref=3887b57aff1a569fb9bfbd0c748e67e75cd77685",
    "patch": "@@ -0,0 +1,39 @@\n+package domain;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+class RacingCarGameTest {\n+\n+    private RacingCarGame racingCarGame;\n+\n+    @BeforeEach\n+    void setUp() {\n+        int round = 5;\n+        List<Car> cars = new ArrayList<>();\n+        cars.add(new Car(\"lee\"));\n+        cars.add(new Car(\"chan\"));\n+        cars.add(new Car(\"gyu\"));\n+\n+        racingCarGame = new RacingCarGame(cars, round);\n+    }\n+\n+    @Test\n+    public void 라운드를_진행한다() throws Exception {\n+        racingCarGame.proceedRounds();\n+    }\n+\n+    @Test\n+    public void 우승자를_정한다() throws Exception {\n+        //given\n+        racingCarGame.proceedRounds();\n+\n+        //when\n+        racingCarGame.printWinners();\n+    }\n+}\n\\ No newline at end of file"
  }
]
