[
  {
    "sha": "f2e0cea57e400909ee0523350c9bcd52ee52f1d8",
    "filename": "LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Application.java",
    "status": "modified",
    "additions": 30,
    "deletions": 3,
    "changes": 33,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/a9e121fa8e42357712b2e74ad1b72eef405812f4/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Application.java",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/a9e121fa8e42357712b2e74ad1b72eef405812f4/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Application.java",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Application.java?ref=a9e121fa8e42357712b2e74ad1b72eef405812f4",
    "patch": "@@ -14,9 +14,14 @@\n import java.io.StringWriter;\n import java.io.Writer;\n import java.net.URISyntaxException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n \n+\n /**\n  *\n  * @author Olivier Liechti\n@@ -92,6 +97,7 @@ public void fetchAndStoreQuotes(int numberOfQuotes) throws IOException {\n         e.printStackTrace();\n       }\n       if (quote != null) {\n+        storeQuote(quote, \"quotes-\" + i + \".utf8\");\n         /* There is a missing piece here!\n          * As you can see, this method handles the first part of the lab. It uses the web service\n          * client to fetch quotes. We have removed a single line from this method. It is a call to\n@@ -133,9 +139,23 @@ void clearOutputDirectory() throws IOException {\n    * @throws IOException \n    */\n   void storeQuote(Quote quote, String filename) throws IOException {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    List<String> tags = quote.getTags();\n+    String folder_name = \"/\";\n+    for (String tag : tags) {\n+      folder_name += tag + \"/\";\n+    }\n+    String quote_text = quote.getQuote();\n+    Path path = Paths.get(folder_name);\n+    try {\n+      Files.createDirectories(path);\n+    } catch (IOException e) {\n+      System.err.println(\"Failed to create repositories\");\n+    }\n+    File my_quote = new File(\"./quotes/\"+folder_name + filename);\n+    FileUtils.writeStringToFile(my_quote, quote_text, \"UTF-8\");\n+\n   }\n-  \n+\n   /**\n    * This method uses a IFileExplorer to explore the file system and prints the name of each\n    * encountered file and directory.\n@@ -144,7 +164,14 @@ void printFileNames(final Writer writer) {\n     IFileExplorer explorer = new DFSFileExplorer();\n     explorer.explore(new File(WORKSPACE_DIRECTORY), new IFileVisitor() {\n       @Override\n-      public void visit(File file) {\n+      public void visit(File file)  {\n+\n+        try {\n+          writer.write(file.getName());\n+        }\n+        catch(IOException e) {\n+          System.err.println(\"Invalid File\");\n+        }\n         /*\n          * There is a missing piece here. Notice how we use an anonymous class here. We provide the implementation\n          * of the the IFileVisitor interface inline. You just have to add the body of the visit method, which should"
  },
  {
    "sha": "42db5d607a72e084fce1c98b6de1c002f667741e",
    "filename": "LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Utils.java",
    "status": "modified",
    "additions": 26,
    "deletions": 1,
    "changes": 27,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/a9e121fa8e42357712b2e74ad1b72eef405812f4/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Utils.java",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/a9e121fa8e42357712b2e74ad1b72eef405812f4/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Utils.java",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Utils.java?ref=a9e121fa8e42357712b2e74ad1b72eef405812f4",
    "patch": "@@ -20,7 +20,32 @@\n    * contain any line separator, then the first element is an empty string.\n    */\n   public static String[] getNextLine(String lines) {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    char lsMac = '\\r';\n+    char lsUnix = '\\n';\n+    String lsWindows = \"\\r\\n\";\n+    String[] result = new String[2];\n+    int index;\n+    //Check for \\r\\n\n+    if ( (index = lines.indexOf(lsWindows)) != -1) {\n+      result[0] = lines.substring(0, index+2);\n+      result[1] = lines.substring(index+2);\n+    }\n+    //check for \\r\n+    else if ((index = lines.indexOf(lsMac)) != -1) {\n+      result[0] = lines.substring(0, index+1);\n+      result[1] = lines.substring(index+1);\n+    }\n+    //check for \\n\n+    else if ((index = lines.indexOf(lsUnix)) != -1) {\n+      result[0] = lines.substring(0, index+1);\n+      result[1] = lines.substring(index+1);\n+    }\n+    //No line separators\n+    else {\n+      result[0] = \"\";\n+      result[1] = lines;\n+    }\n+    return result;\n   }\n \n }"
  },
  {
    "sha": "1c541d4771395f7021a40aafa97a94b2d53dbda8",
    "filename": "LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/FileNumberingFilterWriter.java",
    "status": "modified",
    "additions": 24,
    "deletions": 2,
    "changes": 26,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/a9e121fa8e42357712b2e74ad1b72eef405812f4/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/FileNumberingFilterWriter.java",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/a9e121fa8e42357712b2e74ad1b72eef405812f4/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/FileNumberingFilterWriter.java",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/FileNumberingFilterWriter.java?ref=a9e121fa8e42357712b2e74ad1b72eef405812f4",
    "patch": "@@ -1,5 +1,8 @@\n package ch.heigvd.res.labio.impl.filters;\n \n+import ch.heigvd.res.labio.impl.Utils;\n+import jdk.jshell.execution.Util;\n+\n import java.io.FilterWriter;\n import java.io.IOException;\n import java.io.Writer;\n@@ -25,17 +28,36 @@ public FileNumberingFilterWriter(Writer out) {\n \n   @Override\n   public void write(String str, int off, int len) throws IOException {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    int count = 1;\n+    String lines[] = Utils.getNextLine(str);\n+    while (lines[0] != \"\") {\n+      out.write(count +\"\\t\" + lines[0]);\n+      count += 1;\n+      lines = Utils.getNextLine(lines[1]);\n+    }\n+    if (lines[1] != \"\") {\n+      out.write(count + \"\\t\" + lines[1]);\n+    }\n   }\n \n   @Override\n   public void write(char[] cbuf, int off, int len) throws IOException {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    int count = 1;\n+    String lines[] = Utils.getNextLine(cbuf.toString());\n+    while (lines[0] != \"\") {\n+      out.write(count + \"\\t\" + lines[0]);\n+      count += 1;\n+      lines = Utils.getNextLine(lines[1]);\n+    }\n+    if (lines[1] != \"\") {\n+      out.write(count + \"\\t\" + lines[1]);\n+    }\n   }\n \n   @Override\n   public void write(int c) throws IOException {\n     throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n   }\n \n+\n }"
  },
  {
    "sha": "234ff64d55668d4e8227e07e98f9d9b4ef2d2e74",
    "filename": "LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/UpperCaseFilterWriter.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/a9e121fa8e42357712b2e74ad1b72eef405812f4/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/UpperCaseFilterWriter.java",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/a9e121fa8e42357712b2e74ad1b72eef405812f4/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/UpperCaseFilterWriter.java",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/UpperCaseFilterWriter.java?ref=a9e121fa8e42357712b2e74ad1b72eef405812f4",
    "patch": "@@ -16,17 +16,17 @@ public UpperCaseFilterWriter(Writer wrappedWriter) {\n \n   @Override\n   public void write(String str, int off, int len) throws IOException {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    out.write(str.toUpperCase(), off, len);\n   }\n \n   @Override\n   public void write(char[] cbuf, int off, int len) throws IOException {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    out.write(String.copyValueOf(cbuf).toUpperCase(), off, len);\n   }\n \n   @Override\n   public void write(int c) throws IOException {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    out.write(Character.toUpperCase((char) c));\n   }\n \n }"
  },
  {
    "sha": "fe2d01e9ea073deff9d4680c15bab733976efa7a",
    "filename": "README.md",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/a9e121fa8e42357712b2e74ad1b72eef405812f4/README.md",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/a9e121fa8e42357712b2e74ad1b72eef405812f4/README.md",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/README.md?ref=a9e121fa8e42357712b2e74ad1b72eef405812f4",
    "patch": "@@ -2,7 +2,7 @@\n \n ### About the 2021 version of this lab\n \n-We did not change the 2019 version. However, read the paragraph below to be aware of some differences between the project structure in the webcasts and what you will see this year in your IDE.\n+We did not change the 2019 version. However, read the paragraph below to be aware of some differences between the project structure in the webcasts and whatt you will see this year in your IDE.\n \n ### About the 2019 version of this lab\n \n@@ -15,7 +15,7 @@ We changed the project structure. In previous editions, there was a \"test\" proje\n For this lab, we will try the following workflow:\n * create a branch for the entire lab (you call it \"dev\", \"lab\" or whatever you want)\n * commit code as soon as possible and push the branch to your fork\n-* open a PR. In the name of the PR, start with `[WIP] `. This makes it easy for us to see that you are still working on the lab (Work In Progress) \n+* open a PR. In the name of the PR, start with `[WIP] `. This makes it easy for us to see that you are still working on the lab (Work In Progress)\n * even if tests are still red, we have a communication space while you work on the lab\n * whenever you push a new commit, we will be able to see it (and possibly to comment it)\n * at some point, all your tests will be green: you can then signal that you are done; for that, change the name of your PR. Replace `[WIP] ` with `[TOREVIEW] `.\n@@ -57,7 +57,7 @@ If your application is fully implemented you should have the following result on\n \n ```\n [INFO] Scanning for projects...\n-[INFO] \n+[INFO]\n [INFO] --------------------< ch.heigvd.res.io:lab-java-io >--------------------\n [INFO] Building RES Lab Java IO 1.0-SNAPSHOT\n [INFO] --------------------------------[ jar ]---------------------------------\n@@ -66,9 +66,9 @@ If your application is fully implemented you should have the following result on\n \n [INFO] Running ch.heigvd.res.labio.impl.explorers.DFSFileExplorerTest\n [INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.15 s - in ch.heigvd.res.labio.impl.explorers.DFSFileExplorerTest\n-[INFO] \n+[INFO]\n [INFO] Results:\n-[INFO] \n+[INFO]\n [INFO] Tests run: 27, Failures: 0, Errors: 0, Skipped: 0\n \n ... (skipping some of the log output)"
  }
]
