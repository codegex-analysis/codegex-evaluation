[
  {
    "sha": "bfd7719aefe7b754aff3e4e6c863c6b82178f3f6",
    "filename": "LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Application.java",
    "status": "modified",
    "additions": 32,
    "deletions": 5,
    "changes": 37,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Application.java",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Application.java",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Application.java?ref=dbf7202b19333a193695afd914dd69e0436c1f25",
    "patch": "@@ -9,11 +9,9 @@\n import ch.heigvd.res.labio.quotes.QuoteClient;\n import org.apache.commons.io.FileUtils;\n \n-import java.io.File;\n-import java.io.IOException;\n-import java.io.StringWriter;\n-import java.io.Writer;\n+import java.io.*;\n import java.net.URISyntaxException;\n+import java.util.List;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n \n@@ -98,6 +96,8 @@ public void fetchAndStoreQuotes(int numberOfQuotes) throws IOException {\n          * one method provided by this class, which is responsible for storing the content of the\n          * quote in a text file (and for generating the directories based on the tags).\n          */\n+\n+        storeQuote(quote, \"quote-\" + i + \".utf8\");\n         LOG.info(\"Received a new joke with \" + quote.getTags().size() + \" tags.\");\n         for (String tag : quote.getTags()) {\n           LOG.info(\"> \" + tag);\n@@ -133,7 +133,25 @@ void clearOutputDirectory() throws IOException {\n    * @throws IOException \n    */\n   void storeQuote(Quote quote, String filename) throws IOException {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+\n+    //Create quotes directory if it doesn't exists\n+    StringBuilder filePath = new StringBuilder(WORKSPACE_DIRECTORY);\n+    List<String> tags = quote.getTags();\n+    for(String s : tags)\n+    {\n+      filePath.append('/').append(s);\n+    }\n+\n+    filePath.append('/').append(filename);\n+    File newQuote = new File(filePath.toString());\n+    newQuote.getParentFile().mkdirs();\n+    newQuote.createNewFile();\n+    BufferedWriter writer = new BufferedWriter(new FileWriter(newQuote));\n+    writer.write(quote.getQuote());\n+    writer.close();\n+\n+\n+    //throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n   }\n   \n   /**\n@@ -145,11 +163,20 @@ void printFileNames(final Writer writer) {\n     explorer.explore(new File(WORKSPACE_DIRECTORY), new IFileVisitor() {\n       @Override\n       public void visit(File file) {\n+        try\n+        {\n+          writer.write(file.getPath() + \"\\n\");\n+        }\n+        catch (IOException ignored)\n+        {\n+\n+        }\n         /*\n          * There is a missing piece here. Notice how we use an anonymous class here. We provide the implementation\n          * of the the IFileVisitor interface inline. You just have to add the body of the visit method, which should\n          * be pretty easy (we want to write the filename, including the path, to the writer passed in argument).\n          */\n+\n       }\n     });\n   }"
  },
  {
    "sha": "5a05b48ae13e8c64a2b5fdd3a4ba3fa0c8e21d9e",
    "filename": "LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Utils.java",
    "status": "modified",
    "additions": 35,
    "deletions": 15,
    "changes": 50,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Utils.java",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Utils.java",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/Utils.java?ref=dbf7202b19333a193695afd914dd69e0436c1f25",
    "patch": "@@ -1,26 +1,46 @@\n package ch.heigvd.res.labio.impl;\n \n import java.util.logging.Logger;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n \n /**\n- *\n  * @author Olivier Liechti\n  */\n public class Utils {\n \n-  private static final Logger LOG = Logger.getLogger(Utils.class.getName());\n-\n-  /**\n-   * This method looks for the next new line separators (\\r, \\n, \\r\\n) to extract\n-   * the next line in the string passed in arguments. \n-   * \n-   * @param lines a string that may contain 0, 1 or more lines\n-   * @return an array with 2 elements; the first element is the next line with\n-   * the line separator, the second element is the remaining text. If the argument does not\n-   * contain any line separator, then the first element is an empty string.\n-   */\n-  public static String[] getNextLine(String lines) {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n-  }\n+    private static final Logger LOG = Logger.getLogger(Utils.class.getName());\n+\n+    /**\n+     * This method looks for the next new line separators (\\r, \\n, \\r\\n) to extract\n+     * the next line in the string passed in arguments.\n+     *\n+     * @param lines a string that may contain 0, 1 or more lines\n+     * @return an array with 2 elements; the first element is the next line with\n+     * the line separator, the second element is the remaining text. If the argument does not\n+     * contain any line separator, then the first element is an empty string.\n+     */\n+    public static String[] getNextLine(String lines) {\n+        String delimiter = \"x\";\n+        if(lines.contains(\"\\n\")) delimiter = \"\\n\";\n+        else if(lines.contains(\"\\r\")) delimiter = \"\\r\";\n+        else if(lines.contains(\"\\r\\n\")) delimiter = \"\\r\\n\";\n+\n+        String[] output = new String[]{\"\", \"\"};\n+\n+        Pattern p = Pattern.compile(delimiter);\n+        Matcher m = p.matcher(lines);\n+        int delimiterIndex = 0;\n+        if(m.find())\n+        {\n+            delimiterIndex = m.end();\n+            output[0] = lines.substring(0, delimiterIndex);\n+        }\n+        output[1] = lines.substring(delimiterIndex);\n+\n+        return output;\n+\n+        //throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    }\n \n }"
  },
  {
    "sha": "498e0386d112da524876867e56c7564cf1953c4b",
    "filename": "LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/explorers/DFSFileExplorer.java",
    "status": "modified",
    "additions": 13,
    "deletions": 1,
    "changes": 14,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/explorers/DFSFileExplorer.java",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/explorers/DFSFileExplorer.java",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/explorers/DFSFileExplorer.java?ref=dbf7202b19333a193695afd914dd69e0436c1f25",
    "patch": "@@ -17,7 +17,19 @@\n \n   @Override\n   public void explore(File rootDirectory, IFileVisitor vistor) {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    File[] filesList = rootDirectory.listFiles();\n+    vistor.visit(rootDirectory);\n+    if(filesList != null)\n+    {\n+      for(File f : filesList)\n+      {\n+          explore(f, vistor);\n+      }\n+    }\n+\n+\n+\n+    //throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n   }\n \n }"
  },
  {
    "sha": "6931f1d5e60b862dd7b1599ba82a3c549435b017",
    "filename": "LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/UpperCaseFilterWriter.java",
    "status": "modified",
    "additions": 19,
    "deletions": 3,
    "changes": 22,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/UpperCaseFilterWriter.java",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/UpperCaseFilterWriter.java",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/filters/UpperCaseFilterWriter.java?ref=dbf7202b19333a193695afd914dd69e0436c1f25",
    "patch": "@@ -16,17 +16,33 @@ public UpperCaseFilterWriter(Writer wrappedWriter) {\n \n   @Override\n   public void write(String str, int off, int len) throws IOException {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    String output = str.substring(off, off + len);\n+    output = output.toUpperCase();\n+    super.write(output, 0, output.length());\n+\n+    //throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n   }\n \n   @Override\n   public void write(char[] cbuf, int off, int len) throws IOException {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    char[] output = new char[cbuf.length];\n+    for(int i = 0; i < cbuf.length; i++)\n+    {\n+      output[i] = Character.toUpperCase(cbuf[i]);\n+    }\n+    super.write(output, off, len);\n+\n+    //throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n   }\n \n   @Override\n   public void write(int c) throws IOException {\n-    throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n+    char input = (char) c;\n+    char output = Character.toUpperCase(input);\n+    super.write(output);\n+\n+\n+    //throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n   }\n \n }"
  },
  {
    "sha": "7d3ccb15dd60efb2ab862d3e68976446a9161225",
    "filename": "LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/transformers/CompleteFileTransformer.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/transformers/CompleteFileTransformer.java",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/transformers/CompleteFileTransformer.java",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/LabJavaIO/src/main/java/ch/heigvd/res/labio/impl/transformers/CompleteFileTransformer.java?ref=dbf7202b19333a193695afd914dd69e0436c1f25",
    "patch": "@@ -15,7 +15,7 @@\n \n   @Override\n   public Writer decorateWithFilters(Writer writer) {\n-    if (true) {\n+    if (false) {\n       throw new UnsupportedOperationException(\"The student has not implemented this method yet.\");\n     }\n     /*"
  },
  {
    "sha": "fd3e909c73052e68e742d97cf238510766b84125",
    "filename": "LabJavaIO/src/main/java/ch/heigvd/res/labio/quotes/QuoteClient.java",
    "status": "modified",
    "additions": 26,
    "deletions": 3,
    "changes": 29,
    "blob_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/blob/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/quotes/QuoteClient.java",
    "raw_url": "https://github.com/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/raw/dbf7202b19333a193695afd914dd69e0436c1f25/LabJavaIO/src/main/java/ch/heigvd/res/labio/quotes/QuoteClient.java",
    "contents_url": "https://api.github.com/repos/SoftEng-HEIGVD/https-github.com-SoftEng-HEIGVD-Teaching-HEIGVD-RES-2021-Labo-Java-IO/contents/LabJavaIO/src/main/java/ch/heigvd/res/labio/quotes/QuoteClient.java?ref=dbf7202b19333a193695afd914dd69e0436c1f25",
    "patch": "@@ -22,27 +22,50 @@\n  */\n public class QuoteClient {\n \n+  ObjectMapper om = new ObjectMapper();\n+\n+  HttpRequest request;\n+  HttpClient client;\n+\n   /*\n    * This has changed in the 2016 version of the lab. We were using the \"itheardquotes\" API, which is now down. We have\n    * replaced it with another API that generates random jokes.\n    */\n   static String WEB_SERVICE_ENDPOINT = \"http://api.icndb.com/jokes/random?firstName=Olivier&lastName=Liechti&escape=javascript\";\n \n+\n+  public QuoteClient() {\n+    try {\n+      request = HttpRequest.newBuilder()\n+              .GET()\n+              .uri(new URI(WEB_SERVICE_ENDPOINT))\n+              .header(\"Accept\", \"application/json\")\n+              .build();\n+    }\n+    catch (Exception e)\n+    {\n+      throw new Error();\n+    }\n+    client = HttpClient.newBuilder().build();\n+\n+  }\n+\n   /**\n    * Use this method to invoke the iheartquotes.com web service and receive\n    * an instance of a Quote.\n    *\n    * @return an instance of Quote, with values provided by the web service\n    */\n+\n   public Quote fetchQuote() throws URISyntaxException, IOException, InterruptedException {\n     // Use JAVA 11 http client and request feature\n-    HttpRequest request = HttpRequest.newBuilder()\n+    /*HttpRequest request = HttpRequest.newBuilder()\n             .GET()\n             .uri(new URI(WEB_SERVICE_ENDPOINT))\n             .header(\"Accept\", \"application/json\")\n-            .build();\n+            .build();*/\n \n-    HttpClient client = HttpClient.newBuilder().build();\n+    //HttpClient client = HttpClient.newBuilder().build();\n \n     // Make the call to the API and map the response body to a Quote object\n     return new ObjectMapper().readValue(client.send(request, HttpResponse.BodyHandlers.ofString()).body(), Quote.class);"
  }
]
