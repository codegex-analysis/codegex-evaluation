[
  {
    "sha": "11d7f4051dce03b8af82c737767e29a0793121b1",
    "filename": "store/src/java/com/zimbra/cs/mailbox/util/MetadataDump.java",
    "status": "modified",
    "additions": 10,
    "deletions": 22,
    "changes": 32,
    "blob_url": "https://github.com/Zimbra/zm-mailbox/blob/21cc487de020c7eb87a4aef2d73d07441a95e4bb/store/src/java/com/zimbra/cs/mailbox/util/MetadataDump.java",
    "raw_url": "https://github.com/Zimbra/zm-mailbox/raw/21cc487de020c7eb87a4aef2d73d07441a95e4bb/store/src/java/com/zimbra/cs/mailbox/util/MetadataDump.java",
    "contents_url": "https://api.github.com/repos/Zimbra/zm-mailbox/contents/store/src/java/com/zimbra/cs/mailbox/util/MetadataDump.java?ref=21cc487de020c7eb87a4aef2d73d07441a95e4bb",
    "patch": "@@ -16,10 +16,11 @@\n  */\n package com.zimbra.cs.mailbox.util;\n \n-import java.io.File;\n-import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.PrintStream;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.ResultSetMetaData;\n@@ -32,7 +33,6 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n-import java.util.Scanner;\n \n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.CommandLineParser;\n@@ -147,7 +147,7 @@ void print(PrintStream ps) throws ServiceException {\n                     int itemId = Integer.parseInt(itemIdStr);\n                     String dir = vol.getBlobDir(mboxId, itemId);\n                     String modContent = mMap.get(\"mod_content\");\n-                    String blobPath = dir + File.separator + itemIdStr + \"-\" + modContent + \".msg\";\n+                    String blobPath = dir + FileSystems.getDefault().getSeparator() + itemIdStr + \"-\" + modContent + \".msg\";\n                     ps.println(BLOBPATH_HDR);\n                     ps.println(blobPath);\n                     ps.println();\n@@ -263,23 +263,11 @@ private static Row getItemRow(DbConnection conn, int groupId, int mboxId, int it\n         }\n     }\n \n-    private static String loadFromFile(File file) throws ServiceException {\n+    private static String loadFromFile(Path filepath) throws ServiceException {\n         try {\n-            FileInputStream fis = null;\n-            try {\n-                fis = new FileInputStream(file);\n-                Scanner scan = new Scanner(fis);\n-                StringBuilder builder = new StringBuilder();\n-                while (scan.hasNextLine()) {\n-                    builder.append(scan.nextLine());\n-                }\n-                return builder.toString();\n-            } finally {\n-                if (fis != null)\n-                    fis.close();\n-            }\n+            return new String(Files.readAllBytes(filepath));\n         } catch (IOException e) {\n-            throw ServiceException.FAILURE(\"IOException while reading from \" + file.getAbsolutePath(), e);\n+            throw ServiceException.FAILURE(\"IOException while reading from \" + filepath.toAbsolutePath().toString(), e);\n         }\n     }\n \n@@ -340,9 +328,9 @@ public static void main(String[] args) {\n             // Get data from file.\n             String infileName = cl.getOptionValue(OPT_FILE);\n             if (infileName != null) {\n-                File file = new File(infileName);\n-                if (file.exists()) {\n-                    String encoded = loadFromFile(file);\n+                Path filepath = FileSystems.getDefault().getPath(infileName);\n+                if (Files.exists(filepath)) {\n+                    String encoded = loadFromFile(filepath);\n                     Metadata md = new Metadata(encoded);\n                     String pretty = md.prettyPrint();\n                     out.println(pretty);"
  }
]
