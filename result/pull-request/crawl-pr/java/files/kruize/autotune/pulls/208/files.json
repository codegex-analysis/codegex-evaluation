[
  {
    "sha": "7f0fe162cdcd5f34597707b29a65e4f345035c5d",
    "filename": "tests/autotune_test_yamls/manifests/da/app_autotune_yaml/autotune_other/incomplete-autotune.yaml",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kruize/autotune/blob/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/autotune_test_yamls/manifests/da/app_autotune_yaml/autotune_other/incomplete-autotune.yaml",
    "raw_url": "https://github.com/kruize/autotune/raw/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/autotune_test_yamls/manifests/da/app_autotune_yaml/autotune_other/incomplete-autotune.yaml",
    "contents_url": "https://api.github.com/repos/kruize/autotune/contents/tests/autotune_test_yamls/manifests/da/app_autotune_yaml/autotune_other/incomplete-autotune.yaml?ref=73a0e2342f0bd37afd9cc647f181a0c9a33f951f",
    "previous_filename": "tests/autotune_test_yamls/manifests/da/app_autotune_yaml/other/incomplete-autotune.yaml"
  },
  {
    "sha": "42664779323c5c6309bf3ba3e8825ec9d6a9ae95",
    "filename": "tests/autotune_test_yamls/manifests/da/app_autotune_yaml/autotune_other/invalid-direction-for-slaclass.yaml",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kruize/autotune/blob/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/autotune_test_yamls/manifests/da/app_autotune_yaml/autotune_other/invalid-direction-for-slaclass.yaml",
    "raw_url": "https://github.com/kruize/autotune/raw/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/autotune_test_yamls/manifests/da/app_autotune_yaml/autotune_other/invalid-direction-for-slaclass.yaml",
    "contents_url": "https://api.github.com/repos/kruize/autotune/contents/tests/autotune_test_yamls/manifests/da/app_autotune_yaml/autotune_other/invalid-direction-for-slaclass.yaml?ref=73a0e2342f0bd37afd9cc647f181a0c9a33f951f",
    "previous_filename": "tests/autotune_test_yamls/manifests/da/app_autotune_yaml/other/invalid-direction-for-slaclass.yaml"
  },
  {
    "sha": "d687b2087c56d3ab09ebb6ddca2a4a44ba085a23",
    "filename": "tests/autotune_test_yamls/manifests/da/autotune_config_yaml/autotuneconfig_other/incomplete-autotuneconfig.yaml",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kruize/autotune/blob/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/autotune_test_yamls/manifests/da/autotune_config_yaml/autotuneconfig_other/incomplete-autotuneconfig.yaml",
    "raw_url": "https://github.com/kruize/autotune/raw/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/autotune_test_yamls/manifests/da/autotune_config_yaml/autotuneconfig_other/incomplete-autotuneconfig.yaml",
    "contents_url": "https://api.github.com/repos/kruize/autotune/contents/tests/autotune_test_yamls/manifests/da/autotune_config_yaml/autotuneconfig_other/incomplete-autotuneconfig.yaml?ref=73a0e2342f0bd37afd9cc647f181a0c9a33f951f",
    "previous_filename": "tests/autotune_test_yamls/manifests/da/autotune_config_yaml/other/incomplete-autotuneconfig.yaml"
  },
  {
    "sha": "c577c7cb957c09d58d61f646d094c337bd69b466",
    "filename": "tests/scripts/app_autotune_yaml_constants.sh",
    "status": "modified",
    "additions": 18,
    "deletions": 10,
    "changes": 28,
    "blob_url": "https://github.com/kruize/autotune/blob/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/scripts/app_autotune_yaml_constants.sh",
    "raw_url": "https://github.com/kruize/autotune/raw/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/scripts/app_autotune_yaml_constants.sh",
    "contents_url": "https://api.github.com/repos/kruize/autotune/contents/tests/scripts/app_autotune_yaml_constants.sh?ref=73a0e2342f0bd37afd9cc647f181a0c9a33f951f",
    "patch": "@@ -40,9 +40,6 @@ app_autotune_tests=(\"objective_function\"\n \"label\" \n \"labelvalue\" )\n \n-# other tests for autotune yaml \n-other_tests=(\"other\")\n-\n # tests for objective function \n objective_function_testcases=(\"blank-objective-function\" \n \"invalid-objective-function\" \n@@ -136,7 +133,7 @@ labelvalue_testcases=(\"blank-labelvalue\"\n \"valid-labelvalue\")\n \n # other test cases\n-other_testcases=(\"incomplete-autotune\" \n+autotune_other_testcases=(\"incomplete-autotune\" \n \"invalid-direction-for-slaclass\" )\n \n # Expected autotune object for objective function\n@@ -148,6 +145,7 @@ objective_function_autotune_objects=([blank-objective-function]='true'\n [null-objective-function]='false' \n [numerical-objective-function]='false' \n [valid-objective-function]='true')\n+\n # Expected log message for objective function\n declare -A objective_function_expected_log_msgs\n objective_function_expected_log_msgs=([blank-objective-function]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: function_variable transaction_response_time missing in objective_function' \n@@ -169,6 +167,7 @@ sla_class_autotune_objects=([blank-slaclass]='true'\n [null-slaclass]='true' \n [numerical-slaclass-value]='false' \n [valid-slaclass]='true')\n+\n # Expected log message for sla class\n declare -A sla_class_expected_log_msgs\n sla_class_expected_log_msgs=([blank-slaclass]='com.autotune.dependencyAnalyzer.deployment.AutotuneDeployment - Added autotune object blank-slaclass' \n@@ -190,6 +189,7 @@ direction_autotune_objects=([blank-direction]='true'\n [null-direction]='false' \n [numerical-direction]='false' \n [valid-direction]='true')\n+\n # Expected log message for direction\n declare -A direction_expected_log_msgs\n direction_expected_log_msgs=([blank-direction]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Invalid direction for autotune kind' \n@@ -209,6 +209,7 @@ function_variable_name_autotune_objects=([blank-function-variable-name]='true'\n [null-function-variable-name]='false' \n [numerical-function-variable-name]='false' \n [valid-function-variable-name]='true')\n+\n # Expected log message for function variable name\n declare -A function_variable_name_expected_log_msgs\n function_variable_name_expected_log_msgs=([blank-function-variable-name]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: function_variable   missing in objective_function' \n@@ -228,6 +229,7 @@ function_variable_query_autotune_objects=([blank-function-variable-query]='true'\n [null-function-variable-query]='false' \n [numerical-function-variable-query]='false' \n [valid-function-variable-query]='true')\n+\n # Expected log message for function variable query\n declare -A function_variable_query_expected_log_msgs\n function_variable_query_expected_log_msgs=([blank-function-variable-query]='validation from da' \n@@ -247,6 +249,7 @@ function_variable_datasource_autotune_objects=([blank-function-variable-datasour\n [null-function-variable-datasource]='true' \n [numerical-function-variable-datasource]='false' \n [valid-function-variable-datasource]='true')\n+\n # Expected log message for sla function variable datasource\n declare -A function_variable_datasource_expected_log_msgs\n function_variable_datasource_expected_log_msgs=([blank-function-variable-datasource]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: function_variable: transaction_response_time datasource not supported' \n@@ -266,6 +269,7 @@ function_variable_value_type_autotune_objects=([blank-function-variable-value-ty\n [null-function-variable-value-type]='false' \n [numerical-function-variable-value-type]='false' \n [valid-function-variable-value-type]='true')\n+\n # Expected log message for function variable value type\n declare -A function_variable_value_type_expected_log_msgs\n function_variable_value_type_expected_log_msgs=([blank-function-variable-value-type]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: function_variable: transaction_response_time value_type not supported' \n@@ -285,6 +289,7 @@ mode_autotune_objects=([blank-mode]='true'\n [null-mode]='false' \n [numerical-mode]='false' \n [valid-mode]='true')\n+\n # Expected log message for mode\n declare -A mode_expected_log_msgs\n mode_expected_log_msgs=([blank-mode]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Autotune object mode not supported' \n@@ -304,9 +309,10 @@ label_autotune_objects=([blank-label]='true'\n [null-label]='true' \n [numerical-label]='false' \n [valid-label]='true')\n+\n # Expected log message for label\n declare -A label_expected_log_msgs\n-label_expected_log_msgs=([blank-label]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: label:   not supported' \n+label_expected_log_msgs=([blank-label]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Invalid MatchLabel in selector' \n [invalid-label]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: label:   not supported' \n [no-label]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Invalid MatchLabel' \n [no-label-value]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Invalid MatchLabel' \n@@ -323,9 +329,10 @@ labelvalue_autotune_objects=([blank-labelvalue]='true'\n [null-labelvalue]='true' \n [numerical-labelvalue]='false' \n [valid-labelvalue]='true')\n+\n # Expected log message for label value\n declare -A labelvalue_expected_log_msgs\n-labelvalue_expected_log_msgs=([blank-labelvalue]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: labelvalue:   not supported' \n+labelvalue_expected_log_msgs=([blank-labelvalue]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Invalid or blank MatchLabelValue in selector' \n [invalid-labelvalue]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: labelvalue:   not supported' \n [no-labelvalue]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Invalid MatchLabelValue' \n [no-labelvalue-value]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Invalid MatchLabelValue' \n@@ -334,10 +341,11 @@ labelvalue_expected_log_msgs=([blank-labelvalue]='com.autotune.dependencyAnalyze\n [valid-labelvalue]='com.autotune.dependencyAnalyzer.deployment.AutotuneDeployment - Added autotune object valid-labelvalue' )\n \n # Expected autotune object for other test cases\n-declare -A other_autotune_objects\n-other_autotune_objects=([incomplete-autotune]='false' \n+declare -A autotune_other_autotune_objects\n+autotune_other_autotune_objects=([incomplete-autotune]='false' \n [invalid-direction-for-slaclass]='true')\n+\n # Expected log message for other test cases\n-declare -A other_expected_log_msgs\n-other_expected_log_msgs=([incomplete-autotune]='error: error validating \"'${path}/${other_tests[0]}/incomplete-autotune.yaml'\": error validating data: ValidationError(Autotune): missing required field \"spec\" in com.recommender.v1.Autotune; if you choose to ignore these errors, turn validation off with --validate=false' \n+declare -A autotune_other_expected_log_msgs\n+autotune_other_expected_log_msgs=([incomplete-autotune]='error: error validating \"'${path}/autotune_other/incomplete-autotune.yaml'\": error validating data: ValidationError(Autotune): missing required field \"spec\" in com.recommender.v1.Autotune; if you choose to ignore these errors, turn validation off with --validate=false' \n [invalid-direction-for-slaclass]='validation from da')"
  },
  {
    "sha": "90c5db7b23fe1d5967823effe53a9beae5cddfd2",
    "filename": "tests/scripts/autotune_config_constants.sh",
    "status": "modified",
    "additions": 23,
    "deletions": 8,
    "changes": 31,
    "blob_url": "https://github.com/kruize/autotune/blob/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/scripts/autotune_config_constants.sh",
    "raw_url": "https://github.com/kruize/autotune/raw/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/scripts/autotune_config_constants.sh",
    "contents_url": "https://api.github.com/repos/kruize/autotune/contents/tests/scripts/autotune_config_constants.sh?ref=73a0e2342f0bd37afd9cc647f181a0c9a33f951f",
    "patch": "@@ -47,9 +47,6 @@ autotune_config_tests=(\"layer_name\"\n \"tunable_sla_class\" \n \"tunables\") \n \n-# other tests for autotune config yaml \n-other_tests=(\"other\")\n-\n # tests for layer name\n layer_name_testcases=(\"blank-layer-name\" \n \"no-layer-name\" \n@@ -201,7 +198,7 @@ tunables_testcases=(\"interchanged-bound\"\n \"valid-tunables\")\n \n # other test cases\n-other_testcases=(\"incomplete-autotuneconfig\" )\n+autotuneconfig_other_testcases=(\"incomplete-autotuneconfig\" )\n \n # Expected autotune object for layer name\n declare -A layer_name_autotune_objects\n@@ -211,6 +208,7 @@ layer_name_autotune_objects=([blank-layer-name]='true'\n [null-layer-name]='false' \n [numerical-layer-name]='false' \n [valid-layer-name]='true')\n+\n # Expected log message for layer-name\n declare -A layer_name_expected_log_msgs\n layer_name_expected_log_msgs=([blank-layer-name]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: AutotuneConfig object name cannot be null or empty' \n@@ -229,6 +227,7 @@ layer_level_autotune_objects=([char-layer-level]='false'\n [null-layer-level]='false' \n [char-layer-level]='false' \n [valid-layer-level]='true')\n+\n # Expected log message for layer-level\n declare -A layer_level_expected_log_msgs\n layer_level_expected_log_msgs=([char-layer-level]='error: error validating \"'${yaml_path}/${autotune_config_tests[1]}/char-layer-level.yaml'\": error validating data: ValidationError(AutotuneConfig.layer_level): invalid type for com.recommender.v1.AutotuneConfig.layer_level: got \"string\", expected \"integer\"; if you choose to ignore these errors, turn validation off with --validate=false' \n@@ -247,6 +246,7 @@ presence_autotune_objects=([blank-presence]='true'\n [null-presence]='true' \n [numerical-presence]='false' \n [valid-presence]='true')\n+\n #Expected log message for presence\n declare -A presence_expected_log_msgs\n presence_expected_log_msgs=([blank-presence]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Layer presence missing! Must be indicated through a presence field, layerPresenceQuery or layerPresenceLabel' \n@@ -266,6 +266,7 @@ layer_presence_query_datasource_autotune_objects=([blank-layer-presence-query-da\n [null-layer-presence-query-datasource]='false' \n [numerical-layer-presence-query-datasource]='false' \n [valid-layer-presence-query-datasource]='true')\n+\n #Expected log message for layer preseence query\n declare -A layer_presence_query_datasource_expected_log_msgs\n layer_presence_query_datasource_expected_log_msgs=([blank-layer-presence-query-datasource]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Layer presence missing! Must be indicated through a presence field, layerPresenceQuery or layerPresenceLabel' \n@@ -285,6 +286,7 @@ layer_presence_query_autotune_objects=([blank-layer-presence-query]='true'\n [null-layer-presence-query]='false' \n [numerical-layer-presence-query]='false' \n [valid-layer-presence-query]='true')\n+\n #Expected log message for layer presence query\n declare -A layer_presence_query_expected_log_msgs\n layer_presence_query_expected_log_msgs=([blank-layer-presence-query]='com.autotune.dependencyAnalyzer.deployment.AutotuneDeployment - Could not get the applications for the layer blank-layer-presence-query' \n@@ -304,6 +306,7 @@ layer_presence_query_key_autotune_objects=([blank-layer-presence-query-key]='tru\n [null-layer-presence-query-key]='false' \n [numerical-layer-presence-query-key]='false' \n [valid-layer-presence-query-key]='true')\n+\n # Expected autotune object for layer presence query key\n declare -A layer_presence_query_key_expected_log_msgs\n layer_presence_query_key_expected_log_msgs=([blank-layer-presence-query-key]='validation from da' \n@@ -323,6 +326,7 @@ layer_presence_label_name_autotune_objects=([blank-layer-presence-label-name]='t\n [null-layer-presence-label-name]='false' \n [numerical-layer-presence-label-name]='false' \n [valid-layer-presence-label-name]='true')\n+\n # Expected log message for layer presence label name\n declare -A layer_presence_label_name_expected_log_msgs\n layer_presence_label_name_expected_log_msgs=([blank-layer-presence-label-name]='validation from da' \n@@ -342,6 +346,7 @@ layer_presence_labelvalue_autotune_objects=([blank-layer-presence-labelvalue]='t\n [null-layer-presence-labelvalue]='false' \n [numerical-layer-presence-labelvalue]='false' \n [valid-layer-presence-labelvalue]='true')\n+\n # Expected log message for layer-presence-labelvalue\n declare -A layer_presence_labelvalue_expected_log_msgs\n layer_presence_labelvalue_expected_log_msgs=([blank-layer-presence-labelvalue]='Validation from da' \n@@ -363,6 +368,7 @@ layer_presence_autotune_objects=([complete-layer-presence]='true'\n [only-label-layer-presence]='true' \n [only-query-layer-presence]='true' \n [valid-layer-presence]='true')\n+\n # Expected log message for layer presence\n declare -A layer_presence_expected_log_msgs\n layer_presence_expected_log_msgs=([complete-layer-presence]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Both layerPresenceQuery and layerPresenceLabel cannot be set' \n@@ -382,6 +388,7 @@ tunable_name_autotune_objects=([blank-tunable-name]='true'\n [null-tunable-name]='false' \n [numerical-tunable-name]='false' \n [valid-tunable-name]='true')\n+\n # Expected log message for tunable-name\n declare -A tunable_name_expected_log_msgs\n tunable_name_expected_log_msgs=([blank-tunable-name]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Tunable name cannot be empty' \n@@ -399,6 +406,7 @@ tunable_value_type_autotune_objects=([blank-tunable-value-type]='true'\n [null-tunable-value-type]='false' \n [numerical-tunable-value-type]='false' \n [valid-tunable-value-type]='true')\n+\n # Expected log message for tunable-value-type\n declare -A tunable_value_type_expected_log_msgs\n tunable_value_type_expected_log_msgs=([blank-tunable-value-type]='Validation from da' \n@@ -418,6 +426,7 @@ tunable_upper_bound_autotune_objects=([blank-tunable-upper-bound]='true'\n [null-tunable-upper-bound]='false' \n [char-tunable-upper-bound]='false' \n [valid-tunable-upper-bound]='true')\n+\n # Expected log message for tunable-upper-bound\n declare -A tunable_upper_bound_expected_log_msgs\n tunable_upper_bound_expected_log_msgs=([blank-tunable-upper-bound]='Validation from da' \n@@ -437,6 +446,7 @@ tunable_lower_bound_autotune_objects=([blank-tunable-lower-bound]='true'\n [null-tunable-lower-bound]='false' \n [char-tunable-lower-bound]='false' \n [valid-tunable-lower-bound]='true')\n+\n # Expected log message for tunable-lower-bound\n declare -A tunable_lower_bound_expected_log_msgs\n tunable_lower_bound_expected_log_msgs=([blank-tunable-lower-bound]='validation from da' \n@@ -456,6 +466,7 @@ tunable_query_autotune_objects=([blank-tunable-query]='true'\n [null-tunable-query]='false' \n [numerical-tunable-query]='false' \n [valid-tunable-query]='true')\n+\n # Expected log message for tunable query\n declare -A tunable_query_expected_log_msgs\n tunable_query_expected_log_msgs=([blank-tunable-query]='validation from da' \n@@ -475,6 +486,7 @@ tunable_datasource_name_autotune_objects=([blank-tunable-datasource-name]='true'\n [null-tunable-datasource-name]='true' \n [numerical-tunable-datasource-name]='false' \n [valid-tunable-datasource-name]='true')\n+\n # Expected log message for tunable-query\n declare -A tunable_datasource_name_expected_log_msgs\n tunable_datasource_name_expected_log_msgs=([blank-tunable-datasource-name]='error from da' \n@@ -495,6 +507,7 @@ tunable_sla_class_autotune_objects=([blank-tunable-sla-class]='true'\n [null-tunable-sla-class]='false' \n [numerical-tunable-sla-value]='false' \n [valid-tunable-sla-class]='true')\n+\n # Expected log message for sla class\n declare -A tunable_sla_class_expected_log_msgs\n tunable_sla_class_expected_log_msgs=([blank-tunable-sla-class]='com.autotune.dependencyAnalyzer.exceptions.InvalidValueException: Invalid sla_class for tunable memoryRequest' \n@@ -513,6 +526,7 @@ tunables_autotune_objects=([interchanged-bound]='true'\n [no-tunables-queries]='true' \n [no-tunables-sla-class]='false' \n [valid-tunables]='true')\n+\n # Expected log message for tunable-query\n declare -A tunables_expected_log_msgs\n tunables_expected_log_msgs=([interchanged-bound]='validation from da' \n@@ -522,9 +536,10 @@ tunables_expected_log_msgs=([interchanged-bound]='validation from da'\n  [valid-tunables]='com.autotune.dependencyAnalyzer.deployment.AutotuneDeployment - Added autotuneconfig valid-tunables' )\n \n # Expected autotune object for other test cases\n-declare -A other_autotune_objects\n-other_autotune_objects=([incomplete-autotuneconfig]='false')\n+declare -A autotuneconfig_other_autotune_objects\n+autotuneconfig_other_autotune_objects=([incomplete-autotuneconfig]='false')\n+\n # Expected log message for other test cases\n-declare -A other_expected_log_msgs\n-other_expected_log_msgs=([incomplete-autotuneconfig]='error: error validating \"'${yaml_path}/${other_tests[0]}/incomplete-autotuneconfig.yaml'\": error validating data: \\[ValidationError(AutotuneConfig): missing required field \"layer_name\" in com.recommender.v1.AutotuneConfig, ValidationError(AutotuneConfig): missing required field \"layer_level\" in com.recommender.v1.AutotuneConfig, ValidationError(AutotuneConfig): missing required field \"layerPresence\" in com.recommender.v1.AutotuneConfig, ValidationError(AutotuneConfig): missing required field \"tunables\" in com.recommender.v1.AutotuneConfig\\]; if you choose to ignore these errors, turn validation off with --validate=false')\n+declare -A autotuneconfig_other_expected_log_msgs\n+autotuneconfig_other_expected_log_msgs=([incomplete-autotuneconfig]='error: error validating \"'${yaml_path}/autotuneconfig_other/incomplete-autotuneconfig.yaml'\": error validating data: \\[ValidationError(AutotuneConfig): missing required field \"layer_name\" in com.recommender.v1.AutotuneConfig, ValidationError(AutotuneConfig): missing required field \"layer_level\" in com.recommender.v1.AutotuneConfig, ValidationError(AutotuneConfig): missing required field \"layerPresence\" in com.recommender.v1.AutotuneConfig, ValidationError(AutotuneConfig): missing required field \"tunables\" in com.recommender.v1.AutotuneConfig\\]; if you choose to ignore these errors, turn validation off with --validate=false')\n "
  },
  {
    "sha": "1768648c9a48ab755cb552569b79f79dc18a1392",
    "filename": "tests/scripts/common_functions.sh",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/kruize/autotune/blob/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/scripts/common_functions.sh",
    "raw_url": "https://github.com/kruize/autotune/raw/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/scripts/common_functions.sh",
    "contents_url": "https://api.github.com/repos/kruize/autotune/contents/tests/scripts/common_functions.sh?ref=73a0e2342f0bd37afd9cc647f181a0c9a33f951f",
    "patch": "@@ -495,7 +495,7 @@ function run_test() {\n \t\tdone\n \t\techo \"\"\n \tdone\n-\t\n+\tother_tests=\"${object}_other\"\n \t# perform other test cases\n \tLOG_DIR=\"${TEST_SUITE_DIR}/${other_tests}\"\n \tmkdir ${LOG_DIR}\n@@ -614,6 +614,7 @@ function create_expected_searchspace_json() {\n \t\t\tdone\n \t\tdone\n \t\tprintf '\\n  \"sla_class\": '$(cat ${autotune_json} | jq '.spec.sla.sla_class')',' >> ${file_name}\n+\t\tprintf '\\n  \"id\": '$(cat ${json_file} | jq 'sort_by(.application_name)' | jq '.['${count}'].id')',' >> ${file_name}\n \t\tprintf '\\n  \"direction\": '$(cat ${autotune_json} | jq '.spec.sla.direction')'' >> ${file_name}\n \t\tif [ \"${index}\" -eq 0 ]; then\n \t\t\tprintf '\\n } \\n' >> ${file_name}\n@@ -772,6 +773,7 @@ function create_expected_listapptunables_json() {\n \t\t\t\t\tprintf '\\n }], \\n' >> ${file_name}\n \t\t\t\tfi\n \t\t\tdone\n+\t\t\tprintf '\\n  \"id\": '$(cat ${json_file} | jq 'sort_by(.application_name)' | jq '.['${count}'].layers[].id')',' >> ${file_name}\n \t\t\tprintf '\\n         \"layer_name\": '$(cat ${layer_json} | jq .layer_name)','  >> ${file_name}\n \t\t\tprintf '\\n' >> ${file_name}\n \t\t\techo '         \"layer_details\": '$(cat ${layer_json} | jq .details)''  >> ${file_name}\n@@ -783,6 +785,7 @@ function create_expected_listapptunables_json() {\n \t\tdone\n \n \t\tprintf '\\n  \"sla_class\": '$(cat ${autotune_json} | jq '.spec.sla.sla_class')',' >> ${file_name}\n+\t\tprintf '\\n  \"id\": '$(cat ${json_file} | jq 'sort_by(.application_name)' | jq '.['${count}'].id')',' >> ${file_name}\n \t\tif [ \"${index}\" -eq 0 ]; then\n \t\t\tprintf '\\n  \"direction\": '$(cat ${autotune_json} | jq '.spec.sla.direction')'\\n}]' >> ${file_name}\n \t\telse\n@@ -868,7 +871,8 @@ function create_expected_listautotunetunables_json() {\n \tsla_class=$1\n \tlayer_name=$2\n \tfile_name=\"${LOG_DIR}/expected_list_tunables.json\"\n-\n+\tlayer_count=0\n+\t\n \tif [ -z \"${sla_class}\" ]; then\n \t\tsla_class=(\"response_time\" \"throughput\" \"resource_usage\")\n \tfi\n@@ -913,6 +917,7 @@ function create_expected_listautotunetunables_json() {\n \t\t\t\tfi\n \t\t\tdone\n \t\tdone\n+\t\tprintf '\\n         \"id\": '$(cat ${json_file} | jq '.['${layer_count}'].id')',' >> ${file_name}\n \t\tprintf '\\n         \"layer_name\": '$(cat ${layer_json} | jq .layer_name)','  >> \t${file_name}\n \t\tprintf '\\n' >> ${file_name}\n \t\techo '         \"layer_details\": '$(cat ${layer_json} | jq .details)''  >> ${file_name}\n@@ -921,6 +926,7 @@ function create_expected_listautotunetunables_json() {\n \t\telse\n \t\t\tprintf '}, \\n' >> ${file_name}\n \t\tfi\n+\t\t((layer_count++))\n \tdone\n \n \tprintf ']\\n' >> ${file_name}\n@@ -1038,6 +1044,7 @@ function create_expected_listapplayer_json() {\n \t\t\tlayer_json=\"${AUTOTUNE_CONFIG_JSONS_DIR}/${layer}.json\"\n \t\t\t((layercount--))\n \t\t\tprintf '{\\n         \"layer_level\": '$(cat ${layer_json} | jq .layer_level)',' >> ${file_name}\n+\t\t\tprintf '\\n  \"id\": '$(cat ${json_file} | jq 'sort_by(.application_name)' | jq '.['${count}'].layers[].id')',' >> ${file_name}\n \t\t\tprintf '\\n         \"layer_name\": '$(cat ${layer_json} | jq .layer_name)',' >> ${file_name}\n \t\t\tprintf '\\n' >> ${file_name}\n \t\t\techo '         \"layer_details\": '$(cat ${layer_json} | jq .details)'' >> ${file_name}\n@@ -1048,6 +1055,7 @@ function create_expected_listapplayer_json() {\n \t\t\tfi\n \t\tdone\n \t\tprintf '\\n    \"sla_class\": '$(cat ${autotune_json} | jq '.spec.sla.sla_class')',' >> ${file_name}\n+\t\tprintf '\\n  \"id\": '$(cat ${json_file} | jq 'sort_by(.application_name)' | jq '.['${count}'].id')',' >> ${file_name}\n \t\tif [ \"${index}\" -eq 0 ]; then\n \t\t\tprintf '\\n    \"direction\": '$(cat ${autotune_json} | jq '.spec.sla.direction')'\\n}' >> ${file_name}\n \t\telse\n@@ -1142,6 +1150,7 @@ function create_expected_listapplication_json() {\n \t\tprintf '{\\n  \"application_name\": \"'${app}'\",' >> ${file_name}\n \t\tprintf '\\n  \"objective_function\": '$(cat ${autotune_json} | jq '.spec.sla.objective_function')',' >> ${file_name}\n \t\tprintf '\\n  \"sla_class\": '$(cat ${autotune_json} | jq '.spec.sla.sla_class')',' >> ${file_name}\n+\t\tprintf '\\n  \"id\": '$(cat ${json_file} | jq 'sort_by(.application_name)' | jq '.['${count}'].id')',' >> ${file_name}\n \t\tif [ \"${index}\" -eq 0 ]; then\n \t\t\tprintf '\\n  \"direction\": '$(cat ${autotune_json} | jq '.spec.sla.direction')'\\n}' >> ${file_name}\n \t\telse"
  },
  {
    "sha": "3d269f4dd2fe39023a8ad374afadc608d157fe43",
    "filename": "tests/scripts/da_basic_api_tests.sh",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/kruize/autotune/blob/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/scripts/da_basic_api_tests.sh",
    "raw_url": "https://github.com/kruize/autotune/raw/73a0e2342f0bd37afd9cc647f181a0c9a33f951f/tests/scripts/da_basic_api_tests.sh",
    "contents_url": "https://api.github.com/repos/kruize/autotune/contents/tests/scripts/da_basic_api_tests.sh?ref=73a0e2342f0bd37afd9cc647f181a0c9a33f951f",
    "patch": "@@ -85,7 +85,7 @@ function basic_api_tests() {\n \tsleep 5\n \n \t# Get the application pods\n-\tapp_name=$(kubectl get pod | grep petclinic-sample-0 | awk '{print $1}')\n+\tapplication_name=$(kubectl get pod | grep petclinic-sample-0 | awk '{print $1}')\n \tapp_pod_names=$(kubectl get pod | grep petclinic | cut -d \" \" -f1)\n \t\n \t# Add label to your application pods for autotune to monitor\n@@ -107,21 +107,21 @@ function basic_api_tests() {\n \n \t   listapplications|all) \n \t\t# test listapplication API for specific application\n-\t\tlistapplications_test ${app_name} \n+\t\tlistapplications_test ${application_name} \n \t\n \t\t# test listapplication API for all applications\n \t\tlistapplications_test\n \t\t;;&\t\n \t   listapplayer|all)\n \t\t# test listapplayer API for specific application\n-\t\tlistapplayer_test ${app_name}\n+\t\tlistapplayer_test ${application_name}\n \t\n \t\t# test listapplayer API for all applications\n \t\tlistapplayer_test\n \t\t;;&\n \t   searchspace|all)\n \t\t# test searchSpace API for specific application\n-\t\tsearchspace_test ${app_name}\n+\t\tsearchspace_test ${application_name}\n \t\n \t\t# test searchSpace API for all applications\n \t\tsearchspace_test\n@@ -142,10 +142,10 @@ function basic_api_tests() {\n \t    listapptunables|all)\n \t\t# test listapptunables API for specific application and specific layer\n \t\tlayer=\"container\"\n-\t\tlistapptunables_test ${app_name} ${layer}\n+\t\tlistapptunables_test ${application_name} ${layer}\n \n \t\t# test listapptunables API for specific application\n-\t\tlistapptunables_test ${app_name}\n+\t\tlistapptunables_test ${application_name}\n \n \t\t# test listapptunables API for all applications\t\n \t\tlistapptunables_test"
  }
]
