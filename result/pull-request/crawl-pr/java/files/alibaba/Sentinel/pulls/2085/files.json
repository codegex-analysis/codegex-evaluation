[
  {
    "sha": "5df6d7252a514250a5a6ae841ca2bcf3184edf24",
    "filename": "sentinel-demo/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/pom.xml",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/pom.xml",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/pom.xml?ref=cfbda87685e1d6e51d0820f790eb347923d21da2",
    "patch": "@@ -22,7 +22,8 @@\n         <module>sentinel-demo-apollo-datasource</module>\n         <module>sentinel-demo-annotation-spring-aop</module>\n         <module>sentinel-demo-parameter-flow-control</module>\n-        <module>sentinel-demo-slot-chain-spi</module>\n+        <module>sentinel-demo-slot-spi</module>\n+        <module>sentinel-demo-slotchain-spi</module>\n         <module>sentinel-demo-cluster</module>\n         <module>sentinel-demo-command-handler</module>\n         <module>sentinel-demo-spring-webflux</module>"
  },
  {
    "sha": "a1494c69e9de3bffbf568d7ed214c902ea1217b0",
    "filename": "sentinel-demo/sentinel-demo-slot-chain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoSlotChainBuilder.java",
    "status": "removed",
    "additions": 0,
    "deletions": 30,
    "changes": 30,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/3e438b3dba17641603099524aabbe457f8bc55fd/sentinel-demo/sentinel-demo-slot-chain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoSlotChainBuilder.java",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/3e438b3dba17641603099524aabbe457f8bc55fd/sentinel-demo/sentinel-demo-slot-chain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoSlotChainBuilder.java",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slot-chain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoSlotChainBuilder.java?ref=3e438b3dba17641603099524aabbe457f8bc55fd",
    "patch": "@@ -1,30 +0,0 @@\n-/*\n- * Copyright 1999-2018 Alibaba Group Holding Ltd.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.alibaba.csp.sentinel.demo.slot;\n-\n-import com.alibaba.csp.sentinel.slotchain.ProcessorSlotChain;\n-import com.alibaba.csp.sentinel.slotchain.SlotChainBuilder;\n-import com.alibaba.csp.sentinel.slots.DefaultSlotChainBuilder;\n-\n-/**\n- * @author Eric Zhao\n- *\n- * @deprecated since 1.7.2, we can use @SpiOrder(-3500) to adjust the order of {@link DemoSlot},\n- * this class is reserved for compatibility with older versions.\n- */\n-@Deprecated\n-public class DemoSlotChainBuilder extends DefaultSlotChainBuilder {\n-}"
  },
  {
    "sha": "49f508f34549fd1b6932fbf8213624aee99db3e8",
    "filename": "sentinel-demo/sentinel-demo-slot-chain-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.ProcessorSlot",
    "status": "removed",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/3e438b3dba17641603099524aabbe457f8bc55fd/sentinel-demo/sentinel-demo-slot-chain-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.ProcessorSlot",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/3e438b3dba17641603099524aabbe457f8bc55fd/sentinel-demo/sentinel-demo-slot-chain-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.ProcessorSlot",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slot-chain-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.ProcessorSlot?ref=3e438b3dba17641603099524aabbe457f8bc55fd",
    "patch": "@@ -1,2 +0,0 @@\n-# Custom slot processor\n-com.alibaba.csp.sentinel.demo.slot.DemoSlot\n\\ No newline at end of file"
  },
  {
    "sha": "35c1e23b34613abd03838102bee95fc8600baa5d",
    "filename": "sentinel-demo/sentinel-demo-slot-spi/pom.xml",
    "status": "renamed",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slot-spi/pom.xml",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slot-spi/pom.xml",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slot-spi/pom.xml?ref=cfbda87685e1d6e51d0820f790eb347923d21da2",
    "patch": "@@ -9,6 +9,5 @@\n     </parent>\n     <modelVersion>4.0.0</modelVersion>\n \n-    <artifactId>sentinel-demo-slot-chain-spi</artifactId>\n-\n+    <artifactId>sentinel-demo-slot-spi</artifactId>\n </project>\n\\ No newline at end of file",
    "previous_filename": "sentinel-demo/sentinel-demo-slot-chain-spi/pom.xml"
  },
  {
    "sha": "b5a1834f904e159aabe4105073bd170d18788da7",
    "filename": "sentinel-demo/sentinel-demo-slot-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoApplication.java",
    "status": "renamed",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slot-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoApplication.java",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slot-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoApplication.java",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slot-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoApplication.java?ref=cfbda87685e1d6e51d0820f790eb347923d21da2",
    "patch": "@@ -20,13 +20,15 @@\n import com.alibaba.csp.sentinel.slots.block.BlockException;\n \n /**\n+ * Demo for adding custom slot.\n+ * @see {@link DemoSlot}.\n+ *\n  * @author Eric Zhao\n+ * @author cdfive\n  */\n-public class SlotChainBuilderSpiDemo {\n+public class DemoApplication {\n \n     public static void main(String[] args) {\n-        // You will see this in record.log, indicating that the custom slot chain builder is activated:\n-        // [SlotChainProvider] Global slot chain builder resolved: com.alibaba.csp.sentinel.demo.slot.DemoSlotChainBuilder\n         Entry entry = null;\n         try {\n             entry = SphU.entry(\"abc\");",
    "previous_filename": "sentinel-demo/sentinel-demo-slot-chain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/SlotChainBuilderSpiDemo.java"
  },
  {
    "sha": "9b15eb9c86a244cc1fd898687c46748f1f03d5d2",
    "filename": "sentinel-demo/sentinel-demo-slot-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoSlot.java",
    "status": "renamed",
    "additions": 15,
    "deletions": 4,
    "changes": 19,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slot-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoSlot.java",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slot-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoSlot.java",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slot-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoSlot.java?ref=cfbda87685e1d6e51d0820f790eb347923d21da2",
    "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ * Copyright 1999-2021 Alibaba Group Holding Ltd.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -15,23 +15,32 @@\n  */\n package com.alibaba.csp.sentinel.demo.slot;\n \n+import com.alibaba.csp.sentinel.Constants;\n import com.alibaba.csp.sentinel.context.Context;\n import com.alibaba.csp.sentinel.node.DefaultNode;\n import com.alibaba.csp.sentinel.slotchain.AbstractLinkedProcessorSlot;\n import com.alibaba.csp.sentinel.slotchain.ResourceWrapper;\n+import com.alibaba.csp.sentinel.slots.block.degrade.DegradeSlot;\n+import com.alibaba.csp.sentinel.slots.block.flow.FlowSlot;\n import com.alibaba.csp.sentinel.spi.Spi;\n \n /**\n- * An example slot that records current context and entry resource.\n+ * A demo slot that records current context and entry resource.\n+ *\n+ * Note that the value of order attribute in `@Spi` is -1500, the smaller the value, the higher the order,\n+ * so this slot will be executed after {@link FlowSlot}(order=-2000) and before {@link DegradeSlot}(order=-1000),\n+ * refer to the constants for slot order definitions in {@link Constants}.\n  *\n  * @author Eric Zhao\n+ * @author cdfive\n  */\n-@Spi(order = -3500)\n+@Spi(order = -1500)\n public class DemoSlot extends AbstractLinkedProcessorSlot<DefaultNode> {\n \n     @Override\n     public void entry(Context context, ResourceWrapper resourceWrapper, DefaultNode node, int count, boolean prioritized, Object... args)\n             throws Throwable {\n+        System.out.println(\"------Entering for entry on DemoSlot------\");\n         System.out.println(\"Current context: \" + context.getName());\n         System.out.println(\"Current entry resource: \" + context.getCurEntry().getResourceWrapper().getName());\n \n@@ -40,7 +49,9 @@ public void entry(Context context, ResourceWrapper resourceWrapper, DefaultNode\n \n     @Override\n     public void exit(Context context, ResourceWrapper resourceWrapper, int count, Object... args) {\n-        System.out.println(\"Exiting for entry on DemoSlot: \" + context.getCurEntry().getResourceWrapper().getName());\n+        System.out.println(\"------Exiting for entry on DemoSlot------\");\n+        System.out.println(\"Current context: \" + context.getName());\n+        System.out.println(\"Current entry resource: \" + context.getCurEntry().getResourceWrapper().getName());\n \n         fireExit(context, resourceWrapper, count, args);\n     }",
    "previous_filename": "sentinel-demo/sentinel-demo-slot-chain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slot/DemoSlot.java"
  },
  {
    "sha": "9f0d7c7ae720f021becdf93cada0f2f0733457cc",
    "filename": "sentinel-demo/sentinel-demo-slot-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.ProcessorSlot",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slot-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.ProcessorSlot",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slot-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.ProcessorSlot",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slot-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.ProcessorSlot?ref=cfbda87685e1d6e51d0820f790eb347923d21da2",
    "patch": "@@ -0,0 +1,2 @@\n+# Custom ProcessorSlot\n+com.alibaba.csp.sentinel.demo.slot.DemoSlot\n\\ No newline at end of file"
  },
  {
    "sha": "b693516da1a830293c368c5148c02b461865e5c7",
    "filename": "sentinel-demo/sentinel-demo-slotchain-spi/pom.xml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slotchain-spi/pom.xml",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slotchain-spi/pom.xml",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slotchain-spi/pom.xml?ref=cfbda87685e1d6e51d0820f790eb347923d21da2",
    "patch": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>sentinel-demo</artifactId>\n+        <groupId>com.alibaba.csp</groupId>\n+        <version>1.8.2-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>sentinel-demo-slotchain-spi</artifactId>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "12100d31ef38880072022f90915d181cff147344",
    "filename": "sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoDegradeRuleApplication.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoDegradeRuleApplication.java",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoDegradeRuleApplication.java",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoDegradeRuleApplication.java?ref=cfbda87685e1d6e51d0820f790eb347923d21da2",
    "patch": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 1999-2021 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.demo.slotchain;\n+\n+import com.alibaba.csp.sentinel.Entry;\n+import com.alibaba.csp.sentinel.SphU;\n+import com.alibaba.csp.sentinel.slots.block.BlockException;\n+import com.alibaba.csp.sentinel.slots.block.degrade.DegradeRule;\n+import com.alibaba.csp.sentinel.slots.block.degrade.DegradeRuleManager;\n+import com.alibaba.csp.sentinel.slots.block.degrade.circuitbreaker.CircuitBreakerStrategy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ThreadLocalRandom;\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * Demo for degrade rule using custom SlotChainBuilder {@link DemoSlotChainBuilder}.\n+ *\n+ * You will see this in sentinel-record.log, indicating that the custom slot chain builder is activated:\n+ * [SlotChainProvider] Global slot chain builder resolved: com.alibaba.csp.sentinel.demo.slotchain.DemoSlotChainBuilder\n+ *\n+ * @author cdfive\n+ */\n+public class DemoDegradeRuleApplication {\n+\n+    private static final String RESOURCE_KEY = \"abc\";\n+\n+    public static void main(String[] args) throws Exception {\n+        initDegradeRule();\n+\n+        for (int i = 1; i <= 100; i++) {\n+            Entry entry = null;\n+            try {\n+                entry = SphU.entry(RESOURCE_KEY);\n+                TimeUnit.MILLISECONDS.sleep(ThreadLocalRandom.current().nextInt(10, 100));\n+                System.out.println(i + \"=>\" + \" passed\");\n+            } catch (BlockException ex) {\n+                System.out.println(i + \"=>\" + \" blocked by \" + ex.getClass().getSimpleName());\n+            } finally {\n+                if (entry != null) {\n+                    entry.exit();\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void initDegradeRule() {\n+        List<DegradeRule> rules = new ArrayList<>();\n+        DegradeRule rule = new DegradeRule(RESOURCE_KEY)\n+                .setGrade(CircuitBreakerStrategy.SLOW_REQUEST_RATIO.getType())\n+                // Max allowed response time\n+                .setCount(20)\n+                // Retry timeout (in second)\n+                .setTimeWindow(10)\n+                // Circuit breaker opens when slow request ratio > 20%\n+                .setSlowRatioThreshold(0.2)\n+                .setMinRequestAmount(10)\n+                .setStatIntervalMs(20000);\n+        rules.add(rule);\n+\n+        DegradeRuleManager.loadRules(rules);\n+        System.out.println(\"Degrade rule loaded: \" + rules);\n+    }\n+}"
  },
  {
    "sha": "f46650dff908b94fa9de634a4820672c961c2304",
    "filename": "sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoFlowRuleApplication.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoFlowRuleApplication.java",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoFlowRuleApplication.java",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoFlowRuleApplication.java?ref=cfbda87685e1d6e51d0820f790eb347923d21da2",
    "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 1999-2021 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.demo.slotchain;\n+\n+import com.alibaba.csp.sentinel.Entry;\n+import com.alibaba.csp.sentinel.SphU;\n+import com.alibaba.csp.sentinel.slots.block.BlockException;\n+import com.alibaba.csp.sentinel.slots.block.RuleConstant;\n+import com.alibaba.csp.sentinel.slots.block.degrade.DegradeRule;\n+import com.alibaba.csp.sentinel.slots.block.degrade.DegradeRuleManager;\n+import com.alibaba.csp.sentinel.slots.block.degrade.circuitbreaker.CircuitBreakerStrategy;\n+import com.alibaba.csp.sentinel.slots.block.flow.FlowRule;\n+import com.alibaba.csp.sentinel.slots.block.flow.FlowRuleManager;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ThreadLocalRandom;\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * Demo for flow rule using custom SlotChainBuilder {@link DemoSlotChainBuilder}.\n+ *\n+ * You will see this in sentinel-record.log, indicating that the custom slot chain builder is activated:\n+ * [SlotChainProvider] Global slot chain builder resolved: com.alibaba.csp.sentinel.demo.slotchain.DemoSlotChainBuilder\n+ *\n+ * @author cdfive\n+ */\n+public class DemoFlowRuleApplication {\n+\n+    private static final String RESOURCE_KEY = \"abc\";\n+\n+    public static void main(String[] args) throws Exception {\n+        initFlowQpsRule();\n+\n+        for (int i = 1; i <= 100; i++) {\n+            Entry entry = null;\n+            try {\n+                entry = SphU.entry(RESOURCE_KEY);\n+                TimeUnit.MILLISECONDS.sleep(ThreadLocalRandom.current().nextInt(10, 100));\n+                System.out.println(i + \"=>\" + \" passed\");\n+            } catch (BlockException ex) {\n+                System.out.println(i + \"=>\" + \" blocked by \" + ex.getClass().getSimpleName());\n+            } finally {\n+                if (entry != null) {\n+                    entry.exit();\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void initFlowQpsRule() {\n+        List<FlowRule> rules = new ArrayList<FlowRule>();\n+        FlowRule rule1 = new FlowRule();\n+        rule1.setResource(RESOURCE_KEY);\n+        // set limit qps to 5\n+        rule1.setCount(5);\n+        rule1.setGrade(RuleConstant.FLOW_GRADE_QPS);\n+        rule1.setLimitApp(\"default\");\n+        rules.add(rule1);\n+        FlowRuleManager.loadRules(rules);\n+        System.out.println(\"Flow rule loaded: \" + rules);\n+    }\n+}"
  },
  {
    "sha": "c250e4f3739e5c65cc434bb4211059e588f08711",
    "filename": "sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoSlotChainBuilder.java",
    "status": "added",
    "additions": 99,
    "deletions": 0,
    "changes": 99,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoSlotChainBuilder.java",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoSlotChainBuilder.java",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slotchain-spi/src/main/java/com/alibaba/csp/sentinel/demo/slotchain/DemoSlotChainBuilder.java?ref=cfbda87685e1d6e51d0820f790eb347923d21da2",
    "patch": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 1999-2021 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.csp.sentinel.demo.slotchain;\n+\n+import com.alibaba.csp.sentinel.Constants;\n+import com.alibaba.csp.sentinel.log.RecordLog;\n+import com.alibaba.csp.sentinel.slotchain.*;\n+import com.alibaba.csp.sentinel.slots.DefaultSlotChainBuilder;\n+import com.alibaba.csp.sentinel.slots.block.degrade.DegradeSlot;\n+import com.alibaba.csp.sentinel.spi.Spi;\n+import com.alibaba.csp.sentinel.spi.SpiLoader;\n+\n+import java.util.List;\n+\n+/**\n+ * A demo {@link SlotChainBuilder} for build custom slot chain.\n+ * Two ways to build slot chain are demonstrated.\n+ *\n+ * Pay attention to that `ProcessorSlotChain` is not a SPI, but the `SlotChainBuilder`.\n+ *\n+ * Most of the time, we don't need to customize `SlotChainBuilder`,\n+ * maybe customize `ProcessorSlot` is enough, refer to `sentinel-demo-slot-spi` module.\n+ *\n+ * Note that the sentinel's default slots and the order of them are very important, be careful when customizing,\n+ * refer to the constants for slot order definitions in {@link Constants}.\n+ * You may also refer to {@link DefaultSlotChainBuilder}.\n+ *\n+ * @author cdfive\n+ */\n+@Spi\n+public class DemoSlotChainBuilder implements SlotChainBuilder {\n+\n+    @Override\n+    public ProcessorSlotChain build() {\n+        ProcessorSlotChain chain = new DefaultProcessorSlotChain();\n+\n+        List<ProcessorSlot> sortedSlotList = SpiLoader.of(ProcessorSlot.class).loadInstanceListSorted();\n+        // Filter out `DegradeSlot`\n+        // Test for `DemoDegradeRuleApplication`, the demo will not be blocked by `DegradeException`\n+        sortedSlotList.removeIf(o -> DegradeSlot.class.equals(o.getClass()));\n+        for (ProcessorSlot slot : sortedSlotList) {\n+            if (!(slot instanceof AbstractLinkedProcessorSlot)) {\n+                RecordLog.warn(\"The ProcessorSlot(\" + slot.getClass().getCanonicalName() + \") is not an instance of AbstractLinkedProcessorSlot, can't be added into ProcessorSlotChain\");\n+                continue;\n+            }\n+\n+            chain.addLast((AbstractLinkedProcessorSlot<?>) slot);\n+        }\n+\n+        return chain;\n+    }\n+\n+    /**\n+     * Another way to build the slot chain, add slot one by one with `SpiLoader#loadInstance`.\n+     * Note that the sentinel's default slots and the order of them are very important, be careful when customizing,\n+     * refer to the constants for slot order definitions in {@link com.alibaba.csp.sentinel.Constants}.\n+     */\n+    /*\n+    @Override\n+    public ProcessorSlotChain build() {\n+        ProcessorSlotChain chain = new DefaultProcessorSlotChain();\n+\n+        // Create a `SpiLoader` instance\n+        SpiLoader<ProcessorSlot> spiLoader = SpiLoader.of(ProcessorSlot.class);\n+\n+        // Add `NodeSelectorSlot`, load by class\n+        chain.addLast((AbstractLinkedProcessorSlot<?>) spiLoader.loadInstance(NodeSelectorSlot.class));\n+\n+        // Add `ClusterBuilderSlot`, load by aliasname(default is classname)\n+        chain.addLast((AbstractLinkedProcessorSlot<?>) spiLoader.loadInstance(\"com.alibaba.csp.sentinel.slots.clusterbuilder.ClusterBuilderSlot\"));\n+\n+        // Add `StatisticSlot`\n+        chain.addLast((AbstractLinkedProcessorSlot<?>) spiLoader.loadInstance(StatisticSlot.class));\n+\n+        // Add `FlowSlot`\n+        chain.addLast((AbstractLinkedProcessorSlot<?>) spiLoader.loadInstance(FlowSlot.class));\n+\n+        // Add `DegradeSlot`\n+        // Test for `DemoDegradeRuleApplication`\n+        // If we don't add `DegradeSlot`, the demo will not be blocked by `DegradeException`\n+        // If it's added, we can see the expected DegradeException\n+//        chain.addLast((AbstractLinkedProcessorSlot<?>) spiLoader.loadInstance(DegradeSlot.class));\n+        return chain;\n+    }\n+    */\n+}"
  },
  {
    "sha": "f036afbdab9a47d5d48673674f3f60cb893e709a",
    "filename": "sentinel-demo/sentinel-demo-slotchain-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.SlotChainBuilder",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/alibaba/Sentinel/blob/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slotchain-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.SlotChainBuilder",
    "raw_url": "https://github.com/alibaba/Sentinel/raw/cfbda87685e1d6e51d0820f790eb347923d21da2/sentinel-demo/sentinel-demo-slotchain-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.SlotChainBuilder",
    "contents_url": "https://api.github.com/repos/alibaba/Sentinel/contents/sentinel-demo/sentinel-demo-slotchain-spi/src/main/resources/META-INF/services/com.alibaba.csp.sentinel.slotchain.SlotChainBuilder?ref=cfbda87685e1d6e51d0820f790eb347923d21da2",
    "patch": "@@ -0,0 +1,2 @@\n+# Custom SlotChainBuilder to build slot chain\n+com.alibaba.csp.sentinel.demo.slotchain.DemoSlotChainBuilder\n\\ No newline at end of file"
  }
]
