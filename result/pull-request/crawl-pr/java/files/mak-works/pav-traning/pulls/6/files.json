[
  {
    "sha": "904c1020af29f113483fa801dbacc745f588f804",
    "filename": "app/build.gradle",
    "status": "modified",
    "additions": 24,
    "deletions": 7,
    "changes": 31,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/build.gradle",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/build.gradle",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/build.gradle?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -1,19 +1,20 @@\n plugins {\n     id 'com.android.application'\n+    id 'kotlin-android'\n }\n \n android {\n-    compileSdkVersion 30\n+    compileSdkVersion 28\n     buildToolsVersion \"30.0.2\"\n \n     defaultConfig {\n         applicationId \"com.learning.androidlearning\"\n         minSdkVersion 21\n-        targetSdkVersion 30\n+        targetSdkVersion 28\n         versionCode 1\n         versionName \"1.0\"\n-\n-        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n+        vectorDrawables.useSupportLibrary = true\n+        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n     }\n \n     buildTypes {\n@@ -31,20 +32,36 @@ android {\n dependencies {\n \n     implementation 'androidx.appcompat:appcompat:1.2.0'\n-    implementation 'com.google.android.material:material:1.2.1'\n+    implementation 'com.google.android.material:material:1.3.0'\n     implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\n     implementation 'com.google.android.gms:play-services-maps:17.0.0'\n     implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'\n+    implementation \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n     //noinspection GradleDynamicVersion\n     testImplementation 'junit:junit:4.+'\n     androidTestImplementation 'androidx.test.ext:junit:1.1.2'\n     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\n     implementation 'com.google.android.gms:play-services-maps:17.0.0'\n-    implementation 'com.google.android.gms:play-services-location:17.1.0';\n+    implementation 'com.google.android.gms:play-services-location:18.0.0';\n     implementation 'de.hdodenhof:circleimageview:3.1.0'\n-    implementation 'com.google.android.material:material:1.2.1'\n+    implementation 'com.google.android.material:material:1.3.0'\n     debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'\n     releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'\n     testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'\n+    implementation \"android.arch.persistence.room:runtime:2.2.6\"\n+    annotationProcessor \"android.arch.persistence.room:compiler:2.2.6\"\n+    testImplementation \"android.arch.persistence.room:testing:2.2.6\"\n+    implementation \"androidx.room:room-runtime:2.2.6\"\n+    annotationProcessor \"androidx.room:room-compiler:2.2.6\"\n+    androidTestImplementation \"androidx.room:room-testing:2.2.6\"\n+    implementation \"androidx.lifecycle:lifecycle-viewmodel:2.3.0\"\n+    implementation \"androidx.lifecycle:lifecycle-livedata:2.3.0\"\n+    implementation \"androidx.lifecycle:lifecycle-common-java8:2.3.0\"\n+    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.3.0'\n+    implementation 'androidx.lifecycle:lifecycle-process:2.3.0'\n+    implementation 'androidx.lifecycle:lifecycle-service:2.3.0'\n+\n+\n+\n \n }\n\\ No newline at end of file"
  },
  {
    "sha": "15b9d28da378618acc2a8601a32c261f9c3b200e",
    "filename": "app/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 19,
    "deletions": 5,
    "changes": 24,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/AndroidManifest.xml?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -17,17 +17,31 @@\n         android:roundIcon=\"@mipmap/ic_launcher_round\"\n         android:supportsRtl=\"true\"\n         android:theme=\"@style/Theme.AndroidLearning\">\n-        <activity android:name=\".movemarker.synchronize.MemoryLeakActivity\">\n+        <activity android:name=\".movemarker.roomdbnew.AddDriverActivity\">\n+        </activity>\n+        <activity android:name=\".movemarker.roomdbnew.RoomActivity\">\n             <intent-filter>\n                 <action android:name=\"android.intent.action.MAIN\" />\n \n                 <category android:name=\"android.intent.category.LAUNCHER\" />\n             </intent-filter>\n         </activity>\n-        <activity android:name=\".movemarker.synchronize.SynchronizeThreadActivity\">\n-\n-        </activity>\n-        <activity android:name=\".movemarker.maps.ShowBackgroundLocationActivity\"></activity>\n+        <activity android:name=\".movemarker.roomdb.ViewDetailsActivity\" />\n+        <activity android:name=\".movemarker.roomdb.AddDetailsActivity\"></activity>\n+        <activity android:name=\".movemarker.NotificationActivity\" />\n+        <activity android:name=\".movemarker.javalearning.FunctionalInterface\" />\n+        <activity android:name=\".movemarker.javalearning.ArrayListActivity\" />\n+        <activity android:name=\".movemarker.kotlin.KotlinFunctionsActivity\" />\n+        <activity android:name=\".movemarker.kotlin.OopsActivity\" />\n+        <activity android:name=\".movemarker.kotlin.CollectionsActivity\" />\n+        <activity android:name=\".movemarker.kotlin.ArrayActivity\" />\n+        <activity android:name=\".movemarker.kotlin.KotlinBasicActivity\" />\n+        <activity android:name=\".movemarker.animation.AnimationActivity\" />\n+        <activity android:name=\".movemarker.maps.MapsMpveActivity\" />\n+        <activity android:name=\".movemarker.ThreadPoolExecutor.ThreadPoolActivity\" />\n+        <activity android:name=\".movemarker.synchronize.MemoryLeakActivity\" />\n+        <activity android:name=\".movemarker.synchronize.SynchronizeThreadActivity\" />\n+        <activity android:name=\".movemarker.maps.ShowBackgroundLocationActivity\" />\n         <activity android:name=\".movemarker.taxiui.DashboardActivity\" />\n         <activity\n             android:name=\".movemarker.taxiui.ProfileActivity\""
  },
  {
    "sha": "6366cbb17fa95b93fb775633a4e1099dd04d557c",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/NotificationActivity.java",
    "status": "added",
    "additions": 116,
    "deletions": 0,
    "changes": 116,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/NotificationActivity.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/NotificationActivity.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/NotificationActivity.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,116 @@\n+package com.learning.androidlearning.movemarker;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n+import android.app.Notification;\n+import android.app.NotificationChannel;\n+import android.app.NotificationManager;\n+import android.app.PendingIntent;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.ServiceConnection;\n+import android.graphics.Color;\n+import android.media.Ringtone;\n+import android.media.RingtoneManager;\n+import android.net.Uri;\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.os.CountDownTimer;\n+import android.os.IBinder;\n+import android.util.Log;\n+import android.widget.LinearLayout;\n+import android.widget.RemoteViews;\n+\n+import com.learning.androidlearning.R;\n+import com.learning.androidlearning.movemarker.maps.ShowBackgroundLocationActivity;\n+import com.learning.androidlearning.movemarker.taxiui.ForegroundService;\n+import com.learning.androidlearning.movemarker.taxiui.utils.MyAppConstants;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import static com.learning.androidlearning.movemarker.taxiui.utils.MyAppConstants.CHANNEL_ID;\n+\n+public class NotificationActivity extends AppCompatActivity {\n+\n+    MyCountDownTimer myCountDownTimer;\n+    private ForegroundService foregroundService;\n+    private Boolean mServiceBound = false;\n+    Long progress;\n+    String minValOne,minValTen,secValOne,secValTen;\n+    private Ringtone ringtone;\n+    private RemoteViews mRemoteViews;\n+    NotificationManager mNotificationManager;\n+    LinearLayout linearLayout;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_notification);\n+        mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n+        linearLayout=findViewById(R.id.linearlayout);\n+        mRemoteViews = new RemoteViews(getPackageName(), R.layout.notification_layout_new);\n+        Uri notificationuri=RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM);\n+        ringtone = RingtoneManager.getRingtone(getApplicationContext(), notificationuri);\n+        if(ringtone!=null)\n+        {\n+            ringtone.play();\n+        }\n+        myCountDownTimer = new MyCountDownTimer(120000, 1000);\n+        myCountDownTimer.start();\n+\n+    }\n+    public class MyCountDownTimer extends CountDownTimer {\n+\n+        public MyCountDownTimer(long millisInFuture, long countDownInterval) {\n+            super(millisInFuture, countDownInterval);\n+        }\n+\n+        @Override\n+        public void onTick(long millisUntilFinished) {\n+            progress=millisUntilFinished/1000;\n+\n+            int min = (int) ((int) TimeUnit.MILLISECONDS.toMinutes(millisUntilFinished) % TimeUnit.HOURS.toMinutes(1));\n+            int sec = (int) ((int) TimeUnit.MILLISECONDS.toSeconds(millisUntilFinished) % TimeUnit.MINUTES.toSeconds(1));\n+\n+            minValOne= String.valueOf((min / 10) % 6);\n+            minValTen=String.valueOf(min % 10);\n+            secValOne=String.valueOf((sec / 10) % 6);\n+            secValTen=String.valueOf(sec % 10);\n+            if(min==0&&sec<11)\n+            {\n+                mRemoteViews.setInt(R.id.linearlayout, \"setBackgroundColor\",getResources().getColor(R.color.colorRed));\n+            }\n+\n+            GenerateUpdteNotification(minValOne,minValTen,secValOne,secValTen);\n+        }\n+\n+        @Override\n+        public void onFinish() {\n+            ringtone.stop();\n+            mNotificationManager.cancel(1);\n+        }\n+    }\n+    private void GenerateUpdteNotification(String minValOne,String minValTen,String secValOne,String secValTen) {\n+\n+\n+        mRemoteViews.setTextViewText(R.id.min_one,minValOne);\n+        mRemoteViews.setTextViewText(R.id.min_ten,minValTen);\n+        mRemoteViews.setTextViewText(R.id.sec_one,secValOne);\n+        mRemoteViews.setTextViewText(R.id.sec_ten,secValTen);\n+\n+\n+        NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this, CHANNEL_ID)\n+                .setContentTitle(getString(R.string.app_name))\n+                .setAutoCancel(true)\n+                .setOngoing(true)\n+                .setSmallIcon(R.drawable.ic_launcher_background)\n+                .setContent(mRemoteViews);\n+\n+        mNotificationManager.notify(1, mBuilder.build());\n+    }\n+}\n+\n+"
  },
  {
    "sha": "0d3fe3bfeec2a87796454005890e97ae95e8bf4d",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/CustomHandlerThread.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/CustomHandlerThread.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/CustomHandlerThread.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/CustomHandlerThread.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,36 @@\n+package com.learning.androidlearning.movemarker.ThreadPoolExecutor;\n+\n+import android.os.Handler;\n+import android.os.HandlerThread;\n+import android.os.Looper;\n+import android.os.Message;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.lang.ref.WeakReference;\n+\n+public class CustomHandlerThread extends HandlerThread {\n+\n+    private WeakReference<UiThreadCallback> mUiThreadCallback;\n+\n+    public CustomHandlerThread(String name) {\n+        super(name, android.os.Process.THREAD_PRIORITY_BACKGROUND);\n+    }\n+\n+    public void setUiThreadCallback(UiThreadCallback callback){\n+        this.mUiThreadCallback = new WeakReference<UiThreadCallback>(callback);\n+    }\n+\n+    private class CustomHandler extends Handler\n+    {\n+        public CustomHandler(Looper looper) {\n+            super(looper);\n+        }\n+\n+        @Override\n+        public void handleMessage(@NonNull Message msg) {\n+            super.handleMessage(msg);\n+        }\n+    }\n+}"
  },
  {
    "sha": "0a6a744d5b341db4baac4883b125f054ca30a148",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/ThreadPoolActivity.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/ThreadPoolActivity.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/ThreadPoolActivity.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/ThreadPoolActivity.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,16 @@\n+package com.learning.androidlearning.movemarker.ThreadPoolExecutor;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.os.Bundle;\n+\n+import com.learning.androidlearning.R;\n+\n+public class ThreadPoolActivity extends AppCompatActivity {\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_thread_pool);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2d893e2eb1932b8d17f40ab20ebf69242d326d51",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/UiThreadCallback.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/UiThreadCallback.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/UiThreadCallback.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/ThreadPoolExecutor/UiThreadCallback.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,13 @@\n+package com.learning.androidlearning.movemarker.ThreadPoolExecutor;\n+\n+import android.os.Message;\n+\n+/**\n+ * Created by Frank Tan on 3/04/2016.\n+ *\n+ * An interface for worker threads to send messages to the UI thread.\n+ * MainActivity implemented this Interface in this app.\n+ */\n+public interface UiThreadCallback {\n+    void publishToUiThread(Message message);\n+}"
  },
  {
    "sha": "27589485dde069ddef28af5db831c6cc3dcd1123",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/animation/AnimationActivity.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/animation/AnimationActivity.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/animation/AnimationActivity.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/animation/AnimationActivity.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,71 @@\n+package com.learning.androidlearning.movemarker.animation;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.core.content.ContextCompat;\n+import androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat;\n+\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.graphics.drawable.Animatable;\n+import android.graphics.drawable.AnimatedVectorDrawable;\n+import android.graphics.drawable.Drawable;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+\n+import com.learning.androidlearning.R;\n+\n+public class AnimationActivity extends AppCompatActivity {\n+    boolean isEqual = true;\n+    AnimatedVectorDrawable equalAnim, plusAnim;\n+    Context context;\n+    Button animate_equal;\n+    AnimationActivity animationActivity;\n+\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_animation);\n+        ImageView animateImageOne = findViewById(R.id.animate_image);\n+        ImageView animateImageTwo = findViewById(R.id.animate_image_two);\n+        ImageView animateImageThree = findViewById(R.id.animate_image_three);\n+        ImageView animateImageFour = findViewById(R.id.animate_image_four);\n+        animate_equal = findViewById(R.id.animate_equal);\n+\n+\n+        animateImageThree.setVisibility(View.INVISIBLE);\n+\n+        Animatable animatable = (Animatable) animateImageOne.getDrawable();\n+        animatable.start();\n+        Animatable animatableTwo = (Animatable) animateImageTwo.getDrawable();\n+        animatableTwo.start();\n+        animateImageTwo.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (animateImageThree.getVisibility() == View.INVISIBLE) {\n+                    animateImageThree.setVisibility(View.VISIBLE);\n+                    Animatable animatableThree = (Animatable) animateImageThree.getDrawable();\n+                    animatableThree.start();\n+                }\n+\n+            }\n+        });\n+        animate_equal.setOnClickListener(new View.OnClickListener() {\n+            @SuppressLint(\"UseCompatLoadingForDrawables\")\n+            @Override\n+            public void onClick(View v) {\n+                equalAnim = (AnimatedVectorDrawable) ContextCompat.getDrawable(getApplicationContext(), R.drawable.animation_equal);\n+                plusAnim = (AnimatedVectorDrawable) ContextCompat.getDrawable(getApplicationContext(), R.drawable.animation_plus);\n+                AnimatedVectorDrawable drawable = isEqual ? equalAnim : plusAnim;\n+                animateImageFour.setImageDrawable(drawable);\n+                drawable.start();\n+                isEqual = !isEqual;\n+\n+            }\n+        });\n+    }\n+}\n+\n+"
  },
  {
    "sha": "be3d093b06619903566950d6ae055ca21592b8ff",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/javalearning/ArrayListActivity.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/javalearning/ArrayListActivity.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/javalearning/ArrayListActivity.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/javalearning/ArrayListActivity.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,44 @@\n+package com.learning.androidlearning.movemarker.javalearning;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.os.Bundle;\n+import android.util.Log;\n+\n+import com.learning.androidlearning.R;\n+import com.learning.androidlearning.movemarker.maps.MapsMpveActivity;\n+\n+import java.util.ArrayList;\n+\n+public class ArrayListActivity extends AppCompatActivity {\n+\n+    private ArrayList<Object> diffValuesArrayList = new ArrayList<Object>();\n+    private GenericClass<Integer> myClassArrayList=new GenericClass();\n+    private String TAG= ArrayListActivity.class.getSimpleName();\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_array_list);\n+        diffValuesArrayList.add(\"One\");\n+        diffValuesArrayList.add(11);\n+        diffValuesArrayList.add(50);\n+        diffValuesArrayList.add(\"two\");\n+\n+        myClassArrayList.add(0,50);\n+        myClassArrayList.add(1,70);\n+        myClassArrayList.add(2,100);\n+        myClassArrayList.add(3,500);\n+        getValues();\n+        int a=myClassArrayList.get(0);\n+    }\n+    private void getValues()\n+    {\n+        Log.d(TAG, \"getValues: \");\n+        for (int i = 0; i < myClassArrayList.size(); i++)\n+        {\n+            Log.d(TAG, \"Different Values arrayList: \"+myClassArrayList.get(i));\n+        }\n+    }\n+\n+}\n+"
  },
  {
    "sha": "12c68da31bc104daac703ac834349880e594e032",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/javalearning/FunctionalInterface.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/javalearning/FunctionalInterface.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/javalearning/FunctionalInterface.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/javalearning/FunctionalInterface.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,76 @@\n+package com.learning.androidlearning.movemarker.javalearning;\n+\n+import androidx.annotation.RequiresApi;\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.os.Build;\n+import android.os.Bundle;\n+import android.util.Log;\n+\n+import com.learning.androidlearning.R;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+\n+public class FunctionalInterface extends AppCompatActivity {\n+    Runnable firstRunable;\n+    private String TAG=FunctionalInterface.class.getSimpleName();\n+    MyfunctionalInterface myfunctionalInterface;\n+    int giveNumber=10;\n+    ArrayList<String> newList=new ArrayList<String>();\n+    @RequiresApi(api = Build.VERSION_CODES.N)\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_functional_interface);\n+        newList.add(\"One\");\n+        newList.add(\"Two\");\n+        newList.add(\"Three\");\n+\n+        //example of Functional interface\n+        firstRunable=new Runnable() {\n+            @Override\n+            public void run() {\n+                Log.d(TAG, \"run: \");\n+            }\n+        };\n+\n+        Thread thread = new Thread(firstRunable);\n+        thread.start();\n+\n+\n+        //Build in functions\n+        Predicate<String> p = (s)->s.startsWith(\"O\");\n+        Log.d(TAG, \"onCreate: \"+p);\n+\n+\n+        //Build in functional inetrface Function\n+        Function<Long, Long> adder = (value) -> value + 3;\n+        Long resultLambda = adder.apply((long) 8);\n+        Log.d(TAG, \"Lambda in Fucntion: \"+resultLambda);\n+\n+\n+        //passing lambda expression to the functionalInterface\n+        myfunctionalInterface=(int a) -> { return a=a+10; };\n+        int result=myfunctionalInterface.add(giveNumber);\n+        Log.d(TAG, \"result: \"+result);\n+\n+    }\n+\n+    //Manual functional interface\n+    @java.lang.FunctionalInterface\n+    public interface MyfunctionalInterface\n+    {\n+       int add(int a);\n+    }\n+\n+\n+\n+\n+\n+\n+\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f03aa3ca520997da565c241d1e8415c302716ab4",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/javalearning/GenericClass.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/javalearning/GenericClass.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/javalearning/GenericClass.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/javalearning/GenericClass.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,78 @@\n+package com.learning.androidlearning.movemarker.javalearning;\n+\n+import android.util.Log;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.io.Serializable;\n+import java.util.AbstractList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.RandomAccess;\n+\n+public class GenericClass<E> extends AbstractList<E>\n+     implements List<E>, RandomAccess, Cloneable, Serializable\n+\n+    {\n+    private transient E[] data;\n+    private int size;\n+    private static final int DEFAULT_CAPACITY = 10;\n+    private String TAG=GenericClass.class.getSimpleName();\n+\n+    public GenericClass(int capacity)\n+    {\n+        data = (E[]) new Object[capacity];\n+    }\n+    public GenericClass()\n+    {\n+        this(DEFAULT_CAPACITY);\n+    }\n+\n+    @Override\n+    public E get(int index)\n+      {\n+      return data[index];\n+      }\n+      @Override\n+      public int size() {\n+        return size;\n+    }\n+\n+        @Override\n+        public boolean add(Object o) {\n+            return false;\n+        }\n+\n+        public void add(int index, E e)\n+        {\n+            Log.d(TAG, \"size: \"+size);\n+            Log.d(TAG, \"data.length: \"+data.length);\n+            Log.d(TAG, \"add:--- \");\n+            Log.d(TAG, \"add:------ \");\n+\n+            ensureCapacity(size + 1);\n+\n+            Log.d(TAG, \"data: \"+data);\n+            Log.d(TAG, \"index: \"+index);\n+\n+            System.arraycopy(data, index, data, index + 1,\n+                    size - index);\n+\n+        data[index] = e;\n+        size++;\n+\n+    }\n+    private void ensureCapacity(int minCapacity)\n+    {\n+        int current = data.length;\n+            if (minCapacity > current)\n+              {\n+            E[] newData = (E[]) new Object[Math.max(current * 2, minCapacity)];\n+            System.arraycopy(data, 0, newData, 0, size);\n+            data = newData;\n+           }\n+\n+    }\n+\n+\n+}"
  },
  {
    "sha": "a729fdeb887f8d01ce12c812ed2d7c5cf0e35bb2",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/kotlin/ArrayActivity.kt",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/ArrayActivity.kt",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/ArrayActivity.kt",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/ArrayActivity.kt?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,60 @@\n+package com.learning.androidlearning.movemarker.kotlin\n+\n+import androidx.appcompat.app.AppCompatActivity\n+import android.os.Bundle\n+import android.util.Log\n+import com.learning.androidlearning.R\n+\n+class ArrayActivity : AppCompatActivity() {\n+    private val TAG:String =\"ArrayActivity\"\n+    private val arrayTypeOne = arrayOf(1, 2, 3, 4)\n+    private val arrayTypeTwo=arrayOf<Int>(1,2,3,4,5)\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_array)\n+\n+        printArray();\n+\n+    }\n+\n+    private fun printArray() {\n+        //printing array\n+        for(i in arrayTypeOne.indices)\n+        {\n+            Log.d(TAG, \"printArrayOne: \"+arrayTypeOne[i])\n+        }\n+\n+        for(i in 0..arrayTypeTwo.size-1)\n+        {\n+            Log.d(TAG, \"printArrayTwo: \"+arrayTypeTwo[i])\n+        }\n+        //getting array\n+        Log.d(TAG, \"get value\"+arrayTypeOne.get(3))\n+        Log.d(TAG, \"get value: \"+arrayTypeTwo[2])\n+\n+        //setting array\n+        arrayTypeOne.set(3,5);\n+        arrayTypeTwo[2]=50\n+\n+        for(i in arrayTypeOne.indices)\n+        {\n+            Log.d(TAG, \"printArrayOne:after setting \"+arrayTypeOne[i])\n+        }\n+\n+        for(i in 0..arrayTypeTwo.size-1)\n+        {\n+            Log.d(TAG, \"printArray after setting: \"+arrayTypeTwo[i])\n+        }\n+\n+\n+        //print the array with position\n+        for((index,value) in arrayTypeOne.withIndex())\n+        {\n+            Log.d(TAG, \"Position : \"+index)\n+            Log.d(TAG, \"Value: \"+value)\n+        }\n+        //Collection store multiple data type\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2930ea24fa8528bb20992a4e7339ad572be59207",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/kotlin/CollectionsActivity.kt",
    "status": "added",
    "additions": 167,
    "deletions": 0,
    "changes": 167,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/CollectionsActivity.kt",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/CollectionsActivity.kt",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/CollectionsActivity.kt?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,167 @@\n+package com.learning.androidlearning.movemarker.kotlin\n+\n+import androidx.appcompat.app.AppCompatActivity\n+import android.os.Bundle\n+import android.util.Log\n+import com.learning.androidlearning.R\n+\n+class CollectionsActivity : AppCompatActivity() {\n+    private var TAG:String=\"CollectionsActivity\"\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_collections)\n+        printList()\n+        printSet()\n+        printMap()\n+        printArrayList()\n+\n+    }\n+\n+    private fun printList() {\n+        //List is an ordered collection it maintains the insertion order,allow dublicate elements\n+        val listOne = listOf(1,2,3)// Immutable list - does not support adding,removing functions same as set,Map\n+        for(i in listOne)\n+        {\n+            Log.d(TAG, \"printList: \"+i)\n+        }\n+        Log.d(TAG, \"List Size: \"+listOne.size)\n+        Log.d(TAG, \"Value of Second Position: \"+listOne.get(1))\n+        Log.d(TAG, \"Value of Third Position: \"+listOne[2])\n+        Log.d(TAG, \"First Element: \"+listOne.first())\n+        val listDes = listOne.sortedDescending();\n+        var result=listOne.contains(0)\n+        Log.d(TAG, \"List in Descending order: \"+listDes)\n+        if(result)\n+        {\n+            Log.d(TAG, \"List contain 0: \")\n+        }\n+        else\n+        {\n+            Log.d(TAG, \"List does not contain 0: \")\n+        }\n+\n+        var listTwo = mutableListOf(\"Coimbatore\",\"Madurai\",\"Chennai\") //Mutable list  - you can add and remove the list\n+\n+        for(i in listTwo)\n+        {\n+            Log.d(TAG, \"printList two Mutable : \"+listTwo)\n+        }\n+        listTwo.add(\"Tirchy\")\n+        listTwo.remove(\"Madurai\")\n+\n+        for(i in listTwo)\n+        {\n+            Log.d(TAG, \"After adding Tirchy remove Madurai Changed list is : \"+listTwo)\n+        }\n+    }\n+    private fun printSet()\n+    {\n+        //Set is an unordered collection,does not allow dublicate elements\n+        //Immutable set\n+        val setOne = setOf(1,2,3,\"Chennai\",\"Coimbatore\",\"Tirchy\")\n+        for(i in setOne)\n+        {\n+            Log.d(TAG, \"printSet: \"+i)\n+        }\n+        Log.d(TAG, \"List Size: \"+setOne.size)\n+        Log.d(TAG, \"Value of Third Position: \"+setOne.elementAt(1))\n+        Log.d(TAG, \"Position of Tirchy is : \"+setOne.indexOf(\"Tirchy\"))\n+        var result= setOne.contains(\"Coimbatore\")\n+        if(result)\n+        {\n+            Log.d(TAG, \"The list contain Coimbatore: \")\n+        }\n+        else\n+        {\n+            Log.d(TAG, \"The list does contain Coimbatore: \")\n+        }\n+\n+        //Mutable set same as HashSet\n+        val setTwo = mutableSetOf<String>(\"Salem\",\"Kanniya kumari\",\"Naga Paddinam\")\n+        for(i in setTwo)\n+        {\n+            Log.d(TAG, \"printSet two Mutable set: \"+setTwo)\n+        }\n+        setTwo.add(\"Namakkal\")\n+        setTwo.remove(\"Naga Paddinam\")\n+        for(i in setTwo)\n+        {\n+            Log.d(TAG, \"After adding Namakkal remove Naga Paddinam Changed set is : \"+setTwo)\n+        }\n+\n+        val hashSet = hashSetOf<Int>(1,2,3);\n+        hashSet.add(5)\n+        for(i in hashSet)\n+        {\n+            Log.d(TAG, \"hashSet: \"+i)\n+        }\n+\n+\n+    }\n+\n+    private fun printMap()\n+    {\n+        var mutableMap = mutableMapOf<Int,String>(1 to \"Pavithra\",2 to \"Jaya\",3 to \"Dhaarani\")\n+        for(i in mutableMap)\n+        {\n+            Log.d(TAG, \"printMapKey: \"+i.key)\n+            Log.d(TAG, \"printMapValues: \"+i.value)\n+        }\n+        Log.d(TAG, \"printMap Size: \"+mutableMap.size)\n+        Log.d(TAG, \"printMap getValue \"+mutableMap[2])\n+        if(mutableMap.containsKey(3))\n+        {\n+            Log.d(TAG, \"The Map contain the key 3: \")\n+        }\n+        else\n+        {\n+            Log.d(TAG, \"The Map does not contain the key 3: \")\n+        }\n+        if(mutableMap.containsValue(\"Dhaarani\"))\n+        {\n+            Log.d(TAG, \"The map contain the value Dhaarani \")\n+        }\n+        else\n+        {\n+            Log.d(TAG, \"The map does not contain the value Dhaarani: \")\n+        }\n+        mutableMap.put(3,\"Moorthi\")\n+        /*for ( i in mutableMap)\n+        {\n+            Log.d(TAG, \"After adding the value the Map is \"+i)\n+        }*/\n+        Log.d(TAG, \"After adding the value Dhaarani the Map is \"+mutableMap.entries)\n+\n+\n+\n+        //Hash Map is same as Mutable Map\n+        var hashMap : HashMap<Int, Int>\n+                = HashMap<Int, Int> ()\n+        hashMap.put(1,1)\n+        hashMap.put(2,1)\n+\n+        for(i in hashMap)\n+        {\n+            Log.d(TAG, \"hashMap: \"+hashMap)\n+        }\n+\n+    }\n+    private fun printArrayList()\n+    {\n+        var arrayListOne = ArrayList<String>()\n+        arrayListOne.add(\"Pavithra\")\n+        arrayListOne.add(\"Jaya\")\n+\n+        for(i in arrayListOne)\n+        {\n+            Log.d(TAG, \"printArrayList: \"+i)\n+        }\n+        Log.d(TAG, \"index of Pavithra\"+arrayListOne.indexOf(\"Pavithra\"))\n+        arrayListOne.clear()\n+\n+            Log.d(TAG, \"After clearing the arrayList size is : \" +arrayListOne.size)\n+            Log.d(TAG, \"After clearing the arrayList is: \"+arrayListOne)\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "7d2e8e395f41982ac36712d2748d85ab17c4edce",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/kotlin/KotlinBasicActivity.kt",
    "status": "added",
    "additions": 158,
    "deletions": 0,
    "changes": 158,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/KotlinBasicActivity.kt",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/KotlinBasicActivity.kt",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/KotlinBasicActivity.kt?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,158 @@\n+package com.learning.androidlearning.movemarker.kotlin\n+\n+import androidx.appcompat.app.AppCompatActivity\n+import android.os.Bundle\n+import android.util.Log\n+import com.learning.androidlearning.R\n+\n+class KotlinBasicActivity : AppCompatActivity() {\n+\n+  /*  kotlin all data types are primitive data types - Int,Float,Double,Char,Boolean-use wrapper class for primitive-\n+     When it convert to JVM code kotlin primitive convert to java primitive-behave like objects\n+    reference type is Array,String,Classes,Interfaces*/\n+\n+    private var intVal: Int = 35\n+    private var intValneW: Int = 40\n+    private var floatVal: Float = 5.3F\n+    private var strVal: String = \"Pavithra\"\n+    private var dobVal: Double = 11.3\n+    private var char: Char = 'a'\n+    var lastName: String? = null\n+\n+    private var myNewValue = 50\n+    private var floatValNew = 5.5\n+    private var strValNew = \"Pavithra S\"\n+    private var dobValNew = 11.3\n+    private var num: Any = 10.33\n+    private val immutValue = \"50\"  //value cannot be changed means reassign not accept\n+\n+    private val TAG: String = \"KotlinBasicActivity\" //without data type we can decalre\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_data_type_kotlin)\n+        printVaribales()\n+        printOperators()\n+        typeConversion()\n+        ifInsteadOfTernary()\n+        printForLoop()\n+        whenInsteadOfSwitch()\n+        var returnValue=functionWithArguementandReturn(num)\n+        functionWithArguementDirectPass(\"Things\")\n+        Log.d(TAG, \"returnValue: \"+returnValue)\n+\n+\n+    }\n+\n+    private fun printVaribales() {\n+        Log.d(TAG, \"IntVal: \" + intVal)\n+        Log.d(TAG, \"floatVal: \" +floatVal)\n+        Log.d(TAG, \"strVal: \" + strVal)\n+        Log.d(TAG, \"dobVal: \" + dobVal)\n+        Log.d(TAG, \"char: \" + char)\n+        Log.d(TAG, \"myNewValue: \" + myNewValue)\n+        Log.d(TAG, \"floatValNew: \" + floatValNew)\n+        Log.d(TAG, \"strValNew: \" + strValNew)\n+        Log.d(TAG, \"dobValNew: \" + dobValNew)\n+        Log.d(TAG, \"immutValue: \" + immutValue)\n+        Log.d(TAG, \"printVaribales: ${immutValue.length}\")\n+    }\n+\n+    private fun printOperators() {\n+        Log.d(TAG, \"Multiplication: \" + intVal * myNewValue)\n+        Log.d(TAG, \"Reminder: \" +intVal % myNewValue)\n+        Log.d(TAG, \"printOperators: \" + (intVal > intValneW));\n+        Log.d(TAG, \"printOperators: \" + (10.shl(5)));\n+        //All operators all like java except bitwise shl\n+    }\n+\n+    private fun typeConversion() {\n+        Log.d(TAG, \"toString: \" + intVal.toString()) //string to int\n+        Log.d(TAG, \"toLong: \" + intVal.toLong())\n+        var str: String = intVal.toString()//int to string\n+        Log.d(TAG, \"Int to String: \" + str)\n+        /*helper functions are toByte()\n+        toShort()\n+        toInt()\n+        toLong()\n+        toFLoat()\n+        toDouble()\n+        toChar()*/\n+    }\n+\n+    private fun ifInsteadOfTernary() {\n+        Log.d(TAG, \"ifinsteadOfTernary: \" + if (intVal > intValneW) intVal else intValneW)\n+    }\n+\n+    private fun printForLoop() {\n+        //labeled break\n+        outer@ for (i in 1..20) {\n+            if (i == 5)\n+                break@outer;\n+            Log.d(TAG, \"labeled printForLoop: \" + i)\n+        }\n+\n+        //unlabelled break\n+        for (i in 1..20) {\n+            if (i == 5)\n+                break;\n+            Log.d(TAG, \"un labeledprintForLoop: \" + i)\n+        }\n+\n+        for (i in 1..5 step 3) {\n+            Log.d(TAG, \"printForLoop: with step \" + i)\n+            break;\n+        }\n+        for (i in 5 downTo 1) {\n+            Log.d(TAG, \"printForLoop:downTo \" + i)\n+            break;\n+        }\n+        for (i in 10 downTo 1 step 2) {\n+            Log.d(TAG, \"printForLoop downto plus step: \" + i)\n+            break;\n+        }\n+    }\n+\n+    private fun whenInsteadOfSwitch() {\n+        var i = 10;\n+        when (i) {\n+            1 -> Log.d(TAG, \"WhenInsteadOfSwitch: The variable values is 1\")\n+            2 -> Log.d(TAG, \"WhenInsteadOfSwitch: The variable values is 2 \")\n+            else -> Log.d(TAG, \"The variable does not contain 1 and 2\")\n+        }\n+        for (i in 1..10) {\n+            when (i) {\n+                1, 2, 3, 4, 5, 6, 7, 8, 9, 10 -> Log.d(TAG, \"The number is between one to 10: \")\n+                11, 12, 13, 14, 15, 16, 17, 18, 19, 20 -> Log.d(TAG, \"The number is between 11 to 20: \")\n+            }\n+        }\n+\n+\n+    }\n+\n+    //functions\n+    private fun functionWithArguementandReturn(floatNumber: Any): Any {\n+        when (floatNumber) {\n+            is Int -> Log.d(TAG, \"The num value is Int: \")\n+            is Float -> Log.d(TAG, \"The num value is Float: \")\n+            is Double -> Log.d(TAG, \"The num value is Double: \")\n+\n+        }\n+        return floatNumber;\n+    }\n+    //functions with arguement direct passing\n+    private fun functionWithArguementDirectPass(value: Any): Any {\n+        when (value) {\n+            is Int -> Log.d(TAG, \"The num value is Int: \")\n+            is Float -> Log.d(TAG, \"The num value is Float: \")\n+            is Double -> Log.d(TAG, \"The num value is Double: \")\n+            is String -> Log.d(TAG, \"The num value is String \")\n+\n+        }\n+        return value;\n+    }\n+\n+\n+\n+\n+}"
  },
  {
    "sha": "3183e666b9e2b9faf5f62c1a430d880847e39725",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/kotlin/KotlinFunctionsActivity.kt",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/KotlinFunctionsActivity.kt",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/KotlinFunctionsActivity.kt",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/KotlinFunctionsActivity.kt?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,53 @@\n+package com.learning.androidlearning.movemarker.kotlin\n+\n+import androidx.appcompat.app.AppCompatActivity\n+import android.os.Bundle\n+import android.util.Log\n+import com.learning.androidlearning.R\n+\n+class KotlinFunctionsActivity : AppCompatActivity() {\n+     val TAG:String =\"ArrayActivity\"\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_kotlin_functions)\n+        var expe={a:Int,b:Int->a%b}\n+        highOrderPassingLambda(expe)\n+        highOrderPassingFunction(::div)\n+\n+    }\n+\n+   /* High order functions\n+    Passing the functions and lambdas as arguement in function is called High Order function\n+    Lambda expression returns unit and strings*/\n+\n+   /* lambda Syntax\n+    Lambda expression is a simplified representation of a function\n+   val lambdaName : Type = { argumentList -> codeBody }\n+*/\n+\n+  /*  use of the inline function is does not allocate memory for the high order function\n+      it tells to the compiler to copy the code of highorder function when it is call*/\n+    fun highOrderPassingLambda( lmbd: (a:Int,b:Int) ->Int )\n+    {\n+        var result=lmbd (10,4)\n+        Log.d(TAG, \"highOrder Passing Lambda result \"+result)\n+    }\n+    fun div(a:Int,b:Int):Double\n+    {\n+       return a/b.toDouble();\n+    }\n+    inline fun highOrderPassingFunction(div:(Int,Int) -> Double)\n+    {\n+        div(10,5)\n+        Log.d(TAG, \"highOrderPassingFunction executed\")\n+        Log.d(TAG, \"highOrderPassingFunction: \"+div(10,5))\n+        return\n+    }\n+\n+\n+\n+\n+\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f4fcd5402cc6e5c8656b448137068bdaf1bde274",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/kotlin/OopsActivity.kt",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/OopsActivity.kt",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/OopsActivity.kt",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/kotlin/OopsActivity.kt?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,88 @@\n+package com.learning.androidlearning.movemarker.kotlin\n+\n+import androidx.appcompat.app.AppCompatActivity\n+import android.os.Bundle\n+import android.util.Log\n+import com.learning.androidlearning.R\n+\n+class OopsActivity : AppCompatActivity() {\n+\n+     var varOne=10;\n+     var varTwo=20;\n+     var varThree=30\n+    var TAG=\"OopsActivity\"\n+\n+    override fun onCreate(savedInstanceState: Bundle?) {\n+        super.onCreate(savedInstanceState)\n+        setContentView(R.layout.activity_oops)\n+\n+        //Java inner class\n+        //inner class have access the members of the outer class if they decared as private\n+        //treated as variable menmbers function\n+        //we can use the access modifiers private,public,protected\n+        //not static class - inner class\n+\n+        //Java Nested class\n+        //Nested class cannot have access the members of the outer class\n+        //declared as static\n+        //it provide better encapsulation\n+        //static class - Nested class\n+        execution()\n+\n+\n+\n+    }\n+    //Nested class\n+    class myClass\n+    {\n+\n+        class nestedClassOne\n+        {\n+            var TAG=\"NestedClass\"\n+            var varOne=10;\n+            var varTwo=20;\n+            var varThree=30\n+\n+            fun add()\n+            {\n+                varThree=varOne+varTwo;\n+                Log.d(TAG, \"add nested class: \"+varThree)\n+            }\n+\n+        }\n+    }\n+    //inner class\n+\n+    class myClassTwo\n+    {\n+        var TAG=\"InnerClass\"\n+        var varOne=10;\n+        var varTwo=20;\n+        var varThree=30\n+\n+        inner class innerClassOne\n+        {\n+            fun add()\n+            {\n+                varThree=varOne+varTwo;\n+                Log.d(TAG, \"add inner class: \"+varThree)\n+            }\n+\n+        }\n+    }\n+    \n+    fun execution()\n+    {\n+        val nested =myClass.nestedClassOne()\n+        nested.add()\n+\n+        val myClassTwoOuter=myClassTwo()\n+        myClassTwoOuter.innerClassOne().add()\n+    }\n+\n+\n+\n+\n+\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "14a1fbe793b92987871cfeb7c0f77f90fff3faf9",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/maps/MapsActivity.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/maps/MapsActivity.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/maps/MapsActivity.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/maps/MapsActivity.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -101,6 +101,10 @@ public void onSuccess(Location location) {\n             }\n         });\n     }\n+    public void markerMoveLocation()\n+    {\n+\n+    }\n \n     @Override\n     public void onMapReady(GoogleMap googleMap) {"
  },
  {
    "sha": "2d8029f2b09cb511fce4270988cf0f50b6c61ee0",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/maps/MapsMpveActivity.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/maps/MapsMpveActivity.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/maps/MapsMpveActivity.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/maps/MapsMpveActivity.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,41 @@\n+package com.learning.androidlearning.movemarker.maps;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.widget.ImageView;\n+\n+import com.google.android.gms.maps.GoogleMap;\n+import com.google.android.gms.maps.OnMapReadyCallback;\n+import com.google.android.gms.maps.model.BitmapDescriptorFactory;\n+import com.google.android.gms.maps.model.MarkerOptions;\n+import com.learning.androidlearning.R;\n+\n+public class MapsMpveActivity extends AppCompatActivity implements OnMapReadyCallback {\n+    GoogleMap mMap;\n+    ImageView locationMarker;\n+    String TAG=MapsMpveActivity.class.getSimpleName();\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_maps_mpve);\n+        locationMarker=findViewById(R.id.myMap);\n+    }\n+\n+    @Override\n+    public void onMapReady(GoogleMap googleMap) {\n+        mMap=googleMap;\n+\n+        mMap.setOnCameraMoveListener(new GoogleMap.OnCameraMoveListener() {\n+            @Override\n+            public void onCameraMove() {\n+                Log.d(TAG, \"onCameraMove: \");\n+\n+            }\n+        });\n+\n+\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "dc201324aea085acfbd3b7e249ee0e32628c383e",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/maps/ShowBackgroundLocationActivity.java",
    "status": "modified",
    "additions": 37,
    "deletions": 29,
    "changes": 66,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/maps/ShowBackgroundLocationActivity.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/maps/ShowBackgroundLocationActivity.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/maps/ShowBackgroundLocationActivity.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -30,11 +30,11 @@\n     private LocationRequest locationRequest;\n     private LocationCallback locationCallback;\n     private final String TAG = ShowBackgroundLocationActivity.class.getSimpleName();\n-    private TextView tvLongtitude,tvLatitude;\n+    private TextView tvLongtitude, tvLatitude;\n     private ForegroundService foregroundService;\n     private Boolean mServiceBound = false;\n     private BroadcastReceiver activityReceiver;\n-    private double latitude,longtitude;\n+    private double latitude, longtitude;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n@@ -43,23 +43,14 @@ protected void onCreate(Bundle savedInstanceState) {\n         tvLatitude = findViewById(R.id.tv_latitude);\n         tvLongtitude = findViewById(R.id.tv_longtitude);\n         fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this);\n-        getBackgroundLocationFromService();\n+        activityReceiver = new ActivityReceiver();\n+        registerActivityReceiver();\n         createLocationCallback();\n         createLocationRequest();\n         requestLocationUpdates();\n     }\n-    private void getBackgroundLocationFromService() {\n-        Log.d(TAG, \"getBackgroundLocationFromService: \");\n-        activityReceiver=new BroadcastReceiver() {\n-            @Override\n-            public void onReceive(Context context, Intent intent) {\n-                latitude=intent.getDoubleExtra(\"LAT\",latitude);\n-                longtitude=intent.getDoubleExtra(\"LONG\",longtitude);\n-                tvLatitude.setText(String.valueOf(latitude));\n-                tvLongtitude.setText(String.valueOf(longtitude));\n-            }\n-        };\n-        LocalBroadcastManager localBroadcastManager=LocalBroadcastManager.getInstance(this);\n+    private void registerActivityReceiver() {\n+        LocalBroadcastManager localBroadcastManager = LocalBroadcastManager.getInstance(this);\n         IntentFilter intentFilter = new IntentFilter();\n         intentFilter.addAction(MyAppConstants.BROADCAST_STRING);\n         localBroadcastManager.registerReceiver(activityReceiver, intentFilter);\n@@ -68,7 +59,7 @@ private void createLocationCallback() {\n         locationCallback = new LocationCallback() {\n             @Override\n             public void onLocationResult(LocationResult locationResult) {\n-                Log.d(TAG, \"onLocationResult: \"+locationResult.getLocations());\n+                Log.d(TAG, \"onLocationResult: \" + locationResult.getLocations());\n                 super.onLocationResult(locationResult);\n                 sendBackgroundLocationToService(locationResult.getLastLocation());\n             }\n@@ -81,24 +72,28 @@ private void createLocationRequest() {\n         locationRequest.setFastestInterval(50000);\n         locationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);\n     }\n+\n     @SuppressLint(\"MissingPermission\")\n     private void requestLocationUpdates() {\n-            fusedLocationProviderClient.requestLocationUpdates(locationRequest,\n-                    locationCallback, Looper.myLooper());\n+        fusedLocationProviderClient.requestLocationUpdates(locationRequest,\n+                locationCallback, Looper.myLooper());\n     }\n     private void removeLocationUpdates() {\n         fusedLocationProviderClient.removeLocationUpdates(locationCallback);\n     }\n     private void sendBackgroundLocationToService(Location lastLocation) {\n-        tvLatitude.setText(String.valueOf(lastLocation.getLatitude()));\n-        tvLongtitude.setText(String.valueOf(lastLocation.getLongitude()));\n-        foregroundService.GenerateUpdteNotification(String.valueOf(lastLocation.getLatitude())+String.valueOf(lastLocation.getLongitude()));\n+        Log.d(TAG, \"sendBackgroundLocationToService: \"+lastLocation);\n+        if(foregroundService!=null)\n+        {\n+            /*foregroundService.GenerateUpdteNotification(String.valueOf(lastLocation.getLatitude()) + String.valueOf(lastLocation.getLongitude()));*/\n+        }\n     }\n \n     @Override\n     protected void onStart() {\n         super.onStart();\n         startBindService();\n+\n     }\n     private void startBindService() {\n         Log.d(TAG, \"startbindservice: \");\n@@ -112,41 +107,54 @@ protected void onStop() {\n         super.onStop();\n         unBindService();\n     }\n+\n     private void unBindService() {\n-        if(mServiceConnection!=null)\n-        {\n+        if (mServiceConnection != null) {\n             if (mServiceBound) {\n                 unbindService(mServiceConnection);\n                 mServiceBound = false;\n             }\n         }\n     }\n+\n     private ServiceConnection mServiceConnection = new ServiceConnection() {\n \n         @Override\n         public void onServiceConnected(ComponentName name, IBinder service) {\n             Log.d(TAG, \"onServiceConnected: \");\n             ForegroundService.LocalBoundService myBinder = (ForegroundService.LocalBoundService) service;\n             foregroundService = myBinder.getService();\n+           /* foregroundService.GenerateUpdteNotification(\"My Notification\");*/\n             mServiceBound = true;\n         }\n \n         @Override\n         public void onServiceDisconnected(ComponentName name) {\n             Log.d(TAG, \"onServiceDisconnected: \");\n             mServiceBound = false;\n-            mServiceConnection=null;\n+            mServiceConnection = null;\n         }\n     };\n \n     @Override\n     protected void onDestroy() {\n+        LocalBroadcastManager.getInstance(this).unregisterReceiver(activityReceiver);\n         super.onDestroy();\n+        removeLocationUpdates();\n         mServiceConnection=null;\n-        if(activityReceiver!=null)\n-        {\n-            unregisterReceiver(activityReceiver);\n+    }\n+    class ActivityReceiver extends BroadcastReceiver\n+    {\n+        @Override\n+        public void onReceive(Context context, Intent intent) {\n+            Log.d(TAG, \"onReceive: \");\n+            if(intent.getAction().equals(MyAppConstants.BROADCAST_STRING))\n+            {\n+                latitude=intent.getDoubleExtra(\"LAT\",latitude);\n+                longtitude=intent.getDoubleExtra(\"LONG\",longtitude);\n+                tvLatitude.setText(String.valueOf(latitude));\n+                tvLongtitude.setText(String.valueOf(longtitude));\n+            }\n         }\n-        removeLocationUpdates();\n     }\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "521e462f761fdad7a85226be192f0fa09e333734",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdb/AddDetailsActivity.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/AddDetailsActivity.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/AddDetailsActivity.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/AddDetailsActivity.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,67 @@\n+package com.learning.androidlearning.movemarker.roomdb;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+import android.content.Intent;\n+import android.os.AsyncTask;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.widget.EditText;\n+import android.widget.Toast;\n+import com.learning.androidlearning.R;\n+import com.learning.androidlearning.movemarker.roomdbnew.RoomActivity;\n+\n+public class AddDetailsActivity extends AppCompatActivity {\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_list);\n+\n+        findViewById(R.id.btn_add).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                addDetails();\n+            }\n+        });\n+\n+        findViewById(R.id.btn_viewdetails).setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                Intent intent=new Intent(AddDetailsActivity.this, RoomActivity.class);\n+                startActivity(intent);\n+            }\n+        });\n+    }\n+    private void addDetails() {\n+        EditText edMobileNo = findViewById(R.id.ed_Mobileno);\n+        EditText edDriverId = findViewById(R.id.ed_driverid);\n+        EditText edPassword = findViewById(R.id.ed_password);\n+\n+        String mobileNo = edMobileNo.getText().toString();\n+        String driverId = edDriverId.getText().toString();\n+        String password = edPassword.getText().toString();\n+\n+        class Adddetails extends AsyncTask<Void, Void, Void> {\n+\n+            @Override\n+            protected Void doInBackground(Void... voids) {\n+                DriverDetails driverDetails=new DriverDetails();\n+                driverDetails.setMobileNumber(mobileNo);\n+                driverDetails.setDriverId(Integer.parseInt(driverId));\n+                driverDetails.setName(password);\n+                return null;\n+            }\n+\n+            @Override\n+            protected void onPostExecute(Void aVoid) {\n+                finish();\n+                startActivity(new Intent(getApplicationContext(), AddDetailsActivity.class));\n+                Toast.makeText(getApplicationContext(), \"Details added successfully\", Toast.LENGTH_SHORT).show();\n+                super.onPostExecute(aVoid);\n+            }\n+        }\n+            Adddetails adddetails=new Adddetails();\n+            adddetails.execute();\n+\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5dff3a814e73a099b412745a26815efc7cb2edf6",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DatabaseClient.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DatabaseClient.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DatabaseClient.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DatabaseClient.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,31 @@\n+package com.learning.androidlearning.movemarker.roomdb;\n+\n+import android.content.Context;\n+\n+import androidx.room.Room;\n+\n+public class DatabaseClient {\n+\n+    private Context mCtx;\n+    private static DatabaseClient mInstance;\n+    private DriverDataBase driverDataBase;\n+\n+    private DatabaseClient(Context mCtx)\n+    {\n+        this.mCtx = mCtx;\n+        driverDataBase = Room.databaseBuilder(mCtx, DriverDataBase.class, \"MyToDos\").build();\n+\n+    }\n+\n+    public static synchronized DatabaseClient getInstance(Context mCtx) {\n+        if (mInstance == null) {\n+            mInstance = new DatabaseClient(mCtx);\n+        }\n+        return mInstance;\n+    }\n+    public DriverDataBase getDriverDataBase()\n+    {\n+        return driverDataBase;\n+    }\n+\n+}"
  },
  {
    "sha": "fe6862842be201762247823e65a7d4ac079ff474",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDataBase.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDataBase.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDataBase.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDataBase.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,11 @@\n+package com.learning.androidlearning.movemarker.roomdb;\n+\n+import androidx.room.Database;\n+import androidx.room.RoomDatabase;\n+\n+    @Database(entities = {DriverDetails.class}, version = 1)\n+    public abstract class DriverDataBase extends RoomDatabase\n+    {\n+        public abstract DriverDetailsDao DriverDetailsDao();\n+    }\n+"
  },
  {
    "sha": "1f88af7d7ae3f2ed75cf70206aa18941d8e8c1db",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDetails.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDetails.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDetails.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDetails.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,62 @@\n+package com.learning.androidlearning.movemarker.roomdb;\n+\n+import androidx.room.ColumnInfo;\n+import androidx.room.Entity;\n+import androidx.room.PrimaryKey;\n+import androidx.room.TypeConverters;\n+\n+import com.learning.androidlearning.movemarker.roomdbnew.DateTypeConverter;\n+\n+import java.io.Serializable;\n+import java.util.Date;\n+\n+@Entity\n+public class DriverDetails implements Serializable {\n+\n+    @PrimaryKey(autoGenerate = true)\n+    private int driverId;\n+\n+    @ColumnInfo(name = \"mobileNumber\")\n+    private String mobileNumber;\n+\n+    @ColumnInfo(name = \"name\")\n+    private String name;\n+\n+    @ColumnInfo(name = \"date\")\n+    @TypeConverters({DateTypeConverter.class})\n+    private Date date;\n+\n+    public String getMobileNumber() {\n+        return mobileNumber;\n+    }\n+\n+    public void setMobileNumber(String mobileNumber) {\n+        this.mobileNumber = mobileNumber;\n+    }\n+\n+    public void setDriverId(int driverId) {\n+        this.driverId = driverId;\n+    }\n+\n+    public int getDriverId() {\n+        return driverId;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Date getDate() {\n+        return date;\n+    }\n+\n+    public void setDate(Date date) {\n+        this.date = date;\n+    }\n+\n+\n+}"
  },
  {
    "sha": "7862be3e767394315e635e4ba77e18199d9c2a9a",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDetailsDao.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDetailsDao.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDetailsDao.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/DriverDetailsDao.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,28 @@\n+package com.learning.androidlearning.movemarker.roomdb;\n+\n+\n+import androidx.room.Dao;\n+import androidx.room.Delete;\n+import androidx.room.Insert;\n+import androidx.room.Query;\n+import androidx.room.Update;\n+\n+import java.sql.Driver;\n+import java.util.List;\n+\n+@Dao\n+public interface DriverDetailsDao\n+{\n+    @Query(\"SELECT * FROM DriverDetails\")\n+    List<DriverDetails> getDriverDetails();\n+\n+    @Insert\n+    void insert(DriverDetails driverDetails);\n+\n+    @Update\n+    void update(DriverDetails driverDetails);\n+\n+    @Delete\n+    void delete(DriverDetails driverDetails);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "181e02bdb46642cbd91546fcc4609ed920824c87",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdb/ViewDetailsActivity.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/ViewDetailsActivity.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/ViewDetailsActivity.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/ViewDetailsActivity.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,56 @@\n+package com.learning.androidlearning.movemarker.roomdb;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.recyclerview.widget.LinearLayoutManager;\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+import android.os.AsyncTask;\n+import android.os.Bundle;\n+import android.widget.Toast;\n+\n+import com.learning.androidlearning.R;\n+\n+import java.sql.Driver;\n+import java.util.List;\n+\n+public class ViewDetailsActivity extends AppCompatActivity {\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_view_details);\n+        getDetails();\n+\n+    }\n+\n+    private void getDetails() {\n+\n+\n+        RecyclerView recyclerView=findViewById(R.id.rv_driverdetails);\n+        recyclerView.setLayoutManager(new LinearLayoutManager(this));\n+\n+        class ViewDriverDetails extends AsyncTask<Void, Void, List<DriverDetails>> {\n+\n+            @Override\n+            protected List<DriverDetails> doInBackground(Void... voids) {\n+                List<DriverDetails> driverDetails= DatabaseClient.\n+                        getInstance(getApplicationContext()).\n+                        getDriverDataBase().\n+                        DriverDetailsDao().\n+                        getDriverDetails();\n+                 return driverDetails;\n+\n+            }\n+\n+            @Override\n+            protected void onPostExecute(List<DriverDetails> driverDetails) {\n+                super.onPostExecute(driverDetails);\n+                ViewDriverDetailsAdapter viewDriverDetailsAdapter=new ViewDriverDetailsAdapter(ViewDetailsActivity.this,driverDetails);\n+                recyclerView.setAdapter(viewDriverDetailsAdapter);\n+            }\n+        }\n+        ViewDriverDetails viewDriverDetails=new ViewDriverDetails();\n+        viewDriverDetails.execute();\n+\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "67c8a635db3eb7dfc6f22f1e65373fe2387e8b8f",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdb/ViewDriverDetailsAdapter.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/ViewDriverDetailsAdapter.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/ViewDriverDetailsAdapter.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdb/ViewDriverDetailsAdapter.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,66 @@\n+package com.learning.androidlearning.movemarker.roomdb;\n+\n+import android.content.Context;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.TextView;\n+\n+import androidx.annotation.NonNull;\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+import com.learning.androidlearning.R;\n+\n+import java.util.List;\n+\n+public class ViewDriverDetailsAdapter extends RecyclerView.Adapter<ViewDriverDetailsAdapter.ViewHolder> {\n+    private List<DriverDetails> driverDetails;\n+    private String TAG= ViewDriverDetailsAdapter.class.getSimpleName();\n+    private Context context;\n+\n+    public ViewDriverDetailsAdapter(Context context, List<DriverDetails> driverDetails) {\n+        this.driverDetails = driverDetails;\n+        this.context = context;\n+    }\n+\n+    @Override\n+    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n+\n+        LayoutInflater inflater = LayoutInflater.from(context);\n+        View view = inflater.inflate(R.layout.listitem_driverdetails, parent, false);\n+        return new ViewDriverDetailsAdapter.ViewHolder(view);\n+\n+    }\n+\n+    @Override\n+    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\n+\n+        holder.tvDriverid.setText(String.valueOf(driverDetails.get(position).getDriverId()));\n+        holder.tvMobileNumber.setText(String.valueOf(driverDetails.get(position).getMobileNumber()));\n+        holder.tvName.setText(String.valueOf(driverDetails.get(position).getName()));\n+        holder.tvDate.setText(driverDetails.get(position).getDate().toString());\n+        Log.d(TAG, \"date: \"+driverDetails.get(position).getDate().toString());\n+    }\n+\n+    @Override\n+    public int getItemCount() {\n+        return driverDetails.size();\n+    }\n+\n+    /**\n+     * View holder class member this contains in every row in list.\n+     */\n+\n+    public class ViewHolder extends RecyclerView.ViewHolder {\n+       TextView tvDriverid,tvMobileNumber,tvName,tvDate;\n+\n+        public ViewHolder(View itemView) {\n+            super(itemView);\n+            tvDriverid = itemView.findViewById(R.id.tv_driverid);\n+            tvMobileNumber = itemView.findViewById(R.id.tv_mobileNumber);\n+            tvName = itemView.findViewById(R.id.tv_name);\n+            tvDate=itemView.findViewById(R.id.tv_date);\n+        }\n+    }\n+}"
  },
  {
    "sha": "d09c772f1db6d81c00e5d369044de43d99eedc4f",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/AddDriverActivity.java",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/AddDriverActivity.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/AddDriverActivity.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/AddDriverActivity.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,86 @@\n+package com.learning.androidlearning.movemarker.roomdbnew;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.core.content.ContextCompat;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.ViewModelProvider;\n+import android.app.Application;\n+import android.content.ComponentName;\n+import android.content.Intent;\n+import android.content.ServiceConnection;\n+import android.os.AsyncTask;\n+import android.os.Bundle;\n+import android.os.IBinder;\n+import android.text.TextUtils;\n+import android.util.Log;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.EditText;\n+import android.widget.Toast;\n+import com.learning.androidlearning.R;\n+import com.learning.androidlearning.movemarker.roomdb.AddDetailsActivity;\n+import com.learning.androidlearning.movemarker.roomdb.DatabaseClient;\n+import com.learning.androidlearning.movemarker.roomdb.DriverDetails;\n+import com.learning.androidlearning.movemarker.taxiui.ForegroundService;\n+import com.learning.androidlearning.movemarker.taxiui.utils.MyAppConstants;\n+import java.util.List;\n+\n+public class AddDriverActivity extends AppCompatActivity {\n+\n+    private String TAG=AddDriverActivity.class.getSimpleName();\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_add_driver);\n+        Button btn_save = findViewById(R.id.btn_add);\n+\n+        btn_save.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                addDetails();\n+            }\n+        });\n+    }\n+\n+    private void addDetails() {\n+        EditText ed_id = findViewById(R.id.ed_driverid);\n+        EditText ed_name = findViewById(R.id.ed_name);\n+        EditText ed_mobileNumber = findViewById(R.id.ed_Mobileno);\n+        String driverId = ed_id.getText().toString();\n+        String name = ed_name.getText().toString();\n+        String mobileNo = ed_mobileNumber.getText().toString();\n+\n+        class Adddetails extends AsyncTask<Void, Void, Void> {\n+\n+            @Override\n+            protected Void doInBackground(Void... voids) {\n+\n+                DriverDetails driverDetails = new DriverDetails();\n+                driverDetails.setDriverId(Integer.parseInt(driverId));\n+                driverDetails.setMobileNumber(mobileNo);\n+                driverDetails.setName(name);\n+                DriverDetailRepository driverDetailRepository=new DriverDetailRepository(getApplication());\n+                driverDetailRepository.insert(driverDetails);\n+                return null;\n+\n+            }\n+\n+            @Override\n+            protected void onPostExecute(Void aVoid) {\n+                finish();\n+                Toast.makeText(getApplicationContext(), \"Details added successfully\", Toast.LENGTH_SHORT).show();\n+                super.onPostExecute(aVoid);\n+                Intent intent=new Intent(AddDriverActivity.this,RoomActivity.class);\n+                startActivity(intent);\n+            }\n+        }\n+        Adddetails adddetails = new Adddetails();\n+        adddetails.execute();\n+    }\n+}\n+\n+\n+\n+\n+\n+"
  },
  {
    "sha": "2f06fcb6deaa53d79e2875e095b59fea28ccbf08",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DateTypeConverter.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DateTypeConverter.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DateTypeConverter.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DateTypeConverter.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,49 @@\n+package com.learning.androidlearning.movemarker.roomdbnew;\n+\n+import android.os.Build;\n+import android.util.Log;\n+\n+import androidx.annotation.RequiresApi;\n+import androidx.room.TypeConverter;\n+\n+import java.text.DateFormat;\n+import java.text.ParseException;\n+import java.text.SimpleDateFormat;\n+import java.time.OffsetDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Date;\n+import java.util.Locale;\n+import java.util.TimeZone;\n+import kotlin.jvm.JvmStatic;\n+\n+@RequiresApi(api = Build.VERSION_CODES.O)\n+public class DateTypeConverter {\n+\n+    static DateFormat df = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault());\n+    static {\n+        df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n+    }\n+\n+    @TypeConverter\n+    public static Date timeToDate(String value) {\n+        if (value != null) {\n+            try {\n+                return df.parse(value);\n+            } catch (ParseException e) {\n+                Log.e(\"TiviTypeConverters\", e.getMessage());\n+            }\n+            return null;\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    @TypeConverter\n+    public static String dateToTime(Date value) {\n+        if (value != null) {\n+            return df.format(value);\n+        } else {\n+            return null;\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a953893d749daad70de05085b2f85c7ec40b4f5e",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDao.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDao.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDao.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDao.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,26 @@\n+package com.learning.androidlearning.movemarker.roomdbnew;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.room.Dao;\n+import androidx.room.Insert;\n+import androidx.room.OnConflictStrategy;\n+import androidx.room.Query;\n+\n+import com.learning.androidlearning.movemarker.roomdb.DriverDetails;\n+\n+import java.util.List;\n+\n+@Dao\n+public interface DriverDao {\n+    @Insert(onConflict = OnConflictStrategy.IGNORE)//ignores a new one if exactly same as already in list\n+    void insert(DriverDetails driverDetails);\n+\n+    @Query(\"DELETE FROM DriverDetails\")\n+    void deleteall();\n+\n+    @Query(\"SELECT * FROM DriverDetails\")\n+    List<DriverDetails> getDriverDetails();\n+\n+    @Query(\"DELETE FROM DriverDetails  WHERE date <= date('now','-4 day')\")\n+    void deleteLastSevenDaysData();\n+}"
  },
  {
    "sha": "2e464ba4b336621225a456bc5d5b75cdf76ade3b",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDetailRepository.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDetailRepository.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDetailRepository.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDetailRepository.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,36 @@\n+package com.learning.androidlearning.movemarker.roomdbnew;\n+\n+import android.app.Application;\n+\n+import androidx.lifecycle.LiveData;\n+\n+import com.learning.androidlearning.movemarker.roomdb.DriverDetails;\n+\n+import java.util.List;\n+\n+public class DriverDetailRepository {\n+\n+    private DriverDao driverDao;\n+    private List<DriverDetails> driverDetails;\n+\n+    public DriverDetailRepository(Application application) {\n+        DriverDetailsRoomDatabase driverDetailsRoomDatabase = DriverDetailsRoomDatabase.getDriverDetailsRoomDatabase(application);\n+        driverDao = driverDetailsRoomDatabase.driverDao();\n+        driverDetails = driverDao.getDriverDetails();\n+\n+    }\n+    public List<DriverDetails> getAllDriverDetails(){\n+            return driverDetails;\n+        }\n+        public void insert(DriverDetails driverDetails)\n+        {\n+            DriverDetailsRoomDatabase.databaseWriteExecutor.execute(()->{\n+                driverDao.insert(driverDetails);\n+            });\n+        }\n+        public void delete() {\n+        DriverDetailsRoomDatabase.databaseWriteExecutor.execute(() -> {\n+            driverDao.deleteLastSevenDaysData();\n+        });\n+    }\n+}"
  },
  {
    "sha": "05865fa994a70174d7894ccdcfd6b5b35adcba0c",
    "filename": "app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDetailsRoomDatabase.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/mak-works/pav-traning/blob/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDetailsRoomDatabase.java",
    "raw_url": "https://github.com/mak-works/pav-traning/raw/006996b37ab3eea332b98ab3e2f46a74dcd9b895/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDetailsRoomDatabase.java",
    "contents_url": "https://api.github.com/repos/mak-works/pav-traning/contents/app/src/main/java/com/learning/androidlearning/movemarker/roomdbnew/DriverDetailsRoomDatabase.java?ref=006996b37ab3eea332b98ab3e2f46a74dcd9b895",
    "patch": "@@ -0,0 +1,35 @@\n+package com.learning.androidlearning.movemarker.roomdbnew;\n+\n+import android.content.Context;\n+\n+import androidx.room.Database;\n+import androidx.room.Room;\n+import androidx.room.RoomDatabase;\n+import androidx.room.TypeConverters;\n+\n+import com.learning.androidlearning.movemarker.roomdb.DriverDetails;\n+\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+@Database(entities = {DriverDetails.class}, version = 9,exportSchema = true)\n+@TypeConverters({DateTypeConverter.class})\n+public abstract class DriverDetailsRoomDatabase extends RoomDatabase {\n+    public abstract DriverDao driverDao();\n+\n+    private static volatile DriverDetailsRoomDatabase driverDetailsRoomDatabase;\n+    private static final int NUMBER_OF_THREADS = 4;\n+    static final ExecutorService databaseWriteExecutor = Executors.newFixedThreadPool(NUMBER_OF_THREADS);\n+\n+    static DriverDetailsRoomDatabase getDriverDetailsRoomDatabase(final Context context) {\n+        if (driverDetailsRoomDatabase == null) {\n+            synchronized (DriverDetailsRoomDatabase.class) {\n+                if (driverDetailsRoomDatabase == null) {\n+                    driverDetailsRoomDatabase = Room.databaseBuilder(context.getApplicationContext(), DriverDetailsRoomDatabase.class, \"driver_database\").\n+                            fallbackToDestructiveMigration().allowMainThreadQueries().build();\n+                }\n+            }\n+        }\n+        return driverDetailsRoomDatabase;\n+    }\n+}\n\\ No newline at end of file"
  }
]
