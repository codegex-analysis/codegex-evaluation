[
  {
    "sha": "dadffadc18230d5656281b6e810cda12a439ab0e",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/build.gradle",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/build.gradle",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/build.gradle?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -25,6 +25,10 @@ dependencies {\n     implementation group: 'mysql', name: 'mysql-connector-java'\n     implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.1.4'\n     implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'\n+    // 요청파라미터 검증하기 위해 추가\n+    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.4.3'\n+    //javax.annotation.meta.When 경고로 인해 구글에서 해당 버그 수정한 의존성 추가\n+    implementation 'com.google.code.findbugs:jsr305:3.0.2'\n     compileOnly 'org.projectlombok:lombok'\n     annotationProcessor 'org.projectlombok:lombok'\n     testImplementation 'org.springframework.boot:spring-boot-starter-test'"
  },
  {
    "sha": "1343ad6de8ef9708ea8b00215a148e289c454e86",
    "filename": "sql/ddl.sql",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/sql/ddl.sql",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/sql/ddl.sql",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/sql/ddl.sql?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,9 @@\n+create table Curator(\n+    id int(10) not null auto_increment,\n+    email varchar(64) not null,\n+    name varchar(64) not null,\n+    password varchar(64) not null,\n+    salt varchar(64) not null,\n+    primary key (id),\n+    unique index idx_email (email)\n+);"
  },
  {
    "sha": "959f01597da002f0679c5f75f1c1658bd26f2f0e",
    "filename": "src/main/java/com/dev/careers/controller/CuratorController.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/controller/CuratorController.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/controller/CuratorController.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/java/com/dev/careers/controller/CuratorController.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,34 @@\n+package com.dev.careers.controller;\n+\n+import com.dev.careers.model.Curator;\n+import com.dev.careers.service.CuratorService;\n+import com.dev.careers.service.error.ViolationException;\n+import java.util.Optional;\n+import javax.validation.Valid;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.validation.BindingResult;\n+import org.springframework.validation.ObjectError;\n+import org.springframework.web.bind.annotation.ModelAttribute;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+\n+@RequiredArgsConstructor\n+@RestController\n+public class CuratorController {\n+\n+    private final CuratorService curatorService;\n+\n+    @PostMapping(\"/curators/join\")\n+    public void putMember(@Valid @ModelAttribute Curator curator, BindingResult bindingResult)\n+        throws Exception {\n+        if (bindingResult.hasErrors()) {\n+            Optional<ObjectError> objectError = bindingResult.getAllErrors().stream().findFirst();\n+            if (objectError.isPresent()) {\n+                throw new ViolationException();\n+            }\n+        }\n+\n+        curatorService.join(curator);\n+    }\n+}"
  },
  {
    "sha": "9446f9d6d20273d8d7958a4a675b6b11c558ca89",
    "filename": "src/main/java/com/dev/careers/mapper/CuratorMapper.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/mapper/CuratorMapper.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/mapper/CuratorMapper.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/java/com/dev/careers/mapper/CuratorMapper.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,16 @@\n+package com.dev.careers.mapper;\n+\n+import org.apache.ibatis.annotations.Mapper;\n+import org.apache.ibatis.annotations.Param;\n+\n+@Mapper\n+public interface CuratorMapper {\n+\n+    Integer insertCurator(\n+            @Param(\"email\") String email,\n+            @Param(\"name\") String name,\n+            @Param(\"password\") String password,\n+            @Param(\"salt\") String salt);\n+\n+    boolean checkEmailExists(@Param(\"email\") String email);\n+}"
  },
  {
    "sha": "c2a4a71aa9c33eb7df461600a1a1fd3c1898f0c5",
    "filename": "src/main/java/com/dev/careers/model/Curator.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/model/Curator.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/model/Curator.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/java/com/dev/careers/model/Curator.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,31 @@\n+package com.dev.careers.model;\n+\n+import javax.validation.constraints.Email;\n+import javax.validation.constraints.Pattern;\n+import lombok.Getter;\n+import lombok.NonNull;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.lang.Nullable;\n+\n+@Getter\n+@RequiredArgsConstructor\n+public class Curator {\n+    @Nullable\n+    private int id;\n+    \n+    @NonNull\n+    @Email(message = \"Email Format Violation\")\n+    private String email;\n+    \n+    @NonNull\n+    private String name;\n+\n+    //최소 8자리에 숫자, 문자, 특수문자 각각 1개 이상 포함\n+    @Pattern(regexp = \"^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[$@$!%*#?&])[A-Za-z\\\\d$@$!%*#?&]{8,}$\",\n+            message = \"Password Format Violation\")\n+    @NonNull\n+    private String password;\n+    \n+    @Nullable\n+    private String salt;\n+}"
  },
  {
    "sha": "44f894e51284595a814eadf2b786be584f952a18",
    "filename": "src/main/java/com/dev/careers/service/CuratorService.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/CuratorService.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/CuratorService.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/java/com/dev/careers/service/CuratorService.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,29 @@\n+package com.dev.careers.service;\n+\n+import com.dev.careers.mapper.CuratorMapper;\n+import com.dev.careers.model.Curator;\n+import com.dev.careers.service.encryption.PasswordEncryptor;\n+import com.dev.careers.service.error.DuplicatedEmailException;\n+import java.security.NoSuchAlgorithmException;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+\n+@RequiredArgsConstructor\n+@Service\n+public class CuratorService {\n+    private final CuratorMapper curatorMapper;\n+    private final PasswordEncryptor passwordEncryptor;\n+\n+    public void join(Curator curator) throws NoSuchAlgorithmException {\n+        //중복검증\n+        if (curatorMapper.checkEmailExists(curator.getEmail()))\n+            throw new DuplicatedEmailException();\n+\n+        String salt = passwordEncryptor.makeSalt();\n+        curatorMapper.insertCurator(\n+            curator.getEmail(),\n+            curator.getName(),\n+            passwordEncryptor.hashing(curator.getPassword().getBytes(), salt),\n+            salt);\n+    }\n+}"
  },
  {
    "sha": "015c3cb977deb8c899ffcaec9bf23fd471085a4e",
    "filename": "src/main/java/com/dev/careers/service/encryption/PasswordEncryptor.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/encryption/PasswordEncryptor.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/encryption/PasswordEncryptor.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/java/com/dev/careers/service/encryption/PasswordEncryptor.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,8 @@\n+package com.dev.careers.service.encryption;\n+\n+import java.security.NoSuchAlgorithmException;\n+\n+public interface PasswordEncryptor {\n+    String makeSalt();\n+    String hashing(byte[] password, String salt) throws NoSuchAlgorithmException;\n+}"
  },
  {
    "sha": "c25d1af69799d72b9abe1cb8aeec27a10a5dc4ad",
    "filename": "src/main/java/com/dev/careers/service/encryption/SHA256Encryptor.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/encryption/SHA256Encryptor.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/encryption/SHA256Encryptor.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/java/com/dev/careers/service/encryption/SHA256Encryptor.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,43 @@\n+package com.dev.careers.service.encryption;\n+\n+import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.SecureRandom;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class SHA256Encryptor implements PasswordEncryptor {\n+    private final static int SALT_SIZE = 16;\n+\n+    @Override\n+    public String makeSalt() {\n+        SecureRandom srd = new SecureRandom();\n+        byte[] data = new byte[SALT_SIZE];\n+        srd.nextBytes(data);\n+\n+        return byteArrayToString(data);\n+    }\n+\n+    //Salt와 키 스트레칭 방식으로 구현\n+    @Override\n+    public String hashing(byte[] password, String salt) throws NoSuchAlgorithmException {\n+        MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n+\n+        StringBuilder builder = new StringBuilder();\n+        for (int i = 0; i < 10; i++) {\n+            builder.append(byteArrayToString(password));\n+            builder.append(salt);\n+            md.update(builder.toString().getBytes());\n+            password = md.digest();\n+        }\n+        return new String(password);\n+    }\n+\n+    public String byteArrayToString(byte[] bytes) {\n+        StringBuilder builder = new StringBuilder();\n+        for (byte data : bytes) {\n+            builder.append(String.format(\"%02X \", data));\n+        }\n+        return builder.toString();\n+    }\n+}"
  },
  {
    "sha": "96e93f98091ae19f32fff02a303c8be9126ebf5b",
    "filename": "src/main/java/com/dev/careers/service/error/CuratorExceptionHandler.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/error/CuratorExceptionHandler.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/error/CuratorExceptionHandler.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/java/com/dev/careers/service/error/CuratorExceptionHandler.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,16 @@\n+package com.dev.careers.service.error;\n+\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+import org.springframework.web.bind.annotation.RestControllerAdvice;\n+\n+@RestControllerAdvice\n+public class CuratorExceptionHandler {\n+\n+    @ResponseStatus(HttpStatus.BAD_REQUEST)\n+    @ExceptionHandler(value = {DuplicatedEmailException.class, ViolationException.class})\n+    public void badRequest(final RuntimeException ex) {\n+\n+    }\n+}"
  },
  {
    "sha": "e7002691060bc27a6d5700e52fd4f547d8b37d09",
    "filename": "src/main/java/com/dev/careers/service/error/DuplicatedEmailException.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/error/DuplicatedEmailException.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/error/DuplicatedEmailException.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/java/com/dev/careers/service/error/DuplicatedEmailException.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,8 @@\n+package com.dev.careers.service.error;\n+\n+public class DuplicatedEmailException extends RuntimeException {\n+\n+    public DuplicatedEmailException() {\n+\n+    }\n+}"
  },
  {
    "sha": "aa8a071dd9bbeaeab4cd7fd86f370fe9ef3a2d65",
    "filename": "src/main/java/com/dev/careers/service/error/ViolationException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/error/ViolationException.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/java/com/dev/careers/service/error/ViolationException.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/java/com/dev/careers/service/error/ViolationException.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,7 @@\n+package com.dev.careers.service.error;\n+\n+public class ViolationException extends RuntimeException {\n+\n+    public ViolationException() {\n+    }\n+}"
  },
  {
    "sha": "2318dc961505a39dda1dfa631ce47d00292c30fb",
    "filename": "src/main/resources/application.properties",
    "status": "modified",
    "additions": 7,
    "deletions": 3,
    "changes": 10,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/resources/application.properties",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/resources/application.properties?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -1,3 +1,7 @@\n-spring.datasource.url=jdbc:mysql://localhost:3306/<디비이름>?useUnicode=true@characterEncoding=utf8&serverTimezone=Asia/Seoul\n-spring.datasource.username=<유저이름>\n-spring.datasource.password=<유저비밀번호>\n+spring.datasource.url=jdbc:mysql://localhost:3306/Careers?useUnicode=true@characterEncoding=utf8&serverTimezone=Asia/Seoul\n+#<유저이름>\n+spring.datasource.username=dev\n+# <유저비밀번호>\n+spring.datasource.password=1234\n+mybatis.type-aliases-package=com.dev.careers.model\n+mybatis.mapper-locations=mybatis/*.xml"
  },
  {
    "sha": "6f821f233b599ad7a6ad476b713380bdbc822509",
    "filename": "src/main/resources/mybatis/CuratorMapper.xml",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/resources/mybatis/CuratorMapper.xml",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/main/resources/mybatis/CuratorMapper.xml",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/main/resources/mybatis/CuratorMapper.xml?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n+  \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n+<mapper namespace=\"com.dev.careers.mapper.CuratorMapper\">\n+  <select id=\"insertCurator\" resultType=\"int\">\n+    INSERT INTO Curator (email, name, password, salt)\n+    VALUES (#{email}, #{name}, #{password}, #{salt});\n+  </select>\n+\n+  <select id=\"checkEmailExists\" resultType=\"boolean\">\n+    select exists(select 1 from curator where email = #{email});\n+  </select>\n+</mapper>"
  },
  {
    "sha": "a71eeba812f0261980c27248aca349b06c892e0c",
    "filename": "src/test/java/com/dev/careers/controller/CuratorControllerTest.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/test/java/com/dev/careers/controller/CuratorControllerTest.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/test/java/com/dev/careers/controller/CuratorControllerTest.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/test/java/com/dev/careers/controller/CuratorControllerTest.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,64 @@\n+package com.dev.careers.controller;\n+\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import com.dev.careers.service.error.CuratorExceptionHandler;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.setup.MockMvcBuilders;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@SpringBootTest\n+@Transactional\n+class CuratorControllerTest {\n+\n+    @Autowired\n+    CuratorController curatorController;\n+    MockMvc mockMvc;\n+\n+    @BeforeEach\n+    public void beforeEach() {\n+        mockMvc = MockMvcBuilders.standaloneSetup(curatorController)\n+            .setControllerAdvice(new CuratorExceptionHandler()).build();\n+    }\n+\n+    @Test\n+    @DisplayName(\"정상적인 회원가입\")\n+    public void joinCurator() throws Exception {\n+        mockMvc.perform(post(\"/curators/join\")\n+            .param(\"email\", \"test@google.com\")\n+            .param(\"name\", \"홍길동\")\n+            .param(\"password\", \"test123!@\"))\n+            .andDo(print())\n+            .andExpect(status().isOk());\n+    }\n+\n+    @Test\n+    @DisplayName(\"잘못된 이메일 형식 요청\")\n+    public void violationEmail() throws Exception {\n+        mockMvc.perform(post(\"/curators/join\")\n+            .param(\"email\", \"test123.com\")\n+            .param(\"name\", \"홍길동\")\n+            .param(\"password\", \"test123!@\"))\n+            .andDo(print())\n+            .andExpect(status().isBadRequest());\n+    }\n+\n+    @Test\n+    @DisplayName(\"잘못된 비밀번호 형식 요청\")\n+    public void violationPassword() throws Exception {\n+        mockMvc.perform(post(\"/curators/join\")\n+                .param(\"email\", \"test@google.com\")\n+                .param(\"name\", \"홍길동\")\n+                .param(\"password\", \"123\"))\n+                .andDo(print())\n+                .andExpect(status().isBadRequest());\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a19afcc99b6a6e67b2c0a21052e7371bcd75ab05",
    "filename": "src/test/java/com/dev/careers/service/CuratorServiceTest.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/f-lab-edu/careers/blob/510ae49d3333d145e68c5bec8b2d78062e813b36/src/test/java/com/dev/careers/service/CuratorServiceTest.java",
    "raw_url": "https://github.com/f-lab-edu/careers/raw/510ae49d3333d145e68c5bec8b2d78062e813b36/src/test/java/com/dev/careers/service/CuratorServiceTest.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/careers/contents/src/test/java/com/dev/careers/service/CuratorServiceTest.java?ref=510ae49d3333d145e68c5bec8b2d78062e813b36",
    "patch": "@@ -0,0 +1,31 @@\n+package com.dev.careers.service;\n+\n+import com.dev.careers.model.Curator;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.dao.DuplicateKeyException;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Transactional\n+@SpringBootTest\n+class CuratorServiceTest {\n+\n+    @Autowired\n+    CuratorService curatorService;\n+\n+    @Test\n+    @DisplayName(\"중복된 이메일 회원가입 요청\")\n+    public void DupicatedEmail() throws Exception {\n+        Curator curator = new Curator(\n+            \"test@google.com\",\n+            \"홍길동\",\n+            \"test123!@\"\n+        );\n+        curatorService.join(curator);\n+        org.junit.jupiter.api.Assertions.assertThrows(\n+            DuplicateKeyException.class,\n+            () -> curatorService.join(curator));\n+    }\n+}\n\\ No newline at end of file"
  }
]
