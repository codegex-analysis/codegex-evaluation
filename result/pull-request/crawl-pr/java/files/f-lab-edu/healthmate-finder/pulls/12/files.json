[
  {
    "sha": "ae80256653dea9f7b6507eee25c151437a1669da",
    "filename": "helparty/src/main/java/com/hamryt/helparty/config/DatabaseConfiguration.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/f-lab-edu/healthmate-finder/blob/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/config/DatabaseConfiguration.java",
    "raw_url": "https://github.com/f-lab-edu/healthmate-finder/raw/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/config/DatabaseConfiguration.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/healthmate-finder/contents/helparty/src/main/java/com/hamryt/helparty/config/DatabaseConfiguration.java?ref=8cbb53a24afa20f964226d191550dfc454396591",
    "patch": "@@ -24,6 +24,7 @@ public SqlSessionFactory mainSqlSessionFactory(DataSource dataSource) throws Exc\n         SqlSessionFactoryBean sqlSessionFactoryBean = new SqlSessionFactoryBean();\n         sqlSessionFactoryBean.setDataSource(dataSource);\n         sqlSessionFactoryBean.setTypeAliasesPackage(\"com.hamryt.helparty.dto\");\n+        sqlSessionFactoryBean.setConfigLocation(applicationContext.getResource(\"classpath:mybatis-config.xml\"));\n         sqlSessionFactoryBean\n             .setMapperLocations(applicationContext.getResources(\"classpath:mybatis/mapper/*.xml\"));\n         return sqlSessionFactoryBean.getObject();"
  },
  {
    "sha": "325c7b8cab5e9b4ad1413103c2795f61da84a6eb",
    "filename": "helparty/src/main/java/com/hamryt/helparty/controller/UserController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/f-lab-edu/healthmate-finder/blob/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/controller/UserController.java",
    "raw_url": "https://github.com/f-lab-edu/healthmate-finder/raw/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/controller/UserController.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/healthmate-finder/contents/helparty/src/main/java/com/hamryt/helparty/controller/UserController.java?ref=8cbb53a24afa20f964226d191550dfc454396591",
    "patch": "@@ -1,6 +1,6 @@\n package com.hamryt.helparty.controller;\n \n-import com.hamryt.helparty.dto.UserDto;\n+import com.hamryt.helparty.request.SignUpRequest;\n import com.hamryt.helparty.service.UserService;\n import javax.validation.Valid;\n import lombok.RequiredArgsConstructor;\n@@ -23,10 +23,10 @@\n     @PostMapping\n     @ResponseStatus(HttpStatus.CREATED)\n     public void registerUser(\n-        @Valid @RequestBody UserDto resource\n+        @Valid @RequestBody SignUpRequest resource\n     ) {\n-\n         userService.insertUser(resource);\n     }\n \n+\n }"
  },
  {
    "sha": "07133940641eaa2448eefde16ffa81cfe0b90bb5",
    "filename": "helparty/src/main/java/com/hamryt/helparty/dto/UserDto.java",
    "status": "modified",
    "additions": 14,
    "deletions": 6,
    "changes": 20,
    "blob_url": "https://github.com/f-lab-edu/healthmate-finder/blob/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/dto/UserDto.java",
    "raw_url": "https://github.com/f-lab-edu/healthmate-finder/raw/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/dto/UserDto.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/healthmate-finder/contents/helparty/src/main/java/com/hamryt/helparty/dto/UserDto.java?ref=8cbb53a24afa20f964226d191550dfc454396591",
    "patch": "@@ -1,20 +1,28 @@\n package com.hamryt.helparty.dto;\n \n-import javax.validation.constraints.NotEmpty;\n import lombok.Builder;\n import lombok.Getter;\n import lombok.ToString;\n \n @Getter\n-@Builder\n @ToString\n public class UserDto {\n \n-    @NotEmpty(message = \"이메일은 필수 입니다\")\n+    private Long id;\n     private String email;\n-    @NotEmpty\n     private String name;\n-    @NotEmpty\n     private String password;\n+    private String addressCode;\n+    private String addressDetail;\n \n-}\n+    @Builder\n+    public UserDto(String email, String name, String password, String addressCode,\n+        String addressDetail) {\n+        this.email = email;\n+        this.name = name;\n+        this.password = password;\n+        this.addressCode = addressCode;\n+        this.addressDetail = addressDetail;\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ea8fb16c44f91a70ceb81048c35d036b7931f037",
    "filename": "helparty/src/main/java/com/hamryt/helparty/mapper/UserMapper.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/f-lab-edu/healthmate-finder/blob/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/mapper/UserMapper.java",
    "raw_url": "https://github.com/f-lab-edu/healthmate-finder/raw/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/mapper/UserMapper.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/healthmate-finder/contents/helparty/src/main/java/com/hamryt/helparty/mapper/UserMapper.java?ref=8cbb53a24afa20f964226d191550dfc454396591",
    "patch": "@@ -8,8 +8,6 @@\n @Mapper\n public interface UserMapper {\n \n-    boolean findByEmailAndPassword(String email, String password);\n-\n     int insertUser(UserDto user);\n \n     boolean isExistsEmail(String email);"
  },
  {
    "sha": "df6e2afaad8a4e4bb9ff7d740663cac4a105a1be",
    "filename": "helparty/src/main/java/com/hamryt/helparty/request/SignUpRequest.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/f-lab-edu/healthmate-finder/blob/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/request/SignUpRequest.java",
    "raw_url": "https://github.com/f-lab-edu/healthmate-finder/raw/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/request/SignUpRequest.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/healthmate-finder/contents/helparty/src/main/java/com/hamryt/helparty/request/SignUpRequest.java?ref=8cbb53a24afa20f964226d191550dfc454396591",
    "patch": "@@ -0,0 +1,24 @@\n+package com.hamryt.helparty.request;\n+\n+import javax.validation.constraints.NotEmpty;\n+import lombok.Getter;\n+\n+@Getter\n+public class SignUpRequest {\n+\n+    @NotEmpty\n+    private String email;\n+\n+    @NotEmpty\n+    private String name;\n+\n+    @NotEmpty\n+    private String password;\n+\n+    @NotEmpty\n+    private String addressCode;\n+\n+    @NotEmpty\n+    private String addressDetail;\n+\n+}"
  },
  {
    "sha": "b6891b9528fd12c766551d05a1147fda3a0c7812",
    "filename": "helparty/src/main/java/com/hamryt/helparty/service/UserService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/f-lab-edu/healthmate-finder/blob/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/service/UserService.java",
    "raw_url": "https://github.com/f-lab-edu/healthmate-finder/raw/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/service/UserService.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/healthmate-finder/contents/helparty/src/main/java/com/hamryt/helparty/service/UserService.java?ref=8cbb53a24afa20f964226d191550dfc454396591",
    "patch": "@@ -1,10 +1,11 @@\n package com.hamryt.helparty.service;\n \n import com.hamryt.helparty.dto.UserDto;\n+import com.hamryt.helparty.request.SignUpRequest;\n \n public interface UserService {\n \n-    void insertUser(UserDto userDto);\n+    void insertUser(SignUpRequest userDto);\n \n     UserDto findUserByEmailAndPassword(String email, String password);\n "
  },
  {
    "sha": "80ccb7ab58da9fb85bd71a41c484887ba06339e1",
    "filename": "helparty/src/main/java/com/hamryt/helparty/service/UserServiceImpl.java",
    "status": "modified",
    "additions": 11,
    "deletions": 7,
    "changes": 18,
    "blob_url": "https://github.com/f-lab-edu/healthmate-finder/blob/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/service/UserServiceImpl.java",
    "raw_url": "https://github.com/f-lab-edu/healthmate-finder/raw/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/java/com/hamryt/helparty/service/UserServiceImpl.java",
    "contents_url": "https://api.github.com/repos/f-lab-edu/healthmate-finder/contents/helparty/src/main/java/com/hamryt/helparty/service/UserServiceImpl.java?ref=8cbb53a24afa20f964226d191550dfc454396591",
    "patch": "@@ -4,6 +4,7 @@\n import com.hamryt.helparty.exception.EmailExistedException;\n import com.hamryt.helparty.exception.UnexpectedResultException;\n import com.hamryt.helparty.mapper.UserMapper;\n+import com.hamryt.helparty.request.SignUpRequest;\n import lombok.RequiredArgsConstructor;\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.stereotype.Service;\n@@ -20,22 +21,24 @@\n \n \n     @Transactional\n-    public void insertUser(UserDto userDto) {\n+    public void insertUser(SignUpRequest request) {\n \n-        if (isExistsEmail(userDto.getEmail())) {\n-            throw new EmailExistedException(userDto.getEmail());\n+        if (isExistsEmail(request.getEmail())) {\n+            throw new EmailExistedException(request.getEmail());\n         }\n \n-        String encodedPassword = encryptor.encrypt(userDto.getPassword());\n+        String encodedPassword = encryptor.encrypt(request.getPassword());\n \n         UserDto newUser = UserDto.builder()\n-            .email(userDto.getEmail())\n-            .name(userDto.getName())\n+            .email(request.getEmail())\n+            .name(request.getName())\n             .password(encodedPassword)\n+            .addressCode(request.getAddressCode())\n+            .addressDetail(request.getAddressDetail())\n             .build();\n \n         if (userMapper.insertUser(newUser) != 1) {\n-            throw new UnexpectedResultException(userDto.toString());\n+            throw new UnexpectedResultException(newUser.toString());\n         }\n \n     }\n@@ -49,4 +52,5 @@ public boolean isExistsEmail(String email) {\n     public UserDto findUserByEmailAndPassword(String email, String password) {\n         return userMapper.findUserByEmailAndPassword(email, password);\n     }\n+\n }"
  },
  {
    "sha": "072ab7ac65848e3c3c17ab8e16c8812b544bd4d3",
    "filename": "helparty/src/main/resources/application.yml",
    "status": "modified",
    "additions": 8,
    "deletions": 5,
    "changes": 13,
    "blob_url": "https://github.com/f-lab-edu/healthmate-finder/blob/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/resources/application.yml",
    "raw_url": "https://github.com/f-lab-edu/healthmate-finder/raw/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/f-lab-edu/healthmate-finder/contents/helparty/src/main/resources/application.yml?ref=8cbb53a24afa20f964226d191550dfc454396591",
    "patch": "@@ -1,11 +1,14 @@\n ## Database 설정\n spring:\n   datasource:\n-      driverClassName: com.mysql.cj.jdbc.Driver\n-      url: jdbc:mysql://localhost:3306/helpartydb?allowPublicKeyRetrieval=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC\n-      username: root\n-      password: 1234\n+    driverClassName: com.mysql.cj.jdbc.Driver\n+    url: jdbc:mysql://localhost:3306/helpartydb?allowPublicKeyRetrieval=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC\n+    username: root\n+    password: 1234\n   redis:\n     host: localhost\n     port: 6379\n-\n+mybatis:\n+  config-location: classpath:mybatis-config.xml\n+  configuration:\n+    map-underscore-to-camel-case: true\n\\ No newline at end of file"
  },
  {
    "sha": "6621c4ed196d7c03597df1b88a36568e754ff06d",
    "filename": "helparty/src/main/resources/mybatis-config.xml",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/f-lab-edu/healthmate-finder/blob/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/resources/mybatis-config.xml",
    "raw_url": "https://github.com/f-lab-edu/healthmate-finder/raw/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/resources/mybatis-config.xml",
    "contents_url": "https://api.github.com/repos/f-lab-edu/healthmate-finder/contents/helparty/src/main/resources/mybatis-config.xml?ref=8cbb53a24afa20f964226d191550dfc454396591",
    "patch": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n+\n+<configuration>\n+  <settings>\n+    <!-- snake형식을 camel형식으로 바꿔주는 설정 -->\n+    <setting name=\"mapUnderscoreToCamelCase\" value=\"true\"/>\n+    <!-- query 결과 필드가 null인 경우, 값이 누락되지 않게 하기 위한 설정 -->\n+    <setting name=\"callSettersOnNulls\" value=\"true\"/>\n+  </settings>\n+</configuration>\n\\ No newline at end of file"
  },
  {
    "sha": "b6075a575a547e120e1b0fb898acc2409eb5c48f",
    "filename": "helparty/src/main/resources/mybatis/mapper/UserMapper.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/f-lab-edu/healthmate-finder/blob/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/resources/mybatis/mapper/UserMapper.xml",
    "raw_url": "https://github.com/f-lab-edu/healthmate-finder/raw/8cbb53a24afa20f964226d191550dfc454396591/helparty/src/main/resources/mybatis/mapper/UserMapper.xml",
    "contents_url": "https://api.github.com/repos/f-lab-edu/healthmate-finder/contents/helparty/src/main/resources/mybatis/mapper/UserMapper.xml?ref=8cbb53a24afa20f964226d191550dfc454396591",
    "patch": "@@ -4,17 +4,17 @@\n \n <mapper namespace=\"com.hamryt.helparty.mapper.UserMapper\">\n \n-  <insert id=\"insertUser\" parameterType=\"com.hamryt.helparty.dto.UserDto\">\n-    INSERT INTO user (email, name, password)\n-    VALUES(#{email}, #{name}, #{password})\n+  <insert id=\"insertUser\" useGeneratedKeys=\"true\" keyProperty=\"id\" parameterType=\"com.hamryt.helparty.dto.UserDto\">\n+    INSERT INTO user (email, name, password, address_code, address_detail)\n+    VALUES(#{email}, #{name}, #{password}, #{addressCode}, #{addressDetail})\n   </insert>\n \n   <select id=\"isExistsEmail\" resultType=\"_boolean\">\n     SELECT EXISTS (SELECT * FROM user WHERE email=#{email}) AS success;\n   </select>\n \n   <select id=\"findUserByEmailAndPassword\" resultType=\"com.hamryt.helparty.dto.UserDto\">\n-    SELECT email, name, password FROM user WHERE email=#{email} AND password=#{password}\n+    SELECT id, email, name, password, address_code, address_detail FROM user WHERE email=#{email} AND password=#{password}\n   </select>\n \n </mapper>"
  }
]
