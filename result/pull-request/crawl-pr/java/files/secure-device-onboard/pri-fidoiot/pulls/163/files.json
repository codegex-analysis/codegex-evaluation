[
  {
    "sha": "e83e6ae6f756a718772675443b1ce4d441520d0f",
    "filename": "component-samples/demo/reseller/Dockerfile",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/secure-device-onboard/pri-fidoiot/blob/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/demo/reseller/Dockerfile",
    "raw_url": "https://github.com/secure-device-onboard/pri-fidoiot/raw/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/demo/reseller/Dockerfile",
    "contents_url": "https://api.github.com/repos/secure-device-onboard/pri-fidoiot/contents/component-samples/demo/reseller/Dockerfile?ref=4e2a3b2492d736e7e3deb8a272ccabe489fe822e",
    "patch": "@@ -15,6 +15,7 @@ WORKDIR /home/reseller/\n \n # Setup reseller dependencies\n COPY ./lib ./lib/\n+COPY ./certs ./certs\n COPY reseller.jar .\n COPY reseller_keystore.p12 .\n COPY reseller-entrypoint.sh ."
  },
  {
    "sha": "261719658722b4102f3d1f30f6830b46859f5771",
    "filename": "component-samples/demo/reseller/README.md",
    "status": "modified",
    "additions": 23,
    "deletions": 1,
    "changes": 24,
    "blob_url": "https://github.com/secure-device-onboard/pri-fidoiot/blob/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/demo/reseller/README.md",
    "raw_url": "https://github.com/secure-device-onboard/pri-fidoiot/raw/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/demo/reseller/README.md",
    "contents_url": "https://api.github.com/repos/secure-device-onboard/pri-fidoiot/contents/component-samples/demo/reseller/README.md?ref=4e2a3b2492d736e7e3deb8a272ccabe489fe822e",
    "patch": "@@ -127,4 +127,26 @@ Refer the [Docker Commands](../README.md/#docker-commands) to start the service.\n \n The PKCS12 keystore file \\<fido-iot-src\\>/demo/reseller/reseller_keystore.p12 contains the default reseller keys that are imported into the softHSM keystore inside the container, during startup. It contains 3 PrivateKeyEntry with algorithm types: EC-256, EC-384 and RSA-2048, and should continue to hold PrivateKeyEntry with different algorithms. To insert/replace an existing PrivateKeyEntry of any particular algorithm, refer to section [Inserting Keys into Keystore](../README.md/#inserting-keys-into-keystore) to insert new certificate/private-key pair into \\<fido-iot-src\\>/demo/reseller/reseller_keystore.p12.\n \n-**IMPORTANT** This is an example implementation using simplified credentials. This must be changed while performing production deployment\n\\ No newline at end of file\n+**IMPORTANT** This is an example implementation using simplified credentials. This must be changed while performing production deployment\n+\n+# Configuring Reseller for HTTPS/TLS Communication\n+\n+By default, the Reseller uses HTTP for all communications on port 8070. In addition to that, the Reseller can be configured to handle HTTPS request.\n+\n+- Generate the Keystore/Certificate for the Reseller. [REFER](https://docs.oracle.com/cd/E19509-01/820-3503/6nf1il6er/index.html)\n+\n+  * Ensure that the web certificate is issued to the resolvable domain of the Reseller server.\n+\n+- Copy the generated Keystore/Certificate to `reseller/certs` folder.\n+\n+- Update the following environment varibles in `reseller/reseller.env` file\n+\n+    |  Variable            |  Value            |             description       |\n+    | ---------------------|-------------------|-------------------------------|\n+    | reseller_protocol_scheme  | https             | To enable HTTPS communication.|\n+    | reseller_https_port       | port number       | The given port number will be used for HTTPS communication. |\n+    | reseller_ssl_keystore     | keystore-filename | filename of Keystore that is present in the `reseller/certs` folder.|\n+    | reseller_ssl_keystore_password| keystore-password | password of the keystore. |\n+\n+    **NOTE:** Appropriate security measures with respect to key-store management should be considered while performing production deployment of Reseller.\n+    Avoid using the default keystore available for production deployment.\n\\ No newline at end of file"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "component-samples/demo/reseller/certs/.gitkeep",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/secure-device-onboard/pri-fidoiot/blob/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/demo/reseller/certs/.gitkeep",
    "raw_url": "https://github.com/secure-device-onboard/pri-fidoiot/raw/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/demo/reseller/certs/.gitkeep",
    "contents_url": "https://api.github.com/repos/secure-device-onboard/pri-fidoiot/contents/component-samples/demo/reseller/certs/.gitkeep?ref=4e2a3b2492d736e7e3deb8a272ccabe489fe822e"
  },
  {
    "sha": "815cc07c9c57b25b502b1ee682f2a0bdc6bb5bb2",
    "filename": "component-samples/demo/reseller/certs/reseller_tls_keystore.p12",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/secure-device-onboard/pri-fidoiot/blob/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/demo/reseller/certs/reseller_tls_keystore.p12",
    "raw_url": "https://github.com/secure-device-onboard/pri-fidoiot/raw/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/demo/reseller/certs/reseller_tls_keystore.p12",
    "contents_url": "https://api.github.com/repos/secure-device-onboard/pri-fidoiot/contents/component-samples/demo/reseller/certs/reseller_tls_keystore.p12?ref=4e2a3b2492d736e7e3deb8a272ccabe489fe822e"
  },
  {
    "sha": "f057122def9a43e278f431df5e0f998b34791ea7",
    "filename": "component-samples/demo/reseller/reseller.env",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/secure-device-onboard/pri-fidoiot/blob/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/demo/reseller/reseller.env",
    "raw_url": "https://github.com/secure-device-onboard/pri-fidoiot/raw/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/demo/reseller/reseller.env",
    "contents_url": "https://api.github.com/repos/secure-device-onboard/pri-fidoiot/contents/component-samples/demo/reseller/reseller.env?ref=4e2a3b2492d736e7e3deb8a272ccabe489fe822e",
    "patch": "@@ -9,3 +9,10 @@ reseller_keystore_password=RsrKs@3er\n reseller_database_driver=org.h2.Driver\n reseller_api_user=admin\n reseller_api_password=test\n+\n+# Reseller HTTPS configuration.\n+reseller_protocol_scheme=http\n+reseller_https_port=8072\n+reseller_ssl_keystore=/home/reseller/certs/reseller_tls_keystore.p12\n+reseller_ssl_keystore-password=re$eller\n+"
  },
  {
    "sha": "958a360d13ff4d32b6ac73bbc6c1012b9839fd77",
    "filename": "component-samples/reseller/src/main/java/org/fido/iot/sample/ResellerAppConstants.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/secure-device-onboard/pri-fidoiot/blob/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/reseller/src/main/java/org/fido/iot/sample/ResellerAppConstants.java",
    "raw_url": "https://github.com/secure-device-onboard/pri-fidoiot/raw/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/reseller/src/main/java/org/fido/iot/sample/ResellerAppConstants.java",
    "contents_url": "https://api.github.com/repos/secure-device-onboard/pri-fidoiot/contents/component-samples/reseller/src/main/java/org/fido/iot/sample/ResellerAppConstants.java?ref=4e2a3b2492d736e7e3deb8a272ccabe489fe822e",
    "patch": "@@ -25,5 +25,10 @@\n   public static final String KEYSTORE_PWD = \"reseller_keystore_password\";\n   public static final String KEYSTORE_PATH = \"\";\n \n+  public static final String SSL_KEYSTORE_PATH = \"reseller_ssl_keystore\";\n+  public static final String SSL_KEYSTORE_PASSWORD = \"reseller_ssl_keystore-password\";\n+  public static final String RESELLER_HTTPS_PORT = \"reseller_https_port\";\n+  public static final String RESELLER_PROTOCOL_SCHEME = \"reseller_protocol_scheme\";\n+\n   public static final String USER_DIR = \"user.dir\";\n }"
  },
  {
    "sha": "5145dacd624af8ba5e06f948169df9c979ea4f89",
    "filename": "component-samples/reseller/src/main/java/org/fido/iot/sample/ResellerServerApp.java",
    "status": "modified",
    "additions": 50,
    "deletions": 2,
    "changes": 52,
    "blob_url": "https://github.com/secure-device-onboard/pri-fidoiot/blob/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/reseller/src/main/java/org/fido/iot/sample/ResellerServerApp.java",
    "raw_url": "https://github.com/secure-device-onboard/pri-fidoiot/raw/4e2a3b2492d736e7e3deb8a272ccabe489fe822e/component-samples/reseller/src/main/java/org/fido/iot/sample/ResellerServerApp.java",
    "contents_url": "https://api.github.com/repos/secure-device-onboard/pri-fidoiot/contents/component-samples/reseller/src/main/java/org/fido/iot/sample/ResellerServerApp.java?ref=4e2a3b2492d736e7e3deb8a272ccabe489fe822e",
    "patch": "@@ -6,7 +6,9 @@\n import java.nio.file.Path;\n import org.apache.catalina.Context;\n import org.apache.catalina.LifecycleException;\n+import org.apache.catalina.Service;\n import org.apache.catalina.Wrapper;\n+import org.apache.catalina.connector.Connector;\n import org.apache.catalina.startup.Tomcat;\n import org.apache.tomcat.util.descriptor.web.LoginConfig;\n import org.apache.tomcat.util.descriptor.web.SecurityCollection;\n@@ -19,6 +21,20 @@\n   private static final String CATALINA_HOME = \"catalina.home\";\n   private static final String AUTH_ROLE = \"api\";\n \n+  private static final int RESELLER_PORT =\n+      null != ResellerConfigLoader.loadConfig(ResellerAppConstants.API_PORT)\n+          ? Integer.parseInt(ResellerConfigLoader.loadConfig(\n+          ResellerAppConstants.API_PORT)) : 8070;\n+\n+  private static final int RESELLER_HTTPS_PORT =\n+      null != ResellerConfigLoader.loadConfig(ResellerAppConstants.RESELLER_HTTPS_PORT)\n+          ? Integer.parseInt(ResellerConfigLoader.loadConfig(\n+          ResellerAppConstants.RESELLER_HTTPS_PORT)) : 8072;\n+\n+  private static final String RESELLER_SCHEME =\n+      null != ResellerConfigLoader.loadConfig(ResellerAppConstants.RESELLER_PROTOCOL_SCHEME)\n+          ? ResellerConfigLoader.loadConfig(ResellerAppConstants.RESELLER_PROTOCOL_SCHEME) : \"http\";\n+\n   /**\n    * Application main.\n    *\n@@ -28,8 +44,6 @@ public static void main(String[] args) {\n \n     Tomcat tomcat = new Tomcat();\n \n-    tomcat.setPort(\n-        Integer.parseInt(ResellerConfigLoader.loadConfig(ResellerAppConstants.API_PORT)));\n \n     System.out.println(System.getProperty(\"user.dir\"));\n     // set the path of tomcat\n@@ -94,6 +108,40 @@ public static void main(String[] args) {\n     wrapper.addMapping(\"/console/*\");\n     wrapper.setLoadOnStartup(3);\n \n+    Service service = tomcat.getService();\n+    Connector httpsConnector = new Connector();\n+\n+    if (RESELLER_SCHEME.toLowerCase().equals(\"https\")) {\n+\n+      httpsConnector.setPort(RESELLER_HTTPS_PORT);\n+      httpsConnector.setSecure(true);\n+      httpsConnector.setScheme(RESELLER_SCHEME);\n+\n+      Path keyStoreFile =\n+          Path.of(ResellerConfigLoader.loadConfig(ResellerAppConstants.SSL_KEYSTORE_PATH));\n+      String keystorePass =\n+          ResellerConfigLoader.loadConfig(ResellerAppConstants.SSL_KEYSTORE_PASSWORD);\n+\n+      httpsConnector.setProperty(\"keystorePass\", keystorePass);\n+      httpsConnector.setProperty(\"keystoreFile\", keyStoreFile.toFile().getAbsolutePath());\n+      httpsConnector.setProperty(\"clientAuth\", \"false\");\n+      httpsConnector.setProperty(\"sslProtocol\", \"TLS\");\n+      httpsConnector.setProperty(\"SSLEnabled\", \"true\");\n+      service.addConnector(httpsConnector);\n+\n+    }\n+\n+    Connector httpConnector = new Connector();\n+    httpConnector.setPort(RESELLER_PORT);\n+    httpConnector.setScheme(\"http\");\n+    httpConnector.setRedirectPort(RESELLER_HTTPS_PORT);\n+    httpConnector.setProperty(\"protocol\", \"HTTP/1.1\");\n+    httpConnector.setProperty(\"connectionTimeout\", \"20000\");\n+    service.addConnector(httpConnector);\n+    tomcat.setConnector(httpConnector);\n+\n+    tomcat.getConnector();\n+\n     //setup digest auth\n     LoginConfig config = new LoginConfig();\n     config.setAuthMethod(\"DIGEST\");"
  }
]
