[
  {
    "sha": "378b1cae4810903d8c1b89e499c14bbd1ab2522c",
    "filename": ".run/All Tests.run.xml",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/.run/All%20Tests.run.xml",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/.run/All%20Tests.run.xml",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/.run/All%20Tests.run.xml?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,14 @@\n+<component name=\"ProjectRunConfigurationManager\">\n+  <configuration default=\"false\" name=\"All Tests\" type=\"JUnit\" factoryName=\"JUnit\">\n+    <module name=\"thscp-mediator-wadau-portal\" />\n+    <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\n+    <option name=\"ALTERNATIVE_JRE_PATH\" value=\"1.8\" />\n+    <option name=\"MAIN_CLASS_NAME\" value=\"\" />\n+    <option name=\"METHOD_NAME\" value=\"\" />\n+    <option name=\"TEST_OBJECT\" value=\"directory\" />\n+    <dir value=\"$PROJECT_DIR$/src/test/java/tz\" />\n+    <method v=\"2\">\n+      <option name=\"Make\" enabled=\"true\" />\n+    </method>\n+  </configuration>\n+</component>\n\\ No newline at end of file"
  },
  {
    "sha": "5f179c69a80148e1889a5b8e7cd4c264d809a5b0",
    "filename": ".run/Build.run.xml",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/.run/Build.run.xml",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/.run/Build.run.xml",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/.run/Build.run.xml?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,32 @@\n+<component name=\"ProjectRunConfigurationManager\">\n+  <configuration default=\"false\" name=\"Build\" type=\"MavenRunConfiguration\" factoryName=\"Maven\">\n+    <MavenSettings>\n+      <option name=\"myGeneralSettings\" />\n+      <option name=\"myRunnerSettings\" />\n+      <option name=\"myRunnerParameters\">\n+        <MavenRunnerParameters>\n+          <option name=\"profiles\">\n+            <set />\n+          </option>\n+          <option name=\"goals\">\n+            <list>\n+              <option value=\"clean\" />\n+              <option value=\"package\" />\n+              <option value=\"-DskipTests=true\" />\n+              <option value=\"-e\" />\n+              <option value=\"source:jar\" />\n+              <option value=\"javadoc:jar\" />\n+            </list>\n+          </option>\n+          <option name=\"pomFileName\" />\n+          <option name=\"profilesMap\">\n+            <map />\n+          </option>\n+          <option name=\"resolveToWorkspace\" value=\"false\" />\n+          <option name=\"workingDirPath\" value=\"$PROJECT_DIR$\" />\n+        </MavenRunnerParameters>\n+      </option>\n+    </MavenSettings>\n+    <method v=\"2\" />\n+  </configuration>\n+</component>\n\\ No newline at end of file"
  },
  {
    "sha": "a061329cd520bb110ffce119abcb9900f011b6c0",
    "filename": "README.md",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/README.md",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/README.md",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/README.md?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -17,8 +17,7 @@ An [OpenHIM](http://openhim.org/) mediator for handling system integration betwe\n \n This mediator is designed to work with Wadau Portal that send JSON Payloads while communicating with the THSCP via the HIM.\n \n-### 3 Configuration Parameters\n-\n+### 2.1 Mediator Properties\n The configuration parameters specific to the mediator and destination system can be found at\n \n `src/main/resources/mediator.properties`\n@@ -42,6 +41,7 @@ The configuration parameters specific to the mediator and destination system can\n     destination.scheme=destination-system-scheme\n ```\n \n+### 2.2 Mediator Registration\n The configuration parameters specific to the mediator and the mediator's metadata can be found at\n \n `src/main/resources/mediator-registration-info.json`\n@@ -132,7 +132,7 @@ The configuration parameters specific to the mediator and the mediator's metadat\n     }\n ```\n \n-## 4. Deployment\n+## 3. Deployment\n \n To build and run the mediator after performing the above configurations, run the following\n "
  },
  {
    "sha": "5de859fbb73b2814ca495da95b7527aea02e078b",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/pom.xml",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/pom.xml",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/pom.xml?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -55,7 +55,6 @@\n                 <version>3.3.0</version>\n                 <executions>\n                     <execution>\n-                        <id>create-my-bundle</id>\n                         <phase>package</phase>\n                         <goals>\n                             <goal>single</goal>\n@@ -76,7 +75,7 @@\n             <plugin>\n                 <groupId>org.jacoco</groupId>\n                 <artifactId>jacoco-maven-plugin</artifactId>\n-                <version>0.8.5</version>\n+                <version>0.8.6</version>\n                 <configuration>\n                     <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>\n                     <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>"
  },
  {
    "sha": "d601de90cddc06bf6ff94de199700ab79822849c",
    "filename": "src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/DefaultOrchestrator.java",
    "status": "modified",
    "additions": 173,
    "deletions": 7,
    "changes": 180,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/DefaultOrchestrator.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/DefaultOrchestrator.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/DefaultOrchestrator.java?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -1,30 +1,196 @@\n package tz.go.moh.him.thscp.mediator.wadau.portal;\n \n+import akka.actor.ActorSelection;\n import akka.actor.UntypedActor;\n import akka.event.Logging;\n import akka.event.LoggingAdapter;\n+import org.apache.commons.codec.binary.Base64;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.http.HttpHeaders;\n import org.apache.http.HttpStatus;\n+import org.json.JSONObject;\n import org.openhim.mediator.engine.MediatorConfig;\n import org.openhim.mediator.engine.messages.FinishRequest;\n import org.openhim.mediator.engine.messages.MediatorHTTPRequest;\n+import org.openhim.mediator.engine.messages.MediatorHTTPResponse;\n+import tz.go.moh.him.mediator.core.domain.ResultDetail;\n+import tz.go.moh.him.mediator.core.serialization.JsonSerializer;\n+import tz.go.moh.him.thscp.mediator.wadau.portal.domain.Location;\n+import tz.go.moh.him.thscp.mediator.wadau.portal.domain.WadauRequest;\n \n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+import java.util.*;\n+\n+/**\n+ * Represents a default orchestrator.\n+ */\n public class DefaultOrchestrator extends UntypedActor {\n-    LoggingAdapter log = Logging.getLogger(getContext().system(), this);\n \n+    /**\n+     * The serializer.\n+     */\n+    private static final JsonSerializer serializer = new JsonSerializer();\n+    /**\n+     * The mediator config.\n+     */\n     private final MediatorConfig config;\n+    /**\n+     * The error message resource.\n+     */\n+    private final JSONObject errorMessageResource;\n+    /**\n+     * The logger instance.\n+     */\n+    private final LoggingAdapter log = Logging.getLogger(getContext().system(), this);\n+    /**\n+     * The working request.\n+     */\n+    private MediatorHTTPRequest workingRequest;\n \n-\n-    public DefaultOrchestrator(MediatorConfig config) {\n+    /**\n+     * Initializes a new instance of the {@link DefaultOrchestrator} class.\n+     *\n+     * @param config The configuration.\n+     */\n+    public DefaultOrchestrator(MediatorConfig config) throws IOException {\n         this.config = config;\n+\n+        InputStream stream = DefaultOrchestrator.class.getClassLoader().getResourceAsStream(\"error-messages.json\");\n+        this.errorMessageResource = new JSONObject(IOUtils.toString(stream));\n     }\n \n+    /**\n+     * Handles the received message.\n+     *\n+     * @param msg The received message.\n+     */\n     @Override\n-    public void onReceive(Object msg) throws Exception {\n+    public void onReceive(Object msg) {\n         if (msg instanceof MediatorHTTPRequest) {\n-            FinishRequest finishRequest = new FinishRequest(\"A message from my new mediator!\", \"text/plain\", HttpStatus.SC_OK);\n-            ((MediatorHTTPRequest) msg).getRequestHandler().tell(finishRequest, getSelf());\n+\n+            workingRequest = (MediatorHTTPRequest) msg;\n+\n+            log.info(\"Received request: \" + workingRequest.getHost() + \" \" + workingRequest.getMethod() + \" \" + workingRequest.getPath());\n+\n+            Map<String, String> headers = new HashMap<>();\n+\n+            headers.put(HttpHeaders.CONTENT_TYPE, \"application/json\");\n+\n+            List<Pair<String, String>> parameters = new ArrayList<>();\n+\n+            String host;\n+            int port;\n+            String path;\n+            String scheme;\n+            String username;\n+            String password;\n+\n+            if (config.getDynamicConfig().isEmpty()) {\n+                log.debug(\"Dynamic config is empty, using config from mediator.properties\");\n+\n+                host = config.getProperty(\"destination.host\");\n+                port = Integer.parseInt(config.getProperty(\"destination.port\"));\n+                path = config.getProperty(\"destination.path\");\n+                scheme = config.getProperty(\"destination.scheme\");\n+            } else {\n+                log.debug(\"Using dynamic config\");\n+\n+                JSONObject destinationProperties = new JSONObject(config.getDynamicConfig()).getJSONObject(\"destinationConnectionProperties\");\n+\n+                host = destinationProperties.getString(\"destinationHost\");\n+                port = destinationProperties.getInt(\"destinationPort\");\n+                path = destinationProperties.getString(\"destinationPath\");\n+                scheme = destinationProperties.getString(\"destinationScheme\");\n+\n+                if (destinationProperties.has(\"destinationUsername\") && destinationProperties.has(\"destinationPassword\")) {\n+                    username = destinationProperties.getString(\"destinationUsername\");\n+                    password = destinationProperties.getString(\"destinationPassword\");\n+\n+                    // if we have a username and a password\n+                    // we want to add the username and password as the Basic Auth header in the HTTP request\n+                    if (username != null && !\"\".equals(username) && password != null && !\"\".equals(password)) {\n+                        String auth = username + \":\" + password;\n+                        byte[] encodedAuth = Base64.encodeBase64(auth.getBytes(StandardCharsets.ISO_8859_1));\n+                        String authHeader = \"Basic \" + new String(encodedAuth);\n+                        headers.put(HttpHeaders.AUTHORIZATION, authHeader);\n+                    }\n+                }\n+            }\n+\n+            List<WadauRequest> wadauRequests = Arrays.asList(serializer.deserialize(workingRequest.getBody(), WadauRequest[].class));\n+            List<ResultDetail> results = this.validateMessage(wadauRequests);\n+\n+            // if there are any errors\n+            // we need to serialize the results and return\n+            if (results.stream().anyMatch(c -> c.getType() == ResultDetail.ResultsDetailsType.ERROR)) {\n+                FinishRequest finishRequest = new FinishRequest(serializer.serializeToString(results), \"application/json\", HttpStatus.SC_BAD_REQUEST);\n+                ((MediatorHTTPRequest) msg).getRequestHandler().tell(finishRequest, getSelf());\n+                return;\n+            }\n+\n+            host = scheme + \"://\" + host + \":\" + port + path;\n+\n+            MediatorHTTPRequest request = new MediatorHTTPRequest(workingRequest.getRequestHandler(), getSelf(), host, \"POST\",\n+                    host, serializer.serializeToString(wadauRequests), headers, parameters);\n+\n+            ActorSelection httpConnector = getContext().actorSelection(config.userPathFor(\"http-connector\"));\n+            httpConnector.tell(request, getSelf());\n+\n+        } else if (msg instanceof MediatorHTTPResponse) {\n+            workingRequest.getRequestHandler().tell(((MediatorHTTPResponse) msg).toFinishRequest(), getSelf());\n         } else {\n             unhandled(msg);\n         }\n     }\n-}\n+\n+    /**\n+     * Validates a Wadau request.\n+     *\n+     * @param requests The requests.\n+     * @return Returns a list of result details.\n+     */\n+    private List<ResultDetail> validateMessage(List<WadauRequest> requests) {\n+        ArrayList<ResultDetail> results = new ArrayList<>();\n+\n+        for (WadauRequest request : requests) {\n+            if (StringUtils.isEmpty(request.getUuid()) || StringUtils.isWhitespace(request.getUuid())) {\n+                results.add(new ResultDetail(ResultDetail.ResultsDetailsType.ERROR, String.format(errorMessageResource.getString(\"NN_ERR01\"), \"uuid\"), null));\n+            }\n+\n+            if (StringUtils.isEmpty(request.getPartnerIdentification()) || StringUtils.isWhitespace(request.getPartnerIdentification())) {\n+                results.add(new ResultDetail(ResultDetail.ResultsDetailsType.ERROR, String.format(errorMessageResource.getString(\"NN_ERR01\"), \"partnerIdentification\"), null));\n+            }\n+\n+            if (StringUtils.isEmpty(request.getScope()) || StringUtils.isWhitespace(request.getScope())) {\n+                results.add(new ResultDetail(ResultDetail.ResultsDetailsType.ERROR, String.format(errorMessageResource.getString(\"NN_ERR01\"), \"scope\"), null));\n+            }\n+\n+            for (Location location : request.getLocations()) {\n+                if (StringUtils.isEmpty(location.getDistrict()) || StringUtils.isWhitespace(location.getDistrict())) {\n+                    results.add(new ResultDetail(ResultDetail.ResultsDetailsType.ERROR, String.format(errorMessageResource.getString(\"NN_ERR01\"), \"district\"), null));\n+                }\n+\n+                if (location.getLatitude() < -90 || location.getLatitude() > 90) {\n+                    results.add(new ResultDetail(ResultDetail.ResultsDetailsType.ERROR, String.format(errorMessageResource.getString(\"RANGE_ERR01\"), \"latitude\", location.getLatitude(), -90.0, 90.0), null));\n+                }\n+\n+                if (location.getLongitude() < -180 || location.getLongitude() > 180) {\n+                    results.add(new ResultDetail(ResultDetail.ResultsDetailsType.ERROR, String.format(errorMessageResource.getString(\"RANGE_ERR01\"), \"longitude\", location.getLongitude(), -180.0, 180.0), null));\n+                }\n+            }\n+\n+            // HACK: java has no native way to validate is a string is a valid UUID\n+            try {\n+                UUID.fromString(request.getUuid());\n+            } catch (NullPointerException | IllegalArgumentException e) {\n+                results.add(new ResultDetail(ResultDetail.ResultsDetailsType.ERROR, String.format(errorMessageResource.getString(\"PARSE_ERR01\"), request.getUuid(), UUID.class.getName()), e.getMessage()));\n+            }\n+        }\n+\n+        return results;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b9259992c41c329332bcd9090ae7d32928b11793",
    "filename": "src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/MediatorMain.java",
    "status": "modified",
    "additions": 67,
    "deletions": 27,
    "changes": 94,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/MediatorMain.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/MediatorMain.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/MediatorMain.java?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -1,42 +1,64 @@\n package tz.go.moh.him.thscp.mediator.wadau.portal;\n \n-\n import akka.actor.ActorSystem;\n import akka.event.Logging;\n import akka.event.LoggingAdapter;\n import org.apache.commons.io.FileUtils;\n import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.openhim.mediator.engine.*;\n+\n import java.io.File;\n+import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.Properties;\n \n+/**\n+ * Represents the main application.\n+ */\n public class MediatorMain {\n \n+    /**\n+     * Represents the mediator registration info.\n+     */\n+    private static final String MEDIATOR_REGISTRATION_INFO = \"mediator-registration-info.json\";\n+\n+    /**\n+     * Builds the routing table.\n+     *\n+     * @return Returns the routing table.\n+     * @throws RoutingTable.RouteAlreadyMappedException if the route is already mapped\n+     */\n     private static RoutingTable buildRoutingTable() throws RoutingTable.RouteAlreadyMappedException {\n         RoutingTable routingTable = new RoutingTable();\n \n-        //TODO Configure routes here\n-        //...\n         routingTable.addRoute(\"/thscp\", DefaultOrchestrator.class);\n \n         return routingTable;\n     }\n \n+    /**\n+     * Builds the startup actors configuration.\n+     *\n+     * @return Returns the startup actors configuration.\n+     */\n     private static StartupActorsConfig buildStartupActorsConfig() {\n-        StartupActorsConfig startupActors = new StartupActorsConfig();\n-\n-        //TODO Add own startup actors here\n-        //...\n-\n-        return startupActors;\n+        return new StartupActorsConfig();\n     }\n \n+    /**\n+     * Loads the configuration.\n+     *\n+     * @param configPath The path of the configuration.\n+     * @return Returns the configuration instance.\n+     * @throws IOException                              if an IO exception occurs\n+     * @throws RoutingTable.RouteAlreadyMappedException if the route is already mapped\n+     */\n     private static MediatorConfig loadConfig(String configPath) throws IOException, RoutingTable.RouteAlreadyMappedException {\n         MediatorConfig config = new MediatorConfig();\n \n-        if (configPath!=null) {\n+        if (StringUtils.isNotEmpty(configPath)) {\n             Properties props = new Properties();\n             File conf = new File(configPath);\n             InputStream in = FileUtils.openInputStream(conf);\n@@ -50,9 +72,10 @@ private static MediatorConfig loadConfig(String configPath) throws IOException,\n \n         config.setName(config.getProperty(\"mediator.name\"));\n         config.setServerHost(config.getProperty(\"mediator.host\"));\n-        config.setServerPort( Integer.parseInt(config.getProperty(\"mediator.port\")) );\n+        config.setServerPort(Integer.parseInt(config.getProperty(\"mediator.port\")));\n         config.setRootTimeout(Integer.parseInt(config.getProperty(\"mediator.timeout\")));\n \n+        config.setCoreAPIScheme(config.getProperty(\"core.scheme\"));\n         config.setCoreHost(config.getProperty(\"core.host\"));\n         config.setCoreAPIUsername(config.getProperty(\"core.api.user\"));\n         config.setCoreAPIPassword(config.getProperty(\"core.api.password\"));\n@@ -63,51 +86,68 @@ private static MediatorConfig loadConfig(String configPath) throws IOException,\n         config.setRoutingTable(buildRoutingTable());\n         config.setStartupActors(buildStartupActorsConfig());\n \n-        InputStream regInfo = MediatorMain.class.getClassLoader().getResourceAsStream(\"mediator-registration-info.json\");\n-        RegistrationConfig regConfig = new RegistrationConfig(regInfo);\n+        InputStream registrationInformation = MediatorMain.class.getClassLoader().getResourceAsStream(MEDIATOR_REGISTRATION_INFO);\n+\n+        if (registrationInformation == null) {\n+            throw new FileNotFoundException(\"Unable to locate \" + MEDIATOR_REGISTRATION_INFO);\n+        }\n+\n+        RegistrationConfig regConfig = new RegistrationConfig(registrationInformation);\n+\n         config.setRegistrationConfig(regConfig);\n \n-        if (config.getProperty(\"mediator.heartbeats\")!=null && \"true\".equalsIgnoreCase(config.getProperty(\"mediator.heartbeats\"))) {\n+        if (config.getProperty(\"mediator.heartbeats\") != null && \"true\".equalsIgnoreCase(config.getProperty(\"mediator.heartbeats\"))) {\n             config.setHeartbeatsEnabled(true);\n         }\n \n         return config;\n     }\n \n+    /**\n+     * The main entry point of the application.\n+     *\n+     * @param args The arguments.\n+     * @throws Exception if an exception occurs\n+     */\n     public static void main(String... args) throws Exception {\n-        //setup actor system\n+\n+        // setup actor system\n         final ActorSystem system = ActorSystem.create(\"mediator\");\n-        //setup logger for main\n-        final LoggingAdapter log = Logging.getLogger(system, \"main\");\n+\n+        // setup logger for main\n+        final LoggingAdapter log = Logging.getLogger(system, MediatorMain.class);\n \n         //setup actors\n         log.info(\"Initializing mediator actors...\");\n \n         String configPath = null;\n-        if (args.length==2 && args[0].equals(\"--conf\")) {\n+\n+        if (args != null && args.length == 2 && args[0].equals(\"--conf\")) {\n             configPath = args[1];\n             log.info(\"Loading mediator configuration from '\" + configPath + \"'...\");\n         } else {\n             log.info(\"No configuration specified. Using default properties...\");\n         }\n \n         MediatorConfig config = loadConfig(configPath);\n+\n+        config.setSSLContext(new MediatorConfig.SSLContext(true));\n+\n         final MediatorServer server = new MediatorServer(system, config);\n \n         //setup shutdown hook\n-        Runtime.getRuntime().addShutdownHook(new Thread() {\n-            @Override\n-            public void run() {\n-                log.info(\"Shutting down mediator\");\n-                server.stop();\n-                system.shutdown();\n-            }\n-        });\n+        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n+            log.info(\"Shutting down mediator\");\n+            server.stop();\n+            system.shutdown();\n+        }));\n \n         log.info(\"Starting mediator server...\");\n+\n         server.start();\n \n         log.info(String.format(\"%s listening on %s:%s\", config.getName(), config.getServerHost(), config.getServerPort()));\n+\n         Thread.currentThread().join();\n     }\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "dbac991766497f20ea706511330693d3a4f61e3d",
    "filename": "src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/Location.java",
    "status": "added",
    "additions": 118,
    "deletions": 0,
    "changes": 118,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/Location.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/Location.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/Location.java?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,118 @@\n+package tz.go.moh.him.thscp.mediator.wadau.portal.domain;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import org.apache.commons.lang3.StringUtils;\n+import tz.go.moh.him.mediator.core.exceptions.ArgumentException;\n+import tz.go.moh.him.mediator.core.exceptions.ArgumentNullException;\n+\n+/**\n+ * Represents a location\n+ */\n+public class Location {\n+\n+    /**\n+     * The district.\n+     */\n+    @JsonProperty(\"district\")\n+    private String district;\n+\n+    /**\n+     * The latitude.\n+     */\n+    @JsonProperty(\"latitude\")\n+    private double latitude;\n+\n+    /**\n+     * The longitude.\n+     */\n+    @JsonProperty(\"longitude\")\n+    private double longitude;\n+\n+    /**\n+     * Initializes a new instance of the {@link Location} class.\n+     */\n+    public Location() {\n+\n+    }\n+\n+    /**\n+     * Initializes a new instance of the {@link Location} class.\n+     *\n+     * @param district  The district.\n+     * @param latitude  The latitude.\n+     * @param longitude The longitude.\n+     */\n+    public Location(String district, double latitude, double longitude) {\n+        this();\n+\n+        if (StringUtils.isEmpty(district) || StringUtils.isBlank(district) || StringUtils.isWhitespace(district)) {\n+            throw new ArgumentNullException(\"district - Value cannot be null\");\n+        }\n+\n+        if (latitude < -90 || latitude > 90) {\n+            throw new ArgumentException(\"latitude - The value must be between -90 and 90\");\n+        }\n+\n+        if (longitude < -180 || longitude > 180) {\n+            throw new ArgumentException(\"longitude - The value must be between -180 and 180\");\n+        }\n+\n+        this.setDistrict(district);\n+        this.setLatitude(latitude);\n+        this.setLongitude(longitude);\n+    }\n+\n+    /**\n+     * Gets the district.\n+     *\n+     * @return Returns the district.\n+     */\n+    public String getDistrict() {\n+        return district;\n+    }\n+\n+    /**\n+     * Sets the district.\n+     *\n+     * @param district The district to set.\n+     */\n+    public void setDistrict(String district) {\n+        this.district = district;\n+    }\n+\n+    /**\n+     * Gets the latitude.\n+     *\n+     * @return Returns the latitude.\n+     */\n+    public double getLatitude() {\n+        return latitude;\n+    }\n+\n+    /**\n+     * Sets the latitude.\n+     *\n+     * @param latitude The latitude to set.\n+     */\n+    public void setLatitude(double latitude) {\n+        this.latitude = latitude;\n+    }\n+\n+    /**\n+     * Gets the longitude.\n+     *\n+     * @return Returns the longitude.\n+     */\n+    public double getLongitude() {\n+        return longitude;\n+    }\n+\n+    /**\n+     * Sets the longitude.\n+     *\n+     * @param longitude The longitude to set.\n+     */\n+    public void setLongitude(double longitude) {\n+        this.longitude = longitude;\n+    }\n+}"
  },
  {
    "sha": "3f4694b366d32c71b81961b4ad3b033afc484c64",
    "filename": "src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/WadauRequest.java",
    "status": "added",
    "additions": 139,
    "deletions": 0,
    "changes": 139,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/WadauRequest.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/WadauRequest.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/main/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/WadauRequest.java?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,139 @@\n+package tz.go.moh.him.thscp.mediator.wadau.portal.domain;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Represents a Wadau (Stakeholder) request.\n+ */\n+public class WadauRequest {\n+\n+    /**\n+     * The colour.\n+     */\n+    @JsonProperty(\"color\")\n+    private String colour;\n+\n+    /**\n+     * The locations.\n+     */\n+    @JsonProperty(\"locations\")\n+    private List<Location> locations;\n+\n+    /**\n+     * The partner identification.\n+     */\n+    @JsonProperty(\"partnerIdentification\")\n+    private String partnerIdentification;\n+\n+    /**\n+     * The scope.\n+     */\n+    @JsonProperty(\"scope\")\n+    private String scope;\n+\n+    /**\n+     * The colour.\n+     */\n+    @JsonProperty(\"uuid\")\n+    private String uuid;\n+\n+    /**\n+     * Initializes a new instance of the {@link WadauRequest} class.\n+     */\n+    public WadauRequest() {\n+        this.setLocations(new ArrayList<>());\n+    }\n+\n+    /**\n+     * Gets the colour.\n+     *\n+     * @return Returns the colour.\n+     */\n+    public String getColour() {\n+        return colour;\n+    }\n+\n+    /**\n+     * Sets the colour.\n+     *\n+     * @param colour The colour to set.\n+     */\n+    public void setColour(String colour) {\n+        this.colour = colour;\n+    }\n+\n+    /**\n+     * Gets the locations.\n+     *\n+     * @return Returns the locations.\n+     */\n+    public List<Location> getLocations() {\n+        return locations;\n+    }\n+\n+    /**\n+     * Sets the locations.\n+     *\n+     * @param locations The locations to set.\n+     */\n+    public void setLocations(List<Location> locations) {\n+        this.locations = locations;\n+    }\n+\n+    /**\n+     * Gets the partner identification.\n+     *\n+     * @return Returns the partner identification.\n+     */\n+    public String getPartnerIdentification() {\n+        return partnerIdentification;\n+    }\n+\n+    /**\n+     * Sets the partner identification.\n+     *\n+     * @param partnerIdentification The partner identification to set.\n+     */\n+    public void setPartnerIdentification(String partnerIdentification) {\n+        this.partnerIdentification = partnerIdentification;\n+    }\n+\n+    /**\n+     * Gets the scope.\n+     *\n+     * @return Returns the scope.\n+     */\n+    public String getScope() {\n+        return scope;\n+    }\n+\n+    /**\n+     * Sets the scope.\n+     *\n+     * @param scope The scope to set.\n+     */\n+    public void setScope(String scope) {\n+        this.scope = scope;\n+    }\n+\n+    /**\n+     * Gets the UUID.\n+     *\n+     * @return Returns the UUID.\n+     */\n+    public String getUuid() {\n+        return uuid;\n+    }\n+\n+    /**\n+     * Sets the UUID.\n+     *\n+     * @param uuid The UUID to set.\n+     */\n+    public void setUuid(String uuid) {\n+        this.uuid = uuid;\n+    }\n+}"
  },
  {
    "sha": "c3dfe46b568f4f44dc540673971583f202ce9ebe",
    "filename": "src/main/resources/error-messages.json",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/resources/error-messages.json",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/resources/error-messages.json",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/main/resources/error-messages.json?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -1,3 +1,5 @@\n {\n-  \"ERR01\": \"\"\n+  \"NN_ERR01\": \"'%s' cannot be null or empty\",\n+  \"PARSE_ERR01\": \"Unable to parse '%s' as a valid '%s'\",\n+  \"RANGE_ERR01\": \"The %s value of %f must be between %f and %f\"\n }\n\\ No newline at end of file"
  },
  {
    "sha": "ecaee5667afb09cd8cac706344100a15b02536c4",
    "filename": "src/main/resources/mediator-registration-info.json",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/resources/mediator-registration-info.json",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/resources/mediator-registration-info.json",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/main/resources/mediator-registration-info.json?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -17,7 +17,9 @@\n       \"name\": \"Wadau Portal - THSCP Channel\",\n       \"urlPattern\": \"^/thscp$\",\n       \"type\": \"http\",\n-      \"allow\": [\"thscp-mediator-wadauportal-role\"],\n+      \"allow\": [\n+        \"thscp-mediator-wadauportal-role\"\n+      ],\n       \"routes\": [\n         {\n           \"name\": \"THSCP-Mediator-Wadau Portal Route\","
  },
  {
    "sha": "200da395d60e805ac30485d59b83deee89405917",
    "filename": "src/main/resources/mediator.properties",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/resources/mediator.properties",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/main/resources/mediator.properties",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/main/resources/mediator.properties?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -4,13 +4,13 @@ mediator.host=localhost\n mediator.port=3019\n mediator.timeout=60000\n mediator.heartbeats=true\n-\n+# HIM core\n core.host=localhost\n core.api.port=8080\n core.api.user=openhim-username\n core.api.password=openhim-password\n-\n-destination.host=destination-system-address\n-destination.api.port=destination-system-address-port\n-destination.api.path=/destination-system-path\n-destination.scheme=destination-system-scheme\n+# Destination system\n+destination.host=localhost\n+destination.port=443\n+destination.path=/partners-bulk\n+destination.scheme=http\n\\ No newline at end of file"
  },
  {
    "sha": "492638282cc0a5b7d7778e6c3576d87d2b179d47",
    "filename": "src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/Constants.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/Constants.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/Constants.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/Constants.java?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,15 @@\n+package tz.go.moh.him.thscp.mediator.wadau.portal;\n+\n+/**\n+ * Represents constants for testing purposes.\n+ */\n+public class Constants {\n+\n+    /**\n+     * The delta.\n+     * This is used for floating point comparison during asserts of equality for floating point numbers.\n+     * This value is based on this answer and is related to the complexity of floating point equivalency.\n+     * https://stackoverflow.com/a/8385364/2501216\n+     */\n+    public static final double DELTA = 1e-15;\n+}"
  },
  {
    "sha": "8dfb2e6573207ceeb6b951ad3d4c9d6ed5c5bc89",
    "filename": "src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/DefaultOrchestratorTest.java",
    "status": "removed",
    "additions": 0,
    "deletions": 85,
    "changes": 85,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/9ffb3e8d0668425acca472d351f05072b90bf661/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/DefaultOrchestratorTest.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/9ffb3e8d0668425acca472d351f05072b90bf661/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/DefaultOrchestratorTest.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/DefaultOrchestratorTest.java?ref=9ffb3e8d0668425acca472d351f05072b90bf661",
    "patch": "@@ -1,85 +0,0 @@\n-package tz.go.moh.him.thscp.mediator.wadau.portal;\n-\n-\n-\n-import akka.actor.ActorRef;\n-import akka.actor.ActorSystem;\n-import akka.actor.Props;\n-import akka.testkit.JavaTestKit;\n-import java.util.Collections;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.junit.*;\n-import org.openhim.mediator.engine.MediatorConfig;\n-import org.openhim.mediator.engine.messages.FinishRequest;\n-import org.openhim.mediator.engine.messages.MediatorHTTPRequest;\n-\n-import static org.junit.Assert.*;\n-\n-public class DefaultOrchestratorTest {\n-\n-    static ActorSystem system;\n-\n-    @BeforeClass\n-    public static void setup() {\n-        system = ActorSystem.create();\n-    }\n-\n-    @AfterClass\n-    public static void teardown() {\n-        JavaTestKit.shutdownActorSystem(system);\n-        system = null;\n-    }\n-\n-    @Before\n-    public void setUp() throws Exception {\n-    }\n-\n-    @After\n-    public void tearDown() throws Exception {\n-    }\n-\n-    @Test\n-    public void testMediatorHTTPRequest() throws Exception {\n-        new JavaTestKit(system) {{\n-            final MediatorConfig testConfig = new MediatorConfig(\"thscp-mediator-wadau-portal\", \"localhost\", 3019);\n-            final ActorRef defaultOrchestrator = system.actorOf(Props.create(DefaultOrchestrator.class, testConfig));\n-\n-            MediatorHTTPRequest POST_Request = new MediatorHTTPRequest(\n-                    getRef(),\n-                    getRef(),\n-                    \"unit-test\",\n-                    \"POST\",\n-                    \"http\",\n-                    null,\n-                    null,\n-                    \" /thscp\",\n-                    \"test message\",\n-                    Collections.<String, String>singletonMap(\"Content-Type\", \"text/plain\"),\n-                    Collections.<Pair<String, String>>emptyList()\n-            );\n-\n-            defaultOrchestrator.tell(POST_Request, getRef());\n-\n-            final Object[] out =\n-                    new ReceiveWhile<Object>(Object.class, duration(\"1 second\")) {\n-                        @Override\n-                        protected Object match(Object msg) throws Exception {\n-                            if (msg instanceof FinishRequest) {\n-                                return msg;\n-                            }\n-                            throw noMatch();\n-                        }\n-                    }.get();\n-\n-            boolean foundResponse = false;\n-\n-            for (Object o : out) {\n-                if (o instanceof FinishRequest) {\n-                    foundResponse = true;\n-                }\n-            }\n-\n-            assertTrue(\"Must send FinishRequest\", foundResponse);\n-        }};\n-    }\n-}"
  },
  {
    "sha": "f852d4dc2dc07425fba3beb548537c0539c48b62",
    "filename": "src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/LocationTest.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/LocationTest.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/LocationTest.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/LocationTest.java?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,59 @@\n+package tz.go.moh.him.thscp.mediator.wadau.portal.domain;\n+\n+import org.junit.Test;\n+import tz.go.moh.him.mediator.core.exceptions.ArgumentException;\n+import tz.go.moh.him.mediator.core.exceptions.ArgumentNullException;\n+\n+/**\n+ * Contains tests for the {@link Location} class.\n+ */\n+public class LocationTest {\n+\n+    /**\n+     * Tests the validation of parameters during the instantiation of a location.\n+     */\n+    @Test(expected = ArgumentNullException.class)\n+    public void testLocationExceptionAllParameters() {\n+        new Location(null, 91, 181);\n+    }\n+\n+    /**\n+     * Tests the validation of parameters during the instantiation of a location.\n+     */\n+    @Test(expected = ArgumentNullException.class)\n+    public void testLocationExceptionDistrictNull() {\n+        new Location(null, -5, -40);\n+    }\n+\n+    /**\n+     * Tests the validation of parameters during the instantiation of a location.\n+     */\n+    @Test(expected = ArgumentNullException.class)\n+    public void testLocationExceptionDistrictEmpty() {\n+        new Location(\"\", -5, -40);\n+    }\n+\n+    /**\n+     * Tests the validation of parameters during the instantiation of a location.\n+     */\n+    @Test(expected = ArgumentNullException.class)\n+    public void testLocationExceptionDistrictWhitespace() {\n+        new Location(\"    \", -5, -40);\n+    }\n+\n+    /**\n+     * Tests the validation of parameters during the instantiation of a location.\n+     */\n+    @Test(expected = ArgumentException.class)\n+    public void testLocationExceptionLatitude() {\n+        new Location(\"test\", -91, 180);\n+    }\n+\n+    /**\n+     * Tests the validation of parameters during the instantiation of a location.\n+     */\n+    @Test(expected = ArgumentException.class)\n+    public void testLocationExceptionLongitude() {\n+        new Location(\"test\", 90, -181);\n+    }\n+}"
  },
  {
    "sha": "e3cd9c2909ff772de8d14356d7ea466db01be0d2",
    "filename": "src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/WadauRequestTest.java",
    "status": "added",
    "additions": 102,
    "deletions": 0,
    "changes": 102,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/WadauRequestTest.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/WadauRequestTest.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/domain/WadauRequestTest.java?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,102 @@\n+package tz.go.moh.him.thscp.mediator.wadau.portal.domain;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import tz.go.moh.him.mediator.core.serialization.JsonSerializer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import static tz.go.moh.him.thscp.mediator.wadau.portal.Constants.DELTA;\n+\n+/**\n+ * Contains tests for the {@link WadauRequestTest} class.\n+ */\n+public class WadauRequestTest {\n+\n+    /**\n+     * Tests the deserialization of an Wadau request.\n+     */\n+    @Test\n+    public void testDeserializeWadauRequest() {\n+        InputStream stream = WadauRequestTest.class.getClassLoader().getResourceAsStream(\"request.json\");\n+\n+        Assert.assertNotNull(stream);\n+\n+        String data;\n+\n+        try {\n+            data = IOUtils.toString(stream);\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        Assert.assertNotNull(data);\n+\n+        JsonSerializer serializer = new JsonSerializer();\n+\n+        List<WadauRequest> requests = Arrays.asList(serializer.deserialize(data, WadauRequest[].class));\n+\n+        Assert.assertEquals(2, requests.size());\n+\n+        Assert.assertEquals(\"61ee3f67-992c-432b-8536-2b89aa3165a8\", requests.get(0).getUuid());\n+        Assert.assertEquals(\"Rasello team\", requests.get(0).getPartnerIdentification());\n+        Assert.assertEquals(\"#00fa92\", requests.get(0).getColour());\n+        Assert.assertEquals(\"this is the final demo\", requests.get(0).getScope());\n+        Assert.assertEquals(\"Ilala\", requests.get(0).getLocations().get(0).getDistrict());\n+        Assert.assertEquals(-6.91034, requests.get(0).getLocations().get(0).getLatitude(), DELTA);\n+        Assert.assertEquals(39.26977, requests.get(0).getLocations().get(0).getLongitude(), DELTA);\n+        Assert.assertEquals(\"Kinondoni\", requests.get(0).getLocations().get(1).getDistrict());\n+        Assert.assertEquals(-6.172144, requests.get(0).getLocations().get(1).getLatitude(), DELTA);\n+        Assert.assertEquals(35.640203, requests.get(0).getLocations().get(1).getLongitude(), DELTA);\n+\n+        Assert.assertEquals(\"18d00370-dab6-41b3-ba73-f98f73c533c6\", requests.get(1).getUuid());\n+        Assert.assertEquals(\"Test 2\", requests.get(1).getPartnerIdentification());\n+        Assert.assertEquals(\"#FFFFFF\", requests.get(1).getColour());\n+        Assert.assertEquals(\"Scope 2\", requests.get(1).getScope());\n+        Assert.assertEquals(\"Test District 1\", requests.get(1).getLocations().get(0).getDistrict());\n+        Assert.assertEquals(-5.91034, requests.get(1).getLocations().get(0).getLatitude(), DELTA);\n+        Assert.assertEquals(40.26977, requests.get(1).getLocations().get(0).getLongitude(), DELTA);\n+        Assert.assertEquals(\"Test District 2\", requests.get(1).getLocations().get(1).getDistrict());\n+        Assert.assertEquals(-5.172144, requests.get(1).getLocations().get(1).getLatitude(), DELTA);\n+        Assert.assertEquals(36.640203, requests.get(1).getLocations().get(1).getLongitude(), DELTA);\n+    }\n+\n+    /**\n+     * Tests the serialization of an Wadau request.\n+     */\n+    @Test\n+    public void testSerializeWadauRequest() {\n+\n+        ArrayList<WadauRequest> requests = new ArrayList<>();\n+\n+        WadauRequest request = new WadauRequest();\n+\n+        request.setColour(\"#000000\");\n+        request.getLocations().add(new Location(\"Test\", -5, 40));\n+        request.setPartnerIdentification(\"partner\");\n+        request.setScope(\"scope\");\n+        request.setUuid(UUID.fromString(\"2602e885-ed1b-4225-ae0b-9763e0658a2c\").toString());\n+\n+        requests.add(request);\n+\n+        JsonSerializer serializer = new JsonSerializer();\n+\n+        String actual = serializer.serializeToString(requests);\n+\n+        Assert.assertNotNull(actual);\n+\n+        Assert.assertTrue(actual.contains(request.getColour()));\n+        Assert.assertTrue(actual.contains(request.getLocations().get(0).getDistrict()));\n+        Assert.assertTrue(actual.contains(String.valueOf(request.getLocations().get(0).getLatitude())));\n+        Assert.assertTrue(actual.contains(String.valueOf(request.getLocations().get(0).getLongitude())));\n+        Assert.assertTrue(actual.contains(request.getPartnerIdentification()));\n+        Assert.assertTrue(actual.contains(request.getScope()));\n+        Assert.assertTrue(actual.contains(request.getUuid()));\n+    }\n+}"
  },
  {
    "sha": "278376c0b48bc7cba4befce3960c78db47c12a3f",
    "filename": "src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/main/MediatorMainTest.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/main/MediatorMainTest.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/main/MediatorMainTest.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/main/MediatorMainTest.java?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,52 @@\n+package tz.go.moh.him.thscp.mediator.wadau.portal.main;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.openhim.mediator.engine.MediatorConfig;\n+import tz.go.moh.him.thscp.mediator.wadau.portal.MediatorMain;\n+\n+import java.lang.reflect.Method;\n+\n+/**\n+ * Contains tests for the {@link MediatorMain} class.\n+ */\n+public class MediatorMainTest {\n+\n+    /**\n+     * Test the mediator main class loading the configuration.\n+     *\n+     * @throws Exception\n+     */\n+    @Test\n+    public void mediatorMainTest() throws Exception {\n+\n+        Method loadConfigMethod = MediatorMain.class.getDeclaredMethod(\"loadConfig\", String.class);\n+\n+        loadConfigMethod.setAccessible(true);\n+        MediatorConfig mediatorConfig = (MediatorConfig) loadConfigMethod.invoke(null, \"src/test/resources/mediator.properties\");\n+\n+        Assert.assertEquals(\"localhost\", mediatorConfig.getServerHost());\n+        Assert.assertEquals(Integer.valueOf(3019), mediatorConfig.getServerPort());\n+        Assert.assertEquals(Integer.valueOf(60000), mediatorConfig.getRootTimeout());\n+        Assert.assertTrue(mediatorConfig.getHeartsbeatEnabled());\n+    }\n+\n+    /**\n+     * Test the mediator main class loading the configuration.\n+     *\n+     * @throws Exception\n+     */\n+    @Test\n+    public void mediatorMainTestNoConfigPath() throws Exception {\n+\n+        Method loadConfigMethod = MediatorMain.class.getDeclaredMethod(\"loadConfig\", String.class);\n+\n+        loadConfigMethod.setAccessible(true);\n+        MediatorConfig mediatorConfig = (MediatorConfig) loadConfigMethod.invoke(null, \"\");\n+\n+        Assert.assertEquals(\"localhost\", mediatorConfig.getServerHost());\n+        Assert.assertEquals(Integer.valueOf(3019), mediatorConfig.getServerPort());\n+        Assert.assertEquals(Integer.valueOf(60000), mediatorConfig.getRootTimeout());\n+        Assert.assertTrue(mediatorConfig.getHeartsbeatEnabled());\n+    }\n+}"
  },
  {
    "sha": "ff1889e7fa44b7ab2b2f0952ee8250ca6118c75c",
    "filename": "src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/mock/MockDestination.java",
    "status": "added",
    "additions": 117,
    "deletions": 0,
    "changes": 117,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/mock/MockDestination.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/mock/MockDestination.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/mock/MockDestination.java?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,117 @@\n+package tz.go.moh.him.thscp.mediator.wadau.portal.mock;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.junit.Assert;\n+import org.openhim.mediator.engine.messages.MediatorHTTPRequest;\n+import org.openhim.mediator.engine.testing.MockHTTPConnector;\n+import tz.go.moh.him.mediator.core.serialization.JsonSerializer;\n+import tz.go.moh.him.thscp.mediator.wadau.portal.domain.WadauRequest;\n+import tz.go.moh.him.thscp.mediator.wadau.portal.orchestrator.DefaultOrchestratorTest;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static tz.go.moh.him.thscp.mediator.wadau.portal.Constants.DELTA;\n+\n+/**\n+ * Represents a mock destination.\n+ */\n+public class MockDestination extends MockHTTPConnector {\n+\n+    /**\n+     * Initializes a new instance of the {@link MockDestination} class.\n+     */\n+    public MockDestination() {\n+    }\n+\n+    /**\n+     * Gets the response.\n+     *\n+     * @return Returns the response.\n+     */\n+    @Override\n+    public String getResponse() {\n+        try {\n+            return IOUtils.toString(DefaultOrchestratorTest.class.getClassLoader().getResourceAsStream(\"success_response.json\"));\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    /**\n+     * Gets the status code.\n+     *\n+     * @return Returns the status code.\n+     */\n+    @Override\n+    public Integer getStatus() {\n+        return 200;\n+    }\n+\n+    /**\n+     * Gets the HTTP headers.\n+     *\n+     * @return Returns the HTTP headers.\n+     */\n+    @Override\n+    public Map<String, String> getHeaders() {\n+        return Collections.emptyMap();\n+    }\n+\n+    /**\n+     * Handles the message.\n+     *\n+     * @param msg The message.\n+     */\n+    @Override\n+    public void executeOnReceive(MediatorHTTPRequest msg) {\n+\n+        InputStream stream = DefaultOrchestratorTest.class.getClassLoader().getResourceAsStream(\"request.json\");\n+\n+        Assert.assertNotNull(stream);\n+\n+        JsonSerializer serializer = new JsonSerializer();\n+\n+        List<WadauRequest> expected;\n+\n+        try {\n+            expected = Arrays.asList(serializer.deserialize(IOUtils.toByteArray(stream), WadauRequest[].class));\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        List<WadauRequest> actual = Arrays.asList(serializer.deserialize(msg.getBody(), WadauRequest[].class));\n+\n+        Assert.assertNotNull(actual);\n+        Assert.assertNotNull(expected);\n+\n+        Assert.assertEquals(2, actual.size());\n+        Assert.assertEquals(expected.size(), actual.size());\n+\n+        Assert.assertEquals(expected.get(0).getColour(), actual.get(0).getColour());\n+        Assert.assertEquals(expected.get(0).getLocations().get(0).getDistrict(), actual.get(0).getLocations().get(0).getDistrict());\n+        Assert.assertEquals(expected.get(0).getLocations().get(0).getLatitude(), actual.get(0).getLocations().get(0).getLatitude(), DELTA);\n+        Assert.assertEquals(expected.get(0).getLocations().get(0).getLongitude(), actual.get(0).getLocations().get(0).getLongitude(), DELTA);\n+        Assert.assertEquals(expected.get(0).getLocations().get(1).getDistrict(), actual.get(0).getLocations().get(1).getDistrict());\n+        Assert.assertEquals(expected.get(0).getLocations().get(1).getLatitude(), actual.get(0).getLocations().get(1).getLatitude(), DELTA);\n+        Assert.assertEquals(expected.get(0).getLocations().get(1).getLongitude(), actual.get(0).getLocations().get(1).getLongitude(), DELTA);\n+        Assert.assertEquals(expected.get(0).getPartnerIdentification(), actual.get(0).getPartnerIdentification());\n+        Assert.assertEquals(expected.get(0).getScope(), actual.get(0).getScope());\n+        Assert.assertEquals(expected.get(0).getUuid(), actual.get(0).getUuid());\n+\n+        Assert.assertEquals(expected.get(1).getColour(), actual.get(1).getColour());\n+        Assert.assertEquals(expected.get(1).getLocations().get(0).getDistrict(), actual.get(1).getLocations().get(0).getDistrict());\n+        Assert.assertEquals(expected.get(1).getLocations().get(0).getLatitude(), actual.get(1).getLocations().get(0).getLatitude(), DELTA);\n+        Assert.assertEquals(expected.get(1).getLocations().get(0).getLongitude(), actual.get(1).getLocations().get(0).getLongitude(), DELTA);\n+        Assert.assertEquals(expected.get(1).getLocations().get(1).getDistrict(), actual.get(1).getLocations().get(1).getDistrict());\n+        Assert.assertEquals(expected.get(1).getLocations().get(1).getLatitude(), actual.get(1).getLocations().get(1).getLatitude(), DELTA);\n+        Assert.assertEquals(expected.get(1).getLocations().get(1).getLongitude(), actual.get(1).getLocations().get(1).getLongitude(), DELTA);\n+        Assert.assertEquals(expected.get(1).getPartnerIdentification(), actual.get(1).getPartnerIdentification());\n+        Assert.assertEquals(expected.get(1).getScope(), actual.get(1).getScope());\n+        Assert.assertEquals(expected.get(1).getUuid(), actual.get(1).getUuid());\n+    }\n+}"
  },
  {
    "sha": "eb8f55262bf20f31862c9d71e27077a7a98499bf",
    "filename": "src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/orchestrator/DefaultOrchestratorTest.java",
    "status": "added",
    "additions": 239,
    "deletions": 0,
    "changes": 239,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/orchestrator/DefaultOrchestratorTest.java",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/orchestrator/DefaultOrchestratorTest.java",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/java/tz/go/moh/him/thscp/mediator/wadau/portal/orchestrator/DefaultOrchestratorTest.java?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,239 @@\n+package tz.go.moh.him.thscp.mediator.wadau.portal.orchestrator;\n+\n+import akka.actor.ActorRef;\n+import akka.actor.ActorSystem;\n+import akka.actor.Props;\n+import akka.testkit.JavaTestKit;\n+import com.google.gson.JsonParser;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.io.IOUtils;\n+import org.junit.Test;\n+import org.junit.BeforeClass;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.openhim.mediator.engine.MediatorConfig;\n+import org.openhim.mediator.engine.messages.FinishRequest;\n+import org.openhim.mediator.engine.messages.MediatorHTTPRequest;\n+import org.openhim.mediator.engine.testing.MockLauncher;\n+import org.openhim.mediator.engine.testing.TestingUtils;\n+import tz.go.moh.him.mediator.core.domain.ResultDetail;\n+import tz.go.moh.him.mediator.core.serialization.JsonSerializer;\n+import tz.go.moh.him.thscp.mediator.wadau.portal.DefaultOrchestrator;\n+import tz.go.moh.him.thscp.mediator.wadau.portal.mock.MockDestination;\n+\n+import java.io.File;\n+import java.io.InputStream;\n+import java.util.*;\n+\n+/**\n+ * Contains tests for the {@link DefaultOrchestrator} class.\n+ */\n+public class DefaultOrchestratorTest {\n+\n+    /**\n+     * Represents the configuration.\n+     */\n+    private static MediatorConfig configuration;\n+\n+    /**\n+     * Represents the system actor.\n+     */\n+    private static ActorSystem system;\n+\n+    /**\n+     * Represents the orchestrator.\n+     */\n+    private final ActorRef orchestrator = system.actorOf(Props.create(DefaultOrchestrator.class, configuration));\n+\n+    /**\n+     * Runs cleanup after class execution.\n+     */\n+    @AfterClass\n+    public static void afterClass() {\n+        TestingUtils.clearRootContext(system, configuration.getName());\n+        JavaTestKit.shutdownActorSystem(system);\n+        system = null;\n+    }\n+\n+    /**\n+     * Runs initialization before each class execution.\n+     */\n+    @BeforeClass\n+    public static void beforeClass() {\n+        try {\n+            configuration = loadConfig(null);\n+            system = ActorSystem.create();\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    /**\n+     * Loads the mediator configuration.\n+     *\n+     * @param configPath The configuration path.\n+     * @return Returns the mediator configuration.\n+     */\n+    public static MediatorConfig loadConfig(String configPath) {\n+        MediatorConfig config = new MediatorConfig();\n+\n+        try {\n+            if (configPath != null) {\n+                Properties props = new Properties();\n+                File conf = new File(configPath);\n+                InputStream in = FileUtils.openInputStream(conf);\n+                props.load(in);\n+                IOUtils.closeQuietly(in);\n+\n+                config.setProperties(props);\n+            } else {\n+                config.setProperties(\"mediator.properties\");\n+            }\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        config.setName(config.getProperty(\"mediator.name\"));\n+        config.setServerHost(config.getProperty(\"mediator.host\"));\n+        config.setServerPort(Integer.parseInt(config.getProperty(\"mediator.port\")));\n+        config.setRootTimeout(Integer.parseInt(config.getProperty(\"mediator.timeout\")));\n+\n+        config.setCoreHost(config.getProperty(\"core.host\"));\n+        config.setCoreAPIUsername(config.getProperty(\"core.api.user\"));\n+        config.setCoreAPIPassword(config.getProperty(\"core.api.password\"));\n+\n+        config.setCoreAPIPort(Integer.parseInt(config.getProperty(\"core.api.port\")));\n+        config.setHeartbeatsEnabled(true);\n+\n+        return config;\n+    }\n+\n+    /**\n+     * Runs cleanup after each test execution.\n+     */\n+    @After\n+    public void after() {\n+        system = ActorSystem.create();\n+    }\n+\n+    /**\n+     * Runs initialization before each test execution.\n+     */\n+    @Before\n+    public void before() {\n+        List<MockLauncher.ActorToLaunch> actorsToLaunch = new LinkedList<>();\n+\n+        actorsToLaunch.add(new MockLauncher.ActorToLaunch(\"http-connector\", MockDestination.class));\n+\n+        TestingUtils.launchActors(system, configuration.getName(), actorsToLaunch);\n+    }\n+\n+    /**\n+     * Tests the mediator.\n+     *\n+     * @throws Exception if an exception occurs\n+     */\n+    @Test\n+    public void testWadauRequest() throws Exception {\n+        new JavaTestKit(system) {{\n+\n+            InputStream stream = DefaultOrchestratorTest.class.getClassLoader().getResourceAsStream(\"request.json\");\n+\n+            Assert.assertNotNull(stream);\n+\n+            MediatorHTTPRequest request = new MediatorHTTPRequest(\n+                    getRef(),\n+                    getRef(),\n+                    \"unit-test\",\n+                    \"POST\",\n+                    \"http\",\n+                    null,\n+                    null,\n+                    \"/thscp\",\n+                    IOUtils.toString(stream),\n+                    Collections.singletonMap(\"Content-Type\", \"application/json\"),\n+                    Collections.emptyList()\n+            );\n+\n+            orchestrator.tell(request, getRef());\n+\n+            final Object[] out = new ReceiveWhile<Object>(Object.class, duration(\"3 seconds\")) {\n+                @Override\n+                protected Object match(Object msg) {\n+                    if (msg instanceof FinishRequest) {\n+                        return msg;\n+                    }\n+                    throw noMatch();\n+                }\n+            }.get();\n+\n+            InputStream responseStream = DefaultOrchestratorTest.class.getClassLoader().getResourceAsStream(\"success_response.json\");\n+\n+            Assert.assertNotNull(responseStream);\n+\n+            String expectedResponse = IOUtils.toString(responseStream);\n+\n+            Assert.assertNotNull(expectedResponse);\n+\n+            Assert.assertTrue(Arrays.stream(out).anyMatch(c -> c instanceof FinishRequest));\n+            Assert.assertTrue(Arrays.stream(out).allMatch(c -> (c instanceof FinishRequest) && JsonParser.parseString(expectedResponse).equals(JsonParser.parseString(((FinishRequest) c).getResponse()))));\n+        }};\n+    }\n+\n+    /**\n+     * Tests the mediator.\n+     *\n+     * @throws Exception if an exception occurs\n+     */\n+    @Test\n+    public void testWadauRequestBadRequest() throws Exception {\n+        new JavaTestKit(system) {{\n+\n+            InputStream stream = DefaultOrchestratorTest.class.getClassLoader().getResourceAsStream(\"bad_request.json\");\n+\n+            Assert.assertNotNull(stream);\n+\n+            MediatorHTTPRequest request = new MediatorHTTPRequest(\n+                    getRef(),\n+                    getRef(),\n+                    \"unit-test\",\n+                    \"POST\",\n+                    \"http\",\n+                    null,\n+                    null,\n+                    \"/thscp\",\n+                    IOUtils.toString(stream),\n+                    Collections.singletonMap(\"Content-Type\", \"application/json\"),\n+                    Collections.emptyList()\n+            );\n+\n+            orchestrator.tell(request, getRef());\n+\n+            final Object[] out = new ReceiveWhile<Object>(Object.class, duration(\"3 seconds\")) {\n+                @Override\n+                protected Object match(Object msg) {\n+                    if (msg instanceof FinishRequest) {\n+                        return msg;\n+                    }\n+                    throw noMatch();\n+                }\n+            }.get();\n+\n+            Assert.assertNotNull(out);\n+            Assert.assertTrue(Arrays.stream(out).anyMatch(c -> c instanceof FinishRequest));\n+            Assert.assertTrue(Arrays.stream(out).allMatch(c -> (c instanceof FinishRequest) && ((FinishRequest) c).getResponse().contains(\"ERROR\") && ((FinishRequest) c).getResponseStatus() == 400));\n+\n+            Assert.assertEquals(1, out.length);\n+\n+            FinishRequest finishRequest = (FinishRequest) out[0];\n+\n+            JsonSerializer serializer = new JsonSerializer();\n+\n+            List<ResultDetail> resultDetails = Arrays.asList(serializer.deserialize(finishRequest.getResponse(), ResultDetail[].class));\n+\n+            Assert.assertEquals(23, resultDetails.size());\n+        }};\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0dc658f0025f7214dbf801cb36a08662dd395ca5",
    "filename": "src/test/resources/bad_request.json",
    "status": "added",
    "additions": 96,
    "deletions": 0,
    "changes": 96,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/resources/bad_request.json",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/resources/bad_request.json",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/resources/bad_request.json?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,96 @@\n+[\n+  {\n+    \"uuid\": \"ABCD\",\n+    \"partnerIdentification\": \"Rasello team\",\n+    \"color\": \"#00fa92\",\n+    \"scope\": \"this is the final demo\",\n+    \"locations\": [\n+      {\n+        \"district\": \"              \",\n+        \"latitude\": -5.91034,\n+        \"longitude\": 40.26977\n+      },\n+      {\n+        \"district\": \"Test District 2\",\n+        \"latitude\": -5.172144,\n+        \"longitude\": 36.640203\n+      }\n+    ]\n+  },\n+  {\n+    \"uuid\": 12345,\n+    \"partnerIdentification\": \"Rasello team\",\n+    \"color\": \"#00fa92\",\n+    \"scope\": \"this is the final demo\",\n+    \"locations\": [\n+      {\n+        \"district\": \"Test District 1\",\n+        \"latitude\": -5.91034,\n+        \"longitude\": 40.26977\n+      },\n+      {\n+        \"district\": \"Test District 2\",\n+        \"latitude\": -5.172144,\n+        \"longitude\": 36.640203\n+      }\n+    ]\n+  },\n+  {\n+    \"uuid\": null,\n+    \"partnerIdentification\": \"Rasello team\",\n+    \"color\": \"#00fa92\",\n+    \"scope\": \"      \",\n+    \"locations\": [\n+      {\n+        \"district\": null,\n+        \"latitude\": -5.91034,\n+        \"longitude\": 40.26977\n+      },\n+      {\n+        \"district\": \"\",\n+        \"latitude\": -5.172144,\n+        \"longitude\": 36.640203\n+      }\n+    ]\n+  },\n+  {\n+    \"uuid\": null,\n+    \"partnerIdentification\": null,\n+    \"color\": \"#00fa92\",\n+    \"scope\": \"\",\n+    \"locations\": [\n+      {\n+        \"district\": \"Test District 1\",\n+        \"latitude\": -5.91034,\n+        \"longitude\": 40.26977\n+      },\n+      {\n+        \"district\": \"     \",\n+        \"latitude\": -5.172144,\n+        \"longitude\": 36.640203\n+      }\n+    ]\n+  },\n+  {\n+    \"uuid\": null,\n+    \"partnerIdentification\": \"Rasello team\",\n+    \"color\": \"#00fa92\",\n+    \"scope\": null,\n+    \"locations\": [\n+      {\n+        \"district\": \"Test District 1\",\n+        \"latitude\": -91,\n+        \"longitude\": -181\n+      },\n+      {\n+        \"district\": \"Test District 2\",\n+        \"latitude\": 91,\n+        \"longitude\": 181\n+      }\n+    ]\n+  },\n+  {\n+    \"partnerIdentification\": \"Final entry\",\n+    \"color\": \"#00fa92\"\n+  }\n+]\n\\ No newline at end of file"
  },
  {
    "sha": "c3dfe46b568f4f44dc540673971583f202ce9ebe",
    "filename": "src/test/resources/error-messages.json",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/resources/error-messages.json",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/resources/error-messages.json",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/resources/error-messages.json?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,5 @@\n+{\n+  \"NN_ERR01\": \"'%s' cannot be null or empty\",\n+  \"PARSE_ERR01\": \"Unable to parse '%s' as a valid '%s'\",\n+  \"RANGE_ERR01\": \"The %s value of %f must be between %f and %f\"\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "200da395d60e805ac30485d59b83deee89405917",
    "filename": "src/test/resources/mediator.properties",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/resources/mediator.properties",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/resources/mediator.properties",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/resources/mediator.properties?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,16 @@\n+# Mediator Properties\n+mediator.name=THSCP-Mediator-Wadau-Portal\n+mediator.host=localhost\n+mediator.port=3019\n+mediator.timeout=60000\n+mediator.heartbeats=true\n+# HIM core\n+core.host=localhost\n+core.api.port=8080\n+core.api.user=openhim-username\n+core.api.password=openhim-password\n+# Destination system\n+destination.host=localhost\n+destination.port=443\n+destination.path=/partners-bulk\n+destination.scheme=http\n\\ No newline at end of file"
  },
  {
    "sha": "fc691120c0ce507f4dbbb059e69b47cdfa2cdc18",
    "filename": "src/test/resources/request.json",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/resources/request.json",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/resources/request.json",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/resources/request.json?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,38 @@\n+[\n+  {\n+    \"uuid\": \"61ee3f67-992c-432b-8536-2b89aa3165a8\",\n+    \"partnerIdentification\": \"Rasello team\",\n+    \"color\": \"#00fa92\",\n+    \"scope\": \"this is the final demo\",\n+    \"locations\": [\n+      {\n+        \"district\": \"Ilala\",\n+        \"latitude\": -6.91034,\n+        \"longitude\": 39.26977\n+      },\n+      {\n+        \"district\": \"Kinondoni\",\n+        \"latitude\": -6.172144,\n+        \"longitude\": 35.640203\n+      }\n+    ]\n+  },\n+  {\n+    \"uuid\": \"18d00370-dab6-41b3-ba73-f98f73c533c6\",\n+    \"partnerIdentification\": \"Test 2\",\n+    \"color\": \"#FFFFFF\",\n+    \"scope\": \"Scope 2\",\n+    \"locations\": [\n+      {\n+        \"district\": \"Test District 1\",\n+        \"latitude\": -5.91034,\n+        \"longitude\": 40.26977\n+      },\n+      {\n+        \"district\": \"Test District 2\",\n+        \"latitude\": -5.172144,\n+        \"longitude\": 36.640203\n+      }\n+    ]\n+  }\n+]\n\\ No newline at end of file"
  },
  {
    "sha": "a2bdb8d24492a71478787c7b9f3a46909dfe82db",
    "filename": "src/test/resources/success_response.json",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/blob/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/resources/success_response.json",
    "raw_url": "https://github.com/SoftmedTanzania/thscp-mediator-wadau-portal/raw/6204c340b6369cf9e7304741be7c8fa1d6d08de1/src/test/resources/success_response.json",
    "contents_url": "https://api.github.com/repos/SoftmedTanzania/thscp-mediator-wadau-portal/contents/src/test/resources/success_response.json?ref=6204c340b6369cf9e7304741be7c8fa1d6d08de1",
    "patch": "@@ -0,0 +1,18 @@\n+{\n+  \"code\": 200,\n+  \"success\": true,\n+  \"message\": \"success\",\n+  \"data\": {\n+    \"created\": 1,\n+    \"updated\": 0,\n+    \"error\": 0,\n+    \"response\": [\n+      {\n+        \"message\": \"Created\",\n+        \"uuid\": \"446c62d7-db22-4e42-9f17-9b8dee061341\",\n+        \"code\": 1,\n+        \"errors\": null\n+      }\n+    ]\n+  }\n+}\n\\ No newline at end of file"
  }
]
