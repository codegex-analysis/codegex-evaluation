[
  {
    "sha": "6d672c75e5cb4a3f7976c4e63adb86e2428f366f",
    "filename": ".idea/compiler.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/.idea/compiler.xml",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/.idea/compiler.xml?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -2,6 +2,7 @@\n <project version=\"4\">\n   <component name=\"CompilerConfiguration\">\n     <annotationProcessing>\n+      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\n       <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n         <sourceOutputDir name=\"target/generated-sources/annotations\" />\n         <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />"
  },
  {
    "sha": "5060361302d0fe1b40b231be378d515e0f33e3ab",
    "filename": "src/main/java/geekbrains/spring/lesson10/ProductApp.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/ProductApp.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/ProductApp.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/ProductApp.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,4 +1,4 @@\n-package geekbrains.spring.lesson9;\n+package geekbrains.spring.lesson10;\n \n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/ProductApp.java"
  },
  {
    "sha": "c00eab864e6dce455d33d91b49d40e27f4eb83fd",
    "filename": "src/main/java/geekbrains/spring/lesson10/SortDirection.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/SortDirection.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/SortDirection.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/SortDirection.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,4 +1,4 @@\n-package geekbrains.spring.lesson9;\n+package geekbrains.spring.lesson10;\n \n public enum SortDirection {\n     ASC, DESC",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/SortDirection.java"
  },
  {
    "sha": "d7ebdc71f2a88a2459996b5575539ba398f389d7",
    "filename": "src/main/java/geekbrains/spring/lesson10/controllers/ProductController.java",
    "status": "renamed",
    "additions": 24,
    "deletions": 39,
    "changes": 63,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/controllers/ProductController.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/controllers/ProductController.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/controllers/ProductController.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,10 +1,18 @@\n-package geekbrains.spring.lesson9;\n+package geekbrains.spring.lesson10.controllers;\n \n-import geekbrains.spring.lesson9.exceptions.IncorrectParamException;\n-import geekbrains.spring.lesson9.exceptions.ProductNotFoundException;\n+import geekbrains.spring.lesson10.model.Session;\n+import geekbrains.spring.lesson10.repositories.ProductSpecifications;\n+import geekbrains.spring.lesson10.services.ProductService;\n+import geekbrains.spring.lesson10.SortDirection;\n+import geekbrains.spring.lesson10.exceptions.IncorrectParamException;\n+import geekbrains.spring.lesson10.exceptions.ProductNotFoundException;\n+import geekbrains.spring.lesson10.model.Product;\n+import geekbrains.spring.lesson10.model.ProductDto;\n+import geekbrains.spring.lesson10.services.SessionService;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.data.domain.Page;\n import org.springframework.http.HttpStatus;\n+import org.springframework.util.MultiValueMap;\n import org.springframework.web.bind.annotation.*;\n \n import java.util.List;\n@@ -16,32 +24,29 @@\n     private ProductService productService;\n \n     @GetMapping\n-    public List<ProductDto> getAll(@RequestParam(defaultValue = \"1\") Integer page, @RequestParam(defaultValue = \"10\") Integer size) {\n+    public List<ProductDto> getAll(@RequestParam MultiValueMap<String, String> params,\n+                                   @RequestParam(defaultValue = \"1\") Integer page,\n+                                   @RequestParam(defaultValue = \"10\") Integer size,\n+                                   @RequestParam(required = false) String sortCost,\n+                                   @RequestParam(required = false) String sortTitle,\n+                                   @RequestParam(required = false) Boolean costFirst) {\n         validatePagingParams(page, size);\n-        Page<ProductDto> productPage = productService.getAll(page - 1, size);\n-        if (page > productPage.getTotalPages()) {\n-            throw new IncorrectParamException(\"The total number of pages is \" + productPage.getTotalPages());\n-        }\n-        return productPage.toList();\n-    }\n-\n-    @GetMapping(\"/sort\")\n-    public List<Product> getAllSorted(@RequestParam(required = false) String sortCost,\n-                                      @RequestParam(required = false) String sortTitle,\n-                                      @RequestParam(required = false) Boolean costFirst) {\n         validateSortingParams(sortCost, sortTitle, costFirst);\n         try {\n-            return productService.getAllSorted(sortCost != null ? SortDirection.valueOf(sortCost) : null,\n+            Page<ProductDto> productPage = productService.getAll(ProductSpecifications.build(params), page - 1, size,\n+                    sortCost != null ? SortDirection.valueOf(sortCost) : null,\n                     sortTitle != null ? SortDirection.valueOf(sortTitle) : null, costFirst);\n+            if (page > productPage.getTotalPages()) {\n+                throw new IncorrectParamException(\"The total number of pages is \" + productPage.getTotalPages());\n+            }\n+            return productPage.toList();\n         } catch (IllegalArgumentException e) {\n             throw new IncorrectParamException(e.getMessage());\n         }\n     }\n \n     public void validateSortingParams(String sortCost, String sortTitle, Boolean costFirst) {\n-        if (sortCost == null && sortTitle == null) {\n-            throw new IncorrectParamException(\"The sort type must be specified!\");\n-        } else if (sortCost != null && sortTitle != null && costFirst == null) {\n+        if (sortCost != null && sortTitle != null && costFirst == null) {\n             throw new IncorrectParamException(\"Sort priority must be specified!\");\n         }\n     }\n@@ -76,24 +81,4 @@ public ProductDto update(@RequestBody ProductDto product) {\n     public void delete(@PathVariable Integer id) {\n         productService.delete(id);\n     }\n-\n-    @GetMapping(\"/gt\")\n-    public List<Product> getAllByMinCost(@RequestParam Double min) {\n-        return productService.getAllByMinCost(min);\n-    }\n-\n-    @GetMapping(\"/lt\")\n-    public List<Product> getAllByMaxCost(@RequestParam Double max) {\n-        return productService.getAllByMaxCost(max);\n-    }\n-\n-    @GetMapping(\"/btw\")\n-    public List<Product> getAllByMinAndMaxCost(@RequestParam Double min, @RequestParam Double max) {\n-        return productService.getAllByMinAndMaxCost(min, max);\n-    }\n-\n-    @GetMapping(\"/title\")\n-    public List<Product> getAllByTitle(@RequestParam String title) {\n-        return productService.getAllByTitle(title);\n-    }\n }",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/ProductController.java"
  },
  {
    "sha": "e74ecf7db2abb37e2a3775d262a5ecdaeef9a1e8",
    "filename": "src/main/java/geekbrains/spring/lesson10/controllers/SessionController.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/controllers/SessionController.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/controllers/SessionController.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/controllers/SessionController.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,47 @@\n+package geekbrains.spring.lesson10.controllers;\n+\n+import geekbrains.spring.lesson10.model.BasketProductDto;\n+import geekbrains.spring.lesson10.model.ProductDto;\n+import geekbrains.spring.lesson10.model.Session;\n+import geekbrains.spring.lesson10.services.SessionService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.List;\n+import java.util.UUID;\n+\n+@RestController\n+@RequestMapping(\"/api/v1/sessions\")\n+public class SessionController {\n+    @Autowired\n+    private SessionService sessionService;\n+\n+    @GetMapping\n+    public Session getSession() {\n+        return sessionService.getSession();\n+    }\n+\n+    @GetMapping(\"/basket\")\n+    public List<BasketProductDto> getBasket(@CookieValue(\"session_guid\") UUID guid) {\n+        return sessionService.getBasket(guid);\n+    }\n+\n+    @PostMapping(\"/basket\")\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public void add(@CookieValue(\"session_guid\") UUID guid, @RequestBody BasketProductDto basketProduct) {\n+        basketProduct.setId(null);\n+        sessionService.add(guid, basketProduct);\n+    }\n+\n+    @PutMapping(\"/basket\")\n+    public void update(@CookieValue(\"session_guid\") UUID guid, @RequestBody BasketProductDto basketProduct) {\n+        sessionService.update(guid, basketProduct);\n+    }\n+\n+    @DeleteMapping(\"/basket/{id}\")\n+    public void delete(@CookieValue(\"session_guid\") UUID guid, @PathVariable Long id) {\n+        sessionService.delete(guid, id);\n+    }\n+\n+}"
  },
  {
    "sha": "7edf3d37836b93113a83f9cd5698058341736446",
    "filename": "src/main/java/geekbrains/spring/lesson10/exceptions/ExceptionControllerAdvice.java",
    "status": "renamed",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/exceptions/ExceptionControllerAdvice.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/exceptions/ExceptionControllerAdvice.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/exceptions/ExceptionControllerAdvice.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,4 +1,4 @@\n-package geekbrains.spring.lesson9.exceptions;\n+package geekbrains.spring.lesson10.exceptions;\n \n import lombok.extern.slf4j.Slf4j;\n import org.springframework.http.HttpStatus;\n@@ -23,4 +23,11 @@\n         MarketError err = new MarketError(HttpStatus.NOT_FOUND.value(), e.getMessage());\n         return new ResponseEntity<>(err, HttpStatus.NOT_FOUND);\n     }\n+\n+    @ExceptionHandler\n+    public ResponseEntity<?> handleSessionExpiredException(SessionExpiredException e) {\n+        log.error(e.getMessage());\n+        MarketError err = new MarketError(HttpStatus.UNAUTHORIZED.value(), e.getMessage());\n+        return new ResponseEntity<>(err, HttpStatus.UNAUTHORIZED);\n+    }\n }",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/exceptions/ExceptionControllerAdvice.java"
  },
  {
    "sha": "88b62410f805e506de97ab3827d08393c1d80e7a",
    "filename": "src/main/java/geekbrains/spring/lesson10/exceptions/IncorrectParamException.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/exceptions/IncorrectParamException.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/exceptions/IncorrectParamException.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/exceptions/IncorrectParamException.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,4 +1,4 @@\n-package geekbrains.spring.lesson9.exceptions;\n+package geekbrains.spring.lesson10.exceptions;\n \n public class IncorrectParamException extends RuntimeException{\n     public IncorrectParamException(String msg) {",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/exceptions/IncorrectParamException.java"
  },
  {
    "sha": "64f3fb3539c3ac56ad91c97f2fef5ea5b15ae173",
    "filename": "src/main/java/geekbrains/spring/lesson10/exceptions/MarketError.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/exceptions/MarketError.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/exceptions/MarketError.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/exceptions/MarketError.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,4 +1,4 @@\n-package geekbrains.spring.lesson9.exceptions;\n+package geekbrains.spring.lesson10.exceptions;\n \n import lombok.Data;\n ",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/exceptions/MarketError.java"
  },
  {
    "sha": "34916d1697a411a8e37b6eb3f48f70376b7b6105",
    "filename": "src/main/java/geekbrains/spring/lesson10/exceptions/ProductNotFoundException.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/exceptions/ProductNotFoundException.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/exceptions/ProductNotFoundException.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/exceptions/ProductNotFoundException.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,4 +1,4 @@\n-package geekbrains.spring.lesson9.exceptions;\n+package geekbrains.spring.lesson10.exceptions;\n \n public class ProductNotFoundException extends RuntimeException{\n     public ProductNotFoundException(String message) {",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/exceptions/ProductNotFoundException.java"
  },
  {
    "sha": "f23ebf3b8e2f49e6db2779ecf70941b6ef5c661f",
    "filename": "src/main/java/geekbrains/spring/lesson10/exceptions/SessionExpiredException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/exceptions/SessionExpiredException.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/exceptions/SessionExpiredException.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/exceptions/SessionExpiredException.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,7 @@\n+package geekbrains.spring.lesson10.exceptions;\n+\n+public class SessionExpiredException extends RuntimeException{\n+    public SessionExpiredException(String message) {\n+        super(message);\n+    }\n+}"
  },
  {
    "sha": "91257bc70affc1912494a78bced998fa6fb7b60a",
    "filename": "src/main/java/geekbrains/spring/lesson10/model/BasketProduct.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/BasketProduct.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/BasketProduct.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/model/BasketProduct.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,34 @@\n+package geekbrains.spring.lesson10.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"basket_products\")\n+@Data\n+@NoArgsConstructor\n+public class BasketProduct {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column\n+    private Long id;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"session_guid\")\n+    private Session session;\n+\n+    @OneToOne\n+    @JoinColumn(name = \"product_id\")\n+    private Product product;\n+\n+    @Column(name = \"product_count\")\n+    private Integer productCount;\n+\n+    public BasketProduct(BasketProductDto dto) {\n+        this.id = dto.getId();\n+        this.product = new Product(dto.getProduct());\n+        this.productCount = dto.getProductCount();\n+    }\n+}"
  },
  {
    "sha": "44a3a42c8e005ae24be21cedd7c59f9223768a94",
    "filename": "src/main/java/geekbrains/spring/lesson10/model/BasketProductDto.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/BasketProductDto.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/BasketProductDto.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/model/BasketProductDto.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,18 @@\n+package geekbrains.spring.lesson10.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@NoArgsConstructor\n+public class BasketProductDto {\n+    private Long id;\n+    private ProductDto product;\n+    private Integer productCount;\n+\n+    public BasketProductDto(BasketProduct basketProduct) {\n+        this.id = basketProduct.getId();\n+        this.product = new ProductDto(basketProduct.getProduct());\n+        this.productCount = basketProduct.getProductCount();\n+    }\n+}"
  },
  {
    "sha": "c5d283b42e399fbed0d495a309f3adc3ed2584d3",
    "filename": "src/main/java/geekbrains/spring/lesson10/model/Category.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/Category.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/Category.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/model/Category.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,4 +1,4 @@\n-package geekbrains.spring.lesson9;\n+package geekbrains.spring.lesson10.model;\n \n import lombok.Data;\n import lombok.NoArgsConstructor;",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/Category.java"
  },
  {
    "sha": "def88157b27f6142c3b42619abd8127ee8589c83",
    "filename": "src/main/java/geekbrains/spring/lesson10/model/CategoryDto.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/CategoryDto.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/CategoryDto.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/model/CategoryDto.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,4 +1,4 @@\n-package geekbrains.spring.lesson9;\n+package geekbrains.spring.lesson10.model;\n import lombok.Data;\n import lombok.NoArgsConstructor;\n ",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/CategoryDto.java"
  },
  {
    "sha": "2b3f6a5c6bba246b06768e9c2703e504e07a6528",
    "filename": "src/main/java/geekbrains/spring/lesson10/model/Product.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/Product.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/Product.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/model/Product.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,4 +1,4 @@\n-package geekbrains.spring.lesson9;\n+package geekbrains.spring.lesson10.model;\n \n import lombok.Data;\n import lombok.NoArgsConstructor;",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/Product.java"
  },
  {
    "sha": "51b60d53d1ea0231173b2ca7619d2360b0b2fd55",
    "filename": "src/main/java/geekbrains/spring/lesson10/model/ProductDto.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/ProductDto.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/ProductDto.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/model/ProductDto.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,4 +1,4 @@\n-package geekbrains.spring.lesson9;\n+package geekbrains.spring.lesson10.model;\n \n import lombok.Data;\n import lombok.NoArgsConstructor;",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/ProductDto.java"
  },
  {
    "sha": "3c9817df074f806ac6842a520f90a94735febc3d",
    "filename": "src/main/java/geekbrains/spring/lesson10/model/Session.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/Session.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/model/Session.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/model/Session.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,39 @@\n+package geekbrains.spring.lesson10.model;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.hibernate.annotations.CreationTimestamp;\n+import org.hibernate.annotations.GenericGenerator;\n+import org.hibernate.annotations.UpdateTimestamp;\n+\n+import javax.persistence.*;\n+import java.time.LocalDateTime;\n+import java.util.List;\n+import java.util.UUID;\n+\n+@Entity\n+@Table(name = \"sessions\")\n+@Data\n+@NoArgsConstructor\n+public class Session {\n+    @Id\n+    @GeneratedValue(generator = \"uuid\")\n+    @GenericGenerator(name = \"uuid\", strategy = \"org.hibernate.id.UUIDGenerator\")\n+    @Column\n+    private UUID guid;\n+\n+    @Column(name = \"created_at\", updatable = false)\n+    @CreationTimestamp\n+    private LocalDateTime createdAt;\n+\n+    @Column(name = \"updated_at\")\n+    @UpdateTimestamp\n+    private LocalDateTime updatedAt;\n+\n+    @OneToMany(mappedBy = \"session\")\n+    private List<BasketProduct> basketProducts;\n+\n+    public void addBasketProduct(BasketProduct basketProduct) {\n+        basketProducts.add(basketProduct);\n+    }\n+}"
  },
  {
    "sha": "4f83212e893c862e40139bd3518dfd34c657dd9a",
    "filename": "src/main/java/geekbrains/spring/lesson10/repositories/BasketProductRepository.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/repositories/BasketProductRepository.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/repositories/BasketProductRepository.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/repositories/BasketProductRepository.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,20 @@\n+package geekbrains.spring.lesson10.repositories;\n+\n+import geekbrains.spring.lesson10.model.BasketProduct;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Modifying;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+import java.util.UUID;\n+\n+@Repository\n+public interface BasketProductRepository extends JpaRepository<BasketProduct, Long> {\n+    @Modifying\n+    @Query(value = \"delete from basket_products b where b.id = :id and b.session_guid = :guid\", nativeQuery = true)\n+    int deleteByIdAndSessionId(@Param(\"guid\") UUID guid, @Param(\"id\") Long id);\n+\n+    @Modifying\n+    @Query(value = \"update basket_products b set b.product_count = :count where b.id = :id and b.session_guid = :guid\", nativeQuery = true)\n+    int updateCountByIdAndGuid(@Param(\"guid\") UUID guid, @Param(\"id\") Long id, @Param(\"count\") Integer count);\n+}"
  },
  {
    "sha": "23203cbdcc9a5b4fa3fe8745f4ec812b7ad814bf",
    "filename": "src/main/java/geekbrains/spring/lesson10/repositories/ProductRepository.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/repositories/ProductRepository.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/repositories/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/repositories/ProductRepository.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,11 @@\n+package geekbrains.spring.lesson10.repositories;\n+\n+import geekbrains.spring.lesson10.model.Product;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.JpaSpecificationExecutor;\n+import org.springframework.stereotype.Repository;\n+\n+\n+@Repository\n+public interface ProductRepository extends JpaRepository<Product, Integer>, JpaSpecificationExecutor<Product> {\n+}"
  },
  {
    "sha": "d6088e7438ccb56ad848e563576db6adf2698d3f",
    "filename": "src/main/java/geekbrains/spring/lesson10/repositories/ProductSpecifications.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/repositories/ProductSpecifications.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/repositories/ProductSpecifications.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/repositories/ProductSpecifications.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,37 @@\n+package geekbrains.spring.lesson10.repositories;\n+\n+import geekbrains.spring.lesson10.SortDirection;\n+import geekbrains.spring.lesson10.exceptions.IncorrectParamException;\n+import geekbrains.spring.lesson10.model.Product;\n+import org.springframework.data.jpa.domain.Specification;\n+import org.springframework.util.MultiValueMap;\n+\n+import javax.persistence.criteria.Predicate;\n+\n+public class ProductSpecifications {\n+    private static Specification<Product> priceGreaterOrEqualsThan(int minPrice) {\n+        return (Specification<Product>) (root, criteriaQuery, criteriaBuilder) -> criteriaBuilder.greaterThanOrEqualTo(root.get(\"cost\"), minPrice);\n+    }\n+\n+    private static Specification<Product> priceLesserOrEqualsThan(int maxPrice) {\n+        return (Specification<Product>) (root, criteriaQuery, criteriaBuilder) -> criteriaBuilder.lessThanOrEqualTo(root.get(\"cost\"), maxPrice);\n+    }\n+\n+    private static Specification<Product> titleLike(String titlePart) {\n+        return (Specification<Product>) (root, criteriaQuery, criteriaBuilder) -> criteriaBuilder.like(root.get(\"title\"), String.format(\"%%%s%%\", titlePart));\n+    }\n+\n+    public static Specification<Product> build(MultiValueMap<String, String> params) {\n+        Specification<Product> spec = Specification.where(null);\n+        if (params.containsKey(\"min_price\") && !params.getFirst(\"min_price\").isEmpty()) {\n+            spec = spec.and(ProductSpecifications.priceGreaterOrEqualsThan(Integer.parseInt(params.getFirst(\"min_price\"))));\n+        }\n+        if (params.containsKey(\"max_price\") && !params.getFirst(\"max_price\").isEmpty()) {\n+            spec = spec.and(ProductSpecifications.priceLesserOrEqualsThan(Integer.parseInt(params.getFirst(\"max_price\"))));\n+        }\n+        if (params.containsKey(\"title\") && !params.getFirst(\"title\").isEmpty()) {\n+            spec = spec.and(ProductSpecifications.titleLike(params.getFirst(\"title\")));\n+        }\n+        return spec;\n+    }\n+}"
  },
  {
    "sha": "be53e781c57a4d87433df8d1698b06fb958e3fb8",
    "filename": "src/main/java/geekbrains/spring/lesson10/repositories/SessionRepository.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/repositories/SessionRepository.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/repositories/SessionRepository.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/repositories/SessionRepository.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,16 @@\n+package geekbrains.spring.lesson10.repositories;\n+\n+import geekbrains.spring.lesson10.model.Session;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Modifying;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+import java.util.UUID;\n+\n+@Repository\n+public interface SessionRepository extends JpaRepository<Session, UUID> {\n+    @Modifying\n+    @Query(value = \"update sessions s set s.updated_at = now() where s.guid = :guid\", nativeQuery = true)\n+    int updateSessionUpdatedAt(@Param(\"guid\") UUID guid);\n+}"
  },
  {
    "sha": "3f41583f2931ab3f331834a7417b7e172b5ef890",
    "filename": "src/main/java/geekbrains/spring/lesson10/services/BasketProductService.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/services/BasketProductService.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/services/BasketProductService.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/services/BasketProductService.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,30 @@\n+package geekbrains.spring.lesson10.services;\n+\n+import geekbrains.spring.lesson10.model.BasketProduct;\n+import geekbrains.spring.lesson10.model.BasketProductDto;\n+import geekbrains.spring.lesson10.repositories.BasketProductRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import java.util.UUID;\n+\n+@Service\n+public class BasketProductService {\n+    @Autowired\n+    private BasketProductRepository basketProductRepository;\n+\n+    public void add(BasketProduct basketProduct){\n+        basketProductRepository.save(basketProduct);\n+    }\n+\n+    @Transactional\n+    public int updateCountByIdAndGuid(UUID guid, BasketProductDto basketProduct) {\n+        return basketProductRepository.updateCountByIdAndGuid(guid, basketProduct.getId(), basketProduct.getProductCount());\n+    }\n+\n+    @Transactional\n+    public int deleteByIdAndGuid(UUID guid, Long id) {\n+        return basketProductRepository.deleteByIdAndSessionId(guid, id);\n+    }\n+}"
  },
  {
    "sha": "3d1c176e7e7c4f7e8877f7ad88bff8da6fc897da",
    "filename": "src/main/java/geekbrains/spring/lesson10/services/ProductService.java",
    "status": "renamed",
    "additions": 17,
    "deletions": 30,
    "changes": 47,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/services/ProductService.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/services/ProductService.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/services/ProductService.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -1,12 +1,17 @@\n-package geekbrains.spring.lesson9;\n+package geekbrains.spring.lesson10.services;\n \n+import geekbrains.spring.lesson10.SortDirection;\n+import geekbrains.spring.lesson10.model.Product;\n+import geekbrains.spring.lesson10.model.ProductDto;\n+import geekbrains.spring.lesson10.model.Session;\n+import geekbrains.spring.lesson10.repositories.ProductRepository;\n+import geekbrains.spring.lesson10.repositories.SessionRepository;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.data.domain.Page;\n import org.springframework.data.domain.PageRequest;\n import org.springframework.data.domain.Sort;\n+import org.springframework.data.jpa.domain.Specification;\n import org.springframework.stereotype.Service;\n-\n-import java.util.List;\n import java.util.Optional;\n \n @Service\n@@ -19,11 +24,8 @@\n         return productRepository.findById(id).map(ProductDto::new);\n     }\n \n-    public Page<ProductDto> getAll(int page, int size) {\n-        return productRepository.findAll(PageRequest.of(page, size)).map(ProductDto::new);\n-    }\n-\n-    public List<Product> getAllSorted(SortDirection sortCost, SortDirection sortTitle, Boolean costFirst) {\n+    public Page<ProductDto> getAll(Specification<Product> specification, int page, int size,\n+                                   SortDirection sortCost, SortDirection sortTitle, Boolean costFirst) {\n         Sort sortByCost = null;\n         Sort sortByTitle = null;\n         if (sortCost != null) {\n@@ -41,16 +43,17 @@\n                 sortByTitle = Sort.by(\"title\").descending();\n             }\n         }\n-\n-        if (sortByCost == null) {\n-            return productRepository.findAll(sortByTitle);\n+        if (sortByCost == null && sortByTitle == null) {\n+            return productRepository.findAll(specification, PageRequest.of(page, size)).map(ProductDto::new);\n+        } else if (sortByCost == null) {\n+            return productRepository.findAll(specification, PageRequest.of(page, size, sortByTitle)).map(ProductDto::new);\n         } else if (sortByTitle == null) {\n-            return productRepository.findAll(sortByCost);\n+            return productRepository.findAll(specification, PageRequest.of(page, size, sortByCost)).map(ProductDto::new);\n         } else {\n             if (costFirst) {\n-                return productRepository.findAll(sortByCost.and(sortByTitle));\n+                return productRepository.findAll(specification, PageRequest.of(page, size, sortByCost.and(sortByTitle))).map(ProductDto::new);\n             } else {\n-                return productRepository.findAll(sortByTitle.and(sortByCost));\n+                return productRepository.findAll(specification, PageRequest.of(page, size, sortByTitle.and(sortByCost))).map(ProductDto::new);\n             }\n         }\n     }\n@@ -62,20 +65,4 @@ public ProductDto addOrUpdate(ProductDto productDto) {\n     public void delete(Integer id) {\n         productRepository.deleteById(id);\n     }\n-\n-    public List<Product> getAllByMinCost(Double minCost) {\n-        return productRepository.findByCostGreaterThan(minCost);\n-    }\n-\n-    public List<Product> getAllByMaxCost(Double maxCost) {\n-        return productRepository.findByCostLessThan(maxCost);\n-    }\n-\n-    public List<Product> getAllByMinAndMaxCost(Double minCost, Double maxCost) {\n-        return productRepository.findByCostBetween(minCost, maxCost);\n-    }\n-\n-    public List<Product> getAllByTitle(String title) {\n-        return productRepository.findByTitleIgnoreCaseContaining(title);\n-    }\n }",
    "previous_filename": "src/main/java/geekbrains/spring/lesson9/ProductService.java"
  },
  {
    "sha": "6d8fbf414a31021e4c01ade4f7335050fb6e71d3",
    "filename": "src/main/java/geekbrains/spring/lesson10/services/SessionService.java",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/services/SessionService.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/java/geekbrains/spring/lesson10/services/SessionService.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson10/services/SessionService.java?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,65 @@\n+package geekbrains.spring.lesson10.services;\n+\n+import geekbrains.spring.lesson10.exceptions.ProductNotFoundException;\n+import geekbrains.spring.lesson10.exceptions.SessionExpiredException;\n+import geekbrains.spring.lesson10.model.BasketProduct;\n+import geekbrains.spring.lesson10.model.BasketProductDto;\n+import geekbrains.spring.lesson10.model.Session;\n+import geekbrains.spring.lesson10.repositories.SessionRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import java.util.List;\n+import java.util.NoSuchElementException;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+@Service\n+public class SessionService {\n+    @Autowired\n+    private SessionRepository sessionRepository;\n+    @Autowired\n+    private BasketProductService basketProductService;\n+\n+    public Session getSession() {\n+        return sessionRepository.save(new Session());\n+    }\n+\n+    public List<BasketProductDto> getBasket(UUID guid) {\n+        try {\n+            return sessionRepository.findById(guid).get().getBasketProducts().stream()\n+                    .map(BasketProductDto::new)\n+                    .collect(Collectors.toList());\n+        } catch (NoSuchElementException e) {\n+            throw new SessionExpiredException(\"Session was expired\");\n+        }\n+    }\n+\n+    @Transactional\n+    public void add(UUID guid, BasketProductDto basketProductDto) {\n+        Session s = sessionRepository.findById(guid).orElseThrow(() -> new SessionExpiredException(\"Session was expired\"));\n+        BasketProduct b = new BasketProduct(basketProductDto);\n+        b.setSession(s);\n+        basketProductService.add(b);\n+        sessionRepository.updateSessionUpdatedAt(guid);\n+    }\n+\n+    @Transactional\n+    public void delete(UUID guid, Long id) {\n+        if (basketProductService.deleteByIdAndGuid(guid, id) > 0) {\n+            sessionRepository.updateSessionUpdatedAt(guid);\n+        } else {\n+            throw new ProductNotFoundException(\"There is no product with id \" + id + \" in the basket\");\n+        }\n+    }\n+\n+    @Transactional\n+    public void update(UUID guid, BasketProductDto basketProduct) {\n+        if (basketProductService.updateCountByIdAndGuid(guid, basketProduct) > 0) {\n+            sessionRepository.updateSessionUpdatedAt(guid);\n+        } else {\n+            throw new ProductNotFoundException(\"There is no product with id \" + basketProduct.getId() + \" in the basket\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "55783944655ca77392cfbd5cabba09bc66b492e5",
    "filename": "src/main/java/geekbrains/spring/lesson9/ProductRepository.java",
    "status": "removed",
    "additions": 0,
    "deletions": 15,
    "changes": 15,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/d0f2c24441d8412b98f9bacfc6e208ec4256efe5/src/main/java/geekbrains/spring/lesson9/ProductRepository.java",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/d0f2c24441d8412b98f9bacfc6e208ec4256efe5/src/main/java/geekbrains/spring/lesson9/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/java/geekbrains/spring/lesson9/ProductRepository.java?ref=d0f2c24441d8412b98f9bacfc6e208ec4256efe5",
    "patch": "@@ -1,15 +0,0 @@\n-package geekbrains.spring.lesson9;\n-\n-import org.springframework.data.jpa.repository.JpaRepository;\n-import org.springframework.stereotype.Repository;\n-\n-import java.util.List;\n-\n-@Repository\n-public interface ProductRepository extends JpaRepository<Product, Integer>{\n-\n-    List<Product> findByCostGreaterThan (Double minCost);\n-    List<Product> findByCostLessThan (Double maxCost);\n-    List<Product> findByCostBetween (Double minCost, Double maxCost);\n-    List<Product> findByTitleIgnoreCaseContaining (String title);\n-}"
  },
  {
    "sha": "13cf8bf911fb8f50ad163b6babab04da92b8eb08",
    "filename": "src/main/resources/db/migration/V1__init.sql",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/resources/db/migration/V1__init.sql",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/resources/db/migration/V1__init.sql",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/resources/db/migration/V1__init.sql?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -55,4 +55,4 @@ CREATE TABLE `spring_lesson9`.`products_categories` (\n     FOREIGN KEY (`id_category`)\n     REFERENCES `spring_lesson9`.`categories` (`id`)\n     ON DELETE RESTRICT\n-    ON UPDATE RESTRICT);\n+    ON UPDATE RESTRICT);\n\\ No newline at end of file"
  },
  {
    "sha": "4d74411d7eb9251fc7f3a4bf25582bdffb392687",
    "filename": "src/main/resources/db/migration/V2__init.sql",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/MalyginaEkaterina/Spring_course/blob/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/resources/db/migration/V2__init.sql",
    "raw_url": "https://github.com/MalyginaEkaterina/Spring_course/raw/498830b9a0828d5cd1b48da0d5fccecc577e3479/src/main/resources/db/migration/V2__init.sql",
    "contents_url": "https://api.github.com/repos/MalyginaEkaterina/Spring_course/contents/src/main/resources/db/migration/V2__init.sql?ref=498830b9a0828d5cd1b48da0d5fccecc577e3479",
    "patch": "@@ -0,0 +1,24 @@\n+CREATE TABLE `spring_lesson9`.`sessions` (\n+  `guid` BINARY(16) NOT NULL,\n+  `created_at` TIMESTAMP NOT NULL,\n+  `updated_at` TIMESTAMP NOT NULL,\n+  PRIMARY KEY (`guid`));\n+\n+CREATE TABLE `spring_lesson9`.`basket_products` (\n+  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,\n+  `session_guid` BINARY(16) NOT NULL,\n+  `product_id` INT UNSIGNED NOT NULL,\n+  `product_count` SMALLINT NOT NULL,\n+  PRIMARY KEY (`id`),\n+  INDEX `fk_basket_session_id_idx` (`session_guid` ASC) VISIBLE,\n+  INDEX `fk_basket_product_id_idx` (`product_id` ASC) VISIBLE,\n+  CONSTRAINT `fk_basket_session_id`\n+    FOREIGN KEY (`session_guid`)\n+    REFERENCES `spring_lesson9`.`sessions` (`guid`)\n+    ON DELETE CASCADE\n+    ON UPDATE NO ACTION,\n+  CONSTRAINT `fk_basket_product_id`\n+    FOREIGN KEY (`product_id`)\n+    REFERENCES `spring_lesson9`.`products` (`id`)\n+    ON DELETE RESTRICT\n+    ON UPDATE RESTRICT);"
  }
]
