[
  {
    "sha": "570956b4c84371d51c13a2abdd9b0537803d7b77",
    "filename": "api/pom.xml",
    "status": "modified",
    "additions": 13,
    "deletions": 6,
    "changes": 19,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/api/pom.xml",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/api/pom.xml",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/pom.xml?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -35,7 +35,7 @@\n   <parent>\n     <groupId>org.springframework.boot</groupId>\n     <artifactId>spring-boot-starter-parent</artifactId>\n-    <version>2.4.2</version>\n+    <version>2.4.3</version>\n   </parent>\n \n   <dependencies>\n@@ -59,16 +59,23 @@\n     </dependency>\n     <dependency>\n       <groupId>org.springframework.boot</groupId>\n-      <artifactId>spring-boot-starter-cache</artifactId>\n+      <artifactId>spring-boot-starter-oauth2-client</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.springframework.boot</groupId>\n-      <artifactId>spring-boot-starter-undertow</artifactId>\n+      <artifactId>spring-boot-starter-webflux</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>org.springframework.security.oauth.boot</groupId>\n-      <artifactId>spring-security-oauth2-autoconfigure</artifactId>\n-      <version>2.2.7.RELEASE</version>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-cache</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-undertow</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.springframework.boot</groupId>"
  },
  {
    "sha": "916325eb84b5ef3640ab5e393d8c82e6dd05f20e",
    "filename": "api/src/main/java/ca/bc/gov/educ/api/sld/SldApiResourceApplication.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/java/ca/bc/gov/educ/api/sld/SldApiResourceApplication.java",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/java/ca/bc/gov/educ/api/sld/SldApiResourceApplication.java",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/main/java/ca/bc/gov/educ/api/sld/SldApiResourceApplication.java?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -5,6 +5,7 @@\n import org.springframework.cache.annotation.EnableCaching;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n import org.springframework.security.config.annotation.web.builders.WebSecurity;\n import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n \n@@ -38,5 +39,12 @@ public void configure(WebSecurity web) {\n               \"/actuator/health\",\"/actuator/prometheus\",\n               \"/swagger-ui/**\", \"/health\");\n     }\n+    @Override\n+    protected void configure(final HttpSecurity http) throws Exception {\n+      http\n+              .authorizeRequests()\n+              .anyRequest().authenticated().and()\n+              .oauth2ResourceServer().jwt();\n+    }\n   }\n }"
  },
  {
    "sha": "01bdad997e2aedbc365c3146df051ea8c24c9bfc",
    "filename": "api/src/main/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentController.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentController.java",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentController.java",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/main/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentController.java?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -9,7 +9,6 @@\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;\n import org.springframework.web.bind.annotation.RestController;\n \n import java.util.List;\n@@ -19,7 +18,6 @@\n  * The type sld student controller.\n  */\n @RestController\n-@EnableResourceServer\n @Slf4j\n public class SldStudentController implements SldStudentEndpoint {\n   @Getter(AccessLevel.PRIVATE)"
  },
  {
    "sha": "5f79ae9b14a3131624f30a626cf253d29f46a0f6",
    "filename": "api/src/main/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentHistoryController.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentHistoryController.java",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentHistoryController.java",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/main/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentHistoryController.java?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -9,7 +9,6 @@\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;\n import org.springframework.web.bind.annotation.RestController;\n \n import java.util.List;\n@@ -19,7 +18,6 @@\n  * The type sld student history controller.\n  */\n @RestController\n-@EnableResourceServer\n @Slf4j\n public class SldStudentHistoryController implements SldStudentHistoryEndpoint {\n "
  },
  {
    "sha": "1f97f8f18574d9a71473aab21aa817091ab1acb3",
    "filename": "api/src/main/java/ca/bc/gov/educ/api/sld/endpoint/v1/SldStudentEndpoint.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/java/ca/bc/gov/educ/api/sld/endpoint/v1/SldStudentEndpoint.java",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/java/ca/bc/gov/educ/api/sld/endpoint/v1/SldStudentEndpoint.java",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/main/java/ca/bc/gov/educ/api/sld/endpoint/v1/SldStudentEndpoint.java?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -27,7 +27,7 @@\n    * @return the sld student list by pen\n    */\n   @GetMapping(\"/\")\n-  @PreAuthorize(\"#oauth2.hasScope('READ_SLD_STUDENT')\")\n+  @PreAuthorize(\"hasAuthority('SCOPE_READ_SLD_STUDENT')\")\n   @ApiResponses(value = {@ApiResponse(responseCode = \"200\", description = \"OK\")})\n   List<SldStudent> getSldStudentsByPen(@RequestParam() String pen);\n }"
  },
  {
    "sha": "427d7fd36cdeec2bc3ed9a0a0a313e20e0f521e3",
    "filename": "api/src/main/java/ca/bc/gov/educ/api/sld/endpoint/v1/SldStudentHistoryEndpoint.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/java/ca/bc/gov/educ/api/sld/endpoint/v1/SldStudentHistoryEndpoint.java",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/java/ca/bc/gov/educ/api/sld/endpoint/v1/SldStudentHistoryEndpoint.java",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/main/java/ca/bc/gov/educ/api/sld/endpoint/v1/SldStudentHistoryEndpoint.java?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -24,7 +24,7 @@\n    * @return the sld student history data by pen\n    */\n   @GetMapping(\"/\")\n-  @PreAuthorize(\"#oauth2.hasScope('READ_SLD_STUDENT')\")\n+  @PreAuthorize(\"hasAuthority('SCOPE_READ_SLD_STUDENT')\")\n   @ApiResponses(value = {@ApiResponse(responseCode = \"200\", description = \"OK\")})\n   List<SldStudentHistory> getSldStudentHistoryByPen(@RequestParam() String pen);\n }"
  },
  {
    "sha": "1e9101567da7787a82afa54d2f722ac5dacb12d8",
    "filename": "api/src/main/resources/application.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/resources/application.properties",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/main/resources/application.properties?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -1,6 +1,4 @@\n #Keycloak/OAuth properties\n-security.oauth2.resource.jwt.key-value=${KEYCLOAK_PUBLIC_KEY}\n-\n #logging Properties\n logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL}\n logging.level.org.springframework.web=${SPRING_WEB_LOG_LEVEL}\n@@ -28,6 +26,8 @@ spring.flyway.baseline-on-migrate=true\n spring.flyway.table=FLYWAY_SCHEMA_HISTORY\n spring.flyway.baseline-version=0\n spring.flyway.enabled=true\n+spring.security.oauth2.resourceserver.jwt.issuer-uri=${TOKEN_ISSUER_URL}\n+spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${TOKEN_ISSUER_URL}/protocol/openid-connect/certs\n logging.file.name=/logs/app.log\n logging.logback.rollingpolicy.max-file-size=20MB\n logging.logback.rollingpolicy.clean-history-on-start=true"
  },
  {
    "sha": "d43188e77ddadd6f9c5b8669b45187c141b5532d",
    "filename": "api/src/test/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentControllerTest.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/test/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentControllerTest.java",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/test/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentControllerTest.java",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/test/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentControllerTest.java?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -1,27 +1,26 @@\n package ca.bc.gov.educ.api.sld.controller.v1;\n \n import ca.bc.gov.educ.api.sld.SldApiResourceApplication;\n-import ca.bc.gov.educ.api.sld.exception.RestExceptionHandler;\n import ca.bc.gov.educ.api.sld.mappers.v1.SldStudentMapper;\n import ca.bc.gov.educ.api.sld.repository.SldRepository;\n import ca.bc.gov.educ.api.sld.support.SldTestUtil;\n-import ca.bc.gov.educ.api.sld.support.WithMockOAuth2Scope;\n import com.fasterxml.jackson.core.type.TypeReference;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.mockito.MockitoAnnotations;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.test.context.ActiveProfiles;\n import org.springframework.test.context.junit4.SpringRunner;\n import org.springframework.test.web.servlet.MockMvc;\n-import org.springframework.test.web.servlet.setup.MockMvcBuilders;\n \n import java.io.IOException;\n \n import static org.hamcrest.Matchers.is;\n+import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.jwt;\n import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;\n import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n@@ -30,8 +29,10 @@\n @RunWith(SpringRunner.class)\n @ActiveProfiles(\"test\")\n @SpringBootTest(classes = {SldApiResourceApplication.class})\n+@AutoConfigureMockMvc\n @SuppressWarnings(\"squid:S00100\")\n public class SldStudentControllerTest {\n+  @Autowired\n   private MockMvc mvc;\n   private static final SldStudentMapper mapper = SldStudentMapper.mapper;\n   @Autowired\n@@ -42,8 +43,6 @@\n   @Before\n   public void setUp() throws IOException {\n     MockitoAnnotations.openMocks(this);\n-    mvc = MockMvcBuilders.standaloneSetup(controller)\n-        .setControllerAdvice(new RestExceptionHandler()).build();\n     SldTestUtil.createSampleDBData(\"SldSampleStudentData.json\", new TypeReference<>() {}, repository, mapper::toModel);\n   }\n \n@@ -53,11 +52,11 @@ public void tearDown() {\n   }\n \n   @Test\n-  @WithMockOAuth2Scope(scope = \"READ_SLD_STUDENT\")\n   public void testGetSldStudentByPen_GivenPenExistInDB_ShouldReturnStatusOk() throws Exception {\n \n     System.out.println(repository.findAllByPen(\"120164447\"));\n     this.mvc.perform(get(\"/api/v1/student/\")\n+        .with(jwt().jwt((jwt) -> jwt.claim(\"scope\", \"READ_SLD_STUDENT\")))\n         .param(\"pen\", \"120164447\"))\n         .andExpect(status().isOk())\n         .andDo(print())\n@@ -70,10 +69,11 @@ public void testGetSldStudentByPen_GivenPenExistInDB_ShouldReturnStatusOk() thro\n   }\n \n   @Test\n-  @WithMockOAuth2Scope(scope = \"READ_SLD_STUDENT\")\n   public void testGetSldStudentByPen_GivenPenDoesNotExistInDB_ShouldReturnEmptyArray() throws Exception {\n \n-    this.mvc.perform(get(\"/api/v1/student/\").param(\"pen\", \"7613009911\")\n+    this.mvc.perform(get(\"/api/v1/student/\")\n+            .with(jwt().jwt((jwt) -> jwt.claim(\"scope\", \"READ_SLD_STUDENT\")))\n+            .param(\"pen\", \"7613009911\")\n         ).andDo(print())\n         .andExpect(status().isOk())\n         .andExpect(jsonPath(\"$.length()\", is(0)));"
  },
  {
    "sha": "e87b7a18755040e0e0331d9a7d24fdceb981cf32",
    "filename": "api/src/test/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentHistoryControllerTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 10,
    "changes": 16,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/test/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentHistoryControllerTest.java",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/test/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentHistoryControllerTest.java",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/test/java/ca/bc/gov/educ/api/sld/controller/v1/SldStudentHistoryControllerTest.java?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -4,29 +4,25 @@\n import ca.bc.gov.educ.api.sld.exception.RestExceptionHandler;\n import ca.bc.gov.educ.api.sld.mappers.v1.SldStudentHistoryMapper;\n import ca.bc.gov.educ.api.sld.repository.SldStudentHistoryRepository;\n-import ca.bc.gov.educ.api.sld.struct.v1.SldStudentHistory;\n import ca.bc.gov.educ.api.sld.support.SldTestUtil;\n-import ca.bc.gov.educ.api.sld.support.WithMockOAuth2Scope;\n import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.mockito.MockitoAnnotations;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.test.context.ActiveProfiles;\n import org.springframework.test.context.junit4.SpringRunner;\n import org.springframework.test.web.servlet.MockMvc;\n import org.springframework.test.web.servlet.setup.MockMvcBuilders;\n \n-import java.io.File;\n import java.io.IOException;\n-import java.util.*;\n-import java.util.stream.Collectors;\n \n import static org.hamcrest.Matchers.is;\n+import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.jwt;\n import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\n import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n@@ -35,8 +31,10 @@\n @RunWith(SpringRunner.class)\n @ActiveProfiles(\"test\")\n @SpringBootTest(classes = {SldApiResourceApplication.class})\n+@AutoConfigureMockMvc\n @SuppressWarnings(\"squid:S00100\")\n public class SldStudentHistoryControllerTest {\n+  @Autowired\n   private MockMvc mvc;\n   private static final SldStudentHistoryMapper mapper = SldStudentHistoryMapper.mapper;\n   @Autowired\n@@ -47,8 +45,6 @@\n   @Before\n   public void setUp() throws IOException {\n     MockitoAnnotations.openMocks(this);\n-    mvc = MockMvcBuilders.standaloneSetup(controller)\n-            .setControllerAdvice(new RestExceptionHandler()).build();\n     SldTestUtil.createSampleDBData(\"SldStudentHistorySampleData.json\", new TypeReference<>() {}, repository, mapper::toModel);\n   }\n \n@@ -58,11 +54,11 @@ public void tearDown() {\n   }\n \n   @Test\n-  @WithMockOAuth2Scope(scope = \"READ_SLD_STUDENT\")\n   public void testGetSldStudentHistoryByPen_GivenPenExistInDB_ShouldReturnStatusOk() throws Exception {\n \n     System.out.println(repository.findAllByPen(\"120164447\"));\n     this.mvc.perform(get(\"/api/v1/student-history/\")\n+            .with(jwt().jwt((jwt) -> jwt.claim(\"scope\", \"READ_SLD_STUDENT\")))\n             .param(\"pen\", \"120164447\"))\n             .andExpect(status().isOk())\n             .andDo(print())\n@@ -75,10 +71,10 @@ public void testGetSldStudentHistoryByPen_GivenPenExistInDB_ShouldReturnStatusOk\n   }\n \n   @Test\n-  @WithMockOAuth2Scope(scope = \"READ_SLD_STUDENT\")\n   public void testGetPenDemographicsByPen_GivenPenDoesNotExistInDB_ShouldReturnEmptyArray() throws Exception {\n \n     this.mvc.perform(get(\"/api/v1/student-history/\").param(\"pen\", \"7613009911\")\n+            .with(jwt().jwt((jwt) -> jwt.claim(\"scope\", \"READ_SLD_STUDENT\")))\n     ).andDo(print())\n             .andExpect(status().isOk())\n             .andExpect(jsonPath(\"$.length()\", is(0)));"
  },
  {
    "sha": "d298b14e576229d4fb8a11c65ed30cf056335292",
    "filename": "api/src/test/java/ca/bc/gov/educ/api/sld/support/WithMockOAuth2Scope.java",
    "status": "removed",
    "additions": 0,
    "deletions": 18,
    "changes": 18,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/71ce94cf52f2c749d2c0408f4714a3cd7acb3038/api/src/test/java/ca/bc/gov/educ/api/sld/support/WithMockOAuth2Scope.java",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/71ce94cf52f2c749d2c0408f4714a3cd7acb3038/api/src/test/java/ca/bc/gov/educ/api/sld/support/WithMockOAuth2Scope.java",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/test/java/ca/bc/gov/educ/api/sld/support/WithMockOAuth2Scope.java?ref=71ce94cf52f2c749d2c0408f4714a3cd7acb3038",
    "patch": "@@ -1,18 +0,0 @@\n-package ca.bc.gov.educ.api.sld.support;\n-\n-import org.springframework.security.test.context.support.WithSecurityContext;\n-\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n-\n-/**\n- * How to test spring-security-oauth2 resource server security?\n- * https://stackoverflow.com/a/40921028\n- */\n-\n-@Retention(RetentionPolicy.RUNTIME)\n-@WithSecurityContext(factory = WithMockOAuth2ScopeSecurityContextFactory.class)\n-public @interface WithMockOAuth2Scope {\n-\n-    String scope() default \"\";\n-}"
  },
  {
    "sha": "e087ed70c88b1c2058789e744b94ff0c1b7c72fc",
    "filename": "api/src/test/java/ca/bc/gov/educ/api/sld/support/WithMockOAuth2ScopeSecurityContextFactory.java",
    "status": "removed",
    "additions": 0,
    "deletions": 35,
    "changes": 35,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/71ce94cf52f2c749d2c0408f4714a3cd7acb3038/api/src/test/java/ca/bc/gov/educ/api/sld/support/WithMockOAuth2ScopeSecurityContextFactory.java",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/71ce94cf52f2c749d2c0408f4714a3cd7acb3038/api/src/test/java/ca/bc/gov/educ/api/sld/support/WithMockOAuth2ScopeSecurityContextFactory.java",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/test/java/ca/bc/gov/educ/api/sld/support/WithMockOAuth2ScopeSecurityContextFactory.java?ref=71ce94cf52f2c749d2c0408f4714a3cd7acb3038",
    "patch": "@@ -1,35 +0,0 @@\n-package ca.bc.gov.educ.api.sld.support;\n-\n-import org.springframework.security.core.Authentication;\n-import org.springframework.security.core.context.SecurityContext;\n-import org.springframework.security.core.context.SecurityContextHolder;\n-import org.springframework.security.oauth2.provider.OAuth2Authentication;\n-import org.springframework.security.oauth2.provider.OAuth2Request;\n-import org.springframework.security.test.context.support.WithSecurityContextFactory;\n-\n-import java.util.HashSet;\n-import java.util.Set;\n-\n-/**\n- * How to test spring-security-oauth2 resource server security?\n- * https://stackoverflow.com/a/40921028\n- */\n-\n-public class WithMockOAuth2ScopeSecurityContextFactory implements WithSecurityContextFactory<WithMockOAuth2Scope> {\n-\n-    @Override\n-    public SecurityContext createSecurityContext(WithMockOAuth2Scope mockOAuth2Scope) {\n-        SecurityContext context = SecurityContextHolder.createEmptyContext();\n-\n-        Set<String> scope = new HashSet<>();\n-        scope.add(mockOAuth2Scope.scope());\n-\n-        OAuth2Request request = new OAuth2Request(null, null, null, true, scope, null, null, null, null);\n-\n-        Authentication auth = new OAuth2Authentication(request, null);\n-\n-        context.setAuthentication(auth);\n-\n-        return context;\n-    }\n-}"
  },
  {
    "sha": "ca8e976d0f116f61d9a800d9fd151a4f318493b5",
    "filename": "api/src/test/resources/application.properties",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/test/resources/application.properties",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/api/src/test/resources/application.properties",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/api/src/test/resources/application.properties?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -4,6 +4,9 @@ logging.level.root=ERROR\n logging.level.org.hibernate=ERROR\n logging.level.ca.bc.gov.educ.api.sld=INFO\n spring.jpa.show-sql=false\n+spring.security.oauth2.resourceserver.jwt.issuer-uri=http://test\n+spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://test\n+\n \n spring.main.allow-bean-definition-overriding=true\n spring.flyway.enabled=false"
  },
  {
    "sha": "71f6a091fcd0663f732bfbd2d8e76cba6e9f44ca",
    "filename": "tools/jenkins/update-configmap.sh",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/bcgov/EDUC-SLD-API/blob/40d4e381157503d5029f2e55b950c3d138c227c0/tools/jenkins/update-configmap.sh",
    "raw_url": "https://github.com/bcgov/EDUC-SLD-API/raw/40d4e381157503d5029f2e55b950c3d138c227c0/tools/jenkins/update-configmap.sh",
    "contents_url": "https://api.github.com/repos/bcgov/EDUC-SLD-API/contents/tools/jenkins/update-configmap.sh?ref=40d4e381157503d5029f2e55b950c3d138c227c0",
    "patch": "@@ -66,7 +66,7 @@ FLB_CONFIG=\"[SERVICE]\n \"\n \n echo Creating config map \"$APP_NAME\"-config-map\n-oc create -n \"$OPENSHIFT_NAMESPACE\"-\"$envValue\" configmap \"$APP_NAME\"-config-map --from-literal=TZ=$TZVALUE --from-literal=JDBC_URL=\"$DB_JDBC_CONNECT_STRING\" --from-literal=ORACLE_USERNAME=\"$DB_USER\" --from-literal=ORACLE_PASSWORD=\"$DB_PWD\" --from-literal=KEYCLOAK_PUBLIC_KEY=\"$soamFullPublicKey\" --from-literal=SPRING_SECURITY_LOG_LEVEL=INFO --from-literal=SPRING_WEB_LOG_LEVEL=INFO --from-literal=APP_LOG_LEVEL=INFO --from-literal=SPRING_BOOT_AUTOCONFIG_LOG_LEVEL=INFO --from-literal=SPRING_SHOW_REQUEST_DETAILS=false --from-literal=SPRING_JPA_SHOW_SQL=\"false\" --from-literal=NATS_URL=\"$NATS_URL\" --from-literal=NATS_MAX_RECONNECT=60 --dry-run -o yaml | oc apply -f -\n+oc create -n \"$OPENSHIFT_NAMESPACE\"-\"$envValue\" configmap \"$APP_NAME\"-config-map --from-literal=TZ=$TZVALUE --from-literal=TOKEN_ISSUER_URL=\"https://$SOAM_KC/auth/realms/$SOAM_KC_REALM_ID\" --from-literal=JDBC_URL=\"$DB_JDBC_CONNECT_STRING\" --from-literal=ORACLE_USERNAME=\"$DB_USER\" --from-literal=ORACLE_PASSWORD=\"$DB_PWD\" --from-literal=KEYCLOAK_PUBLIC_KEY=\"$soamFullPublicKey\" --from-literal=SPRING_SECURITY_LOG_LEVEL=INFO --from-literal=SPRING_WEB_LOG_LEVEL=INFO --from-literal=APP_LOG_LEVEL=INFO --from-literal=SPRING_BOOT_AUTOCONFIG_LOG_LEVEL=INFO --from-literal=SPRING_SHOW_REQUEST_DETAILS=false --from-literal=SPRING_JPA_SHOW_SQL=\"false\" --from-literal=NATS_URL=\"$NATS_URL\" --from-literal=NATS_MAX_RECONNECT=60 --dry-run -o yaml | oc apply -f -\n \n echo\n echo Setting environment variables for $APP_NAME-$SOAM_KC_REALM_ID application"
  }
]
