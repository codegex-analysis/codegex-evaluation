[
  {
    "sha": "9f1bd1bb44ef856392cf07be6fbef2760f0675fe",
    "filename": "src/main/java/gregicadditions/ClientProxy.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/ClientProxy.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/ClientProxy.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/ClientProxy.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -76,9 +76,9 @@ public static void addMaterialFormulaHandler(ItemTooltipEvent event) {\n             if (oreDictName.isPresent() && GADustItem.oreDictToSimpleDust.containsKey(oreDictName.get())) {\n                 SimpleDustMaterial material = SimpleDustMaterial.GA_DUSTS.get((short) itemStack.getItemDamage());\n                 if (material != null) {\n-                    String formula = material.chemicalFormula;\n+                    String formula = material.getFormula();\n                     if (formula != null && !formula.isEmpty() && event.getToolTip().size() == 0) {\n-                        event.getToolTip().add(1, ChatFormatting.GRAY.toString() + material.chemicalFormula);\n+                        event.getToolTip().add(1, ChatFormatting.GRAY.toString() + material.getFormula());\n                     }\n                 }\n             }\n@@ -90,8 +90,8 @@ public static void addMaterialFormulaHandler(ItemTooltipEvent event) {\n             String fluidName = ItemNBTUtils.getString(itemStack, \"FluidName\");\n             if (fluidName != null) {\n                 SimpleFluidMaterial material = SimpleFluidMaterial.GA_FLUIDS.get(fluidName);\n-                if (material != null && material.chemicalFormula != null && !material.chemicalFormula.isEmpty()) {\n-                    event.getToolTip().add(1, ChatFormatting.GRAY + material.chemicalFormula);\n+                if (material != null && material.getFormula() != null && !material.getFormula().isEmpty()) {\n+                    event.getToolTip().add(1, ChatFormatting.GRAY + material.getFormula());\n                 }\n             }\n         }"
  },
  {
    "sha": "4f5663e865f9eb0e303768a3ea615a48b59b795d",
    "filename": "src/main/java/gregicadditions/GAMaterials.java",
    "status": "modified",
    "additions": 1169,
    "deletions": 1183,
    "changes": 2352,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/GAMaterials.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/GAMaterials.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/GAMaterials.java?ref=aab61c806844eb431e22bf8750b928359e737d87"
  },
  {
    "sha": "cb7bd7cf68daed06e775651df5b74cceb82f0680",
    "filename": "src/main/java/gregicadditions/coremod/hooks/GregTechCEHooks.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/coremod/hooks/GregTechCEHooks.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/coremod/hooks/GregTechCEHooks.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/coremod/hooks/GregTechCEHooks.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -127,8 +127,8 @@ public static void getSimpleFluidTooltip(FluidStack fluidStack, StringBuilder fo\n             String[] materialArray = fluidStack.getUnlocalizedName().split(\"\\\\.\");\n             if (materialArray.length >= 2 && materialArray[0].equals(\"fluid\")) {\n                 SimpleFluidMaterial material = SimpleFluidMaterial.GA_FLUIDS.get(materialArray[1]);\n-                if (material != null && material.chemicalFormula != null && !material.chemicalFormula.isEmpty()) {\n-                    formula.append(material.chemicalFormula);\n+                if (material != null && material.getFormula() != null && !material.getFormula().isEmpty()) {\n+                    formula.append(material.getFormula());\n                 }\n             }\n         }"
  },
  {
    "sha": "25a4294ef1b016b54a54f5f5e5dadc8621346d65",
    "filename": "src/main/java/gregicadditions/item/GADustItem.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/item/GADustItem.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/item/GADustItem.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/item/GADustItem.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -76,8 +76,8 @@ public void registerModels() {\n     public void addInformation(ItemStack itemStack, @Nullable World worldIn, List<String> lines, ITooltipFlag tooltipFlag) {\n         super.addInformation(itemStack, worldIn, lines, tooltipFlag);\n         String oreDict = OreDictUnifier.getOreDictionaryNames(itemStack).stream().filter(oreDictToSimpleDust::containsKey).findFirst().orElse(\"\");\n-        if (!oreDict.isEmpty() && !oreDictToSimpleDust.get(oreDict).chemicalFormula.isEmpty()) {\n-            lines.add(oreDictToSimpleDust.get(oreDict).chemicalFormula);\n+        if (!oreDict.isEmpty() && !oreDictToSimpleDust.get(oreDict).getFormula().isEmpty()) {\n+            lines.add(oreDictToSimpleDust.get(oreDict).getFormula());\n         }\n     }\n }"
  },
  {
    "sha": "dbe7a08bcdcd3460635afca6d8ecc3c8fae2e91a",
    "filename": "src/main/java/gregicadditions/materials/SimpleDustMaterial.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/materials/SimpleDustMaterial.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/materials/SimpleDustMaterial.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/materials/SimpleDustMaterial.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -37,6 +37,12 @@ public SimpleDustMaterial(String name, int rgb, short id, MaterialIconSet materi\n         this.chemicalFormula = calculateChemicalFormula(formula);\n     }\n \n+    public SimpleDustMaterial(String name, int rgb, short id, MaterialIconSet materialIconSet, String formula, boolean fancy) {\n+        this(name, rgb, id, materialIconSet, formula);\n+        this.fancy = fancy;\n+\n+    }\n+\n     public String getOre() {\n         return \"dust\" + toCamelCaseString(name);\n     }"
  },
  {
    "sha": "6841513b165675a7ef5e8b1c27525bb948dd625e",
    "filename": "src/main/java/gregicadditions/materials/SimpleFluidMaterial.java",
    "status": "modified",
    "additions": 34,
    "deletions": 29,
    "changes": 63,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/materials/SimpleFluidMaterial.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/materials/SimpleFluidMaterial.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/materials/SimpleFluidMaterial.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -5,9 +5,7 @@\n import net.minecraftforge.fluids.Fluid;\n import net.minecraftforge.fluids.FluidStack;\n \n-import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.List;\n import java.util.Map;\n \n public class SimpleFluidMaterial extends SimpleMaterial {\n@@ -17,58 +15,65 @@\n     public Fluid fluid;\n     public boolean hasPlasma;\n     public Fluid plasma;\n-    public final ImmutableList<MaterialStack> materialComponents;\n-    public String chemicalFormula;\n-\n \n     public SimpleFluidMaterial(String name, int rgb) {\n-        this(name, rgb, 300, false, null);\n+        this(name, rgb, 300, false, \"\");\n     }\n \n-    public SimpleFluidMaterial(String name, int rgb, ImmutableList<MaterialStack> materialComponents) {\n-        this(name, rgb, 300, false, materialComponents);\n+    public SimpleFluidMaterial(String name, int rgb, int temperature) {\n+        this(name, rgb, temperature, false, \"\");\n     }\n \n-    public SimpleFluidMaterial(String name, int rgb, int temperature) {\n-        this(name, rgb, temperature, false, null);\n+    // TODO Remove\n+    public SimpleFluidMaterial(String name, int rgb, ImmutableList<MaterialStack> formula) {\n+        this(name, rgb, 300, false);\n+        chemicalFormula = calculateChemicalFormula(formula);\n     }\n \n-    public SimpleFluidMaterial(String name, int rgb, int temperature, ImmutableList<MaterialStack> materialComponents) {\n-        this(name, rgb, temperature, false, materialComponents);\n+    public SimpleFluidMaterial(String name, int rgb, String formula) {\n+        this(name, rgb, 300, false);\n+        chemicalFormula = calculateChemicalFormula(formula);\n+    }\n+\n+    public SimpleFluidMaterial(String name, int rgb, String formula, boolean fancy) {\n+        this(name, rgb, 300, false);\n+        chemicalFormula = calculateChemicalFormula(formula);\n+        this.fancy = fancy;\n     }\n \n     public SimpleFluidMaterial(String name, int rgb, boolean hasPlasma) {\n-        this(name, rgb, 300, hasPlasma, null);\n+        this(name, rgb, 300, hasPlasma);\n     }\n \n-    public SimpleFluidMaterial(String name, int rgb, boolean hasPlasma, ImmutableList<MaterialStack> materialComponents) {\n-        this(name, rgb, 300, hasPlasma, materialComponents);\n+    public SimpleFluidMaterial(String name, int rgb, String formula, boolean hasPlasma, boolean fancy) {\n+        this(name, rgb, 300, hasPlasma);\n+        chemicalFormula = calculateChemicalFormula(formula);\n+        this.fancy = fancy;\n     }\n \n-    public SimpleFluidMaterial(String name, int rgb, int temperature, boolean hasPlasma, ImmutableList<MaterialStack> materialComponents) {\n+    public SimpleFluidMaterial(String name, int rgb, int temperature, boolean hasPlasma, String formula) {\n+        this(name, rgb, temperature, hasPlasma);\n+        this.chemicalFormula = formula;\n+    }\n+\n+    public SimpleFluidMaterial(String name, int rgb, boolean hasPlasma, String formula) {\n+        this(name, rgb, 300, hasPlasma);\n+        chemicalFormula = calculateChemicalFormula(formula);\n+    }\n+\n+    public SimpleFluidMaterial(String name, int rgb, int temperature, boolean hasPlasma) {\n         this.name = name;\n         this.rgb = rgb;\n         this.temperature = temperature;\n         this.hasPlasma = hasPlasma;\n-        this.materialComponents = materialComponents;\n-        this.chemicalFormula = calculateChemicalFormula();\n         GA_FLUIDS.put(name, this);\n     }\n \n     public FluidStack getFluid(int amount) {\n         return new FluidStack(fluid, amount);\n     }\n \n-    public FluidStack getPlasma(int amount) { return hasPlasma ? new FluidStack(plasma, amount) : null; }\n-\n-    private String calculateChemicalFormula() {\n-        if (materialComponents != null && !materialComponents.isEmpty()) {\n-            StringBuilder components = new StringBuilder();\n-            for (MaterialStack component : materialComponents)\n-                components.append(component.toString());\n-            return components.toString();\n-        }\n-        return \"\";\n+    public FluidStack getPlasma(int amount) {\n+        return hasPlasma ? new FluidStack(plasma, amount) : null;\n     }\n-\n }"
  },
  {
    "sha": "5a5f87aaa39ebb8eb77d0606c4bdb84f072b6c56",
    "filename": "src/main/java/gregicadditions/materials/SimpleMaterial.java",
    "status": "modified",
    "additions": 36,
    "deletions": 1,
    "changes": 37,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/materials/SimpleMaterial.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/materials/SimpleMaterial.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/materials/SimpleMaterial.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -3,12 +3,17 @@\n import com.google.common.collect.ImmutableList;\n import gregtech.api.unification.stack.MaterialStack;\n import gregtech.api.util.SmallDigits;\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.util.text.TextFormatting;\n+\n+import static net.minecraft.util.text.TextFormatting.*;\n \n public abstract class SimpleMaterial {\n \n     public String name;\n     public int rgb;\n-    public String chemicalFormula;\n+    protected String chemicalFormula;\n+    public boolean fancy = false;\n \n     protected String calculateChemicalFormula(ImmutableList<MaterialStack> materialComponents) {\n         if (!materialComponents.isEmpty()) {\n@@ -32,4 +37,34 @@ protected String calculateChemicalFormula(String unformattedFormula) {\n         }\n         return sb.toString(); // returns \"\" if no formula, like other method\n     }\n+\n+    public String getFormula() {\n+        return fancy ? makeFancy(chemicalFormula) : chemicalFormula;\n+    }\n+\n+    private static final TextFormatting[] fanciness = new TextFormatting[] { RED, GOLD, YELLOW, GREEN, AQUA, BLUE, LIGHT_PURPLE };\n+\n+    private static String makeFancy(String input) {\n+        return fancyTest(input, fanciness, 80.0, 1);\n+    }\n+\n+    private static String fancyTest(String input, TextFormatting[] colors, double delay, int posstep) {\n+        StringBuilder sb = new StringBuilder();\n+\n+        int offset = (int) Math.floor(Minecraft.getSystemTime() / delay) % colors.length;\n+        String format = null;\n+\n+        for (int i = 0; i < input.length(); i++) {\n+            char c = input.charAt(i);\n+\n+            if (!(c == '&' || c == '\\u00a7')) {\n+                int col = ((i * posstep) + colors.length - offset) % colors.length;\n+                sb.append(colors[col].toString());\n+                if (format != null)\n+                    sb.append(format);\n+                sb.append(c);\n+            } else format = input.charAt(++i) == 'r' ? null : format == null ? \"\" + c + input.charAt(i) : format + c + input.charAt(i);\n+        }\n+        return sb.toString();\n+    }\n }"
  },
  {
    "sha": "494962471d8e596bb27ceaacb1691149cb52c456",
    "filename": "src/main/java/gregicadditions/recipes/GAMachineRecipeRemoval.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/GAMachineRecipeRemoval.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/GAMachineRecipeRemoval.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/GAMachineRecipeRemoval.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -203,6 +203,9 @@ public static void init() {\n         removeRecipesByInputs(ASSEMBLER_RECIPES, new ItemStack[]{OreDictUnifier.get(circuit, MarkerMaterials.Tier.Advanced, 4), QUANTUM_EYE.getStackForm()}, new FluidStack[]{Osmium.getFluid(1152)});\n         removeRecipesByInputs(ASSEMBLER_RECIPES, new ItemStack[]{OreDictUnifier.get(circuit, MarkerMaterials.Tier.Elite, 4), OreDictUnifier.get(dust, NetherStar)}, new FluidStack[]{Osmium.getFluid(2304)});\n         removeRecipesByInputs(ASSEMBLER_RECIPES, new ItemStack[]{OreDictUnifier.get(circuit, MarkerMaterials.Tier.Master, 4), QUANTUM_STAR.getStackForm()}, new FluidStack[]{Osmium.getFluid(4608)});\n+\n+        //remove gtce nickel zinc ferrite\n+        removeRecipesByInputs(BLAST_RECIPES, new ItemStack[]{OreDictUnifier.get(dust, FerriteMixture, 1)}, new FluidStack[]{Oxygen.getFluid(2000)});\n     }\n \n     public static <R extends RecipeBuilder<R>> void removeRecipesByInputs(RecipeMap<R> map, ItemStack... itemInputs) {"
  },
  {
    "sha": "458cfd0cc394bf5ebd8f3c3fff062256ae586949",
    "filename": "src/main/java/gregicadditions/recipes/GARecipeAddition.java",
    "status": "modified",
    "additions": 4474,
    "deletions": 814,
    "changes": 5288,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/GARecipeAddition.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/GARecipeAddition.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/GARecipeAddition.java?ref=aab61c806844eb431e22bf8750b928359e737d87"
  },
  {
    "sha": "10b3adf86b6a3c10735fec81712acbde66f94ef9",
    "filename": "src/main/java/gregicadditions/recipes/NuclearHandler.java",
    "status": "modified",
    "additions": 34,
    "deletions": 20,
    "changes": 54,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/NuclearHandler.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/NuclearHandler.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/NuclearHandler.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -35,37 +35,39 @@ private static void processNuclearDepleatedFuel(OrePrefix ingot, IngotMaterial m\n         if (isotopeMaterial == null) {\n             return;\n         }\n+        // 8F + C? + C?? + Fuel TRISO = Depleted Fuel + SiF4 + CF4\n         CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(300)\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.depletedFuelTRISO, 1))\n-                .fluidInputs(Fluorine.getFluid(2000))\n+                .fluidInputs(Fluorine.getFluid(8000))\n                 .outputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.depletedFuel, 1))\n                 .fluidOutputs(SiliconFluoride.getFluid(1000))\n                 .fluidOutputs(CarbonFluoride.getFluid(1000))\n                 .buildAndRegister();\n \n+        // FuelZr + 4Cl = ZrCl4\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(300)\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.depletedFuelZirconiumAlloy, 1))\n-                .fluidInputs(Chlorine.getFluid(2000))\n+                .fluidInputs(Chlorine.getFluid(4000))\n                 .outputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.depletedFuel, 1))\n-                .outputs(ZirconiumTetrachloride.getItemStack(2))\n+                .outputs(ZirconiumTetrachloride.getItemStack(5))\n                 .buildAndRegister();\n \n+        // Fuel + O = [Fuel + O]\n         CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(300)\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.depletedFuel, 1))\n                 .fluidInputs(Oxygen.getFluid(1000))\n                 .outputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.depletedFuelOxide, 1))\n                 .buildAndRegister();\n \n+        // HNO3 + [Fuel + O] + O = [Fuel + NO3 + H2O]\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().EUt(480).duration(3000)\n-                .input(dust, Boron)\n+                .notConsumable(dust, Boron)\n                 .fluidInputs(NitricAcid.getFluid(1000))\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.depletedFuelOxide, 1))\n-                .fluidOutputs(NitrogenDioxide.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dustTiny, Boron, 7))\n                 .fluidOutputs(isotopeMaterial.getFluidDepletedFuelNitrateSolution(1000))\n                 .buildAndRegister();\n \n-\n+        // [Fuel + NO3 + H2O] + N2H4 + RP1 + C12H27O4P = Fuel2N3 + Red Oil [N2H4 + RP1 + C12H27O4P]\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().EUt(480).duration(3000)\n                 .fluidInputs(isotopeMaterial.getFluidDepletedFuelNitrateSolution(1000))\n                 .fluidInputs(Hydrazine.getFluid(1000))\n@@ -74,12 +76,13 @@ private static void processNuclearDepleatedFuel(OrePrefix ingot, IngotMaterial m\n                 .input(dust, FerriteMixture)\n                 .outputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.depletedFuelNitride, 1))\n                 .outputs(isotopeMaterial.getRadioactiveMaterial().waste.getStackForm())\n-                .fluidOutputs(RedOil.getFluid(2000))\n+                .fluidOutputs(RedOil.getFluid(4000))\n                 .buildAndRegister();\n \n+        // Fuel2N3 = Waste + 3N\n         ELECTROLYZER_RECIPES.recipeBuilder().EUt(480).duration(2000)\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.depletedFuelNitride, 1))\n-                .fluidOutputs(NitricAcid.getFluid(1000))\n+                .fluidOutputs(Nitrogen.getFluid(3000))\n                 .outputs(isotopeMaterial.getRadioactiveMaterial().waste.getStackForm())\n                 .buildAndRegister();\n \n@@ -91,39 +94,45 @@ private static void processNuclearFuel(OrePrefix ingot, IngotMaterial material)\n         if (isotopeMaterial == null) {\n             return;\n         }\n+        // Fuel + Zr = [Fuel + Zr]\n         ALLOY_SMELTER_RECIPES.recipeBuilder().EUt(30).duration(300)\n                 .input(ingot, isotopeMaterial.getMaterial())\n                 .input(ingot, Zirconium)\n                 .outputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.zirconiumAlloy, 1))\n                 .buildAndRegister();\n \n+        // [Fuel + Zr] + 4Cl = Fuel + ZrCl4\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(300)\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.zirconiumAlloy, 1))\n                 .fluidInputs(Chlorine.getFluid(3000))\n                 .outputs(OreDictUnifier.get(ingot, isotopeMaterial.getMaterial()))\n-                .outputs(ZirconiumTetrachloride.getItemStack(4))\n+                .outputs(ZirconiumTetrachloride.getItemStack(5))\n                 .buildAndRegister();\n \n+        // Fuel + O = [Fuel + O]\n         CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(300)\n                 .input(ingot, isotopeMaterial.getMaterial())\n                 .fluidInputs(Oxygen.getFluid(1000))\n                 .outputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.oxide, 1))\n                 .buildAndRegister();\n \n+        // [Fuel + O] + 2C = [Fuel + C] + CO\n         CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(300)\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.oxide, 1))\n                 .input(dust, Carbon, 2)\n                 .outputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.carbide, 1))\n                 .fluidOutputs(CarbonMonoxde.getFluid(1000))\n                 .buildAndRegister();\n \n+        // [Fuel + C] + 4O = CO2 + [Fuel + 2O]\n         BLAST_RECIPES.recipeBuilder().blastFurnaceTemp(1000).EUt(120).duration(3000)\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.carbide, 1))\n-                .fluidInputs(Oxygen.getFluid(3000))\n+                .fluidInputs(Oxygen.getFluid(4000))\n                 .fluidOutputs(CarbonDioxide.getFluid(1000))\n                 .outputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.oxide, 1))\n                 .buildAndRegister();\n \n+        // [Fuel + O] + [Fuel + C] + 3N = Fuel2N3 + CO\n         CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(300)\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.oxide, 1))\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.carbide, 1))\n@@ -132,11 +141,15 @@ private static void processNuclearFuel(OrePrefix ingot, IngotMaterial material)\n                 .fluidOutputs(CarbonMonoxde.getFluid(1000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(300)\n+        // Fuel2N3 + 4H2O + 3O = 2[Fuel + 2O] + H2O + NO2 + 2NH3\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().EUt(30).duration(300)\n                 .inputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.nitride, 1))\n                 .fluidInputs(Water.getFluid(3000))\n-                .outputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.oxide, 1))\n-                .fluidOutputs(Ammonia.getFluid(3000))\n+                .fluidInputs(Oxygen.getFluid(3000))\n+                .outputs(isotopeMaterial.getItemStack(GAEnums.GAOrePrefix.oxide, 2))\n+                .fluidOutputs(Ammonia.getFluid(2000))\n+                .fluidOutputs(Water.getFluid(1000))\n+                .fluidOutputs(NitrogenDioxide.getFluid(1000))\n                 .buildAndRegister();\n \n         ALLOY_SMELTER_RECIPES.recipeBuilder().EUt(480).duration(200)\n@@ -186,28 +199,29 @@ private static void processNuclearMaterial(OrePrefix ingot, IngotMaterial materi\n         if (radioactiveMaterial != null && radioactiveMaterial.composition.size() > 0) {\n             int complexity = radioactiveMaterial.complexity;\n \n-\n+            // Mat + 2HNO3 = [Mat + 2NO2] + H2O2\n             CHEMICAL_RECIPES.recipeBuilder().duration(2000 * complexity / 100)\n                     .input(dust, radioactiveMaterial.getMaterial())\n                     .fluidInputs(NitricAcid.getFluid(2000))\n                     .outputs(radioactiveMaterial.getItemStack(GAEnums.GAOrePrefix.nitrite, 3))\n                     .buildAndRegister();\n \n+            // [Mat + 2NO2] = [Mat + 2O] + N2O4\n             BLAST_RECIPES.recipeBuilder().blastFurnaceTemp(600).duration(100 * complexity / 100).EUt(120 * complexity / 100)\n-                    .inputs(radioactiveMaterial.getItemStack(GAEnums.GAOrePrefix.nitrite, 1))\n-                    .fluidInputs(Water.getFluid(6000))\n+                    .inputs(radioactiveMaterial.getItemStack(GAEnums.GAOrePrefix.nitrite, 3))\n                     .outputs(radioactiveMaterial.getItemStack(GAEnums.GAOrePrefix.dioxide, 1))\n                     .fluidOutputs(NitrogenTetroxide.getFluid(1000))\n                     .buildAndRegister();\n \n-\n+            // [Mat + 2O] + 6Cl = [Mat + 6Cl] + 2O\n             CHEMICAL_RECIPES.recipeBuilder().duration(1000 * complexity / 100)\n                     .inputs(radioactiveMaterial.getItemStack(GAEnums.GAOrePrefix.dioxide, 1))\n                     .fluidInputs(Chlorine.getFluid(6000))\n                     .fluidOutputs(radioactiveMaterial.getFluidHexachloride(6000))\n-                    .fluidOutputs(Oxygen.getFluid(1000))\n+                    .fluidOutputs(Oxygen.getFluid(2000))\n                     .buildAndRegister();\n \n+            // [Mat + 6Cl] + 6HF = 6HCl + [Mat + 6F] (keeping two multiplier for game balance right now)\n             CHEMICAL_RECIPES.recipeBuilder().duration(1000 * complexity / 100)\n                     .fluidInputs(radioactiveMaterial.getFluidHexachloride(2000))\n                     .fluidInputs(HydrofluoricAcid.getFluid(10000))\n@@ -282,7 +296,7 @@ private static void processNuclearMaterial(OrePrefix ingot, IngotMaterial materi\n                         .notConsumable(new IntCircuitIngredient(0))\n                         .fluidInputs(key.getFluidHexafluorideSteamCracked(7000))\n                         .outputs(key.getItemStack(GAEnums.GAOrePrefix.dioxide, 1))\n-                        .fluidOutputs(Fluorine.getFluid(5000))\n+                        .fluidOutputs(Fluorine.getFluid(6000))\n                         .buildAndRegister();\n \n                 BLAST_RECIPES.recipeBuilder().blastFurnaceTemp(600).duration(1000 * complexity / 100).EUt(120 * complexity / 100)"
  },
  {
    "sha": "335d970d18853a3a64cc200bbe41f9cb5ac61bc2",
    "filename": "src/main/java/gregicadditions/recipes/chain/AluminiumChain.java",
    "status": "modified",
    "additions": 28,
    "deletions": 22,
    "changes": 50,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/AluminiumChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/AluminiumChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/AluminiumChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -8,42 +8,48 @@\n import static gregtech.api.recipes.RecipeMaps.*;\n import static gregtech.api.unification.material.Materials.*;\n import static gregtech.api.unification.ore.OrePrefix.dust;\n-import static gregtech.api.unification.ore.OrePrefix.ingot;\n \n public class AluminiumChain {\n     public static void init() {\n+\n+        // 2Al(OH)3 -> Al2O3 + 3H2O\n         BLAST_RECIPES.recipeBuilder().duration(240).EUt(125).blastFurnaceTemp(1000)\n-                .inputs(AluminiumHydroxide.getItemStack(2))\n-                .outputs(Alumina.getItemStack())\n+                .inputs(AluminiumHydroxide.getItemStack(14))\n+                .outputs(Alumina.getItemStack(5))\n                 .fluidOutputs(Water.getFluid(3000))\n                 .buildAndRegister();\n \n+        // 6NaOH + Al2O3 + 12HF -> 2Na3AlF6 + 9H2O\n         CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(125)\n-                .input(dust, SodiumHydroxide, 3)\n-                .inputs(Alumina.getItemStack())\n-                .fluidInputs(HydrofluoricAcid.getFluid(6000))\n-                .fluidOutputs(SodiumHexafluoroaluminate.getFluid(1000))\n-                .fluidOutputs(Water.getFluid(4500))\n+                .input(dust, SodiumHydroxide, 18)\n+                .inputs(Alumina.getItemStack(5))\n+                .fluidInputs(HydrofluoricAcid.getFluid(12000))\n+                .fluidOutputs(SodiumHexafluoroaluminate.getFluid(2000))\n+                .fluidOutputs(Water.getFluid(9000))\n                 .buildAndRegister();\n \n+        // 2Al2O3 + Na3AlF6 -> 4Al + 3NaF + AlF3 + 6O\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(600).EUt(125)\n-                .inputs(Alumina.getItemStack())\n+                .inputs(Alumina.getItemStack(10))\n                 .fluidInputs(SodiumHexafluoroaluminate.getFluid(1000))\n-                .fluidOutputs(Aluminium.getFluid(288))\n-                .outputs(OreDictUnifier.get(dust, SodiumFluoride, 3))\n-                .outputs(AluminiumTrifluoride.getItemStack())\n+                .fluidOutputs(Aluminium.getFluid(576))\n+                .fluidOutputs(Oxygen.getFluid(6000))\n+                .outputs(OreDictUnifier.get(dust, SodiumFluoride, 6))\n+                .outputs(AluminiumTrifluoride.getItemStack(4))\n                 .buildAndRegister();\n \n+        // 3NaF + AlF3 -> Na3AlF6\n         CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(125)\n-                .input(dust, SodiumFluoride, 3)\n-                .inputs(AluminiumTrifluoride.getItemStack())\n+                .input(dust, SodiumFluoride, 6)\n+                .inputs(AluminiumTrifluoride.getItemStack(4))\n                 .fluidOutputs(SodiumHexafluoroaluminate.getFluid(1000))\n                 .buildAndRegister();\n \n+        // H2O + NaOH + Al2H2O4 -> ?\n         MIXER_RECIPES.recipeBuilder().duration(240).EUt(32)\n                 .fluidInputs(Water.getFluid(1000))\n-                .input(dust, SodiumHydroxide)\n-                .input(dust, Bauxite, 2)\n+                .input(dust, SodiumHydroxide, 3)\n+                .input(dust, Bauxite, 16)\n                 .fluidOutputs(SodiumHydroxideBauxite.getFluid(4000))\n                 .buildAndRegister();\n \n@@ -62,13 +68,13 @@ public static void init() {\n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(240).EUt(125)\n                 .fluidInputs(PureAluminiumHydroxideSolution.getFluid(1000))\n                 .notConsumable(new IntCircuitIngredient(0))\n-                .outputs(AluminiumHydroxide.getItemStack())\n+                .outputs(AluminiumHydroxide.getItemStack(7))\n                 .buildAndRegister();\n \n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(240).EUt(125)\n-                .fluidInputs(PureAluminiumHydroxideSolution.getFluid(9000))\n+                .fluidInputs(PureAluminiumHydroxideSolution.getFluid(8000))\n                 .inputs(AluminiumHydroxide.getItemStack())\n-                .outputs(AluminiumHydroxide.getItemStack(10))\n+                .outputs(AluminiumHydroxide.getItemStack(64))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(220).EUt(1000)\n@@ -93,14 +99,14 @@ public static void init() {\n                 .fluidInputs(RedSlurry.getFluid(1000))\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n                 .fluidOutputs(TitaniumSulfate.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, SiliconDioxide))\n+                .outputs(OreDictUnifier.get(dust, SiliconDioxide, 3))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(950)\n                 .fluidInputs(TitaniumSulfate.getFluid(1000))\n-                .fluidOutputs(TitaniumTetrachloride.getFluid(1000))\n                 .fluidInputs(HydrochloricAcid.getFluid(4000))\n-                .fluidOutputs(HydrogenSulfide.getFluid(1000))\n+                .fluidOutputs(TitaniumTetrachloride.getFluid(1000))\n+                .fluidOutputs(SulfuricAcid.getFluid(2000))\n                 .buildAndRegister();\n     }\n }"
  },
  {
    "sha": "18f91136fa0f01dffd4a5ff3e3b1e519af7c001f",
    "filename": "src/main/java/gregicadditions/recipes/chain/AmmoniaChain.java",
    "status": "modified",
    "additions": 12,
    "deletions": 9,
    "changes": 21,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/AmmoniaChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/AmmoniaChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/AmmoniaChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -13,28 +13,31 @@ public static void init() {\n         MIXER_RECIPES.recipeBuilder().duration(100).EUt(30)\n                 .input(dust, Garnierite)\n                 .inputs(Alumina.getItemStack())\n-                .outputs(NiAlOCatalyst.getItemStack())\n+                .outputs(NiAlOCatalyst.getItemStack(2))\n                 .buildAndRegister();\n \n         MIXER_RECIPES.recipeBuilder().duration(100).EUt(30)\n-                .input(dust, BandedIron)\n+                .input(dust, Iron)\n                 .inputs(ChromiumOxide.getItemStack())\n-                .outputs(FeCrOCatalyst.getItemStack())\n+                .outputs(FeCrOCatalyst.getItemStack(2))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(60).EUt(120)\n+        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(120)\n                 .notConsumable(NiAlOCatalyst.getItemStack())\n                 .fluidInputs(Methane.getFluid(1000))\n                 .fluidInputs(Steam.getFluid(1000))\n-                .fluidOutputs(PoorNitrogenMix.getFluid(2000))\n-                .buildAndRegister();\n-\n-        MIXER_RECIPES.recipeBuilder().duration(120).EUt(120)\n-                .fluidInputs(PoorNitrogenMix.getFluid(2000))\n                 .fluidInputs(Air.getFluid(1000))\n                 .fluidOutputs(RichNitrogenMix.getFluid(3000))\n                 .buildAndRegister();\n \n+        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(120)\n+                .notConsumable(NiAlOCatalyst.getItemStack())\n+                .fluidInputs(Methane.getFluid(1000))\n+                .fluidInputs(Steam.getFluid(1000))\n+                .fluidInputs(Nitrogen.getFluid(1000))\n+                .fluidOutputs(RichNitrogenMix.getFluid(5000))\n+                .buildAndRegister();\n+\n         CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(120)\n                 .notConsumable(FeCrOCatalyst.getItemStack())\n                 .fluidInputs(Water.getFluid(1000))"
  },
  {
    "sha": "9d2455a497c78e20b8e5fddf8859afee720f2ca5",
    "filename": "src/main/java/gregicadditions/recipes/chain/ArcFurnaceOxidation.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/ArcFurnaceOxidation.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/ArcFurnaceOxidation.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/ArcFurnaceOxidation.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -0,0 +1,28 @@\n+package gregicadditions.recipes.chain;\n+\n+import gregtech.api.unification.OreDictUnifier;\n+\n+import static gregicadditions.GAMaterials.*;\n+import static gregtech.api.recipes.RecipeMaps.*;\n+import static gregtech.api.unification.material.Materials.*;\n+import static gregtech.api.unification.ore.OrePrefix.dust;\n+import static gregtech.api.unification.ore.OrePrefix.ingot;\n+\n+public class ArcFurnaceOxidation {\n+\n+    public static void init() {\n+        // 2Sb + 3O = Sb2O3\n+        ARC_FURNACE_RECIPES.recipeBuilder().EUt(1980).duration(200)\n+                .input(dust, Antimony, 2)\n+                .fluidInputs(Oxygen.getFluid(3000))\n+                .outputs(OreDictUnifier.get(dust, AntimonyTrioxide, 5))\n+                .buildAndRegister();\n+\n+        // NiZnFe4 + 8O = NiZnFe4O8\n+        ARC_FURNACE_RECIPES.recipeBuilder().EUt(400).duration(600)\n+                .input(dust, FerriteMixture, 6)\n+                .fluidInputs(Oxygen.getFluid(8000))\n+                .outputs(OreDictUnifier.get(ingot, NickelZincFerrite, 14))\n+                .buildAndRegister();\n+    }\n+}"
  },
  {
    "sha": "f5c61d98127eec318e60e68fa94acba46e2658e9",
    "filename": "src/main/java/gregicadditions/recipes/chain/BariumChain.java",
    "status": "modified",
    "additions": 39,
    "deletions": 14,
    "changes": 53,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/BariumChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/BariumChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/BariumChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -10,36 +10,61 @@\n \n public class BariumChain {\n     public static void init() {\n+\n+        // Ba + 2HCl -> BaCl2 + 2H\n+        CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(480)\n+                .input(dust, Barium)\n+                .fluidInputs(HydrochloricAcid.getFluid(2000))\n+                .outputs(BariumChloride.getItemStack(3))\n+                .fluidOutputs(Hydrogen.getFluid(2000))\n+                .buildAndRegister();\n+\n+        // BaCl2 + H2SO4 -> BaSO4 + HCl\n+        CHEMICAL_RECIPES.recipeBuilder().duration(50).EUt(480)\n+                .inputs(BariumChloride.getItemStack(3))\n+                .fluidInputs(SulfuricAcid.getFluid(1000))\n+                .outputs(OreDictUnifier.get(dust, Barite, 6))\n+                .fluidOutputs(HydrochloricAcid.getFluid(2000))\n+                .buildAndRegister();\n+\n+        // BaSO4 + 2C -> BaS + 2CO2\n         BLAST_RECIPES.recipeBuilder().duration(480).EUt(500).blastFurnaceTemp(1200)\n-                .input(dust, Barite)\n-                .input(dust, Carbon)\n+                .input(dust, Barite, 6)\n+                .input(dust, Carbon, 2)\n                 .outputs(BariumSulfide.getItemStack())\n-                .fluidOutputs(CarbonDioxide.getFluid(1000))\n+                .fluidOutputs(CarbonDioxide.getFluid(2000))\n                 .buildAndRegister();\n+\n+        // BaS + H2O + CO2 -> BaCO3 + H2S\n         CHEMICAL_RECIPES.recipeBuilder().duration(400).EUt(500)\n-                .inputs(BariumSulfide.getItemStack())\n+                .inputs(BariumSulfide.getItemStack(2))\n                 .fluidInputs(Water.getFluid(1000))\n                 .fluidInputs(CarbonDioxide.getFluid(1000))\n-                .outputs(BariumCarbonate.getItemStack())\n+                .outputs(BariumCarbonate.getItemStack(5))\n                 .fluidOutputs(HydrogenSulfide.getFluid(1000))\n                 .buildAndRegister();\n+\n+        // BaCO3 -> CO2 + BaO\n         CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(250)\n-                .inputs(BariumCarbonate.getItemStack())\n-                .outputs(BariumOxide.getItemStack())\n+                .inputs(BariumCarbonate.getItemStack(5))\n+                .outputs(BariumOxide.getItemStack(2))\n                 .notConsumable(new IntCircuitIngredient(0))\n                 .fluidOutputs(CarbonDioxide.getFluid(1000))\n                 .buildAndRegister();\n+\n+        // 4BaO + 2Al -> 3Ba + Al2BaO4\n         BLAST_RECIPES.recipeBuilder().duration(240).EUt(500).blastFurnaceTemp(700)\n-                .inputs(BariumOxide.getItemStack(2))\n+                .inputs(BariumOxide.getItemStack(8))\n                 .input(dustSmall, Aluminium, 8)\n-                .outputs(OreDictUnifier.get(ingot, Barium))\n-                .outputs(BariumAluminate.getItemStack(2))\n+                .outputs(OreDictUnifier.get(ingot, Barium, 3))\n+                .outputs(BariumAluminate.getItemStack(7))\n                 .buildAndRegister();\n+\n+        // 2Al2BaO4 -> BaO + Al2O3\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(500)\n-                .inputs(BariumAluminate.getItemStack(2))\n-                .outputs(BariumOxide.getItemStack())\n-                .outputs(Alumina.getItemStack(2))\n+                .inputs(BariumAluminate.getItemStack(14))\n+                .outputs(BariumOxide.getItemStack(2))\n+                .outputs(Alumina.getItemStack(5))\n                 .buildAndRegister();\n     }\n-\n }"
  },
  {
    "sha": "9dc6723ede38ae8fa04af64804c9671f51b84753",
    "filename": "src/main/java/gregicadditions/recipes/chain/BrineChain.java",
    "status": "modified",
    "additions": 210,
    "deletions": 174,
    "changes": 384,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/BrineChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/BrineChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/BrineChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -12,28 +12,32 @@\n import static gregtech.api.unification.ore.OrePrefix.*;\n import static gregtech.common.items.MetaItems.ELECTRIC_MOTOR_LUV;\n \n-\n public class BrineChain {\n     public static void init() {\n+\n+        // NH3 + C3H6 + 3O -> 3H2O + C3H3N\n         CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(2400)\n                 .notConsumable(dust, Platinum)\n                 .fluidInputs(Ammonia.getFluid(1000))\n                 .fluidInputs(Propene.getFluid(1000))\n-                .fluidOutputs(Water.getFluid(1000))\n+                .fluidInputs(Oxygen.getFluid(3000))\n+                .fluidOutputs(Water.getFluid(3000))\n                 .fluidOutputs(AcryloNitrile.getFluid(1000))\n                 .buildAndRegister();\n \n+        // S + NaCN -> NaSCN\n         CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(2700)\n                 .input(dust, Sulfur)\n                 .fluidInputs(SodiumCyanide.getFluid(1000))\n                 .fluidOutputs(SodiumThiocyanate.getFluid(1000))\n                 .buildAndRegister();\n \n+        // NO + C3H3N + NaSCN -> [C3H3N]n(NaSCN) assumes polymerized with Oxygen bond\n         CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(230).EUt(2300)\n                 .fluidInputs(NitricOxide.getFluid(1000))\n                 .fluidInputs(AcryloNitrile.getFluid(1000))\n                 .fluidInputs(SodiumThiocyanate.getFluid(1000))\n-                .fluidOutputs(PolyacrylonitrileSolution.getFluid(2000))\n+                .fluidOutputs(PolyacrylonitrileSolution.getFluid(1000))\n                 .buildAndRegister();\n \n         ASSEMBLER_RECIPES.recipeBuilder().duration(240).EUt(8400)\n@@ -42,9 +46,10 @@ public static void init() {\n                 .outputs(RAPIDLY_ROTATING_CRUCIBLE.getStackForm())\n                 .buildAndRegister();\n \n+        // [C3H3N]n -> NaSCN + (solidified)[C3H3N]n\n         BLAST_RECIPES.recipeBuilder().duration(180).EUt(10000).blastFurnaceTemp(600)\n                 .notConsumable(RAPIDLY_ROTATING_CRUCIBLE.getStackForm())\n-                .fluidInputs(PolyacrylonitrileSolution.getFluid(2000))\n+                .fluidInputs(PolyacrylonitrileSolution.getFluid(1000))\n                 .outputs(AcrylicFibers.getItemStack())\n                 .fluidOutputs(SodiumThiocyanate.getFluid(1000))\n                 .buildAndRegister();\n@@ -55,62 +60,52 @@ public static void init() {\n                 .outputs(ACRYLIC_YARN.getStackForm())\n                 .buildAndRegister();\n \n+        // CH2O2 + CH3OH -> H2O + C2H4O2\n         CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(500)\n                 .fluidInputs(FormicAcid.getFluid(1000))\n                 .fluidInputs(Methanol.getFluid(1000))\n                 .fluidOutputs(Water.getFluid(1000))\n                 .fluidOutputs(MethylFormate.getFluid(1000))\n                 .buildAndRegister();\n \n+        // C2H4O2 + 2NH3 + 2O -> 2CH3NO(H2O)\n         CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(650)\n                 .fluidInputs(MethylFormate.getFluid(1000))\n                 .fluidInputs(Ammonia.getFluid(1000))\n-                .fluidOutputs(WetFormamide.getFluid(2000))\n+                .fluidInputs(Oxygen.getFluid(2000))\n+                .fluidOutputs(WetFormamide.getFluid(1000))\n                 .buildAndRegister();\n \n+        // CH3NO(H2O) -> CH3NO + H2O\n         DISTILLATION_RECIPES.recipeBuilder().duration(230).EUt(750)\n-                .fluidInputs(WetFormamide.getFluid(2000))\n+                .fluidInputs(WetFormamide.getFluid(1000))\n                 .fluidOutputs(Water.getFluid(1000))\n                 .fluidOutputs(Formamide.getFluid(1000))\n                 .buildAndRegister();\n \n+        // 3NH4NO3 + 8SO2 + 7H2O + 2NH3 -> 4(NH3OH)2SO4\n         CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(240).EUt(4500)\n-                .fluidInputs(AmmoniaNitrate.getFluid(1000))\n-                .fluidInputs(SulfurDioxide.getFluid(1000))\n-                .fluidInputs(Ammonia.getFluid(1000))\n-                .fluidInputs(Water.getFluid(1000))\n-                .fluidOutputs(HydroxilamineDisulfate.getFluid(4000))\n+                .fluidInputs(AmmoniaNitrate.getFluid(3000))\n+                .fluidInputs(SulfurDioxide.getFluid(8000))\n+                .fluidInputs(Water.getFluid(7000))\n+                .fluidInputs(Ammonia.getFluid(2000))\n+                .fluidOutputs(HydroxylamineDisulfate.getFluid(4000))\n                 .buildAndRegister();\n \n+        // (NH3OH)2SO4 + 2NH3 -> 2H3NO + (NH4)2SO4\n         CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(1050)\n-                .fluidInputs(HydroxilamineDisulfate.getFluid(4000))\n-                .fluidInputs(Ammonia.getFluid(1000))\n-                .fluidOutputs(Hydroxilamine.getFluid(1000))\n-                .fluidOutputs(DilutedAmmonia.getFluid(4000))\n-                .outputs(PrecipitatedAmmoniumSulfate.getItemStack())\n-                .buildAndRegister();\n-\n-        MIXER_RECIPES.recipeBuilder().duration(100).EUt(125)\n-                .fluidInputs(Water.getFluid(1000))\n-                .inputs(PrecipitatedAmmoniumSulfate.getItemStack())\n+                .fluidInputs(HydroxylamineDisulfate.getFluid(1000))\n+                .fluidInputs(Ammonia.getFluid(2000))\n+                .fluidOutputs(Hydroxylamine.getFluid(2000))\n                 .fluidOutputs(AmmoniumSulfate.getFluid(1000))\n                 .buildAndRegister();\n \n-        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(250).EUt(125)\n-                .fluidInputs(AmmoniumSulfate.getFluid(1000))\n-                .outputs(PrecipitatedAmmoniumSulfate.getItemStack())\n-                .buildAndRegister();\n-\n-        DISTILLATION_RECIPES.recipeBuilder().duration(300).EUt(375)\n-                .fluidInputs(DilutedAmmonia.getFluid(2000))\n-                .fluidOutputs(Water.getFluid(1000))\n-                .fluidOutputs(Ammonia.getFluid(1000))\n-                .buildAndRegister();\n-\n+        // CH3NO + H3NO -> H3N2O(CH) + H2O\n         CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(3000)\n                 .fluidInputs(Formamide.getFluid(1000))\n-                .fluidInputs(Hydroxilamine.getFluid(1000))\n-                .fluidOutputs(Amidoxime.getFluid(2000))\n+                .fluidInputs(Hydroxylamine.getFluid(1000))\n+                .fluidOutputs(Amidoxime.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(1000))\n                 .buildAndRegister();\n \n         CHEMICAL_BATH_RECIPES.recipeBuilder().duration(180).EUt(6000)\n@@ -133,44 +128,44 @@ public static void init() {\n                 .fluidOutputs(PureUranylNitrateSolution.getFluid(100))\n                 .buildAndRegister();\n \n+        // ? -> UO2(NO3)2\n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(120).EUt(125)\n                 .fluidInputs(PureUranylNitrateSolution.getFluid(900))\n-                .outputs(UranylNitrate.getItemStack())\n+                .outputs(UranylNitrate.getItemStack(11))\n                 .buildAndRegister();\n \n+        // UO2(NO3)2 + H2O -> UO2 + 2HNO3(dil.)\n         BLAST_RECIPES.recipeBuilder().duration(400).EUt(500).blastFurnaceTemp(500)\n-                .inputs(UranylNitrate.getItemStack())\n-                .outputs(OreDictUnifier.get(dioxide, UraniumRadioactive.getMaterial()))\n-                .fluidOutputs(NitrogenDioxide.getFluid(1000))\n+                .inputs(UranylNitrate.getItemStack(11))\n+                .fluidInputs(Water.getFluid(1000))\n+                .outputs(OreDictUnifier.get(dioxide, UraniumRadioactive.getMaterial(), 3))\n+                .fluidOutputs(DiluteNitricAcid.getFluid(2000))\n+                .buildAndRegister();\n+\n+        DISTILLATION_RECIPES.recipeBuilder().duration(300).EUt(480)\n+                .fluidInputs(DiluteNitricAcid.getFluid(2000))\n+                .fluidOutputs(Water.getFluid(1000))\n+                .fluidOutputs(NitricAcid.getFluid(1000))\n                 .buildAndRegister();\n \n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(320).EUt(500)\n                 .fluidInputs(DebrominatedWater.getFluid(1000))\n-                .fluidOutputs(Brine.getFluid(85))\n+                .fluidOutputs(Brine.getFluid(100))\n                 .buildAndRegister();\n \n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(320).EUt(500)\n                 .fluidInputs(SaltWater.getFluid(1000))\n-                .fluidOutputs(Brine.getFluid(85))\n+                .fluidOutputs(Brine.getFluid(100))\n                 .buildAndRegister();\n \n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(320).EUt(500)\n                 .fluidInputs(SeaWater.getFluid(1000))\n-                .fluidOutputs(Brine.getFluid(85))\n+                .fluidOutputs(Brine.getFluid(100))\n                 .buildAndRegister();\n \n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(80).EUt(400)\n                 .fluidInputs(Brine.getFluid(1000))\n-                .fluidOutputs(ConcentratedBrine.getFluid(945))\n-                .buildAndRegister();\n-\n-        CHEMICAL_RECIPES.recipeBuilder()\n-                .fluidInputs(SeaWater.getFluid(1000))\n-                .fluidInputs(Chlorine.getFluid(100))\n-                .fluidInputs(SulfuricAcid.getFluid(100))\n-                .fluidOutputs(AcidicSaltWater.getFluid(1200))\n-                .EUt(480)\n-                .duration(200)\n+                .fluidOutputs(ConcentratedBrine.getFluid(800))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder()\n@@ -195,19 +190,19 @@ public static void init() {\n         VACUUM_RECIPES.recipeBuilder().duration(150).EUt(5000)\n                 .fluidInputs(ConcentratedBrine.getFluid(1000))\n                 .fluidOutputs(CalciumFreeBrine.getFluid(1000))\n-                .outputs(CalciumSalts.getItemStack(2))\n+                .outputs(CalciumSalts.getItemStack(13))\n                 .buildAndRegister();\n \n         VACUUM_RECIPES.recipeBuilder().duration(155).EUt(5000)\n                 .fluidInputs(CalciumFreeBrine.getFluid(1000))\n                 .fluidOutputs(SodiumFreeBrine.getFluid(1000))\n-                .outputs(SodiumSalts.getItemStack(2))\n+                .outputs(SodiumSalts.getItemStack(4))\n                 .buildAndRegister();\n \n         VACUUM_RECIPES.recipeBuilder().duration(160).EUt(5000)\n                 .fluidInputs(SodiumFreeBrine.getFluid(1000))\n                 .fluidOutputs(PotassiumFreeBrine.getFluid(1000))\n-                .outputs(PotassiumMagnesiumSalts.getItemStack(4))\n+                .outputs(PotassiumMagnesiumSalts.getItemStack(30))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(16000)\n@@ -217,11 +212,12 @@ public static void init() {\n                 .fluidOutputs(BoronFreeSolution.getFluid(1000))\n                 .buildAndRegister();\n \n+        // Na2CO3, CaO\n         MIXER_RECIPES.recipeBuilder().duration(160).EUt(5000)\n-                .input(dust, SodaAsh)\n-                .input(dust, Quicklime)\n+                .input(dust, SodaAsh ,6)\n+                .input(dust, Quicklime, 2)\n                 .fluidInputs(BoronFreeSolution.getFluid(1000))\n-                .outputs(CalciumMagnesiumSalts.getItemStack(2))\n+                .outputs(CalciumMagnesiumSalts.getItemStack(16))\n                 .fluidOutputs(SodiumLithiumSolution.getFluid(1000))\n                 .buildAndRegister();\n \n@@ -239,184 +235,204 @@ public static void init() {\n                 .fluidOutputs(LithiumChlorideSolution.getFluid(1000))\n                 .buildAndRegister();\n \n+        // Na + Al + 4H -> NaAlH4\n         CHEMICAL_RECIPES.recipeBuilder().duration(190).EUt(3000)\n                 .input(dust, Sodium)\n                 .input(dust, Aluminium)\n-                .fluidInputs(Hydrogen.getFluid(2000))\n-                .outputs(SodiumAluminiumHydride.getItemStack())\n+                .fluidInputs(Hydrogen.getFluid(4000))\n+                .outputs(SodiumAluminiumHydride.getItemStack(6))\n                 .buildAndRegister();\n \n+        // LiCl + NaAlH4 -> NaCl + LiAlH4\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(3000)\n-                .inputs(LithiumChloride.getItemStack())\n-                .inputs(SodiumAluminiumHydride.getItemStack())\n-                .outputs(OreDictUnifier.get(dust, Salt))\n-                .outputs(LithiumAluminiumHydride.getItemStack())\n+                .inputs(LithiumChloride.getItemStack(2))\n+                .inputs(SodiumAluminiumHydride.getItemStack(6))\n+                .outputs(OreDictUnifier.get(dust, Salt, 2))\n+                .outputs(LithiumAluminiumHydride.getItemStack(6))\n                 .buildAndRegister();\n \n+        // C6H10O5 + H2O -> C6H12O6\n         CHEMICAL_BATH_RECIPES.recipeBuilder().duration(3000).EUt(250)\n-                .inputs(Cellulose.getItemStack())\n-                .fluidInputs(HydrochloricAcid.getFluid(50))\n-                .outputs(Glucose.getItemStack())\n+                .inputs(Cellulose.getItemStack(21))\n+                .fluidInputs(Water.getFluid(1000))\n+                .outputs(Glucose.getItemStack(24))\n                 .buildAndRegister();\n \n+        // C12H22O11 + H2O -> C6H12O6 + C6H12O6\n+        // Leaving sugar as 2 input since it would be rough to make it 45\n         CHEMICAL_BATH_RECIPES.recipeBuilder().duration(320).EUt(500)\n                 .input(dust, Sugar, 2)\n-                .fluidInputs(DilutedHydrochloricAcid.getFluid(250))\n-                .outputs(Glucose.getItemStack())\n-                .outputs(Fructose.getItemStack())\n+                .fluidInputs(Water.getFluid(1000))\n+                .outputs(Glucose.getItemStack(24))\n+                .outputs(Fructose.getItemStack(24))\n                 .buildAndRegister();\n \n+        // C6H10O5 + bacteria -> C6H12O6\n         BIO_REACTOR_RECIPES.recipeBuilder().duration(150).EUt(50000)\n-                .inputs(Cellulose.getItemStack())\n+                .inputs(Cellulose.getItemStack(21))\n                 .inputs(EschericiaColi.getItemStack())\n-                .outputs(Glucose.getItemStack())\n+                .outputs(Glucose.getItemStack(24))\n                 .buildAndRegister();\n \n+        // Na + NH3 -> H + NaNH2\n         CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(800)\n                 .input(dust, Sodium)\n                 .fluidInputs(Ammonia.getFluid(1000))\n                 .fluidOutputs(Hydrogen.getFluid(1000))\n-                .outputs(SodiumAzanide.getItemStack())\n+                .outputs(SodiumAzanide.getItemStack(4))\n                 .buildAndRegister();\n \n+        // NH4NO3 -> N2O + 2H2O\n         CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(1150)\n-                .fluidInputs(AmmoniaNitrate.getFluid(3000))\n+                .fluidInputs(AmmoniaNitrate.getFluid(1000))\n                 .notConsumable(new IntCircuitIngredient(1))\n                 .fluidOutputs(NitrousOxide.getFluid(1000))\n                 .fluidOutputs(Water.getFluid(2000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(900)\n-                .inputs(SodiumAzanide.getItemStack(2))\n+        // 2NaNH2 + N2O -> NH3 + NaOH + NaN3\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(900)\n+                .inputs(SodiumAzanide.getItemStack(8))\n                 .fluidInputs(NitrousOxide.getFluid(1000))\n                 .fluidOutputs(Ammonia.getFluid(1000))\n+                .outputs(OreDictUnifier.get(dust, SodiumHydroxide, 3))\n+                .outputs(SodiumAzide.getItemStack(4))\n+                .buildAndRegister();\n+\n+        // NaOH + H2O -> NaOH(H2O)\n+        MIXER_RECIPES.recipeBuilder().duration(50).EUt(30)\n+                .input(dust, SodiumHydroxide, 3)\n+                .fluidInputs(Water.getFluid(1000))\n                 .fluidOutputs(SodiumHydroxideSolution.getFluid(1000))\n-                .outputs(SodiumAzide.getItemStack())\n                 .buildAndRegister();\n \n-        BLAST_RECIPES.recipeBuilder().duration(250).EUt(3000).blastFurnaceTemp(1200)\n+        // C6H12O6 + LiAlH4 + NaNH2 -> LiOH(H2O) + H + H2O + C6H13NO5 + Al(OH)3 TODO\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(3000)\n                 .inputs(Glucose.getItemStack())\n                 .inputs(LithiumAluminiumHydride.getItemStack())\n                 .inputs(SodiumAzanide.getItemStack())\n-                .fluidInputs(AceticAcid.getFluid(4000))\n+                .fluidOutputs(LithiumHydroxideSolution.getFluid(1000))\n+                .fluidOutputs(Hydrogen.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(1000))\n                 .outputs(Glucosamine.getItemStack())\n-                .outputs(AluminiumHydride.getItemStack())\n-                .fluidOutputs(AcetateSolution.getFluid(5000))\n-                .buildAndRegister();\n-\n-        ELECTROLYZER_RECIPES.recipeBuilder().duration(120).EUt(1500)\n-                .fluidInputs(AcetateSolution.getFluid(5000))\n-                .fluidOutputs(AceticAcid.getFluid(4000))\n-                .fluidOutputs(Nitrogen.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, Sodium))\n-                .outputs(OreDictUnifier.get(dust, Lithium))\n+                .outputs(AluminiumHydroxide.getItemStack())\n                 .buildAndRegister();\n \n+        // AlH3 + 3H2O -> Al(OH)3 + 6H\n         CHEMICAL_RECIPES.recipeBuilder().duration(130).EUt(750)\n-                .inputs(AluminiumHydride.getItemStack())\n+                .inputs(AluminiumHydride.getItemStack(4))\n                 .fluidInputs(Water.getFluid(3000))\n-                .outputs(AluminiumHydroxide.getItemStack())\n+                .outputs(AluminiumHydroxide.getItemStack(7))\n                 .fluidOutputs(Hydrogen.getFluid(6000))\n                 .buildAndRegister();\n \n+        // [C6H11NO4]n + bacteria -> C6H13NO5\n         BIO_REACTOR_RECIPES.recipeBuilder().duration(100).EUt(50000)\n                 .fluidInputs(Chitosan.getFluid(1000))\n                 .inputs(EschericiaColi.getItemStack())\n-                .outputs(Glucosamine.getItemStack())\n+                .outputs(Glucosamine.getItemStack(25))\n                 .buildAndRegister();\n \n         ASSEMBLER_RECIPES.recipeBuilder().duration(300).EUt(5500)\n-                .inputs(Glucosamine.getItemStack())\n+                .inputs(Glucosamine.getItemStack(25))\n                 .input(wireFine, Gold)\n                 .fluidInputs(Styrene.getFluid(144))\n                 .outputs(BORON_RETAINING_YARN.getStackForm())\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(270).EUt(3200)\n                 .inputs(BORON_SATURATED_YARN.getStackForm())\n-                .input(dust, SodiumHydroxide)\n+                .input(dust, SodiumHydroxide, 3)\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n                 .fluidOutputs(BoricAcid.getFluid(1000))\n                 .fluidOutputs(SodiumSulfateSolution.getFluid(1000))\n                 .chancedOutput(BORON_RETAINING_YARN.getStackForm(), 9000, 0)\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(500)\n-                .input(dust, SodiumHydroxide, 1)\n-                .fluidInputs(BoricAcid.getFluid(2000))\n-                .outputs(OreDictUnifier.get(dust, Borax, 11))\n-                .buildAndRegister();\n-\n+        // 2H3BO3 -> 3H2O + B2O3\n         BLAST_RECIPES.recipeBuilder().duration(340).EUt(1800).blastFurnaceTemp(750)\n                 .notConsumable(dust, Boron)\n                 .fluidInputs(BoricAcid.getFluid(2000))\n                 .fluidOutputs(Water.getFluid(3000))\n-                .outputs(BoronOxide.getItemStack())\n+                .outputs(BoronOxide.getItemStack(5))\n                 .buildAndRegister();\n \n+        // B2O3 + 6HF -> 3H2O + 2BF3\n         CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(1600)\n-                .inputs(BoronOxide.getItemStack())\n+                .inputs(BoronOxide.getItemStack(5))\n                 .fluidInputs(HydrofluoricAcid.getFluid(6000))\n                 .fluidOutputs(Water.getFluid(3000))\n                 .fluidOutputs(BoronFluoride.getFluid(2000))\n                 .buildAndRegister();\n \n+        // 4BF3 + 3LiAlH4 -> 2B2H6 + 3AlF4Li\n         CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(1300)\n                 .fluidInputs(BoronFluoride.getFluid(4000))\n-                .inputs(LithiumAluminiumHydride.getItemStack(3))\n+                .inputs(LithiumAluminiumHydride.getItemStack(18))\n                 .fluidOutputs(Diborane.getFluid(2000))\n-                .outputs(LithiumAluminiumFluoride.getItemStack(3))\n+                .outputs(LithiumAluminiumFluoride.getItemStack(18))\n                 .buildAndRegister();\n \n+        // AlF4Li -> AlF3 + LiF\n         BLAST_RECIPES.recipeBuilder().duration(250).EUt(1200).blastFurnaceTemp(3400)\n-                .inputs(LithiumAluminiumFluoride.getItemStack())\n-                .outputs(AluminiumTrifluoride.getItemStack())\n-                .outputs(OreDictUnifier.get(dust, LithiumFluoride))\n+                .inputs(LithiumAluminiumFluoride.getItemStack(6))\n+                .outputs(AluminiumTrifluoride.getItemStack(4))\n+                .outputs(OreDictUnifier.get(dust, LithiumFluoride, 2))\n                 .buildAndRegister();\n \n+        // 2AlF3 + 3H2O -> Al2O3 + 6HF\n         CHEMICAL_RECIPES.recipeBuilder().duration(340).EUt(1750)\n-                .inputs(AluminiumTrifluoride.getItemStack(2))\n+                .inputs(AluminiumTrifluoride.getItemStack(8))\n                 .fluidInputs(Water.getFluid(3000))\n-                .outputs(Alumina.getItemStack())\n+                .outputs(Alumina.getItemStack(5))\n                 .fluidOutputs(HydrofluoricAcid.getFluid(6000))\n                 .buildAndRegister();\n \n+        // B + B2H6 -> 3B + 6H\n         BLAST_RECIPES.recipeBuilder().duration(250).EUt(2000).blastFurnaceTemp(600)\n                 .input(dust, Boron)\n                 .fluidInputs(Diborane.getFluid(1000))\n                 .outputs(OreDictUnifier.get(dust, Boron, 3))\n                 .fluidOutputs(Hydrogen.getFluid(6000))\n                 .buildAndRegister();\n \n+        // Na + H -> NaH\n         CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(300)\n                 .input(dust, Sodium)\n                 .fluidInputs(Hydrogen.getFluid(1000))\n-                .outputs(SodiumHydride.getItemStack())\n+                .outputs(SodiumHydride.getItemStack(2))\n                 .buildAndRegister();\n \n+        // 2C + 4S -> 2CS2\n         BLAST_RECIPES.recipeBuilder().duration(220).EUt(500).blastFurnaceTemp(1000)\n                 .input(dust, Carbon, 2)\n                 .input(dust, Sulfur, 4)\n                 .outputs(OreDictUnifier.get(dustTiny, Ash))\n-                .fluidOutputs(CarbonSulfide.getFluid(4000))\n+                .fluidOutputs(CarbonSulfide.getFluid(2000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(2200)\n-                .fluidInputs(Chlorine.getFluid(1000))\n+        // 2H + 3CO2 + 2Cl + 2CH3NH2 + CS2 -> 2C3H6ClNS + 6O\n+        // TODO This recipe is not great, can maybe be changed\n+        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(300).EUt(2200)\n+                .fluidInputs(Hydrogen.getFluid(2000))\n+                .fluidInputs(CarbonDioxide.getFluid(3000))\n+                .fluidInputs(Chlorine.getFluid(2000))\n                 .fluidInputs(Methylamine.getFluid(2000))\n-                .fluidInputs(CarbonSulfide.getFluid(2000))\n-                .input(dust, SodiumHydroxide)\n-                .fluidOutputs(DimethylthiocarbamoilChloride.getFluid(5000))\n-                .outputs(OreDictUnifier.get(dust, Salt))\n+                .fluidInputs(CarbonSulfide.getFluid(1000))\n+                .fluidOutputs(DimethylthiocarbamoilChloride.getFluid(2000))\n+                .fluidOutputs(Oxygen.getFluid(6000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(3200)\n+        // C6H6O2 + C3H6ClNS + 2H -> C6H6OS + (CH3)2NCH + HCl TODO\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(3200)\n                 .notConsumable(dust, Palladium)\n                 .notConsumable(SodiumHydride.getItemStack())\n-                .fluidInputs(Resorcinol.getFluid(2000))\n+                .fluidInputs(Resorcinol.getFluid(1000))\n                 .fluidInputs(DimethylthiocarbamoilChloride.getFluid(1000))\n+                .fluidInputs(Hydrogen.getFluid(2000))\n                 .fluidOutputs(Mercaphenol.getFluid(1000))\n-                .fluidOutputs(Dimethylformamide.getFluid(2000))\n+                .fluidOutputs(Dimethylformamide.getFluid(1000))\n+                .fluidOutputs(HydrochloricAcid.getFluid(1000))\n                 .buildAndRegister();\n \n         CRACKING_RECIPES.recipeBuilder().duration(230).EUt(1200)\n@@ -436,60 +452,70 @@ public static void init() {\n                 .fluidOutputs(Ammonia.getFluid(100))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(700)\n+        // CH3OH + NH3 -> CH3OH(NH3)\n+        MIXER_RECIPES.recipeBuilder().duration(180).EUt(700)\n                 .notConsumable(dust, Nickel)\n                 .fluidInputs(Methanol.getFluid(1000))\n                 .fluidInputs(Ammonia.getFluid(1000))\n                 .fluidOutputs(AmineMixture.getFluid(2000))\n                 .buildAndRegister();\n \n         DISTILLATION_RECIPES.recipeBuilder().duration(240).EUt(650)\n-                .fluidInputs(AmineMixture.getFluid(1800))\n-                .fluidOutputs(Trimethylamine.getFluid(450))\n-                .fluidOutputs(Dimethylamine.getFluid(725))\n-                .fluidOutputs(Methylamine.getFluid(625))\n+                .fluidInputs(AmineMixture.getFluid(2000))\n+                .fluidOutputs(Trimethylamine.getFluid(500))\n+                .fluidOutputs(Dimethylamine.getFluid(800))\n+                .fluidOutputs(Methylamine.getFluid(680))\n                 .buildAndRegister();\n \n+        // MoO3 + 2NaOH -> Na2MoO4 + H2O\n         CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1500)\n-                .inputs(MolybdenumTrioxide.getItemStack())\n-                .input(dust, SodiumHydroxide, 2)\n-                .outputs(SodiumMolybdate.getItemStack())\n+                .inputs(MolybdenumTrioxide.getItemStack(4))\n+                .input(dust, SodiumHydroxide, 6)\n+                .outputs(SodiumMolybdate.getItemStack(7))\n                 .fluidOutputs(Water.getFluid(1000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(1900)\n-                .inputs(SodiumMolybdate.getItemStack(12))\n+        // 12Na2MoO4 + H3PO4 + 21HCl -> Mo12Na3O40P + 21NaCl + 12H2O\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(1900)\n+                .inputs(SodiumMolybdate.getItemStack(64))\n+                .inputs(SodiumMolybdate.getItemStack(20))\n                 .fluidInputs(PhosphoricAcid.getFluid(1000))\n                 .fluidInputs(HydrochloricAcid.getFluid(13000))\n-                .outputs(SodiumPhosphomolybdate.getItemStack(11))\n-                .fluidOutputs(SodiumChlorideSolution.getFluid(13000))\n+                .outputs(SodiumPhosphomolybdate.getItemStack(56))\n+                .outputs(OreDictUnifier.get(dust, Salt, 42))\n+                .fluidOutputs(Water.getFluid(12000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(1900)\n+        // 12Na2WO4 + H3PO4 + 21HCl -> Na3O40PW12 + 21NaCl + 12H2O\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(1900)\n                 .fluidInputs(SodiumTungstate.getFluid(12000))\n                 .fluidInputs(PhosphoricAcid.getFluid(1000))\n-                .fluidInputs(HydrochloricAcid.getFluid(13000))\n-                .outputs(SodiumPhosphotungstate.getItemStack(11))\n-                .fluidOutputs(SodiumChlorideSolution.getFluid(13000))\n+                .fluidInputs(HydrochloricAcid.getFluid(21000))\n+                .outputs(SodiumPhosphotungstate.getItemStack(56))\n+                .outputs(OreDictUnifier.get(dust, Salt, 42))\n+                .fluidOutputs(Water.getFluid(12000))\n                 .buildAndRegister();\n \n+        // 3C3H6 + 3H2O -> 3C3H8O\n         CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(500)\n                 .fluidInputs(Propene.getFluid(3000))\n                 .fluidInputs(Water.getFluid(3000))\n-                .fluidOutputs(IsopropylAlcohol.getFluid(6000))\n+                .fluidOutputs(IsopropylAlcohol.getFluid(3000))\n                 .notConsumable(SodiumPhosphomolybdate.getItemStack())\n                 .notConsumable(SodiumPhosphotungstate.getItemStack())\n                 .buildAndRegister();\n \n+        // Ir + 2PCl3 + C3H8O + C6H6OS -> ? + 6Cl\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(2400)\n                 .input(dust, Iridium)\n                 .fluidInputs(PhosphorusTrichloride.getFluid(2000))\n                 .fluidInputs(IsopropylAlcohol.getFluid(1000))\n                 .fluidInputs(Mercaphenol.getFluid(1000))\n                 .outputs(DehydrogenationCatalyst.getItemStack())\n-                .fluidOutputs(Chlorine.getFluid(500))\n+                .fluidOutputs(Chlorine.getFluid(6000))\n                 .buildAndRegister();\n \n+        // C4H8 + C8H18 -> C4H10 + C8H16\n         CHEMICAL_RECIPES.recipeBuilder().duration(190).EUt(1800)\n                 .notConsumable(DehydrogenationCatalyst.getItemStack())\n                 .fluidInputs(Butene.getFluid(1000))\n@@ -498,12 +524,14 @@ public static void init() {\n                 .fluidOutputs(Oct1ene.getFluid(1000))\n                 .buildAndRegister();\n \n+        // N(CH3)3 + Br + C8H18 + C8H16 -> C19H42BrN + H\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(2400)\n                 .fluidInputs(Trimethylamine.getFluid(1000))\n                 .fluidInputs(Bromine.getFluid(1000))\n                 .fluidInputs(Octane.getFluid(1000))\n                 .fluidInputs(Oct1ene.getFluid(1000))\n-                .fluidOutputs(CetaneTrimethylAmmoniumBromide.getFluid(4000))\n+                .fluidOutputs(CetaneTrimethylAmmoniumBromide.getFluid(1000))\n+                .fluidOutputs(Hydrogen.getFluid(1000))\n                 .buildAndRegister();\n \n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(3000)\n@@ -521,95 +549,103 @@ public static void init() {\n                 .fluidOutputs(Styrene.getFluid(2000))\n                 .buildAndRegister();\n \n+        // CaCO3, CaSO4(H2O)2\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(2500)\n-                .inputs(CalciumSalts.getItemStack(2))\n-                .outputs(OreDictUnifier.get(dust, Calcite))\n-                .outputs(OreDictUnifier.get(dust, Gypsum))\n+                .inputs(CalciumSalts.getItemStack(13))\n+                .outputs(OreDictUnifier.get(dust, Calcite, 5))\n+                .outputs(OreDictUnifier.get(dust, Gypsum, 8))\n                 .buildAndRegister();\n \n+        // NaCl, NaF\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(2500)\n-                .inputs(SodiumSalts.getItemStack())\n-                .outputs(OreDictUnifier.get(dust, Salt))\n+                .inputs(SodiumSalts.getItemStack(2))\n+                .outputs(OreDictUnifier.get(dust, Salt, 2))\n                 .chancedOutput(OreDictUnifier.get(dustTiny, SodiumFluoride), 400, 0)\n                 .buildAndRegister();\n \n-\n+        // KCl, MgSO4, K2SO4\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(2500)\n-                .inputs(PotassiumMagnesiumSalts.getItemStack(4))\n-                .outputs(OreDictUnifier.get(dust, RockSalt))\n-                .outputs(MagnesiumSulfate.getItemStack())\n-                .outputs(PotassiumSulfate.getItemStack())\n+                .inputs(PotassiumMagnesiumSalts.getItemStack(15))\n+                .outputs(OreDictUnifier.get(dust, RockSalt, 2))\n+                .outputs(MagnesiumSulfate.getItemStack(6))\n+                .outputs(PotassiumSulfate.getItemStack(7))\n                 .chancedOutput(OreDictUnifier.get(dustTiny, PotassiumFluoride), 400, 0)\n                 .buildAndRegister();\n \n+        // CaCO3, CO2, MgO\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(300).EUt(2500)\n-                .inputs(CalciumMagnesiumSalts.getItemStack(2))\n-                .outputs(OreDictUnifier.get(dust, Calcite))\n+                .inputs(CalciumMagnesiumSalts.getItemStack(8))\n+                .outputs(OreDictUnifier.get(dust, Calcite, 5))\n                 .chancedOutput(StrontiumCarbonate.getItemStack(), 40, 0)\n                 .fluidOutputs(CarbonDioxide.getFluid(1000))\n-                .outputs(MagnesiumHydroxide.getItemStack())\n+                .outputs(OreDictUnifier.get(dust, Magnesia, 2))\n                 .buildAndRegister();\n \n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(250).EUt(300)\n                 .fluidInputs(SodiumChlorideSolution.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, Salt))\n+                .outputs(OreDictUnifier.get(dust, Salt, 2))\n                 .buildAndRegister();\n \n-\n+        // MgSO4 -> Mg + S + 4O\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(180).EUt(120)\n-                .inputs(MagnesiumSulfate.getItemStack())\n+                .inputs(MagnesiumSulfate.getItemStack(6))\n                 .outputs(OreDictUnifier.get(dust, Magnesium))\n                 .outputs(OreDictUnifier.get(dust, Sulfur))\n                 .fluidOutputs(Oxygen.getFluid(4000))\n                 .buildAndRegister();\n \n+        // MgO + 2HCl -> 2H2O + MgCl2\n         CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(250)\n-                .inputs(MagnesiumHydroxide.getItemStack())\n+                .input(dust, Magnesia, 2)\n                 .fluidInputs(HydrochloricAcid.getFluid(2000))\n                 .fluidOutputs(Water.getFluid(2000))\n-                .outputs(OreDictUnifier.get(dust, MagnesiumChloride))\n+                .outputs(OreDictUnifier.get(dust, MagnesiumChloride, 3))\n                 .buildAndRegister();\n \n+        // SrSO4 + Na2CO3 + 2C -> SrCO3 + 2CO2 + Na2S\n         BLAST_RECIPES.recipeBuilder().duration(720).EUt(600).blastFurnaceTemp(1200)\n-                .inputs(StrontiumSulfate.getItemStack())\n-                .input(dust, SodaAsh)\n-                .input(dust, Carbon)\n-                .fluidInputs(Water.getFluid(1000))\n-                .outputs(StrontiumCarbonate.getItemStack())\n-                .fluidOutputs(CarbonDioxide.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, SodiumSulfide))\n+                .inputs(StrontiumSulfate.getItemStack(6))\n+                .input(dust, SodaAsh, 6)\n+                .input(dust, Carbon, 2)\n+                .outputs(StrontiumCarbonate.getItemStack(5))\n+                .fluidOutputs(CarbonDioxide.getFluid(2000))\n+                .outputs(OreDictUnifier.get(dust, SodiumSulfide, 3))\n                 .buildAndRegister();\n \n+        // SrCO3 -> SrO + CO2\n         CHEMICAL_RECIPES.recipeBuilder().duration(100).EUt(250)\n-                .inputs(StrontiumCarbonate.getItemStack())\n-                .outputs(StrontiumOxide.getItemStack())\n+                .inputs(StrontiumCarbonate.getItemStack(5))\n+                .outputs(StrontiumOxide.getItemStack(2))\n                 .fluidOutputs(CarbonDioxide.getFluid(1000))\n                 .buildAndRegister();\n \n+        // SrO -> Sr + O\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(300).EUt(260)\n-                .inputs(StrontiumOxide.getItemStack())\n+                .inputs(StrontiumOxide.getItemStack(2))\n                 .outputs(OreDictUnifier.get(dust, Strontium))\n                 .fluidOutputs(Oxygen.getFluid(1000))\n                 .buildAndRegister();\n \n         VACUUM_RECIPES.recipeBuilder().duration(280).EUt(500)\n-                .fluidInputs(Brine.getFluid(1000))\n-                .fluidOutputs(ChilledBrine.getFluid(550))\n+                .fluidInputs(Brine.getFluid(6400))\n+                .fluidOutputs(ChilledBrine.getFluid(3000))\n                 .buildAndRegister();\n \n+        // CaCO3, CaSO4(H2O)2, NaCl, KCl\n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(320).EUt(500)\n                 .fluidInputs(ChilledBrine.getFluid(2000))\n                 .fluidOutputs(MagnesiumContainingBrine.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, Calcite))\n-                .outputs(OreDictUnifier.get(dust, Gypsum))\n-                .outputs(OreDictUnifier.get(dust, Salt))\n-                .outputs(OreDictUnifier.get(dust, RockSalt))\n+                .outputs(OreDictUnifier.get(dust, Calcite, 5))\n+                .outputs(OreDictUnifier.get(dust, Gypsum, 8))\n+                .outputs(OreDictUnifier.get(dust, Salt, 2))\n+                .outputs(OreDictUnifier.get(dust, RockSalt, 2))\n                 .buildAndRegister();\n \n+        // MgCl2, MgSO4\n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(340).EUt(500)\n                 .fluidInputs(MagnesiumContainingBrine.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, MagnesiumChloride))\n-                .outputs(MagnesiumSulfate.getItemStack())\n+                .outputs(OreDictUnifier.get(dust, MagnesiumChloride, 3))\n+                .outputs(MagnesiumSulfate.getItemStack(6))\n                 .fluidOutputs(LithiumChlorideSolution.getFluid(200))\n                 .buildAndRegister();\n     }"
  },
  {
    "sha": "e6baf4653889b2e5b4c48f29d7e3f88a0960b345",
    "filename": "src/main/java/gregicadditions/recipes/chain/ChromiumChain.java",
    "status": "modified",
    "additions": 47,
    "deletions": 34,
    "changes": 81,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/ChromiumChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/ChromiumChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/ChromiumChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -4,91 +4,103 @@\n \n import static gregicadditions.GAMaterials.*;\n import static gregicadditions.recipes.GARecipeMaps.CHEMICAL_DEHYDRATOR_RECIPES;\n+import static gregicadditions.recipes.GARecipeMaps.LARGE_CHEMICAL_RECIPES;\n import static gregtech.api.recipes.RecipeMaps.*;\n import static gregtech.api.unification.material.Materials.*;\n import static gregtech.api.unification.ore.OrePrefix.dust;\n import static gregtech.api.unification.ore.OrePrefix.dustTiny;\n \n public class ChromiumChain {\n     public static void init() {\n+\n+        // Na2CO3 + H2O -> Na2CO3(H2O)\n         MIXER_RECIPES.recipeBuilder().duration(60).EUt(30)\n-                .input(dust, SodaAsh)\n+                .input(dust, SodaAsh, 6)\n                 .fluidInputs(Water.getFluid(1000))\n                 .fluidOutputs(SodiumCarbonateSolution.getFluid(1000))\n                 .buildAndRegister();\n \n+        // CaCO3 + 2NaCl -> Na2CO3 + CaCl2\n         BLAST_RECIPES.recipeBuilder().duration(120).EUt(120).blastFurnaceTemp(500)\n-                .input(dust, Calcite)\n-                .input(dust, Salt)\n-                .fluidInputs(Ammonia.getFluid(5))\n-                .outputs(OreDictUnifier.get(dust, SodaAsh))\n-                .outputs(OreDictUnifier.get(dust, CalciumChloride))\n+                .input(dust, Calcite, 5)\n+                .input(dust, Salt, 4)\n+                .outputs(OreDictUnifier.get(dust, SodaAsh, 6))\n+                .outputs(OreDictUnifier.get(dust, CalciumChloride, 3))\n                 .buildAndRegister();\n \n+        // 2Cr2FeO4 + 4Na2CO3(H2O) + 7O -> Fe2O3 + 4CO2 + 4Na2CrO4(H2O)\n         CHEMICAL_RECIPES.recipeBuilder().duration(120).EUt(125)\n-                .input(dust, Chromite)\n-                .fluidInputs(SodiumCarbonateSolution.getFluid(1000))\n-                .fluidInputs(Oxygen.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, BandedIron))\n-                .fluidOutputs(CarbonDioxide.getFluid(1000))\n-                .fluidOutputs(SodiumChromateSolution.getFluid(1000))\n+                .input(dust, Chromite, 14)\n+                .fluidInputs(SodiumCarbonateSolution.getFluid(4000))\n+                .fluidInputs(Oxygen.getFluid(7000))\n+                .outputs(OreDictUnifier.get(dust, BandedIron, 5))\n+                .fluidOutputs(CarbonDioxide.getFluid(4000))\n+                .fluidOutputs(SodiumChromateSolution.getFluid(4000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(125)\n-                .fluidInputs(SodiumChromateSolution.getFluid(1000))\n+        // 2Na2CrO4(H2O) + H2SO4 -> Na2Cr2O7 + Na2SO4(H2O) + 2H2O\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(125)\n+                .fluidInputs(SodiumChromateSolution.getFluid(2000))\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n                 .fluidOutputs(SodiumDichromateSolution.getFluid(1000))\n                 .fluidOutputs(SodiumSulfateSolution.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .buildAndRegister();\n \n+        // 2C + Na2Cr2O7 -> CO + Na2CO3 + Cr2O3\n         BLAST_RECIPES.recipeBuilder().duration(200).EUt(125).blastFurnaceTemp(1200)\n-                .input(dust, Carbon)\n+                .input(dust, Carbon, 2)\n                 .fluidInputs(SodiumDichromateSolution.getFluid(1000))\n                 .fluidOutputs(CarbonMonoxde.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, SodaAsh))\n-                .outputs(ChromiumOxide.getItemStack())\n+                .outputs(OreDictUnifier.get(dust, SodaAsh, 6))\n+                .outputs(OreDictUnifier.get(dust, ChromiumTrioxide, 5))\n                 .buildAndRegister();\n \n+        // Cr2O3 + 2Al -> 2Cr + Al2O3\n         BLAST_RECIPES.recipeBuilder().duration(200).EUt(125).blastFurnaceTemp(1200)\n-                .inputs(ChromiumOxide.getItemStack())\n-                .input(dust, Aluminium)\n-                .outputs(OreDictUnifier.get(dust, Chrome))\n-                .outputs(Alumina.getItemStack())\n+                .input(dust, ChromiumTrioxide, 5)\n+                .input(dust, Aluminium, 2)\n+                .outputs(OreDictUnifier.get(dust, Chrome, 2))\n+                .outputs(Alumina.getItemStack(5))\n                 .buildAndRegister();\n \n+        // Na2SO4(H2O) -> Na2SO4\n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(120).EUt(125)\n                 .fluidInputs(SodiumSulfateSolution.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, SodiumSulfate))\n+                .outputs(OreDictUnifier.get(dust, SodiumSulfate, 7))\n                 .buildAndRegister();\n \n-\n+        // Al2O3Cr + (HNO3 + HCl) -> Al2O3CrCl? + (H2NO3)\n         CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(2000)\n-                .input(dust, Ruby)\n-                .fluidInputs(AquaRegia.getFluid(1000))\n+                .input(dust, Ruby, 6)\n+                .fluidInputs(AquaRegia.getFluid(2000))\n                 .fluidOutputs(RubySlurry.getFluid(1000))\n                 .fluidOutputs(DiluteNitricAcid.getFluid(1000))\n                 .buildAndRegister();\n \n+        // Al2O3CrCl? -> 2Al + Cr + Cl + 3O + ? + ? + ?\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(320).EUt(2000)\n-                .fluidInputs(RubySlurry.getFluid(2000))\n+                .fluidInputs(RubySlurry.getFluid(1000))\n                 .fluidOutputs(Chlorine.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, Aluminium))\n+                .outputs(OreDictUnifier.get(dust, Aluminium, 2))\n                 .outputs(OreDictUnifier.get(dust, Chrome))\n                 .chancedOutput(OreDictUnifier.get(dustTiny, Titanium), 2000, 0)\n                 .chancedOutput(OreDictUnifier.get(dustTiny, Iron), 2000, 0)\n                 .chancedOutput(OreDictUnifier.get(dustTiny, Vanadium), 2000, 0)\n                 .fluidOutputs(Oxygen.getFluid(3000))\n                 .buildAndRegister();\n \n+        // Al2O3 + (HNO3 + HCl) -> Al2O3Cl? + (H2NO3)\n         CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(2000)\n-                .input(dust, Sapphire)\n-                .fluidInputs(AquaRegia.getFluid(1000))\n+                .input(dust, Sapphire, 5)\n+                .fluidInputs(AquaRegia.getFluid(2000))\n                 .fluidOutputs(SapphireSlurry.getFluid(1000))\n                 .fluidOutputs(DiluteNitricAcid.getFluid(1000))\n                 .buildAndRegister();\n \n+        // Al2O3Cl? -> 2Al + + Cl + 3O + ? + ? + ?\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(320).EUt(2000)\n-                .fluidInputs(SapphireSlurry.getFluid(2000))\n+                .fluidInputs(SapphireSlurry.getFluid(1000))\n                 .fluidOutputs(Chlorine.getFluid(1000))\n                 .outputs(OreDictUnifier.get(dust, Aluminium, 2))\n                 .chancedOutput(OreDictUnifier.get(dustTiny, Titanium), 2000, 0)\n@@ -97,15 +109,17 @@ public static void init() {\n                 .fluidOutputs(Oxygen.getFluid(3000))\n                 .buildAndRegister();\n \n+        // Al2O3 + (HNO3 + HCl) -> Al2O3Cl? + (H2NO3)\n         CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(2000)\n-                .input(dust, GreenSapphire)\n-                .fluidInputs(AquaRegia.getFluid(1000))\n+                .input(dust, GreenSapphire, 5)\n+                .fluidInputs(AquaRegia.getFluid(2000))\n                 .fluidOutputs(GreenSapphireSlurry.getFluid(1000))\n                 .fluidOutputs(DiluteNitricAcid.getFluid(1000))\n                 .buildAndRegister();\n \n+        // Al2O3Cl? -> 2Al + + Cl + 3O + ? + ? + ?\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(320).EUt(2000)\n-                .fluidInputs(GreenSapphireSlurry.getFluid(2000))\n+                .fluidInputs(GreenSapphireSlurry.getFluid(1000))\n                 .fluidOutputs(Chlorine.getFluid(1000))\n                 .outputs(OreDictUnifier.get(dust, Aluminium, 2))\n                 .chancedOutput(OreDictUnifier.get(dustTiny, Beryllium), 2000, 0)\n@@ -114,6 +128,5 @@ public static void init() {\n                 .chancedOutput(OreDictUnifier.get(dustTiny, Vanadium), 2000, 0)\n                 .fluidOutputs(Oxygen.getFluid(3000))\n                 .buildAndRegister();\n-\n     }\n }"
  },
  {
    "sha": "034f19b61f2632d816d1eed327de2f0bd72cc311",
    "filename": "src/main/java/gregicadditions/recipes/chain/CosmicComponents.java",
    "status": "modified",
    "additions": 40,
    "deletions": 22,
    "changes": 62,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/CosmicComponents.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/CosmicComponents.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/CosmicComponents.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -137,46 +137,62 @@ public static void init() {\n                 .fluidOutputs(Succinaldehyde.getFluid(1000))\n                 .outputs(OreDictUnifier.get(dust, Lithium, 4))\n                 .fluidOutputs(Water.getFluid(2000))\n-                .outputs(AluminiumHydride.getItemStack(4))\n+                .outputs(OreDictUnifier.get(dust, Aluminium, 4))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(840000)\n-                .input(dust, PotassiumFluoride, 4)\n-                .fluidInputs(Hydrogen.getFluid(6000))\n-                .fluidInputs(NitrationMixture.getFluid(1000))\n+                .input(dust, PotassiumFluoride, 2)\n+                .fluidInputs(Hydrogen.getFluid(1000))\n                 .fluidInputs(Dichlorobenzene.getFluid(1000))\n+                .fluidInputs(Nitrogen.getFluid(1000))\n                 .notConsumable(AluminiumChloride.getItemStack())\n-                .outputs(OreDictUnifier.get(dust, RockSalt, 4))\n+                .outputs(OreDictUnifier.get(dust, RockSalt, 2))\n                 .fluidOutputs(Difluoroaniline.getFluid(1000))\n-                .fluidOutputs(DilutedSulfuricAcid.getFluid(1500))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(780000)\n                 .fluidInputs(Difluoroaniline.getFluid(1000))\n                 .fluidInputs(Succinaldehyde.getFluid(1000))\n                 .notConsumable(dust, PhosphorousPentoxide)\n                 .fluidOutputs(NDifluorophenylpyrrole.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .buildAndRegister();\n \n         CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(350).EUt(3400000)\n+                .fluidInputs(Water.getFluid(2000))\n                 .fluidInputs(Silvertetrafluoroborate.getFluid(2000))\n                 .fluidInputs(Phenylsodium.getFluid(8000))\n                 .fluidInputs(TetraethylammoniumBromide.getFluid(2000))\n-                .inputs(TitaniumCyclopentanyl.getItemStack(3))\n-                .fluidInputs(NDifluorophenylpyrrole.getFluid(6000))\n-                .outputs(SilverFluoride.getItemStack(2))\n+                .inputs(SilverPerchlorate.getItemStack())\n+                .inputs(TitaniumCyclopentanyl.getItemStack(4))\n+                .fluidInputs(NDifluorophenylpyrrole.getFluid(8000))\n+                .outputs(OreDictUnifier.get(dust, SilverChloride, 2))\n                 .outputs(SodiumBromide.getItemStack(2))\n                 .fluidOutputs(SodiumChlorideSolution.getFluid(6000))\n-                .fluidOutputs(Fluorine.getFluid(6000))\n-                .fluidOutputs(PhotopolymerSolution.getFluid(5000))\n+                .fluidOutputs(PhotopolymerSolution.getFluid(6000))\n                 .buildAndRegister();\n \n-        BLAST_RECIPES.recipeBuilder().duration(350).EUt(8750).blastFurnaceTemp(3200)\n-                .inputs(SilverFluoride.getItemStack())\n-                .input(dust, SodiumHydroxide, 2)\n-                .outputs(OreDictUnifier.get(dust, SodiumFluoride, 2))\n-                .outputs(OreDictUnifier.get(dust, SilverOxide))\n-                .fluidOutputs(Hydrogen.getFluid(2000))\n+        BLAST_RECIPES.recipeBuilder().duration(210).EUt(4000).blastFurnaceTemp(1100)\n+                .inputs(SodiumHypochlorite.getItemStack(3))\n+                .outputs(OreDictUnifier.get(dust, Salt, 2))\n+                .outputs(SodiumChlorate.getItemStack())\n+                .buildAndRegister();\n+\n+        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(8750)\n+                .inputs(SodiumChlorate.getItemStack())\n+                .fluidInputs(HydrogenPeroxide.getFluid(1000))\n+                .outputs(SodiumPerchlorate.getItemStack())\n+                .fluidOutputs(Water.getFluid(1000))\n+                .buildAndRegister();\n+\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(8750)\n+                .input(dust, SilverOxide)\n+                .inputs(SodiumPerchlorate.getItemStack())\n+                .fluidInputs(HydrochloricAcid.getFluid(2000))\n+                .fluidInputs(NitricAcid.getFluid(2000))\n+                .outputs(SilverPerchlorate.getItemStack())\n+                .outputs(OreDictUnifier.get(dust, Salt))\n+                .fluidOutputs(DiluteNitricAcid.getFluid(4000))\n                 .buildAndRegister();\n \n         CHEMICAL_BATH_RECIPES.recipeBuilder().duration(240).EUt(695000)\n@@ -216,17 +232,19 @@ public static void init() {\n \n         BLAST_RECIPES.recipeBuilder().duration(240).EUt(9750).blastFurnaceTemp(2500)\n                 .inputs(GermaniumSulfide.getItemStack())\n-                .fluidInputs(Oxygen.getFluid(4000))\n+                .fluidInputs(Oxygen.getFluid(6000))\n                 .outputs(GermaniumOxide.getItemStack())\n                 .fluidOutputs(SulfurDioxide.getFluid(2000))\n                 .buildAndRegister();\n \n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(380).EUt(500000)\n                 .fluidInputs(BismuthNitrateSoluton.getFluid(4000))\n-                .inputs(GermaniumOxide.getItemStack(3))\n+                .inputs(GermaniumOxide.getItemStack(3   ))\n                 .notConsumable(LOW_FREQUENCY_LASER.getStackForm())\n-                .outputs(BismuthGermanate.getItemStack(3))\n-                .fluidOutputs(NitrogenDioxide.getFluid(4000))\n+                .outputs(BismuthGermanate.getItemStack(1))\n+                .outputs(OreDictUnifier.get(dust, Potash, 18))\n+                .fluidOutputs(NitrogenDioxide.getFluid(12000))\n+                .fluidOutputs(Water.getFluid(4000))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(400).EUt(8192)\n@@ -256,7 +274,7 @@ public static void init() {\n                 .outputs(CesiumIodide.getItemStack())\n                 .buildAndRegister();\n \n-        BLAST_RECIPES.recipeBuilder().duration(260).EUt(845000)\n+        BLAST_RECIPES.recipeBuilder().duration(260).EUt(845000).blastFurnaceTemp(2853)\n                 .inputs(CesiumIodide.getItemStack(5))\n                 .input(dustSmall, Thulium, 2)\n                 .input(dustSmall, Thallium, 2)"
  },
  {
    "sha": "36a619f1876088f08085acccd6bb8dd7481bc849",
    "filename": "src/main/java/gregicadditions/recipes/chain/Dyes.java",
    "status": "modified",
    "additions": 161,
    "deletions": 96,
    "changes": 257,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/Dyes.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/Dyes.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/Dyes.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -16,56 +16,70 @@\n \n public class Dyes {\n     public static void init(){\n+\n+        /*\n+         * Unknown compounds key:\n+         * - ApatiteAcidicLeach: Ca4P3O102Cl TREAT AS 1\n+         * - FluoroapatiteAcidicLeach: Ca4P3O10F TREAT AS 1\n+         */\n+\n+        // Ca5(PO4)3Cl + H2SO4 -> CaS(H2O)2O4 + Ca4P3O102Cl\n         CHEMICAL_BATH_RECIPES.recipeBuilder().duration(260).EUt(500)\n-                .input(dust,Apatite)\n+                .input(dust, Apatite, 9) // TODO verify this amount\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust,Gypsum))\n+                .outputs(OreDictUnifier.get(dust, Gypsum, 8))\n                 .outputs(ApatiteAcidicLeach.getItemStack())\n                 .buildAndRegister();\n \n+        // Na2CO3 + Ca6(PO4)3ClO + SiO2 + H2O -> ? + ??\n         MIXER_RECIPES.recipeBuilder().duration(260).EUt(500)\n-                .input(dust,SodaAsh)\n+                .input(dust, SodaAsh, 6)\n                 .inputs(ApatiteAcidicLeach.getItemStack())\n-                .notConsumable(dust,Bentonite)\n-                .input(dust,SiliconDioxide)\n+                .notConsumable(dust, Bentonite)\n+                .input(dust, SiliconDioxide, 3)\n                 .fluidInputs(Water.getFluid(1000))\n                 .fluidOutputs(PhosphorousArsenicSolution.getFluid(3000))\n                 .outputs(ApatiteSolidResidue.getItemStack())\n                 .buildAndRegister();\n \n+        // 5HCl + ?? -> SiCl4 + NaCl + 0.2FeCl3\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(320).EUt(500)\n                 .fluidInputs(HydrochloricAcid.getFluid(5000))\n                 .inputs(ApatiteSolidResidue.getItemStack())\n-                .outputs(SiliconChloride.getItemStack())\n-                .outputs(OreDictUnifier.get(dust, Salt))\n+                .outputs(SiliconChloride.getItemStack(5))\n+                .outputs(OreDictUnifier.get(dust, Salt, 2))\n                 .fluidOutputs(IronChloride.getFluid(200))\n                 .buildAndRegister();\n \n+        // Ca5(PO4)3F + H2SO4 -> CaS(H2O)2O4 + Ca4P3O10F\n         CHEMICAL_BATH_RECIPES.recipeBuilder().duration(260).EUt(500)\n-                .input(dust,FluoroApatite)\n+                .input(dust, FluoroApatite, 9)\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust,Gypsum))\n+                .outputs(OreDictUnifier.get(dust, Gypsum, 8))\n                 .outputs(FluoroapatiteAcidicLeach.getItemStack())\n                 .buildAndRegister();\n \n+        // Na2CO3 + Ca4P3O10F + SiO2 + H2O -> ? + ??\n         MIXER_RECIPES.recipeBuilder().duration(260).EUt(500)\n-                .input(dust,SodaAsh)\n+                .input(dust, SodaAsh, 6)\n                 .inputs(FluoroapatiteAcidicLeach.getItemStack())\n-                .notConsumable(dust,Bentonite)\n-                .input(dust,SiliconDioxide)\n+                .notConsumable(dust, Bentonite)\n+                .input(dust, SiliconDioxide, 3)\n                 .fluidInputs(Water.getFluid(1000))\n                 .fluidOutputs(PhosphorousArsenicSolution.getFluid(3000))\n                 .outputs(FluoroapatiteSolidResidue.getItemStack())\n                 .buildAndRegister();\n \n+        // 2HCl + ?? -> H2SiF6 + NaCl + 0.2FeCl3\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(320).EUt(500)\n                 .fluidInputs(HydrochloricAcid.getFluid(2000))\n                 .inputs(FluoroapatiteSolidResidue.getItemStack())\n                 .fluidOutputs(FluorosilicicAcid.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, Salt))\n+                .outputs(OreDictUnifier.get(dust, Salt, 2))\n                 .fluidOutputs(IronChloride.getFluid(200))\n                 .buildAndRegister();\n \n+        // 10? + 4Na2S -> TODO\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(220).EUt(500)\n                 .fluidInputs(PhosphorousArsenicSolution.getFluid(10000))\n                 .input(dust, SodiumSulfide,4)\n@@ -74,158 +88,193 @@ public static void init(){\n                 .fluidOutputs(PhosphoricAcid.getFluid(10000))\n                 .buildAndRegister();\n \n+        // 2Na3AsO4 + 2H2SO4 -> As2O3 + 2Na2SO4(H2O) + H2O + Na2O + 4O\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(1100)\n-                .inputs(SodiumArsenate.getItemStack(2))\n-                .inputs(SodiumIodide.getItemStack())\n-                .fluidInputs(SulfuricAcid.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, ArsenicTrioxide))\n-                .outputs(OreDictUnifier.get(dust, Iodine))\n-                .fluidOutputs(SodiumSulfateSolution.getFluid(1000))\n+                .inputs(SodiumArsenate.getItemStack(16))\n+                .fluidInputs(SulfuricAcid.getFluid(2000))\n+                .outputs(OreDictUnifier.get(dust, ArsenicTrioxide, 5))\n+                .outputs(SodiumOxide.getItemStack(3))\n+                .fluidOutputs(SodiumSulfateSolution.getFluid(2000))\n                 .fluidOutputs(Water.getFluid(1000))\n+                .fluidOutputs(Oxygen.getFluid(4000))\n                 .buildAndRegister();\n \n+        // Na2O -> 2Na + O\n+        ELECTROLYZER_RECIPES.recipeBuilder().duration(240).EUt(30)\n+                .inputs(SodiumOxide.getItemStack(3))\n+                .outputs(OreDictUnifier.get(dust, Sodium, 2))\n+                .fluidOutputs(Oxygen.getFluid(1000))\n+                .buildAndRegister();\n+\n+        // Cd + S -> CdS\n         ALLOY_SMELTER_RECIPES.recipeBuilder().duration(240).EUt(300)\n-                .input(dust,Cadmium)\n-                .input(dust,Sulfur)\n+                .input(dust, Cadmium)\n+                .input(dust, Sulfur)\n                 .outputs(CadmiumSulfide.getItemStack(2))\n                 .buildAndRegister();\n \n+        // CdS -> Cd + S\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(320).EUt(500)\n                 .inputs(CadmiumSulfide.getItemStack(2))\n                 .outputs(OreDictUnifier.get(dust, Sulfur))\n                 .outputs(OreDictUnifier.get(dust, Cadmium))\n                 .buildAndRegister();\n \n         MIXER_RECIPES.recipeBuilder().duration(320).EUt(32)\n-                .input(dust,BrownLimonite,2)\n-                .input(dustTiny,SiliconDioxide)\n-                .input(dustTiny,Pyrolusite)\n+                .input(dust, BrownLimonite,2)\n+                .input(dustTiny, SiliconDioxide)\n+                .input(dustTiny, Pyrolusite)\n                 .outputs(RawSienna.getItemStack(2))\n                 .buildAndRegister();\n \n         MIXER_RECIPES.recipeBuilder().duration(320).EUt(32)\n-                .input(dust,YellowLimonite,2)\n-                .input(dustTiny,SiliconDioxide)\n-                .input(dustTiny,Pyrolusite)\n+                .input(dust, YellowLimonite,2)\n+                .input(dustTiny, SiliconDioxide)\n+                .input(dustTiny, Pyrolusite)\n                 .outputs(RawSienna.getItemStack(2))\n                 .buildAndRegister();\n \n         MIXER_RECIPES.recipeBuilder().duration(320).EUt(32)\n-                .input(dust,BandedIron,2)\n-                .input(dustTiny,SiliconDioxide)\n-                .input(dustTiny,Pyrolusite)\n+                .input(dust, BandedIron,2)\n+                .input(dustTiny, SiliconDioxide)\n+                .input(dustTiny, Pyrolusite)\n                 .outputs(RawSienna.getItemStack(2))\n                 .buildAndRegister();\n \n         ModHandler.addSmeltingRecipe(RawSienna.getItemStack(), BurnedSienna.getItemStack());\n \n+        // Hg + 2HNO3 + O -> H2O + Hg(NO3)2\n         CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(500)\n                 .fluidInputs(Mercury.getFluid(1000))\n                 .fluidInputs(NitricAcid.getFluid(2000))\n-                .fluidInputs(Water.getFluid(1000))\n-                .fluidOutputs(DiluteNitricAcid.getFluid(2000))\n-                .fluidOutputs(MercuryNitrate.getFluid(2000))\n+                .fluidInputs(Oxygen.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(1000))\n+                .fluidOutputs(MercuryNitrate.getFluid(1000))\n                 .buildAndRegister();\n \n+        // Hg(NO3)2 + 2HCl -> HgCl2 + 2HNO3\n         CHEMICAL_RECIPES.recipeBuilder().duration(190).EUt(500)\n-                .fluidInputs(MercuryNitrate.getFluid(2000))\n-                .fluidInputs(HydrochloricAcid.getFluid(1000))\n-                .outputs(MercuryChloride.getItemStack())\n-                .fluidOutputs(NitrogenDioxide.getFluid(1000))\n-                .fluidOutputs(Water.getFluid(1000))\n+                .fluidInputs(MercuryNitrate.getFluid(1000))\n+                .fluidInputs(HydrochloricAcid.getFluid(2000))\n+                .outputs(MercuryChloride.getItemStack(3))\n+                .fluidOutputs(NitricAcid.getFluid(2000))\n                 .buildAndRegister();\n \n+        // HgCl2 + 2I + 2K -> HgI2 + 2KCl\n         BLAST_RECIPES.recipeBuilder().duration(240).EUt(720).blastFurnaceTemp(700)\n-                .inputs(MercuryChloride.getItemStack())\n-                .input(dust,Iodine)\n-                .fluidInputs(PotassiumHydroxide.getFluid(1000))\n-                .outputs(MercuryIodide.getItemStack(2))\n-                .outputs(OreDictUnifier.get(dust, RockSalt))\n+                .inputs(MercuryChloride.getItemStack(3))\n+                .input(dust, Iodine, 2)\n+                .input(dust, Potassium, 2)\n+                .outputs(MercuryIodide.getItemStack(3))\n+                .outputs(OreDictUnifier.get(dust, RockSalt, 4))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(220).EUt(640)\n+        // NH4VO3 + ? + 8H -> NH4NO3 + BiVO4(H2O) + 2H2O TODO\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(220).EUt(640)\n                 .inputs(AmmoniumVanadate.getItemStack())\n                 .fluidInputs(BismuthNitrateSoluton.getFluid(1000))\n+                .fluidInputs(Hydrogen.getFluid(8000))\n                 .fluidOutputs(AmmoniaNitrate.getFluid(1000))\n                 .fluidOutputs(BismuthVanadateSolution.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .buildAndRegister();\n \n+        // BiVO4(H2O) -> BiVO4\n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(190).EUt(600)\n                 .fluidInputs(BismuthVanadateSolution.getFluid(1000))\n-                .outputs(BismuthVanadate.getItemStack())\n+                .outputs(BismuthVanadate.getItemStack(6))\n                 .buildAndRegister();\n \n+        // ? + H2O + As2O3 + Na2CO3 -> 2AsCuHO3 TODO\n         MIXER_RECIPES.recipeBuilder().duration(220).EUt(125)\n                 .fluidInputs(CopperSulfateSolution.getFluid(1000))\n                 .fluidInputs(Water.getFluid(1000))\n                 .input(dust, ArsenicTrioxide)\n                 .input(dust, SodaAsh)\n-                .outputs(CopperArsenite.getItemStack(3))\n+                .outputs(CopperArsenite.getItemStack(2))\n                 .buildAndRegister();\n \n-        ModHandler.addSmeltingRecipe(CopperArsenite.getItemStack(),ScheelesGreen.getItemStack());\n+        ModHandler.addSmeltingRecipe(CopperArsenite.getItemStack(), ScheelesGreen.getItemStack());\n \n+        // 4ZnO + CoO -> Zn4CoO5\n         BLAST_RECIPES.recipeBuilder().duration(240).EUt(125).blastFurnaceTemp(500)\n-                .input(dust, Zincite,4)\n-                .input(dust, CobaltOxide)\n-                .outputs(CobaltZincOxide.getItemStack(5))\n+                .input(dust, Zincite,8)\n+                .input(dust, CobaltOxide, 2)\n+                .outputs(CobaltZincOxide.getItemStack(10))\n                 .buildAndRegister();\n \n+        // 2CoO + Al2O3 -> Al2Co2O5\n         BLAST_RECIPES.recipeBuilder().duration(240).EUt(125).blastFurnaceTemp(500)\n-                .input(dust, CobaltOxide)\n-                .inputs(Alumina.getItemStack())\n-                .outputs(CobaltAluminate.getItemStack())\n+                .input(dust, CobaltOxide, 4)\n+                .inputs(Alumina.getItemStack(5))\n+                .outputs(CobaltAluminate.getItemStack(9))\n                 .buildAndRegister();\n \n+        // 12HCN + 2Fe + 8KOH + C -> 2K4Fe(CN)6(H2O)3 + 4H2O + CO //TODO Change to Ferrocyanide\n         CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(640)\n-                .fluidInputs(HydrogenCyanide.getFluid(6000))\n-                .fluidInputs(IronChloride.getFluid(1000))\n-                .fluidInputs(PotassiumHydroxide.getFluid(4000))\n-                .outputs(PotassiumFerrocyanate.getItemStack())\n+                .input(dust, Iron, 2)\n+                .input(dust, Carbon)\n+                .fluidInputs(HydrogenCyanide.getFluid(12000))\n+                .fluidInputs(PotassiumHydroxide.getFluid(8000))\n+                .outputs(PotassiumFerrocyanate.getItemStack(40))\n+                .fluidOutputs(Water.getFluid(4000))\n+                .fluidOutputs(CarbonMonoxde.getFluid(1000))\n                 .buildAndRegister();\n \n+        // 3K4Fe(CN)6(H2O)3 + 4FeCl3 -> Fe7(CN)18 + 12KCl + 9H2O TODO\n         CHEMICAL_BATH_RECIPES.recipeBuilder().duration(300).EUt(720)\n                 .inputs(PotassiumFerrocyanate.getItemStack(3))\n                 .fluidInputs(IronChloride.getFluid(4000))\n                 .outputs(PrussianBlue.getItemStack(3))\n                 .outputs(OreDictUnifier.get(dust, RockSalt, 12))\n                 .buildAndRegister();\n \n+        // 20TiO2 + Sb2O3 + NiO -> NiO·Sb2O3·20TiO2\n         BLAST_RECIPES.recipeBuilder().duration(240).EUt(125).blastFurnaceTemp(600)\n-                .input(dust, Rutile, 18)\n-                .input(dust, AntimonyTrioxide)\n-                .input(dust, Garnierite)\n-                .outputs(TitaniumYellow.getItemStack(20))\n+                .input(dust, Rutile, 60)\n+                .input(dust, AntimonyTrioxide, 5)\n+                .input(dust, Garnierite, 2)\n+                .outputs(TitaniumYellow.getItemStack(67))\n                 .buildAndRegister();\n \n+        // 2MnO2 + Zn -> ZnO + Mn2O3\n         BLAST_RECIPES.recipeBuilder().duration(340).EUt(500).blastFurnaceTemp(600)\n-                .input(dust, Pyrolusite)\n+                .input(dust, Pyrolusite, 4)\n                 .input(dust, Zinc)\n-                .outputs(OreDictUnifier.get(dust, Zincite))\n-                .outputs(ManganeseIIIOxide.getItemStack())\n+                .outputs(OreDictUnifier.get(dust, Zincite, 2))\n+                .outputs(ManganeseIIIOxide.getItemStack(5))\n                 .buildAndRegister();\n \n+        // TODO change to AmmoniumManganesePhosphate\n+        // Mn2O3 + 2NH3 + 4H3PO4 + 6C -> 2NH4MnPO4 + 5H2O + 6CO\n         CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(500)\n-                .inputs(ManganeseIIIOxide.getItemStack())\n-                .fluidInputs(Ammonia.getFluid(1000))\n-                .fluidInputs(PhosphoricAcid.getFluid(2000))\n-                .outputs(AmmoniaManganesePhosphate.getItemStack())\n+                .inputs(ManganeseIIIOxide.getItemStack(5))\n+                .input(dust, Carbon, 6)\n+                .fluidInputs(Ammonia.getFluid(2000))\n+                .fluidInputs(PhosphoricAcid.getFluid(4000))\n+                .outputs(AmmoniumManganesePhosphate.getItemStack(22))\n+                .fluidOutputs(Water.getFluid(5000))\n+                .fluidOutputs(CarbonMonoxde.getFluid(6000))\n                 .buildAndRegister();\n \n+        // Cu2CH2O5 + 2BaCO3 + 4SiO2 -> 2BaCuSi2O6 + 3CO2 + H2O(lost)\n         BLAST_RECIPES.recipeBuilder().duration(270).EUt(500).blastFurnaceTemp(1000)\n-                .input(dust, Malachite)\n-                .inputs(BariumCarbonate.getItemStack(2))\n-                .input(dust, SiliconDioxide,8)\n-                .outputs(HanPurple.getItemStack(4))\n+                .input(dust, Malachite, 10)\n+                .inputs(BariumCarbonate.getItemStack(10))\n+                .input(dust, SiliconDioxide,12)\n+                .outputs(HanPurple.getItemStack(20))\n                 .fluidOutputs(CarbonDioxide.getFluid(3000))\n                 .buildAndRegister();\n \n+        // 2Pb(NO3)2 + K2Cr2O7 -> 2PbCrO4 // TODO Loses 3N, K, O\n         MIXER_RECIPES.recipeBuilder().duration(280).EUt(500)\n                 .input(dust, LeadNitrate)\n                 .input(dust, Potassiumdichromate)\n                 .outputs(ChromeYellow.getItemStack(2))\n                 .buildAndRegister();\n \n+        // 2PbCrO4(KNO4) + H2O -> KOH + HNO3 + Pb2Cr2O5 // TODO\n+        // is really Pb2CrO5, but nowhere for the chrome to go\n         CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(500)\n                 .inputs(ChromeYellow.getItemStack(2))\n                 .fluidInputs(Water.getFluid(1000))\n@@ -234,49 +283,59 @@ public static void init(){\n                 .outputs(ChromeOrange.getItemStack())\n                 .buildAndRegister();\n \n+        // C7H8 + [H2SO4 + HNO3] -> C7H7(NO2) + (H2SO4)2(H2O)\n         CHEMICAL_RECIPES.recipeBuilder().duration(340).EUt(1350)\n                 .fluidInputs(Toluene.getFluid(1000))\n-                .fluidInputs(NitrationMixture.getFluid(1000))\n+                .fluidInputs(NitrationMixture.getFluid(2000))\n+                .fluidInputs(SulfuricAcid.getFluid(1000))\n                 .fluidOutputs(Nitrotoluene.getFluid(1000))\n-                .fluidOutputs(DilutedSulfuricAcid.getFluid(1000))\n+                .fluidOutputs(DilutedSulfuricAcid.getFluid(3000))\n                 .buildAndRegister();\n \n+        // TODO Name is Diaminostilbenedisulfonic Acid\n+        // 2C7H7(NO2) + 2H2SO4 + 4NaCl -> C14H14N2O6S2 + 4HClO + 2Na2O\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(340).EUt(1240)\n-                .notConsumable(dust, Iron)\n+                .notConsumable(dust, Zinc)\n+                .input(dust, Salt, 8)\n                 .fluidInputs(Nitrotoluene.getFluid(2000))\n                 .fluidInputs(SulfuricAcid.getFluid(2000))\n-                .inputs(SodiumHypochlorite.getItemStack())\n-                .outputs(OreDictUnifier.get(dust, Sodium))\n-                .outputs(DiaminostibenedisulfonicAcid.getItemStack(4))\n+                .outputs(DiaminostibenedisulfonicAcid.getItemStack(38))\n+                .outputs(SodiumOxide.getItemStack(6))\n+                .fluidOutputs(HypochlorousAcid.getFluid(4000))\n                 .buildAndRegister();\n \n+        // C7H7(NO2) + 2C6H5NH2 + HCl -> C30H23N5     TODO Need C11, H5, N2\n         CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(1400)\n                 .fluidInputs(NitroBenzene.getFluid(1000))\n                 .fluidInputs(Aniline.getFluid(2000))\n                 .fluidInputs(HydrochloricAcid.getFluid(1000))\n                 .notConsumable(dust, Copper)\n-                .outputs(Nigrosin.getItemStack(4))\n+                .outputs(Nigrosin.getItemStack(58))\n                 .buildAndRegister();\n \n+        // NaOH + H2SO4 + C6H5NH2 -> 2H2O + C6H6NNaO3S\n         CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1800)\n-                .input(dust, SodiumHydroxide)\n+                .input(dust, SodiumHydroxide, 3)\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n                 .fluidInputs(Aniline.getFluid(1000))\n-                .fluidOutputs(Water.getFluid(1000))\n-                .outputs(SodiumSulfanilate.getItemStack(2))\n+                .fluidOutputs(Water.getFluid(2000))\n+                .outputs(SodiumSulfanilate.getItemStack(18))\n                 .buildAndRegister();\n \n+        // TODO Change Naphtaleneamine to Naphthylamine\n+        // NaOH + H2SO4 + C10H8 + NH3 -> C10H9N + NaSO4 + 4H\n         CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(1400)\n-                .input(dust, SodiumHydroxide)\n+                .input(dust, SodiumHydroxide, 3)\n                 .notConsumable(ZincChloride.getItemStack())\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n                 .fluidInputs(Naphtalene.getFluid(1000))\n                 .fluidInputs(Ammonia.getFluid(1000))\n                 .fluidOutputs(Naphtaleneamine.getFluid(1000))\n+                .fluidOutputs(Hydrogen.getFluid(4000))\n                 .outputs(OreDictUnifier.get(dust, SodiumSulfate, 2))\n-                .fluidOutputs(Naphtaleneamine.getFluid(2000))\n                 .buildAndRegister();\n \n+        // C6H6NNaO3S + C10H9N + HCl + NaNO2 -> NaCl + C26H19N6NaO3S // TODO\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(270).EUt(1800)\n                 .inputs(SodiumSulfanilate.getItemStack())\n                 .fluidInputs(Naphtaleneamine.getFluid(1000))\n@@ -286,29 +345,35 @@ public static void init(){\n                 .outputs(DirectBrown.getItemStack(2))\n                 .buildAndRegister();\n \n+        // TODO Change to Aminoterephthalic Acid\n+        // 2NaOH + C4H6O4 + C2H5OH + C6H5NH2 + H2SO4 -> Na2SO4 + 3H2O + C8H7NO4 + C4H7O\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(1600)\n-                .input(dust, SodiumHydroxide)\n-                .inputs(SuccinicAcid.getItemStack())\n+                .input(dust, SodiumHydroxide, 6)\n+                .inputs(SuccinicAcid.getItemStack(14))\n                 .fluidInputs(Ethanol.getFluid(1000))\n                 .fluidInputs(Aniline.getFluid(1000))\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, SodiumSulfate, 2))\n-                .fluidOutputs(Water.getFluid(1000))\n-                .outputs(AminoterephtalicAcid.getItemStack(2))\n+                .outputs(OreDictUnifier.get(dust, SodiumSulfate, 7))\n+                .fluidOutputs(Water.getFluid(3000))\n+                .fluidOutputs(Butanol.getFluid(1000))\n+                .outputs(AminoterephtalicAcid.getItemStack(20))\n                 .buildAndRegister();\n \n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(220).EUt(1200)\n-                .inputs(AminoterephtalicAcid.getItemStack())\n-                .outputs(Quinacridone.getItemStack())\n+                .inputs(AminoterephtalicAcid.getItemStack(20))\n+                .outputs(Quinacridone.getItemStack(10))\n                 .buildAndRegister();\n \n+        // C3H6O + C6H5NH2 + CO2 -> C10H11NO2 + H2O\n         CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(1350)\n                 .fluidInputs(Acetone.getFluid(2000))\n                 .fluidInputs(Aniline.getFluid(1000))\n-                .fluidInputs(CarbonSulfide.getFluid(10))\n+                .fluidInputs(CarbonDioxide.getFluid(1000))\n                 .fluidOutputs(Acetoacetanilide.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(1000))\n                 .buildAndRegister();\n \n+        // C10H11NO2 + C12H10Cl2N2 + HCl + NaNO2 -> 2NaCl + C36H34Cl2N6O4\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(270).EUt(1800)\n                 .fluidInputs(Acetoacetanilide.getFluid(1000))\n                 .fluidInputs(Dichlorobenzidine.getFluid(1000))\n@@ -369,7 +434,7 @@ public static void init(){\n                 .inputs(Aminoanthraquinone.getItemStack())\n                 .fluidInputs(PotassiumHydroxide.getFluid(1000))\n                 .notConsumable(dust,RockSalt)\n-                .outputs(IndathroneBlue.getItemStack())\n+                .outputs(IndanthroneBlue.getItemStack())\n                 .buildAndRegister();\n \n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(1340)\n@@ -381,7 +446,7 @@ public static void init(){\n                 .fluidInputs(Hydrogen.getFluid(2000))\n                 .fluidOutputs(DilutedSulfuricAcid.getFluid(1500))\n                 .fluidOutputs(Water.getFluid(2500))\n-                .outputs(Mauvine.getItemStack(2))\n+                .outputs(Mauveine.getItemStack(2))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(520).EUt(1340)\n@@ -467,8 +532,8 @@ public static void init(){\n                 {BurnedSienna.getItemStack(),MercuryIodide.getItemStack(),OreDictUnifier.get(dust,Cinnabar),Quinacridone.getItemStack()},\n                 {CadmiumSulfide.getItemStack(),BismuthVanadate.getItemStack(),TitaniumYellow.getItemStack(),ChromeYellow.getItemStack(),DiarylideYellow.getItemStack()},\n                 {OreDictUnifier.get(dust,Malachite),ScheelesGreen.getItemStack(),CobaltZincOxide.getItemStack(),AlizarineCyanineGreen.getItemStack()},\n-                {CobaltAluminate.getItemStack(),PrussianBlue.getItemStack(),IndathroneBlue.getItemStack(),Indigo.getItemStack()},\n-                {AmmoniaManganesePhosphate.getItemStack(),HanPurple.getItemStack(),Mauvine.getItemStack()},\n+                {CobaltAluminate.getItemStack(),PrussianBlue.getItemStack(),IndanthroneBlue.getItemStack(),Indigo.getItemStack()},\n+                {AmmoniumManganesePhosphate.getItemStack(),HanPurple.getItemStack(),Mauveine.getItemStack()},\n                 {ChromeOrange.getItemStack(),Diketopyrrolopyrrole.getItemStack()},\n                 {CyanIndigoDye.getItemStack()},{Erythrosine.getItemStack()}};\n         MarkerMaterial[] colors = {MarkerMaterials.Color.White,MarkerMaterials.Color.Black,MarkerMaterials.Color.Brown,MarkerMaterials.Color.Red,MarkerMaterials.Color.Yellow,"
  },
  {
    "sha": "22f0b536685ad75eadc48f1d24eab40198c34970",
    "filename": "src/main/java/gregicadditions/recipes/chain/FullereneChain.java",
    "status": "modified",
    "additions": 178,
    "deletions": 117,
    "changes": 295,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/FullereneChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/FullereneChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/FullereneChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -1,5 +1,6 @@\n package gregicadditions.recipes.chain;\n \n+import gregicadditions.GAValues;\n import gregtech.api.recipes.ingredients.IntCircuitIngredient;\n import gregtech.api.unification.OreDictUnifier;\n import gregtech.api.unification.material.MarkerMaterials;\n@@ -13,51 +14,63 @@\n \n public class FullereneChain {\n     public static void init() {\n+        // 2 NaOCN + 2 C10H8 = 2 Na + 2 C10H7CN + H2O2\n         LARGE_CHEMICAL_RECIPES.recipeBuilder()\n-                .fluidInputs(Bromine.getFluid(1000))\n-                .fluidInputs(Naphtalene.getFluid(1000))\n-                .fluidInputs(SodiumCyanide.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, Sodium))\n-                .outputs(Cyanonaphtalene.getItemStack(2))\n+                .fluidInputs(Naphtalene.getFluid(2000))\n+                .fluidInputs(SodiumCyanide.getFluid(2000))\n+                .fluidOutputs(HydrogenPeroxide.getFluid(1000))\n+                .outputs(OreDictUnifier.get(dust, Sodium, 2))\n+                .outputs(Cyanonaphtalene.getItemStack(38))\n                 .EUt(2000000)\n                 .duration(20)\n                 .buildAndRegister();\n+        // C10H7CN + 2H2O + CO = C11H8O + NH3 + CO2\n         CHEMICAL_RECIPES.recipeBuilder()\n-                .inputs(Cyanonaphtalene.getItemStack())\n-                .fluidInputs(Water.getFluid(1000))\n-                .fluidInputs(HydrochloricAcid.getFluid(1000))\n+                .inputs(Cyanonaphtalene.getItemStack(19))\n                 .notConsumable(TinChloride.getItemStack())\n-                .fluidOutputs(Naphthaldehyde.getFluid(3000))\n+                .fluidInputs(Water.getFluid(2000))\n+                .fluidInputs(CarbonMonoxde.getFluid(1000))\n+                .fluidOutputs(Naphthaldehyde.getFluid(1000))\n+                .fluidOutputs(Ammonia.getFluid(1000))\n                 .EUt(2000000)\n                 .duration(20)\n                 .buildAndRegister();\n+        // NH4Cl = HCl + NH3\n+        ELECTROLYZER_RECIPES.recipeBuilder()\n+                .fluidInputs(AmmoniumChloride.getFluid(1000))\n+                .fluidOutputs(HydrochloricAcid.getFluid(1000))\n+                .fluidOutputs(Ammonia.getFluid(1000))\n+                .duration(400)\n+                .EUt(120)\n+                .buildAndRegister();\n+        // C11H8O + C8H10 + CaO = C19H14 + 2H2O + Ca\n         CHEMICAL_PLANT_RECIPES.recipeBuilder()\n                 .fluidInputs(Naphthaldehyde.getFluid(1000))\n-                .input(dust, SodiumHydroxide)\n                 .fluidInputs(EthylBenzene.getFluid(1000))\n-                .fluidInputs(EthyleneOxide.getFluid(1000))\n-                .fluidInputs(HydrobromicAcid.getFluid(1000))\n+                .input(dust, Calcite, 2)\n                 .notConsumable(dust, Iodine)\n                 .notConsumable(Triphenylphosphine.getItemStack())\n-                .outputs(Methylbenzophenanthrene.getItemStack(5))\n+                .fluidOutputs(Water.getFluid(2000))\n+                .outputs(Methylbenzophenanthrene.getItemStack(33))\n+                .outputs(OreDictUnifier.get(dust, Calcium, 1))\n                 .EUt(2000000)\n                 .duration(100)\n                 .buildAndRegister();\n-        CHEMICAL_PLANT_RECIPES.recipeBuilder()\n-                .inputs(PotassiumCyanide.getItemStack())\n-                .inputs(Methylbenzophenanthrene.getItemStack())\n-                .inputs(Bromosuccinimide.getItemStack())\n-                .outputs(Benzophenanthrenylacetonitrile.getItemStack(3))\n+        // 3C19H14 = 3C18H12 + C3H6\n+        CHEMICAL_RECIPES.recipeBuilder()\n+                .inputs(Methylbenzophenanthrene.getItemStack(33))\n+                .outputs(Benzophenanthrenylacetonitrile.getItemStack(30))\n+                .fluidOutputs(Propene.getFluid(1000))\n                 .EUt(2000000)\n                 .duration(200)\n                 .buildAndRegister();\n-        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n-                .inputs(Benzophenanthrenylacetonitrile.getItemStack())\n-                .fluidInputs(PotassiumHydroxide.getFluid(1000))\n+        // 10 C18H12 + 60 O -> 3 C60 + 60 H2O\n+        CHEMICAL_RECIPES.recipeBuilder()\n+                .inputs(Benzophenanthrenylacetonitrile.getItemStack(300))\n                 .notConsumable(TiAlChloride.getItemStack())\n-                .fluidInputs(ThionylChloride.getFluid(1000))\n-                .fluidInputs(Water.getFluid(1000))\n-                .outputs(UnfoldedFullerene.getItemStack(5))\n+                .fluidInputs(Oxygen.getFluid(60000))\n+                .outputs(UnfoldedFullerene.getItemStack(3))\n+                .fluidOutputs(Water.getFluid(60000))\n                 .EUt(2000000)\n                 .duration(250)\n                 .buildAndRegister();\n@@ -68,63 +81,62 @@ public static void init() {\n                 .EUt(2000000)\n                 .duration(200)\n                 .buildAndRegister();\n-        CHEMICAL_RECIPES.recipeBuilder()\n-                .fluidInputs(Chlorine.getFluid(1000))\n-                .input(dust, Phosphorus)\n-                .fluidOutputs(PhosphorusChloride.getFluid(2000))\n-                .EUt(480)\n-                .duration(300)\n-                .buildAndRegister();\n+        // 6Na + PCl3 + 3C6H5Cl = 6NaCl + C18H15P\n         LARGE_CHEMICAL_RECIPES.recipeBuilder()\n-                .input(dust, Sodium)\n-                .fluidInputs(PhosphorusChloride.getFluid(1000))\n-                .fluidInputs(Chlorobenzene.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, Salt))\n-                .outputs(Triphenylphosphine.getItemStack(2))\n+                .input(dust, Sodium, 6)\n+                .fluidInputs(PhosphorusTrichloride.getFluid(1000))\n+                .fluidInputs(Chlorobenzene.getFluid(3000))\n+                .outputs(OreDictUnifier.get(dust, Salt, 12))\n+                .outputs(Triphenylphosphine.getItemStack(34))\n                 .EUt(2000000)\n                 .duration(250)\n                 .buildAndRegister();\n         BIO_REACTOR_RECIPES.recipeBuilder()\n                 .inputs(EschericiaColi.getItemStack())\n                 .input(dust, Sugar)\n                 .EUt(125000)\n-                .outputs(SuccinicAcid.getItemStack())\n+                .outputs(SuccinicAcid.getItemStack(14))\n                 .duration(500)\n                 .buildAndRegister();\n+        // C4H6O4 + NH3 = C4H5NO2 + 2H2O\n         BLAST_RECIPES.recipeBuilder()\n-                .inputs(SuccinicAcid.getItemStack())\n+                .inputs(SuccinicAcid.getItemStack(14))\n                 .fluidInputs(Ammonia.getFluid(1000))\n-                .fluidOutputs(Water.getFluid(1000))\n-                .outputs(Succinimide.getItemStack())\n+                .outputs(Succinimide.getItemStack(10))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .EUt(2000000)\n                 .duration(100)\n                 .blastFurnaceTemp(10000)\n                 .buildAndRegister();\n+        // C4H5NO2 + 2Br = C4H4BrNO2 + HBr\n         CHEMICAL_RECIPES.recipeBuilder()\n-                .inputs(Succinimide.getItemStack())\n-                .input(dust, SodiumHydroxide)\n-                .fluidInputs(Bromine.getFluid(1000))\n-                .outputs(Bromosuccinimide.getItemStack(3))\n+                .inputs(Succinimide.getItemStack(14))\n+                .fluidInputs(Bromine.getFluid(2000))\n+                .outputs(Bromosuccinimide.getItemStack(10))\n+                .fluidOutputs(HydrobromicAcid.getFluid(1000))\n                 .EUt(2000000)\n                 .duration(200)\n                 .buildAndRegister();\n+        // SO3 + S + 2Cl = SO2 + SOCl2\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(SulfurTrioxide.getFluid(1000))\n                 .input(dust, Sulfur)\n-                .fluidInputs(Chlorine.getFluid(1000))\n+                .fluidInputs(Chlorine.getFluid(2000))\n                 .fluidOutputs(SulfurDioxide.getFluid(1000))\n                 .fluidOutputs(ThionylChloride.getFluid(2000))\n                 .EUt(2000000)\n                 .duration(400)\n                 .buildAndRegister();\n+        //  Ti + Al + Cl = TiAlCl (treat as chem reactor)\n         MIXER_RECIPES.recipeBuilder()\n                 .input(dust, Titanium)\n                 .input(dust, Aluminium)\n                 .fluidInputs(Chlorine.getFluid(1000))\n                 .EUt(2000000)\n                 .duration(50)\n-                .outputs(TiAlChloride.getItemStack(3))\n+                .outputs(TiAlChloride.getItemStack())\n                 .buildAndRegister();\n+        // HCN + KOH = KCN + H2O\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(HydrogenCyanide.getFluid(1000))\n                 .fluidInputs(PotassiumHydroxide.getFluid(1000))\n@@ -134,26 +146,28 @@ public static void init() {\n                 .EUt(7680)\n                 .duration(1000)\n                 .buildAndRegister();\n-        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n+        // KCl + H2O = KOH + HCl\n+        CHEMICAL_RECIPES.recipeBuilder()\n                 .input(dust, RockSalt, 2)\n-                .fluidInputs(Water.getFluid(2000))\n-                .fluidOutputs(PotassiumHydroxide.getFluid(2000))\n-                .fluidOutputs(Chlorine.getFluid(1000))\n-                .fluidOutputs(Hydrogen.getFluid(1000))\n+                .fluidInputs(Water.getFluid(1000))\n+                .fluidOutputs(PotassiumHydroxide.getFluid(1000))\n+                .fluidOutputs(HydrochloricAcid.getFluid(1000))\n                 .EUt(7680)\n                 .duration(600)\n                 .buildAndRegister();\n+        // 9Br + 9Mg + 10C6H12O6 + 6FeCl3 + 60 Na + 60 H2O = 60[NaOH + H2O] + 6C10H10Fe + 9MgBrCl2\n         CHEMICAL_PLANT_RECIPES.recipeBuilder()\n-                .fluidInputs(IronChloride.getFluid(1000))\n-                .input(dust, SodiumHydroxide)\n-                .input(dust, Sugar)//Fructose?\n-                .fluidInputs(Magnesium.getFluid(144))\n-                .fluidInputs(Bromine.getFluid(1000))\n-                .notConsumable(PdIrReOCeOS.getItemStack())\n+                .fluidInputs(IronChloride.getFluid(6000))\n+                .fluidInputs(Magnesium.getFluid(1296))\n+                .fluidInputs(Bromine.getFluid(9000))\n+                .fluidInputs(Water.getFluid(60000))\n+                .input(dust, Sodium, 60)\n+                .inputs(Fructose.getItemStack(240))\n                 .inputs(ZeoliteSievingPellets.getItemStack())\n-                .fluidOutputs(Ferrocene.getFluid(3000))\n-                .fluidOutputs(Water.getFluid(1000))\n-                .outputs(MgClBrominide.getItemStack())\n+                .notConsumable(PdIrReOCeOS.getItemStack())\n+                .fluidOutputs(Ferrocene.getFluid(6000))\n+                .fluidOutputs(SodiumHydroxideSolution.getFluid(60000))\n+                .outputs(MgClBrominide.getItemStack(36))\n                 .outputs(WetZeoliteSievingPellets.getItemStack())\n                 .EUt(2000000)\n                 .duration(200)\n@@ -166,142 +180,189 @@ public static void init() {\n                 .input(dust, Osmium)\n                 .input(dust, Silicon)\n                 .fluidInputs(Oxygen.getFluid(4000))\n-                .outputs(PdIrReOCeOS.getItemStack(5))\n+                .outputs(PdIrReOCeOS.getItemStack(10))\n                 .EUt(2000000)\n                 .duration(5)\n                 .buildAndRegister();\n+        // 2C10H10Fe + 2C60 + C2H4 + 2C3H7NO2 + 4CO = 2[C10H10Fe + C60 + C4H9N] + 4CO2\n+        // C2H4 + 2C3H7NO2 = 2C4H9N + 4O\n+        // TODO: Catalysts: Chloroform, Toluene\n         CHEMICAL_PLANT_RECIPES.recipeBuilder()\n-                .fluidInputs(Ferrocene.getFluid(1000))\n-                .fluidInputs(Chloroform.getFluid(1000))\n-                .inputs(Fullerene.getItemStack())\n-                .inputs(SodiumEthoxide.getItemStack())\n-                .fluidInputs(Toluene.getFluid(1000))\n+                .inputs(Fullerene.getItemStack(2))\n+                .inputs(NMethylglicine.getItemStack(22))\n+                .notConsumable(SodiumEthoxide.getItemStack())\n                 .notConsumable(AluminiumChloride.getItemStack())\n-                .inputs(NMethylglicine.getItemStack())\n-                .outputs(OreDictUnifier.get(dust, Salt))\n-                .fluidOutputs(Ferrocenylfulleropyrrolidine.getFluid(5000))\n+                .fluidInputs(Ferrocene.getFluid(2000))\n+                .fluidInputs(Ethylene.getFluid(1000))\n+                .fluidInputs(CarbonMonoxde.getFluid(4000))\n+                .fluidInputs(Chloroform.getFluid(10))\n+                .fluidInputs(Toluene.getFluid(10))\n+                .fluidOutputs(Ferrocenylfulleropyrrolidine.getFluid(2000))\n+                .fluidOutputs(CarbonDioxide.getFluid(4000))\n                 .EUt(2000000)\n                 .duration(750)\n                 .buildAndRegister();\n+        // NaOH + C2H5OH = H2O + C2H5ONa\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .input(dust, SodiumHydroxide)\n                 .fluidInputs(Ethanol.getFluid(1000))\n                 .fluidOutputs(Water.getFluid(1000))\n-                .outputs(SodiumEthoxide.getItemStack())\n+                .outputs(SodiumEthoxide.getItemStack(9))\n                 .EUt(500000)\n                 .duration(10)\n                 .buildAndRegister();\n+        // CH3NH2 + 2Cl + CH3COOH = C3H7NO2 + 2HCl\n+        // TODO: Catalysts: Acetic Anhydride\n         LARGE_CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(Methylamine.getFluid(1000))\n-                .fluidInputs(Chlorine.getFluid(1000))\n+                .fluidInputs(Chlorine.getFluid(2000))\n                 .fluidInputs(AceticAcid.getFluid(1000))\n                 .fluidInputs(AceticAnhydride.getFluid(10))\n-                .outputs(NMethylglicine.getItemStack(3))\n+                .outputs(NMethylglicine.getItemStack(11))\n+                .fluidOutputs(HydrochloricAcid.getFluid(2000))\n                 .EUt(2000000)\n                 .duration(200)\n                 .buildAndRegister();\n+        // NH3 + CH4O = CH3NH2 + H2O\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(Ammonia.getFluid(1000))\n                 .fluidInputs(Methanol.getFluid(1000))\n                 .notConsumable(dust, AluminoSilicateWool)\n                 .notConsumable(new IntCircuitIngredient(3))\n-                .fluidOutputs(Methylamine.getFluid(2000))\n+                .fluidOutputs(Methylamine.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(1000))\n                 .EUt(122880)\n                 .duration(200)\n                 .buildAndRegister();\n+        // [C10H10Fe + C60 + C4H9N] + Pd + CH3COOH + HNO3 = PdC60\n+        // Calling this fine\n+        // TODO: Catalysts: Nitric Acid\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(Ferrocenylfulleropyrrolidine.getFluid(1000))\n                 .input(dust, Palladium)\n                 .fluidInputs(AceticAcid.getFluid(1000))\n-                .fluidInputs(NitricAcid.getFluid(1000))\n+                .fluidInputs(NitricAcid.getFluid(10))\n                 .outputs(PdFullereneMatrix.getItemStack())\n                 .EUt(2000000)\n                 .duration(200)\n                 .buildAndRegister();\n+        // H2S + 2 CH4O = C2H6S + 2 H2O\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(HydrogenSulfide.getFluid(1000))\n-                .fluidInputs(Methanol.getFluid(1000))\n-                .fluidOutputs(Dimethylsulfide.getFluid(2000))\n+                .fluidInputs(Methanol.getFluid(21000))\n+                .fluidOutputs(Dimethylsulfide.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .EUt(2000000)\n                 .duration(100)\n                 .buildAndRegister();\n-        CHEMICAL_RECIPES.recipeBuilder()\n-                .fluidInputs(Chlorine.getFluid(1000))\n-                .fluidInputs(Toluene.getFluid(1000))\n-                .fluidInputs(Water.getFluid(1000))\n-                .fluidOutputs(BenzoylChloride.getFluid(3000))\n+        // 2C7H8 + SOCl2 + 4KMnO4 = H2O + 4 MnO2 + 4 KOH + SO2 + 2 C7H5ClO\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n+                .inputs(PotassiumPermanganate.getItemStack(24))\n+                .fluidInputs(ThionylChloride.getFluid(1000))\n+                .fluidInputs(Toluene.getFluid(2000))\n+                .outputs(OreDictUnifier.get(dust, Pyrolusite, 12))\n+                .fluidOutputs(Water.getFluid(1000))\n+                .fluidOutputs(PotassiumHydroxide.getFluid(4000))\n+                .fluidOutputs(SulfurDioxide.getFluid(2000))\n+                .fluidOutputs(BenzoylChloride.getFluid(2000))\n                 .EUt(2000000)\n                 .duration(200)\n                 .buildAndRegister();\n+        // H2O2 + 2C7H5ClO = C14H10O4 + 2HCl\n+        CHEMICAL_RECIPES.recipeBuilder()\n+                .fluidInputs(HydrogenPeroxide.getFluid(2000))\n+                .fluidInputs(BenzoylChloride.getFluid(2000))\n+                .fluidOutputs(BenzylPeroxide.getFluid(1000))\n+                .fluidOutputs(HydrochloricAcid.getFluid(1000))\n+                .EUt(2000000)\n+                .duration(60)\n+                .buildAndRegister();\n+        // 24CO + 15C4H8 + 8C6H6 = 12C11H14O2\n         LARGE_CHEMICAL_RECIPES.recipeBuilder()\n-                .fluidInputs(Hydrogen.getFluid(1000))\n-                .fluidInputs(Bromine.getFluid(1000))\n-                .fluidInputs(CarbonMonoxde.getFluid(1000))\n-                .fluidInputs(Butene.getFluid(1000))\n-                .fluidInputs(Benzene.getFluid(1000))\n-                .fluidOutputs(HydrobromicAcid.getFluid(1000))\n-                .fluidOutputs(Phenylpentanoicacid.getFluid(4000))\n+                .fluidInputs(CarbonMonoxde.getFluid(24000))\n+                .fluidInputs(Butene.getFluid(15000))\n+                .fluidInputs(Benzene.getFluid(8000))\n+                .fluidOutputs(Phenylpentanoicacid.getFluid(12000))\n                 .EUt(2000000)\n                 .duration(500)\n                 .buildAndRegister();\n+        /*\n+        *\n+        * C60 (fullerene) + C11H14O2 (phenylpentanoic acid) + C2H6S (dimethylsulfide) + C6H5Cl (chlorobenzene) -> C72H14O2 (PCBA = phenyl-C61-butyric acid) + C7H8 + H2S + HCl\n+        *\n+        */\n         LARGE_CHEMICAL_RECIPES.recipeBuilder()\n                 .inputs(Fullerene.getItemStack())\n                 .fluidInputs(Phenylpentanoicacid.getFluid(1000))\n-                .inputs(Bromosuccinimide.getItemStack(1))\n                 .fluidInputs(Dimethylsulfide.getFluid(1000))\n-                .fluidInputs(BenzoylChloride.getFluid(1000))\n-                .fluidInputs(Silvertetrafluoroborate.getFluid(10))\n-                .fluidOutputs(PCBA.getFluid(4000))\n+                .fluidInputs(Chlorobenzene.getFluid(1000))\n+                .outputs(OreDictUnifier.get(dust, Sulfur))\n+                .fluidOutputs(Toluene.getFluid(1000))\n+                .fluidOutputs(HydrogenSulfide.getFluid(1000))\n+                .fluidOutputs(HydrochloricAcid.getFluid(1000))\n+                .fluidOutputs(PCBA.getFluid(1000))\n                 .EUt(2000000)\n                 .duration(450)\n                 .buildAndRegister();\n+        // 3Ag2O + 8BF3 + = 6AgBF4 + B2O3\n+        // TODO: Catalyst: Benzene\n         CHEMICAL_RECIPES.recipeBuilder()\n-                .fluidInputs(BoronFluoride.getFluid(1000))\n-                .input(dust, SilverOxide)\n+                .fluidInputs(BoronFluoride.getFluid(8000))\n+                .input(dust, SilverOxide, 9)\n                 .fluidInputs(Benzene.getFluid(10))\n-                .fluidOutputs(Silvertetrafluoroborate.getFluid(2000))\n+                .fluidOutputs(Silvertetrafluoroborate.getFluid(6000))\n+                .outputs(BoronOxide.getItemStack(5))\n                 .EUt(122880)\n                 .duration(50)\n                 .buildAndRegister();\n-        CHEMICAL_RECIPES.recipeBuilder()\n-                .fluidInputs(Ammonia.getFluid(1000))\n+        // 2NH3 + COCl2 + 2C3H8O + 3C = C7H14N2 + 3H2O + 3CO2 + 2HCl\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n+                .fluidInputs(Ammonia.getFluid(2000))\n                 .fluidInputs(Phosgene.getFluid(1000))\n-                .fluidInputs(IsopropylAlcohol.getFluid(1000))\n+                .fluidInputs(IsopropylAlcohol.getFluid(2000))\n+                .input(dust, Carbon, 3)\n                 .notConsumable(Triphenylphosphine.getItemStack())\n-                .fluidOutputs(Diisopropylcarbodiimide.getFluid(3000))\n+                .fluidOutputs(Water.getFluid(3000))\n+                .fluidOutputs(HydrochloricAcid.getFluid(2000))\n+                .fluidOutputs(CarbonDioxide.getFluid(3000))\n+                .fluidOutputs(Diisopropylcarbodiimide.getFluid(1000))\n                 .EUt(2000000)\n                 .duration(250)\n                 .buildAndRegister();\n+        // CO + 2Cl = COCl2\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(CarbonMonoxde.getFluid(1000))\n-                .fluidInputs(Chlorine.getFluid(1000))\n+                .fluidInputs(Chlorine.getFluid(2000))\n                 .notConsumable(dust, Carbon)\n-                .fluidOutputs(Phosgene.getFluid(2000))\n+                .fluidOutputs(Phosgene.getFluid(1000))\n                 .EUt(2000)\n                 .duration(800)\n                 .buildAndRegister();\n+        // (CH3)2NH + C5H5N + O = H2O + C7H10N2\n         LARGE_CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(Dimethylamine.getFluid(1000))\n                 .fluidInputs(Pyridine.getFluid(1000))\n-                .fluidInputs(Chlorine.getFluid(1000))\n-                .input(dust, SodiumHydroxide)\n-                .outputs(OreDictUnifier.get(dust, Salt))\n-                .outputs(Dimethylaminopyridine.getItemStack(3))\n+                .fluidInputs(Oxygen.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(1000))\n+                .outputs(Dimethylaminopyridine.getItemStack(19))\n                 .EUt(2000000)\n                 .duration(400)\n                 .buildAndRegister();\n-        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n-                .fluidInputs(PCBA.getFluid(1000))\n-                .fluidInputs(SulfuricAcid.getFluid(1000))\n-                .fluidInputs(Diisopropylcarbodiimide.getFluid(1000))\n-                .input(dust, SodiumHydroxide)\n-                .fluidInputs(Toluene.getFluid(1000))\n-                .fluidInputs(Styrene.getFluid(1000))\n-                .inputs(Dimethylaminopyridine.getItemStack())\n-                .fluidOutputs(PCBS.getFluid(7000))\n-                .EUt(2000000)\n-                .duration(800)\n-                .buildAndRegister();\n+        /*\n+         *\n+         * 8C72H14O2 (PCBA) + 7C8H8 (Styrene) + 8CH2Cl2 (dichloromethane) = 8C80H21O2 (PCBS) + 16HCl\n+         *\n+         */\n+        CHEMICAL_RECIPES.recipeBuilder()\n+                .fluidInputs(PCBA.getFluid(8000))\n+                .fluidInputs(Styrene.getFluid(7000))\n+                .fluidInputs(Dichloromethane.getFluid(8000))\n+                .fluidOutputs(HydrochloricAcid.getFluid(16000))\n+                .fluidOutputs(PCBS.getFluid(8000))\n+                .EUt(524288)\n+                .duration(38571)\n+                .buildAndRegister();\n+        // PdC60 + C80H21O2 (PCBS) = [PdC60 + C80H21O2]\n         CHEMICAL_BATH_RECIPES.recipeBuilder()\n                 .fluidInputs(PCBS.getFluid(1000))\n                 .inputs(PdFullereneMatrix.getItemStack())"
  },
  {
    "sha": "d8de2ce7d72427269530ff0f22a4a59568d43b36",
    "filename": "src/main/java/gregicadditions/recipes/chain/FusionElementsChain.java",
    "status": "modified",
    "additions": 19,
    "deletions": 15,
    "changes": 34,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/FusionElementsChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/FusionElementsChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/FusionElementsChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -7,21 +7,22 @@\n import static gregtech.api.recipes.RecipeMaps.*;\n import static gregtech.api.unification.material.Materials.*;\n import static gregtech.api.unification.ore.OrePrefix.*;\n-import static gregtech.common.items.MetaItems.SHAPE_MOLD_INGOT;\n+import static gregtech.common.items.MetaItems.*;\n \n public class FusionElementsChain {\n     public static void init() {\n         CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(500)\n                 .input(dust, Lithium)\n-                .fluidInputs(Water.getFluid(1000))\n+                .fluidInputs(Water.getFluid(2000))\n                 .fluidOutputs(Hydrogen.getFluid(1000))\n                 .fluidOutputs(LithiumHydroxideSolution.getFluid(1000))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(1800)\n-                .fluidInputs(LithiumHydroxideSolution.getFluid(1000))\n+                .fluidInputs(LithiumHydroxideSolution.getFluid(2000))\n                 .fluidInputs(HydrogenPeroxide.getFluid(1000))\n-                .fluidOutputs(LithiumPeroxideSolution.getFluid(2000))\n+                .fluidOutputs(LithiumPeroxideSolution.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1500)\n@@ -32,28 +33,31 @@ public static void init() {\n                 .buildAndRegister();\n \n         ELECTROLYZER_RECIPES.recipeBuilder().duration(120).EUt(2000)\n-                .fluidInputs(Oxygen.getFluid(3000))\n+                .fluidInputs(Oxygen.getFluid(6000))\n                 .fluidOutputs(Ozone.getFluid(2000))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1500)\n-                .fluidInputs(NitrogenDioxide.getFluid(2000))\n+                .fluidInputs(NitrogenDioxide.getFluid(6000))\n                 .fluidInputs(Ozone.getFluid(1000))\n-                .fluidOutputs(NitrogenPentoxide.getFluid(1000))\n-                .fluidOutputs(Oxygen.getFluid(1000))\n+                .fluidOutputs(NitrogenPentoxide.getFluid(3000))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(1400)\n                 .fluidInputs(NitrogenPentoxide.getFluid(2000))\n                 .fluidInputs(TitaniumTetrachloride.getFluid(1000))\n-                .fluidOutputs(Chlorine.getFluid(2000))\n+                .fluidInputs(Oxygen.getFluid(2000))\n+                .fluidOutputs(Chlorine.getFluid(4000))\n                 .outputs(TitaniumNitrate.getItemStack())\n                 .buildAndRegister();\n \n         BLAST_RECIPES.recipeBuilder().duration(320).EUt(1950).blastFurnaceTemp(3100)\n                 .inputs(TitaniumNitrate.getItemStack())\n+                .input(dust, SodiumHydroxide, 2)\n                 .fluidInputs(LithiumCarbonateSolution.getFluid(1000))\n+                .fluidOutputs(NitricAcid.getFluid(4000))\n                 .outputs(OreDictUnifier.get(ingot, LithiumTitanate))\n+                .outputs(OreDictUnifier.get(dust, SodaAsh))\n                 .buildAndRegister();\n \n         CENTRIFUGE_RECIPES.recipeBuilder().duration(340).EUt(180000)\n@@ -178,19 +182,19 @@ public static void init() {\n                 .fluidInputs(HeptafluoroTantalate.getFluid(6000))\n                 .input(dust, Graphite,6)\n                 .input(dust, SiliconDioxide, 7)\n-                .fluidInputs(Hydrogen.getFluid(8000))\n+                .fluidInputs(Hydrogen.getFluid(42000))\n                 .fluidOutputs(Water.getFluid(14000))\n                 .outputs(TantalumCarbide.getItemStack(6))\n                 .fluidOutputs(FluorosilicicAcid.getFluid(7000))\n                 .buildAndRegister();\n \n         BLAST_RECIPES.recipeBuilder().duration(280).EUt(135000).blastFurnaceTemp(3000)\n-                .inputs(SodiumSeaborgate.getItemStack())\n-                .fluidInputs(HydrochloricAcid.getFluid(2000))\n-                .input(dust, Carbon)\n-                .outputs(SeaborgiumCarbide.getItemStack())\n+                .inputs(SodiumSeaborgate.getItemStack(1))\n+                .fluidInputs(Chlorine.getFluid(2000))\n+                .input(dust, Carbon, 3)\n+                .outputs(SeaborgiumCarbide.getItemStack(1))\n                 .outputs(OreDictUnifier.get(dust, Salt, 2))\n-                .fluidOutputs(Water.getFluid(1000))\n+                .fluidOutputs(CarbonDioxide.getFluid(2000))\n                 .buildAndRegister();\n \n         BLAST_RECIPES.recipeBuilder().duration(340).EUt(118000).blastFurnaceTemp(6200)"
  },
  {
    "sha": "f2a9fd6ae23e6ccb07d4451c24d82f6546bafa77",
    "filename": "src/main/java/gregicadditions/recipes/chain/GoldChain.java",
    "status": "modified",
    "additions": 51,
    "deletions": 29,
    "changes": 80,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/GoldChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/GoldChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/GoldChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -1,11 +1,14 @@\n package gregicadditions.recipes.chain;\n \n+import gregicadditions.recipes.GAMachineRecipeRemoval;\n import gregtech.api.recipes.ModHandler;\n+import gregtech.api.recipes.RecipeMaps;\n import gregtech.api.recipes.ingredients.IntCircuitIngredient;\n import gregtech.api.unification.OreDictUnifier;\n \n import static gregicadditions.GAMaterials.*;\n import static gregicadditions.recipes.GARecipeMaps.CHEMICAL_DEHYDRATOR_RECIPES;\n+import static gregicadditions.recipes.GARecipeMaps.LARGE_CHEMICAL_RECIPES;\n import static gregtech.api.recipes.RecipeMaps.*;\n import static gregtech.api.unification.material.Materials.*;\n import static gregtech.api.unification.ore.OrePrefix.*;\n@@ -18,31 +21,48 @@ public static void init() {\n         ModHandler.addSmeltingRecipe(OreDictUnifier.get(ingot, PreciousMetal), OreDictUnifier.get(nugget, Gold));\n         ModHandler.addSmeltingRecipe(OreDictUnifier.get(dust, GoldLeach), OreDictUnifier.get(nugget, Gold, 2));\n \n-        BLAST_RECIPES.recipeBuilder().EUt(120).duration(800).blastFurnaceTemp(750)\n+        ALLOY_SMELTER_RECIPES.recipeBuilder().EUt(120).duration(800)\n                 .input(dust, PreciousMetal)\n                 .input(dust, Copper, 3)\n                 .outputs(OreDictUnifier.get(ingot, GoldAlloy, 4))\n                 .buildAndRegister();\n \n-\n         CHEMICAL_RECIPES.recipeBuilder().duration(800)\n                 .input(ingot, GoldAlloy, 4)\n-                .fluidInputs(NitricAcid.getFluid(1000))\n-                .fluidInputs(Water.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, GoldLeach))\n-                .fluidOutputs(NitrogenDioxide.getFluid(1000))\n-                .fluidOutputs(PreciousLeachNitrate.getFluid(3000))\n+                .fluidInputs(NitricAcid.getFluid(14000))\n+                .outputs(OreDictUnifier.get(dust, GoldLeach, 4))\n+                .fluidOutputs(NitrogenDioxide.getFluid(7000))\n+                .fluidOutputs(PreciousLeachNitrate.getFluid(7000))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(800)\n-                .input(dust, GoldLeach)\n+                .input(dust, GoldLeach, 4)\n+                .notConsumable(new IntCircuitIngredient(0))\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n-                .fluidInputs(AquaRegia.getFluid(1000))\n-                .chancedOutput(OreDictUnifier.get(dustTiny, LeadNitrate), 1000, 0)\n+                .fluidInputs(AquaRegia.getFluid(3000))\n+                .chancedOutput(LeadSulfate.getItemStack(), 1000, 0)\n                 .fluidOutputs(ChloroauricAcid.getFluid(1000))\n                 .fluidOutputs(NitrogenDioxide.getFluid(1000))\n                 .buildAndRegister();\n \n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(800)\n+                .input(dust, GoldLeach, 4)\n+                .notConsumable(new IntCircuitIngredient(1))\n+                .fluidInputs(SulfuricAcid.getFluid(1000))\n+                .fluidInputs(AquaRegia.getFluid(3000))\n+                .chancedOutput(LeadSulfate.getItemStack(), 1000, 0)\n+                .fluidOutputs(ChloroauricAcid.getFluid(1000))\n+                .fluidOutputs(NitrogenDioxide.getFluid(1000))\n+                .fluidOutputs(DilutedHydrochloricAcid.getFluid(1000))\n+                .buildAndRegister();\n+\n+        ELECTROLYZER_RECIPES.recipeBuilder().duration(360).EUt(30)\n+                .inputs(LeadSulfate.getItemStack(6))\n+                .outputs(OreDictUnifier.get(dust, Lead))\n+                .outputs(OreDictUnifier.get(dust, Sulfur))\n+                .fluidOutputs(Oxygen.getFluid(4000))\n+                .buildAndRegister();\n+\n         MIXER_RECIPES.recipeBuilder().duration(100).EUt(30)\n                 .notConsumable(new IntCircuitIngredient(1))\n                 .input(dust, Potassium, 2)\n@@ -61,12 +81,13 @@ public static void init() {\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(3000)\n-                .fluidInputs(HydrochloricAcid.getFluid(1000))\n-                .fluidInputs(PreciousLeachNitrate.getFluid(10000))\n-                .fluidInputs(Water.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, SilverChloride, 3))\n-                .fluidOutputs(CopperLeach.getFluid(7000))\n+                .fluidInputs(HydrochloricAcid.getFluid(4000))\n+                .fluidInputs(PreciousLeachNitrate.getFluid(7000))\n+                .outputs(OreDictUnifier.get(dust, SilverChloride, 4))\n+                .fluidOutputs(CopperLeach.getFluid(3000))\n+                .fluidOutputs(DiluteNitricAcid.getFluid(4000))\n                 .buildAndRegister();\n+\n         CHEMICAL_RECIPES.recipeBuilder().duration(800)\n                 .input(dust, SilverChloride, 2)\n                 .input(dust, SodiumHydroxide)\n@@ -83,24 +104,25 @@ public static void init() {\n                 .fluidOutputs(CarbonDioxide.getFluid(1000))\n                 .buildAndRegister();\n \n-\n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().EUt(30).duration(3000)\n-                .fluidInputs(CopperLeach.getFluid(10000))\n-                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 0)\n-                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 0)\n-                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 0)\n-                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 0)\n-                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 0)\n-                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 0)\n-                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 0)\n-                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 0)\n-                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 0)\n+                .fluidInputs(CopperLeach.getFluid(3000))\n+                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 1000)\n+                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 1000)\n+                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 1000)\n+                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 500)\n+                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 500)\n+                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 350)\n+                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 350)\n+                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 350)\n+                .chancedOutput(OreDictUnifier.get(dust, CopperLeach), 9000, 250)\n+                .fluidOutputs(NitricAcid.getFluid(6000))\n                 .buildAndRegister();\n+\n         THERMAL_CENTRIFUGE_RECIPES.recipeBuilder().duration(3000).EUt(120)\n                 .input(dust, CopperLeach, 9)\n-                .outputs(OreDictUnifier.get(dustTiny, Copper, 8))\n-                .chancedOutput(OreDictUnifier.get(dustTiny, Iron), 5000, 0)\n-                .chancedOutput(OreDictUnifier.get(dustTiny, Nickel), 5000, 0)\n+                .outputs(OreDictUnifier.get(dust, Copper, 3))\n+                .chancedOutput(OreDictUnifier.get(dust, Iron), 5000, 0)\n+                .chancedOutput(OreDictUnifier.get(dust, Nickel), 5000, 0)\n                 .buildAndRegister();\n \n "
  },
  {
    "sha": "dc6346b3b35094f72461abbb057c749f7c6b68f4",
    "filename": "src/main/java/gregicadditions/recipes/chain/InsulationWireAssemblyChain.java",
    "status": "added",
    "additions": 233,
    "deletions": 0,
    "changes": 233,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/InsulationWireAssemblyChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/InsulationWireAssemblyChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/InsulationWireAssemblyChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -0,0 +1,233 @@\n+package gregicadditions.recipes.chain;\n+\n+import gregtech.api.unification.OreDictUnifier;\n+\n+import static gregicadditions.GAMaterials.*;\n+import static gregicadditions.item.GAMetaItems.*;\n+import static gregicadditions.item.GAMetaItems.INSULATION_WIRE_ASSEMBLY;\n+import static gregicadditions.recipes.GARecipeMaps.*;\n+import static gregtech.api.recipes.RecipeMaps.*;\n+import static gregtech.api.unification.material.Materials.*;\n+import static gregtech.api.unification.ore.OrePrefix.*;\n+import static gregtech.api.unification.ore.OrePrefix.stick;\n+\n+public class InsulationWireAssemblyChain {\n+\n+    public static void init() {\n+        // 3C2H5OH + C2H4 + NH3 + HBr = C8H20NBr + 3H2O\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(45000)\n+                .fluidInputs(Ethanol.getFluid(3000))\n+                .fluidInputs(Ethylene.getFluid(1000))\n+                .fluidInputs(Ammonia.getFluid(1000))\n+                .fluidInputs(HydrobromicAcid.getFluid(1000))\n+                .fluidOutputs(TetraethylammoniumBromide.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(3000))\n+                .buildAndRegister();\n+\n+        // H2O + C6H12O6 = C6H14O2\n+        CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(330000)\n+                .notConsumable(PdIrReOCeOS.getItemStack())\n+                .fluidInputs(Water.getFluid(1000))\n+                .inputs(Fructose.getItemStack(24))\n+                .fluidInputs(TetraethylammoniumBromide.getFluid(10))\n+                .fluidOutputs(Hexanediol.getFluid(1000))\n+                .buildAndRegister();\n+\n+        // 2 NH3 + C6H14O2 = 2 H2O + C6H16N2\n+        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(250000)\n+                .fluidInputs(Hexanediol.getFluid(1000))\n+                .fluidInputs(Ammonia.getFluid(2000))\n+                .fluidOutputs(Water.getFluid(2000))\n+                .fluidOutputs(Hexamethylenediamine.getFluid(1000))\n+                .notConsumable(dust, Ruthenium)\n+                .notConsumable(Alumina.getItemStack())\n+                .buildAndRegister();\n+\n+        // C6H12O6 + 2CO = C6H10O8 + C2H2\n+        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(74500)\n+                .inputs(Glucose.getItemStack(24))\n+                .fluidInputs(CarbonMonoxde.getFluid(2000))\n+                .fluidOutputs(Acetylene.getFluid(1000))\n+                .outputs(SaccharicAcid.getItemStack(24))\n+                .buildAndRegister();\n+\n+        // C6H10O8 + 8H = C6H10O4 + 4H2O\n+        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(260).EUt(120000)\n+                .inputs(SaccharicAcid.getItemStack(24))\n+                .notConsumable(AuPdCCatalyst.getItemStack())\n+                .notConsumable(ScandiumTriflate.getItemStack())\n+                .fluidInputs(Hydrogen.getFluid(8000))\n+                .outputs(AdipicAcid.getItemStack(20))\n+                .fluidOutputs(Water.getFluid(4000))\n+                .buildAndRegister();\n+\n+        // C3H6O + CH4 = C4H10O\n+        CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(230000)\n+                .notConsumable(dust, MagnesiumChloride)\n+                .inputs(ZeoliteSievingPellets.getItemStack())\n+                .fluidInputs(Acetone.getFluid(1000))\n+                .fluidInputs(Methane.getFluid(1000))\n+                .fluidOutputs(Tertbutanol.getFluid(2000))\n+                .outputs(WetZeoliteSievingPellets.getItemStack())\n+                .buildAndRegister();\n+\n+        // 2 C4H10O + 2 CO2 = H2O + C10H18O5\n+        // CATALYST\n+        CHEMICAL_RECIPES.recipeBuilder().duration(260).EUt(320000)\n+                .fluidInputs(Tertbutanol.getFluid(2000))\n+                .fluidInputs(CarbonDioxide.getFluid(2000))\n+                .fluidInputs(Toluenesulfonate.getFluid(10))\n+                .fluidOutputs(Water.getFluid(1000))\n+                .outputs(DitertbutylDicarbonate.getItemStack(33))\n+                .buildAndRegister();\n+\n+        // C4H8 + C10H18O5 + 4NH3 + 3C = 2C4H10O + C6H18N4 + 3CO\n+        // CATALYST\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(370).EUt(200000)\n+                .inputs(DitertbutylDicarbonate.getItemStack(33))\n+                .input(dust, Carbon, 3)\n+                .fluidInputs(Butene.getFluid(1000))\n+                .fluidInputs(Ammonia.getFluid(4000))\n+                .fluidInputs(Trimethylchlorosilane.getFluid(10))\n+                .fluidOutputs(Tertbutanol.getFluid(2000))\n+                .fluidOutputs(CarbonMonoxde.getFluid(3000))\n+                .fluidOutputs(Triaminoethaneamine.getFluid(1000))\n+                .buildAndRegister();\n+\n+        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(290).EUt(420000)\n+                .input(foil, Polyetheretherketone)\n+                .input(foil, SiliconeRubber)\n+                .inputs(AdipicAcid.getItemStack(20))\n+                .fluidInputs(Hexamethylenediamine.getFluid(1000))\n+                .fluidInputs(Triaminoethaneamine.getFluid(500))\n+                .outputs(PEEK_POLYAMIDE_FOIL.getStackForm(3))\n+                .buildAndRegister();\n+\n+        // 2K + 2NaN3 + C10H18O5 = 2Na + K2O + 2 C5H9N3O2\n+        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(210).EUt(450000)\n+                .input(dust, Potassium,2)\n+                .inputs(SodiumAzide.getItemStack(8))\n+                .inputs(DitertbutylDicarbonate.getItemStack(33))\n+                .outputs(OreDictUnifier.get(dust, Sodium, 2))\n+                .outputs(OreDictUnifier.get(dust, Potash, 6))\n+                .fluidOutputs(TertButylAzidoformate.getFluid(2000))\n+                .buildAndRegister();\n+\n+        // Aminated Fullerene is a Secondary Amine\n+        // C60 + 4C5H9N3O2 + 8H2O + 4CO -> C60N12H12 + 4C4H10O + 8CO2\n+        CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(320).EUt(745000)\n+                .inputs(Fullerene.getItemStack())\n+                .fluidInputs(TertButylAzidoformate.getFluid(4000))\n+                .fluidInputs(Water.getFluid(8000))\n+                .fluidInputs(CarbonMonoxde.getFluid(4000))\n+                .fluidOutputs(AminatedFullerene.getFluid(1000))\n+                .fluidOutputs(CarbonDioxide.getFluid(8000))\n+                .fluidOutputs(Tertbutanol.getFluid(4000))\n+                .buildAndRegister();\n+\n+        FLUID_HEATER_RECIPES.recipeBuilder().duration(120).EUt(480000)\n+                .fluidInputs(AminatedFullerene.getFluid(1000))\n+                .fluidOutputs(Azafullerene.getFluid(1000))\n+                .notConsumable(wireFine, Rhenium)\n+                .buildAndRegister();\n+\n+        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(230).EUt(475000)\n+                .inputs(PEEK_POLYAMIDE_FOIL.getStackForm())\n+                .fluidInputs(Azafullerene.getFluid(10))\n+                .outputs(HIGHLY_INSULATING_FOIL.getStackForm())\n+                .buildAndRegister();\n+\n+        // FeCl3 + C6H12O6 = [FeCl3 + C6H12O6]\n+        MIXER_RECIPES.recipeBuilder().duration(250).EUt(32000)\n+                .fluidInputs(IronChloride.getFluid(1000))\n+                .inputs(Glucose.getItemStack(24))\n+                .fluidOutputs(GlucoseIronSolution.getFluid(1000))\n+                .buildAndRegister();\n+\n+        CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(260).EUt(18000)\n+                .fluidInputs(GlucoseIronSolution.getFluid(1000))\n+                .outputs(GlucoseIronMixture.getItemStack(28))\n+                .buildAndRegister();\n+\n+        // [FeCl3 + C6H12O6] + 3Na = [6C + Fe] + 3NaCl + 6H2O\n+        BLAST_RECIPES.recipeBuilder().duration(270).EUt(19000).blastFurnaceTemp(1800)\n+                .inputs(GlucoseIronMixture.getItemStack(28))\n+                .input(dust, Sodium, 3)\n+                .outputs(GRAPHENE_IRON_PLATE.getStackForm())\n+                .outputs(OreDictUnifier.get(dust, Salt, 6))\n+                .fluidOutputs(Water.getFluid(6000))\n+                .buildAndRegister();\n+\n+        // KMnO4 + NaNO2 + H2SO4 = Graphene Oxidation Solution\n+        MIXER_RECIPES.recipeBuilder().duration(260).EUt(19500)\n+                .inputs(PotassiumPermanganate.getItemStack(6))\n+                .input(dust, SodiumNitrate, 4)\n+                .fluidInputs(SulfuricAcid.getFluid(1000))\n+                .fluidOutputs(GrapheneOxidationSolution.getFluid(1000))\n+                .buildAndRegister();\n+\n+        // Graphite + Oxidation Solution = Graphite Oxide\n+        CHEMICAL_RECIPES.recipeBuilder().duration(290).EUt(31500)\n+                .input(dust, Graphite)\n+                .notConsumable(dust, Osmium)\n+                .fluidInputs(GrapheneOxidationSolution.getFluid(500))\n+                .outputs(GraphiteOxide.getItemStack(3))\n+                .buildAndRegister();\n+\n+        // Graphene + Oxidation Solution = Graphene Oxide\n+        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(260).EUt(29000)\n+                .input(dust, Graphene)\n+                .fluidInputs(GrapheneOxidationSolution.getFluid(500))\n+                .outputs(GrapheneOxide.getItemStack(3))\n+                .buildAndRegister();\n+\n+        CHEMICAL_BATH_RECIPES.recipeBuilder().duration(240).EUt(26500)\n+                .inputs(GraphiteOxide.getItemStack(3))\n+                .fluidInputs(Water.getFluid(1000))\n+                .outputs(GrapheneOxide.getItemStack(3))\n+                .buildAndRegister();\n+\n+        CHEMICAL_RECIPES.recipeBuilder().duration(250).EUt(32000)\n+                .inputs(GrapheneOxide.getItemStack(3))\n+                .notConsumable(WHITE_HALIDE_LAMP.getStackForm())\n+                .fluidInputs(Hydrazine.getFluid(1000))\n+                .outputs(OreDictUnifier.get(dust, Graphene))\n+                .buildAndRegister();\n+\n+        MIXER_RECIPES.recipeBuilder().duration(200).EUt(15000)\n+                .fluidInputs(Resorcinol.getFluid(500))\n+                .fluidInputs(Formaldehyde.getFluid(1000))\n+                .inputs(GrapheneOxide.getItemStack(3))\n+                .outputs(GrapheneGelSuspension.getItemStack())\n+                .buildAndRegister();\n+\n+        AUTOCLAVE_RECIPES.recipeBuilder().duration(260).EUt(19500)\n+                .inputs(GrapheneGelSuspension.getItemStack())\n+                .fluidInputs(Acetone.getFluid(500))\n+                .outputs(DryGrapheneGel.getItemStack())\n+                .buildAndRegister();\n+\n+        FLUID_HEATER_RECIPES.recipeBuilder().duration(320).EUt(29500)\n+                .fluidInputs(CarbonDioxide.getFluid(1000))\n+                .fluidOutputs(SupercriticalCO2.getFluid(1000))\n+                .circuitMeta(0)\n+                .buildAndRegister();\n+\n+        BLAST_RECIPES.recipeBuilder().duration(400).EUt(22000).blastFurnaceTemp(5000)\n+                .inputs(DryGrapheneGel.getItemStack())\n+                .fluidInputs(SupercriticalCO2.getFluid(1000))\n+                .outputs(AEROGRAPHENE.getStackForm())\n+                .fluidOutputs(CarbonDioxide.getFluid(1000))\n+                .buildAndRegister();\n+\n+        ASSEMBLER_RECIPES.recipeBuilder().duration(210).EUt(425000)\n+                .input(stick, Polyurethane)\n+                .input(stick, ReinforcedEpoxyResin)\n+                .inputs(MEMORY_FOAM_BLOCK.getStackForm())\n+                .inputs(HIGHLY_INSULATING_FOIL.getStackForm())\n+                .inputs(AEROGRAPHENE.getStackForm())\n+                .fluidInputs(Argon.getFluid(1000))\n+                .outputs(INSULATION_WIRE_ASSEMBLY.getStackForm(2))\n+                .buildAndRegister();\n+    }\n+}"
  },
  {
    "sha": "26d6626f6087446e2d04fc28b37535077ecfac09",
    "filename": "src/main/java/gregicadditions/recipes/chain/IodineChain.java",
    "status": "modified",
    "additions": 25,
    "deletions": 11,
    "changes": 36,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/IodineChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/IodineChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/IodineChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -8,69 +8,83 @@\n import static gregtech.api.unification.material.Materials.*;\n import static gregtech.api.unification.ore.OrePrefix.dust;\n \n-\n public class IodineChain {\n     public static void init() {\n+\n+        // NaNO3·KNO3·KCl·NaIO3 + H2O = [NaNO3·KNO3·KCl·NaIO3 + H2O]\n         MIXER_RECIPES.recipeBuilder().duration(240).EUt(1250)\n                 .input(dust, Caliche)\n                 .fluidInputs(Water.getFluid(1000))\n                 .fluidOutputs(CalicheIodateBrine.getFluid(1000))\n                 .buildAndRegister();\n \n+        // [NaNO3·KNO3·KCl·NaIO3 + H2O] + 3H2O + 3SO2 = [NaNO3·KNO3·KCl·NaI + H2O] + 3H2SO4\n         CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(1250)\n                 .fluidInputs(CalicheIodateBrine.getFluid(1000))\n-                .fluidInputs(SulfurDioxide.getFluid(1000))\n+                .fluidInputs(SulfurDioxide.getFluid(3000))\n+                .fluidInputs(Water.getFluid(3000))\n                 .fluidOutputs(IodideSolution.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, SodiumSulfate))\n+                .fluidOutputs(SulfuricAcid.getFluid(3000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(140).EUt(1250)\n-                .fluidInputs(CalicheIodateBrine.getFluid(167))\n-                .fluidInputs(IodideSolution.getFluid(833))\n-                .fluidOutputs(CalicheIodineBrine.getFluid(1000))\n+        // 5[NaNO3·KNO3·KCl·NaI] + [NaNO3·KNO3·KCl·NaIO3 + H2O] ->  6[NaNO3·KNO3·KCl·NaOH + H2O + I]\n+        // 167/833 = ~0.2, ratio changed to cleaner 1:5\n+        // This is correct\n+        MIXER_RECIPES.recipeBuilder().duration(140).EUt(1250)\n+                .fluidInputs(CalicheIodateBrine.getFluid(1000))\n+                .fluidInputs(IodideSolution.getFluid(5000))\n+                .fluidOutputs(CalicheIodineBrine.getFluid(6000))\n                 .buildAndRegister();\n \n+        // [NaNO3·KNO3·KCl·NaOH + H2O + I] +  Kerosene ->  [NaNO3·KNO3·KCl·NaOH + H2O] + [Kerosene + I]\n         CHEMICAL_RECIPES.recipeBuilder().duration(90).EUt(600)\n                 .fluidInputs(CalicheIodineBrine.getFluid(1000))\n                 .fluidInputs(Kerosene.getFluid(1000))\n                 .fluidOutputs(CalicheNitrateSolution.getFluid(1000))\n                 .fluidOutputs(KeroseneIodineSolution.getFluid(1000))\n                 .buildAndRegister();\n \n+        // [Kerosene + I] = Kerosene + I\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(90).EUt(600)\n                 .fluidInputs(KeroseneIodineSolution.getFluid(1000))\n                 .fluidOutputs(Kerosene.getFluid(1000))\n                 .outputs(OreDictUnifier.get(dust, Iodine))\n                 .buildAndRegister();\n \n+        // [NaNO3·KNO3·KCl·NaOH + H2O] = NaNO3 + KNO3 + KCl + NaOH + H2O (Water voided - Dehydrator)\n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(120).EUt(750)\n                 .fluidInputs(CalicheNitrateSolution.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, Niter))\n-                .outputs(OreDictUnifier.get(dust, RockSalt))\n+                .fluidInputs(Nitrogen.getFluid(1000))\n+                .outputs(OreDictUnifier.get(dust, Niter, 5))\n+                .outputs(OreDictUnifier.get(dust, RockSalt, 2))\n+                .outputs(OreDictUnifier.get(dust, SodiumHydroxide, 3))\n                 .buildAndRegister();\n \n+        // 2[I + Oil] = Oil + I?\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(160).EUt(30)\n                 .fluidInputs(IodizedOil.getFluid(2000))\n                 .fluidOutputs(Oil.getFluid(1000))\n                 .fluidOutputs(IodizedBrine.getFluid(1000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1250)\n+        // I? + 0.3Cl = 1.3I??\n+        MIXER_RECIPES.recipeBuilder().duration(240).EUt(1250)\n                 .fluidInputs(IodizedBrine.getFluid(1000))\n                 .fluidInputs(Chlorine.getFluid(300))\n                 .fluidOutputs(IodineBrineMix.getFluid(1300))\n                 .buildAndRegister();\n \n+        // 1.3I?? = Br? + 0.3I?\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(150).EUt(1250)\n                 .fluidInputs(IodineBrineMix.getFluid(1300))\n                 .fluidOutputs(BrominatedBrine.getFluid(1000))\n                 .fluidOutputs(IodineSlurry.getFluid(300))\n                 .buildAndRegister();\n \n+        // I? = I\n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(230).EUt(600)\n                 .fluidInputs(IodineSlurry.getFluid(1000))\n                 .outputs(OreDictUnifier.get(dust, Iodine))\n                 .buildAndRegister();\n-\n     }\n }"
  },
  {
    "sha": "754cd3bca33202a9c1bfb191b394949cfbb5399c",
    "filename": "src/main/java/gregicadditions/recipes/chain/LithiumChain.java",
    "status": "modified",
    "additions": 50,
    "deletions": 38,
    "changes": 88,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/LithiumChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/LithiumChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/LithiumChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -4,95 +4,107 @@\n \n import static gregicadditions.GAMaterials.*;\n import static gregicadditions.recipes.GARecipeMaps.CHEMICAL_DEHYDRATOR_RECIPES;\n+import static gregicadditions.recipes.GARecipeMaps.LARGE_CHEMICAL_RECIPES;\n import static gregtech.api.recipes.RecipeMaps.*;\n import static gregtech.api.unification.material.Materials.*;\n import static gregtech.api.unification.ore.OrePrefix.dust;\n \n public class LithiumChain {\n     public static void init() {\n+\n+        // LiAlSi2O6 = LiAlSi2O6\n         BLAST_RECIPES.recipeBuilder().duration(240).EUt(120).blastFurnaceTemp(1400)\n-                .input(dust, Spodumene)\n-                .outputs(RoastedSpodumene.getItemStack())\n+                .input(dust, Spodumene, 10)\n+                .outputs(RoastedSpodumene.getItemStack(10))\n                 .buildAndRegister();\n \n+        // KLi3Al4F2O10 + CaO = CaF2 + (KLi3Al4O10)O\n         BLAST_RECIPES.recipeBuilder().duration(260).EUt(120).blastFurnaceTemp(1400)\n-                .input(dust, Lepidolite)\n-                .input(dust, Quicklime)\n-                .outputs(RoastedLepidolite.getItemStack())\n-                .outputs(CalciumFluoride.getItemStack())\n-                .buildAndRegister();\n-\n-        ELECTROLYZER_RECIPES.recipeBuilder().duration(160).EUt(120)\n-                .inputs(CalciumFluoride.getItemStack(3))\n-                .outputs(OreDictUnifier.get(dust, Calcium))\n-                .fluidOutputs(Fluorine.getFluid(2000))\n+                .input(dust, Lepidolite, 20)\n+                .input(dust, Quicklime, 2)\n+                .outputs(RoastedLepidolite.getItemStack(19))\n+                .outputs(OreDictUnifier.get(dust, Fluorite, 3))\n                 .buildAndRegister();\n \n+        // LiAlSi2O6 + H2SO4 = [LiAlO2 + H2SO4] + 2SiO2\n         CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(120)\n-                .inputs(RoastedSpodumene.getItemStack())\n+                .inputs(RoastedSpodumene.getItemStack(10))\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n                 .fluidOutputs(DissolvedLithiumOre.getFluid(1000))\n                 .outputs(OreDictUnifier.get(dust, SiliconDioxide, 6))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(120)\n-                .inputs(RoastedLepidolite.getItemStack())\n-                .fluidInputs(SulfuricAcid.getFluid(4000))\n+        // (KLi3Al4O10)O + Al + 3H2SO4 = 3[LiAlO2 + H2SO4] + Al2O3 + K2O\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(120)\n+                .inputs(RoastedLepidolite.getItemStack(19))\n+                .input(dust, Aluminium)\n+                .fluidInputs(SulfuricAcid.getFluid(3000))\n                 .fluidOutputs(DissolvedLithiumOre.getFluid(3000))\n-                .outputs(PotassiumSulfate.getItemStack())\n+                .outputs(OreDictUnifier.get(dust, Potash, 3))\n+                .outputs(Alumina.getItemStack(5))\n                 .buildAndRegister();\n \n+        // 2[LiAlO2 + H2SO4] + H2SO4 + CO2 = Al2(SO4)3 + [Li2CO3 + H2O] + 2H2O\n         CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(120)\n-                .fluidInputs(DissolvedLithiumOre.getFluid(3000))\n-                .input(dust, SodaAsh, 3)\n-                .outputs(AluminiumSulfate.getItemStack(3))\n-                .fluidOutputs(LithiumCarbonateSolution.getFluid(3000))\n+                .fluidInputs(DissolvedLithiumOre.getFluid(2000))\n+                .fluidInputs(SulfuricAcid.getFluid(1000))\n+                .fluidInputs(CarbonDioxide.getFluid(1000))\n+                .outputs(AluminiumSulfate.getItemStack(17))\n+                .fluidOutputs(LithiumCarbonateSolution.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .buildAndRegister();\n \n+        // K2SO4 -> 2K + S + 4O\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(180).EUt(120)\n-                .inputs(PotassiumSulfate.getItemStack())\n-                .outputs(OreDictUnifier.get(dust, Potassium))\n+                .inputs(PotassiumSulfate.getItemStack(7))\n+                .outputs(OreDictUnifier.get(dust, Potassium, 2))\n                 .outputs(OreDictUnifier.get(dust, Sulfur))\n                 .fluidOutputs(Oxygen.getFluid(4000))\n                 .buildAndRegister();\n \n+        // Al2(SO4)3 = 2Al + 3S + 12O\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(180).EUt(120)\n-                .inputs(AluminiumSulfate.getItemStack(18))\n-                .outputs(OreDictUnifier.get(dust, Aluminium, 3))\n+                .inputs(AluminiumSulfate.getItemStack(17))\n+                .outputs(OreDictUnifier.get(dust, Aluminium, 2))\n                 .outputs(OreDictUnifier.get(dust, Sulfur, 3))\n                 .fluidOutputs(Oxygen.getFluid(12000))\n                 .buildAndRegister();\n \n-\n+        // [Li2CO3 + H2O] + HCl + HClO + 2Na = 2[LiCl + H2O] + Na2CO3\n         CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(120)\n+                .input(dust, Sodium, 2)\n                 .fluidInputs(LithiumCarbonateSolution.getFluid(1000))\n-                .fluidInputs(HydrochloricAcid.getFluid(2000))\n-                .fluidOutputs(LithiumChlorideSolution.getFluid(1000))\n-                .fluidOutputs(DilutedHydrochloricAcid.getFluid(2000))\n+                .fluidInputs(HydrochloricAcid.getFluid(1000))\n+                .fluidInputs(HypochlorousAcid.getFluid(1000))\n+                .outputs(OreDictUnifier.get(dust, SodaAsh, 6))\n+                .fluidOutputs(LithiumChlorideSolution.getFluid(2000))\n                 .buildAndRegister();\n \n+        // [LiCl + H2O] = LiCl + H2O (H2O Voided - Dehydrator)\n         CHEMICAL_DEHYDRATOR_RECIPES.recipeBuilder().duration(180).EUt(120)\n                 .fluidInputs(LithiumChlorideSolution.getFluid(1000))\n-                .outputs(LithiumChloride.getItemStack())\n+                .outputs(LithiumChloride.getItemStack(2))\n                 .buildAndRegister();\n \n+        // LiCl + KCl = [LiCl + KCl]X\n         MIXER_RECIPES.recipeBuilder().duration(90).EUt(120)\n-                .inputs(LithiumChloride.getItemStack())\n-                .input(dust, RockSalt)\n-                .outputs(LiKChlorideEutetic.getItemStack(2))\n+                .inputs(LithiumChloride.getItemStack(2))\n+                .input(dust, RockSalt, 2)\n+                .outputs(LiKChlorideEutetic.getItemStack(4))\n                 .buildAndRegister();\n \n+        // 0.25[LiCl + KCl]X = 0.25[LiCl + KCl]Z\n         FLUID_EXTRACTION_RECIPES.recipeBuilder().duration(150).EUt(120)\n                 .inputs(LiKChlorideEutetic.getItemStack())\n-                .fluidOutputs(MoltenLiKChlorideEutetic.getFluid(1000))\n+                .fluidOutputs(MoltenLiKChlorideEutetic.getFluid(250))\n                 .buildAndRegister();\n \n+        // [LiCl + KCl]Z = 2Cl + Li + K\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(900).EUt(125)\n-                .fluidInputs(MoltenLiKChlorideEutetic.getFluid(4000))\n+                .fluidInputs(MoltenLiKChlorideEutetic.getFluid(1000))\n                 .fluidOutputs(Chlorine.getFluid(2000))\n-                .fluidOutputs(Lithium.getFluid(144))\n-                .fluidOutputs(Potassium.getFluid(144))\n+                .outputs(OreDictUnifier.get(dust, Lithium))\n+                .outputs(OreDictUnifier.get(dust, Potassium))\n                 .buildAndRegister();\n-\n     }\n }"
  },
  {
    "sha": "95f2ef86e7bcd9d5df5f41de7712c5d1e5e6c3ba",
    "filename": "src/main/java/gregicadditions/recipes/chain/NanotubeChain.java",
    "status": "modified",
    "additions": 109,
    "deletions": 54,
    "changes": 163,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/NanotubeChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/NanotubeChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/NanotubeChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -17,152 +17,208 @@\n \n public class NanotubeChain {\n     public static void init() {\n+\n+        // C6H6 + C7H8 -> C12H10 + CH4\n         CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(200000)\n                 .fluidInputs(Benzene.getFluid(1000))\n                 .fluidInputs(Toluene.getFluid(1000))\n                 .fluidOutputs(Methane.getFluid(1000))\n-                .outputs(Biphenyl.getItemStack())\n+                .outputs(Biphenyl.getItemStack(22))\n                 .buildAndRegister();\n \n-        ELECTROLYZER_RECIPES.recipeBuilder().duration(320).EUt(3200)\n-                .inputs(PrecipitatedAmmoniumSulfate.getItemStack())\n+        // (NH4)2SO4 + H2SO4 -> (NH4)2(SO4)2 + H2\n+        CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(3200)\n+                .fluidInputs(AmmoniumSulfate.getFluid(1000))\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n-                .fluidOutputs(AmmoniumPersulfate.getFluid(2000))\n+                .fluidOutputs(AmmoniumPersulfate.getFluid(1000))\n+                .fluidOutputs(Hydrogen.getFluid(2000))\n                 .buildAndRegister();\n \n+        // 2I + C12H10 + H2SO4 + (NH4)2SO4 -> C12H8I2 + (NH4)2(SO4)2 + 2H2\n         CHEMICAL_RECIPES.recipeBuilder().duration(270).EUt(280000)\n                 .input(dust, Iodine, 2)\n-                .inputs(Biphenyl.getItemStack())\n-                .fluidInputs(AmmoniumPersulfate.getFluid(1000))\n-                .fluidInputs(SulfuricAcid.getFluid(500))\n-                .fluidInputs(HydrochloricAcid.getFluid(500))\n-                .outputs(Diiodobiphenyl.getItemStack())\n-                .fluidOutputs(DilutedHydrochloricAcid.getFluid(750))\n-                .fluidOutputs(DilutedSulfuricAcid.getFluid(750))\n+                .inputs(Biphenyl.getItemStack(22))\n+                .fluidInputs(AmmoniumSulfate.getFluid(1000))\n+                .fluidInputs(SulfuricAcid.getFluid(1000))\n+                .outputs(Diiodobiphenyl.getItemStack(22))\n+                .fluidOutputs(AmmoniumPersulfate.getFluid(1000))\n+                .fluidOutputs(Hydrogen.getFluid(4000))\n                 .buildAndRegister();\n \n+        // Li + C4H10 -> C4H9Li + H\n         CHEMICAL_RECIPES.recipeBuilder().duration(150).EUt(140000)\n                 .input(dust, Lithium)\n                 .fluidInputs(Butane.getFluid(1000))\n-                .fluidOutputs(ButhylLithium.getFluid(2000))\n+                .fluidOutputs(ButylLithium.getFluid(1000))\n+                .fluidOutputs(Hydrogen.getFluid(1000))\n                 .buildAndRegister();\n \n+        // Sn + 2Cl -> SnCl2\n         CHEMICAL_RECIPES.recipeBuilder().duration(65).EUt(19200)\n-                .input(dust, Tin, 2)\n-                .fluidInputs(Chlorine.getFluid(1000))\n-                .outputs(TinChloride.getItemStack(2))\n+                .input(dust, Tin)\n+                .fluidInputs(Chlorine.getFluid(2000))\n+                .outputs(TinChloride.getItemStack(3))\n                 .buildAndRegister();\n \n+        // SnCl2 + 3CH4 + O -> C3H9SnCl + HCl(H2O)\n         CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(260).EUt(180000)\n-                .inputs(TinChloride.getItemStack())\n+                .inputs(TinChloride.getItemStack(3))\n                 .notConsumable(dust, Magnesium)\n                 .notConsumable(dust, Iodine)\n-                .fluidInputs(Methane.getFluid(4000))\n-                .fluidOutputs(TetramethyltinChloride.getFluid(4000))\n+                .fluidInputs(Methane.getFluid(3000))\n+                .fluidInputs(Oxygen.getFluid(1000))\n+                .fluidOutputs(TetramethyltinChloride.getFluid(1000))\n+                .fluidOutputs(DilutedHydrochloricAcid.getFluid(2000))\n                 .buildAndRegister();\n \n+        // C2H2 + H2O -> C2H4O\n         CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(2400)\n                 .notConsumable(dust, Copper)\n                 .fluidInputs(Acetylene.getFluid(1000))\n-                .fluidInputs(Oxygen.getFluid(1000))\n+                .fluidInputs(Water.getFluid(1000))\n                 .fluidOutputs(Acetaldehyde.getFluid(1000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(75000)\n+        // 2Tl + 2HCl + O -> 2TlCl + H2O\n+        CHEMICAL_RECIPES.recipeBuilder().duration(200).EUt(30720)\n+                .input(dust, Thallium, 2)\n+                .fluidInputs(HydrochloricAcid.getFluid(2000))\n+                .fluidInputs(Oxygen.getFluid(1000))\n+                .outputs(ThalliumChloride.getItemStack(4))\n+                .fluidOutputs(Water.getFluid(1000))\n+                .buildAndRegister();\n+\n+        // CH2O + 2C2H4O + NH3 -> C5H5N + 3H2O + 2H\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(75000)\n                 .notConsumable(ThalliumChloride.getItemStack())\n                 .fluidInputs(Formaldehyde.getFluid(1000))\n-                .fluidInputs(Acetaldehyde.getFluid(1000))\n+                .fluidInputs(Acetaldehyde.getFluid(2000))\n                 .fluidInputs(Ammonia.getFluid(1000))\n                 .fluidOutputs(Pyridine.getFluid(1000))\n-                .fluidOutputs(Water.getFluid(2000))\n+                .fluidOutputs(Water.getFluid(3000))\n+                .fluidOutputs(Hydrogen.getFluid(2000))\n                 .buildAndRegister();\n \n+        // Ni + Al -> NiAl\n         MIXER_RECIPES.recipeBuilder().duration(150).EUt(400)\n                 .input(dust, Nickel)\n                 .input(dust, Aluminium)\n                 .outputs(NiAlCatalyst.getItemStack(2))\n                 .buildAndRegister();\n \n+        // 2C5H5N -> C10H8N2 + H2\n         CHEMICAL_RECIPES.recipeBuilder().duration(300).EUt(95000)\n                 .fluidInputs(Pyridine.getFluid(2000))\n                 .notConsumable(NiAlCatalyst.getItemStack())\n-                .outputs(Bipyridine.getItemStack())\n+                .outputs(Bipyridine.getItemStack(20))\n+                .fluidOutputs(Hydrogen.getFluid(2000))\n                 .buildAndRegister();\n \n+        // C7H5ClO + 2H -> C7H6O + HCl\n         CHEMICAL_RECIPES.recipeBuilder().duration(270).EUt(4800)\n                 .notConsumable(dust, Barite)\n                 .notConsumable(dust, Palladium)\n-                .fluidInputs(BenzoylChloride.getFluid(1000))\n+                .fluidInputs(BenzoylChloride.getFluid(2000))\n                 .fluidInputs(Hydrogen.getFluid(1000))\n                 .fluidOutputs(Benzaldehyde.getFluid(1000))\n                 .fluidOutputs(HydrochloricAcid.getFluid(1000))\n                 .buildAndRegister();\n \n+        // 2C7H6O + C3H6O -> C17H14O + 2H2O TODO Name change\n         CHEMICAL_RECIPES.recipeBuilder().duration(450).EUt(45000)\n-                .fluidInputs(Benzaldehyde.getFluid(1000))\n+                .fluidInputs(Benzaldehyde.getFluid(2000))\n                 .fluidInputs(Acetone.getFluid(1000))\n-                .fluidInputs(Ethanol.getFluid(200))\n-                .input(dust, SodiumHydroxide, 2)\n-                .notConsumable(new IntCircuitIngredient(0))\n-                .fluidOutputs(Dibenzyldieneacetone.getFluid(2000))\n+                .fluidOutputs(Dibenzyldieneacetone.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .buildAndRegister();\n \n+        // Pd + 2Cl -> PdCl2\n         CHEMICAL_RECIPES.recipeBuilder().duration(320).EUt(10000)\n                 .input(dust, Palladium)\n                 .fluidInputs(Chlorine.getFluid(2000))\n-                .outputs(PalladiumChloride.getItemStack())\n+                .outputs(PalladiumChloride.getItemStack(3))\n                 .buildAndRegister();\n \n+        // 3C17H14O + 2PdCl2 -> 4Cl + C51H42O3Pd2\n         CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(140000)\n-                .fluidInputs(Dibenzyldieneacetone.getFluid(2000))\n-                .inputs(PalladiumChloride.getItemStack())\n-                .fluidOutputs(SodiumChlorideSolution.getFluid(2000))\n-                .outputs(PalladiumBisDibenzylidieneacetone.getItemStack())\n+                .fluidInputs(Dibenzyldieneacetone.getFluid(3000))\n+                .inputs(PalladiumChloride.getItemStack(6))\n+                .fluidOutputs(Chlorine.getFluid(4000))\n+                .outputs(PalladiumBisDibenzylidieneacetone.getItemStack(16))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(145).EUt(40000)\n+        // Pt + 4HNO3 + 6HCl -> H2PtCl6 + 4NO2 + 4H2O\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(145).EUt(40000)\n                 .input(dust, Platinum)\n-                .fluidInputs(AquaRegia.getFluid(2000))\n+                .fluidInputs(NitricAcid.getFluid(4000))\n+                .fluidInputs(HydrochloricAcid.getFluid(6000))\n                 .fluidOutputs(ChloroPlatinicAcid.getFluid(1000))\n+                .fluidOutputs(NitrogenDioxide.getFluid(4000))\n+                .fluidOutputs(Water.getFluid(4000))\n                 .buildAndRegister();\n \n+        // H2PtCl6 + 2K -> K2PtCl4 + 2HCl\n         CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(50000)\n-                .fluidInputs(Hydrazine.getFluid(1000))\n                 .fluidInputs(ChloroPlatinicAcid.getFluid(1000))\n-                .input(dust, Potassium)\n-                .outputs(PotassiumTetrachloroplatinate.getItemStack())\n+                .input(dust, Potassium, 2)\n+                .outputs(PotassiumTetrachloroplatinate.getItemStack(7))\n+                .fluidOutputs(HydrochloricAcid.getFluid(2000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(45000)\n+        // Ni + 2Cl -> NiCl2\n+        CHEMICAL_RECIPES.recipeBuilder().duration(60).EUt(30)\n                 .input(dust, Nickel)\n-                .fluidInputs(NitricAcid.getFluid(1000))\n-                .fluidInputs(Phenol.getFluid(1000))\n-                .fluidInputs(PhosphorusTrichloride.getFluid(1000))\n-                .outputs(NickelTriphenylPhosphite.getItemStack())\n+                .fluidInputs(Chlorine.getFluid(2000))\n+                .outputs(NickelChloride.getItemStack(3))\n+                .buildAndRegister();\n+\n+        // NiCl2 -> Ni + 2Cl\n+        ELECTROLYZER_RECIPES.recipeBuilder().duration(60).EUt(30)\n+                .inputs(NickelChloride.getItemStack(3))\n+                .outputs(OreDictUnifier.get(dust, Nickel, 1))\n+                .fluidOutputs(Chlorine.getFluid(2000))\n                 .buildAndRegister();\n \n+        // NiCl2 + 6C6H5OH + 2PCl3 -> C36H30Cl2NiP2 + 6HCl + 6O\n+        CHEMICAL_RECIPES.recipeBuilder().duration(170).EUt(45000)\n+                .inputs(NickelChloride.getItemStack(3))\n+                .fluidInputs(Phenol.getFluid(6000))\n+                .fluidInputs(PhosphorusTrichloride.getFluid(2000))\n+                .outputs(NickelTriphenylPhosphite.getItemStack(16))\n+                .fluidOutputs(HydrochloricAcid.getFluid(6000))\n+                .fluidOutputs(Oxygen.getFluid(6000))\n+                .buildAndRegister();\n+\n+        // 2C4H6 -> C8H12\n         CHEMICAL_RECIPES.recipeBuilder().duration(210).EUt(55000)\n                 .fluidInputs(Butadiene.getFluid(2000))\n                 .notConsumable(NickelTriphenylPhosphite.getItemStack())\n                 .fluidOutputs(Cyclooctadiene.getFluid(1000))\n                 .buildAndRegister();\n \n+        // C8H12 + K2PtCl4 -> C8H12Cl2Pt + 2KCl\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(230).EUt(140000)\n                 .fluidInputs(Cyclooctadiene.getFluid(1000))\n-                .inputs(PotassiumTetrachloroplatinate.getItemStack())\n-                .outputs(Dichlorocycloctadieneplatinium.getItemStack())\n-                .outputs(OreDictUnifier.get(dust, RockSalt, 2))\n+                .inputs(PotassiumTetrachloroplatinate.getItemStack(7))\n+                .outputs(Dichlorocycloctadieneplatinium.getItemStack(23))\n+                .outputs(OreDictUnifier.get(dust, RockSalt, 4))\n                 .buildAndRegister();\n \n+        // 4C12H8I2 + 2C8H12Cl2Pt + 4Cl + 4AgBF4 + 4C3H9SnCl -> C6H4 + 4BF3 + 2C8H16 + 2Pt + 8I\n+        // TODO Very lossy, but way too much going in to make it balanced\n         CHEMICAL_PLANT_RECIPES.recipeBuilder().duration(460).EUt(450000)\n                 .notConsumable(Bipyridine.getItemStack())\n                 .notConsumable(PalladiumBisDibenzylidieneacetone.getItemStack())\n-                .fluidInputs(Silvertetrafluoroborate.getFluid(10))\n-                .inputs(Diiodobiphenyl.getItemStack(5))\n-                .inputs(Dichlorocycloctadieneplatinium.getItemStack(3))\n-                .fluidInputs(ButhylLithium.getFluid(2000))\n-                .fluidInputs(TetramethyltinChloride.getFluid(3000))\n-                .fluidOutputs(Cycloparaphenylene.getFluid(10000))\n+                .inputs(Diiodobiphenyl.getItemStack(4))\n+                .inputs(Dichlorocycloctadieneplatinium.getItemStack(2))\n+                .fluidInputs(Chlorine.getFluid(4000))\n+                .fluidInputs(Silvertetrafluoroborate.getFluid(4000))\n+                .fluidInputs(TetramethyltinChloride.getFluid(4000))\n+                .fluidOutputs(Cycloparaphenylene.getFluid(1000))\n+                .fluidOutputs(BoronFluoride.getFluid(4000))\n+                .fluidOutputs(Oct1ene.getFluid(2000))\n+                .outputs(OreDictUnifier.get(dust, Platinum, 2))\n+                .outputs(OreDictUnifier.get(dust, Iodine, 8))\n                 .buildAndRegister();\n \n         ASSEMBLER_RECIPES.recipeBuilder().duration(320).EUt(200000)\n@@ -218,6 +274,5 @@ public static void init() {\n                 .outputs(OreDictUnifier.get(foil, Graphene))\n                 .fluidOutputs(Cycloparaphenylene.getFluid(250))\n                 .buildAndRegister();\n-\n     }\n }"
  },
  {
    "sha": "538c221345e05d2639f621994007de501477d2d5",
    "filename": "src/main/java/gregicadditions/recipes/chain/NaquadahChain.java",
    "status": "modified",
    "additions": 1,
    "deletions": 11,
    "changes": 12,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/NaquadahChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/NaquadahChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/NaquadahChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -39,14 +39,6 @@ public static void init() {\n                 .EUt(7680)\n                 .duration(100)\n                 .buildAndRegister();\n-        BLAST_RECIPES.recipeBuilder()\n-                .fluidInputs(Oxygen.getFluid(3000))\n-                .input(dust, Antimony, 2)\n-                .outputs(OreDictUnifier.get(dust, AntimonyTrioxide))\n-                .EUt(1980)\n-                .duration(200)\n-                .blastFurnaceTemp(4500)\n-                .buildAndRegister();\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .input(dust, AntimonyTrioxide)\n                 .fluidInputs(HydrofluoricAcid.getFluid(6000))\n@@ -66,8 +58,6 @@ public static void init() {\n                 .fluidInputs(AntimonyPentafluoride.getFluid(1000))\n                 .fluidInputs(HydrofluoricAcid.getFluid(2000))\n                 .fluidOutputs(FluoroantimonicAcid.getFluid(1000))\n-                .fluidOutputs(Hydrogen.getFluid(2000))\n-                .fluidOutputs(Fluorine.getFluid(1000))\n                 .EUt(7680)\n                 .duration(200)\n                 .buildAndRegister();\n@@ -353,7 +343,7 @@ public static void init() {\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(Ammonia.getFluid(1000))\n                 .fluidInputs(NitricAcid.getFluid(1000))\n-                .fluidOutputs(AmmoniaNitrate.getFluid(2000))\n+                .fluidOutputs(AmmoniaNitrate.getFluid(1000))\n                 .EUt(480)\n                 .duration(250)\n                 .buildAndRegister();"
  },
  {
    "sha": "44f6ea66a7cfaf58579db63000ab4b2a050179d2",
    "filename": "src/main/java/gregicadditions/recipes/chain/NiobiumTantalumChain.java",
    "status": "modified",
    "additions": 119,
    "deletions": 90,
    "changes": 209,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/NiobiumTantalumChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/NiobiumTantalumChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/NiobiumTantalumChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -10,235 +10,264 @@\n \n public class NiobiumTantalumChain {\n     public static void init() {\n+\n+        // MnO2 + sugar(tiny) -> H2SO4 + CO2 + MnSO4\n+        // weird, but probably fine\n         BLAST_RECIPES.recipeBuilder().duration(340).EUt(500).blastFurnaceTemp(1500)\n-                .input(dust, Pyrolusite)\n+                .input(dust, Pyrolusite, 3)\n                 .input(dustTiny, Sugar)\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n                 .fluidOutputs(CarbonDioxide.getFluid(111))\n-                .outputs(ManganeseSulfate.getItemStack(2))\n+                .outputs(ManganeseSulfate.getItemStack(6))\n                 .buildAndRegister();\n+\n+        // MnCO3 + sugar(tiny) -> H2SO4 + CO2 + MnSO4\n+        // weird, but probably fine\n         BLAST_RECIPES.recipeBuilder().duration(340).EUt(500).blastFurnaceTemp(1500)\n-                .input(dust, Rhodocrosite)\n+                .input(dust, Rhodocrosite, 5)\n                 .input(dustTiny, Sugar)\n                 .fluidInputs(SulfuricAcid.getFluid(1000))\n                 .fluidOutputs(CarbonDioxide.getFluid(1111))\n-                .outputs(ManganeseSulfate.getItemStack(2))\n+                .outputs(ManganeseSulfate.getItemStack(6))\n                 .buildAndRegister();\n \n+        // MnSO4 -> Mn + S + 4O\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(400).EUt(500)\n-                .inputs(ManganeseSulfate.getItemStack(2))\n+                .inputs(ManganeseSulfate.getItemStack(6))\n                 .outputs(OreDictUnifier.get(dust, Manganese))\n                 .outputs(OreDictUnifier.get(dust, Sulfur))\n                 .fluidOutputs(Oxygen.getFluid(4000))\n                 .buildAndRegister();\n \n+        // SnO2 + C -> H2O? + CokePellets\n         MIXER_RECIPES.recipeBuilder().duration(340).EUt(420)\n-                .input(dust, Cassiterite)\n+                .input(dust, Cassiterite, 2)\n                 .input(dust, Coke)\n                 .fluidInputs(DistilledWater.getFluid(1000))\n-                .outputs(CassiteriteCokePellets.getItemStack(3))\n+                .outputs(CassiteriteCokePellets.getItemStack())\n                 .buildAndRegister();\n \n+        // CokePellets -> CO2 + 2Sn + slag\n         BLAST_RECIPES.recipeBuilder().duration(260).EUt(1300).blastFurnaceTemp(1600)\n-                .inputs(CassiteriteCokePellets.getItemStack(2))\n-                .fluidInputs(Oxygen.getFluid(1000))\n+                .inputs(CassiteriteCokePellets.getItemStack())\n                 .fluidOutputs(CarbonDioxide.getFluid(1000))\n-                .outputs(OreDictUnifier.get(ingot, Tin))\n+                .outputs(OreDictUnifier.get(ingot, Tin, 2))\n                 .outputs(TinSlag.getItemStack())\n                 .buildAndRegister();\n \n+        // 6slag -> ash + ?\n         CENTRIFUGE_RECIPES.recipeBuilder().duration(180).EUt(500)\n                 .inputs(TinSlag.getItemStack(6))\n                 .outputs(OreDictUnifier.get(dust, DarkAsh))\n                 .outputs(NbTaContainingDust.getItemStack())\n                 .buildAndRegister();\n \n+        // ? + C + SiO2 -> CO2 + FeSiO3 + (Nb2O5)(Ta2O5)\n         BLAST_RECIPES.recipeBuilder().duration(260).EUt(1300).blastFurnaceTemp(1600)\n                 .inputs(NbTaContainingDust.getItemStack())\n                 .input(dust, Carbon)\n-                .input(dust, SiliconDioxide, 2)\n-                .fluidInputs(Oxygen.getFluid(1000))\n+                .input(dust, SiliconDioxide, 3)\n                 .fluidOutputs(CarbonDioxide.getFluid(1000))\n-                .outputs(OreDictUnifier.get(ingot, Ferrosilite, 2))\n+                .outputs(OreDictUnifier.get(ingot, Ferrosilite, 5))\n                 .outputs(NiobiumTantalumOxide.getItemStack())\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(2400)\n-                .fluidInputs(HydrofluoricAcid.getFluid(12000))\n+        // 19HF + (Nb2O5)(Ta2O5) -> AlF3 + TODO\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(2400)\n+                .fluidInputs(HydrofluoricAcid.getFluid(19000))\n                 .inputs(NiobiumTantalumOxide.getItemStack())\n-                .fluidOutputs(SiliconFluoride.getFluid(1000))\n                 .outputs(AluminiumTrifluoride.getItemStack())\n+                .fluidOutputs(SiliconFluoride.getFluid(1000))\n                 .fluidOutputs(NbTaFluorideMix.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(7500))\n                 .buildAndRegister();\n \n+        // BaO + O -> BaO2\n         BLAST_RECIPES.recipeBuilder().duration(230).EUt(1300).blastFurnaceTemp(2300)\n-                .inputs(BariumOxide.getItemStack())\n+                .inputs(BariumOxide.getItemStack(2))\n                 .fluidInputs(Oxygen.getFluid(1000))\n-                .outputs(BariumPeroxide.getItemStack())\n+                .outputs(BariumPeroxide.getItemStack(3))\n                 .buildAndRegister();\n \n         BLAST_RECIPES.recipeBuilder().duration(340).EUt(1000).blastFurnaceTemp(3400)\n-                .input(dust, Columbite, 2)\n+                .input(dust, Columbite)\n                 .inputs(BariumPeroxide.getItemStack())\n                 .input(dust, SodiumHydroxide)\n-                .fluidInputs(Water.getFluid(1000))\n-                .outputs(FusedColumbite.getItemStack(2))\n-                .outputs(ColumbiteMinorOxideResidue.getItemStack(3))\n+                .fluidOutputs(Water.getFluid(500))\n+                .outputs(FusedColumbite.getItemStack())\n+                .outputs(ColumbiteMinorOxideResidue.getItemStack())\n                 .buildAndRegister();\n \n         CHEMICAL_BATH_RECIPES.recipeBuilder().duration(240).EUt(1200)\n-                .inputs(FusedColumbite.getItemStack(3))\n-                .fluidInputs(SulfuricAcid.getFluid(1000))\n-                .outputs(LeachedColumbite.getItemStack(2))\n-                .outputs(IronSulfateDust.getItemStack(2))\n+                .inputs(FusedColumbite.getItemStack())\n+                .fluidInputs(SulfuricAcid.getFluid(4000))\n+                .outputs(LeachedColumbite.getItemStack())\n+                .outputs(IronSulfateDust.getItemStack(12))\n+                .outputs(OreDictUnifier.get(dust, SodiumSulfate, 14))\n                 .buildAndRegister();\n \n+        // FeSO4 -> Fe + S + 4O\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(400).EUt(500)\n-                .inputs(IronSulfateDust.getItemStack(2))\n+                .inputs(IronSulfateDust.getItemStack(6))\n                 .outputs(OreDictUnifier.get(dust, Iron))\n                 .outputs(OreDictUnifier.get(dust, Sulfur))\n                 .fluidOutputs(Oxygen.getFluid(4000))\n                 .buildAndRegister();\n \n         CENTRIFUGE_RECIPES.recipeBuilder().duration(260).EUt(850)\n-                .inputs(ColumbiteMinorOxideResidue.getItemStack(3))\n-                .outputs(BariumOxide.getItemStack(1))\n-                .chancedOutput(OreDictUnifier.get(dust, Cassiterite), 3500, 200)\n-                .chancedOutput(OreDictUnifier.get(dust, TungstenTrioxide), 3500, 200)\n-                .chancedOutput(Alumina.getItemStack(), 3500, 200)\n+                .inputs(ColumbiteMinorOxideResidue.getItemStack())\n+                .outputs(BariumOxide.getItemStack())\n+                .chancedOutput(OreDictUnifier.get(dust, Cassiterite), 1000, 75)\n+                .chancedOutput(OreDictUnifier.get(dust, TungstenTrioxide), 1000, 75)\n+                .chancedOutput(Alumina.getItemStack(), 1000, 75)\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(1230)\n                 .inputs(LeachedColumbite.getItemStack())\n-                .fluidInputs(HydrofluoricAcid.getFluid(5000))\n-                .fluidOutputs(FluoroniobicAcid.getFluid(1000))\n+                .fluidInputs(HydrofluoricAcid.getFluid(10400))\n+                .fluidOutputs(FluoroniobicAcid.getFluid(2000))\n+                .fluidOutputs(Water.getFluid(3200))\n                 .buildAndRegister();\n \n+        // Ta + BaO2 + NaOH -> 0.5H2O + TODO\n         BLAST_RECIPES.recipeBuilder().duration(340).EUt(1000).blastFurnaceTemp(3400)\n-                .input(dust, Tantalite, 2)\n+                .input(dust, Tantalite)\n                 .inputs(BariumPeroxide.getItemStack())\n                 .input(dust, SodiumHydroxide)\n-                .fluidInputs(Water.getFluid(1000))\n-                .outputs(FusedTantalite.getItemStack(2))\n-                .outputs(TantaliteMinorOxideResidue.getItemStack(3))\n+                .fluidOutputs(Water.getFluid(500))\n+                .outputs(FusedTantalite.getItemStack())\n+                .outputs(TantaliteMinorOxideResidue.getItemStack())\n                 .buildAndRegister();\n \n         CHEMICAL_BATH_RECIPES.recipeBuilder().duration(240).EUt(1200)\n-                .inputs(FusedTantalite.getItemStack(3))\n-                .fluidInputs(SulfuricAcid.getFluid(1000))\n-                .outputs(LeachedTantalite.getItemStack(2))\n-                .outputs(ManganeseSulfate.getItemStack(2))\n+                .inputs(FusedTantalite.getItemStack())\n+                .fluidInputs(SulfuricAcid.getFluid(4000))\n+                .outputs(LeachedTantalite.getItemStack())\n+                .outputs(OreDictUnifier.get(dust, SodiumSulfate, 14))\n+                .outputs(ManganeseSulfate.getItemStack(12))\n                 .buildAndRegister();\n \n         CENTRIFUGE_RECIPES.recipeBuilder().duration(260).EUt(850)\n-                .inputs(TantaliteMinorOxideResidue.getItemStack(3))\n-                .outputs(BariumOxide.getItemStack(1))\n-                .chancedOutput(OreDictUnifier.get(dust, CubicZirconia), 3500, 200)\n-                .chancedOutput(OreDictUnifier.get(dust, Rutile), 3500, 200)\n-                .chancedOutput(OreDictUnifier.get(dust, SiliconDioxide), 3500, 200)\n+                .inputs(TantaliteMinorOxideResidue.getItemStack())\n+                .outputs(BariumOxide.getItemStack())\n+                .chancedOutput(OreDictUnifier.get(dust, CubicZirconia), 1000, 75)\n+                .chancedOutput(OreDictUnifier.get(dust, Rutile), 1000, 75)\n+                .chancedOutput(OreDictUnifier.get(dust, SiliconDioxide), 1000, 75)\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(1230)\n                 .inputs(LeachedTantalite.getItemStack())\n-                .fluidInputs(HydrofluoricAcid.getFluid(5000))\n-                .fluidOutputs(FluorotantalicAcid.getFluid(1000))\n+                .fluidInputs(HydrofluoricAcid.getFluid(13600))\n+                .fluidOutputs(FluorotantalicAcid.getFluid(2000))\n+                .fluidOutputs(Water.getFluid(4800))\n                 .buildAndRegister();\n \n+        // C12H27O4P + C6H12O -> C18H39O5P\n         MIXER_RECIPES.recipeBuilder().duration(220).EUt(1500)\n                 .fluidInputs(TributylPhosphate.getFluid(1000))\n                 .fluidInputs(MethylIsobutylKetone.getFluid(1000))\n                 .fluidOutputs(NbTaSeparationMixture.getFluid(2000))\n                 .buildAndRegister();\n \n         BLAST_RECIPES.recipeBuilder().duration(350).EUt(1850).blastFurnaceTemp(2700)\n-                .input(dust, Pyrochlore, 3)\n+                .input(dust, Pyrochlore, 6)\n                 .fluidInputs(SulfuricAcid.getFluid(2000))\n-                .outputs(AcidicLeachedPyrochlore.getItemStack(2))\n+                .outputs(AcidicLeachedPyrochlore.getItemStack(6))\n                 .fluidOutputs(REEThUSulfateSolution.getFluid(1000))\n                 .buildAndRegister();\n \n-        CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1200)\n-                .inputs(AcidicLeachedPyrochlore.getItemStack(2))\n-                .fluidInputs(Water.getFluid(3000))\n-                .fluidInputs(SulfuricAcid.getFluid(1000))\n-                .fluidOutputs(HydrofluoricAcid.getFluid(3000))\n-                .fluidOutputs(AlkalineEarthSulfateSolution.getFluid(2000))\n-                .outputs(LeachedPyrochlore.getItemStack())\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(240).EUt(1200)\n+                .inputs(AcidicLeachedPyrochlore.getItemStack(3))\n+                .fluidInputs(HydrogenPeroxide.getFluid(3000))\n+                .fluidInputs(SulfuricAcid.getFluid(12000))\n+                .fluidOutputs(HydrofluoricAcid.getFluid(13000))\n+                .fluidOutputs(AlkalineEarthSulfateSolution.getFluid(8000))\n+                .fluidOutputs(Oxygen.getFluid(3000))\n+                .outputs(LeachedPyrochlore.getItemStack(3))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(180).EUt(1230)\n                 .inputs(LeachedPyrochlore.getItemStack())\n-                .fluidInputs(HydrofluoricAcid.getFluid(5000))\n-                .fluidOutputs(FluoroniobicAcid.getFluid(1000))\n+                .fluidInputs(HydrofluoricAcid.getFluid(10400))\n+                .fluidOutputs(FluoroniobicAcid.getFluid(2000))\n+                .fluidOutputs(Water.getFluid(3200))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(160).EUt(680)\n-                .fluidInputs(REEThUSulfateSolution.getFluid(1000))\n-                .fluidInputs(NitricAcid.getFluid(1000))\n+                .fluidInputs(REEThUSulfateSolution.getFluid(2000))\n+                .fluidInputs(NitricAcid.getFluid(7000))\n                 .outputs(UranylThoriumNitrate.getItemStack())\n                 .fluidOutputs(RareEarthNitrateSolution.getFluid(1000))\n+                .fluidOutputs(SulfuricAcid.getFluid(4000))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(280).EUt(750)\n                 .fluidInputs(RareEarthNitrateSolution.getFluid(1000))\n-                .fluidInputs(HydrochloricAcid.getFluid(1000))\n-                .fluidOutputs(NitricAcid.getFluid(1000))\n+                .fluidInputs(HydrochloricAcid.getFluid(3000))\n+                .fluidOutputs(NitricAcid.getFluid(3000))\n                 .fluidOutputs(RareEarthChloridesSolution.getFluid(1000))\n                 .buildAndRegister();\n \n         CENTRIFUGE_RECIPES.recipeBuilder().duration(380).EUt(1600)\n-                .fluidInputs(AlkalineEarthSulfateSolution.getFluid(6000))\n-                .fluidOutputs(SulfuricAcid.getFluid(3000))\n-                .outputs(OreDictUnifier.get(dust, Barite))\n-                .outputs(OreDictUnifier.get(dust, Gypsum))\n-                .outputs(StrontiumSulfate.getItemStack())\n-                .outputs(OreDictUnifier.get(dustTiny, Radium))\n+                .fluidInputs(AlkalineEarthSulfateSolution.getFluid(8000))\n+                .fluidOutputs(Water.getFluid(8000))\n+                .outputs(OreDictUnifier.get(dust, Barite, 3))\n+                .outputs(OreDictUnifier.get(dust, Gypsum, 6))\n+                .outputs(StrontiumSulfate.getItemStack(3))\n+                .outputs(OreDictUnifier.get(dustTiny, Radium, 3))\n                 .buildAndRegister();\n \n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(1900)\n-                .fluidInputs(FluoroniobicAcid.getFluid(3000))\n-                .fluidInputs(NbTaSeparationMixture.getFluid(400))\n-                .fluidOutputs(OxypentafluoroNiobate.getFluid(2700))\n-                .fluidOutputs(HeptafluoroTantalate.getFluid(300))\n+                .fluidInputs(FluoroniobicAcid.getFluid(10000))\n+                .fluidInputs(NbTaSeparationMixture.getFluid(1000))\n+                .fluidOutputs(OxypentafluoroNiobate.getFluid(9000))\n+                .fluidOutputs(HeptafluoroTantalate.getFluid(1000))\n                 .buildAndRegister();\n \n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(1900)\n-                .fluidInputs(NbTaFluorideMix.getFluid(3000))\n-                .fluidInputs(NbTaSeparationMixture.getFluid(400))\n-                .fluidOutputs(OxypentafluoroNiobate.getFluid(1500))\n-                .fluidOutputs(HeptafluoroTantalate.getFluid(1500))\n+                .fluidInputs(NbTaFluorideMix.getFluid(2000))\n+                .fluidInputs(NbTaSeparationMixture.getFluid(200))\n+                .fluidOutputs(OxypentafluoroNiobate.getFluid(1000))\n+                .fluidOutputs(HeptafluoroTantalate.getFluid(1000))\n                 .buildAndRegister();\n \n+        // ? + ? -> H2NbOF5 + 9H2TaF7\n         LARGE_CHEMICAL_RECIPES.recipeBuilder().duration(350).EUt(1900)\n-                .fluidInputs(FluorotantalicAcid.getFluid(3000))\n-                .fluidInputs(NbTaSeparationMixture.getFluid(400))\n-                .fluidOutputs(OxypentafluoroNiobate.getFluid(300))\n-                .fluidOutputs(HeptafluoroTantalate.getFluid(2700))\n+                .fluidInputs(FluorotantalicAcid.getFluid(10000))\n+                .fluidInputs(NbTaSeparationMixture.getFluid(1000))\n+                .fluidOutputs(OxypentafluoroNiobate.getFluid(1000))\n+                .fluidOutputs(HeptafluoroTantalate.getFluid(9000))\n                 .buildAndRegister();\n \n+        // H2NbOF5 + 2KF -> K2NbF7 + H2O\n         CHEMICAL_RECIPES.recipeBuilder().duration(270).EUt(1400)\n                 .fluidInputs(OxypentafluoroNiobate.getFluid(1000))\n-                .input(dust, PotassiumFluoride, 2)\n-                .outputs(PotasssiumFluoroNiobate.getItemStack(1))\n+                .input(dust, PotassiumFluoride, 4)\n+                .outputs(PotasssiumFluoroNiobate.getItemStack(10))\n+                .fluidOutputs(Water.getFluid(1000))\n                 .buildAndRegister();\n \n+        // H2TaF7 + 2KOH -> K2TaF7 + 2H2O\n         CHEMICAL_RECIPES.recipeBuilder().duration(270).EUt(1400)\n                 .fluidInputs(HeptafluoroTantalate.getFluid(1000))\n-                .input(dust, PotassiumFluoride, 2)\n-                .outputs(PotasssiumFluoroTantalate.getItemStack(1))\n+                .fluidInputs(PotassiumHydroxide.getFluid(2000))\n+                .outputs(PotasssiumFluoroTantalate.getItemStack(10))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .buildAndRegister();\n \n+        // K2NbF7 + 5Na -> 5NaF + 2KF + Nb\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(360).EUt(1900)\n-                .inputs(PotasssiumFluoroNiobate.getItemStack())\n-                .fluidInputs(Sodium.getFluid(720))\n+                .inputs(PotasssiumFluoroNiobate.getItemStack(10))\n+                .fluidInputs(Sodium.getFluid(5000))\n                 .outputs(OreDictUnifier.get(dust, SodiumFluoride, 5))\n                 .outputs(OreDictUnifier.get(dust, PotassiumFluoride, 2))\n                 .outputs(OreDictUnifier.get(dust, Niobium))\n                 .buildAndRegister();\n \n+        // K2TaF7 + 5Na -> 5NaF + 2KF + Ta\n         ELECTROLYZER_RECIPES.recipeBuilder().duration(360).EUt(1900)\n-                .inputs(PotasssiumFluoroTantalate.getItemStack())\n-                .fluidInputs(Sodium.getFluid(720))\n+                .inputs(PotasssiumFluoroTantalate.getItemStack(10))\n+                .fluidInputs(Sodium.getFluid(5000))\n                 .outputs(OreDictUnifier.get(dust, SodiumFluoride, 5))\n                 .outputs(OreDictUnifier.get(dust, PotassiumFluoride, 2))\n                 .outputs(OreDictUnifier.get(dust, Tantalum))"
  },
  {
    "sha": "b77856b6e0fd852108ed356a0263323c1622084b",
    "filename": "src/main/java/gregicadditions/recipes/chain/NuclearChain.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/NuclearChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/NuclearChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/NuclearChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -101,8 +101,8 @@ public static void init() {\n         CHEMICAL_RECIPES.recipeBuilder().duration(300)\n                 .fluidInputs(LithiumHydroxideSolution.getFluid(1000))\n                 .fluidInputs(HydrofluoricAcid.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, LithiumFluoride))\n-                .fluidOutputs(Water.getFluid(1000))\n+                .outputs(OreDictUnifier.get(dust, LithiumFluoride, 2))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder().duration(300)\n@@ -125,8 +125,8 @@ public static void init() {\n                 .buildAndRegister();\n         CHEMICAL_RECIPES.recipeBuilder().duration(300)\n                 .input(dust, Beryllium)\n-                .fluidInputs(Fluorine.getFluid(1000))\n-                .outputs(OreDictUnifier.get(dust, BerylliumFluoride))\n+                .fluidInputs(Fluorine.getFluid(2000))\n+                .outputs(OreDictUnifier.get(dust, BerylliumFluoride, 3))\n                 .buildAndRegister();\n         MIXER_RECIPES.recipeBuilder().duration(600).EUt(64)\n                 .input(dust, LithiumFluoride)"
  },
  {
    "sha": "f7297a5ba6321d3ecd21ec93a09238dd965f8bad",
    "filename": "src/main/java/gregicadditions/recipes/chain/PEEKChain.java",
    "status": "modified",
    "additions": 78,
    "deletions": 35,
    "changes": 113,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/PEEKChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/PEEKChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/PEEKChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -4,81 +4,113 @@\n \n import static gregicadditions.GAMaterials.*;\n import static gregicadditions.recipes.GARecipeMaps.LARGE_CHEMICAL_RECIPES;\n-import static gregicadditions.recipes.GARecipeMaps.LARGE_MIXER_RECIPES;\n import static gregtech.api.recipes.RecipeMaps.*;\n import static gregtech.api.unification.material.Materials.*;\n import static gregtech.api.unification.ore.OrePrefix.dust;\n+import static gregtech.api.unification.ore.OrePrefix.plate;\n \n public class PEEKChain {\n     public static void init() {\n+\n+        // Na2B4O7(H2O)10 + 2HCl -> 4H3BO3 + 5H2O + 2NaCl\n         CHEMICAL_RECIPES.recipeBuilder()\n-                .input(dust, Borax)\n+                .input(dust, Borax, 23)\n                 .fluidInputs(HydrochloricAcid.getFluid(2000))\n                 .fluidOutputs(BoricAcid.getFluid(4000))\n                 .fluidOutputs(Water.getFluid(5000))\n-                .outputs(OreDictUnifier.get(dust, Salt))\n+                .outputs(OreDictUnifier.get(dust, Salt, 4))\n                 .EUt(7680)\n                 .duration(150)\n                 .buildAndRegister();\n-        LARGE_MIXER_RECIPES.recipeBuilder()\n+\n+        // H3BO3 + 4HF -> HBF4 + 3H2O\n+        CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(BoricAcid.getFluid(1000))\n-                .fluidInputs(Water.getFluid(1000))\n-                .fluidInputs(HydrofluoricAcid.getFluid(1000))\n-                .fluidOutputs(FluoroBoricAcid.getFluid(3000))\n+                .fluidInputs(HydrofluoricAcid.getFluid(4000))\n+                .fluidOutputs(FluoroBoricAcid.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(3000))\n                 .EUt(500000)\n                 .duration(10)\n                 .buildAndRegister();\n-        LARGE_MIXER_RECIPES.recipeBuilder()\n+\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n                 .input(dust, Cobalt)\n-                .input(dust, Carbon)\n+                .input(dust, Charcoal, 2)\n+                .input(plate, Steel)\n                 .fluidInputs(Acetylene.getFluid(1000))\n-                .fluidOutputs(CoCABCatalyst.getFluid(3000))\n+                .fluidInputs(Steam.getFluid(1000))\n+                .fluidOutputs(Hydrogen.getFluid(4000))\n+                .fluidOutputs(CarbonMonoxde.getFluid(1000))\n+                .outputs(CoAcABCatalyst.getItemStack())\n                 .EUt(500000)\n                 .duration(10)\n                 .buildAndRegister();\n+\n+        // H2O + NaNO3 -> NaNO3(H2O)\n         MIXER_RECIPES.recipeBuilder()\n-                .fluidInputs(Water.getFluid(10000))\n-                .input(dust, SodiumNitrate, 10)\n-                .fluidOutputs(SodiumNitrateSolution.getFluid(20000))\n+                .fluidInputs(Water.getFluid(1000))\n+                .input(dust, SodiumNitrate, 5)\n+                .fluidOutputs(SodiumNitrateSolution.getFluid(1000))\n                 .EUt(122880)\n-                .duration(20)\n+                .duration(2)\n                 .buildAndRegister();\n+\n+        // NaNO3(H2O) -> NaNO2 + H2O + O\n         CHEMICAL_RECIPES.recipeBuilder()\n-                .fluidInputs(SodiumNitrateSolution.getFluid(3000))\n-                .fluidInputs(CoCABCatalyst.getFluid(10))\n-                .outputs(SodiumNitrite.getItemStack())\n+                .fluidInputs(SodiumNitrateSolution.getFluid(1000))\n+                .notConsumable(CoAcABCatalyst.getItemStack())\n+                .outputs(SodiumNitrite.getItemStack(4))\n                 .fluidOutputs(Oxygen.getFluid(1000))\n                 .fluidOutputs(Water.getFluid(1000))\n                 .EUt(500000)\n-                .duration(50)\n+                .duration(20)\n                 .buildAndRegister();\n-        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n+\n+        // HBF4 + HCl + C6H5NH2 + NaNO2 -> NaCl + C6H5BF4N2 + 2H2O\n+        CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(FluoroBoricAcid.getFluid(1000))\n                 .fluidInputs(HydrochloricAcid.getFluid(1000))\n                 .fluidInputs(Aniline.getFluid(1000))\n-                .inputs(SodiumNitrite.getItemStack())\n-                .outputs(OreDictUnifier.get(dust, Salt))\n-                .fluidOutputs(BenzenediazoniumTetrafluoroborate.getFluid(3000))\n+                .inputs(SodiumNitrite.getItemStack(4))\n+                .outputs(OreDictUnifier.get(dust, Salt, 2))\n+                .fluidOutputs(BenzenediazoniumTetrafluoroborate.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .duration(150)\n                 .EUt(500000)\n                 .buildAndRegister();\n+\n+        // C6H5BF4N2 -> BF3 + 2N + C6H5F\n         DISTILLATION_RECIPES.recipeBuilder()\n-                .fluidInputs(BenzenediazoniumTetrafluoroborate.getFluid(3000))\n+                .fluidInputs(BenzenediazoniumTetrafluoroborate.getFluid(1000))\n                 .fluidOutputs(BoronFluoride.getFluid(1000))\n-                .fluidOutputs(Nitrogen.getFluid(1000))\n+                .fluidOutputs(Nitrogen.getFluid(2000))\n                 .fluidOutputs(FluoroBenzene.getFluid(1000))\n                 .EUt(500000)\n                 .duration(100)\n                 .buildAndRegister();\n+\n+        // C6H5F + CH4 + SbHF6 -> C7H7F + 3F + SbF3\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(FluoroBenzene.getFluid(1000))\n                 .fluidInputs(Methane.getFluid(1000))\n                 .fluidInputs(FluoroantimonicAcid.getFluid(1000))\n-                .fluidOutputs(Fluorotoluene.getFluid(2000))\n-                .outputs(AntimonyTrifluoride.getItemStack(1))\n+                .fluidOutputs(Fluorotoluene.getFluid(1000))\n+                .fluidOutputs(Fluorine.getFluid(3000))\n+                .outputs(AntimonyTrifluoride.getItemStack(4))\n                 .EUt(500000)\n                 .duration(150)\n                 .buildAndRegister();\n+\n+        // SbF3 -> Sb + 3F\n+        ELECTROLYZER_RECIPES.recipeBuilder()\n+                .inputs(AntimonyTrifluoride.getItemStack(4))\n+                .outputs(OreDictUnifier.get(dust, Antimony))\n+                .fluidOutputs(Fluorine.getFluid(3000))\n+                .EUt(48)\n+                .duration(360)\n+                .buildAndRegister();\n+\n+        // Zn + Fe + Al + Cl -> ZnFeAlCl\n         MIXER_RECIPES.recipeBuilder()\n                 .input(dust, Zinc)\n                 .input(dust, Iron)\n@@ -88,40 +120,51 @@ public static void init() {\n                 .EUt(15000)\n                 .duration(500)\n                 .buildAndRegister();\n+\n+        // H2O + 6Cl + C7H7F + C6H5F -> C13H8OF2 + 6HCl\n         LARGE_CHEMICAL_RECIPES.recipeBuilder()\n-                .fluidInputs(Water.getFluid(1500))\n-                .fluidInputs(Chlorine.getFluid(1500))\n+                .fluidInputs(Water.getFluid(1000))\n+                .fluidInputs(Chlorine.getFluid(6000))\n                 .fluidInputs(Fluorotoluene.getFluid(1000))\n                 .fluidInputs(FluoroBenzene.getFluid(1000))\n                 .notConsumable(ZnFeAlClCatalyst.getItemStack())\n-                .outputs(Difluorobenzophenone.getItemStack(1))\n-                .fluidOutputs(HydrochloricAcid.getFluid(3000))\n+                .outputs(Difluorobenzophenone.getItemStack(24))\n+                .fluidOutputs(HydrochloricAcid.getFluid(6000))\n                 .EUt(500000)\n                 .duration(100)\n                 .buildAndRegister();\n+\n+        // C6H6O2 + C13H8OF2 + Na2CO3 -> [(OC6H4)3C]n + H2O + 2NaF\n+        // Not perfectly balanced, but is probably fine\n         LARGE_CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(Hydroquinone.getFluid(1000))\n                 .inputs(Difluorobenzophenone.getItemStack())\n-                .input(dust, SodaAsh)\n+                .input(dust, SodaAsh, 6)\n                 .fluidOutputs(Polyetheretherketone.getFluid(2592))\n-                .outputs(OreDictUnifier.get(dust, SodiumFluoride))\n+                .fluidOutputs(Water.getFluid(1000))\n+                .fluidOutputs(CarbonDioxide.getFluid(1000))\n+                .outputs(OreDictUnifier.get(dust, SodiumFluoride, 4))\n                 .EUt(500000)\n                 .duration(250)\n                 .buildAndRegister();\n+\n+        // C3H6 + C6H6 + 3O -> C3H6O + C6H6O2\n         LARGE_CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(Propene.getFluid(1000))\n                 .fluidInputs(Benzene.getFluid(1000))\n-                .fluidInputs(Oxygen.getFluid(1000))\n+                .fluidInputs(Oxygen.getFluid(3000))\n                 .fluidOutputs(Acetone.getFluid(1000))\n                 .fluidOutputs(Hydroquinone.getFluid(500))\n                 .fluidOutputs(Resorcinol.getFluid(500))\n                 .EUt(30000)\n                 .duration(800)\n                 .buildAndRegister();\n+\n+        // MgCl2Br -> Mg + Cl2 + Br\n         ELECTROLYZER_RECIPES.recipeBuilder()\n-                .inputs(MgClBrominide.getItemStack(3))\n+                .inputs(MgClBrominide.getItemStack(4))\n                 .outputs(OreDictUnifier.get(dust, Magnesium))\n-                .fluidOutputs(Chlorine.getFluid(1000))\n+                .fluidOutputs(Chlorine.getFluid(2000))\n                 .fluidOutputs(Bromine.getFluid(1000))\n                 .EUt(1920)\n                 .duration(100)"
  },
  {
    "sha": "7a4a303c238376da8813fe25873e2253fb8de1cb",
    "filename": "src/main/java/gregicadditions/recipes/chain/PlasticChain.java",
    "status": "modified",
    "additions": 20,
    "deletions": 27,
    "changes": 47,
    "blob_url": "https://github.com/Gregicality/gregicality/blob/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/PlasticChain.java",
    "raw_url": "https://github.com/Gregicality/gregicality/raw/aab61c806844eb431e22bf8750b928359e737d87/src/main/java/gregicadditions/recipes/chain/PlasticChain.java",
    "contents_url": "https://api.github.com/repos/Gregicality/gregicality/contents/src/main/java/gregicadditions/recipes/chain/PlasticChain.java?ref=aab61c806844eb431e22bf8750b928359e737d87",
    "patch": "@@ -19,45 +19,45 @@ public static void init() {\n \n     public static void polybenzimidazoleInit() {\n         //platics Polybenzimidazole\n-        CHEMICAL_RECIPES.recipeBuilder()\n+        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(Diaminobenzidine.getFluid(1000))\n                 .fluidInputs(Diphenylisophtalate.getFluid(1000))\n-                .fluidOutputs(Phenol.getFluid(1000))\n+                .fluidOutputs(Phenol.getFluid(2000))\n                 .fluidOutputs(Polybenzimidazole.getFluid(1000))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .EUt(7500)\n                 .duration(100)\n                 .buildAndRegister();\n \n         LARGE_CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(Phenol.getFluid(2000))\n-                .fluidInputs(SulfuricAcid.getFluid(1000))\n                 .fluidInputs(PhthalicAcid.getFluid(1000))\n                 .fluidOutputs(Diphenylisophtalate.getFluid(1000))\n-                .fluidOutputs(DilutedSulfuricAcid.getFluid(3000))\n+                .fluidOutputs(Water.getFluid(2000))\n                 .EUt(7500)\n                 .duration(1000)\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(Methane.getFluid(2000))\n                 .fluidInputs(Benzene.getFluid(1000))\n-                .fluidOutputs(Dimethylbenzene.getFluid(3000))\n+                .fluidOutputs(Dimethylbenzene.getFluid(1000))\n                 .EUt(120)\n                 .duration(4000)\n                 .buildAndRegister();\n \n-        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n-                .input(dustTiny, Potassiumdichromate)\n-                .fluidInputs(Oxygen.getFluid(2000))\n+        CHEMICAL_RECIPES.recipeBuilder()\n+                .notConsumable(dustTiny, Potassiumdichromate)\n+                .fluidInputs(Oxygen.getFluid(6000))\n                 .fluidInputs(Dimethylbenzene.getFluid(1000))\n                 .fluidOutputs(Water.getFluid(2000))\n                 .fluidOutputs(PhthalicAcid.getFluid(1000))\n                 .EUt(1920)\n                 .duration(100)\n                 .buildAndRegister();\n \n-        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n-                .input(dust, Zinc)\n+        CHEMICAL_RECIPES.recipeBuilder()\n+                .notConsumable(dust, Zinc)\n                 .fluidInputs(Ammonia.getFluid(2000))\n                 .fluidInputs(Dichlorobenzidine.getFluid(1000))\n                 .fluidOutputs(Diaminobenzidine.getFluid(1000))\n@@ -67,42 +67,35 @@ public static void polybenzimidazoleInit() {\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder()\n-                .input(dustTiny, Copper)\n-                .fluidInputs(Nitrochlorobenzene.getFluid(1000))\n+                .notConsumable(dustTiny, Copper)\n+                .fluidInputs(Nitrochlorobenzene.getFluid(2000))\n+                .fluidInputs(Hydrogen.getFluid(2000))\n                 .fluidOutputs(Dichlorobenzidine.getFluid(1000))\n+                .fluidOutputs(Oxygen.getFluid(4000))\n                 .EUt(1920)\n                 .duration(200)\n                 .buildAndRegister();\n \n-        ELECTROLYZER_RECIPES.recipeBuilder()\n-                .input(dust, ZincSulfate, 6)\n-                .outputs(OreDictUnifier.get(dust, Zinc))\n-                .outputs(OreDictUnifier.get(dust, Sulfur))\n-                .fluidOutputs(Oxygen.getFluid(4000))\n-                .EUt(90)\n-                .duration(26)\n-                .buildAndRegister();\n-\n         CHEMICAL_RECIPES.recipeBuilder()\n                 .input(dust, Chrome)\n                 .fluidInputs(Oxygen.getFluid(3000))\n-                .outputs(OreDictUnifier.get(dust, ChromiumTrioxide, 1))\n+                .outputs(OreDictUnifier.get(dust, ChromiumTrioxide, 4))\n                 .EUt(60)\n                 .duration(100)\n                 .buildAndRegister();\n \n         CHEMICAL_RECIPES.recipeBuilder()\n-                .input(dust, ChromiumTrioxide, 2)\n-                .input(dust, Saltpeter, 2)\n-                .outputs(OreDictUnifier.get(dust, Potassiumdichromate))\n+                .input(dust, ChromiumTrioxide, 8)\n+                .input(dust, Saltpeter, 10)\n+                .outputs(OreDictUnifier.get(dust, Potassiumdichromate, 11))\n                 .fluidOutputs(NitrogenDioxide.getFluid(2000))\n                 .fluidOutputs(Oxygen.getFluid(1000))\n                 .EUt(480)\n                 .duration(100)\n                 .buildAndRegister();\n \n \n-        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n+        CHEMICAL_RECIPES.recipeBuilder()\n                 .fluidInputs(NitrationMixture.getFluid(1000))\n                 .fluidInputs(Chlorobenzene.getFluid(1000))\n                 .fluidOutputs(Nitrochlorobenzene.getFluid(1000))\n@@ -111,7 +104,7 @@ public static void polybenzimidazoleInit() {\n                 .duration(100)\n                 .buildAndRegister();\n \n-        LARGE_CHEMICAL_RECIPES.recipeBuilder()\n+        CHEMICAL_RECIPES.recipeBuilder()\n                 .notConsumable(new IntCircuitIngredient(1))\n                 .fluidInputs(Benzene.getFluid(1000))\n                 .fluidInputs(Chlorine.getFluid(2000))"
  }
]
