[
  {
    "sha": "1e3557a7be538acb49400fae7e19cacf1738ae3f",
    "filename": "library/common/src/main/java/com/google/android/exoplayer2/text/Cue.java",
    "status": "modified",
    "additions": 25,
    "deletions": 4,
    "changes": 29,
    "blob_url": "https://github.com/google/ExoPlayer/blob/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/common/src/main/java/com/google/android/exoplayer2/text/Cue.java",
    "raw_url": "https://github.com/google/ExoPlayer/raw/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/common/src/main/java/com/google/android/exoplayer2/text/Cue.java",
    "contents_url": "https://api.github.com/repos/google/ExoPlayer/contents/library/common/src/main/java/com/google/android/exoplayer2/text/Cue.java?ref=cf8bc2e682717c02e59e4178b7fd7adf1f17455f",
    "patch": "@@ -269,6 +269,12 @@\n    */\n   public final @VerticalType int verticalType;\n \n+  /**\n+   * The shear angle expressed in graphics coordinates to be applied to this block. This results\n+   * in a skew transform for the block along the inline progression axis.\n+   */\n+  public final float shear;\n+\n   /**\n    * Creates a text cue whose {@link #textAlignment} is null, whose type parameters are set to\n    * {@link #TYPE_UNSET} and whose dimension parameters are set to {@link #DIMEN_UNSET}.\n@@ -370,7 +376,8 @@ public Cue(\n         /* bitmapHeight= */ DIMEN_UNSET,\n         /* windowColorSet= */ false,\n         /* windowColor= */ Color.BLACK,\n-        /* verticalType= */ TYPE_UNSET);\n+        /* verticalType= */ TYPE_UNSET,\n+        0f);\n   }\n \n   /**\n@@ -415,7 +422,8 @@ public Cue(\n         /* bitmapHeight= */ DIMEN_UNSET,\n         windowColorSet,\n         windowColor,\n-        /* verticalType= */ TYPE_UNSET);\n+        /* verticalType= */ TYPE_UNSET,\n+        0f);\n   }\n \n   private Cue(\n@@ -433,7 +441,8 @@ private Cue(\n       float bitmapHeight,\n       boolean windowColorSet,\n       int windowColor,\n-      @VerticalType int verticalType) {\n+      @VerticalType int verticalType,\n+      float shear) {\n     // Exactly one of text or bitmap should be set.\n     if (text == null) {\n       Assertions.checkNotNull(bitmap);\n@@ -455,6 +464,7 @@ private Cue(\n     this.textSizeType = textSizeType;\n     this.textSize = textSize;\n     this.verticalType = verticalType;\n+    this.shear = shear;\n   }\n \n   /** Returns a new {@link Cue.Builder} initialized with the same values as this Cue. */\n@@ -479,6 +489,7 @@ public Builder buildUpon() {\n     private boolean windowColorSet;\n     @ColorInt private int windowColor;\n     @VerticalType private int verticalType;\n+    private float shear;\n \n     public Builder() {\n       text = null;\n@@ -514,6 +525,7 @@ private Builder(Cue cue) {\n       windowColorSet = cue.windowColorSet;\n       windowColor = cue.windowColor;\n       verticalType = cue.verticalType;\n+      shear = cue.shear;\n     }\n \n     /**\n@@ -794,6 +806,14 @@ public Builder setVerticalType(@VerticalType int verticalType) {\n       return this;\n     }\n \n+    /**\n+     * Sets the shear angle for this Cue\n+     */\n+    public Builder setShear(float shear) {\n+      this.shear = shear;\n+      return this;\n+    }\n+\n     /**\n      * Gets the vertical formatting for this Cue.\n      *\n@@ -821,7 +841,8 @@ public Cue build() {\n           bitmapHeight,\n           windowColorSet,\n           windowColor,\n-          verticalType);\n+          verticalType,\n+          shear);\n     }\n   }\n }"
  },
  {
    "sha": "74c5f51f61fd541f30c23380350c1be1f535e882",
    "filename": "library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlDecoder.java",
    "status": "modified",
    "additions": 32,
    "deletions": 1,
    "changes": 33,
    "blob_url": "https://github.com/google/ExoPlayer/blob/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlDecoder.java",
    "raw_url": "https://github.com/google/ExoPlayer/raw/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlDecoder.java",
    "contents_url": "https://api.github.com/repos/google/ExoPlayer/contents/library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlDecoder.java?ref=cf8bc2e682717c02e59e4178b7fd7adf1f17455f",
    "patch": "@@ -81,7 +81,9 @@\n   private static final Pattern OFFSET_TIME =\n       Pattern.compile(\"^([0-9]+(?:\\\\.[0-9]+)?)(h|m|s|ms|f|t)$\");\n   private static final Pattern FONT_SIZE = Pattern.compile(\"^(([0-9]*.)?[0-9]+)(px|em|%)$\");\n-  private static final Pattern PERCENTAGE_COORDINATES =\n+  static final Pattern SIGNED_PERCENTAGE =\n+      Pattern.compile(\"^([-+]?\\\\d+\\\\.?\\\\d*?)%$\");\n+  static final Pattern PERCENTAGE_COORDINATES =\n       Pattern.compile(\"^(\\\\d+\\\\.?\\\\d*?)% (\\\\d+\\\\.?\\\\d*?)%$\");\n   private static final Pattern PIXEL_COORDINATES =\n       Pattern.compile(\"^(\\\\d+\\\\.?\\\\d*?)px (\\\\d+\\\\.?\\\\d*?)px$\");\n@@ -609,6 +611,14 @@ private static TtmlRegion parseRegionAttributes(\n               break;\n           }\n           break;\n+        case TtmlNode.ATTR_TTS_SHEAR:\n+          style = createIfNull(style);\n+          try {\n+            parseShear(attributeValue, style);\n+          } catch (SubtitleDecoderException e) {\n+            Log.w(TAG, \"Failed parsing shear value: \" + attributeValue);\n+          }\n+          break;\n         default:\n           // ignore\n           break;\n@@ -750,6 +760,27 @@ private static void parseFontSize(String expression, TtmlStyle out) throws\n     }\n   }\n \n+  private static void parseShear(String expression, TtmlStyle out) throws\n+      SubtitleDecoderException {\n+    Matcher matcher = SIGNED_PERCENTAGE.matcher(expression);\n+    if (matcher.matches()) {\n+      try {\n+        float value = Float.parseFloat(matcher.group(1));\n+        // https://www.w3.org/TR/2018/REC-ttml2-20181108/#semantics-style-procedures-shear\n+        // If the absolute value of the specified percentage is greater than 100%, then it must be\n+        // interpreted as if 100% were specified with the appropriate sign.\n+        value = Math.max(-100f, value);\n+        value = Math.min(100f, value);\n+        out.setShear(value / 100f);\n+      } catch (NumberFormatException e) {\n+        throw new SubtitleDecoderException(\"Invalid expression for shear: '\" + expression + \"'.\",\n+            e);\n+      }\n+    } else {\n+      throw new SubtitleDecoderException(\"Invalid expression for shear: '\" + expression + \"'.\");\n+    }\n+  }\n+\n   /**\n    * Parses a time expression, returning the parsed timestamp.\n    * <p>"
  },
  {
    "sha": "e74e92832426c892d2b7993ee69e25f056696423",
    "filename": "library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlNode.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/google/ExoPlayer/blob/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlNode.java",
    "raw_url": "https://github.com/google/ExoPlayer/raw/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlNode.java",
    "contents_url": "https://api.github.com/repos/google/ExoPlayer/contents/library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlNode.java?ref=cf8bc2e682717c02e59e4178b7fd7adf1f17455f",
    "patch": "@@ -70,6 +70,7 @@\n   public static final String ATTR_TTS_TEXT_ALIGN = \"textAlign\";\n   public static final String ATTR_TTS_TEXT_COMBINE = \"textCombine\";\n   public static final String ATTR_TTS_WRITING_MODE = \"writingMode\";\n+  public static final String ATTR_TTS_SHEAR = \"shear\";\n \n   // Values for ruby\n   public static final String RUBY_CONTAINER = \"container\";\n@@ -382,6 +383,16 @@ private void applyStyleToOutput(\n     }\n     if (resolvedStyle != null) {\n       TtmlRenderUtil.applyStylesToSpan(text, start, end, resolvedStyle, parent, globalStyles);\n+      if (resolvedStyle.getShear() != 0.0f && TAG_P.equals(tag)) {\n+        // Shear style should only be applied to P nodes\n+        // https://www.w3.org/TR/2018/REC-ttml2-20181108/#style-attribute-shear\n+        // The spec doesn't specify the coordinate system to use for block shear\n+        // however the spec shows examples of how different values are expected to be rendered.\n+        // See: https://www.w3.org/TR/2018/REC-ttml2-20181108/#style-attribute-shear\n+        // https://www.w3.org/TR/2018/REC-ttml2-20181108/#style-attribute-fontShear\n+        // This maps the shear percentage to shear angle in graphics coordinates\n+        regionOutput.setShear(resolvedStyle.getShear() * -90);\n+      }\n       regionOutput.setTextAlignment(resolvedStyle.getTextAlign());\n     }\n   }"
  },
  {
    "sha": "93ed299e6240e6bb8935c8947e60f0c426e24d69",
    "filename": "library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlStyle.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/google/ExoPlayer/blob/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlStyle.java",
    "raw_url": "https://github.com/google/ExoPlayer/raw/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlStyle.java",
    "contents_url": "https://api.github.com/repos/google/ExoPlayer/contents/library/core/src/main/java/com/google/android/exoplayer2/text/ttml/TtmlStyle.java?ref=cf8bc2e682717c02e59e4178b7fd7adf1f17455f",
    "patch": "@@ -86,6 +86,7 @@\n   @RubySpan.Position private int rubyPosition;\n   @Nullable private Layout.Alignment textAlign;\n   @OptionalBoolean private int textCombine;\n+  private float shear;\n \n   public TtmlStyle() {\n     linethrough = UNSPECIFIED;\n@@ -184,6 +185,15 @@ public boolean hasBackgroundColor() {\n     return hasBackgroundColor;\n   }\n \n+  public TtmlStyle setShear(Float shear) {\n+    this.shear = shear;\n+    return this;\n+  }\n+\n+  public float getShear() {\n+    return shear;\n+  }\n+\n   /**\n    * Chains this style to referential style. Local properties which are already set are never\n    * overridden.\n@@ -238,6 +248,9 @@ private TtmlStyle inherit(@Nullable TtmlStyle ancestor, boolean chaining) {\n         fontSizeUnit = ancestor.fontSizeUnit;\n         fontSize = ancestor.fontSize;\n       }\n+      if (shear == 0.0f) {\n+        shear = ancestor.shear;\n+      }\n       // attributes not inherited as of http://www.w3.org/TR/ttml1/\n       if (chaining && !hasBackgroundColor && ancestor.hasBackgroundColor) {\n         setBackgroundColor(ancestor.backgroundColor);"
  },
  {
    "sha": "3a4689224c116ad6cc487c0ffc6c5464304ee77d",
    "filename": "library/core/src/test/java/com/google/android/exoplayer2/text/ttml/TtmlDecoderTest.java",
    "status": "modified",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/google/ExoPlayer/blob/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/core/src/test/java/com/google/android/exoplayer2/text/ttml/TtmlDecoderTest.java",
    "raw_url": "https://github.com/google/ExoPlayer/raw/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/core/src/test/java/com/google/android/exoplayer2/text/ttml/TtmlDecoderTest.java",
    "contents_url": "https://api.github.com/repos/google/ExoPlayer/contents/library/core/src/test/java/com/google/android/exoplayer2/text/ttml/TtmlDecoderTest.java?ref=cf8bc2e682717c02e59e4178b7fd7adf1f17455f",
    "patch": "@@ -24,6 +24,7 @@\n import androidx.test.core.app.ApplicationProvider;\n import androidx.test.ext.junit.runners.AndroidJUnit4;\n import com.google.android.exoplayer2.testutil.TestUtil;\n+import com.google.android.exoplayer2.testutil.truth.SpannedSubject;\n import com.google.android.exoplayer2.text.Cue;\n import com.google.android.exoplayer2.text.Subtitle;\n import com.google.android.exoplayer2.text.SubtitleDecoderException;\n@@ -67,6 +68,7 @@\n   private static final String VERTICAL_TEXT_FILE = \"media/ttml/vertical_text.xml\";\n   private static final String TEXT_COMBINE_FILE = \"media/ttml/text_combine.xml\";\n   private static final String RUBIES_FILE = \"media/ttml/rubies.xml\";\n+  private static final String SHEAR_FILE = \"media/ttml/shear.xml\";\n \n   @Test\n   public void inlineAttributes() throws IOException, SubtitleDecoderException {\n@@ -674,6 +676,44 @@ public void rubies() throws IOException, SubtitleDecoderException {\n     assertThat(sixthCue).hasNoRubySpanBetween(0, sixthCue.length());\n   }\n \n+  /**\n+   * Converts the tts:shear percentage value to a skew angle\n+   * @param percentage\n+   * @return the skew angle\n+   */\n+  private float shearPercentageToSkewAngle(float percentage) {\n+    return percentage * -90;\n+  }\n+\n+  @Test\n+  public void shear() throws IOException, SubtitleDecoderException {\n+    TtmlSubtitle subtitle = getSubtitle(SHEAR_FILE);\n+\n+    Cue firstCue = getOnlyCueAtTimeUs(subtitle, 10_000_000);\n+    assertThat(firstCue.shear).isEqualTo(0f);\n+\n+    Cue secondCue = getOnlyCueAtTimeUs(subtitle, 20_000_000);\n+    assertThat(secondCue.shear).isEqualTo(shearPercentageToSkewAngle(0.1667f));\n+\n+    Cue thirdCue = getOnlyCueAtTimeUs(subtitle, 30_000_000);\n+    assertThat(thirdCue.shear).isEqualTo(shearPercentageToSkewAngle(-0.1667f));\n+\n+    Cue fourthCue = getOnlyCueAtTimeUs(subtitle, 40_000_000);\n+    assertThat(fourthCue.shear).isEqualTo(shearPercentageToSkewAngle(0.1f));\n+\n+    Cue fifthCue = getOnlyCueAtTimeUs(subtitle, 50_000_000);\n+    assertThat(fifthCue.shear).isEqualTo(0.0f);\n+\n+    Cue sixthCue = getOnlyCueAtTimeUs(subtitle, 60_000_000);\n+    assertThat(sixthCue.shear).isEqualTo(0.0f);\n+\n+    Cue seventhCue = getOnlyCueAtTimeUs(subtitle, 70_000_000);\n+    assertThat(seventhCue.shear).isEqualTo(shearPercentageToSkewAngle(1f));\n+\n+    Cue eighthCue = getOnlyCueAtTimeUs(subtitle, 80_000_000);\n+    assertThat(eighthCue.shear).isEqualTo(shearPercentageToSkewAngle(-1f));\n+  }\n+\n   private static Spanned getOnlyCueTextAtTimeUs(Subtitle subtitle, long timeUs) {\n     Cue cue = getOnlyCueAtTimeUs(subtitle, timeUs);\n     assertThat(cue.text).isInstanceOf(Spanned.class);"
  },
  {
    "sha": "3a91c1763b9aa5d1bb7b892b09a080512919aed4",
    "filename": "library/core/src/test/java/com/google/android/exoplayer2/text/ttml/TtmlStyleTest.java",
    "status": "modified",
    "additions": 17,
    "deletions": 1,
    "changes": 18,
    "blob_url": "https://github.com/google/ExoPlayer/blob/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/core/src/test/java/com/google/android/exoplayer2/text/ttml/TtmlStyleTest.java",
    "raw_url": "https://github.com/google/ExoPlayer/raw/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/core/src/test/java/com/google/android/exoplayer2/text/ttml/TtmlStyleTest.java",
    "contents_url": "https://api.github.com/repos/google/ExoPlayer/contents/library/core/src/test/java/com/google/android/exoplayer2/text/ttml/TtmlStyleTest.java?ref=cf8bc2e682717c02e59e4178b7fd7adf1f17455f",
    "patch": "@@ -46,6 +46,7 @@\n   private static final int RUBY_POSITION = RubySpan.POSITION_UNDER;\n   private static final Layout.Alignment TEXT_ALIGN = Layout.Alignment.ALIGN_CENTER;\n   private static final boolean TEXT_COMBINE = true;\n+  public static final float SHEAR_PERCENTAGE = 16f;\n \n   private final TtmlStyle populatedStyle =\n       new TtmlStyle()\n@@ -62,7 +63,8 @@\n           .setRubyType(RUBY_TYPE)\n           .setRubyPosition(RUBY_POSITION)\n           .setTextAlign(TEXT_ALIGN)\n-          .setTextCombine(TEXT_COMBINE);\n+          .setTextCombine(TEXT_COMBINE)\n+          .setShear(SHEAR_PERCENTAGE);\n \n   @Test\n   public void inheritStyle() {\n@@ -86,6 +88,7 @@ public void inheritStyle() {\n     assertWithMessage(\"backgroundColor should not be inherited\")\n         .that(style.hasBackgroundColor())\n         .isFalse();\n+    assertWithMessage(\"shear\").that(style.getShear()).isEqualTo(SHEAR_PERCENTAGE);\n   }\n \n   @Test\n@@ -109,6 +112,7 @@ public void chainStyle() {\n         .that(style.getBackgroundColor())\n         .isEqualTo(BACKGROUND_COLOR);\n     assertWithMessage(\"rubyType should be chained\").that(style.getRubyType()).isEqualTo(RUBY_TYPE);\n+    assertWithMessage(\"shear\").that(style.getShear()).isEqualTo(SHEAR_PERCENTAGE);\n   }\n \n   @Test\n@@ -245,4 +249,16 @@ public void textCombine() {\n     style.setTextCombine(true);\n     assertThat(style.getTextCombine()).isTrue();\n   }\n+\n+  @Test\n+  public void shear() {\n+    TtmlStyle style = new TtmlStyle();\n+    assertThat(style.getShear()).isEqualTo(0f);\n+    style.setShear(101f);\n+    assertThat(style.getShear()).isEqualTo(101f);\n+    style.setShear(-200f);\n+    assertThat(style.getShear()).isEqualTo(-200f);\n+    style.setShear(0.1f);\n+    assertThat(style.getShear()).isEqualTo(0.1f);\n+  }\n }"
  },
  {
    "sha": "a6324f4f1b5aad3f5ff614f329e6d3783f458b6d",
    "filename": "library/ui/src/main/java/com/google/android/exoplayer2/ui/WebViewSubtitleOutput.java",
    "status": "modified",
    "additions": 15,
    "deletions": 5,
    "changes": 20,
    "blob_url": "https://github.com/google/ExoPlayer/blob/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/ui/src/main/java/com/google/android/exoplayer2/ui/WebViewSubtitleOutput.java",
    "raw_url": "https://github.com/google/ExoPlayer/raw/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/library/ui/src/main/java/com/google/android/exoplayer2/ui/WebViewSubtitleOutput.java",
    "contents_url": "https://api.github.com/repos/google/ExoPlayer/contents/library/ui/src/main/java/com/google/android/exoplayer2/ui/WebViewSubtitleOutput.java?ref=cf8bc2e682717c02e59e4178b7fd7adf1f17455f",
    "patch": "@@ -262,9 +262,8 @@ private void updateWebView() {\n         verticalTranslatePercent = lineAnchorTranslatePercent;\n       }\n \n-      SpannedToHtmlConverter.HtmlAndCss htmlAndCss =\n-          SpannedToHtmlConverter.convert(\n-              cue.text, getContext().getResources().getDisplayMetrics().density);\n+      SpannedToHtmlConverter.HtmlAndCss htmlAndCss = SpannedToHtmlConverter\n+          .convert(cue.text, getContext().getResources().getDisplayMetrics().density);\n       for (String cssSelector : cssRuleSets.keySet()) {\n         @Nullable\n         String previousCssDeclarationBlock =\n@@ -285,7 +284,7 @@ private void updateWebView() {\n                       + \"writing-mode:%s;\"\n                       + \"font-size:%s;\"\n                       + \"background-color:%s;\"\n-                      + \"transform:translate(%s%%,%s%%);\"\n+                      + \"transform:translate(%s%%,%s%%)%s;\"\n                       + \"'>\",\n                   positionProperty,\n                   positionPercent,\n@@ -298,7 +297,8 @@ private void updateWebView() {\n                   cueTextSizeCssPx,\n                   windowCssColor,\n                   horizontalTranslatePercent,\n-                  verticalTranslatePercent))\n+                  verticalTranslatePercent,\n+                  getBlockShear(cue)))\n           .append(Util.formatInvariant(\"<span class='%s'>\", DEFAULT_BACKGROUND_CSS_CLASS))\n           .append(htmlAndCss.html)\n           .append(\"</span>\")\n@@ -320,6 +320,16 @@ private void updateWebView() {\n         \"base64\");\n   }\n \n+  private String getBlockShear(Cue cue) {\n+    if (cue.shear != 0.0f) {\n+      String direction =\n+          (cue.verticalType == Cue.VERTICAL_TYPE_LR || cue.verticalType == Cue.VERTICAL_TYPE_RL) ?\n+              \"skewY\" : \"skewX\";\n+      return Util.formatInvariant(\" %s(%.2fdeg)'\", direction, cue.shear);\n+    }\n+    return \"\";\n+  }\n+\n   /**\n    * Converts a text size to a CSS px value.\n    *"
  },
  {
    "sha": "38b867e92fa7b9b35e9eeb0893b354e650596342",
    "filename": "testdata/src/test/assets/media/ttml/shear.xml",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/google/ExoPlayer/blob/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/testdata/src/test/assets/media/ttml/shear.xml",
    "raw_url": "https://github.com/google/ExoPlayer/raw/cf8bc2e682717c02e59e4178b7fd7adf1f17455f/testdata/src/test/assets/media/ttml/shear.xml",
    "contents_url": "https://api.github.com/repos/google/ExoPlayer/contents/testdata/src/test/assets/media/ttml/shear.xml?ref=cf8bc2e682717c02e59e4178b7fd7adf1f17455f",
    "patch": "@@ -0,0 +1,32 @@\n+<tt xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\"\n+  xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\"\n+  xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\"\n+  xmlns=\"http://www.w3.org/ns/ttml\"\n+  xmlns=\"http://www.w3.org/2006/10/ttaf1\">\n+  <body>\n+    <div>\n+      <p begin=\"10s\" end=\"18s\" tts:shear=\"0%\">0%</p>\n+    </div>\n+    <div>\n+      <p begin=\"20s\" end=\"28s\" tts:shear=\"16.67%\">16.67%</p>\n+    </div>\n+    <div>\n+      <p begin=\"30s\" end=\"38s\" tts:shear=\"-16.67%\">-16.67%</p>\n+    </div>\n+    <div>\n+      <p begin=\"40s\" end=\"48s\" tts:shear=\"+10%\">+10%</p>\n+    </div>\n+    <div>\n+      <p begin=\"50s\" end=\"58s\" tts:shear=\"5\">+5</p>\n+    </div>\n+    <div>\n+      <p begin=\"60s\" end=\"68s\" tts:shear=\"Invalid\">Invalid</p>\n+    </div>\n+    <div>\n+      <p begin=\"70s\" end=\"78s\" tts:shear=\"100.01%\">100.01%</p>\n+    </div>\n+    <div>\n+      <p begin=\"80s\" end=\"88s\" tts:shear=\"-101.1%\">-101.1%</p>\n+    </div>\n+  </body>\n+</tt>"
  }
]
