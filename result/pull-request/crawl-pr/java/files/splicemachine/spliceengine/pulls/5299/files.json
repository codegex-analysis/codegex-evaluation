[
  {
    "sha": "6d67f3489e86edd33bb7b653b2a38bce6b57a08c",
    "filename": "assembly/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/assembly/pom.xml",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/assembly/pom.xml",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/assembly/pom.xml?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -94,8 +94,8 @@\n             splice_si_api,\n             splice_timestamp_api,\n             utilities,\n-            datasketches-memory,\n-            datasketches-java,\n+            memory,\n+            sketches-core,\n             opencsv,\n             concurrentlinkedhashmap-lru,\n             kryo-serializers,"
  },
  {
    "sha": "dfa256815719b3441d4a79fca1bb28daf0919f28",
    "filename": "db-engine/pom.xml",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/pom.xml",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/pom.xml",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/pom.xml?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -43,14 +43,14 @@\n             <artifactId>jython-standalone</artifactId>\n         </dependency>\n         <dependency>\n-            <groupId>org.apache.datasketches</groupId>\n-            <artifactId>datasketches-java</artifactId>\n-            <version>2.0.0</version>\n+            <groupId>com.yahoo.datasketches</groupId>\n+            <artifactId>sketches-core</artifactId>\n+            <version>0.8.4</version>\n         </dependency>\n         <dependency>\n-            <groupId>org.apache.datasketches</groupId>\n-            <artifactId>datasketches-memory</artifactId>\n-            <version>1.3.0</version>\n+            <groupId>com.yahoo.datasketches</groupId>\n+            <artifactId>memory</artifactId>\n+            <version>0.8.4</version>\n         </dependency>\n         <dependency>\n             <groupId>com.splicemachine</groupId>"
  },
  {
    "sha": "1fcad74f4d3451c35af21f4dff3dac6072c6a9bf",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/conn/LanguageConnectionContext.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/sql/conn/LanguageConnectionContext.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/sql/conn/LanguageConnectionContext.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/sql/conn/LanguageConnectionContext.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -1536,6 +1536,8 @@ void setDB2VarcharCompatibilityModeNeedsReset(boolean newValue,\n \n     boolean alwaysAllowIndexPrefixIteration();\n \n+    boolean favorIndexPrefixIteration();\n+\n     void setupLocalSPSCache(boolean fromSparkExecution,\n                             SPSDescriptor fromTableDmlSpsDescriptor) throws StandardException;\n "
  },
  {
    "sha": "bd3e8c75ac995188ce68757af58fd535ea323dac",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/sql/conn/SessionProperties.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/sql/conn/SessionProperties.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/sql/conn/SessionProperties.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/sql/conn/SessionProperties.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -59,7 +59,8 @@\n         CURRENTFUNCTIONPATH(15),\n         DISABLEPREDSFORINDEXORPKACCESSPATH(16),\n         ALWAYSALLOWINDEXPREFIXITERATION(17),\n-        OLAPALWAYSPENALIZENLJ(18);\n+        OLAPALWAYSPENALIZENLJ(18),\n+        FAVORINDEXPREFIXITERATION(19);\n \n         public static final int COUNT = PROPERTYNAME.values().length;\n \n@@ -93,7 +94,7 @@ public int getId() {\n             property = SessionProperties.PROPERTYNAME.valueOf(propertyNameString);\n         } catch (IllegalArgumentException e) {\n             throw StandardException.newException(SQLState.LANG_INVALID_SESSION_PROPERTY,propertyNameString,\n-                \"useOLAP, useSpark (deprecated), defaultSelectivityFactor, skipStats, olapQueue, recursiveQueryIterationLimit, tableLimitForExhaustiveSearch, minPlanTimeout, currentFunctionPath, disablePredsForIndexOrPkAccessPath, alwaysAllowIndexPrefixIteration, olapAlwaysPenalizeNLJ\");\n+                \"useOLAP, useSpark (deprecated), defaultSelectivityFactor, skipStats, olapQueue, recursiveQueryIterationLimit, tableLimitForExhaustiveSearch, minPlanTimeout, currentFunctionPath, disablePredsForIndexOrPkAccessPath, alwaysAllowIndexPrefixIteration, olapAlwaysPenalizeNLJ, favorIndexPrefixIteration\");\n         }\n \n         String valString = pair.getSecond();\n@@ -109,6 +110,7 @@ public int getId() {\n             case OLAPALWAYSPENALIZENLJ:\n             case DISABLEPREDSFORINDEXORPKACCESSPATH:\n             case ALWAYSALLOWINDEXPREFIXITERATION:\n+            case FAVORINDEXPREFIXITERATION:\n                 try {\n                     Boolean.parseBoolean(valString);\n                 } catch (Exception e) {"
  },
  {
    "sha": "cf5730783ac31a8398b1cc3942475491568a7ed2",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsImpl.java",
    "status": "modified",
    "additions": 75,
    "deletions": 45,
    "changes": 120,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsImpl.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsImpl.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsImpl.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -39,12 +39,11 @@\n import com.splicemachine.db.iapi.services.io.DataInputUtil;\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.iapi.types.*;\n-import org.apache.datasketches.frequencies.ErrorType;\n-import org.apache.datasketches.memory.WritableMemory;\n-import org.apache.datasketches.quantiles.ItemsSketch;\n-import org.apache.datasketches.theta.Sketch;\n-import org.apache.datasketches.theta.Sketches;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.memory.NativeMemory;\n+import com.yahoo.sketches.frequencies.ErrorType;\n+import com.yahoo.sketches.quantiles.ItemsSketch;\n+import com.yahoo.sketches.theta.Sketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.log4j.Logger;\n \n import java.io.Externalizable;\n@@ -63,14 +62,14 @@\n  */\n public class ColumnStatisticsImpl implements ItemStatistics<DataValueDescriptor>, Externalizable {\n     private static Logger LOG=Logger.getLogger(ColumnStatisticsImpl.class);\n-    protected org.apache.datasketches.quantiles.ItemsSketch<DataValueDescriptor> quantilesSketch;\n-    protected org.apache.datasketches.frequencies.ItemsSketch<DataValueDescriptor> frequenciesSketch;\n+    protected com.yahoo.sketches.quantiles.ItemsSketch<DataValueDescriptor> quantilesSketch;\n+    protected com.yahoo.sketches.frequencies.ItemsSketch<DataValueDescriptor> frequenciesSketch;\n     protected Sketch thetaSketch;\n     protected long nullCount;\n     protected DataValueDescriptor dvd;\n     private long rpv=-1; //rows per value excluding skewed values\n \n-    private org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] freqSketchNoFpItems;\n+    private com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] freqSketchNoFpItems;\n \n     public ColumnStatisticsImpl() {\n \n@@ -98,8 +97,8 @@ public ColumnStatisticsImpl(DataValueDescriptor dvd) throws StandardException {\n      * @param nullCount\n      */\n     public ColumnStatisticsImpl(DataValueDescriptor dvd,\n-                                org.apache.datasketches.quantiles.ItemsSketch quantilesSketch,\n-                                org.apache.datasketches.frequencies.ItemsSketch frequenciesSketch,\n+                                com.yahoo.sketches.quantiles.ItemsSketch quantilesSketch,\n+                                com.yahoo.sketches.frequencies.ItemsSketch frequenciesSketch,\n                                 Sketch thetaSketch, long nullCount\n                                          ) {\n         this.dvd = dvd;\n@@ -163,31 +162,62 @@ protected void readExternalNew(ObjectInput in) throws IOException, ClassNotFound\n         ExtensionRegistry extensionRegistry = ProtobufUtils.getExtensionRegistry();\n         TypeMessage.ColumnStatisticsImpl columnStatistics =\n                 TypeMessage.ColumnStatisticsImpl.parseFrom(bs, extensionRegistry);\n+        NativeMemory quantMem = null;\n+        NativeMemory freqMem = null;\n+        NativeMemory thetaMem = null;\n+        try {\n+            nullCount = columnStatistics.getNullCount();\n+            dvd = ProtobufUtils.fromProtobuf(columnStatistics.getDvd());\n+            byte[] quantiles = columnStatistics.getQuantilesSketch().toByteArray();\n+            quantMem = new NativeMemory(quantiles);\n+            quantilesSketch = com.yahoo.sketches.quantiles.ItemsSketch.getInstance(quantMem, dvd, new DVDArrayOfItemsSerDe(dvd));\n+            byte[] frequencies = columnStatistics.getFrequenciesSketch().toByteArray();\n+            freqMem = new NativeMemory(frequencies);\n+            frequenciesSketch = com.yahoo.sketches.frequencies.ItemsSketch.getInstance(freqMem, new DVDArrayOfItemsSerDe(dvd));\n+            byte[] thetaSketchBytes = columnStatistics.getThetaSketch().toByteArray();\n+            thetaMem = new NativeMemory(thetaSketchBytes);\n+            thetaSketch = Sketch.heapify(thetaMem);\n+        } finally {\n+            if (quantMem!=null)\n+                quantMem.freeMemory();\n+            if (freqMem!=null)\n+                freqMem.freeMemory();\n+            if (thetaMem!=null)\n+                thetaMem.freeMemory();\n+\n+        }\n \n-        nullCount = columnStatistics.getNullCount();\n-        dvd = ProtobufUtils.fromProtobuf(columnStatistics.getDvd());\n-        byte[] quantiles = columnStatistics.getQuantilesSketch().toByteArray();\n-        quantilesSketch = org.apache.datasketches.quantiles.ItemsSketch.getInstance(WritableMemory.wrap(quantiles), dvd, new DVDArrayOfItemsSerDe(dvd));\n-        byte[] frequencies = columnStatistics.getFrequenciesSketch().toByteArray();\n-        frequenciesSketch = org.apache.datasketches.frequencies.ItemsSketch.getInstance(WritableMemory.wrap(frequencies), new DVDArrayOfItemsSerDe(dvd));\n-        byte[] thetaSketchBytes = columnStatistics.getThetaSketch().toByteArray();\n-        thetaSketch = Sketches.wrapSketch(WritableMemory.wrap(thetaSketchBytes));\n     }\n     protected void readExternalOld(ObjectInput in) throws IOException, ClassNotFoundException {\n-        nullCount = in.readLong();\n-        dvd = (DataValueDescriptor) in.readObject();\n-        byte[] quantiles = new byte[in.readInt()];\n-        in.readFully(quantiles);\n-        quantilesSketch = org.apache.datasketches.quantiles.ItemsSketch.getInstance(WritableMemory.wrap(quantiles), dvd, new DVDArrayOfItemsSerDe(dvd));\n-        byte[] frequencies = new byte[in.readInt()];\n-        in.readFully(frequencies);\n-        frequenciesSketch = org.apache.datasketches.frequencies.ItemsSketch.getInstance(WritableMemory.wrap(frequencies), new DVDArrayOfItemsSerDe(dvd));\n-        byte[] thetaSketchBytes = new byte[in.readInt()];\n-        in.readFully(thetaSketchBytes);\n-        thetaSketch = Sketches.wrapSketch(WritableMemory.wrap(thetaSketchBytes));\n-    }\n-\n-    private org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] getFreqSketchNoFpItems() {\n+        NativeMemory quantMem = null;\n+        NativeMemory freqMem = null;\n+        NativeMemory thetaMem = null;\n+        try {\n+            nullCount = in.readLong();\n+            dvd = (DataValueDescriptor) in.readObject();\n+            byte[] quantiles = new byte[in.readInt()];\n+            in.readFully(quantiles);\n+            quantMem = new NativeMemory(quantiles);\n+            quantilesSketch = com.yahoo.sketches.quantiles.ItemsSketch.getInstance(quantMem, dvd, new DVDArrayOfItemsSerDe(dvd));\n+            byte[] frequencies = new byte[in.readInt()];\n+            in.readFully(frequencies);\n+            freqMem = new NativeMemory(frequencies);\n+            frequenciesSketch = com.yahoo.sketches.frequencies.ItemsSketch.getInstance(freqMem, new DVDArrayOfItemsSerDe(dvd));\n+            byte[] thetaSketchBytes = new byte[in.readInt()];\n+            in.readFully(thetaSketchBytes);\n+            thetaMem = new NativeMemory(thetaSketchBytes);\n+            thetaSketch = Sketch.heapify(thetaMem);\n+        } finally {\n+            if (quantMem!=null)\n+                quantMem.freeMemory();\n+            if (freqMem!=null)\n+                freqMem.freeMemory();\n+            if (thetaMem!=null)\n+                thetaMem.freeMemory();\n+        }\n+    }\n+\n+    private com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] getFreqSketchNoFpItems() {\n         if (freqSketchNoFpItems == null) {\n             freqSketchNoFpItems = frequenciesSketch.getFrequentItems(ErrorType.NO_FALSE_POSITIVES);\n         }\n@@ -348,9 +378,9 @@ else if (dvd.typePrecedence() >= lookUpElement.typePrecedence()){\n         if (isSameType || isSameFamily || isConverted) {\n             count = frequenciesSketch.getEstimate(lookUpElement);\n         } else {\n-            // Iterated comparing\n-            org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n-            for (org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n+        // Iterated comparing\n+            com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n+            for (com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n                 DataValueDescriptor skewedValue = row.getItem();\n                 try {\n                     if (skewedValue != null && skewedValue.compare(ORDER_OP_EQUALS, lookUpElement, false, false)) {\n@@ -374,8 +404,8 @@ else if (dvd.typePrecedence() >= lookUpElement.typePrecedence()){\n     private long getAvgRowsPerValueExcludingSkews() {\n         long skewCount = 0;\n         long skewNum = 0;\n-        org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n-        for (org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n+        com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n+        for (com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n             skewCount += row.getEstimate();\n             skewNum ++;\n         }\n@@ -390,8 +420,8 @@ private long getAvgRowsPerValueExcludingSkews() {\n \n     private long getSkewedRowCountInRange(DataValueDescriptor start, DataValueDescriptor stop, boolean includeStart, boolean includeStop) {\n         long skewCount = 0;\n-        org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n-        for (org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n+        com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n+        for (com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n             DataValueDescriptor skewedValue = row.getItem();\n             try {\n                 if (skewedValue != null &&\n@@ -543,10 +573,10 @@ private long computeRangeSelectivity(DataValueDescriptor start, DataValueDescrip\n         /* 1. range selectivity returned by CDF */\n         if (!includeStart && start != null && !start.isNull())\n             start = new StatsExcludeStartDVD(start);\n-        double startSelectivity = start == null || start.isNull() || quantilesSketch.isEmpty() ? 0.0d : quantilesSketch.getCDF(new DataValueDescriptor[]{start})[0];\n+        double startSelectivity = start == null || start.isNull() ? 0.0d : quantilesSketch.getCDF(new DataValueDescriptor[]{start})[0];\n         if (includeStop && stop != null && !stop.isNull())\n             stop = new StatsIncludeEndDVD(stop);\n-        double stopSelectivity = stop == null || stop.isNull() || quantilesSketch.isEmpty() ? 1.0d : quantilesSketch.getCDF(new DataValueDescriptor[]{stop})[0];\n+        double stopSelectivity = stop == null || stop.isNull() ? 1.0d : quantilesSketch.getCDF(new DataValueDescriptor[]{stop})[0];\n         double totalSelectivity = stopSelectivity - startSelectivity;\n         double count = (double) quantilesSketch.getN();\n         if (Double.isNaN(totalSelectivity) || count == 0)\n@@ -704,7 +734,7 @@ public DataValueDescriptor getColumnDescriptor() {\n      *\n      * @return\n      */\n-    public org.apache.datasketches.frequencies.ItemsSketch<DataValueDescriptor> getFrequenciesSketch() {\n+    public com.yahoo.sketches.frequencies.ItemsSketch<DataValueDescriptor> getFrequenciesSketch() {\n         return frequenciesSketch;\n     }\n     /**\n@@ -721,8 +751,8 @@ public Sketch getThetaSketch() {\n     public long selectivityExcludingValueIfSkewed(DataValueDescriptor value) {\n         long skewCount = 0;\n         long skewNum = 0;\n-        org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n-        for (org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n+        com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n+        for (com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n             DataValueDescriptor skewedValue = row.getItem();\n             try {\n                 if (skewedValue != null && skewedValue.compare(ORDER_OP_EQUALS, value, false, false)) {"
  },
  {
    "sha": "882f2f5f15bacc6d36f7b3f1714b7663c239bd6a",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsMerge.java",
    "status": "modified",
    "additions": 5,
    "deletions": 6,
    "changes": 11,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsMerge.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsMerge.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsMerge.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -37,9 +37,9 @@\n import com.splicemachine.db.iapi.types.SQLBlob;\n import com.splicemachine.db.iapi.types.SQLInteger;\n import com.splicemachine.db.impl.sql.execute.ValueRow;\n-import org.apache.datasketches.quantiles.ItemsUnion;\n-import org.apache.datasketches.theta.Sketches;\n-import org.apache.datasketches.theta.Union;\n+import com.yahoo.sketches.quantiles.ItemsUnion;\n+import com.yahoo.sketches.theta.Sketches;\n+import com.yahoo.sketches.theta.Union;\n \n import java.io.ByteArrayOutputStream;\n import java.io.Externalizable;\n@@ -59,7 +59,7 @@\n     protected boolean initialized;\n     protected Union thetaSketchUnion;\n     protected ItemsUnion quantilesSketchUnion;\n-    protected org.apache.datasketches.frequencies.ItemsSketch<DataValueDescriptor> frequenciesSketch;\n+    protected com.yahoo.sketches.frequencies.ItemsSketch<DataValueDescriptor> frequenciesSketch;\n     protected long nullCount = 0L;\n     protected DataValueDescriptor dvd;\n     protected long totalCount = 0L;\n@@ -111,7 +111,6 @@ public void accumulate(ColumnStatisticsImpl value) throws StandardException {\n             initialized = true;\n         }\n \n-        assert value != null : \"column statistics should not be null\";\n         if (!value.getType().equals(columnStatsType))\n             throw new RuntimeException(\"Multiple column stats type co-exists!\");\n \n@@ -123,7 +122,7 @@ public void accumulate(ColumnStatisticsImpl value) throws StandardException {\n                 cardinality = fakeColumnStatistics.cardinality();\n         }\n \n-        assert value.quantilesSketch != null && value.frequenciesSketch != null && value.thetaSketch != null :\"Sketches should not be null\";\n+        assert value.quantilesSketch !=null && value.frequenciesSketch !=null && value.thetaSketch !=null && value!=null:\"Sketches should not be null\";\n         quantilesSketchUnion.update(value.quantilesSketch);\n         frequenciesSketch.merge(value.frequenciesSketch);\n         thetaSketchUnion.update(value.thetaSketch);"
  },
  {
    "sha": "7292e7a62dc20a08ddb64e458bcb5c84c6e16eca",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/DVDArrayOfItemsSerDe.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/DVDArrayOfItemsSerDe.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/DVDArrayOfItemsSerDe.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/DVDArrayOfItemsSerDe.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -31,8 +31,8 @@\n package com.splicemachine.db.iapi.stats;\n \n import com.splicemachine.db.iapi.types.DataValueDescriptor;\n-import org.apache.datasketches.ArrayOfItemsSerDe;\n-import org.apache.datasketches.memory.Memory;\n+import com.yahoo.sketches.ArrayOfItemsSerDe;\n+import com.yahoo.memory.Memory;\n import splice.com.google.common.io.Closeables;\n import java.io.*;\n "
  },
  {
    "sha": "aa3b98a79b65fa35da4dafe1a281b8ed979e1967",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/NonUniqueKeyStatisticsImpl.java",
    "status": "modified",
    "additions": 9,
    "deletions": 11,
    "changes": 20,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/NonUniqueKeyStatisticsImpl.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/NonUniqueKeyStatisticsImpl.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/NonUniqueKeyStatisticsImpl.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -33,10 +33,9 @@\n \n import com.splicemachine.db.iapi.error.StandardException;\n import com.splicemachine.db.iapi.sql.execute.ExecRow;\n-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n-import org.apache.datasketches.quantiles.ItemsSketch;\n-import org.apache.datasketches.theta.Sketch;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.quantiles.ItemsSketch;\n+import com.yahoo.sketches.theta.Sketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n \n import java.io.IOException;\n import java.io.ObjectInput;\n@@ -47,21 +46,20 @@\n  * NonUniqueKeyStatisticsImpl.  TODO JL\n  *\n  */\n-@SuppressFBWarnings(value = \"SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION\", justification = \"class is not complete\")\n public class NonUniqueKeyStatisticsImpl implements ItemStatistics<ExecRow> {\n     private ItemsSketch<ExecRow> quantilesSketch;\n-    private org.apache.datasketches.frequencies.ItemsSketch<ExecRow> frequenciesSketch;\n+    private com.yahoo.sketches.frequencies.ItemsSketch<ExecRow> frequenciesSketch;\n     private Sketch thetaSketch;\n     private ExecRow execRow;\n \n     public NonUniqueKeyStatisticsImpl(ExecRow execRow) throws StandardException {\n         this(execRow,ItemsSketch.getInstance(execRow),\n-                new org.apache.datasketches.frequencies.ItemsSketch(1024),\n-                UpdateSketch.builder().setNominalEntries(4096).build());\n+                new com.yahoo.sketches.frequencies.ItemsSketch(1024),\n+                UpdateSketch.builder().build(4096));\n     }\n \n     public NonUniqueKeyStatisticsImpl(ExecRow execRow, ItemsSketch quantilesSketch,\n-                                      org.apache.datasketches.frequencies.ItemsSketch<ExecRow> frequenciesSketch,\n+                                      com.yahoo.sketches.frequencies.ItemsSketch<ExecRow> frequenciesSketch,\n                                       Sketch thetaSketch\n                                          ) throws StandardException {\n         this.execRow = execRow;\n@@ -112,8 +110,8 @@ public long selectivity(ExecRow element) {\n \n     @Override\n     public long rangeSelectivity(ExecRow start, ExecRow stop, boolean includeStart, boolean includeStop, boolean useExtrapolation) {\n-        double startSelectivity = start==null || quantilesSketch.isEmpty() ? 0.0d : quantilesSketch.getCDF(new ExecRow[]{start})[0];\n-        double stopSelectivity = stop==null || quantilesSketch.isEmpty() ? 1.0d : quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n+        double startSelectivity = start==null?0.0d:quantilesSketch.getCDF(new ExecRow[]{start})[0];\n+        double stopSelectivity = stop==null?1.0d:quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n         return (long) ((stopSelectivity-startSelectivity)*quantilesSketch.getN());\n     }\n "
  },
  {
    "sha": "f5666bf4b23bd4d02a2ddb58eef12ac727f67188",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/PrimaryKeyStatisticsImpl.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/PrimaryKeyStatisticsImpl.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/PrimaryKeyStatisticsImpl.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/PrimaryKeyStatisticsImpl.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -33,8 +33,7 @@\n \n import com.splicemachine.db.iapi.error.StandardException;\n import com.splicemachine.db.iapi.sql.execute.ExecRow;\n-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n-import org.apache.datasketches.quantiles.ItemsSketch;\n+import com.yahoo.sketches.quantiles.ItemsSketch;\n \n import java.io.IOException;\n import java.io.ObjectInput;\n@@ -45,14 +44,13 @@\n  * Statistics Container for a key...\n  *\n  */\n-@SuppressFBWarnings(value = \"SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION\", justification = \"class is not complete\")\n public class PrimaryKeyStatisticsImpl implements ItemStatistics<ExecRow> {\n     private ItemsSketch<ExecRow> quantilesSketch;\n     private long nullCount;\n     private ExecRow execRow;\n \n     public PrimaryKeyStatisticsImpl(ExecRow execRow) throws StandardException {\n-        this(execRow,org.apache.datasketches.quantiles.ItemsSketch.getInstance(execRow), 0L);\n+        this(execRow,com.yahoo.sketches.quantiles.ItemsSketch.getInstance(execRow), 0L);\n     }\n \n     public PrimaryKeyStatisticsImpl(ExecRow execRow, ItemsSketch quantilesSketch,\n@@ -100,8 +98,8 @@ public long selectivity(ExecRow element) {\n \n     @Override\n     public long rangeSelectivity(ExecRow start, ExecRow stop, boolean includeStart, boolean includeStop, boolean useExtrapolation) {\n-        double startSelectivity = start==null || quantilesSketch.isEmpty() ? 0.0d : quantilesSketch.getCDF(new ExecRow[]{start})[0];\n-        double stopSelectivity = stop==null || quantilesSketch.isEmpty() ? 1.0d : quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n+        double startSelectivity = start==null?0.0d:quantilesSketch.getCDF(new ExecRow[]{start})[0];\n+        double stopSelectivity = stop==null?1.0d:quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n         return (long) ((stopSelectivity-startSelectivity)*quantilesSketch.getN());\n     }\n "
  },
  {
    "sha": "ec4fe68094b2e72d9fa5d70c0abd7647925d14c8",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/StatsBoundaryDataValueDescriptor.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/StatsBoundaryDataValueDescriptor.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/StatsBoundaryDataValueDescriptor.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/StatsBoundaryDataValueDescriptor.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -37,8 +37,8 @@\n import com.splicemachine.db.iapi.services.io.ArrayUtil;\n import com.splicemachine.db.iapi.services.io.DataInputUtil;\n import com.splicemachine.db.iapi.types.*;\n-import org.apache.datasketches.quantiles.ItemsSketch;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.quantiles.ItemsSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.StructField;\n@@ -459,7 +459,7 @@ public ItemsSketch getQuantilesSketch() throws StandardException {\n     }\n \n     @Override\n-    public org.apache.datasketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException {\n+    public com.yahoo.sketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException {\n         return dvd.getFrequenciesSketch();\n     }\n "
  },
  {
    "sha": "f8fbcc7fdb77a4496cc40889b02e59bccb7b6aab",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/UniqueKeyStatisticsImpl.java",
    "status": "modified",
    "additions": 3,
    "deletions": 5,
    "changes": 8,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/UniqueKeyStatisticsImpl.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/stats/UniqueKeyStatisticsImpl.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/UniqueKeyStatisticsImpl.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -33,8 +33,7 @@\n \n import com.splicemachine.db.iapi.error.StandardException;\n import com.splicemachine.db.iapi.sql.execute.ExecRow;\n-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n-import org.apache.datasketches.quantiles.ItemsSketch;\n+import com.yahoo.sketches.quantiles.ItemsSketch;\n \n import java.io.IOException;\n import java.io.ObjectInput;\n@@ -45,7 +44,6 @@\n  * Statistics Container for a key...\n  *\n  */\n-@SuppressFBWarnings(value = \"SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION\", justification = \"class is not complete\")\n public class UniqueKeyStatisticsImpl implements ItemStatistics<ExecRow> {\n     private ItemsSketch<ExecRow> quantilesSketch;\n     private long nullCount;\n@@ -100,8 +98,8 @@ public long selectivity(ExecRow element) {\n \n     @Override\n     public long rangeSelectivity(ExecRow start, ExecRow stop, boolean includeStart, boolean includeStop, boolean useExtrapolation) {\n-        double startSelectivity = start==null || quantilesSketch.isEmpty() ? 0.0d : quantilesSketch.getCDF(new ExecRow[]{start})[0];\n-        double stopSelectivity = stop==null || quantilesSketch.isEmpty() ? 1.0d : quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n+        double startSelectivity = start==null?0.0d:quantilesSketch.getCDF(new ExecRow[]{start})[0];\n+        double stopSelectivity = stop==null?1.0d:quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n         return (long) ((stopSelectivity-startSelectivity)*quantilesSketch.getN());\n     }\n "
  },
  {
    "sha": "bad51e8b823729c5f987304b9b1e2d613e36c72a",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/DataType.java",
    "status": "modified",
    "additions": 22,
    "deletions": 12,
    "changes": 34,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataType.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataType.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataType.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -39,7 +39,7 @@\n import com.splicemachine.db.iapi.services.io.DataInputUtil;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.joda.time.DateTime;\n \n@@ -1374,26 +1374,36 @@ public int compare(DataValueDescriptor o1, DataValueDescriptor o2) {\n         }\n     }\n \n-    /**\n-     *\n-     * 256 gives < 1% normalized rank error\n-     *\n-     * @return\n-     * @throws StandardException\n+    /* 256 gives < 1% normalized rank error. Note that this error is independent to data\n+     * stream size. Reference:\n+     * https://datasketches.apache.org/docs/Quantiles/QuantilesAccuracy.html .\n      */\n     @Override\n-    public org.apache.datasketches.quantiles.ItemsSketch getQuantilesSketch() throws StandardException {\n-        return org.apache.datasketches.quantiles.ItemsSketch.getInstance(256,this);\n+    public com.yahoo.sketches.quantiles.ItemsSketch getQuantilesSketch() throws StandardException {\n+        return com.yahoo.sketches.quantiles.ItemsSketch.getInstance(256,this);\n     }\n \n+    /* Bigger maxMapSize leads to better accuracy. Reference:\n+     * https://datasketches.apache.org/docs/Frequency/FrequentItemsErrorTable.html .\n+     * Memory consumption is (18 bytes * currentMapSize). currentMapSize starts from 8 and\n+     * gets doubled when the number of items in map is bigger than 0.75 * currentMapSize.\n+     * Also, currentMapSize is capped at maxMapSize.\n+     */\n     @Override\n-    public org.apache.datasketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException {\n-        return new org.apache.datasketches.frequencies.ItemsSketch(256);\n+    public com.yahoo.sketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException {\n+\n+        return new com.yahoo.sketches.frequencies.ItemsSketch(8192);\n     }\n \n+    /* Bigger nomEntries leads to better accuracy. Reference:\n+     * https://datasketches.apache.org/docs/Theta/ThetaErrorTable.html .\n+     * Internal hash table size could also start small and grow as needed but it depends\n+     * on the value of resizeFactor, or lgRF. Check Util.startingSubMultiple() in Sketch\n+     * library for the logic determining the starting size.\n+     */\n     @Override\n     public UpdateSketch getThetaSketch() throws StandardException {\n-        return UpdateSketch.builder().setNominalEntries(256).build();\n+        return UpdateSketch.builder().build(256);\n     }\n \n "
  },
  {
    "sha": "61ff5c68e5b32fb63f46c541eee687e0ae616918",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/DataValueDescriptor.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataValueDescriptor.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataValueDescriptor.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataValueDescriptor.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -36,7 +36,7 @@\n import com.splicemachine.db.iapi.services.io.ArrayInputStream;\n import com.splicemachine.db.iapi.services.io.Storable;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.StructField;\n import org.joda.time.DateTime;\n@@ -1062,7 +1062,7 @@ boolean compare(\n      * @return\n      * @throws StandardException\n      */\n-    org.apache.datasketches.quantiles.ItemsSketch getQuantilesSketch() throws StandardException;\n+    com.yahoo.sketches.quantiles.ItemsSketch getQuantilesSketch() throws StandardException;\n \n     /**\n      *\n@@ -1071,7 +1071,7 @@ boolean compare(\n      * @return\n      * @throws StandardException\n      */\n-    org.apache.datasketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException;\n+    com.yahoo.sketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException;\n \n     /**\n      *"
  },
  {
    "sha": "4077941844100ad923d709e2eda60975f1cfe46e",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/HBaseRowLocation.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/HBaseRowLocation.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/HBaseRowLocation.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/HBaseRowLocation.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -24,7 +24,7 @@\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.shared.common.sanity.SanityManager;\n import com.splicemachine.utils.ByteSlice;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "7dc8725ef6004d7c8aa7ce03e47cb85c02571141",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/ListDataType.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/ListDataType.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/ListDataType.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/ListDataType.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -42,7 +42,7 @@\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.sql.execute.ExecRow;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;\n@@ -104,7 +104,7 @@ public String getTypeName() {\n     @Override\n     public String getString() throws StandardException\n     {\n-        StringBuilder sb = new StringBuilder(\"( \");\n+        StringBuffer sb = new StringBuffer(\"( \");\n         for (int i = 0; i < numElements; i++) {\n             String stringToAdd = dvd[i] == null ? null : dvd[i].getString();\n             sb.append(stringToAdd != null ? stringToAdd : \"NULL\");"
  },
  {
    "sha": "05001ad042d669f3a57162b5fafedd81805ad8d0",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLArray.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLArray.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLArray.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLArray.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -35,8 +35,7 @@\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;\n@@ -105,7 +104,6 @@ public void setValue(byte[] theValue) throws StandardException {\n \n \n \t@Override\n-\t@SuppressFBWarnings(value = \"DE_MIGHT_IGNORE\", justification = \"intended?\")\n \tpublic byte[] getBytes() throws StandardException {\n \t\ttry (ByteArrayOutputStream stream = new ByteArrayOutputStream();\n \t\t\t ObjectOutput output = new ObjectOutputStream(stream)) {"
  },
  {
    "sha": "7a1ef5998e9b0c5141d20f8c793d9c9ba3f79249",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBinary.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBinary.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBinary.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBinary.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -45,7 +45,7 @@\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.services.i18n.MessageService;\n import com.splicemachine.db.iapi.services.cache.ClassSize;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "8d7395b6e0c9a08fd32747b51d79a22cd5e53051",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBoolean.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBoolean.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBoolean.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBoolean.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -46,7 +46,7 @@\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;"
  },
  {
    "sha": "230bef77a7fc75637a500f396057504849b3923b",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLChar.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLChar.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLChar.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLChar.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -49,7 +49,7 @@\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n import com.splicemachine.db.iapi.util.StringUtil;\n import com.splicemachine.db.iapi.util.UTF8Util;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.log4j.Logger;\n import org.apache.spark.sql.Row;"
  },
  {
    "sha": "92f517227991c48c4280b056b05c970c8271f85c",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDate.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDate.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDate.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDate.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -44,7 +44,7 @@\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n import com.splicemachine.db.iapi.util.StringUtil;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;"
  },
  {
    "sha": "01e3153aeafee699cd7e25b147d6c653ba0d3199",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecfloat.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecfloat.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecfloat.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecfloat.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -40,7 +40,7 @@\n import com.splicemachine.db.iapi.services.io.*;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "ac3758ed330f621133d841902ca7329935fc2f87",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecimal.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecimal.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecimal.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecimal.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -40,7 +40,7 @@\n import com.splicemachine.db.iapi.services.io.*;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.DecimalType;"
  },
  {
    "sha": "d01593a2645589dd4910e529223e67fa3b3c174e",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDouble.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDouble.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDouble.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDouble.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -52,7 +52,7 @@\n import java.text.NumberFormat;\n \n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "1b08304843780079283d3dc0ce51b88ad0a5bcf3",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLInteger.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLInteger.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLInteger.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLInteger.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -50,7 +50,7 @@\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "d4a0b3da4edc17ff889255525d4b93086ca8ab9f",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLLongint.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLLongint.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLLongint.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLLongint.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -52,7 +52,7 @@\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "68860698292cf384e0a80760aa69502ab3ade299",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLReal.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLReal.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLReal.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLReal.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -39,7 +39,7 @@\n import com.splicemachine.db.iapi.services.io.*;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "4f08a7a6df85fc94c9607d9d885cfae26acfe386",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRef.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRef.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRef.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRef.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -47,7 +47,7 @@\n import java.sql.PreparedStatement;\n import java.sql.RowId;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;"
  },
  {
    "sha": "caab608c7e35a644810273721957f4ff4a1780e7",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRowId.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRowId.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRowId.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRowId.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -40,7 +40,7 @@\n import com.splicemachine.db.iapi.services.io.ArrayUtil;\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "c3acb70f458834d777dded8b66c9cf63e7132e51",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLSmallint.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLSmallint.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLSmallint.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLSmallint.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -45,7 +45,7 @@\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "db92a5136296ea885b7a6cc2e0939256c33b7a3f",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTime.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTime.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/0e4e3714aaf039a9f837e7b2a9fbabb302f7062d/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTime.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTime.java?ref=0e4e3714aaf039a9f837e7b2a9fbabb302f7062d",
    "patch": "@@ -44,7 +44,7 @@\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n import com.splicemachine.db.iapi.util.StringUtil;\n-import org.apache.datasketches.theta.UpdateSketch;\n+import com.yahoo.sketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;"
  }
]
