[
  {
    "sha": "693d8a7827b0f52981236788c408026a01ebce36",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/store/access/TransactionController.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/db-engine/src/main/java/com/splicemachine/db/iapi/store/access/TransactionController.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/db-engine/src/main/java/com/splicemachine/db/iapi/store/access/TransactionController.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/store/access/TransactionController.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -1684,4 +1684,6 @@ int rollbackToSavePoint(\n \tvoid closeMe(ScanController scan);\n \n \tvoid rewritePropertyConglomerate() throws StandardException;\n+\n+\tvoid recoverPropertyConglomerateIfNecessary() throws StandardException;\n }"
  },
  {
    "sha": "c166163fbea6e8d9595ee540157f691c3d084f33",
    "filename": "db-engine/src/main/java/com/splicemachine/db/impl/db/BasicDatabase.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/db-engine/src/main/java/com/splicemachine/db/impl/db/BasicDatabase.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/db-engine/src/main/java/com/splicemachine/db/impl/db/BasicDatabase.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/impl/db/BasicDatabase.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -514,6 +514,10 @@ protected    UUID    makeDatabaseID(boolean create, Properties startParams)\n         TransactionController tc = af.getTransaction(\n                 ContextService.getFactory().getCurrentContextManager());\n \n+        // If a pre-2003 build failed to upgraded to a post-2003 build, property conglomerate may be in an\n+        // inconsistent state. Restore it before trying to retrieve database properties.\n+        tc.recoverPropertyConglomerateIfNecessary();\n+\n         String  upgradeID = null;\n         UUID    databaseID;\n "
  },
  {
    "sha": "bb6034faf1b4bda7be47556f2b3c682cb58d143b",
    "filename": "db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/impl/sql/catalog/DataDictionaryImpl.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -499,7 +499,8 @@ public void boot(boolean create,Properties startParams) throws StandardException\n             }else{\n                 // Get the ids for non-core tables\n                 loadDictionaryTables(bootingTC,startParams);\n-\n+                BaseDataDictionary.READ_NEW_FORMAT = true;\n+                BaseDataDictionary.WRITE_NEW_FORMAT= true;\n                 String sqlAuth=PropertyUtil.getDatabaseProperty(bootingTC,\n                         Property.SQL_AUTHORIZATION_PROPERTY);\n "
  },
  {
    "sha": "61fb1a274322527af4d8ced5177782dd4f2a203a",
    "filename": "splice_access_api/src/main/java/com/splicemachine/access/api/PartitionAdmin.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_access_api/src/main/java/com/splicemachine/access/api/PartitionAdmin.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_access_api/src/main/java/com/splicemachine/access/api/PartitionAdmin.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/splice_access_api/src/main/java/com/splicemachine/access/api/PartitionAdmin.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -15,11 +15,13 @@\n package com.splicemachine.access.api;\n \n import com.splicemachine.db.iapi.error.StandardException;\n+import com.splicemachine.db.impl.sql.compile.HashableJoinStrategy;\n import com.splicemachine.storage.Partition;\n import com.splicemachine.storage.PartitionServer;\n \n import java.io.IOException;\n import java.util.Collection;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n \n@@ -58,7 +60,7 @@\n     void deleteSnapshot(String snapshotName) throws IOException;\n \n     default Set<String> listSnapshots() throws IOException {\n-        throw new RuntimeException(\"Not implemented\");\n+        return new HashSet();\n     }\n \n     void restoreSnapshot(String snapshotName) throws IOException;"
  },
  {
    "sha": "e2ed44a69d5fe3aab356ff02e62ee065160bc08b",
    "filename": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceDataDictionary.java",
    "status": "modified",
    "additions": 3,
    "deletions": 57,
    "changes": 60,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceDataDictionary.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceDataDictionary.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/SpliceDataDictionary.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -25,8 +25,6 @@\n import com.splicemachine.access.configuration.SQLConfiguration;\n import com.splicemachine.client.SpliceClient;\n import com.splicemachine.db.catalog.AliasInfo;\n-import com.splicemachine.db.catalog.Dependable;\n-import com.splicemachine.db.catalog.DependableFinder;\n import com.splicemachine.db.catalog.UUID;\n import com.splicemachine.db.catalog.types.SynonymAliasInfo;\n import com.splicemachine.db.iapi.error.StandardException;\n@@ -36,11 +34,9 @@\n import com.splicemachine.db.iapi.services.monitor.Monitor;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.sql.conn.LanguageConnectionContext;\n-import com.splicemachine.db.iapi.sql.depend.Dependent;\n import com.splicemachine.db.iapi.sql.dictionary.*;\n import com.splicemachine.db.iapi.sql.execute.ExecRow;\n import com.splicemachine.db.iapi.sql.execute.ScanQualifier;\n-import com.splicemachine.db.iapi.stats.ItemStatistics;\n import com.splicemachine.db.iapi.store.access.AccessFactory;\n import com.splicemachine.db.iapi.store.access.ColumnOrdering;\n import com.splicemachine.db.iapi.store.access.ScanController;\n@@ -59,7 +55,6 @@\n import com.splicemachine.derby.impl.sql.execute.sequence.SpliceSequence;\n import com.splicemachine.derby.impl.store.access.*;\n import com.splicemachine.derby.lifecycle.EngineLifecycleService;\n-import com.splicemachine.derby.utils.StatisticsAdmin;\n import com.splicemachine.management.Manager;\n import com.splicemachine.pipeline.Exceptions;\n import com.splicemachine.primitives.Bytes;\n@@ -74,7 +69,6 @@\n import java.util.*;\n import java.util.function.Function;\n \n-import static com.splicemachine.db.impl.sql.catalog.SYSTABLESRowFactory.SYSTABLES_VIEW_IN_SYSIBM;\n \n /**\n  * @author Scott Fines\n@@ -2087,7 +2081,7 @@ public void upgradeDataDictionarySerializationToV2(TransactionController tc) thr\n             TabInfoImpl ti = getTableInfo(catalogNum);\n             long conglomerate = ti.getHeapConglomerate();\n             // clone the base table\n-            String snapshotName = conglomerate + \"_snapshot\";\n+            String snapshotName = conglomerate + \"_upgrade\";\n             long cloned_conglomerate = conglomerate + 1;\n             tc.cloneSnapshot(snapshotName, Long.toString(cloned_conglomerate));\n             SpliceLogUtils.info(LOG,\"Cloning snapshot %s to conglomerate %d\",\n@@ -2101,39 +2095,15 @@ public void upgradeDataDictionarySerializationToV2(TransactionController tc) thr\n         }\n     }\n \n-    public void rollbackDataDictionarySerializationToV2(TransactionController tc) throws StandardException {\n-        Set<String> snapshots = tc.listSnapshots();\n-\n-        for (int i = 0; i < serdeUpgradedTables.size(); ++i) {\n-            int catalogNum = serdeUpgradedTables.get(i);\n-            TabInfoImpl ti = getTableInfo(catalogNum);\n-            long conglomerate = ti.getHeapConglomerate();\n-            String snapshotName = conglomerate + \"_snapshot\";\n-\n-            if (snapshots.contains(snapshotName)) {\n-                tc.cloneSnapshot(snapshotName, Long.toString(conglomerate));\n-                int n = ti.getNumberOfIndexes();\n-                for (int j = 0; j < n; ++j) {\n-                    conglomerate = ti.getIndexConglomerate(j);\n-                    snapshotName = conglomerate + \"_snapshot\";\n-                    if (snapshots.contains(snapshotName)) {\n-                        tc.cloneSnapshot(snapshotName, Long.toString(conglomerate));\n-                    }\n-                }\n-                SpliceLogUtils.info(LOG, \"Roll back serialization changes to %d\", serdeUpgradedTables.get(i));\n-            }\n-        }\n-    }\n-\n     private void snapshotTable(TransactionController tc, int catalogNum) throws StandardException {\n         TabInfoImpl ti = getTableInfo(catalogNum);\n         long conglomerate = ti.getHeapConglomerate();\n-        String snapshotName = conglomerate + \"_snapshot\";\n+        String snapshotName = conglomerate + \"_upgrade\";\n         tc.snapshot(snapshotName, Long.toString(conglomerate));\n         int n = ti.getNumberOfIndexes();\n         for (int i = 0; i < n; ++i) {\n             conglomerate = ti.getIndexConglomerate(i);\n-            snapshotName = conglomerate + \"_snapshot\";\n+            snapshotName = conglomerate + \"_upgrade\";\n             tc.snapshot(snapshotName, Long.toString(conglomerate));\n         }\n     }\n@@ -2149,30 +2119,6 @@ private void truncateTable(TransactionController tc, int catalogNum) throws Stan\n         }\n     }\n \n-    public void cleanupSerdeUpgrade(TransactionController tc) throws StandardException {\n-        Set<String> snapshots = tc.listSnapshots();\n-        for (int i = 0; i < serdeUpgradedTables.size(); ++i) {\n-            deleteSnapshot(tc, serdeUpgradedTables.get(i), snapshots);\n-        }\n-    }\n-\n-    private void deleteSnapshot(TransactionController tc, int catalogNum, Set<String> snapshots) throws StandardException {\n-        TabInfoImpl ti = getTableInfo(catalogNum);\n-        long conglomerate = ti.getHeapConglomerate();\n-        String snapshotName = conglomerate + \"_snapshot\";\n-        if (snapshots.contains(snapshotName)) {\n-            tc.deleteSnapshot(snapshotName);\n-        }\n-        int n = ti.getNumberOfIndexes();\n-        for (int i = 0; i < n; ++i) {\n-            conglomerate = ti.getIndexConglomerate(i);\n-            snapshotName = conglomerate + \"_snapshot\";\n-            if (snapshots.contains(snapshotName)) {\n-                tc.deleteSnapshot(snapshotName);\n-            }\n-        }\n-    }\n-\n     public TabInfoImpl getTableInfo(int catalogNum) throws StandardException{\n         TabInfoImpl ti = (catalogNum < NUM_CORE) ? coreInfo[catalogNum] : getNonCoreTI(catalogNum);\n         return ti;"
  },
  {
    "sha": "e04d2bdfe818b843f8c22145f6059c41efa248b0",
    "filename": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/SpliceCatalogUpgradeScripts.java",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/SpliceCatalogUpgradeScripts.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/SpliceCatalogUpgradeScripts.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/SpliceCatalogUpgradeScripts.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -136,11 +136,17 @@ public SpliceCatalogUpgradeScripts(SpliceDataDictionary sdd, TransactionControll\n         return scripts;\n     }\n \n-    public static void runAllScripts(List<VersionAndUpgrade> upgradeNeeded) throws StandardException {\n+    public static void runAllScripts(List<VersionAndUpgrade> upgradeNeeded,\n+                                     SpliceDataDictionary sdd,\n+                                     TransactionController tc) throws StandardException {\n         if( upgradeNeeded.size() == 0 ) {\n             LOG.info(\"No upgrade needed.\");\n             return;\n         }\n+        if (sdd != null) {\n+            // Recover from previous failed upgrade from pre-2003 to post-2003 release\n+            UpgradeUtils.recoverFromPreviousFailedUpgrade(sdd, tc);\n+        }\n         LOG.info(\"Running \" + upgradeNeeded.size() + \" upgrade scripts:\");\n         for( VersionAndUpgrade el : upgradeNeeded ) {\n             LOG.info(\"Running upgrade script \" + el.version + \": \" + el.script.getClass().getName());\n@@ -161,7 +167,7 @@ public void runUpgrades(Splice_DD_Version catalogVersion) throws StandardExcepti\n             currentVersion=new Splice_DD_Version(null,configuration.getUpgradeForcedFrom());\n         }\n         try {\n-            runAllScripts(getScriptsToUpgrade(scripts, currentVersion));\n+            runAllScripts(getScriptsToUpgrade(scripts, currentVersion), sdd, tc);\n         }\n         catch (StandardException e) {\n             if (UpgradeConglomerateTable.isTableCreated()) {"
  },
  {
    "sha": "8c54dc620b504b83080ca191d8c354ed3ad95447",
    "filename": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeConglomerateTable.java",
    "status": "modified",
    "additions": 6,
    "deletions": 7,
    "changes": 13,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeConglomerateTable.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeConglomerateTable.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeConglomerateTable.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -8,8 +8,6 @@\n import com.splicemachine.si.impl.driver.SIDriver;\n import com.splicemachine.utils.SpliceLogUtils;\n \n-import java.io.IOException;\n-\n public class UpgradeConglomerateTable extends UpgradeScriptBase {\n \n     private static boolean tableCreated = false;\n@@ -23,12 +21,13 @@ protected void upgradeSystemTables() throws StandardException {\n         PartitionAdmin admin = null;\n         try {\n             admin = SIDriver.driver().getTableFactory().getAdmin();\n-            if (!admin.tableExists(HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME)) {\n-                admin.createSITable(HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME);\n-                admin.setCatalogVersion(HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME, \"1\");\n-                UpgradeUtils.initializeConglomerateSITable(tc);\n-                tableCreated = true;\n+            if (admin.tableExists(HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME)){\n+                admin.deleteTable(HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME);\n             }\n+            admin.createSITable(HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME);\n+            admin.setCatalogVersion(HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME, \"1\");\n+            UpgradeUtils.initializeConglomerateSITable(tc);\n+            tableCreated = true;\n         }\n         catch (Exception e) {\n             // If upgrade fails for some reasons, roll back CONGLOMERATE_SI table and throw an exception"
  },
  {
    "sha": "5807cf645641dcf181d63f6adbed354d2ddf191d",
    "filename": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeStoredObjects.java",
    "status": "modified",
    "additions": 4,
    "deletions": 45,
    "changes": 49,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeStoredObjects.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeStoredObjects.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeStoredObjects.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -25,8 +25,6 @@\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n \n import java.io.IOException;\n-import java.util.Arrays;\n-import java.util.List;\n \n public class UpgradeStoredObjects extends UpgradeScriptBase {\n     public UpgradeStoredObjects(SpliceDataDictionary sdd, TransactionController tc) {\n@@ -59,35 +57,18 @@ protected void upgradeSystemTables() throws StandardException {\n         } catch (Exception e) {\n             SpliceLogUtils.error(LOG, \"Failed to upgrade data dictionary serialization format.\");\n             // If anything is wrong, roll back all dictionary changes. This will clone all snapshots to original tables.\n-            rollback();\n+            UpgradeUtils.rollback(sdd, tc);\n             throw StandardException.plainWrapException(e);\n         }\n         finally {\n             // Finally delete snapshot and cloned conglomerate.\n-            deleteSnapshots();\n-            dropClonedConglomerate();\n-        }\n-    }\n-\n-    private void dropClonedConglomerate() throws StandardException {\n-        try {\n+            UpgradeUtils.deleteSnapshots();\n             UpgradeUtils.dropClonedConglomerate(sdd, tc);\n-            List<String> tableNames = Arrays.asList(\n-                    HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME,\n-                    HBaseConfiguration.CONGLOMERATE_TABLE_NAME);\n-            PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n-            for (String tableName : tableNames) {\n-                String backupTable = tableName + \"_backup\";\n-                if (admin.tableExists(backupTable)) {\n-                    admin.deleteTable(backupTable);\n-                    SpliceLogUtils.info(LOG, \"Dropped cloned table %s\", backupTable);\n-                }\n-            }\n-        } catch (IOException e) {\n-            throw StandardException.plainWrapException(e);\n         }\n     }\n \n+\n+\n     private void dropUnusedTable() throws StandardException{\n         try {\n             PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n@@ -99,27 +80,5 @@ private void dropUnusedTable() throws StandardException{\n         }\n     }\n \n-    private void rollback() throws StandardException {\n-        sdd.rollbackDataDictionarySerializationToV2(tc);\n-        try {\n-            List<String> tableNames = Arrays.asList(\"16\",\n-                    HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME,\n-                    HBaseConfiguration.CONGLOMERATE_TABLE_NAME);\n-            UpgradeUtils.rollBack(tableNames);\n-        } catch (IOException ioe) {\n-            throw StandardException.plainWrapException(ioe);\n-        }\n-    }\n \n-    private void deleteSnapshots() throws StandardException {\n-        try {\n-            sdd.cleanupSerdeUpgrade(tc);\n-            List<String> snapshotNames = Arrays.asList(\"16_snapshot\",\n-                    HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME + \"_snapshot\",\n-                    HBaseConfiguration.CONGLOMERATE_TABLE_NAME + \"_snapshot\");\n-            UpgradeUtils.deleteSnapshots(snapshotNames);\n-        } catch (IOException e) {\n-            throw StandardException.plainWrapException(e);\n-        }\n-    }\n }"
  },
  {
    "sha": "47f81b203eca7d6ccd94dd4e2dd397115599e072",
    "filename": "splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeUtils.java",
    "status": "modified",
    "additions": 70,
    "deletions": 22,
    "changes": 92,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeUtils.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeUtils.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/splice_machine/src/main/java/com/splicemachine/derby/impl/sql/catalog/upgrade/UpgradeUtils.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -38,6 +38,7 @@\n import splice.com.google.common.collect.Lists;\n \n import java.io.IOException;\n+import java.util.Arrays;\n import java.util.List;\n import java.util.Set;\n \n@@ -88,7 +89,7 @@ public static void upgradeConglomerates(TransactionController tc,\n                                             String tableName) throws IOException {\n \n         SIDriver driver = SIDriver.driver();\n-        String snapshotName =  tableName + \"_snapshot\";\n+        String snapshotName =  tableName + \"_upgrade\";\n         PartitionAdmin admin = null;\n         String backupTableName = tableName + \"_backup\";\n         try {\n@@ -168,22 +169,15 @@ public static void rollBack(List<String> tableNames) throws IOException {\n         PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n         Set<String> snapshots = admin.listSnapshots();\n         for (String tableName : tableNames) {\n-            String snapshotName = tableName + \"_snapshot\";\n+            String snapshotName = tableName + \"_upgrade\";\n             if (snapshots.contains(snapshotName)) {\n                 admin.deleteTable(tableName);\n                 admin.cloneSnapshot(snapshotName, tableName);\n                 SpliceLogUtils.info(LOG, \"Roll back serialization changes to %s\", tableName);\n-            }\n-        }\n-    }\n-\n-    public static void deleteSnapshots(List<String> snapshotNames) throws IOException {\n-        PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n-        Set<String> snapshots = admin.listSnapshots();\n-        for (String snapshotName : snapshotNames) {\n-            if (snapshots.contains(snapshotName)) {\n-                admin.deleteSnapshot(snapshotName);\n-                SpliceLogUtils.info(LOG, \"Delete snapshot %s\", snapshotName);\n+                if (tableName.contains(\"SPLICE_CONGLOMERATE\")) {\n+                    admin.setCatalogVersion(tableName, null);\n+                    SpliceLogUtils.info(LOG, \"Roll back catalog version to  to null\");\n+                }\n             }\n         }\n     }\n@@ -203,23 +197,77 @@ public static void cloneConglomerate(SpliceDataDictionary sdd, TransactionContro\n         }\n     }\n \n-    public static void dropClonedConglomerate(SpliceDataDictionary sdd,\n-                                              TransactionController tc) throws StandardException{\n-        for (int i = 0; i < SpliceDataDictionary.serdeUpgradedTables.size(); ++i) {\n-            TabInfoImpl ti = sdd.getTableInfo(SpliceDataDictionary.serdeUpgradedTables.get(i));\n-            long conglomerate = ti.getHeapConglomerate();\n-            long cloned_conglomerate = conglomerate + 1;\n-            try {\n+    public static void recoverFromPreviousFailedUpgrade(SpliceDataDictionary sdd, TransactionController tc) throws StandardException {\n+        SpliceLogUtils.info(LOG, \"Recovering from possible failed previous upgrade...\");\n+        rollback(sdd, tc);\n+        deleteSnapshots();\n+        dropClonedConglomerate(sdd, tc);\n+        SpliceLogUtils.info(LOG, \"Finished recovering.\");\n+    }\n+\n+    public static void rollback(SpliceDataDictionary sdd, TransactionController tc) throws StandardException {\n+        try {\n+\n+            List<String> tableNames = Lists.newArrayList();\n+            PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n+            Set<String> snapshots = admin.listSnapshots();\n+            for (String snapshot : snapshots) {\n+                if (snapshot.endsWith(\"_upgrade\")) {\n+                    int index = snapshot.lastIndexOf(\"_\");\n+                    String name = snapshot.substring(0, index);\n+                    tableNames.add(name);\n+                }\n+            }\n+            UpgradeUtils.rollBack(tableNames);\n+        } catch (IOException ioe) {\n+            throw StandardException.plainWrapException(ioe);\n+        }\n+    }\n+\n+    public static void deleteSnapshots() throws StandardException {\n+        try {\n+            PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n+            Set<String> snapshots = admin.listSnapshots();\n+            for (String snapshot : snapshots) {\n+                if (snapshot.endsWith(\"_upgrade\")) {\n+                    admin.deleteSnapshot(snapshot);\n+                }\n+            }\n+\n+        } catch (IOException e) {\n+            throw StandardException.plainWrapException(e);\n+        }\n+    }\n+\n+\n+    public static void dropClonedConglomerate(SpliceDataDictionary sdd, TransactionController tc) throws StandardException {\n+        try {\n+            for (int i = 0; i < SpliceDataDictionary.serdeUpgradedTables.size(); ++i) {\n+                TabInfoImpl ti = sdd.getTableInfo(SpliceDataDictionary.serdeUpgradedTables.get(i));\n+                long conglomerate = ti.getHeapConglomerate();\n+                long cloned_conglomerate = conglomerate + 1;\n+\n                 PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n                 if (admin.tableExists(Long.toString(cloned_conglomerate))) {\n                     admin.deleteTable(Long.toString(cloned_conglomerate));\n                     SpliceLogUtils.info(LOG, \"Dropped cloned conglomerate %d for catalogNum %d\",\n                             cloned_conglomerate,\n                             SpliceDataDictionary.serdeUpgradedTables.get(i));\n                 }\n-            } catch (IOException e) {\n-                throw StandardException.plainWrapException(e);\n             }\n+            List<String> tableNames = Arrays.asList(\n+                    HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME,\n+                    HBaseConfiguration.CONGLOMERATE_TABLE_NAME);\n+            PartitionAdmin admin = SIDriver.driver().getTableFactory().getAdmin();\n+            for (String tableName : tableNames) {\n+                String backupTable = tableName + \"_backup\";\n+                if (admin.tableExists(backupTable)) {\n+                    admin.deleteTable(backupTable);\n+                    SpliceLogUtils.info(LOG, \"Dropped cloned table %s\", backupTable);\n+                }\n+            }\n+        } catch (IOException e) {\n+            throw StandardException.plainWrapException(e);\n         }\n     }\n }"
  },
  {
    "sha": "dab4ad752c4135dce4798ca2332bfb72c30f44ea",
    "filename": "splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/PropertyConglomerate.java",
    "status": "modified",
    "additions": 12,
    "deletions": 1,
    "changes": 13,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/PropertyConglomerate.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/PropertyConglomerate.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/PropertyConglomerate.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -725,7 +725,7 @@ public void rewritePropertyConglomerate(TransactionController tc) throws Standar\n             }\n         }\n \n-        tc.snapshot(propertiesConglomId + \"_snapshot\", Long.toString(propertiesConglomId));\n+        tc.snapshot(propertiesConglomId + \"_upgrade\", Long.toString(propertiesConglomId));\n         tc.truncate(Long.toString(propertiesConglomId));\n \n         try (ConglomerateController cc =\n@@ -735,13 +735,24 @@ public void rewritePropertyConglomerate(TransactionController tc) throws Standar\n                              TransactionController.OPENMODE_FORUPDATE,\n                              TransactionController.MODE_TABLE,\n                              TransactionController.ISOLATION_SERIALIZABLE)) {\n+\n             for (DataValueDescriptor[] row : rows) {\n                 ExecRow vRow = new ValueRow();\n                 vRow.setRowArray(row);\n                 cc.insert(vRow);\n             }\n         }\n     }\n+\n+    public void recoverPropertyConglomerateIfNecessary(TransactionController tc) throws StandardException {\n+        Set<String> snapshots = tc.listSnapshots();\n+        String snapshotName = propertiesConglomId + \"_upgrade\";\n+        if (snapshots.contains(snapshotName)) {\n+            tc.truncate(Long.toString(propertiesConglomId));\n+            tc.cloneSnapshot(snapshotName, Long.toString(propertiesConglomId));\n+            tc.deleteSnapshot(snapshotName);\n+        }\n+    }\n }\n \n /**"
  },
  {
    "sha": "cad1ee934b9d75d25c776fb11c1cf8eb64721b5b",
    "filename": "splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/SpliceTransactionManager.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/SpliceTransactionManager.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/SpliceTransactionManager.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/splice_machine/src/main/java/com/splicemachine/derby/impl/store/access/SpliceTransactionManager.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -1978,4 +1978,9 @@ public long getActiveStateTxId() {\n     public void rewritePropertyConglomerate() throws StandardException {\n         accessmanager.getTransactionalProperties().rewritePropertyConglomerate(this);\n     }\n+\n+    @Override\n+    public void recoverPropertyConglomerateIfNecessary() throws StandardException {\n+        accessmanager.getTransactionalProperties().recoverPropertyConglomerateIfNecessary(this);\n+    }\n }"
  },
  {
    "sha": "0976211e96bc31cb9f9023455430e7072628ed3c",
    "filename": "splice_machine/src/main/java/com/splicemachine/derby/utils/ConglomerateUtils.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/utils/ConglomerateUtils.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/main/java/com/splicemachine/derby/utils/ConglomerateUtils.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/splice_machine/src/main/java/com/splicemachine/derby/utils/ConglomerateUtils.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -79,7 +79,11 @@\n         try {\n             PartitionAdmin partitionAdmin = SIDriver.driver().getTableFactory().getAdmin();\n             if (partitionAdmin.tableExists(HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME)) {\n-                return readConglomerate(conglomId, instanceClass, txn, HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME);\n+                try {\n+                    return readConglomerate(conglomId, instanceClass, txn, HBaseConfiguration.CONGLOMERATE_SI_TABLE_NAME);\n+                } catch (Exception e) {\n+                    return readConglomerate(conglomId, instanceClass, txn, HBaseConfiguration.CONGLOMERATE_TABLE_NAME);\n+                }\n             }\n             else {\n                 return readConglomerate(conglomId, instanceClass, txn, HBaseConfiguration.CONGLOMERATE_TABLE_NAME);"
  },
  {
    "sha": "857ee18e1e6a7dbb1cf53925ce8712031917b5f0",
    "filename": "splice_machine/src/test/java/com/splicemachine/derby/utils/SpliceCatalogUpgradeScriptsTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/test/java/com/splicemachine/derby/utils/SpliceCatalogUpgradeScriptsTest.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/6c866c7742752ad093c2d4f9c1bcd716ae2baa64/splice_machine/src/test/java/com/splicemachine/derby/utils/SpliceCatalogUpgradeScriptsTest.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/splice_machine/src/test/java/com/splicemachine/derby/utils/SpliceCatalogUpgradeScriptsTest.java?ref=6c866c7742752ad093c2d4f9c1bcd716ae2baa64",
    "patch": "@@ -109,7 +109,7 @@ public void run() throws StandardException {\n         Assert.assertEquals( 0, SpliceCatalogUpgradeScripts.getScriptsToUpgrade(list,\n                 new Splice_DD_Version(null, 4,0,0, 0)).size() );\n \n-        SpliceCatalogUpgradeScripts.runAllScripts(list);\n+        SpliceCatalogUpgradeScripts.runAllScripts(list, null, null);\n         Assert.assertEquals(4, counter[0]);\n     }\n "
  }
]
