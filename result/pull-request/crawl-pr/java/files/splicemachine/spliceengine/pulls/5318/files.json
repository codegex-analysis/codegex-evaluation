[
  {
    "sha": "64def807a2dca7a057a6c6c0bed62266717dbbca",
    "filename": "db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericStatement.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/632707b281fa4c68ed82c6254aa59dd87d3df02c/db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericStatement.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/632707b281fa4c68ed82c6254aa59dd87d3df02c/db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericStatement.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/impl/sql/GenericStatement.java?ref=632707b281fa4c68ed82c6254aa59dd87d3df02c",
    "patch": "@@ -938,7 +938,10 @@ private void handleExplainNode(LanguageConnectionContext lcc,\n \n         // proceed to optimize and generate code for it\n         StatementNode optimizedPlan = queryNode.fourPhasePrepare(lcc, null, new long[5], false, cc, null, cacheMe, true);\n-\n+        // mark the CC as in use so we use a new CC for the explain plan code generation.\n+        if(!cc.getInUse()) {\n+            cc.setInUse(true);\n+        }\n         // plug back the statement in the EXPLAIN plan, so we can proceed\n         // with optimizing the EXPLAIN plan. The optimization of EXPLAIN\n         // will bypass the underlying node since it is already optimized"
  }
]
