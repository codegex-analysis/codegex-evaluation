[
  {
    "sha": "871da85e2eec9270fd277f047fab453ed2bfbe05",
    "filename": "assembly/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/assembly/pom.xml",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/assembly/pom.xml",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/assembly/pom.xml?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -94,8 +94,8 @@\n             splice_si_api,\n             splice_timestamp_api,\n             utilities,\n-            memory,\n-            sketches-core,\n+            datasketches-memory,\n+            datasketches-java,\n             opencsv,\n             concurrentlinkedhashmap-lru,\n             kryo-serializers,"
  },
  {
    "sha": "6127a0da89efbd7f25bb3d91233ce554a0add0c2",
    "filename": "db-engine/pom.xml",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/pom.xml",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/pom.xml",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/pom.xml?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -43,14 +43,14 @@\n             <artifactId>jython-standalone</artifactId>\n         </dependency>\n         <dependency>\n-            <groupId>com.yahoo.datasketches</groupId>\n-            <artifactId>sketches-core</artifactId>\n-            <version>0.8.4</version>\n+            <groupId>org.apache.datasketches</groupId>\n+            <artifactId>datasketches-java</artifactId>\n+            <version>2.0.0</version>\n         </dependency>\n         <dependency>\n-            <groupId>com.yahoo.datasketches</groupId>\n-            <artifactId>memory</artifactId>\n-            <version>0.8.4</version>\n+            <groupId>org.apache.datasketches</groupId>\n+            <artifactId>datasketches-memory</artifactId>\n+            <version>1.3.0</version>\n         </dependency>\n         <dependency>\n             <groupId>com.splicemachine</groupId>"
  },
  {
    "sha": "d6d1e7b244f38d2dd463f9164227e46428eba78c",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsImpl.java",
    "status": "modified",
    "additions": 46,
    "deletions": 76,
    "changes": 122,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsImpl.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsImpl.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsImpl.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -39,11 +39,12 @@\n import com.splicemachine.db.iapi.services.io.DataInputUtil;\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.iapi.types.*;\n-import com.yahoo.memory.NativeMemory;\n-import com.yahoo.sketches.frequencies.ErrorType;\n-import com.yahoo.sketches.quantiles.ItemsSketch;\n-import com.yahoo.sketches.theta.Sketch;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.frequencies.ErrorType;\n+import org.apache.datasketches.memory.WritableMemory;\n+import org.apache.datasketches.quantiles.ItemsSketch;\n+import org.apache.datasketches.theta.Sketch;\n+import org.apache.datasketches.theta.Sketches;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.log4j.Logger;\n \n import java.io.Externalizable;\n@@ -62,14 +63,14 @@\n  */\n public class ColumnStatisticsImpl implements ItemStatistics<DataValueDescriptor>, Externalizable {\n     private static Logger LOG=Logger.getLogger(ColumnStatisticsImpl.class);\n-    protected com.yahoo.sketches.quantiles.ItemsSketch<DataValueDescriptor> quantilesSketch;\n-    protected com.yahoo.sketches.frequencies.ItemsSketch<DataValueDescriptor> frequenciesSketch;\n+    protected org.apache.datasketches.quantiles.ItemsSketch<DataValueDescriptor> quantilesSketch;\n+    protected org.apache.datasketches.frequencies.ItemsSketch<DataValueDescriptor> frequenciesSketch;\n     protected Sketch thetaSketch;\n     protected long nullCount;\n     protected DataValueDescriptor dvd;\n     private long rpv=-1; //rows per value excluding skewed values\n \n-    private com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] freqSketchNoFpItems;\n+    private org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] freqSketchNoFpItems;\n \n     public ColumnStatisticsImpl() {\n \n@@ -97,8 +98,8 @@ public ColumnStatisticsImpl(DataValueDescriptor dvd) throws StandardException {\n      * @param nullCount\n      */\n     public ColumnStatisticsImpl(DataValueDescriptor dvd,\n-                                com.yahoo.sketches.quantiles.ItemsSketch quantilesSketch,\n-                                com.yahoo.sketches.frequencies.ItemsSketch frequenciesSketch,\n+                                org.apache.datasketches.quantiles.ItemsSketch quantilesSketch,\n+                                org.apache.datasketches.frequencies.ItemsSketch frequenciesSketch,\n                                 Sketch thetaSketch, long nullCount\n                                          ) {\n         this.dvd = dvd;\n@@ -162,62 +163,31 @@ protected void readExternalNew(ObjectInput in) throws IOException, ClassNotFound\n         ExtensionRegistry extensionRegistry = ProtobufUtils.getExtensionRegistry();\n         TypeMessage.ColumnStatisticsImpl columnStatistics =\n                 TypeMessage.ColumnStatisticsImpl.parseFrom(bs, extensionRegistry);\n-        NativeMemory quantMem = null;\n-        NativeMemory freqMem = null;\n-        NativeMemory thetaMem = null;\n-        try {\n-            nullCount = columnStatistics.getNullCount();\n-            dvd = ProtobufUtils.fromProtobuf(columnStatistics.getDvd());\n-            byte[] quantiles = columnStatistics.getQuantilesSketch().toByteArray();\n-            quantMem = new NativeMemory(quantiles);\n-            quantilesSketch = com.yahoo.sketches.quantiles.ItemsSketch.getInstance(quantMem, dvd, new DVDArrayOfItemsSerDe(dvd));\n-            byte[] frequencies = columnStatistics.getFrequenciesSketch().toByteArray();\n-            freqMem = new NativeMemory(frequencies);\n-            frequenciesSketch = com.yahoo.sketches.frequencies.ItemsSketch.getInstance(freqMem, new DVDArrayOfItemsSerDe(dvd));\n-            byte[] thetaSketchBytes = columnStatistics.getThetaSketch().toByteArray();\n-            thetaMem = new NativeMemory(thetaSketchBytes);\n-            thetaSketch = Sketch.heapify(thetaMem);\n-        } finally {\n-            if (quantMem!=null)\n-                quantMem.freeMemory();\n-            if (freqMem!=null)\n-                freqMem.freeMemory();\n-            if (thetaMem!=null)\n-                thetaMem.freeMemory();\n-\n-        }\n-\n-    }\n-    protected void readExternalOld(ObjectInput in) throws IOException, ClassNotFoundException {\n-        NativeMemory quantMem = null;\n-        NativeMemory freqMem = null;\n-        NativeMemory thetaMem = null;\n-        try {\n-            nullCount = in.readLong();\n-            dvd = (DataValueDescriptor) in.readObject();\n-            byte[] quantiles = new byte[in.readInt()];\n-            in.readFully(quantiles);\n-            quantMem = new NativeMemory(quantiles);\n-            quantilesSketch = com.yahoo.sketches.quantiles.ItemsSketch.getInstance(quantMem, dvd, new DVDArrayOfItemsSerDe(dvd));\n-            byte[] frequencies = new byte[in.readInt()];\n-            in.readFully(frequencies);\n-            freqMem = new NativeMemory(frequencies);\n-            frequenciesSketch = com.yahoo.sketches.frequencies.ItemsSketch.getInstance(freqMem, new DVDArrayOfItemsSerDe(dvd));\n-            byte[] thetaSketchBytes = new byte[in.readInt()];\n-            in.readFully(thetaSketchBytes);\n-            thetaMem = new NativeMemory(thetaSketchBytes);\n-            thetaSketch = Sketch.heapify(thetaMem);\n-        } finally {\n-            if (quantMem!=null)\n-                quantMem.freeMemory();\n-            if (freqMem!=null)\n-                freqMem.freeMemory();\n-            if (thetaMem!=null)\n-                thetaMem.freeMemory();\n-        }\n+        nullCount = columnStatistics.getNullCount();\n+        dvd = ProtobufUtils.fromProtobuf(columnStatistics.getDvd());\n+        byte[] quantiles = columnStatistics.getQuantilesSketch().toByteArray();\n+        quantilesSketch = org.apache.datasketches.quantiles.ItemsSketch.getInstance(WritableMemory.wrap(quantiles), dvd, new DVDArrayOfItemsSerDe(dvd));\n+        byte[] frequencies = columnStatistics.getFrequenciesSketch().toByteArray();\n+        frequenciesSketch = org.apache.datasketches.frequencies.ItemsSketch.getInstance(WritableMemory.wrap(frequencies), new DVDArrayOfItemsSerDe(dvd));\n+        byte[] thetaSketchBytes = columnStatistics.getThetaSketch().toByteArray();\n+        thetaSketch = Sketches.wrapSketch(WritableMemory.wrap(thetaSketchBytes));\n     }\n \n-    private com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] getFreqSketchNoFpItems() {\n+    protected void readExternalOld(ObjectInput in) throws IOException, ClassNotFoundException {\n+        nullCount = in.readLong();\n+        dvd = (DataValueDescriptor) in.readObject();\n+        byte[] quantiles = new byte[in.readInt()];\n+        in.readFully(quantiles);\n+        quantilesSketch = org.apache.datasketches.quantiles.ItemsSketch.getInstance(WritableMemory.wrap(quantiles), dvd, new DVDArrayOfItemsSerDe(dvd));\n+        byte[] frequencies = new byte[in.readInt()];\n+        in.readFully(frequencies);\n+        frequenciesSketch = org.apache.datasketches.frequencies.ItemsSketch.getInstance(WritableMemory.wrap(frequencies), new DVDArrayOfItemsSerDe(dvd));\n+        byte[] thetaSketchBytes = new byte[in.readInt()];\n+        in.readFully(thetaSketchBytes);\n+        thetaSketch = Sketches.wrapSketch(WritableMemory.wrap(thetaSketchBytes));\n+    }\n+\n+    private org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] getFreqSketchNoFpItems() {\n         if (freqSketchNoFpItems == null) {\n             freqSketchNoFpItems = frequenciesSketch.getFrequentItems(ErrorType.NO_FALSE_POSITIVES);\n         }\n@@ -378,9 +348,9 @@ else if (dvd.typePrecedence() >= lookUpElement.typePrecedence()){\n         if (isSameType || isSameFamily || isConverted) {\n             count = frequenciesSketch.getEstimate(lookUpElement);\n         } else {\n-        // Iterated comparing\n-            com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n-            for (com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n+            // Iterated comparing\n+            org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n+            for (org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n                 DataValueDescriptor skewedValue = row.getItem();\n                 try {\n                     if (skewedValue != null && skewedValue.compare(ORDER_OP_EQUALS, lookUpElement, false, false)) {\n@@ -404,8 +374,8 @@ else if (dvd.typePrecedence() >= lookUpElement.typePrecedence()){\n     private long getAvgRowsPerValueExcludingSkews() {\n         long skewCount = 0;\n         long skewNum = 0;\n-        com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n-        for (com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n+        org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n+        for (org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n             skewCount += row.getEstimate();\n             skewNum ++;\n         }\n@@ -420,8 +390,8 @@ private long getAvgRowsPerValueExcludingSkews() {\n \n     private long getSkewedRowCountInRange(DataValueDescriptor start, DataValueDescriptor stop, boolean includeStart, boolean includeStop) {\n         long skewCount = 0;\n-        com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n-        for (com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n+        org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n+        for (org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n             DataValueDescriptor skewedValue = row.getItem();\n             try {\n                 if (skewedValue != null &&\n@@ -573,10 +543,10 @@ private long computeRangeSelectivity(DataValueDescriptor start, DataValueDescrip\n         /* 1. range selectivity returned by CDF */\n         if (!includeStart && start != null && !start.isNull())\n             start = new StatsExcludeStartDVD(start);\n-        double startSelectivity = start == null || start.isNull() ? 0.0d : quantilesSketch.getCDF(new DataValueDescriptor[]{start})[0];\n+        double startSelectivity = start == null || start.isNull() || quantilesSketch.isEmpty() ? 0.0d : quantilesSketch.getCDF(new DataValueDescriptor[]{start})[0];\n         if (includeStop && stop != null && !stop.isNull())\n             stop = new StatsIncludeEndDVD(stop);\n-        double stopSelectivity = stop == null || stop.isNull() ? 1.0d : quantilesSketch.getCDF(new DataValueDescriptor[]{stop})[0];\n+        double stopSelectivity = stop == null || stop.isNull() || quantilesSketch.isEmpty() ? 1.0d : quantilesSketch.getCDF(new DataValueDescriptor[]{stop})[0];\n         double totalSelectivity = stopSelectivity - startSelectivity;\n         double count = (double) quantilesSketch.getN();\n         if (Double.isNaN(totalSelectivity) || count == 0)\n@@ -734,7 +704,7 @@ public DataValueDescriptor getColumnDescriptor() {\n      *\n      * @return\n      */\n-    public com.yahoo.sketches.frequencies.ItemsSketch<DataValueDescriptor> getFrequenciesSketch() {\n+    public org.apache.datasketches.frequencies.ItemsSketch<DataValueDescriptor> getFrequenciesSketch() {\n         return frequenciesSketch;\n     }\n     /**\n@@ -751,8 +721,8 @@ public Sketch getThetaSketch() {\n     public long selectivityExcludingValueIfSkewed(DataValueDescriptor value) {\n         long skewCount = 0;\n         long skewNum = 0;\n-        com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n-        for (com.yahoo.sketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n+        org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor>[] items = getFreqSketchNoFpItems();\n+        for (org.apache.datasketches.frequencies.ItemsSketch.Row<DataValueDescriptor> row: items) {\n             DataValueDescriptor skewedValue = row.getItem();\n             try {\n                 if (skewedValue != null && skewedValue.compare(ORDER_OP_EQUALS, value, false, false)) {"
  },
  {
    "sha": "fba429dc44dd57537eb2053683ea0c87d8a662fd",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsMerge.java",
    "status": "modified",
    "additions": 6,
    "deletions": 5,
    "changes": 11,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsMerge.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsMerge.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/ColumnStatisticsMerge.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -37,9 +37,9 @@\n import com.splicemachine.db.iapi.types.SQLBlob;\n import com.splicemachine.db.iapi.types.SQLInteger;\n import com.splicemachine.db.impl.sql.execute.ValueRow;\n-import com.yahoo.sketches.quantiles.ItemsUnion;\n-import com.yahoo.sketches.theta.Sketches;\n-import com.yahoo.sketches.theta.Union;\n+import org.apache.datasketches.quantiles.ItemsUnion;\n+import org.apache.datasketches.theta.Sketches;\n+import org.apache.datasketches.theta.Union;\n \n import java.io.ByteArrayOutputStream;\n import java.io.Externalizable;\n@@ -59,7 +59,7 @@\n     protected boolean initialized;\n     protected Union thetaSketchUnion;\n     protected ItemsUnion quantilesSketchUnion;\n-    protected com.yahoo.sketches.frequencies.ItemsSketch<DataValueDescriptor> frequenciesSketch;\n+    protected org.apache.datasketches.frequencies.ItemsSketch<DataValueDescriptor> frequenciesSketch;\n     protected long nullCount = 0L;\n     protected DataValueDescriptor dvd;\n     protected long totalCount = 0L;\n@@ -111,6 +111,7 @@ public void accumulate(ColumnStatisticsImpl value) throws StandardException {\n             initialized = true;\n         }\n \n+        assert value != null : \"column statistics should not be null\";\n         if (!value.getType().equals(columnStatsType))\n             throw new RuntimeException(\"Multiple column stats type co-exists!\");\n \n@@ -122,7 +123,7 @@ public void accumulate(ColumnStatisticsImpl value) throws StandardException {\n                 cardinality = fakeColumnStatistics.cardinality();\n         }\n \n-        assert value.quantilesSketch !=null && value.frequenciesSketch !=null && value.thetaSketch !=null && value!=null:\"Sketches should not be null\";\n+        assert value.quantilesSketch != null && value.frequenciesSketch != null && value.thetaSketch != null :\"Sketches should not be null\";\n         quantilesSketchUnion.update(value.quantilesSketch);\n         frequenciesSketch.merge(value.frequenciesSketch);\n         thetaSketchUnion.update(value.thetaSketch);"
  },
  {
    "sha": "fc76cdb0cbed652c3750004aff3c31817552d4cd",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/DVDArrayOfItemsSerDe.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/DVDArrayOfItemsSerDe.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/DVDArrayOfItemsSerDe.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/DVDArrayOfItemsSerDe.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -31,8 +31,8 @@\n package com.splicemachine.db.iapi.stats;\n \n import com.splicemachine.db.iapi.types.DataValueDescriptor;\n-import com.yahoo.sketches.ArrayOfItemsSerDe;\n-import com.yahoo.memory.Memory;\n+import org.apache.datasketches.ArrayOfItemsSerDe;\n+import org.apache.datasketches.memory.Memory;\n import splice.com.google.common.io.Closeables;\n import java.io.*;\n "
  },
  {
    "sha": "7d319c011c47c160c4709529c6662aac380d6400",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/NonUniqueKeyStatisticsImpl.java",
    "status": "modified",
    "additions": 11,
    "deletions": 9,
    "changes": 20,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/NonUniqueKeyStatisticsImpl.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/NonUniqueKeyStatisticsImpl.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/NonUniqueKeyStatisticsImpl.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -33,9 +33,10 @@\n \n import com.splicemachine.db.iapi.error.StandardException;\n import com.splicemachine.db.iapi.sql.execute.ExecRow;\n-import com.yahoo.sketches.quantiles.ItemsSketch;\n-import com.yahoo.sketches.theta.Sketch;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import org.apache.datasketches.quantiles.ItemsSketch;\n+import org.apache.datasketches.theta.Sketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n \n import java.io.IOException;\n import java.io.ObjectInput;\n@@ -46,20 +47,21 @@\n  * NonUniqueKeyStatisticsImpl.  TODO JL\n  *\n  */\n+@SuppressFBWarnings(value = \"SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION\", justification = \"class is not complete\")\n public class NonUniqueKeyStatisticsImpl implements ItemStatistics<ExecRow> {\n     private ItemsSketch<ExecRow> quantilesSketch;\n-    private com.yahoo.sketches.frequencies.ItemsSketch<ExecRow> frequenciesSketch;\n+    private org.apache.datasketches.frequencies.ItemsSketch<ExecRow> frequenciesSketch;\n     private Sketch thetaSketch;\n     private ExecRow execRow;\n \n     public NonUniqueKeyStatisticsImpl(ExecRow execRow) throws StandardException {\n         this(execRow,ItemsSketch.getInstance(execRow),\n-                new com.yahoo.sketches.frequencies.ItemsSketch(1024),\n-                UpdateSketch.builder().build(4096));\n+                new org.apache.datasketches.frequencies.ItemsSketch(1024),\n+                UpdateSketch.builder().setNominalEntries(4096).build());\n     }\n \n     public NonUniqueKeyStatisticsImpl(ExecRow execRow, ItemsSketch quantilesSketch,\n-                                      com.yahoo.sketches.frequencies.ItemsSketch<ExecRow> frequenciesSketch,\n+                                      org.apache.datasketches.frequencies.ItemsSketch<ExecRow> frequenciesSketch,\n                                       Sketch thetaSketch\n                                          ) throws StandardException {\n         this.execRow = execRow;\n@@ -110,8 +112,8 @@ public long selectivity(ExecRow element) {\n \n     @Override\n     public long rangeSelectivity(ExecRow start, ExecRow stop, boolean includeStart, boolean includeStop, boolean useExtrapolation) {\n-        double startSelectivity = start==null?0.0d:quantilesSketch.getCDF(new ExecRow[]{start})[0];\n-        double stopSelectivity = stop==null?1.0d:quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n+        double startSelectivity = start==null || quantilesSketch.isEmpty() ? 0.0d : quantilesSketch.getCDF(new ExecRow[]{start})[0];\n+        double stopSelectivity = stop==null || quantilesSketch.isEmpty() ? 1.0d : quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n         return (long) ((stopSelectivity-startSelectivity)*quantilesSketch.getN());\n     }\n "
  },
  {
    "sha": "8dafbbe64e00b79284255b89be11e6cba26bbd3e",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/PrimaryKeyStatisticsImpl.java",
    "status": "modified",
    "additions": 6,
    "deletions": 4,
    "changes": 10,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/PrimaryKeyStatisticsImpl.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/PrimaryKeyStatisticsImpl.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/PrimaryKeyStatisticsImpl.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -33,7 +33,8 @@\n \n import com.splicemachine.db.iapi.error.StandardException;\n import com.splicemachine.db.iapi.sql.execute.ExecRow;\n-import com.yahoo.sketches.quantiles.ItemsSketch;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import org.apache.datasketches.quantiles.ItemsSketch;\n \n import java.io.IOException;\n import java.io.ObjectInput;\n@@ -44,13 +45,14 @@\n  * Statistics Container for a key...\n  *\n  */\n+@SuppressFBWarnings(value = \"SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION\", justification = \"class is not complete\")\n public class PrimaryKeyStatisticsImpl implements ItemStatistics<ExecRow> {\n     private ItemsSketch<ExecRow> quantilesSketch;\n     private long nullCount;\n     private ExecRow execRow;\n \n     public PrimaryKeyStatisticsImpl(ExecRow execRow) throws StandardException {\n-        this(execRow,com.yahoo.sketches.quantiles.ItemsSketch.getInstance(execRow), 0L);\n+        this(execRow,org.apache.datasketches.quantiles.ItemsSketch.getInstance(execRow), 0L);\n     }\n \n     public PrimaryKeyStatisticsImpl(ExecRow execRow, ItemsSketch quantilesSketch,\n@@ -98,8 +100,8 @@ public long selectivity(ExecRow element) {\n \n     @Override\n     public long rangeSelectivity(ExecRow start, ExecRow stop, boolean includeStart, boolean includeStop, boolean useExtrapolation) {\n-        double startSelectivity = start==null?0.0d:quantilesSketch.getCDF(new ExecRow[]{start})[0];\n-        double stopSelectivity = stop==null?1.0d:quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n+        double startSelectivity = start==null || quantilesSketch.isEmpty() ? 0.0d : quantilesSketch.getCDF(new ExecRow[]{start})[0];\n+        double stopSelectivity = stop==null || quantilesSketch.isEmpty() ? 1.0d : quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n         return (long) ((stopSelectivity-startSelectivity)*quantilesSketch.getN());\n     }\n "
  },
  {
    "sha": "9b92026b2e78bf20580746fb5724d4747a39ae25",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/StatsBoundaryDataValueDescriptor.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/StatsBoundaryDataValueDescriptor.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/StatsBoundaryDataValueDescriptor.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/StatsBoundaryDataValueDescriptor.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -37,8 +37,8 @@\n import com.splicemachine.db.iapi.services.io.ArrayUtil;\n import com.splicemachine.db.iapi.services.io.DataInputUtil;\n import com.splicemachine.db.iapi.types.*;\n-import com.yahoo.sketches.quantiles.ItemsSketch;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.quantiles.ItemsSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.StructField;\n@@ -459,7 +459,7 @@ public ItemsSketch getQuantilesSketch() throws StandardException {\n     }\n \n     @Override\n-    public com.yahoo.sketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException {\n+    public org.apache.datasketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException {\n         return dvd.getFrequenciesSketch();\n     }\n "
  },
  {
    "sha": "8e735affe82eb1d12894b4dabcda5fd3e3b51ef5",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/stats/UniqueKeyStatisticsImpl.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/UniqueKeyStatisticsImpl.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/stats/UniqueKeyStatisticsImpl.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/stats/UniqueKeyStatisticsImpl.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -33,7 +33,8 @@\n \n import com.splicemachine.db.iapi.error.StandardException;\n import com.splicemachine.db.iapi.sql.execute.ExecRow;\n-import com.yahoo.sketches.quantiles.ItemsSketch;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import org.apache.datasketches.quantiles.ItemsSketch;\n \n import java.io.IOException;\n import java.io.ObjectInput;\n@@ -44,6 +45,7 @@\n  * Statistics Container for a key...\n  *\n  */\n+@SuppressFBWarnings(value = \"SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION\", justification = \"class is not complete\")\n public class UniqueKeyStatisticsImpl implements ItemStatistics<ExecRow> {\n     private ItemsSketch<ExecRow> quantilesSketch;\n     private long nullCount;\n@@ -98,8 +100,8 @@ public long selectivity(ExecRow element) {\n \n     @Override\n     public long rangeSelectivity(ExecRow start, ExecRow stop, boolean includeStart, boolean includeStop, boolean useExtrapolation) {\n-        double startSelectivity = start==null?0.0d:quantilesSketch.getCDF(new ExecRow[]{start})[0];\n-        double stopSelectivity = stop==null?1.0d:quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n+        double startSelectivity = start==null || quantilesSketch.isEmpty() ? 0.0d : quantilesSketch.getCDF(new ExecRow[]{start})[0];\n+        double stopSelectivity = stop==null || quantilesSketch.isEmpty() ? 1.0d : quantilesSketch.getCDF(new ExecRow[]{stop})[0];\n         return (long) ((stopSelectivity-startSelectivity)*quantilesSketch.getN());\n     }\n "
  },
  {
    "sha": "959971f464044f99fe644596513880b9f1bf5887",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/DataType.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataType.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataType.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataType.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -39,7 +39,7 @@\n import com.splicemachine.db.iapi.services.io.DataInputUtil;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.joda.time.DateTime;\n \n@@ -1379,8 +1379,8 @@ public int compare(DataValueDescriptor o1, DataValueDescriptor o2) {\n      * https://datasketches.apache.org/docs/Quantiles/QuantilesAccuracy.html .\n      */\n     @Override\n-    public com.yahoo.sketches.quantiles.ItemsSketch getQuantilesSketch() throws StandardException {\n-        return com.yahoo.sketches.quantiles.ItemsSketch.getInstance(256,this);\n+    public org.apache.datasketches.quantiles.ItemsSketch getQuantilesSketch() throws StandardException {\n+        return org.apache.datasketches.quantiles.ItemsSketch.getInstance(256,this);\n     }\n \n     /* Bigger maxMapSize leads to better accuracy. Reference:\n@@ -1390,9 +1390,9 @@ public int compare(DataValueDescriptor o1, DataValueDescriptor o2) {\n      * Also, currentMapSize is capped at maxMapSize.\n      */\n     @Override\n-    public com.yahoo.sketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException {\n+    public org.apache.datasketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException {\n \n-        return new com.yahoo.sketches.frequencies.ItemsSketch(8192);\n+        return new org.apache.datasketches.frequencies.ItemsSketch(8192);\n     }\n \n     /* Bigger nomEntries leads to better accuracy. Reference:\n@@ -1403,7 +1403,7 @@ public int compare(DataValueDescriptor o1, DataValueDescriptor o2) {\n      */\n     @Override\n     public UpdateSketch getThetaSketch() throws StandardException {\n-        return UpdateSketch.builder().build(256);\n+        return UpdateSketch.builder().setNominalEntries(256).build();\n     }\n \n "
  },
  {
    "sha": "9f1d6cd3e00c69f8bd527864f071ff375287519d",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/DataValueDescriptor.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataValueDescriptor.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataValueDescriptor.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/DataValueDescriptor.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -36,7 +36,7 @@\n import com.splicemachine.db.iapi.services.io.ArrayInputStream;\n import com.splicemachine.db.iapi.services.io.Storable;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.StructField;\n import org.joda.time.DateTime;\n@@ -1062,7 +1062,7 @@ boolean compare(\n      * @return\n      * @throws StandardException\n      */\n-    com.yahoo.sketches.quantiles.ItemsSketch getQuantilesSketch() throws StandardException;\n+    org.apache.datasketches.quantiles.ItemsSketch getQuantilesSketch() throws StandardException;\n \n     /**\n      *\n@@ -1071,7 +1071,7 @@ boolean compare(\n      * @return\n      * @throws StandardException\n      */\n-    com.yahoo.sketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException;\n+    org.apache.datasketches.frequencies.ItemsSketch getFrequenciesSketch() throws StandardException;\n \n     /**\n      *"
  },
  {
    "sha": "3e6914b9cf99e45e33452ea1a7464f677837495c",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/HBaseRowLocation.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/HBaseRowLocation.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/HBaseRowLocation.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/HBaseRowLocation.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -24,7 +24,7 @@\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.shared.common.sanity.SanityManager;\n import com.splicemachine.utils.ByteSlice;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "45e69be3f8c8e64b2e478a1cf7f16275cb9cb692",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/ListDataType.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/ListDataType.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/ListDataType.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/ListDataType.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -42,7 +42,7 @@\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.sql.execute.ExecRow;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "36dbe23b1d951dd5d3baac2af401762b4ff77771",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLArray.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLArray.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLArray.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLArray.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -35,7 +35,8 @@\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;\n@@ -104,6 +105,7 @@ public void setValue(byte[] theValue) throws StandardException {\n \n \n \t@Override\n+\t@SuppressFBWarnings(value = \"DE_MIGHT_IGNORE\", justification = \"intended?\")\n \tpublic byte[] getBytes() throws StandardException {\n \t\ttry (ByteArrayOutputStream stream = new ByteArrayOutputStream();\n \t\t\t ObjectOutput output = new ObjectOutputStream(stream)) {"
  },
  {
    "sha": "9c8e8d3647157a4168efaeccef8967b66dbd6e58",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBinary.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBinary.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBinary.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBinary.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -45,7 +45,7 @@\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.services.i18n.MessageService;\n import com.splicemachine.db.iapi.services.cache.ClassSize;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "268104c47301493f6b366ef30bc7b492ad35d599",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBoolean.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBoolean.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBoolean.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLBoolean.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -46,7 +46,7 @@\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;"
  },
  {
    "sha": "f4bff44972bbcd9a192d0ae73b6c31e15fdf0697",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLChar.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLChar.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLChar.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLChar.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -49,7 +49,7 @@\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n import com.splicemachine.db.iapi.util.StringUtil;\n import com.splicemachine.db.iapi.util.UTF8Util;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.log4j.Logger;\n import org.apache.spark.sql.Row;"
  },
  {
    "sha": "a6f4bd065b9094b272178e966b63f5b830558c58",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDate.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDate.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDate.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDate.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -44,7 +44,7 @@\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n import com.splicemachine.db.iapi.util.StringUtil;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;"
  },
  {
    "sha": "f46d2d38463ac325e9ab52c2f0160a495d5f22ca",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecfloat.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecfloat.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecfloat.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecfloat.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -40,7 +40,7 @@\n import com.splicemachine.db.iapi.services.io.*;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "d1e1a2a4dd0ab8530d332a746292ca48262876c2",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecimal.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecimal.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecimal.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDecimal.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -40,7 +40,7 @@\n import com.splicemachine.db.iapi.services.io.*;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.DecimalType;"
  },
  {
    "sha": "f29164c1ee95a0ac37eb2f5da9ea01bacf606372",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDouble.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDouble.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDouble.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLDouble.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -52,7 +52,7 @@\n import java.text.NumberFormat;\n \n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "509957c34ce23e249ec7f3111c1b5bf9dd9672cd",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLInteger.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLInteger.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLInteger.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLInteger.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -50,7 +50,7 @@\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "ad571d19eb9d34df95227ba92907a141bea612de",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLLongint.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLLongint.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLLongint.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLLongint.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -52,7 +52,7 @@\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "bef6fbac1e48c3c7c95c46e30e113aa77d4e721d",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLReal.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLReal.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLReal.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLReal.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -39,7 +39,7 @@\n import com.splicemachine.db.iapi.services.io.*;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "559cecef09768fcddbf1194157f9a98b2a0154d3",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRef.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRef.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRef.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRef.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -47,7 +47,7 @@\n import java.sql.PreparedStatement;\n import java.sql.RowId;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;"
  },
  {
    "sha": "f68e7115eab2aeb37fa6383ba6fd1db71cacc24e",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRowId.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRowId.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRowId.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLRowId.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -40,7 +40,7 @@\n import com.splicemachine.db.iapi.services.io.ArrayUtil;\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.iapi.services.sanity.SanityManager;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "d66d049d675a50bb808d7ed80041d2a83499007e",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLSmallint.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLSmallint.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLSmallint.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLSmallint.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -45,7 +45,7 @@\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  },
  {
    "sha": "cdb50dc8aa574820ba3640a9092462198c115b9a",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTime.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTime.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTime.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTime.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -44,7 +44,7 @@\n import com.splicemachine.db.iapi.services.io.StoredFormatIds;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n import com.splicemachine.db.iapi.util.StringUtil;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;"
  },
  {
    "sha": "dcf8075f14c4daf8df89fcb8b8cfcb820d8a14a2",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTimestamp.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTimestamp.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTimestamp.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTimestamp.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -48,7 +48,7 @@\n import com.splicemachine.db.iapi.util.ReuseFactory;\n import com.splicemachine.db.iapi.util.StringUtil;\n import com.splicemachine.primitives.Bytes;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;"
  },
  {
    "sha": "24b6f7d2a9904d449d52b5eef48823ab4e1ad0ff",
    "filename": "db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTinyint.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/splicemachine/spliceengine/blob/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTinyint.java",
    "raw_url": "https://github.com/splicemachine/spliceengine/raw/7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTinyint.java",
    "contents_url": "https://api.github.com/repos/splicemachine/spliceengine/contents/db-engine/src/main/java/com/splicemachine/db/iapi/types/SQLTinyint.java?ref=7a0a345ea1ba8dd1f61dab0e26017f52318aaf6a",
    "patch": "@@ -45,7 +45,7 @@\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import com.splicemachine.db.iapi.types.DataValueFactoryImpl.Format;\n-import com.yahoo.sketches.theta.UpdateSketch;\n+import org.apache.datasketches.theta.UpdateSketch;\n import org.apache.spark.sql.Row;\n import org.apache.spark.sql.types.DataTypes;\n import org.apache.spark.sql.types.StructField;"
  }
]
