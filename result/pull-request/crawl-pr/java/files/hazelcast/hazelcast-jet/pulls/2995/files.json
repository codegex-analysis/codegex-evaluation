[
  {
    "sha": "11760c4ec4ce3bf781441a3de6a71e8a8e59f6d5",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/ClientJobProxy.java",
    "status": "modified",
    "additions": 6,
    "deletions": 7,
    "changes": 13,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/ClientJobProxy.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/ClientJobProxy.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/ClientJobProxy.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -31,7 +31,6 @@\n import com.hazelcast.jet.impl.client.protocol.codec.JetGetJobConfigCodec;\n import com.hazelcast.jet.impl.client.protocol.codec.JetGetJobMetricsCodec;\n import com.hazelcast.jet.impl.client.protocol.codec.JetGetJobStatusCodec;\n-import com.hazelcast.jet.impl.client.protocol.codec.JetGetJobStatusCodec.ResponseParameters;\n import com.hazelcast.jet.impl.client.protocol.codec.JetGetJobSubmissionTimeCodec;\n import com.hazelcast.jet.impl.client.protocol.codec.JetGetJobSuspensionCauseCodec;\n import com.hazelcast.jet.impl.client.protocol.codec.JetJoinSubmittedJobCodec;\n@@ -75,8 +74,8 @@ public JobStatus getStatus() {\n         return callAndRetryIfTargetNotFound(()  -> {\n             ClientMessage request = JetGetJobStatusCodec.encodeRequest(getId());\n             ClientMessage response = invocation(request, masterUuid()).invoke().get();\n-            ResponseParameters parameters = JetGetJobStatusCodec.decodeResponse(response);\n-            return JobStatus.values()[parameters.response];\n+            int jobStatusIndex = JetGetJobStatusCodec.decodeResponse(response);\n+            return JobStatus.values()[jobStatusIndex];\n         });\n     }\n \n@@ -97,8 +96,8 @@ public JobMetrics getMetrics() {\n         return callAndRetryIfTargetNotFound(()  -> {\n             ClientMessage request = JetGetJobMetricsCodec.encodeRequest(getId());\n             ClientMessage response = invocation(request, masterUuid()).invoke().get();\n-            JetGetJobMetricsCodec.ResponseParameters parameters = JetGetJobMetricsCodec.decodeResponse(response);\n-            return toJobMetrics(serializationService().toObject(parameters.response));\n+            Data metricsData = JetGetJobMetricsCodec.decodeResponse(response);\n+            return toJobMetrics(serializationService().toObject(metricsData));\n         });\n     }\n \n@@ -159,7 +158,7 @@ protected long doGetJobSubmissionTime() {\n         return callAndRetryIfTargetNotFound(() -> {\n             ClientMessage request = JetGetJobSubmissionTimeCodec.encodeRequest(getId());\n             ClientMessage response = invocation(request, masterUuid()).invoke().get();\n-            return JetGetJobSubmissionTimeCodec.decodeResponse(response).response;\n+            return JetGetJobSubmissionTimeCodec.decodeResponse(response);\n         });\n     }\n \n@@ -168,7 +167,7 @@ protected JobConfig doGetJobConfig() {\n         return callAndRetryIfTargetNotFound(() -> {\n             ClientMessage request = JetGetJobConfigCodec.encodeRequest(getId());\n             ClientMessage response = invocation(request, masterUuid()).invoke().get();\n-            Data data = JetGetJobConfigCodec.decodeResponse(response).response;\n+            Data data = JetGetJobConfigCodec.decodeResponse(response);\n             return serializationService().toObject(data);\n         });\n     }"
  },
  {
    "sha": "10492dcff63e976eeaf611f2bb4837b723235314",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetClientInstanceImpl.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetClientInstanceImpl.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetClientInstanceImpl.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetClientInstanceImpl.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -66,7 +66,7 @@ public JetConfig getConfig() {\n     @Override\n     public List<Job> getJobs() {\n         return invokeRequestOnMasterAndDecodeResponse(JetGetJobIdsCodec.encodeRequest(), resp -> {\n-            List<Long> jobs = JetGetJobIdsCodec.decodeResponse(resp).response;\n+            List<Long> jobs = JetGetJobIdsCodec.decodeResponse(resp);\n             return toList(jobs, jobId -> new ClientJobProxy(this, jobId));\n         });\n     }\n@@ -77,7 +77,7 @@ public JetConfig getConfig() {\n     @Nonnull\n     public List<JobSummary> getJobSummaryList() {\n         return invokeRequestOnMasterAndDecodeResponse(JetGetJobSummaryListCodec.encodeRequest(),\n-                response -> JetGetJobSummaryListCodec.decodeResponse(response).response);\n+                response -> JetGetJobSummaryListCodec.decodeResponse(response));\n     }\n \n     @Nonnull\n@@ -89,7 +89,7 @@ public HazelcastClientInstanceImpl getHazelcastClient() {\n     public boolean existsDistributedObject(@Nonnull String serviceName, @Nonnull String objectName) {\n         return invokeRequestOnAnyMemberAndDecodeResponse(\n                 JetExistsDistributedObjectCodec.encodeRequest(serviceName, objectName),\n-                response -> JetExistsDistributedObjectCodec.decodeResponse(response).response\n+                response -> JetExistsDistributedObjectCodec.decodeResponse(response)\n         );\n     }\n \n@@ -103,7 +103,7 @@ public boolean existsDistributedObject(@Nonnull String serviceName, @Nonnull Str\n     @Override\n     public List<Long> getJobIdsByName(String name) {\n         return invokeRequestOnMasterAndDecodeResponse(JetGetJobIdsByNameCodec.encodeRequest(name),\n-                response -> JetGetJobIdsByNameCodec.decodeResponse(response).response);\n+                response -> JetGetJobIdsByNameCodec.decodeResponse(response));\n     }\n \n     @Override"
  },
  {
    "sha": "ae9038b0da39fa8ba44d90a16ae33053dcba8506",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetExistsDistributedObjectCodec.java",
    "status": "modified",
    "additions": 6,
    "deletions": 13,
    "changes": 19,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetExistsDistributedObjectCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetExistsDistributedObjectCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetExistsDistributedObjectCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -40,7 +40,7 @@\n \n /**\n  */\n-@Generated(\"a0aed2a5ffa4d459f116a1e7226cdfc7\")\n+@Generated(\"aa603d5be6013116a7d92a678ce0ec79\")\n public final class JetExistsDistributedObjectCodec {\n     //hex: 0xFE0C00\n     public static final int REQUEST_MESSAGE_TYPE = 16649216;\n@@ -71,6 +71,7 @@ public static ClientMessage encodeRequest(java.lang.String serviceName, java.lan\n         clientMessage.setOperationName(\"Jet.ExistsDistributedObject\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         clientMessage.add(initialFrame);\n         StringCodec.encode(clientMessage, serviceName);\n         StringCodec.encode(clientMessage, objectName);\n@@ -87,14 +88,6 @@ public static ClientMessage encodeRequest(java.lang.String serviceName, java.lan\n         return request;\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-\n-        /**\n-         */\n-        public boolean response;\n-    }\n-\n     public static ClientMessage encodeResponse(boolean response) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[RESPONSE_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n@@ -105,12 +98,12 @@ public static ClientMessage encodeResponse(boolean response) {\n         return clientMessage;\n     }\n \n-    public static JetExistsDistributedObjectCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static boolean decodeResponse(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n         ClientMessage.Frame initialFrame = iterator.next();\n-        response.response = decodeBoolean(initialFrame.content, RESPONSE_RESPONSE_FIELD_OFFSET);\n-        return response;\n+        return decodeBoolean(initialFrame.content, RESPONSE_RESPONSE_FIELD_OFFSET);\n     }\n \n }"
  },
  {
    "sha": "8b5dbcb3bfdfbaca9486d290e6870cc401c54846",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetExportSnapshotCodec.java",
    "status": "modified",
    "additions": 2,
    "deletions": 12,
    "changes": 14,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetExportSnapshotCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetExportSnapshotCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetExportSnapshotCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -43,7 +43,7 @@\n \n /**\n  */\n-@Generated(\"065f44caaca5296430eef524327d4bce\")\n+@Generated(\"3032b84e3b6729f82abe4acd7408961e\")\n public final class JetExportSnapshotCodec {\n     //hex: 0xFE0A00\n     public static final int REQUEST_MESSAGE_TYPE = 16648704;\n@@ -79,6 +79,7 @@ public static ClientMessage encodeRequest(long jobId, java.lang.String name, boo\n         clientMessage.setOperationName(\"Jet.ExportSnapshot\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         encodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET, jobId);\n         encodeBoolean(initialFrame.content, REQUEST_CANCEL_JOB_FIELD_OFFSET, cancelJob);\n         clientMessage.add(initialFrame);\n@@ -96,10 +97,6 @@ public static ClientMessage encodeRequest(long jobId, java.lang.String name, boo\n         return request;\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-    }\n-\n     public static ClientMessage encodeResponse() {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[RESPONSE_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n@@ -109,12 +106,5 @@ public static ClientMessage encodeResponse() {\n         return clientMessage;\n     }\n \n-    public static JetExportSnapshotCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n-        ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n-        //empty initial frame\n-        iterator.next();\n-        return response;\n-    }\n \n }"
  },
  {
    "sha": "93b722d5ab02002e49a680907c516d544699224b",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobConfigCodec.java",
    "status": "modified",
    "additions": 11,
    "deletions": 27,
    "changes": 38,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobConfigCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobConfigCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobConfigCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -19,7 +19,6 @@\n import com.hazelcast.client.impl.protocol.ClientMessage;\n import com.hazelcast.client.impl.protocol.Generated;\n import com.hazelcast.client.impl.protocol.codec.builtin.DataCodec;\n-import com.hazelcast.internal.serialization.Data;\n \n import static com.hazelcast.client.impl.protocol.ClientMessage.PARTITION_ID_FIELD_OFFSET;\n import static com.hazelcast.client.impl.protocol.ClientMessage.RESPONSE_BACKUP_ACKS_FIELD_OFFSET;\n@@ -41,7 +40,7 @@\n \n /**\n  */\n-@Generated(\"c49048abd993b635d281c3517e291842\")\n+@Generated(\"0ce06ce3b7f1888a71758c90dc3f766c\")\n public final class JetGetJobConfigCodec {\n     //hex: 0xFE0800\n     public static final int REQUEST_MESSAGE_TYPE = 16648192;\n@@ -54,42 +53,27 @@\n     private JetGetJobConfigCodec() {\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class RequestParameters {\n-\n-        /**\n-         */\n-        public long jobId;\n-    }\n-\n     public static ClientMessage encodeRequest(long jobId) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         clientMessage.setRetryable(true);\n         clientMessage.setOperationName(\"Jet.GetJobConfig\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         encodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET, jobId);\n         clientMessage.add(initialFrame);\n         return clientMessage;\n     }\n \n-    public static JetGetJobConfigCodec.RequestParameters decodeRequest(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static long decodeRequest(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        RequestParameters request = new RequestParameters();\n         ClientMessage.Frame initialFrame = iterator.next();\n-        request.jobId = decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n-        return request;\n-    }\n-\n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-\n-        /**\n-         */\n-        public Data response;\n+        return decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n     }\n \n-    public static ClientMessage encodeResponse(Data response) {\n+    public static ClientMessage encodeResponse(com.hazelcast.internal.serialization.Data response) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[RESPONSE_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, RESPONSE_MESSAGE_TYPE);\n@@ -99,13 +83,13 @@ public static ClientMessage encodeResponse(Data response) {\n         return clientMessage;\n     }\n \n-    public static JetGetJobConfigCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static com.hazelcast.internal.serialization.Data decodeResponse(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n         //empty initial frame\n         iterator.next();\n-        response.response = DataCodec.decode(iterator);\n-        return response;\n+        return DataCodec.decode(iterator);\n     }\n \n }"
  },
  {
    "sha": "d620231ed63d3602424c6dd4e8d8de9158d5f1da",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobIdsByNameCodec.java",
    "status": "modified",
    "additions": 10,
    "deletions": 25,
    "changes": 35,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobIdsByNameCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobIdsByNameCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobIdsByNameCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -38,7 +38,7 @@\n \n /**\n  */\n-@Generated(\"8f135ad631131213af01828f820b70de\")\n+@Generated(\"2fd2466c86925d26be214d76caf17c59\")\n public final class JetGetJobIdsByNameCodec {\n     //hex: 0xFE0600\n     public static final int REQUEST_MESSAGE_TYPE = 16647680;\n@@ -50,40 +50,25 @@\n     private JetGetJobIdsByNameCodec() {\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class RequestParameters {\n-\n-        /**\n-         */\n-        public java.lang.String name;\n-    }\n-\n     public static ClientMessage encodeRequest(java.lang.String name) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         clientMessage.setRetryable(true);\n         clientMessage.setOperationName(\"Jet.GetJobIdsByName\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         clientMessage.add(initialFrame);\n         StringCodec.encode(clientMessage, name);\n         return clientMessage;\n     }\n \n-    public static JetGetJobIdsByNameCodec.RequestParameters decodeRequest(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static java.lang.String decodeRequest(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        RequestParameters request = new RequestParameters();\n         //empty initial frame\n         iterator.next();\n-        request.name = StringCodec.decode(iterator);\n-        return request;\n-    }\n-\n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-\n-        /**\n-         */\n-        public java.util.List<java.lang.Long> response;\n+        return StringCodec.decode(iterator);\n     }\n \n     public static ClientMessage encodeResponse(java.util.Collection<java.lang.Long> response) {\n@@ -96,13 +81,13 @@ public static ClientMessage encodeResponse(java.util.Collection<java.lang.Long>\n         return clientMessage;\n     }\n \n-    public static JetGetJobIdsByNameCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static java.util.List<java.lang.Long> decodeResponse(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n         //empty initial frame\n         iterator.next();\n-        response.response = ListLongCodec.decode(iterator);\n-        return response;\n+        return ListLongCodec.decode(iterator);\n     }\n \n }"
  },
  {
    "sha": "1895fc26cfd7c71d6817dc9192f4d1a3ff419fd0",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobIdsCodec.java",
    "status": "modified",
    "additions": 6,
    "deletions": 24,
    "changes": 30,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobIdsCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobIdsCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobIdsCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -37,7 +37,7 @@\n \n /**\n  */\n-@Generated(\"8497ec8e33f5e7f0dd01788e329cb3a9\")\n+@Generated(\"fb22079620f4407fc867b735de3acd9d\")\n public final class JetGetJobIdsCodec {\n     //hex: 0xFE0400\n     public static final int REQUEST_MESSAGE_TYPE = 16647168;\n@@ -49,35 +49,17 @@\n     private JetGetJobIdsCodec() {\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class RequestParameters {\n-    }\n-\n     public static ClientMessage encodeRequest() {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         clientMessage.setRetryable(true);\n         clientMessage.setOperationName(\"Jet.GetJobIds\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         clientMessage.add(initialFrame);\n         return clientMessage;\n     }\n \n-    public static JetGetJobIdsCodec.RequestParameters decodeRequest(ClientMessage clientMessage) {\n-        ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        RequestParameters request = new RequestParameters();\n-        //empty initial frame\n-        iterator.next();\n-        return request;\n-    }\n-\n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-\n-        /**\n-         */\n-        public java.util.List<java.lang.Long> response;\n-    }\n \n     public static ClientMessage encodeResponse(java.util.Collection<java.lang.Long> response) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n@@ -89,13 +71,13 @@ public static ClientMessage encodeResponse(java.util.Collection<java.lang.Long>\n         return clientMessage;\n     }\n \n-    public static JetGetJobIdsCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static java.util.List<java.lang.Long> decodeResponse(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n         //empty initial frame\n         iterator.next();\n-        response.response = ListLongCodec.decode(iterator);\n-        return response;\n+        return ListLongCodec.decode(iterator);\n     }\n \n }"
  },
  {
    "sha": "f7852d78ebb5bd3fd405ce30ea9d4bf24427d104",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobMetricsCodec.java",
    "status": "modified",
    "additions": 11,
    "deletions": 27,
    "changes": 38,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobMetricsCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobMetricsCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobMetricsCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -19,7 +19,6 @@\n import com.hazelcast.client.impl.protocol.ClientMessage;\n import com.hazelcast.client.impl.protocol.Generated;\n import com.hazelcast.client.impl.protocol.codec.builtin.DataCodec;\n-import com.hazelcast.internal.serialization.Data;\n \n import static com.hazelcast.client.impl.protocol.ClientMessage.PARTITION_ID_FIELD_OFFSET;\n import static com.hazelcast.client.impl.protocol.ClientMessage.RESPONSE_BACKUP_ACKS_FIELD_OFFSET;\n@@ -41,7 +40,7 @@\n \n /**\n  */\n-@Generated(\"1e42c6d5a32c366d5e3a9fec27a92792\")\n+@Generated(\"2eceabbaee0153e6e5af4dd180b9e9f5\")\n public final class JetGetJobMetricsCodec {\n     //hex: 0xFE0D00\n     public static final int REQUEST_MESSAGE_TYPE = 16649472;\n@@ -54,42 +53,27 @@\n     private JetGetJobMetricsCodec() {\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class RequestParameters {\n-\n-        /**\n-         */\n-        public long jobId;\n-    }\n-\n     public static ClientMessage encodeRequest(long jobId) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         clientMessage.setRetryable(true);\n         clientMessage.setOperationName(\"Jet.GetJobMetrics\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         encodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET, jobId);\n         clientMessage.add(initialFrame);\n         return clientMessage;\n     }\n \n-    public static JetGetJobMetricsCodec.RequestParameters decodeRequest(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static long decodeRequest(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        RequestParameters request = new RequestParameters();\n         ClientMessage.Frame initialFrame = iterator.next();\n-        request.jobId = decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n-        return request;\n-    }\n-\n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-\n-        /**\n-         */\n-        public Data response;\n+        return decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n     }\n \n-    public static ClientMessage encodeResponse(Data response) {\n+    public static ClientMessage encodeResponse(com.hazelcast.internal.serialization.Data response) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[RESPONSE_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, RESPONSE_MESSAGE_TYPE);\n@@ -99,13 +83,13 @@ public static ClientMessage encodeResponse(Data response) {\n         return clientMessage;\n     }\n \n-    public static JetGetJobMetricsCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static com.hazelcast.internal.serialization.Data decodeResponse(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n         //empty initial frame\n         iterator.next();\n-        response.response = DataCodec.decode(iterator);\n-        return response;\n+        return DataCodec.decode(iterator);\n     }\n \n }"
  },
  {
    "sha": "5f85779f07575a7c17aa61ed6bf94cac7964bde4",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobStatusCodec.java",
    "status": "modified",
    "additions": 10,
    "deletions": 25,
    "changes": 35,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobStatusCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobStatusCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobStatusCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -40,7 +40,7 @@\n \n /**\n  */\n-@Generated(\"4b773a77e808bf1af8f61031c4ad5906\")\n+@Generated(\"7cee9e4abe6d02868142a51e1579f374\")\n public final class JetGetJobStatusCodec {\n     //hex: 0xFE0300\n     public static final int REQUEST_MESSAGE_TYPE = 16646912;\n@@ -54,39 +54,24 @@\n     private JetGetJobStatusCodec() {\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class RequestParameters {\n-\n-        /**\n-         */\n-        public long jobId;\n-    }\n-\n     public static ClientMessage encodeRequest(long jobId) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         clientMessage.setRetryable(true);\n         clientMessage.setOperationName(\"Jet.GetJobStatus\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         encodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET, jobId);\n         clientMessage.add(initialFrame);\n         return clientMessage;\n     }\n \n-    public static JetGetJobStatusCodec.RequestParameters decodeRequest(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static long decodeRequest(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        RequestParameters request = new RequestParameters();\n         ClientMessage.Frame initialFrame = iterator.next();\n-        request.jobId = decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n-        return request;\n-    }\n-\n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-\n-        /**\n-         */\n-        public int response;\n+        return decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n     }\n \n     public static ClientMessage encodeResponse(int response) {\n@@ -99,12 +84,12 @@ public static ClientMessage encodeResponse(int response) {\n         return clientMessage;\n     }\n \n-    public static JetGetJobStatusCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static int decodeResponse(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n         ClientMessage.Frame initialFrame = iterator.next();\n-        response.response = decodeInt(initialFrame.content, RESPONSE_RESPONSE_FIELD_OFFSET);\n-        return response;\n+        return decodeInt(initialFrame.content, RESPONSE_RESPONSE_FIELD_OFFSET);\n     }\n \n }"
  },
  {
    "sha": "722a1aa2a6047257e484644302e32b5b68a9a316",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSubmissionTimeCodec.java",
    "status": "modified",
    "additions": 10,
    "deletions": 25,
    "changes": 35,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSubmissionTimeCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSubmissionTimeCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSubmissionTimeCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -39,7 +39,7 @@\n \n /**\n  */\n-@Generated(\"c322bfee19c2ba44073d4d8ecebf9cab\")\n+@Generated(\"b4159b8d16d4c8004e025d643b0c07c7\")\n public final class JetGetJobSubmissionTimeCodec {\n     //hex: 0xFE0700\n     public static final int REQUEST_MESSAGE_TYPE = 16647936;\n@@ -53,39 +53,24 @@\n     private JetGetJobSubmissionTimeCodec() {\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class RequestParameters {\n-\n-        /**\n-         */\n-        public long jobId;\n-    }\n-\n     public static ClientMessage encodeRequest(long jobId) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         clientMessage.setRetryable(true);\n         clientMessage.setOperationName(\"Jet.GetJobSubmissionTime\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         encodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET, jobId);\n         clientMessage.add(initialFrame);\n         return clientMessage;\n     }\n \n-    public static JetGetJobSubmissionTimeCodec.RequestParameters decodeRequest(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static long decodeRequest(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        RequestParameters request = new RequestParameters();\n         ClientMessage.Frame initialFrame = iterator.next();\n-        request.jobId = decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n-        return request;\n-    }\n-\n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-\n-        /**\n-         */\n-        public long response;\n+        return decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n     }\n \n     public static ClientMessage encodeResponse(long response) {\n@@ -98,12 +83,12 @@ public static ClientMessage encodeResponse(long response) {\n         return clientMessage;\n     }\n \n-    public static JetGetJobSubmissionTimeCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static long decodeResponse(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n         ClientMessage.Frame initialFrame = iterator.next();\n-        response.response = decodeLong(initialFrame.content, RESPONSE_RESPONSE_FIELD_OFFSET);\n-        return response;\n+        return decodeLong(initialFrame.content, RESPONSE_RESPONSE_FIELD_OFFSET);\n     }\n \n }"
  },
  {
    "sha": "22a82e25dff5c43851e1280f47e6016536cb7bfc",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSummaryListCodec.java",
    "status": "modified",
    "additions": 7,
    "deletions": 26,
    "changes": 33,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSummaryListCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSummaryListCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSummaryListCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -19,7 +19,6 @@\n import com.hazelcast.client.impl.protocol.ClientMessage;\n import com.hazelcast.client.impl.protocol.Generated;\n import com.hazelcast.client.impl.protocol.codec.builtin.DataCodec;\n-import com.hazelcast.internal.serialization.Data;\n \n import static com.hazelcast.client.impl.protocol.ClientMessage.PARTITION_ID_FIELD_OFFSET;\n import static com.hazelcast.client.impl.protocol.ClientMessage.RESPONSE_BACKUP_ACKS_FIELD_OFFSET;\n@@ -38,7 +37,7 @@\n \n /**\n  */\n-@Generated(\"9a2a7e8d8daf4f2d1a7a924130e88ec5\")\n+@Generated(\"08f8b3e7cedc4e0ad18844b0245cfd8e\")\n public final class JetGetJobSummaryListCodec {\n     //hex: 0xFE0B00\n     public static final int REQUEST_MESSAGE_TYPE = 16648960;\n@@ -50,37 +49,19 @@\n     private JetGetJobSummaryListCodec() {\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class RequestParameters {\n-    }\n-\n     public static ClientMessage encodeRequest() {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         clientMessage.setRetryable(true);\n         clientMessage.setOperationName(\"Jet.GetJobSummaryList\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         clientMessage.add(initialFrame);\n         return clientMessage;\n     }\n \n-    public static JetGetJobSummaryListCodec.RequestParameters decodeRequest(ClientMessage clientMessage) {\n-        ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        RequestParameters request = new RequestParameters();\n-        //empty initial frame\n-        iterator.next();\n-        return request;\n-    }\n-\n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-\n-        /**\n-         */\n-        public Data response;\n-    }\n \n-    public static ClientMessage encodeResponse(Data response) {\n+    public static ClientMessage encodeResponse(com.hazelcast.internal.serialization.Data response) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[RESPONSE_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, RESPONSE_MESSAGE_TYPE);\n@@ -90,13 +71,13 @@ public static ClientMessage encodeResponse(Data response) {\n         return clientMessage;\n     }\n \n-    public static JetGetJobSummaryListCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static com.hazelcast.internal.serialization.Data decodeResponse(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n         //empty initial frame\n         iterator.next();\n-        response.response = DataCodec.decode(iterator);\n-        return response;\n+        return DataCodec.decode(iterator);\n     }\n \n }"
  },
  {
    "sha": "db9687017830d2e8275e51c8048c5c76ff6e0d3b",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSuspensionCauseCodec.java",
    "status": "modified",
    "additions": 8,
    "deletions": 6,
    "changes": 14,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSuspensionCauseCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSuspensionCauseCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetGetJobSuspensionCauseCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -18,7 +18,10 @@\n \n import com.hazelcast.client.impl.protocol.ClientMessage;\n import com.hazelcast.client.impl.protocol.Generated;\n-import com.hazelcast.client.impl.protocol.codec.builtin.DataCodec;\n+import com.hazelcast.client.impl.protocol.codec.builtin.*;\n+import com.hazelcast.client.impl.protocol.codec.custom.*;\n+\n+import javax.annotation.Nullable;\n \n import static com.hazelcast.client.impl.protocol.ClientMessage.*;\n import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.*;\n@@ -32,7 +35,7 @@\n \n /**\n  */\n-@Generated(\"0baf8f79327012f83aa3d481d363bd87\")\n+@Generated(\"8e247818e6a34d12ee89ed1038dc6373\")\n public final class JetGetJobSuspensionCauseCodec {\n     //hex: 0xFE0E00\n     public static final int REQUEST_MESSAGE_TYPE = 16649728;\n@@ -42,9 +45,6 @@\n     private static final int REQUEST_INITIAL_FRAME_SIZE = REQUEST_JOB_ID_FIELD_OFFSET + LONG_SIZE_IN_BYTES;\n     private static final int RESPONSE_INITIAL_FRAME_SIZE = RESPONSE_BACKUP_ACKS_FIELD_OFFSET + BYTE_SIZE_IN_BYTES;\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public long jobId;\n-\n     private JetGetJobSuspensionCauseCodec() {\n     }\n \n@@ -60,6 +60,8 @@ public static ClientMessage encodeRequest(long jobId) {\n         return clientMessage;\n     }\n \n+    /**\n+     */\n     public static long decodeRequest(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n         ClientMessage.Frame initialFrame = iterator.next();\n@@ -77,7 +79,7 @@ public static ClientMessage encodeResponse(com.hazelcast.internal.serialization.\n     }\n \n     /**\n-    */\n+     */\n     public static com.hazelcast.internal.serialization.Data decodeResponse(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n         //empty initial frame"
  },
  {
    "sha": "de341fa6b635faa88350c066a9589f15b7ab9b0d",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetJoinSubmittedJobCodec.java",
    "status": "modified",
    "additions": 6,
    "deletions": 24,
    "changes": 30,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetJoinSubmittedJobCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetJoinSubmittedJobCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetJoinSubmittedJobCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -39,7 +39,7 @@\n \n /**\n  */\n-@Generated(\"43d5d65055a83ed1706d0471483ddad4\")\n+@Generated(\"e6eb59d9ec72e306c10cf8174f7e86ef\")\n public final class JetJoinSubmittedJobCodec {\n     //hex: 0xFE0500\n     public static final int REQUEST_MESSAGE_TYPE = 16647424;\n@@ -52,35 +52,24 @@\n     private JetJoinSubmittedJobCodec() {\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class RequestParameters {\n-\n-        /**\n-         */\n-        public long jobId;\n-    }\n-\n     public static ClientMessage encodeRequest(long jobId) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         clientMessage.setRetryable(true);\n         clientMessage.setOperationName(\"Jet.JoinSubmittedJob\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         encodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET, jobId);\n         clientMessage.add(initialFrame);\n         return clientMessage;\n     }\n \n-    public static JetJoinSubmittedJobCodec.RequestParameters decodeRequest(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static long decodeRequest(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        RequestParameters request = new RequestParameters();\n         ClientMessage.Frame initialFrame = iterator.next();\n-        request.jobId = decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n-        return request;\n-    }\n-\n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n+        return decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n     }\n \n     public static ClientMessage encodeResponse() {\n@@ -92,12 +81,5 @@ public static ClientMessage encodeResponse() {\n         return clientMessage;\n     }\n \n-    public static JetJoinSubmittedJobCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n-        ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n-        //empty initial frame\n-        iterator.next();\n-        return response;\n-    }\n \n }"
  },
  {
    "sha": "6002d87b7bf3d4452ddf9d13ddfeea1234606c29",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetResumeJobCodec.java",
    "status": "modified",
    "additions": 12,
    "deletions": 34,
    "changes": 46,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetResumeJobCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetResumeJobCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetResumeJobCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -18,17 +18,13 @@\n \n import com.hazelcast.client.impl.protocol.ClientMessage;\n import com.hazelcast.client.impl.protocol.Generated;\n+import com.hazelcast.client.impl.protocol.codec.builtin.*;\n+import com.hazelcast.client.impl.protocol.codec.custom.*;\n \n-import static com.hazelcast.client.impl.protocol.ClientMessage.PARTITION_ID_FIELD_OFFSET;\n-import static com.hazelcast.client.impl.protocol.ClientMessage.RESPONSE_BACKUP_ACKS_FIELD_OFFSET;\n-import static com.hazelcast.client.impl.protocol.ClientMessage.TYPE_FIELD_OFFSET;\n-import static com.hazelcast.client.impl.protocol.ClientMessage.UNFRAGMENTED_MESSAGE;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.BYTE_SIZE_IN_BYTES;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.INT_SIZE_IN_BYTES;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.LONG_SIZE_IN_BYTES;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.decodeLong;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.encodeInt;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.encodeLong;\n+import javax.annotation.Nullable;\n+\n+import static com.hazelcast.client.impl.protocol.ClientMessage.*;\n+import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.*;\n \n /*\n  * This file is auto-generated by the Hazelcast Client Protocol Code Generator.\n@@ -39,7 +35,7 @@\n \n /**\n  */\n-@Generated(\"c4d71cdbd6e8c96ab2c6a710a6274dbc\")\n+@Generated(\"5a6cb12aa1501be5bb885943e3a7c625\")\n public final class JetResumeJobCodec {\n     //hex: 0xFE0900\n     public static final int REQUEST_MESSAGE_TYPE = 16648448;\n@@ -52,35 +48,24 @@\n     private JetResumeJobCodec() {\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class RequestParameters {\n-\n-        /**\n-         */\n-        public long jobId;\n-    }\n-\n     public static ClientMessage encodeRequest(long jobId) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         clientMessage.setRetryable(false);\n         clientMessage.setOperationName(\"Jet.ResumeJob\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         encodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET, jobId);\n         clientMessage.add(initialFrame);\n         return clientMessage;\n     }\n \n-    public static JetResumeJobCodec.RequestParameters decodeRequest(ClientMessage clientMessage) {\n+    /**\n+     */\n+    public static long decodeRequest(ClientMessage clientMessage) {\n         ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        RequestParameters request = new RequestParameters();\n         ClientMessage.Frame initialFrame = iterator.next();\n-        request.jobId = decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n-        return request;\n-    }\n-\n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n+        return decodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET);\n     }\n \n     public static ClientMessage encodeResponse() {\n@@ -92,12 +77,5 @@ public static ClientMessage encodeResponse() {\n         return clientMessage;\n     }\n \n-    public static JetResumeJobCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n-        ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n-        //empty initial frame\n-        iterator.next();\n-        return response;\n-    }\n \n }"
  },
  {
    "sha": "adb63e554b8dfe814c8cec54880ae6e7ee5747bc",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetSubmitJobCodec.java",
    "status": "modified",
    "additions": 12,
    "deletions": 28,
    "changes": 40,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetSubmitJobCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetSubmitJobCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetSubmitJobCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -18,19 +18,13 @@\n \n import com.hazelcast.client.impl.protocol.ClientMessage;\n import com.hazelcast.client.impl.protocol.Generated;\n-import com.hazelcast.client.impl.protocol.codec.builtin.DataCodec;\n-import com.hazelcast.internal.serialization.Data;\n-\n-import static com.hazelcast.client.impl.protocol.ClientMessage.PARTITION_ID_FIELD_OFFSET;\n-import static com.hazelcast.client.impl.protocol.ClientMessage.RESPONSE_BACKUP_ACKS_FIELD_OFFSET;\n-import static com.hazelcast.client.impl.protocol.ClientMessage.TYPE_FIELD_OFFSET;\n-import static com.hazelcast.client.impl.protocol.ClientMessage.UNFRAGMENTED_MESSAGE;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.BYTE_SIZE_IN_BYTES;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.INT_SIZE_IN_BYTES;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.LONG_SIZE_IN_BYTES;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.decodeLong;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.encodeInt;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.encodeLong;\n+import com.hazelcast.client.impl.protocol.codec.builtin.*;\n+import com.hazelcast.client.impl.protocol.codec.custom.*;\n+\n+import javax.annotation.Nullable;\n+\n+import static com.hazelcast.client.impl.protocol.ClientMessage.*;\n+import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.*;\n \n /*\n  * This file is auto-generated by the Hazelcast Client Protocol Code Generator.\n@@ -41,7 +35,7 @@\n \n /**\n  */\n-@Generated(\"bcbf49296661bc6ba41e17fee1de156c\")\n+@Generated(\"435a6313f73a308d1e0c56e8ea4a9c23\")\n public final class JetSubmitJobCodec {\n     //hex: 0xFE0100\n     public static final int REQUEST_MESSAGE_TYPE = 16646400;\n@@ -63,19 +57,20 @@ private JetSubmitJobCodec() {\n \n         /**\n          */\n-        public Data dag;\n+        public com.hazelcast.internal.serialization.Data dag;\n \n         /**\n          */\n-        public Data jobConfig;\n+        public com.hazelcast.internal.serialization.Data jobConfig;\n     }\n \n-    public static ClientMessage encodeRequest(long jobId, Data dag, Data jobConfig) {\n+    public static ClientMessage encodeRequest(long jobId, com.hazelcast.internal.serialization.Data dag, com.hazelcast.internal.serialization.Data jobConfig) {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         clientMessage.setRetryable(false);\n         clientMessage.setOperationName(\"Jet.SubmitJob\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         encodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET, jobId);\n         clientMessage.add(initialFrame);\n         DataCodec.encode(clientMessage, dag);\n@@ -93,10 +88,6 @@ public static ClientMessage encodeRequest(long jobId, Data dag, Data jobConfig)\n         return request;\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-    }\n-\n     public static ClientMessage encodeResponse() {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[RESPONSE_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n@@ -106,12 +97,5 @@ public static ClientMessage encodeResponse() {\n         return clientMessage;\n     }\n \n-    public static JetSubmitJobCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n-        ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n-        //empty initial frame\n-        iterator.next();\n-        return response;\n-    }\n \n }"
  },
  {
    "sha": "c54433ec1ef1b1cf40a9968b4b9e269911edafa8",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetTerminateJobCodec.java",
    "status": "modified",
    "additions": 8,
    "deletions": 23,
    "changes": 31,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetTerminateJobCodec.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetTerminateJobCodec.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/codec/JetTerminateJobCodec.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -18,18 +18,13 @@\n \n import com.hazelcast.client.impl.protocol.ClientMessage;\n import com.hazelcast.client.impl.protocol.Generated;\n+import com.hazelcast.client.impl.protocol.codec.builtin.*;\n+import com.hazelcast.client.impl.protocol.codec.custom.*;\n \n-import static com.hazelcast.client.impl.protocol.ClientMessage.PARTITION_ID_FIELD_OFFSET;\n-import static com.hazelcast.client.impl.protocol.ClientMessage.RESPONSE_BACKUP_ACKS_FIELD_OFFSET;\n-import static com.hazelcast.client.impl.protocol.ClientMessage.TYPE_FIELD_OFFSET;\n-import static com.hazelcast.client.impl.protocol.ClientMessage.UNFRAGMENTED_MESSAGE;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.BYTE_SIZE_IN_BYTES;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.INT_SIZE_IN_BYTES;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.LONG_SIZE_IN_BYTES;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.decodeInt;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.decodeLong;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.encodeInt;\n-import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.encodeLong;\n+import javax.annotation.Nullable;\n+\n+import static com.hazelcast.client.impl.protocol.ClientMessage.*;\n+import static com.hazelcast.client.impl.protocol.codec.builtin.FixedSizeTypesCodec.*;\n \n /*\n  * This file is auto-generated by the Hazelcast Client Protocol Code Generator.\n@@ -40,7 +35,7 @@\n \n /**\n  */\n-@Generated(\"5ea698d8ad5a55b49975c98c7e7b4e81\")\n+@Generated(\"b453c209f98485edf3e076644f65515a\")\n public final class JetTerminateJobCodec {\n     //hex: 0xFE0200\n     public static final int REQUEST_MESSAGE_TYPE = 16646656;\n@@ -72,6 +67,7 @@ public static ClientMessage encodeRequest(long jobId, int terminateMode) {\n         clientMessage.setOperationName(\"Jet.TerminateJob\");\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[REQUEST_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n         encodeInt(initialFrame.content, TYPE_FIELD_OFFSET, REQUEST_MESSAGE_TYPE);\n+        encodeInt(initialFrame.content, PARTITION_ID_FIELD_OFFSET, -1);\n         encodeLong(initialFrame.content, REQUEST_JOB_ID_FIELD_OFFSET, jobId);\n         encodeInt(initialFrame.content, REQUEST_TERMINATE_MODE_FIELD_OFFSET, terminateMode);\n         clientMessage.add(initialFrame);\n@@ -87,10 +83,6 @@ public static ClientMessage encodeRequest(long jobId, int terminateMode) {\n         return request;\n     }\n \n-    @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\"})\n-    public static class ResponseParameters {\n-    }\n-\n     public static ClientMessage encodeResponse() {\n         ClientMessage clientMessage = ClientMessage.createForEncode();\n         ClientMessage.Frame initialFrame = new ClientMessage.Frame(new byte[RESPONSE_INITIAL_FRAME_SIZE], UNFRAGMENTED_MESSAGE);\n@@ -100,12 +92,5 @@ public static ClientMessage encodeResponse() {\n         return clientMessage;\n     }\n \n-    public static JetTerminateJobCodec.ResponseParameters decodeResponse(ClientMessage clientMessage) {\n-        ClientMessage.ForwardFrameIterator iterator = clientMessage.frameIterator();\n-        ResponseParameters response = new ResponseParameters();\n-        //empty initial frame\n-        iterator.next();\n-        return response;\n-    }\n \n }"
  },
  {
    "sha": "067e252564f359b85c0188c701bbade7b8184136",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobConfigMessageTask.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobConfigMessageTask.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobConfigMessageTask.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobConfigMessageTask.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -25,7 +25,7 @@\n import com.hazelcast.jet.impl.operation.GetJobConfigOperation;\n import com.hazelcast.spi.impl.operationservice.Operation;\n \n-public class JetGetJobConfigMessageTask extends AbstractJetMessageTask<JetGetJobConfigCodec.RequestParameters, Data>\n+public class JetGetJobConfigMessageTask extends AbstractJetMessageTask<Long, Data>\n         implements BlockingMessageTask {\n \n     protected JetGetJobConfigMessageTask(ClientMessage clientMessage, Node node, Connection connection) {\n@@ -36,7 +36,7 @@ protected JetGetJobConfigMessageTask(ClientMessage clientMessage, Node node, Con\n \n     @Override\n     protected Operation prepareOperation() {\n-        return new GetJobConfigOperation(parameters.jobId);\n+        return new GetJobConfigOperation(parameters);\n     }\n \n     @Override"
  },
  {
    "sha": "56397741a83af4deb7c4108d1ea08562c581935f",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobIdsByNameMessageTask.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobIdsByNameMessageTask.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobIdsByNameMessageTask.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobIdsByNameMessageTask.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -26,7 +26,7 @@\n import java.util.List;\n \n public class JetGetJobIdsByNameMessageTask\n-        extends AbstractJetMessageTask<JetGetJobIdsByNameCodec.RequestParameters, List<Long>> {\n+        extends AbstractJetMessageTask<String, List<Long>> {\n \n     JetGetJobIdsByNameMessageTask(ClientMessage clientMessage, Node node, Connection connection) {\n         super(clientMessage, node, connection,\n@@ -36,7 +36,7 @@\n \n     @Override\n     protected Operation prepareOperation() {\n-        return new GetJobIdsByNameOperation(parameters.name);\n+        return new GetJobIdsByNameOperation(parameters);\n     }\n \n     @Override"
  },
  {
    "sha": "5f922f0730b5ac403958a88dd33c35161fdd5932",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobIdsMessageTask.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobIdsMessageTask.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobIdsMessageTask.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobIdsMessageTask.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -25,11 +25,11 @@\n \n import java.util.List;\n \n-public class JetGetJobIdsMessageTask extends AbstractJetMessageTask<JetGetJobIdsCodec.RequestParameters, List<Long>> {\n+public class JetGetJobIdsMessageTask extends AbstractJetMessageTask<Void, List<Long>> {\n \n     JetGetJobIdsMessageTask(ClientMessage clientMessage, Node node, Connection connection) {\n         super(clientMessage, node, connection,\n-                JetGetJobIdsCodec::decodeRequest,\n+                m -> null,\n                 JetGetJobIdsCodec::encodeResponse);\n     }\n "
  },
  {
    "sha": "80410b8ab4f1c317291e74d71e5031324863a864",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobMetricsMessageTask.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobMetricsMessageTask.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobMetricsMessageTask.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobMetricsMessageTask.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -25,7 +25,7 @@\n import com.hazelcast.spi.impl.operationservice.Operation;\n \n public class JetGetJobMetricsMessageTask\n-        extends AbstractJetMessageTask<JetGetJobMetricsCodec.RequestParameters, Data> {\n+        extends AbstractJetMessageTask<Long, Data> {\n \n     JetGetJobMetricsMessageTask(ClientMessage clientMessage, Node node, Connection connection) {\n         super(clientMessage, node, connection,\n@@ -40,7 +40,7 @@ protected ClientMessage encodeResponse(Object o) {\n \n     @Override\n     protected Operation prepareOperation() {\n-        return new GetJobMetricsOperation(parameters.jobId);\n+        return new GetJobMetricsOperation(parameters);\n     }\n \n     @Override"
  },
  {
    "sha": "f137b0bd62a30b1395a117c5d07acc7158dabfdc",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobStatusMessageTask.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobStatusMessageTask.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobStatusMessageTask.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobStatusMessageTask.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -24,7 +24,7 @@\n import com.hazelcast.jet.impl.operation.GetJobStatusOperation;\n import com.hazelcast.spi.impl.operationservice.Operation;\n \n-public class JetGetJobStatusMessageTask extends AbstractJetMessageTask<JetGetJobStatusCodec.RequestParameters, JobStatus> {\n+public class JetGetJobStatusMessageTask extends AbstractJetMessageTask<Long, JobStatus> {\n \n     JetGetJobStatusMessageTask(ClientMessage clientMessage, Node node, Connection connection) {\n         super(clientMessage, node, connection,\n@@ -34,7 +34,7 @@\n \n     @Override\n     protected Operation prepareOperation() {\n-        return new GetJobStatusOperation(parameters.jobId);\n+        return new GetJobStatusOperation(parameters);\n     }\n \n     @Override"
  },
  {
    "sha": "bed0cb36f9fa23cc4b74538a78bbea6575d10d3b",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobSubmissionTimeMessageTask.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobSubmissionTimeMessageTask.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobSubmissionTimeMessageTask.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobSubmissionTimeMessageTask.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -24,7 +24,7 @@\n import com.hazelcast.spi.impl.operationservice.Operation;\n \n public class JetGetJobSubmissionTimeMessageTask\n-        extends AbstractJetMessageTask<JetGetJobSubmissionTimeCodec.RequestParameters, Long> {\n+        extends AbstractJetMessageTask<Long, Long> {\n \n     JetGetJobSubmissionTimeMessageTask(ClientMessage clientMessage, Node node, Connection connection) {\n         super(clientMessage, node, connection,\n@@ -34,7 +34,7 @@\n \n     @Override\n     protected Operation prepareOperation() {\n-        return new GetJobSubmissionTimeOperation(parameters.jobId);\n+        return new GetJobSubmissionTimeOperation(parameters);\n     }\n \n     @Override"
  },
  {
    "sha": "eecde1ebff4e09edad08bdb14be2e4d7124c5c51",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobSummaryListMessageTask.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobSummaryListMessageTask.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobSummaryListMessageTask.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetGetJobSummaryListMessageTask.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -25,11 +25,11 @@\n import com.hazelcast.spi.impl.operationservice.Operation;\n \n public class JetGetJobSummaryListMessageTask\n-        extends AbstractJetMessageTask<JetGetJobSummaryListCodec.RequestParameters, Data> {\n+        extends AbstractJetMessageTask<Void, Data> {\n \n     JetGetJobSummaryListMessageTask(ClientMessage clientMessage, Node node, Connection connection) {\n         super(clientMessage, node, connection,\n-                JetGetJobSummaryListCodec::decodeRequest,\n+                m -> null,\n                 JetGetJobSummaryListCodec::encodeResponse);\n     }\n "
  },
  {
    "sha": "8e805e86c6cc2f818942f0be75836d268cf72451",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetJoinSubmittedJobMessageTask.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetJoinSubmittedJobMessageTask.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetJoinSubmittedJobMessageTask.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetJoinSubmittedJobMessageTask.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -24,7 +24,7 @@\n import com.hazelcast.spi.impl.operationservice.Operation;\n \n public class JetJoinSubmittedJobMessageTask\n-        extends AbstractJetMessageTask<JetJoinSubmittedJobCodec.RequestParameters, Void> {\n+        extends AbstractJetMessageTask<Long, Void> {\n     protected JetJoinSubmittedJobMessageTask(ClientMessage clientMessage, Node node, Connection connection) {\n         super(clientMessage, node, connection,\n                 JetJoinSubmittedJobCodec::decodeRequest,\n@@ -33,7 +33,7 @@ protected JetJoinSubmittedJobMessageTask(ClientMessage clientMessage, Node node,\n \n     @Override\n     protected Operation prepareOperation() {\n-        return new JoinSubmittedJobOperation(parameters.jobId);\n+        return new JoinSubmittedJobOperation(parameters);\n     }\n \n     @Override"
  },
  {
    "sha": "4c18e7debd999d34e1fbedd8797efabc04357d81",
    "filename": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetResumeJobMessageTask.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/hazelcast/hazelcast-jet/blob/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetResumeJobMessageTask.java",
    "raw_url": "https://github.com/hazelcast/hazelcast-jet/raw/c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetResumeJobMessageTask.java",
    "contents_url": "https://api.github.com/repos/hazelcast/hazelcast-jet/contents/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/protocol/task/JetResumeJobMessageTask.java?ref=c3fd2d8655d9bd9214f5ca8c03b319432f0d35f5",
    "patch": "@@ -25,15 +25,15 @@\n import com.hazelcast.spi.impl.operationservice.Operation;\n \n public class JetResumeJobMessageTask\n-        extends AbstractJetMessageTask<JetResumeJobCodec.RequestParameters, Void> implements BlockingMessageTask {\n+        extends AbstractJetMessageTask<Long, Void> implements BlockingMessageTask {\n     protected JetResumeJobMessageTask(ClientMessage clientMessage, Node node, Connection connection) {\n         super(clientMessage, node, connection, JetResumeJobCodec::decodeRequest,\n                 o -> JetResumeJobCodec.encodeResponse());\n     }\n \n     @Override\n     protected Operation prepareOperation() {\n-        return new ResumeJobOperation(parameters.jobId);\n+        return new ResumeJobOperation(parameters);\n     }\n \n     @Override"
  }
]
