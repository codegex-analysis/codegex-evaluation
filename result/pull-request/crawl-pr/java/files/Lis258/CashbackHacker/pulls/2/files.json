[
  {
    "sha": "048b7d3ef882823017fda0e57e28273f86de7b65",
    "filename": ".github/workflows/gradle.yml",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/Lis258/CashbackHacker/blob/0e0260631ce64e0b20ee1582c59a9306f743a3c9/.github/workflows/gradle.yml",
    "raw_url": "https://github.com/Lis258/CashbackHacker/raw/0e0260631ce64e0b20ee1582c59a9306f743a3c9/.github/workflows/gradle.yml",
    "contents_url": "https://api.github.com/repos/Lis258/CashbackHacker/contents/.github/workflows/gradle.yml?ref=0e0260631ce64e0b20ee1582c59a9306f743a3c9",
    "patch": "@@ -0,0 +1,26 @@\n+# This workflow will build a Java project with Gradle\n+# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle\n+\n+name: Java CI with Gradle\n+\n+on:\n+  push:\n+    branches: [ master ]\n+  pull_request:\n+    branches: [ master ]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up JDK 11\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 11\n+    - name: Grant execute permission for gradlew\n+      run: chmod +x gradlew\n+    - name: Build with Gradle\n+      run: ./gradlew build"
  },
  {
    "sha": "d42bb6a5c57b6b4821c94b791cd516b5c48ef917",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Lis258/CashbackHacker/blob/0e0260631ce64e0b20ee1582c59a9306f743a3c9/build.gradle",
    "raw_url": "https://github.com/Lis258/CashbackHacker/raw/0e0260631ce64e0b20ee1582c59a9306f743a3c9/build.gradle",
    "contents_url": "https://api.github.com/repos/Lis258/CashbackHacker/contents/build.gradle?ref=0e0260631ce64e0b20ee1582c59a9306f743a3c9",
    "patch": "@@ -10,9 +10,9 @@ repositories {\n }\n \n dependencies {\n-    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.8.0-M1'\n+    testImplementation 'junit:junit:4.13'\n }\n \n test {\n-    useJUnitPlatform()\n+    useJUnit()\n }\n\\ No newline at end of file"
  },
  {
    "sha": "1b2840f3182dc6d912e932706a493690e2837dd1",
    "filename": "src/test/java/ru/netology/unit/CashbackHackServiceTest.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/Lis258/CashbackHacker/blob/0e0260631ce64e0b20ee1582c59a9306f743a3c9/src/test/java/ru/netology/unit/CashbackHackServiceTest.java",
    "raw_url": "https://github.com/Lis258/CashbackHacker/raw/0e0260631ce64e0b20ee1582c59a9306f743a3c9/src/test/java/ru/netology/unit/CashbackHackServiceTest.java",
    "contents_url": "https://api.github.com/repos/Lis258/CashbackHacker/contents/src/test/java/ru/netology/unit/CashbackHackServiceTest.java?ref=0e0260631ce64e0b20ee1582c59a9306f743a3c9",
    "patch": "@@ -0,0 +1,35 @@\n+package ru.netology.unit;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+\n+public class CashbackHackServiceTest {\n+\n+    @Test\n+    public void shouldTestIfAmountLess1000() {\n+        CashbackHackService service = new CashbackHackService();\n+        int amount = 500;\n+        int actual = service.remain(amount);\n+        int excepted = 500;\n+        assertEquals(excepted, actual);\n+    }\n+\n+    @Test\n+    public void shouldTestIfAmount1000() {\n+        CashbackHackService service = new CashbackHackService();\n+        int amount = 1000;\n+        int actual = service.remain(amount);\n+        int excepted = 0;\n+        assertEquals(excepted, actual);\n+    }\n+\n+    @Test\n+    public void shouldTestIfAmountMore1000() {\n+        CashbackHackService service = new CashbackHackService();\n+        int amount = 1300;\n+        int actual = service.remain(amount);\n+        int excepted = 700;\n+        assertEquals(excepted, actual);\n+    }\n+}\n\\ No newline at end of file"
  }
]
