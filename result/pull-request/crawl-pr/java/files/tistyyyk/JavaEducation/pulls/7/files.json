[
  {
    "sha": "e55cbddf68074aad34a355458a48cb80bfee4c27",
    "filename": "src/main/lesson8/homework/Cat.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/tistyyyk/JavaEducation/blob/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Cat.java",
    "raw_url": "https://github.com/tistyyyk/JavaEducation/raw/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Cat.java",
    "contents_url": "https://api.github.com/repos/tistyyyk/JavaEducation/contents/src/main/lesson8/homework/Cat.java?ref=6a9e34ba638715399c5bb4c45b883df42ac4f4ac",
    "patch": "@@ -0,0 +1,32 @@\n+package main.lesson8.homework;\n+\n+public class Cat implements IParticipant{\n+\n+    private static int runnable = 10;\n+    private static int jumpable = 20;\n+\n+    public Cat () {}\n+\n+    @Override\n+    public void run(int length) {\n+        System.out.println(\"Кот пробежал \"+length+\"м.\");\n+    }\n+\n+    @Override\n+    public void jump(int heigth) {\n+        System.out.println(\"Кот перепрыгнул \"+heigth+\"м.\");\n+    }\n+\n+    public int getRunnable(){\n+        return runnable;\n+    }\n+\n+    public int getJumpable(){\n+        return jumpable;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Кот\";\n+    }\n+}"
  },
  {
    "sha": "6575b1127caa8293df320f4d8349dfb50015b436",
    "filename": "src/main/lesson8/homework/Human.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/tistyyyk/JavaEducation/blob/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Human.java",
    "raw_url": "https://github.com/tistyyyk/JavaEducation/raw/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Human.java",
    "contents_url": "https://api.github.com/repos/tistyyyk/JavaEducation/contents/src/main/lesson8/homework/Human.java?ref=6a9e34ba638715399c5bb4c45b883df42ac4f4ac",
    "patch": "@@ -0,0 +1,32 @@\n+package main.lesson8.homework;\n+\n+public class Human implements IParticipant{\n+\n+    private static int runnable = 20;\n+    private static int jumpable = 10;\n+\n+    public Human() {}\n+\n+    @Override\n+    public void run(int length) {\n+        System.out.println(\"Человек пробежал \"+length+\"м.\");\n+    }\n+\n+    @Override\n+    public void jump(int heigth) {\n+        System.out.println(\"Человек перепрыгнул \"+heigth+\"м.\");\n+    }\n+\n+    public int getRunnable(){\n+        return runnable;\n+    }\n+\n+    public int getJumpable(){\n+        return jumpable;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Человек\";\n+    }\n+}"
  },
  {
    "sha": "e611dcb0902b46a09ea2775f7027aca387426374",
    "filename": "src/main/lesson8/homework/IBarrier.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/tistyyyk/JavaEducation/blob/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/IBarrier.java",
    "raw_url": "https://github.com/tistyyyk/JavaEducation/raw/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/IBarrier.java",
    "contents_url": "https://api.github.com/repos/tistyyyk/JavaEducation/contents/src/main/lesson8/homework/IBarrier.java?ref=6a9e34ba638715399c5bb4c45b883df42ac4f4ac",
    "patch": "@@ -0,0 +1,6 @@\n+package main.lesson8.homework;\n+\n+public interface IBarrier {\n+\n+    boolean overcome(IParticipant participant);\n+}"
  },
  {
    "sha": "59997827983e80be2feee208aeb291520a6af1a3",
    "filename": "src/main/lesson8/homework/IParticipant.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/tistyyyk/JavaEducation/blob/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/IParticipant.java",
    "raw_url": "https://github.com/tistyyyk/JavaEducation/raw/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/IParticipant.java",
    "contents_url": "https://api.github.com/repos/tistyyyk/JavaEducation/contents/src/main/lesson8/homework/IParticipant.java?ref=6a9e34ba638715399c5bb4c45b883df42ac4f4ac",
    "patch": "@@ -0,0 +1,10 @@\n+package main.lesson8.homework;\n+\n+public interface IParticipant {\n+\n+    void run(int length);\n+    void jump(int heigth);\n+\n+    int getRunnable();\n+    int getJumpable();\n+}"
  },
  {
    "sha": "b368be99fb46260f207f62ca4ced451896337b30",
    "filename": "src/main/lesson8/homework/Main.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/tistyyyk/JavaEducation/blob/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Main.java",
    "raw_url": "https://github.com/tistyyyk/JavaEducation/raw/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Main.java",
    "contents_url": "https://api.github.com/repos/tistyyyk/JavaEducation/contents/src/main/lesson8/homework/Main.java?ref=6a9e34ba638715399c5bb4c45b883df42ac4f4ac",
    "patch": "@@ -0,0 +1,50 @@\n+package main.lesson8.homework;\n+\n+import java.util.Arrays;\n+import java.util.Random;\n+\n+public class Main {\n+    public static void main(String[] args) {\n+        Random random = new Random();\n+        int barriersCount = 5;\n+        \n+        Cat cat = new Cat();\n+        Human human = new Human();\n+        Robot robot = new Robot();\n+\n+        IParticipant[] participants = {cat, human, robot};\n+        IBarrier[] barriers = new IBarrier[barriersCount];\n+\n+        makeRace(random, barriers);//создаем трассу из рандомных препятствий рандомной величины\n+        System.out.println(Arrays.toString(barriers));\n+\n+        runRace(participants, barriers);\n+\n+    }\n+\n+    private static void runRace(IParticipant[] participants, IBarrier[] barriers) {\n+        for (IParticipant participant: participants) {\n+            for (IBarrier barrier: barriers) {\n+                if (!barrier.overcome(participant)) {\n+                    System.out.println(participant.toString()+\" выбыл.\");\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void makeRace(Random random, IBarrier[] barriers) {\n+        for (int i = 0; i < barriers.length; i++) {\n+            switch (random.nextInt(2)) {\n+                case 0 :\n+                    barriers[i] = new Wall(random.nextInt(20)+5);\n+                    break;\n+                case 1:\n+                    barriers[i] = new Racetrack(random.nextInt(20)+5);\n+                    break;\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "8849cae2b2bc6e68b21b2576fa4f76d49a629351",
    "filename": "src/main/lesson8/homework/Racetrack.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/tistyyyk/JavaEducation/blob/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Racetrack.java",
    "raw_url": "https://github.com/tistyyyk/JavaEducation/raw/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Racetrack.java",
    "contents_url": "https://api.github.com/repos/tistyyyk/JavaEducation/contents/src/main/lesson8/homework/Racetrack.java?ref=6a9e34ba638715399c5bb4c45b883df42ac4f4ac",
    "patch": "@@ -0,0 +1,23 @@\n+package main.lesson8.homework;\n+\n+public class Racetrack implements IBarrier{\n+    private int length;\n+\n+    public Racetrack (int length) {\n+        this.length = length;\n+    }\n+\n+    @Override\n+    public boolean overcome(IParticipant participant) {\n+        if (participant.getRunnable() >= length) {\n+            participant.run(length);\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public String toString(){\n+        return \"Track \"+this.length;\n+    }\n+}"
  },
  {
    "sha": "96fd31f019d969066be54c8e483ede6944a738b3",
    "filename": "src/main/lesson8/homework/Robot.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/tistyyyk/JavaEducation/blob/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Robot.java",
    "raw_url": "https://github.com/tistyyyk/JavaEducation/raw/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Robot.java",
    "contents_url": "https://api.github.com/repos/tistyyyk/JavaEducation/contents/src/main/lesson8/homework/Robot.java?ref=6a9e34ba638715399c5bb4c45b883df42ac4f4ac",
    "patch": "@@ -0,0 +1,32 @@\n+package main.lesson8.homework;\n+\n+public class Robot implements IParticipant{\n+\n+    private static int runnable = 100;\n+    private static int jumpable = 100;\n+\n+    public Robot() {}\n+\n+    @Override\n+    public void run(int length) {\n+        System.out.println(\"Робот пробежал \"+length+\"м.\");\n+    }\n+\n+    @Override\n+    public void jump(int heigth) {\n+        System.out.println(\"Робот перепрыгнул \"+heigth+\"м.\");\n+    }\n+\n+    public int getRunnable(){\n+        return runnable;\n+    }\n+\n+    public int getJumpable(){\n+        return jumpable;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Робот\";\n+    }\n+}"
  },
  {
    "sha": "f6e6953a7bc3333710b8301a18afa1befb862057",
    "filename": "src/main/lesson8/homework/Wall.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/tistyyyk/JavaEducation/blob/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Wall.java",
    "raw_url": "https://github.com/tistyyyk/JavaEducation/raw/6a9e34ba638715399c5bb4c45b883df42ac4f4ac/src/main/lesson8/homework/Wall.java",
    "contents_url": "https://api.github.com/repos/tistyyyk/JavaEducation/contents/src/main/lesson8/homework/Wall.java?ref=6a9e34ba638715399c5bb4c45b883df42ac4f4ac",
    "patch": "@@ -0,0 +1,24 @@\n+package main.lesson8.homework;\n+\n+public class Wall implements IBarrier{\n+    private int height;\n+\n+    public Wall (int height) {\n+        this.height = height;\n+    }\n+\n+    @Override\n+    public boolean overcome(IParticipant participant) {\n+        if (participant.getJumpable() >= height) {\n+            participant.jump(height);\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public String toString(){\n+        return \"Wall \"+this.height;\n+    }\n+\n+}"
  }
]
