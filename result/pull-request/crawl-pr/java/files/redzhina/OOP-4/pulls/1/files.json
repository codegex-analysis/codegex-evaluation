[
  {
    "sha": "db266994ba7ba0068f3a036249e1713ac90b820e",
    "filename": ".github/workflows/maven.yml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/.github/workflows/maven.yml",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/.github/workflows/maven.yml",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/.github/workflows/maven.yml?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -21,4 +21,4 @@ jobs:\n       with:\n         java-version: 11\n     - name: Build with Maven\n-      run: mvn -B package --file pom.xml\n+      run: mvn -B -e verify"
  },
  {
    "sha": "23699ae002665c970824b5f8253280921223ca83",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/pom.xml",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/pom.xml",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/pom.xml?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -3,33 +3,33 @@\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n     <modelVersion>4.0.0</modelVersion>\n-\n     <groupId>ru.netology</groupId>\n     <artifactId>statistics</artifactId>\n     <version>1.0-SNAPSHOT</version>\n-\n     <properties>\n         <maven.compiler.source>11</maven.compiler.source>\n         <maven.compiler.target>11</maven.compiler.target>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n     </properties>\n-\n     <dependencies>\n         <dependency>\n             <groupId>org.junit.jupiter</groupId>\n             <artifactId>junit-jupiter</artifactId>\n-            <version>5.4.2</version>\n+            <version>5.7.1</version>\n             <scope>test</scope>\n         </dependency>\n-\n         <dependency>\n             <groupId>org.projectlombok</groupId>\n             <artifactId>lombok</artifactId>\n-            <version>1.18.16</version>\n+            <version>1.18.18</version>\n             <scope>provided</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.mockito</groupId>\n+            <artifactId>mockito-junit-jupiter</artifactId>\n+            <version>3.8.0</version>\n+        </dependency>\n     </dependencies>\n-\n     <build>\n         <plugins>\n             <plugin>\n@@ -43,7 +43,7 @@\n             <plugin>\n                 <groupId>org.jacoco</groupId>\n                 <artifactId>jacoco-maven-plugin</artifactId>\n-                <version>0.8.5</version>\n+                <version>0.8.6</version>\n                 <executions>\n                     <execution>\n                         <id>prepare-agent</id>"
  },
  {
    "sha": "951294acb0b66d594890beddc1604fe7955050be",
    "filename": "src/main/java/ru/netology/domain/MovieItem.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/src/main/java/ru/netology/domain/MovieItem.java",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/src/main/java/ru/netology/domain/MovieItem.java",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/src/main/java/ru/netology/domain/MovieItem.java?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -7,10 +7,9 @@\n @NoArgsConstructor\n @AllArgsConstructor\n @Data\n-public class PurchaseItem {\n+public class MovieItem {\n     private int id;\n-    private int productId;\n-    private String productName;\n-    private int productPrice;\n-    private int count;\n+    private String imageUrl;\n+    private String name;\n+    private String genre;\n }\n\\ No newline at end of file",
    "previous_filename": "src/main/java/ru/netology/domain/PurchaseItem.java"
  },
  {
    "sha": "b1887eb4dd3968c678a5cec001b85d8ca784210d",
    "filename": "src/main/java/ru/netology/manager/AfishaManager.java",
    "status": "renamed",
    "additions": 45,
    "deletions": 19,
    "changes": 64,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/src/main/java/ru/netology/manager/AfishaManager.java",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/src/main/java/ru/netology/manager/AfishaManager.java",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/src/main/java/ru/netology/manager/AfishaManager.java?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -1,14 +1,43 @@\n package ru.netology.manager;\n+import lombok.AllArgsConstructor;\n+import lombok.NoArgsConstructor;\n+import lombok.Data;\n \n-import ru.netology.domain.PurchaseItem;\n+import ru.netology.domain.MovieItem;\n \n-public class CartManager {\n-    private PurchaseItem[] items = new PurchaseItem[0];\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Data\n \n-    public void add(PurchaseItem item) {\n+public class AfishaManager {\n+    private MovieItem[] items = new MovieItem[0];\n+    private int moviesFeed = 10;\n+\n+    public AfishaManager(int moviesFeed) {\n+        this.moviesFeed = moviesFeed;\n+    }\n+\n+\n+    // наивная реализация\n+    public void removeById(int id) {\n+        int length = items.length - 1;\n+        MovieItem[] tmp = new MovieItem[length];\n+        int index = 0;\n+        for (MovieItem item : items) {\n+            if (item.getId() != id) {\n+                tmp[index] = item;\n+                index++;\n+            }\n+        }\n+        // меняем наши элементы\n+        items = tmp;\n+    }\n+\n+\n+    public void add(MovieItem item) {\n         // создаём новый массив размером на единицу больше\n         int length = items.length + 1;\n-        PurchaseItem[] tmp = new PurchaseItem[length];\n+        MovieItem[] tmp = new MovieItem[length];\n         // itar + tab\n         // копируем поэлементно\n         // for (int i = 0; i < items.length; i++) {\n@@ -21,8 +50,8 @@ public void add(PurchaseItem item) {\n         items = tmp;\n     }\n \n-    public PurchaseItem[] getAll() {\n-        PurchaseItem[] result = new PurchaseItem[items.length];\n+    public MovieItem[] getAll() {\n+        MovieItem[] result = new MovieItem[items.length];\n         // перебираем массив в прямом порядке\n         // но кладём в результаты в обратном\n         for (int i = 0; i < result.length; i++) {\n@@ -32,18 +61,15 @@ public void add(PurchaseItem item) {\n         return result;\n     }\n \n-    // наивная реализация\n-    public void removeById(int id) {\n-        int length = items.length - 1;\n-        PurchaseItem[] tmp = new PurchaseItem[length];\n-        int index = 0;\n-        for (PurchaseItem item : items) {\n-            if (item.getId() != id) {\n-                tmp[index] = item;\n-                index++;\n-            }\n+    public MovieItem[] getMoviesForFeed() {\n+        int feed = this.moviesFeed;\n+        if (feed > items.length)\n+            feed = items.length;\n+        MovieItem[] result = new MovieItem[feed];\n+        for (int i = 0; i < result.length; i++) {\n+            int index = items.length - i - 1;\n+            result[i] = items[index];\n         }\n-        // меняем наши элементы\n-        items = tmp;\n+        return result;\n     }\n }\n\\ No newline at end of file",
    "previous_filename": "src/main/java/ru/netology/manager/CartManager.java"
  },
  {
    "sha": "78d7698f5651f7b432aeb0abd0ee3051bfb47932",
    "filename": "src/test/java/ru/netology/manager/AfishaManagerTest.java",
    "status": "added",
    "additions": 108,
    "deletions": 0,
    "changes": 108,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/src/test/java/ru/netology/manager/AfishaManagerTest.java",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/src/test/java/ru/netology/manager/AfishaManagerTest.java",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/src/test/java/ru/netology/manager/AfishaManagerTest.java?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -0,0 +1,108 @@\n+package ru.netology.manager;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import ru.netology.domain.MovieItem;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+\n+public class AfishaManagerTest {\n+    private AfishaManager manager = new AfishaManager();\n+    MovieItem first = new MovieItem(1, \"Афиша\", \"Бладшот\", \"Боевик\");\n+    MovieItem second = new MovieItem(2, \"Афиша\", \"Вперед\", \"Мультфильм\");\n+    MovieItem third = new MovieItem(3, \"Афиша\", \"Отель Белград\", \"Комедия\");\n+    MovieItem fourth = new MovieItem(4, \"Афиша\", \"Джентльмены\", \"Боевик\");\n+    MovieItem fifth = new MovieItem(5, \"Афиша\", \"Человек-невидимка\", \"Ужасы\");\n+\n+    public void setUp() {\n+\n+        manager.add(first);\n+        manager.add(second);\n+        manager.add(third);\n+        manager.add(fourth);\n+        manager.add(fifth);\n+    }\n+\n+    @Test\n+\n+    public void shouldGetEmpty() {\n+        MovieItem[] expected = new MovieItem[0];\n+        MovieItem[] actual = manager.getAll();\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+\n+    public void shouldAddToEmptyFeed() {\n+        manager.add(first);\n+        MovieItem[] expected = new MovieItem[]{first};\n+        MovieItem[] actual = manager.getAll();\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+\n+    public void shouldRemoveIfExists() {\n+        AfishaManager manager = new AfishaManager();\n+        int idToRemove = 1;\n+        MovieItem first = new MovieItem(1, \"Афиша\", \"Бладшот\", \"Боевик\");\n+        MovieItem second = new MovieItem(2, \"Афиша\", \"Вперед\", \"Мультфильм\");\n+        MovieItem third = new MovieItem(3, \"Афиша\", \"Отель Белград\", \"Комедия\");\n+        manager.add(first);\n+        manager.add(second);\n+        manager.add(third);\n+\n+        manager.removeById(idToRemove);\n+\n+        MovieItem[] actual = manager.getAll();\n+        MovieItem[] expected = new MovieItem[]{third, second};\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+\n+    public void shouldGetAll() {\n+        setUp();\n+        MovieItem[] expected = new MovieItem[]{fifth, fourth, third, second, first};\n+        MovieItem[] actual = manager.getAll();\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+\n+    public void shouldAddToFeedWithOneItem() {\n+        manager.add(first);\n+        MovieItem[] expected = new MovieItem[]{first};\n+        MovieItem[] actual = manager.getAll();\n+        assertArrayEquals(expected, actual);\n+        manager.add(second);\n+        MovieItem[] expectedWasAdded = new MovieItem[]{second, first};\n+        MovieItem[] actualWasAdded = manager.getAll();\n+        assertArrayEquals(expectedWasAdded, actualWasAdded);\n+    }\n+\n+\n+    @Test\n+\n+    public void shouldAddMoviesForFeed() {\n+        setUp();\n+        MovieItem[] expected = new MovieItem[]{fifth, fourth, third, second, first};\n+        MovieItem[] actual = manager.getMoviesForFeed();\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+\n+    public void shouldAddMoviesForFlexibleFeed() {\n+        manager = new AfishaManager(3);\n+        setUp();\n+        MovieItem[] expected = new MovieItem[] {fifth, fourth, third};\n+        MovieItem[] actual = manager.getMoviesForFeed();\n+        assertArrayEquals(expected, actual);\n+    }\n+}\n+\n+"
  },
  {
    "sha": "b94b05df55e0a17d974ffbc14d7a7bbf6a103632",
    "filename": "src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java",
    "status": "removed",
    "additions": 0,
    "deletions": 48,
    "changes": 48,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/1b0062d6eed82cd2db4457227ad3b862e24590f9/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/1b0062d6eed82cd2db4457227ad3b862e24590f9/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/src/test/java/ru/netology/manager/CartManagerTestNonEmpty.java?ref=1b0062d6eed82cd2db4457227ad3b862e24590f9",
    "patch": "@@ -1,48 +0,0 @@\n-package ru.netology.manager;\n-\n-import org.junit.jupiter.api.Test;\n-import ru.netology.domain.PurchaseItem;\n-import ru.netology.manager.CartManager;\n-\n-import static org.junit.jupiter.api.Assertions.*;\n-\n-public class CartManagerTestNonEmpty {\n-    @Test\n-    public void shouldRemoveIfExists() {\n-        CartManager manager = new CartManager();\n-        int idToRemove = 1;\n-        PurchaseItem first = new PurchaseItem(1, 1, \"first\", 1, 1);\n-        PurchaseItem second = new PurchaseItem(2, 2, \"second\", 1, 1);\n-        PurchaseItem third = new PurchaseItem(3, 3, \"third\", 1, 1);\n-        manager.add(first);\n-        manager.add(second);\n-        manager.add(third);\n-\n-        manager.removeById(idToRemove);\n-\n-        PurchaseItem[] actual = manager.getAll();\n-        PurchaseItem[] expected = new PurchaseItem[]{third, second};\n-\n-//    assertEquals(expected, actual);\n-        assertArrayEquals(expected, actual);\n-    }\n-\n-    @Test\n-    public void shouldNotRemoveIfNotExists() {\n-        CartManager manager = new CartManager();\n-        int idToRemove = 4;\n-        PurchaseItem first = new PurchaseItem(1, 1, \"first\", 1, 1);\n-        PurchaseItem second = new PurchaseItem(2, 2, \"second\", 1, 1);\n-        PurchaseItem third = new PurchaseItem(3, 3, \"third\", 1, 1);\n-        manager.add(first);\n-        manager.add(second);\n-        manager.add(third);\n-\n-        manager.removeById(idToRemove);\n-\n-        PurchaseItem[] actual = manager.getAll();\n-        PurchaseItem[] expected = new PurchaseItem[]{third, second, first};\n-\n-        assertArrayEquals(expected, actual);\n-    }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "c6b39a0b9234c994ef734a036c67ccb5db16b320",
    "filename": "src/test/java/ru/netology/manager/CartManagerTestNonEmptyWithSetup.java",
    "status": "removed",
    "additions": 0,
    "deletions": 46,
    "changes": 46,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/1b0062d6eed82cd2db4457227ad3b862e24590f9/src/test/java/ru/netology/manager/CartManagerTestNonEmptyWithSetup.java",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/1b0062d6eed82cd2db4457227ad3b862e24590f9/src/test/java/ru/netology/manager/CartManagerTestNonEmptyWithSetup.java",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/src/test/java/ru/netology/manager/CartManagerTestNonEmptyWithSetup.java?ref=1b0062d6eed82cd2db4457227ad3b862e24590f9",
    "patch": "@@ -1,46 +0,0 @@\n-package ru.netology.manager;\n-\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n-import ru.netology.domain.PurchaseItem;\n-import ru.netology.manager.CartManager;\n-\n-import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n-\n-public class CartManagerTestNonEmptyWithSetup {\n-    private CartManager manager = new CartManager();\n-    private PurchaseItem first = new PurchaseItem(1, 1, \"first\", 1, 1);\n-    private PurchaseItem second = new PurchaseItem(2, 2, \"second\", 1, 1);\n-    private PurchaseItem third = new PurchaseItem(3, 3, \"third\", 1, 1);\n-\n-    @BeforeEach\n-    public void setUp() {\n-        manager.add(first);\n-        manager.add(second);\n-        manager.add(third);\n-    }\n-\n-    @Test\n-    public void shouldRemoveIfExists() {\n-        int idToRemove = 1;\n-        manager.removeById(idToRemove);\n-\n-        PurchaseItem[] actual = manager.getAll();\n-        PurchaseItem[] expected = new PurchaseItem[]{third, second};\n-\n-//    assertEquals(expected, actual);\n-        assertArrayEquals(expected, actual);\n-    }\n-\n-    @Test\n-    public void shouldNotRemoveIfNotExists() {\n-        int idToRemove = 4;\n-\n-        manager.removeById(idToRemove);\n-\n-        PurchaseItem[] actual = manager.getAll();\n-        PurchaseItem[] expected = new PurchaseItem[]{third, second, first};\n-\n-        assertArrayEquals(expected, actual);\n-    }\n-}"
  },
  {
    "sha": "bd92d8f66709aa20c67a3587ac2c9c03fe1a4de8",
    "filename": "target/classes/ru/netology/domain/MovieItem.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/classes/ru/netology/domain/MovieItem.class",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/classes/ru/netology/domain/MovieItem.class",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/classes/ru/netology/domain/MovieItem.class?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "4d96a2ecd8987c254b52fee679b0dc3a41fb9b17",
    "filename": "target/classes/ru/netology/manager/AfishaManager.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/classes/ru/netology/manager/AfishaManager.class",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/classes/ru/netology/manager/AfishaManager.class",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/classes/ru/netology/manager/AfishaManager.class?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "dacaa907e1c09326959fb76e73e9f9bcdeec780b",
    "filename": "target/jacoco.exec",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/jacoco.exec",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/jacoco.exec",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/jacoco.exec?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "1eb0d69f82b495069bda640328f3b801b8735924",
    "filename": "target/maven-archiver/pom.properties",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/maven-archiver/pom.properties",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/maven-archiver/pom.properties",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/maven-archiver/pom.properties?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -0,0 +1,5 @@\n+#Generated by Maven\n+#Wed Mar 10 22:28:53 MSK 2021\n+groupId=ru.netology\n+artifactId=statistics\n+version=1.0-SNAPSHOT"
  },
  {
    "sha": "adf85a567fa166fa4f17af8389830bd80a4f5d2e",
    "filename": "target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -0,0 +1,2 @@\n+ru\\netology\\manager\\AfishaManager.class\n+ru\\netology\\domain\\MovieItem.class"
  },
  {
    "sha": "680490760711435fb11fa6adbe9e370cfc5af841",
    "filename": "target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -0,0 +1,2 @@\n+C:\\Projects\\java-oop4\\src\\main\\java\\ru\\netology\\manager\\AfishaManager.java\n+C:\\Projects\\java-oop4\\src\\main\\java\\ru\\netology\\domain\\MovieItem.java"
  },
  {
    "sha": "c75e7b17d220b2596caec4b0df069f66830a01e6",
    "filename": "target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -0,0 +1 @@\n+ru\\netology\\manager\\AfishaManagerTest.class"
  },
  {
    "sha": "04dfed4a9a91a6cd22d3279a317f2365a4e5651e",
    "filename": "target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -0,0 +1 @@\n+C:\\Projects\\java-oop4\\src\\test\\java\\ru\\netology\\manager\\AfishaManagerTest.java"
  },
  {
    "sha": "37eb5ee4d296e465123ec8f57aa4d7c880fb5671",
    "filename": "target/site/jacoco/index.html",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/index.html",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/index.html",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/index.html?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -0,0 +1 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"ru\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"jacoco-resources/report.gif\" type=\"image/gif\"/><title>statistics</title><script type=\"text/javascript\" src=\"jacoco-resources/sort.js\"></script></head><body onload=\"initialSort(['breadcrumb', 'coveragetable'])\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><span class=\"el_report\">statistics</span></div><h1>statistics</h1><table class=\"coverage\" cellspacing=\"0\" id=\"coveragetable\"><thead><tr><td class=\"sortable\" id=\"a\" onclick=\"toggleSort(this)\">Element</td><td class=\"down sortable bar\" id=\"b\" onclick=\"toggleSort(this)\">Missed Instructions</td><td class=\"sortable ctr2\" id=\"c\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable bar\" id=\"d\" onclick=\"toggleSort(this)\">Missed Branches</td><td class=\"sortable ctr2\" id=\"e\" onclick=\"toggleSort(this)\">Cov.</td><td class=\"sortable ctr1\" id=\"f\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"g\" onclick=\"toggleSort(this)\">Cxty</td><td class=\"sortable ctr1\" id=\"h\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"i\" onclick=\"toggleSort(this)\">Lines</td><td class=\"sortable ctr1\" id=\"j\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"k\" onclick=\"toggleSort(this)\">Methods</td><td class=\"sortable ctr1\" id=\"l\" onclick=\"toggleSort(this)\">Missed</td><td class=\"sortable ctr2\" id=\"m\" onclick=\"toggleSort(this)\">Classes</td></tr></thead><tfoot><tr><td>Total</td><td class=\"bar\">275 of 414</td><td class=\"ctr2\">33 %</td><td class=\"bar\">42 of 48</td><td class=\"ctr2\">12 %</td><td class=\"ctr1\">43</td><td class=\"ctr2\">52</td><td class=\"ctr1\">8</td><td class=\"ctr2\">35</td><td class=\"ctr1\">22</td><td class=\"ctr2\">28</td><td class=\"ctr1\">0</td><td class=\"ctr2\">2</td></tr></tfoot><tbody><tr><td id=\"a0\"><a href=\"ru.netology.domain/index.html\" class=\"el_package\">ru.netology.domain</a></td><td class=\"bar\" id=\"b0\"><img src=\"jacoco-resources/redbar.gif\" width=\"96\" height=\"10\" title=\"178\" alt=\"178\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"8\" height=\"10\" title=\"15\" alt=\"15\"/></td><td class=\"ctr2\" id=\"c1\">7 %</td><td class=\"bar\" id=\"d0\"><img src=\"jacoco-resources/redbar.gif\" width=\"120\" height=\"10\" title=\"32\" alt=\"32\"/></td><td class=\"ctr2\" id=\"e1\">0 %</td><td class=\"ctr1\" id=\"f0\">29</td><td class=\"ctr2\" id=\"g0\">30</td><td class=\"ctr1\" id=\"h0\">6</td><td class=\"ctr2\" id=\"i1\">7</td><td class=\"ctr1\" id=\"j0\">13</td><td class=\"ctr2\" id=\"k0\">14</td><td class=\"ctr1\" id=\"l0\">0</td><td class=\"ctr2\" id=\"m0\">1</td></tr><tr><td id=\"a1\"><a href=\"ru.netology.manager/index.html\" class=\"el_package\">ru.netology.manager</a></td><td class=\"bar\" id=\"b1\"><img src=\"jacoco-resources/redbar.gif\" width=\"52\" height=\"10\" title=\"97\" alt=\"97\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"67\" height=\"10\" title=\"124\" alt=\"124\"/></td><td class=\"ctr2\" id=\"c0\">56 %</td><td class=\"bar\" id=\"d1\"><img src=\"jacoco-resources/redbar.gif\" width=\"37\" height=\"10\" title=\"10\" alt=\"10\"/><img src=\"jacoco-resources/greenbar.gif\" width=\"22\" height=\"10\" title=\"6\" alt=\"6\"/></td><td class=\"ctr2\" id=\"e0\">37 %</td><td class=\"ctr1\" id=\"f1\">14</td><td class=\"ctr2\" id=\"g1\">22</td><td class=\"ctr1\" id=\"h1\">2</td><td class=\"ctr2\" id=\"i0\">28</td><td class=\"ctr1\" id=\"j1\">9</td><td class=\"ctr2\" id=\"k1\">14</td><td class=\"ctr1\" id=\"l1\">0</td><td class=\"ctr2\" id=\"m1\">1</td></tr></tbody></table><div class=\"footer\"><span class=\"right\">Created with <a href=\"http://www.jacoco.org/jacoco\">JaCoCo</a> 0.8.6.202009150832</span></div></body></html>\n\\ No newline at end of file"
  },
  {
    "sha": "989b46d30469b56b014758f846ee6c5abfda16aa",
    "filename": "target/site/jacoco/jacoco-resources/branchfc.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/branchfc.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/branchfc.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/branchfc.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "1933e07c376bb71bdd9aac91cf858da3fcdb0f1c",
    "filename": "target/site/jacoco/jacoco-resources/branchnc.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/branchnc.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/branchnc.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/branchnc.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "cbf711b7030929b733f22f7a0cf3dbf61fe7868f",
    "filename": "target/site/jacoco/jacoco-resources/branchpc.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/branchpc.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/branchpc.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/branchpc.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "fca9c53e629a7a5c07186ac1e2a1e37d8d6e88f4",
    "filename": "target/site/jacoco/jacoco-resources/bundle.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/bundle.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/bundle.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/bundle.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "eb348fb0d498d75976150047b1b5c2fefc9dc220",
    "filename": "target/site/jacoco/jacoco-resources/class.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/class.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/class.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/class.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "440a14db74e76c2b6e854eacac1c44414b166271",
    "filename": "target/site/jacoco/jacoco-resources/down.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/down.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/down.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/down.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "0ba65672530ee09f086821a26156836d0c91bd74",
    "filename": "target/site/jacoco/jacoco-resources/greenbar.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/greenbar.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/greenbar.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/greenbar.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "a4ea580d278fb727e4ae692838877fa63c4becf9",
    "filename": "target/site/jacoco/jacoco-resources/group.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/group.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/group.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/group.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "7d24707ee82f54aa9fb10d1d9050013cbf161a7a",
    "filename": "target/site/jacoco/jacoco-resources/method.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/method.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/method.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/method.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "131c28da405493661e3253ef79a68bd273039295",
    "filename": "target/site/jacoco/jacoco-resources/package.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/package.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/package.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/package.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "be5166e0fc597d6448daef5476915f82081c07e1",
    "filename": "target/site/jacoco/jacoco-resources/prettify.css",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/prettify.css",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/prettify.css",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/prettify.css?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -0,0 +1,13 @@\n+/* Pretty printing styles. Used with prettify.js. */\n+\n+.str { color: #2A00FF; }\n+.kwd { color: #7F0055; font-weight:bold; }\n+.com { color: #3F5FBF; }\n+.typ { color: #606; }\n+.lit { color: #066; }\n+.pun { color: #660; }\n+.pln { color: #000; }\n+.tag { color: #008; }\n+.atn { color: #606; }\n+.atv { color: #080; }\n+.dec { color: #606; }"
  },
  {
    "sha": "b2766fe0a333a41bc3597935ff15b444a15f82ef",
    "filename": "target/site/jacoco/jacoco-resources/prettify.js",
    "status": "added",
    "additions": 1510,
    "deletions": 0,
    "changes": 1510,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/prettify.js",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/prettify.js",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/prettify.js?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -0,0 +1,1510 @@\n+// Copyright (C) 2006 Google Inc.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+\n+/**\n+ * @fileoverview\n+ * some functions for browser-side pretty printing of code contained in html.\n+ * <p>\n+ *\n+ * For a fairly comprehensive set of languages see the\n+ * <a href=\"http://google-code-prettify.googlecode.com/svn/trunk/README.html#langs\">README</a>\n+ * file that came with this source.  At a minimum, the lexer should work on a\n+ * number of languages including C and friends, Java, Python, Bash, SQL, HTML,\n+ * XML, CSS, Javascript, and Makefiles.  It works passably on Ruby, PHP and Awk\n+ * and a subset of Perl, but, because of commenting conventions, doesn't work on\n+ * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class.\n+ * <p>\n+ * Usage: <ol>\n+ * <li> include this source file in an html page via\n+ *   {@code <script type=\"text/javascript\" src=\"/path/to/prettify.js\"></script>}\n+ * <li> define style rules.  See the example page for examples.\n+ * <li> mark the {@code <pre>} and {@code <code>} tags in your source with\n+ *    {@code class=prettyprint.}\n+ *    You can also use the (html deprecated) {@code <xmp>} tag, but the pretty\n+ *    printer needs to do more substantial DOM manipulations to support that, so\n+ *    some css styles may not be preserved.\n+ * </ol>\n+ * That's it.  I wanted to keep the API as simple as possible, so there's no\n+ * need to specify which language the code is in, but if you wish, you can add\n+ * another class to the {@code <pre>} or {@code <code>} element to specify the\n+ * language, as in {@code <pre class=\"prettyprint lang-java\">}.  Any class that\n+ * starts with \"lang-\" followed by a file extension, specifies the file type.\n+ * See the \"lang-*.js\" files in this directory for code that implements\n+ * per-language file handlers.\n+ * <p>\n+ * Change log:<br>\n+ * cbeust, 2006/08/22\n+ * <blockquote>\n+ *   Java annotations (start with \"@\") are now captured as literals (\"lit\")\n+ * </blockquote>\n+ * @requires console\n+ */\n+\n+// JSLint declarations\n+/*global console, document, navigator, setTimeout, window */\n+\n+/**\n+ * Split {@code prettyPrint} into multiple timeouts so as not to interfere with\n+ * UI events.\n+ * If set to {@code false}, {@code prettyPrint()} is synchronous.\n+ */\n+window['PR_SHOULD_USE_CONTINUATION'] = true;\n+\n+/** the number of characters between tab columns */\n+window['PR_TAB_WIDTH'] = 8;\n+\n+/** Walks the DOM returning a properly escaped version of innerHTML.\n+  * @param {Node} node\n+  * @param {Array.<string>} out output buffer that receives chunks of HTML.\n+  */\n+window['PR_normalizedHtml']\n+\n+/** Contains functions for creating and registering new language handlers.\n+  * @type {Object}\n+  */\n+  = window['PR']\n+\n+/** Pretty print a chunk of code.\n+  *\n+  * @param {string} sourceCodeHtml code as html\n+  * @return {string} code as html, but prettier\n+  */\n+  = window['prettyPrintOne']\n+/** Find all the {@code <pre>} and {@code <code>} tags in the DOM with\n+  * {@code class=prettyprint} and prettify them.\n+  * @param {Function?} opt_whenDone if specified, called when the last entry\n+  *     has been finished.\n+  */\n+  = window['prettyPrint'] = void 0;\n+\n+/** browser detection. @extern @returns false if not IE, otherwise the major version. */\n+window['_pr_isIE6'] = function () {\n+  var ieVersion = navigator && navigator.userAgent &&\n+      navigator.userAgent.match(/\\bMSIE ([678])\\./);\n+  ieVersion = ieVersion ? +ieVersion[1] : false;\n+  window['_pr_isIE6'] = function () { return ieVersion; };\n+  return ieVersion;\n+};\n+\n+\n+(function () {\n+  // Keyword lists for various languages.\n+  var FLOW_CONTROL_KEYWORDS =\n+      \"break continue do else for if return while \";\n+  var C_KEYWORDS = FLOW_CONTROL_KEYWORDS + \"auto case char const default \" +\n+      \"double enum extern float goto int long register short signed sizeof \" +\n+      \"static struct switch typedef union unsigned void volatile \";\n+  var COMMON_KEYWORDS = C_KEYWORDS + \"catch class delete false import \" +\n+      \"new operator private protected public this throw true try typeof \";\n+  var CPP_KEYWORDS = COMMON_KEYWORDS + \"alignof align_union asm axiom bool \" +\n+      \"concept concept_map const_cast constexpr decltype \" +\n+      \"dynamic_cast explicit export friend inline late_check \" +\n+      \"mutable namespace nullptr reinterpret_cast static_assert static_cast \" +\n+      \"template typeid typename using virtual wchar_t where \";\n+  var JAVA_KEYWORDS = COMMON_KEYWORDS +\n+      \"abstract boolean byte extends final finally implements import \" +\n+      \"instanceof null native package strictfp super synchronized throws \" +\n+      \"transient \";\n+  var CSHARP_KEYWORDS = JAVA_KEYWORDS +\n+      \"as base by checked decimal delegate descending event \" +\n+      \"fixed foreach from group implicit in interface internal into is lock \" +\n+      \"object out override orderby params partial readonly ref sbyte sealed \" +\n+      \"stackalloc string select uint ulong unchecked unsafe ushort var \";\n+  var JSCRIPT_KEYWORDS = COMMON_KEYWORDS +\n+      \"debugger eval export function get null set undefined var with \" +\n+      \"Infinity NaN \";\n+  var PERL_KEYWORDS = \"caller delete die do dump elsif eval exit foreach for \" +\n+      \"goto if import last local my next no our print package redo require \" +\n+      \"sub undef unless until use wantarray while BEGIN END \";\n+  var PYTHON_KEYWORDS = FLOW_CONTROL_KEYWORDS + \"and as assert class def del \" +\n+      \"elif except exec finally from global import in is lambda \" +\n+      \"nonlocal not or pass print raise try with yield \" +\n+      \"False True None \";\n+  var RUBY_KEYWORDS = FLOW_CONTROL_KEYWORDS + \"alias and begin case class def\" +\n+      \" defined elsif end ensure false in module next nil not or redo rescue \" +\n+      \"retry self super then true undef unless until when yield BEGIN END \";\n+  var SH_KEYWORDS = FLOW_CONTROL_KEYWORDS + \"case done elif esac eval fi \" +\n+      \"function in local set then until \";\n+  var ALL_KEYWORDS = (\n+      CPP_KEYWORDS + CSHARP_KEYWORDS + JSCRIPT_KEYWORDS + PERL_KEYWORDS +\n+      PYTHON_KEYWORDS + RUBY_KEYWORDS + SH_KEYWORDS);\n+\n+  // token style names.  correspond to css classes\n+  /** token style for a string literal */\n+  var PR_STRING = 'str';\n+  /** token style for a keyword */\n+  var PR_KEYWORD = 'kwd';\n+  /** token style for a comment */\n+  var PR_COMMENT = 'com';\n+  /** token style for a type */\n+  var PR_TYPE = 'typ';\n+  /** token style for a literal value.  e.g. 1, null, true. */\n+  var PR_LITERAL = 'lit';\n+  /** token style for a punctuation string. */\n+  var PR_PUNCTUATION = 'pun';\n+  /** token style for a punctuation string. */\n+  var PR_PLAIN = 'pln';\n+\n+  /** token style for an sgml tag. */\n+  var PR_TAG = 'tag';\n+  /** token style for a markup declaration such as a DOCTYPE. */\n+  var PR_DECLARATION = 'dec';\n+  /** token style for embedded source. */\n+  var PR_SOURCE = 'src';\n+  /** token style for an sgml attribute name. */\n+  var PR_ATTRIB_NAME = 'atn';\n+  /** token style for an sgml attribute value. */\n+  var PR_ATTRIB_VALUE = 'atv';\n+\n+  /**\n+   * A class that indicates a section of markup that is not code, e.g. to allow\n+   * embedding of line numbers within code listings.\n+   */\n+  var PR_NOCODE = 'nocode';\n+\n+  /** A set of tokens that can precede a regular expression literal in\n+    * javascript.\n+    * http://www.mozilla.org/js/language/js20/rationale/syntax.html has the full\n+    * list, but I've removed ones that might be problematic when seen in\n+    * languages that don't support regular expression literals.\n+    *\n+    * <p>Specifically, I've removed any keywords that can't precede a regexp\n+    * literal in a syntactically legal javascript program, and I've removed the\n+    * \"in\" keyword since it's not a keyword in many languages, and might be used\n+    * as a count of inches.\n+    *\n+    * <p>The link a above does not accurately describe EcmaScript rules since\n+    * it fails to distinguish between (a=++/b/i) and (a++/b/i) but it works\n+    * very well in practice.\n+    *\n+    * @private\n+    */\n+  var REGEXP_PRECEDER_PATTERN = function () {\n+      var preceders = [\n+          \"!\", \"!=\", \"!==\", \"#\", \"%\", \"%=\", \"&\", \"&&\", \"&&=\",\n+          \"&=\", \"(\", \"*\", \"*=\", /* \"+\", */ \"+=\", \",\", /* \"-\", */ \"-=\",\n+          \"->\", /*\".\", \"..\", \"...\", handled below */ \"/\", \"/=\", \":\", \"::\", \";\",\n+          \"<\", \"<<\", \"<<=\", \"<=\", \"=\", \"==\", \"===\", \">\",\n+          \">=\", \">>\", \">>=\", \">>>\", \">>>=\", \"?\", \"@\", \"[\",\n+          \"^\", \"^=\", \"^^\", \"^^=\", \"{\", \"|\", \"|=\", \"||\",\n+          \"||=\", \"~\" /* handles =~ and !~ */,\n+          \"break\", \"case\", \"continue\", \"delete\",\n+          \"do\", \"else\", \"finally\", \"instanceof\",\n+          \"return\", \"throw\", \"try\", \"typeof\"\n+          ];\n+      var pattern = '(?:^^|[+-]';\n+      for (var i = 0; i < preceders.length; ++i) {\n+        pattern += '|' + preceders[i].replace(/([^=<>:&a-z])/g, '\\\\$1');\n+      }\n+      pattern += ')\\\\s*';  // matches at end, and matches empty string\n+      return pattern;\n+      // CAVEAT: this does not properly handle the case where a regular\n+      // expression immediately follows another since a regular expression may\n+      // have flags for case-sensitivity and the like.  Having regexp tokens\n+      // adjacent is not valid in any language I'm aware of, so I'm punting.\n+      // TODO: maybe style special characters inside a regexp as punctuation.\n+    }();\n+\n+  // Define regexps here so that the interpreter doesn't have to create an\n+  // object each time the function containing them is called.\n+  // The language spec requires a new object created even if you don't access\n+  // the $1 members.\n+  var pr_amp = /&/g;\n+  var pr_lt = /</g;\n+  var pr_gt = />/g;\n+  var pr_quot = /\\\"/g;\n+  /** like textToHtml but escapes double quotes to be attribute safe. */\n+  function attribToHtml(str) {\n+    return str.replace(pr_amp, '&amp;')\n+        .replace(pr_lt, '&lt;')\n+        .replace(pr_gt, '&gt;')\n+        .replace(pr_quot, '&quot;');\n+  }\n+\n+  /** escapest html special characters to html. */\n+  function textToHtml(str) {\n+    return str.replace(pr_amp, '&amp;')\n+        .replace(pr_lt, '&lt;')\n+        .replace(pr_gt, '&gt;');\n+  }\n+\n+\n+  var pr_ltEnt = /&lt;/g;\n+  var pr_gtEnt = /&gt;/g;\n+  var pr_aposEnt = /&apos;/g;\n+  var pr_quotEnt = /&quot;/g;\n+  var pr_ampEnt = /&amp;/g;\n+  var pr_nbspEnt = /&nbsp;/g;\n+  /** unescapes html to plain text. */\n+  function htmlToText(html) {\n+    var pos = html.indexOf('&');\n+    if (pos < 0) { return html; }\n+    // Handle numeric entities specially.  We can't use functional substitution\n+    // since that doesn't work in older versions of Safari.\n+    // These should be rare since most browsers convert them to normal chars.\n+    for (--pos; (pos = html.indexOf('&#', pos + 1)) >= 0;) {\n+      var end = html.indexOf(';', pos);\n+      if (end >= 0) {\n+        var num = html.substring(pos + 3, end);\n+        var radix = 10;\n+        if (num && num.charAt(0) === 'x') {\n+          num = num.substring(1);\n+          radix = 16;\n+        }\n+        var codePoint = parseInt(num, radix);\n+        if (!isNaN(codePoint)) {\n+          html = (html.substring(0, pos) + String.fromCharCode(codePoint) +\n+                  html.substring(end + 1));\n+        }\n+      }\n+    }\n+\n+    return html.replace(pr_ltEnt, '<')\n+        .replace(pr_gtEnt, '>')\n+        .replace(pr_aposEnt, \"'\")\n+        .replace(pr_quotEnt, '\"')\n+        .replace(pr_nbspEnt, ' ')\n+        .replace(pr_ampEnt, '&');\n+  }\n+\n+  /** is the given node's innerHTML normally unescaped? */\n+  function isRawContent(node) {\n+    return 'XMP' === node.tagName;\n+  }\n+\n+  var newlineRe = /[\\r\\n]/g;\n+  /**\n+   * Are newlines and adjacent spaces significant in the given node's innerHTML?\n+   */\n+  function isPreformatted(node, content) {\n+    // PRE means preformatted, and is a very common case, so don't create\n+    // unnecessary computed style objects.\n+    if ('PRE' === node.tagName) { return true; }\n+    if (!newlineRe.test(content)) { return true; }  // Don't care\n+    var whitespace = '';\n+    // For disconnected nodes, IE has no currentStyle.\n+    if (node.currentStyle) {\n+      whitespace = node.currentStyle.whiteSpace;\n+    } else if (window.getComputedStyle) {\n+      // Firefox makes a best guess if node is disconnected whereas Safari\n+      // returns the empty string.\n+      whitespace = window.getComputedStyle(node, null).whiteSpace;\n+    }\n+    return !whitespace || whitespace === 'pre';\n+  }\n+\n+  function normalizedHtml(node, out, opt_sortAttrs) {\n+    switch (node.nodeType) {\n+      case 1:  // an element\n+        var name = node.tagName.toLowerCase();\n+\n+        out.push('<', name);\n+        var attrs = node.attributes;\n+        var n = attrs.length;\n+        if (n) {\n+          if (opt_sortAttrs) {\n+            var sortedAttrs = [];\n+            for (var i = n; --i >= 0;) { sortedAttrs[i] = attrs[i]; }\n+            sortedAttrs.sort(function (a, b) {\n+                return (a.name < b.name) ? -1 : a.name === b.name ? 0 : 1;\n+              });\n+            attrs = sortedAttrs;\n+          }\n+          for (var i = 0; i < n; ++i) {\n+            var attr = attrs[i];\n+            if (!attr.specified) { continue; }\n+            out.push(' ', attr.name.toLowerCase(),\n+                     '=\"', attribToHtml(attr.value), '\"');\n+          }\n+        }\n+        out.push('>');\n+        for (var child = node.firstChild; child; child = child.nextSibling) {\n+          normalizedHtml(child, out, opt_sortAttrs);\n+        }\n+        if (node.firstChild || !/^(?:br|link|img)$/.test(name)) {\n+          out.push('<\\/', name, '>');\n+        }\n+        break;\n+      case 3: case 4: // text\n+        out.push(textToHtml(node.nodeValue));\n+        break;\n+    }\n+  }\n+\n+  /**\n+   * Given a group of {@link RegExp}s, returns a {@code RegExp} that globally\n+   * matches the union o the sets o strings matched d by the input RegExp.\n+   * Since it matches globally, if the input strings have a start-of-input\n+   * anchor (/^.../), it is ignored for the purposes of unioning.\n+   * @param {Array.<RegExp>} regexs non multiline, non-global regexs.\n+   * @return {RegExp} a global regex.\n+   */\n+  function combinePrefixPatterns(regexs) {\n+    var capturedGroupIndex = 0;\n+\n+    var needToFoldCase = false;\n+    var ignoreCase = false;\n+    for (var i = 0, n = regexs.length; i < n; ++i) {\n+      var regex = regexs[i];\n+      if (regex.ignoreCase) {\n+        ignoreCase = true;\n+      } else if (/[a-z]/i.test(regex.source.replace(\n+                     /\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi, ''))) {\n+        needToFoldCase = true;\n+        ignoreCase = false;\n+        break;\n+      }\n+    }\n+\n+    function decodeEscape(charsetPart) {\n+      if (charsetPart.charAt(0) !== '\\\\') { return charsetPart.charCodeAt(0); }\n+      switch (charsetPart.charAt(1)) {\n+        case 'b': return 8;\n+        case 't': return 9;\n+        case 'n': return 0xa;\n+        case 'v': return 0xb;\n+        case 'f': return 0xc;\n+        case 'r': return 0xd;\n+        case 'u': case 'x':\n+          return parseInt(charsetPart.substring(2), 16)\n+              || charsetPart.charCodeAt(1);\n+        case '0': case '1': case '2': case '3': case '4':\n+        case '5': case '6': case '7':\n+          return parseInt(charsetPart.substring(1), 8);\n+        default: return charsetPart.charCodeAt(1);\n+      }\n+    }\n+\n+    function encodeEscape(charCode) {\n+      if (charCode < 0x20) {\n+        return (charCode < 0x10 ? '\\\\x0' : '\\\\x') + charCode.toString(16);\n+      }\n+      var ch = String.fromCharCode(charCode);\n+      if (ch === '\\\\' || ch === '-' || ch === '[' || ch === ']') {\n+        ch = '\\\\' + ch;\n+      }\n+      return ch;\n+    }\n+\n+    function caseFoldCharset(charSet) {\n+      var charsetParts = charSet.substring(1, charSet.length - 1).match(\n+          new RegExp(\n+              '\\\\\\\\u[0-9A-Fa-f]{4}'\n+              + '|\\\\\\\\x[0-9A-Fa-f]{2}'\n+              + '|\\\\\\\\[0-3][0-7]{0,2}'\n+              + '|\\\\\\\\[0-7]{1,2}'\n+              + '|\\\\\\\\[\\\\s\\\\S]'\n+              + '|-'\n+              + '|[^-\\\\\\\\]',\n+              'g'));\n+      var groups = [];\n+      var ranges = [];\n+      var inverse = charsetParts[0] === '^';\n+      for (var i = inverse ? 1 : 0, n = charsetParts.length; i < n; ++i) {\n+        var p = charsetParts[i];\n+        switch (p) {\n+          case '\\\\B': case '\\\\b':\n+          case '\\\\D': case '\\\\d':\n+          case '\\\\S': case '\\\\s':\n+          case '\\\\W': case '\\\\w':\n+            groups.push(p);\n+            continue;\n+        }\n+        var start = decodeEscape(p);\n+        var end;\n+        if (i + 2 < n && '-' === charsetParts[i + 1]) {\n+          end = decodeEscape(charsetParts[i + 2]);\n+          i += 2;\n+        } else {\n+          end = start;\n+        }\n+        ranges.push([start, end]);\n+        // If the range might intersect letters, then expand it.\n+        if (!(end < 65 || start > 122)) {\n+          if (!(end < 65 || start > 90)) {\n+            ranges.push([Math.max(65, start) | 32, Math.min(end, 90) | 32]);\n+          }\n+          if (!(end < 97 || start > 122)) {\n+            ranges.push([Math.max(97, start) & ~32, Math.min(end, 122) & ~32]);\n+          }\n+        }\n+      }\n+\n+      // [[1, 10], [3, 4], [8, 12], [14, 14], [16, 16], [17, 17]]\n+      // -> [[1, 12], [14, 14], [16, 17]]\n+      ranges.sort(function (a, b) { return (a[0] - b[0]) || (b[1]  - a[1]); });\n+      var consolidatedRanges = [];\n+      var lastRange = [NaN, NaN];\n+      for (var i = 0; i < ranges.length; ++i) {\n+        var range = ranges[i];\n+        if (range[0] <= lastRange[1] + 1) {\n+          lastRange[1] = Math.max(lastRange[1], range[1]);\n+        } else {\n+          consolidatedRanges.push(lastRange = range);\n+        }\n+      }\n+\n+      var out = ['['];\n+      if (inverse) { out.push('^'); }\n+      out.push.apply(out, groups);\n+      for (var i = 0; i < consolidatedRanges.length; ++i) {\n+        var range = consolidatedRanges[i];\n+        out.push(encodeEscape(range[0]));\n+        if (range[1] > range[0]) {\n+          if (range[1] + 1 > range[0]) { out.push('-'); }\n+          out.push(encodeEscape(range[1]));\n+        }\n+      }\n+      out.push(']');\n+      return out.join('');\n+    }\n+\n+    function allowAnywhereFoldCaseAndRenumberGroups(regex) {\n+      // Split into character sets, escape sequences, punctuation strings\n+      // like ('(', '(?:', ')', '^'), and runs of characters that do not\n+      // include any of the above.\n+      var parts = regex.source.match(\n+          new RegExp(\n+              '(?:'\n+              + '\\\\[(?:[^\\\\x5C\\\\x5D]|\\\\\\\\[\\\\s\\\\S])*\\\\]'  // a character set\n+              + '|\\\\\\\\u[A-Fa-f0-9]{4}'  // a unicode escape\n+              + '|\\\\\\\\x[A-Fa-f0-9]{2}'  // a hex escape\n+              + '|\\\\\\\\[0-9]+'  // a back-reference or octal escape\n+              + '|\\\\\\\\[^ux0-9]'  // other escape sequence\n+              + '|\\\\(\\\\?[:!=]'  // start of a non-capturing group\n+              + '|[\\\\(\\\\)\\\\^]'  // start/emd of a group, or line start\n+              + '|[^\\\\x5B\\\\x5C\\\\(\\\\)\\\\^]+'  // run of other characters\n+              + ')',\n+              'g'));\n+      var n = parts.length;\n+\n+      // Maps captured group numbers to the number they will occupy in\n+      // the output or to -1 if that has not been determined, or to\n+      // undefined if they need not be capturing in the output.\n+      var capturedGroups = [];\n+\n+      // Walk over and identify back references to build the capturedGroups\n+      // mapping.\n+      for (var i = 0, groupIndex = 0; i < n; ++i) {\n+        var p = parts[i];\n+        if (p === '(') {\n+          // groups are 1-indexed, so max group index is count of '('\n+          ++groupIndex;\n+        } else if ('\\\\' === p.charAt(0)) {\n+          var decimalValue = +p.substring(1);\n+          if (decimalValue && decimalValue <= groupIndex) {\n+            capturedGroups[decimalValue] = -1;\n+          }\n+        }\n+      }\n+\n+      // Renumber groups and reduce capturing groups to non-capturing groups\n+      // where possible.\n+      for (var i = 1; i < capturedGroups.length; ++i) {\n+        if (-1 === capturedGroups[i]) {\n+          capturedGroups[i] = ++capturedGroupIndex;\n+        }\n+      }\n+      for (var i = 0, groupIndex = 0; i < n; ++i) {\n+        var p = parts[i];\n+        if (p === '(') {\n+          ++groupIndex;\n+          if (capturedGroups[groupIndex] === undefined) {\n+            parts[i] = '(?:';\n+          }\n+        } else if ('\\\\' === p.charAt(0)) {\n+          var decimalValue = +p.substring(1);\n+          if (decimalValue && decimalValue <= groupIndex) {\n+            parts[i] = '\\\\' + capturedGroups[groupIndex];\n+          }\n+        }\n+      }\n+\n+      // Remove any prefix anchors so that the output will match anywhere.\n+      // ^^ really does mean an anchored match though.\n+      for (var i = 0, groupIndex = 0; i < n; ++i) {\n+        if ('^' === parts[i] && '^' !== parts[i + 1]) { parts[i] = ''; }\n+      }\n+\n+      // Expand letters to groupts to handle mixing of case-sensitive and\n+      // case-insensitive patterns if necessary.\n+      if (regex.ignoreCase && needToFoldCase) {\n+        for (var i = 0; i < n; ++i) {\n+          var p = parts[i];\n+          var ch0 = p.charAt(0);\n+          if (p.length >= 2 && ch0 === '[') {\n+            parts[i] = caseFoldCharset(p);\n+          } else if (ch0 !== '\\\\') {\n+            // TODO: handle letters in numeric escapes.\n+            parts[i] = p.replace(\n+                /[a-zA-Z]/g,\n+                function (ch) {\n+                  var cc = ch.charCodeAt(0);\n+                  return '[' + String.fromCharCode(cc & ~32, cc | 32) + ']';\n+                });\n+          }\n+        }\n+      }\n+\n+      return parts.join('');\n+    }\n+\n+    var rewritten = [];\n+    for (var i = 0, n = regexs.length; i < n; ++i) {\n+      var regex = regexs[i];\n+      if (regex.global || regex.multiline) { throw new Error('' + regex); }\n+      rewritten.push(\n+          '(?:' + allowAnywhereFoldCaseAndRenumberGroups(regex) + ')');\n+    }\n+\n+    return new RegExp(rewritten.join('|'), ignoreCase ? 'gi' : 'g');\n+  }\n+\n+  var PR_innerHtmlWorks = null;\n+  function getInnerHtml(node) {\n+    // inner html is hopelessly broken in Safari 2.0.4 when the content is\n+    // an html description of well formed XML and the containing tag is a PRE\n+    // tag, so we detect that case and emulate innerHTML.\n+    if (null === PR_innerHtmlWorks) {\n+      var testNode = document.createElement('PRE');\n+      testNode.appendChild(\n+          document.createTextNode('<!DOCTYPE foo PUBLIC \"foo bar\">\\n<foo />'));\n+      PR_innerHtmlWorks = !/</.test(testNode.innerHTML);\n+    }\n+\n+    if (PR_innerHtmlWorks) {\n+      var content = node.innerHTML;\n+      // XMP tags contain unescaped entities so require special handling.\n+      if (isRawContent(node)) {\n+        content = textToHtml(content);\n+      } else if (!isPreformatted(node, content)) {\n+        content = content.replace(/(<br\\s*\\/?>)[\\r\\n]+/g, '$1')\n+            .replace(/(?:[\\r\\n]+[ \\t]*)+/g, ' ');\n+      }\n+      return content;\n+    }\n+\n+    var out = [];\n+    for (var child = node.firstChild; child; child = child.nextSibling) {\n+      normalizedHtml(child, out);\n+    }\n+    return out.join('');\n+  }\n+\n+  /** returns a function that expand tabs to spaces.  This function can be fed\n+    * successive chunks of text, and will maintain its own internal state to\n+    * keep track of how tabs are expanded.\n+    * @return {function (string) : string} a function that takes\n+    *   plain text and return the text with tabs expanded.\n+    * @private\n+    */\n+  function makeTabExpander(tabWidth) {\n+    var SPACES = '                ';\n+    var charInLine = 0;\n+\n+    return function (plainText) {\n+      // walk over each character looking for tabs and newlines.\n+      // On tabs, expand them.  On newlines, reset charInLine.\n+      // Otherwise increment charInLine\n+      var out = null;\n+      var pos = 0;\n+      for (var i = 0, n = plainText.length; i < n; ++i) {\n+        var ch = plainText.charAt(i);\n+\n+        switch (ch) {\n+          case '\\t':\n+            if (!out) { out = []; }\n+            out.push(plainText.substring(pos, i));\n+            // calculate how much space we need in front of this part\n+            // nSpaces is the amount of padding -- the number of spaces needed\n+            // to move us to the next column, where columns occur at factors of\n+            // tabWidth.\n+            var nSpaces = tabWidth - (charInLine % tabWidth);\n+            charInLine += nSpaces;\n+            for (; nSpaces >= 0; nSpaces -= SPACES.length) {\n+              out.push(SPACES.substring(0, nSpaces));\n+            }\n+            pos = i + 1;\n+            break;\n+          case '\\n':\n+            charInLine = 0;\n+            break;\n+          default:\n+            ++charInLine;\n+        }\n+      }\n+      if (!out) { return plainText; }\n+      out.push(plainText.substring(pos));\n+      return out.join('');\n+    };\n+  }\n+\n+  var pr_chunkPattern = new RegExp(\n+      '[^<]+'  // A run of characters other than '<'\n+      + '|<\\!--[\\\\s\\\\S]*?--\\>'  // an HTML comment\n+      + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'  // a CDATA section\n+      // a probable tag that should not be highlighted\n+      + '|<\\/?[a-zA-Z](?:[^>\\\"\\']|\\'[^\\']*\\'|\\\"[^\\\"]*\\\")*>'\n+      + '|<',  // A '<' that does not begin a larger chunk\n+      'g');\n+  var pr_commentPrefix = /^<\\!--/;\n+  var pr_cdataPrefix = /^<!\\[CDATA\\[/;\n+  var pr_brPrefix = /^<br\\b/i;\n+  var pr_tagNameRe = /^<(\\/?)([a-zA-Z][a-zA-Z0-9]*)/;\n+\n+  /** split markup into chunks of html tags (style null) and\n+    * plain text (style {@link #PR_PLAIN}), converting tags which are\n+    * significant for tokenization (<br>) into their textual equivalent.\n+    *\n+    * @param {string} s html where whitespace is considered significant.\n+    * @return {Object} source code and extracted tags.\n+    * @private\n+    */\n+  function extractTags(s) {\n+    // since the pattern has the 'g' modifier and defines no capturing groups,\n+    // this will return a list of all chunks which we then classify and wrap as\n+    // PR_Tokens\n+    var matches = s.match(pr_chunkPattern);\n+    var sourceBuf = [];\n+    var sourceBufLen = 0;\n+    var extractedTags = [];\n+    if (matches) {\n+      for (var i = 0, n = matches.length; i < n; ++i) {\n+        var match = matches[i];\n+        if (match.length > 1 && match.charAt(0) === '<') {\n+          if (pr_commentPrefix.test(match)) { continue; }\n+          if (pr_cdataPrefix.test(match)) {\n+            // strip CDATA prefix and suffix.  Don't unescape since it's CDATA\n+            sourceBuf.push(match.substring(9, match.length - 3));\n+            sourceBufLen += match.length - 12;\n+          } else if (pr_brPrefix.test(match)) {\n+            // <br> tags are lexically significant so convert them to text.\n+            // This is undone later.\n+            sourceBuf.push('\\n');\n+            ++sourceBufLen;\n+          } else {\n+            if (match.indexOf(PR_NOCODE) >= 0 && isNoCodeTag(match)) {\n+              // A <span class=\"nocode\"> will start a section that should be\n+              // ignored.  Continue walking the list until we see a matching end\n+              // tag.\n+              var name = match.match(pr_tagNameRe)[2];\n+              var depth = 1;\n+              var j;\n+              end_tag_loop:\n+              for (j = i + 1; j < n; ++j) {\n+                var name2 = matches[j].match(pr_tagNameRe);\n+                if (name2 && name2[2] === name) {\n+                  if (name2[1] === '/') {\n+                    if (--depth === 0) { break end_tag_loop; }\n+                  } else {\n+                    ++depth;\n+                  }\n+                }\n+              }\n+              if (j < n) {\n+                extractedTags.push(\n+                    sourceBufLen, matches.slice(i, j + 1).join(''));\n+                i = j;\n+              } else {  // Ignore unclosed sections.\n+                extractedTags.push(sourceBufLen, match);\n+              }\n+            } else {\n+              extractedTags.push(sourceBufLen, match);\n+            }\n+          }\n+        } else {\n+          var literalText = htmlToText(match);\n+          sourceBuf.push(literalText);\n+          sourceBufLen += literalText.length;\n+        }\n+      }\n+    }\n+    return { source: sourceBuf.join(''), tags: extractedTags };\n+  }\n+\n+  /** True if the given tag contains a class attribute with the nocode class. */\n+  function isNoCodeTag(tag) {\n+    return !!tag\n+        // First canonicalize the representation of attributes\n+        .replace(/\\s(\\w+)\\s*=\\s*(?:\\\"([^\\\"]*)\\\"|'([^\\']*)'|(\\S+))/g,\n+                 ' $1=\"$2$3$4\"')\n+        // Then look for the attribute we want.\n+        .match(/[cC][lL][aA][sS][sS]=\\\"[^\\\"]*\\bnocode\\b/);\n+  }\n+\n+  /**\n+   * Apply the given language handler to sourceCode and add the resulting\n+   * decorations to out.\n+   * @param {number} basePos the index of sourceCode within the chunk of source\n+   *    whose decorations are already present on out.\n+   */\n+  function appendDecorations(basePos, sourceCode, langHandler, out) {\n+    if (!sourceCode) { return; }\n+    var job = {\n+      source: sourceCode,\n+      basePos: basePos\n+    };\n+    langHandler(job);\n+    out.push.apply(out, job.decorations);\n+  }\n+\n+  /** Given triples of [style, pattern, context] returns a lexing function,\n+    * The lexing function interprets the patterns to find token boundaries and\n+    * returns a decoration list of the form\n+    * [index_0, style_0, index_1, style_1, ..., index_n, style_n]\n+    * where index_n is an index into the sourceCode, and style_n is a style\n+    * constant like PR_PLAIN.  index_n-1 <= index_n, and style_n-1 applies to\n+    * all characters in sourceCode[index_n-1:index_n].\n+    *\n+    * The stylePatterns is a list whose elements have the form\n+    * [style : string, pattern : RegExp, DEPRECATED, shortcut : string].\n+    *\n+    * Style is a style constant like PR_PLAIN, or can be a string of the\n+    * form 'lang-FOO', where FOO is a language extension describing the\n+    * language of the portion of the token in $1 after pattern executes.\n+    * E.g., if style is 'lang-lisp', and group 1 contains the text\n+    * '(hello (world))', then that portion of the token will be passed to the\n+    * registered lisp handler for formatting.\n+    * The text before and after group 1 will be restyled using this decorator\n+    * so decorators should take care that this doesn't result in infinite\n+    * recursion.  For example, the HTML lexer rule for SCRIPT elements looks\n+    * something like ['lang-js', /<[s]cript>(.+?)<\\/script>/].  This may match\n+    * '<script>foo()<\\/script>', which would cause the current decorator to\n+    * be called with '<script>' which would not match the same rule since\n+    * group 1 must not be empty, so it would be instead styled as PR_TAG by\n+    * the generic tag rule.  The handler registered for the 'js' extension would\n+    * then be called with 'foo()', and finally, the current decorator would\n+    * be called with '<\\/script>' which would not match the original rule and\n+    * so the generic tag rule would identify it as a tag.\n+    *\n+    * Pattern must only match prefixes, and if it matches a prefix, then that\n+    * match is considered a token with the same style.\n+    *\n+    * Context is applied to the last non-whitespace, non-comment token\n+    * recognized.\n+    *\n+    * Shortcut is an optional string of characters, any of which, if the first\n+    * character, gurantee that this pattern and only this pattern matches.\n+    *\n+    * @param {Array} shortcutStylePatterns patterns that always start with\n+    *   a known character.  Must have a shortcut string.\n+    * @param {Array} fallthroughStylePatterns patterns that will be tried in\n+    *   order if the shortcut ones fail.  May have shortcuts.\n+    *\n+    * @return {function (Object)} a\n+    *   function that takes source code and returns a list of decorations.\n+    */\n+  function createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns) {\n+    var shortcuts = {};\n+    var tokenizer;\n+    (function () {\n+      var allPatterns = shortcutStylePatterns.concat(fallthroughStylePatterns);\n+      var allRegexs = [];\n+      var regexKeys = {};\n+      for (var i = 0, n = allPatterns.length; i < n; ++i) {\n+        var patternParts = allPatterns[i];\n+        var shortcutChars = patternParts[3];\n+        if (shortcutChars) {\n+          for (var c = shortcutChars.length; --c >= 0;) {\n+            shortcuts[shortcutChars.charAt(c)] = patternParts;\n+          }\n+        }\n+        var regex = patternParts[1];\n+        var k = '' + regex;\n+        if (!regexKeys.hasOwnProperty(k)) {\n+          allRegexs.push(regex);\n+          regexKeys[k] = null;\n+        }\n+      }\n+      allRegexs.push(/[\\0-\\uffff]/);\n+      tokenizer = combinePrefixPatterns(allRegexs);\n+    })();\n+\n+    var nPatterns = fallthroughStylePatterns.length;\n+    var notWs = /\\S/;\n+\n+    /**\n+     * Lexes job.source and produces an output array job.decorations of style\n+     * classes preceded by the position at which they start in job.source in\n+     * order.\n+     *\n+     * @param {Object} job an object like {@code\n+     *    source: {string} sourceText plain text,\n+     *    basePos: {int} position of job.source in the larger chunk of\n+     *        sourceCode.\n+     * }\n+     */\n+    var decorate = function (job) {\n+      var sourceCode = job.source, basePos = job.basePos;\n+      /** Even entries are positions in source in ascending order.  Odd enties\n+        * are style markers (e.g., PR_COMMENT) that run from that position until\n+        * the end.\n+        * @type {Array.<number|string>}\n+        */\n+      var decorations = [basePos, PR_PLAIN];\n+      var pos = 0;  // index into sourceCode\n+      var tokens = sourceCode.match(tokenizer) || [];\n+      var styleCache = {};\n+\n+      for (var ti = 0, nTokens = tokens.length; ti < nTokens; ++ti) {\n+        var token = tokens[ti];\n+        var style = styleCache[token];\n+        var match = void 0;\n+\n+        var isEmbedded;\n+        if (typeof style === 'string') {\n+          isEmbedded = false;\n+        } else {\n+          var patternParts = shortcuts[token.charAt(0)];\n+          if (patternParts) {\n+            match = token.match(patternParts[1]);\n+            style = patternParts[0];\n+          } else {\n+            for (var i = 0; i < nPatterns; ++i) {\n+              patternParts = fallthroughStylePatterns[i];\n+              match = token.match(patternParts[1]);\n+              if (match) {\n+                style = patternParts[0];\n+                break;\n+              }\n+            }\n+\n+            if (!match) {  // make sure that we make progress\n+              style = PR_PLAIN;\n+            }\n+          }\n+\n+          isEmbedded = style.length >= 5 && 'lang-' === style.substring(0, 5);\n+          if (isEmbedded && !(match && typeof match[1] === 'string')) {\n+            isEmbedded = false;\n+            style = PR_SOURCE;\n+          }\n+\n+          if (!isEmbedded) { styleCache[token] = style; }\n+        }\n+\n+        var tokenStart = pos;\n+        pos += token.length;\n+\n+        if (!isEmbedded) {\n+          decorations.push(basePos + tokenStart, style);\n+        } else {  // Treat group 1 as an embedded block of source code.\n+          var embeddedSource = match[1];\n+          var embeddedSourceStart = token.indexOf(embeddedSource);\n+          var embeddedSourceEnd = embeddedSourceStart + embeddedSource.length;\n+          if (match[2]) {\n+            // If embeddedSource can be blank, then it would match at the\n+            // beginning which would cause us to infinitely recurse on the\n+            // entire token, so we catch the right context in match[2].\n+            embeddedSourceEnd = token.length - match[2].length;\n+            embeddedSourceStart = embeddedSourceEnd - embeddedSource.length;\n+          }\n+          var lang = style.substring(5);\n+          // Decorate the left of the embedded source\n+          appendDecorations(\n+              basePos + tokenStart,\n+              token.substring(0, embeddedSourceStart),\n+              decorate, decorations);\n+          // Decorate the embedded source\n+          appendDecorations(\n+              basePos + tokenStart + embeddedSourceStart,\n+              embeddedSource,\n+              langHandlerForExtension(lang, embeddedSource),\n+              decorations);\n+          // Decorate the right of the embedded section\n+          appendDecorations(\n+              basePos + tokenStart + embeddedSourceEnd,\n+              token.substring(embeddedSourceEnd),\n+              decorate, decorations);\n+        }\n+      }\n+      job.decorations = decorations;\n+    };\n+    return decorate;\n+  }\n+\n+  /** returns a function that produces a list of decorations from source text.\n+    *\n+    * This code treats \", ', and ` as string delimiters, and \\ as a string\n+    * escape.  It does not recognize perl's qq() style strings.\n+    * It has no special handling for double delimiter escapes as in basic, or\n+    * the tripled delimiters used in python, but should work on those regardless\n+    * although in those cases a single string literal may be broken up into\n+    * multiple adjacent string literals.\n+    *\n+    * It recognizes C, C++, and shell style comments.\n+    *\n+    * @param {Object} options a set of optional parameters.\n+    * @return {function (Object)} a function that examines the source code\n+    *     in the input job and builds the decoration list.\n+    */\n+  function sourceDecorator(options) {\n+    var shortcutStylePatterns = [], fallthroughStylePatterns = [];\n+    if (options['tripleQuotedStrings']) {\n+      // '''multi-line-string''', 'single-line-string', and double-quoted\n+      shortcutStylePatterns.push(\n+          [PR_STRING,  /^(?:\\'\\'\\'(?:[^\\'\\\\]|\\\\[\\s\\S]|\\'{1,2}(?=[^\\']))*(?:\\'\\'\\'|$)|\\\"\\\"\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S]|\\\"{1,2}(?=[^\\\"]))*(?:\\\"\\\"\\\"|$)|\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$))/,\n+           null, '\\'\"']);\n+    } else if (options['multiLineStrings']) {\n+      // 'multi-line-string', \"multi-line-string\"\n+      shortcutStylePatterns.push(\n+          [PR_STRING,  /^(?:\\'(?:[^\\\\\\']|\\\\[\\s\\S])*(?:\\'|$)|\\\"(?:[^\\\\\\\"]|\\\\[\\s\\S])*(?:\\\"|$)|\\`(?:[^\\\\\\`]|\\\\[\\s\\S])*(?:\\`|$))/,\n+           null, '\\'\"`']);\n+    } else {\n+      // 'single-line-string', \"single-line-string\"\n+      shortcutStylePatterns.push(\n+          [PR_STRING,\n+           /^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$)|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/,\n+           null, '\"\\'']);\n+    }\n+    if (options['verbatimStrings']) {\n+      // verbatim-string-literal production from the C# grammar.  See issue 93.\n+      fallthroughStylePatterns.push(\n+          [PR_STRING, /^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/, null]);\n+    }\n+    if (options['hashComments']) {\n+      if (options['cStyleComments']) {\n+        // Stop C preprocessor declarations at an unclosed open comment\n+        shortcutStylePatterns.push(\n+            [PR_COMMENT, /^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/,\n+             null, '#']);\n+        fallthroughStylePatterns.push(\n+            [PR_STRING,\n+             /^<(?:(?:(?:\\.\\.\\/)*|\\/?)(?:[\\w-]+(?:\\/[\\w-]+)+)?[\\w-]+\\.h|[a-z]\\w*)>/,\n+             null]);\n+      } else {\n+        shortcutStylePatterns.push([PR_COMMENT, /^#[^\\r\\n]*/, null, '#']);\n+      }\n+    }\n+    if (options['cStyleComments']) {\n+      fallthroughStylePatterns.push([PR_COMMENT, /^\\/\\/[^\\r\\n]*/, null]);\n+      fallthroughStylePatterns.push(\n+          [PR_COMMENT, /^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, null]);\n+    }\n+    if (options['regexLiterals']) {\n+      var REGEX_LITERAL = (\n+          // A regular expression literal starts with a slash that is\n+          // not followed by * or / so that it is not confused with\n+          // comments.\n+          '/(?=[^/*])'\n+          // and then contains any number of raw characters,\n+          + '(?:[^/\\\\x5B\\\\x5C]'\n+          // escape sequences (\\x5C),\n+          +    '|\\\\x5C[\\\\s\\\\S]'\n+          // or non-nesting character sets (\\x5B\\x5D);\n+          +    '|\\\\x5B(?:[^\\\\x5C\\\\x5D]|\\\\x5C[\\\\s\\\\S])*(?:\\\\x5D|$))+'\n+          // finally closed by a /.\n+          + '/');\n+      fallthroughStylePatterns.push(\n+          ['lang-regex',\n+           new RegExp('^' + REGEXP_PRECEDER_PATTERN + '(' + REGEX_LITERAL + ')')\n+           ]);\n+    }\n+\n+    var keywords = options['keywords'].replace(/^\\s+|\\s+$/g, '');\n+    if (keywords.length) {\n+      fallthroughStylePatterns.push(\n+          [PR_KEYWORD,\n+           new RegExp('^(?:' + keywords.replace(/\\s+/g, '|') + ')\\\\b'), null]);\n+    }\n+\n+    shortcutStylePatterns.push([PR_PLAIN,       /^\\s+/, null, ' \\r\\n\\t\\xA0']);\n+    fallthroughStylePatterns.push(\n+        // TODO(mikesamuel): recognize non-latin letters and numerals in idents\n+        [PR_LITERAL,     /^@[a-z_$][a-z_$@0-9]*/i, null],\n+        [PR_TYPE,        /^@?[A-Z]+[a-z][A-Za-z_$@0-9]*/, null],\n+        [PR_PLAIN,       /^[a-z_$][a-z_$@0-9]*/i, null],\n+        [PR_LITERAL,\n+         new RegExp(\n+             '^(?:'\n+             // A hex number\n+             + '0x[a-f0-9]+'\n+             // or an octal or decimal number,\n+             + '|(?:\\\\d(?:_\\\\d+)*\\\\d*(?:\\\\.\\\\d*)?|\\\\.\\\\d\\\\+)'\n+             // possibly in scientific notation\n+             + '(?:e[+\\\\-]?\\\\d+)?'\n+             + ')'\n+             // with an optional modifier like UL for unsigned long\n+             + '[a-z]*', 'i'),\n+         null, '0123456789'],\n+        [PR_PUNCTUATION, /^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/, null]);\n+\n+    return createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns);\n+  }\n+\n+  var decorateSource = sourceDecorator({\n+        'keywords': ALL_KEYWORDS,\n+        'hashComments': true,\n+        'cStyleComments': true,\n+        'multiLineStrings': true,\n+        'regexLiterals': true\n+      });\n+\n+  /** Breaks {@code job.source} around style boundaries in\n+    * {@code job.decorations} while re-interleaving {@code job.extractedTags},\n+    * and leaves the result in {@code job.prettyPrintedHtml}.\n+    * @param {Object} job like {\n+    *    source: {string} source as plain text,\n+    *    extractedTags: {Array.<number|string>} extractedTags chunks of raw\n+    *                   html preceded by their position in {@code job.source}\n+    *                   in order\n+    *    decorations: {Array.<number|string} an array of style classes preceded\n+    *                 by the position at which they start in job.source in order\n+    * }\n+    * @private\n+    */\n+  function recombineTagsAndDecorations(job) {\n+    var sourceText = job.source;\n+    var extractedTags = job.extractedTags;\n+    var decorations = job.decorations;\n+\n+    var html = [];\n+    // index past the last char in sourceText written to html\n+    var outputIdx = 0;\n+\n+    var openDecoration = null;\n+    var currentDecoration = null;\n+    var tagPos = 0;  // index into extractedTags\n+    var decPos = 0;  // index into decorations\n+    var tabExpander = makeTabExpander(window['PR_TAB_WIDTH']);\n+\n+    var adjacentSpaceRe = /([\\r\\n ]) /g;\n+    var startOrSpaceRe = /(^| ) /gm;\n+    var newlineRe = /\\r\\n?|\\n/g;\n+    var trailingSpaceRe = /[ \\r\\n]$/;\n+    var lastWasSpace = true;  // the last text chunk emitted ended with a space.\n+\n+    // See bug 71 and http://stackoverflow.com/questions/136443/why-doesnt-ie7-\n+    var isIE678 = window['_pr_isIE6']();\n+    var lineBreakHtml = (\n+        isIE678\n+        ? (job.sourceNode.tagName === 'PRE'\n+           // Use line feeds instead of <br>s so that copying and pasting works\n+           // on IE.\n+           // Doing this on other browsers breaks lots of stuff since \\r\\n is\n+           // treated as two newlines on Firefox.\n+           ? (isIE678 === 6 ? '&#160;\\r\\n' :\n+              isIE678 === 7 ? '&#160;<br>\\r' : '&#160;\\r')\n+           // IE collapses multiple adjacent <br>s into 1 line break.\n+           // Prefix every newline with '&#160;' to prevent such behavior.\n+           // &nbsp; is the same as &#160; but works in XML as well as HTML.\n+           : '&#160;<br />')\n+        : '<br />');\n+\n+    // Look for a class like linenums or linenums:<n> where <n> is the 1-indexed\n+    // number of the first line.\n+    var numberLines = job.sourceNode.className.match(/\\blinenums\\b(?::(\\d+))?/);\n+    var lineBreaker;\n+    if (numberLines) {\n+      var lineBreaks = [];\n+      for (var i = 0; i < 10; ++i) {\n+        lineBreaks[i] = lineBreakHtml + '</li><li class=\"L' + i + '\">';\n+      }\n+      var lineNum = numberLines[1] && numberLines[1].length\n+          ? numberLines[1] - 1 : 0;  // Lines are 1-indexed\n+      html.push('<ol class=\"linenums\"><li class=\"L', (lineNum) % 10, '\"');\n+      if (lineNum) {\n+        html.push(' value=\"', lineNum + 1, '\"');\n+      }\n+      html.push('>');\n+      lineBreaker = function () {\n+        var lb = lineBreaks[++lineNum % 10];\n+        // If a decoration is open, we need to close it before closing a list-item\n+        // and reopen it on the other side of the list item.\n+        return openDecoration\n+            ? ('</span>' + lb + '<span class=\"' + openDecoration + '\">') : lb;\n+      };\n+    } else {\n+      lineBreaker = lineBreakHtml;\n+    }\n+\n+    // A helper function that is responsible for opening sections of decoration\n+    // and outputing properly escaped chunks of source\n+    function emitTextUpTo(sourceIdx) {\n+      if (sourceIdx > outputIdx) {\n+        if (openDecoration && openDecoration !== currentDecoration) {\n+          // Close the current decoration\n+          html.push('</span>');\n+          openDecoration = null;\n+        }\n+        if (!openDecoration && currentDecoration) {\n+          openDecoration = currentDecoration;\n+          html.push('<span class=\"', openDecoration, '\">');\n+        }\n+        // This interacts badly with some wikis which introduces paragraph tags\n+        // into pre blocks for some strange reason.\n+        // It's necessary for IE though which seems to lose the preformattedness\n+        // of <pre> tags when their innerHTML is assigned.\n+        // http://stud3.tuwien.ac.at/~e0226430/innerHtmlQuirk.html\n+        // and it serves to undo the conversion of <br>s to newlines done in\n+        // chunkify.\n+        var htmlChunk = textToHtml(\n+            tabExpander(sourceText.substring(outputIdx, sourceIdx)))\n+            .replace(lastWasSpace\n+                     ? startOrSpaceRe\n+                     : adjacentSpaceRe, '$1&#160;');\n+        // Keep track of whether we need to escape space at the beginning of the\n+        // next chunk.\n+        lastWasSpace = trailingSpaceRe.test(htmlChunk);\n+        html.push(htmlChunk.replace(newlineRe, lineBreaker));\n+        outputIdx = sourceIdx;\n+      }\n+    }\n+\n+    while (true) {\n+      // Determine if we're going to consume a tag this time around.  Otherwise\n+      // we consume a decoration or exit.\n+      var outputTag;\n+      if (tagPos < extractedTags.length) {\n+        if (decPos < decorations.length) {\n+          // Pick one giving preference to extractedTags since we shouldn't open\n+          // a new style that we're going to have to immediately close in order\n+          // to output a tag.\n+          outputTag = extractedTags[tagPos] <= decorations[decPos];\n+        } else {\n+          outputTag = true;\n+        }\n+      } else {\n+        outputTag = false;\n+      }\n+      // Consume either a decoration or a tag or exit.\n+      if (outputTag) {\n+        emitTextUpTo(extractedTags[tagPos]);\n+        if (openDecoration) {\n+          // Close the current decoration\n+          html.push('</span>');\n+          openDecoration = null;\n+        }\n+        html.push(extractedTags[tagPos + 1]);\n+        tagPos += 2;\n+      } else if (decPos < decorations.length) {\n+        emitTextUpTo(decorations[decPos]);\n+        currentDecoration = decorations[decPos + 1];\n+        decPos += 2;\n+      } else {\n+        break;\n+      }\n+    }\n+    emitTextUpTo(sourceText.length);\n+    if (openDecoration) {\n+      html.push('</span>');\n+    }\n+    if (numberLines) { html.push('</li></ol>'); }\n+    job.prettyPrintedHtml = html.join('');\n+  }\n+\n+  /** Maps language-specific file extensions to handlers. */\n+  var langHandlerRegistry = {};\n+  /** Register a language handler for the given file extensions.\n+    * @param {function (Object)} handler a function from source code to a list\n+    *      of decorations.  Takes a single argument job which describes the\n+    *      state of the computation.   The single parameter has the form\n+    *      {@code {\n+    *        source: {string} as plain text.\n+    *        decorations: {Array.<number|string>} an array of style classes\n+    *                     preceded by the position at which they start in\n+    *                     job.source in order.\n+    *                     The language handler should assigned this field.\n+    *        basePos: {int} the position of source in the larger source chunk.\n+    *                 All positions in the output decorations array are relative\n+    *                 to the larger source chunk.\n+    *      } }\n+    * @param {Array.<string>} fileExtensions\n+    */\n+  function registerLangHandler(handler, fileExtensions) {\n+    for (var i = fileExtensions.length; --i >= 0;) {\n+      var ext = fileExtensions[i];\n+      if (!langHandlerRegistry.hasOwnProperty(ext)) {\n+        langHandlerRegistry[ext] = handler;\n+      } else if ('console' in window) {\n+        console['warn']('cannot override language handler %s', ext);\n+      }\n+    }\n+  }\n+  function langHandlerForExtension(extension, source) {\n+    if (!(extension && langHandlerRegistry.hasOwnProperty(extension))) {\n+      // Treat it as markup if the first non whitespace character is a < and\n+      // the last non-whitespace character is a >.\n+      extension = /^\\s*</.test(source)\n+          ? 'default-markup'\n+          : 'default-code';\n+    }\n+    return langHandlerRegistry[extension];\n+  }\n+  registerLangHandler(decorateSource, ['default-code']);\n+  registerLangHandler(\n+      createSimpleLexer(\n+          [],\n+          [\n+           [PR_PLAIN,       /^[^<?]+/],\n+           [PR_DECLARATION, /^<!\\w[^>]*(?:>|$)/],\n+           [PR_COMMENT,     /^<\\!--[\\s\\S]*?(?:-\\->|$)/],\n+           // Unescaped content in an unknown language\n+           ['lang-',        /^<\\?([\\s\\S]+?)(?:\\?>|$)/],\n+           ['lang-',        /^<%([\\s\\S]+?)(?:%>|$)/],\n+           [PR_PUNCTUATION, /^(?:<[%?]|[%?]>)/],\n+           ['lang-',        /^<xmp\\b[^>]*>([\\s\\S]+?)<\\/xmp\\b[^>]*>/i],\n+           // Unescaped content in javascript.  (Or possibly vbscript).\n+           ['lang-js',      /^<script\\b[^>]*>([\\s\\S]*?)(<\\/script\\b[^>]*>)/i],\n+           // Contains unescaped stylesheet content\n+           ['lang-css',     /^<style\\b[^>]*>([\\s\\S]*?)(<\\/style\\b[^>]*>)/i],\n+           ['lang-in.tag',  /^(<\\/?[a-z][^<>]*>)/i]\n+          ]),\n+      ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']);\n+  registerLangHandler(\n+      createSimpleLexer(\n+          [\n+           [PR_PLAIN,        /^[\\s]+/, null, ' \\t\\r\\n'],\n+           [PR_ATTRIB_VALUE, /^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/, null, '\\\"\\'']\n+           ],\n+          [\n+           [PR_TAG,          /^^<\\/?[a-z](?:[\\w.:-]*\\w)?|\\/?>$/i],\n+           [PR_ATTRIB_NAME,  /^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i],\n+           ['lang-uq.val',   /^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/],\n+           [PR_PUNCTUATION,  /^[=<>\\/]+/],\n+           ['lang-js',       /^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i],\n+           ['lang-js',       /^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i],\n+           ['lang-js',       /^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i],\n+           ['lang-css',      /^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i],\n+           ['lang-css',      /^style\\s*=\\s*\\'([^\\']+)\\'/i],\n+           ['lang-css',      /^style\\s*=\\s*([^\\\"\\'>\\s]+)/i]\n+           ]),\n+      ['in.tag']);\n+  registerLangHandler(\n+      createSimpleLexer([], [[PR_ATTRIB_VALUE, /^[\\s\\S]+/]]), ['uq.val']);\n+  registerLangHandler(sourceDecorator({\n+          'keywords': CPP_KEYWORDS,\n+          'hashComments': true,\n+          'cStyleComments': true\n+        }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']);\n+  registerLangHandler(sourceDecorator({\n+          'keywords': 'null true false'\n+        }), ['json']);\n+  registerLangHandler(sourceDecorator({\n+          'keywords': CSHARP_KEYWORDS,\n+          'hashComments': true,\n+          'cStyleComments': true,\n+          'verbatimStrings': true\n+        }), ['cs']);\n+  registerLangHandler(sourceDecorator({\n+          'keywords': JAVA_KEYWORDS,\n+          'cStyleComments': true\n+        }), ['java']);\n+  registerLangHandler(sourceDecorator({\n+          'keywords': SH_KEYWORDS,\n+          'hashComments': true,\n+          'multiLineStrings': true\n+        }), ['bsh', 'csh', 'sh']);\n+  registerLangHandler(sourceDecorator({\n+          'keywords': PYTHON_KEYWORDS,\n+          'hashComments': true,\n+          'multiLineStrings': true,\n+          'tripleQuotedStrings': true\n+        }), ['cv', 'py']);\n+  registerLangHandler(sourceDecorator({\n+          'keywords': PERL_KEYWORDS,\n+          'hashComments': true,\n+          'multiLineStrings': true,\n+          'regexLiterals': true\n+        }), ['perl', 'pl', 'pm']);\n+  registerLangHandler(sourceDecorator({\n+          'keywords': RUBY_KEYWORDS,\n+          'hashComments': true,\n+          'multiLineStrings': true,\n+          'regexLiterals': true\n+        }), ['rb']);\n+  registerLangHandler(sourceDecorator({\n+          'keywords': JSCRIPT_KEYWORDS,\n+          'cStyleComments': true,\n+          'regexLiterals': true\n+        }), ['js']);\n+  registerLangHandler(\n+      createSimpleLexer([], [[PR_STRING, /^[\\s\\S]+/]]), ['regex']);\n+\n+  function applyDecorator(job) {\n+    var sourceCodeHtml = job.sourceCodeHtml;\n+    var opt_langExtension = job.langExtension;\n+\n+    // Prepopulate output in case processing fails with an exception.\n+    job.prettyPrintedHtml = sourceCodeHtml;\n+\n+    try {\n+      // Extract tags, and convert the source code to plain text.\n+      var sourceAndExtractedTags = extractTags(sourceCodeHtml);\n+      /** Plain text. @type {string} */\n+      var source = sourceAndExtractedTags.source;\n+      job.source = source;\n+      job.basePos = 0;\n+\n+      /** Even entries are positions in source in ascending order.  Odd entries\n+        * are tags that were extracted at that position.\n+        * @type {Array.<number|string>}\n+        */\n+      job.extractedTags = sourceAndExtractedTags.tags;\n+\n+      // Apply the appropriate language handler\n+      langHandlerForExtension(opt_langExtension, source)(job);\n+      // Integrate the decorations and tags back into the source code to produce\n+      // a decorated html string which is left in job.prettyPrintedHtml.\n+      recombineTagsAndDecorations(job);\n+    } catch (e) {\n+      if ('console' in window) {\n+        console['log'](e && e['stack'] ? e['stack'] : e);\n+      }\n+    }\n+  }\n+\n+  function prettyPrintOne(sourceCodeHtml, opt_langExtension) {\n+    var job = {\n+      sourceCodeHtml: sourceCodeHtml,\n+      langExtension: opt_langExtension\n+    };\n+    applyDecorator(job);\n+    return job.prettyPrintedHtml;\n+  }\n+\n+  function prettyPrint(opt_whenDone) {\n+    function byTagName(tn) { return document.getElementsByTagName(tn); }\n+    // fetch a list of nodes to rewrite\n+    var codeSegments = [byTagName('pre'), byTagName('code'), byTagName('xmp')];\n+    var elements = [];\n+    for (var i = 0; i < codeSegments.length; ++i) {\n+      for (var j = 0, n = codeSegments[i].length; j < n; ++j) {\n+        elements.push(codeSegments[i][j]);\n+      }\n+    }\n+    codeSegments = null;\n+\n+    var clock = Date;\n+    if (!clock['now']) {\n+      clock = { 'now': function () { return (new Date).getTime(); } };\n+    }\n+\n+    // The loop is broken into a series of continuations to make sure that we\n+    // don't make the browser unresponsive when rewriting a large page.\n+    var k = 0;\n+    var prettyPrintingJob;\n+\n+    function doWork() {\n+      var endTime = (window['PR_SHOULD_USE_CONTINUATION'] ?\n+                     clock.now() + 250 /* ms */ :\n+                     Infinity);\n+      for (; k < elements.length && clock.now() < endTime; k++) {\n+        var cs = elements[k];\n+        // [JACOCO] 'prettyprint' -> 'source'\n+        if (cs.className && cs.className.indexOf('source') >= 0) {\n+          // If the classes includes a language extensions, use it.\n+          // Language extensions can be specified like\n+          //     <pre class=\"prettyprint lang-cpp\">\n+          // the language extension \"cpp\" is used to find a language handler as\n+          // passed to PR_registerLangHandler.\n+          var langExtension = cs.className.match(/\\blang-(\\w+)\\b/);\n+          if (langExtension) { langExtension = langExtension[1]; }\n+\n+          // make sure this is not nested in an already prettified element\n+          var nested = false;\n+          for (var p = cs.parentNode; p; p = p.parentNode) {\n+            if ((p.tagName === 'pre' || p.tagName === 'code' ||\n+                 p.tagName === 'xmp') &&\n+                // [JACOCO] 'prettyprint' -> 'source'\n+                p.className && p.className.indexOf('source') >= 0) {\n+              nested = true;\n+              break;\n+            }\n+          }\n+          if (!nested) {\n+            // fetch the content as a snippet of properly escaped HTML.\n+            // Firefox adds newlines at the end.\n+            var content = getInnerHtml(cs);\n+            content = content.replace(/(?:\\r\\n?|\\n)$/, '');\n+\n+            // do the pretty printing\n+            prettyPrintingJob = {\n+              sourceCodeHtml: content,\n+              langExtension: langExtension,\n+              sourceNode: cs\n+            };\n+            applyDecorator(prettyPrintingJob);\n+            replaceWithPrettyPrintedHtml();\n+          }\n+        }\n+      }\n+      if (k < elements.length) {\n+        // finish up in a continuation\n+        setTimeout(doWork, 250);\n+      } else if (opt_whenDone) {\n+        opt_whenDone();\n+      }\n+    }\n+\n+    function replaceWithPrettyPrintedHtml() {\n+      var newContent = prettyPrintingJob.prettyPrintedHtml;\n+      if (!newContent) { return; }\n+      var cs = prettyPrintingJob.sourceNode;\n+\n+      // push the prettified html back into the tag.\n+      if (!isRawContent(cs)) {\n+        // just replace the old html with the new\n+        cs.innerHTML = newContent;\n+      } else {\n+        // we need to change the tag to a <pre> since <xmp>s do not allow\n+        // embedded tags such as the span tags used to attach styles to\n+        // sections of source code.\n+        var pre = document.createElement('PRE');\n+        for (var i = 0; i < cs.attributes.length; ++i) {\n+          var a = cs.attributes[i];\n+          if (a.specified) {\n+            var aname = a.name.toLowerCase();\n+            if (aname === 'class') {\n+              pre.className = a.value;  // For IE 6\n+            } else {\n+              pre.setAttribute(a.name, a.value);\n+            }\n+          }\n+        }\n+        pre.innerHTML = newContent;\n+\n+        // remove the old\n+        cs.parentNode.replaceChild(pre, cs);\n+        cs = pre;\n+      }\n+    }\n+\n+    doWork();\n+  }\n+\n+  window['PR_normalizedHtml'] = normalizedHtml;\n+  window['prettyPrintOne'] = prettyPrintOne;\n+  window['prettyPrint'] = prettyPrint;\n+  window['PR'] = {\n+        'combinePrefixPatterns': combinePrefixPatterns,\n+        'createSimpleLexer': createSimpleLexer,\n+        'registerLangHandler': registerLangHandler,\n+        'sourceDecorator': sourceDecorator,\n+        'PR_ATTRIB_NAME': PR_ATTRIB_NAME,\n+        'PR_ATTRIB_VALUE': PR_ATTRIB_VALUE,\n+        'PR_COMMENT': PR_COMMENT,\n+        'PR_DECLARATION': PR_DECLARATION,\n+        'PR_KEYWORD': PR_KEYWORD,\n+        'PR_LITERAL': PR_LITERAL,\n+        'PR_NOCODE': PR_NOCODE,\n+        'PR_PLAIN': PR_PLAIN,\n+        'PR_PUNCTUATION': PR_PUNCTUATION,\n+        'PR_SOURCE': PR_SOURCE,\n+        'PR_STRING': PR_STRING,\n+        'PR_TAG': PR_TAG,\n+        'PR_TYPE': PR_TYPE\n+      };\n+})();"
  },
  {
    "sha": "c2f71469ba995289439d86ea39b1b33edb03388c",
    "filename": "target/site/jacoco/jacoco-resources/redbar.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/redbar.gif",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/redbar.gif",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/redbar.gif?ref=85b548c395a990ec240cc2d973a7d147622add2d"
  },
  {
    "sha": "dd936bca541471997e6e4688752f5502f70b1ea2",
    "filename": "target/site/jacoco/jacoco-resources/report.css",
    "status": "added",
    "additions": 243,
    "deletions": 0,
    "changes": 243,
    "blob_url": "https://github.com/redzhina/OOP-4/blob/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/report.css",
    "raw_url": "https://github.com/redzhina/OOP-4/raw/85b548c395a990ec240cc2d973a7d147622add2d/target/site/jacoco/jacoco-resources/report.css",
    "contents_url": "https://api.github.com/repos/redzhina/OOP-4/contents/target/site/jacoco/jacoco-resources/report.css?ref=85b548c395a990ec240cc2d973a7d147622add2d",
    "patch": "@@ -0,0 +1,243 @@\n+body, td {\n+  font-family:sans-serif;\n+  font-size:10pt;\n+}\n+\n+h1 {\n+  font-weight:bold;\n+  font-size:18pt;\n+}\n+\n+.breadcrumb {\n+  border:#d6d3ce 1px solid;\n+  padding:2px 4px 2px 4px;\n+}\n+\n+.breadcrumb .info {\n+  float:right;\n+}\n+\n+.breadcrumb .info a {\n+  margin-left:8px;\n+}\n+\n+.el_report {\n+  padding-left:18px;\n+  background-image:url(report.gif);\n+  background-position:left center;\n+  background-repeat:no-repeat;\n+}\n+\n+.el_group {\n+  padding-left:18px;\n+  background-image:url(group.gif);\n+  background-position:left center;\n+  background-repeat:no-repeat;\n+}\n+\n+.el_bundle {\n+  padding-left:18px;\n+  background-image:url(bundle.gif);\n+  background-position:left center;\n+  background-repeat:no-repeat;\n+}\n+\n+.el_package {\n+  padding-left:18px;\n+  background-image:url(package.gif);\n+  background-position:left center;\n+  background-repeat:no-repeat;\n+}\n+\n+.el_class {\n+  padding-left:18px;\n+  background-image:url(class.gif);\n+  background-position:left center;\n+  background-repeat:no-repeat;\n+}\n+\n+.el_source {\n+  padding-left:18px;\n+  background-image:url(source.gif);\n+  background-position:left center;\n+  background-repeat:no-repeat;\n+}\n+\n+.el_method {\n+  padding-left:18px;\n+  background-image:url(method.gif);\n+  background-position:left center;\n+  background-repeat:no-repeat;\n+}\n+\n+.el_session {\n+  padding-left:18px;\n+  background-image:url(session.gif);\n+  background-position:left center;\n+  background-repeat:no-repeat;\n+}\n+\n+pre.source {\n+  border:#d6d3ce 1px solid;\n+  font-family:monospace;\n+}\n+\n+pre.source ol {\n+  margin-bottom: 0px;\n+  margin-top: 0px;\n+}\n+\n+pre.source li {\n+  border-left: 1px solid #D6D3CE;\n+  color: #A0A0A0;\n+  padding-left: 0px;\n+}\n+\n+pre.source span.fc {\n+  background-color:#ccffcc;\n+}\n+\n+pre.source span.nc {\n+  background-color:#ffaaaa;\n+}\n+\n+pre.source span.pc {\n+  background-color:#ffffcc;\n+}\n+\n+pre.source span.bfc {\n+  background-image: url(branchfc.gif);\n+  background-repeat: no-repeat;\n+  background-position: 2px center;\n+}\n+\n+pre.source span.bfc:hover {\n+  background-color:#80ff80;\n+}\n+\n+pre.source span.bnc {\n+  background-image: url(branchnc.gif);\n+  background-repeat: no-repeat;\n+  background-position: 2px center;\n+}\n+\n+pre.source span.bnc:hover {\n+  background-color:#ff8080;\n+}\n+\n+pre.source span.bpc {\n+  background-image: url(branchpc.gif);\n+  background-repeat: no-repeat;\n+  background-position: 2px center;\n+}\n+\n+pre.source span.bpc:hover {\n+  background-color:#ffff80;\n+}\n+\n+table.coverage {\n+  empty-cells:show;\n+  border-collapse:collapse;\n+}\n+\n+table.coverage thead {\n+  background-color:#e0e0e0;\n+}\n+\n+table.coverage thead td {\n+  white-space:nowrap;\n+  padding:2px 14px 0px 6px;\n+  border-bottom:#b0b0b0 1px solid;\n+}\n+\n+table.coverage thead td.bar {\n+  border-left:#cccccc 1px solid;\n+}\n+\n+table.coverage thead td.ctr1 {\n+  text-align:right;\n+  border-left:#cccccc 1px solid;\n+}\n+\n+table.coverage thead td.ctr2 {\n+  text-align:right;\n+  padding-left:2px;\n+}\n+\n+table.coverage thead td.sortable {\n+  cursor:pointer;\n+  background-image:url(sort.gif);\n+  background-position:right center;\n+  background-repeat:no-repeat;\n+}\n+\n+table.coverage thead td.up {\n+  background-image:url(up.gif);\n+}\n+\n+table.coverage thead td.down {\n+  background-image:url(down.gif);\n+}\n+\n+table.coverage tbody td {\n+  white-space:nowrap;\n+  padding:2px 6px 2px 6px;\n+  border-bottom:#d6d3ce 1px solid;\n+}\n+\n+table.coverage tbody tr:hover {\n+  background: #f0f0d0 !important;\n+}\n+\n+table.coverage tbody td.bar {\n+  border-left:#e8e8e8 1px solid;\n+}\n+\n+table.coverage tbody td.ctr1 {\n+  text-align:right;\n+  padding-right:14px;\n+  border-left:#e8e8e8 1px solid;\n+}\n+\n+table.coverage tbody td.ctr2 {\n+  text-align:right;\n+  padding-right:14px;\n+  padding-left:2px;\n+}\n+\n+table.coverage tfoot td {\n+  white-space:nowrap;\n+  padding:2px 6px 2px 6px;\n+}\n+\n+table.coverage tfoot td.bar {\n+  border-left:#e8e8e8 1px solid;\n+}\n+\n+table.coverage tfoot td.ctr1 {\n+  text-align:right;\n+  padding-right:14px;\n+  border-left:#e8e8e8 1px solid;\n+}\n+\n+table.coverage tfoot td.ctr2 {\n+  text-align:right;\n+  padding-right:14px;\n+  padding-left:2px;\n+}\n+\n+.footer {\n+  margin-top:20px;\n+  border-top:#d6d3ce 1px solid;\n+  padding-top:2px;\n+  font-size:8pt;\n+  color:#a0a0a0;\n+}\n+\n+.footer a {\n+  color:#a0a0a0;\n+}\n+\n+.right {\n+  float:right;\n+}"
  }
]
