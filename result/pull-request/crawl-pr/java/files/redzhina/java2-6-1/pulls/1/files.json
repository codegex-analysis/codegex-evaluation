[
  {
    "sha": "abfaeeddac804c28a05ebda19d614029b391e47f",
    "filename": "src/main/java/ru/netology/domain/Radio.java",
    "status": "modified",
    "additions": 40,
    "deletions": 9,
    "changes": 49,
    "blob_url": "https://github.com/redzhina/java2-6-1/blob/4c2c88ebc93dbe480603adaa68d674749c36702f/src/main/java/ru/netology/domain/Radio.java",
    "raw_url": "https://github.com/redzhina/java2-6-1/raw/4c2c88ebc93dbe480603adaa68d674749c36702f/src/main/java/ru/netology/domain/Radio.java",
    "contents_url": "https://api.github.com/repos/redzhina/java2-6-1/contents/src/main/java/ru/netology/domain/Radio.java?ref=4c2c88ebc93dbe480603adaa68d674749c36702f",
    "patch": "@@ -1,8 +1,36 @@\n package ru.netology.domain;\n \n public class Radio {\n-    private int currentStation = 0;\n-    private int currentVolume = 0;\n+\n+    private short stationsNumber = 10;\n+    private int currentStation = 10;\n+    private int currentVolume = 30;\n+\n+    public Radio(int currentStation, int currentVolume) {\n+        this.currentStation = currentStation;\n+        this.currentVolume = currentVolume;\n+    }\n+\n+    public Radio(short stationsNumber) {\n+        if (stationsNumber < 0) {\n+            return;\n+        }\n+        this.stationsNumber = stationsNumber;\n+    }\n+\n+    public Radio(int currentVolume) {\n+        if (currentVolume > 100) {\n+            return;\n+        }\n+        if (currentVolume < 0) {\n+            return;\n+        }\n+        this.currentVolume = currentVolume;\n+    }\n+\n+    public Radio() {\n+\n+    }\n \n     public int getCurrentStation() {\n         return currentStation;\n@@ -12,31 +40,34 @@ public int getCurrentVolume() {\n         return currentVolume;\n     }\n \n+    public short getStationsNumber() {\n+        return stationsNumber;\n+    }\n+\n     public void next() {\n-        if (currentStation != 9) {\n-            currentStation += 1;\n+        if (currentStation != 10) {\n+            switchStation(getCurrentStation() + 1);\n         } else {\n-            currentStation = 0;\n+            switchStation(0);\n         }\n     }\n \n-\n     public void prev() {\n         if (currentStation != 0) {\n             currentStation -= 1;\n         } else {\n-            currentStation = 9;\n+            currentStation = 10;\n         }\n     }\n \n     public void switchStation(int x) {\n-        if (x >= 0 && x <= 9) {\n+        if (x >= 0 && x <= stationsNumber) {\n             currentStation = x;\n         }\n     }\n \n     public void plus() {\n-        if (currentVolume != 10) {\n+        if (currentVolume != 100) {\n             currentVolume += 1;\n         }\n     }"
  },
  {
    "sha": "4030e6ffd3adbd84cf1671daade37268bc86c5dc",
    "filename": "src/test/java/ru/netology/domain/RadioTest.java",
    "status": "modified",
    "additions": 81,
    "deletions": 10,
    "changes": 91,
    "blob_url": "https://github.com/redzhina/java2-6-1/blob/4c2c88ebc93dbe480603adaa68d674749c36702f/src/test/java/ru/netology/domain/RadioTest.java",
    "raw_url": "https://github.com/redzhina/java2-6-1/raw/4c2c88ebc93dbe480603adaa68d674749c36702f/src/test/java/ru/netology/domain/RadioTest.java",
    "contents_url": "https://api.github.com/repos/redzhina/java2-6-1/contents/src/test/java/ru/netology/domain/RadioTest.java?ref=4c2c88ebc93dbe480603adaa68d674749c36702f",
    "patch": "@@ -11,21 +11,70 @@\n     public void createRadio() {\n     }\n \n+    @Test\n+    public void checkingCurrentStation() {\n+        Radio radio = new Radio((int) 10, (int) 11);\n+        assertEquals(10, radio.getCurrentStation());\n+    }\n+\n+    @Test\n+    public void settingCurrentStation() {\n+        Radio radio = new Radio((short) 10);\n+        assertEquals(10, radio.getStationsNumber());\n+    }\n+\n+    @Test\n+    public void settingCurrentStationNegative() {\n+        Radio radio = new Radio((short) -13);\n+        assertEquals(10, radio.getStationsNumber());\n+    }\n+\n+    @Test\n+    public void checkingCurrentVolume() {\n+        Radio radio = new Radio((int) 30);\n+        assertEquals(30, radio.getCurrentVolume());\n+    }\n+\n+    @Test\n+    public void checkingCurrentVolumeNegative() {\n+        Radio radio = new Radio(101);\n+        assertEquals(30, radio.getCurrentVolume());\n+    }\n+\n+    @Test\n+    public void checkingCurrentVolumeNegativeTwo() {\n+        Radio radio = new Radio(-13);\n+        assertEquals(30, radio.getCurrentVolume());\n+    }\n+\n+    @Test\n+    public void checkingStations() {\n+        Radio radio = new Radio((short) 10);\n+        assertEquals(10, radio.getCurrentStation());\n+    }\n+\n+    @Test\n+    public void checkingStationsNegative() {\n+        Radio radio = new Radio((short) 21);\n+        assertEquals(10, radio.getCurrentStation());\n+\n+    }\n+\n     @Test\n     public void next() {\n         radio.next();\n-        int expected = 1;\n+        int expected = 0;\n         int actual = radio.getCurrentStation();\n         assertEquals(expected, actual);\n \n     }\n \n     @Test\n     public void nextStationZero() {\n-        for (int i = 0; i < 10; i++) {\n+        for (int i = 0; i < 11; i++) {\n             radio.next();\n         }\n-        int expected = 0;\n+        int expected = 10;\n         int actual = radio.getCurrentStation();\n         assertEquals(expected, actual);\n \n@@ -50,6 +99,17 @@ public void prevToStationEight() {\n \n     }\n \n+    @Test\n+    public void prevToStationTen() {\n+        for (int i = 0; i < 11; i++) {\n+            radio.prev();\n+        }\n+        int expected = 10;\n+        int actual = radio.getCurrentStation();\n+        assertEquals(expected, actual);\n+\n+    }\n+\n     @Test\n     public void switchStation() {\n         radio.switchStation(1);\n@@ -61,40 +121,40 @@ public void switchStation() {\n     @Test\n     public void switchStationAgain() {\n         radio.switchStation(99);\n-        int expected = 0;\n+        int expected = 10;\n         int actual = radio.getCurrentStation();\n         assertEquals(expected, actual);\n     }\n \n     @Test\n     public void switchStationToNine() {\n         radio.switchStation(-8);\n-        int expected = 0;\n+        int expected = 10;\n         int actual = radio.getCurrentStation();\n         assertEquals(expected, actual);\n     }\n     @Test\n     public void plus() {\n         radio.plus();\n-        int expected = 1;\n+        int expected = 31;\n         int actual = radio.getCurrentVolume();\n         assertEquals(expected, actual);\n     }\n \n     @Test\n     public void plusVolume() {\n-        for (int i = 0; i < 11; i++) {\n+        for (int i = 0; i < 100; i++) {\n             radio.plus();\n         }\n-        int expected = 10;\n+        int expected = 100;\n         int actual = radio.getCurrentVolume();\n         assertEquals(expected, actual);\n     }\n \n     @Test\n     public void minus() {\n         radio.minus();\n-        int expected = 0;\n+        int expected = 29;\n         int actual = radio.getCurrentVolume();\n         assertEquals(expected, actual);\n \n@@ -105,7 +165,18 @@ public void minusVolume() {\n         radio.plus();\n         radio.plus();\n         radio.minus();\n-        int expected = 1;\n+        int expected = 31;\n+        int actual = radio.getCurrentVolume();\n+        assertEquals(expected, actual);\n+\n+    }\n+\n+    @Test\n+    public void minusVolumeToZero() {\n+        for (int i = 0; i < 101; i++) {\n+            radio.minus();\n+        }\n+        int expected = 0;\n         int actual = radio.getCurrentVolume();\n         assertEquals(expected, actual);\n "
  }
]
