[
  {
    "sha": "2269f7fbafa9d0982b9b138b94de7ab40387b4df",
    "filename": "README.md",
    "status": "modified",
    "additions": 31,
    "deletions": 7,
    "changes": 38,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/README.md",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/README.md",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/README.md?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -9,7 +9,9 @@ org.apache.nifi.authorization.KeycloakUserGroupProvider\n \n \n ### NiFi properties\n-```\n+\n+\n+```properties\n # OpenId Connect SSO Properties #\n nifi.security.user.oidc.discovery.url=http://{HOST}:{PORT}/auth/realms/{REALM}/.well-known/openid-configuration\n nifi.security.user.oidc.connect.timeout=5 secs\n@@ -22,14 +24,36 @@ nifi.security.user.oidc.claim.identifying.user=preferred_username\n ```\n \n ### Authorizers.xml\n-```\n+\n+\n+\n+```xml\n <userGroupProvider>\n     <identifier>keycloak-user-group-provider</identifier>\n     <class>org.apache.nifi.authorization.KeycloakUserGroupProvider</class>\n-    <property name=\"ServerUrl\">http://{HOST}:{PORT}/auth</property>\n-    <property name=\"Realm\">{REALM}</property>\n-    <property name=\"Username\"></property>\n-    <property name=\"Password\"></property>\n-    <property name=\"ClientID\">admin-cli</property>\n+\n+    <!-- KetCloak Server auth endpoint (https://{KEYCLOAK_HOST}:{KEYCLOAK_PORT}/auth)-->\n+    <property name=\"ServerUrl\">{KEYCLOAK_URL}/auth</property>\n+    \n+    <!-- The KeyCloak realm to sync the Users -->\n+    <property name=\"Realm\">{KEYCLOAK_REALM}</property>\n+\n+    <!-- The KeyCloak username of the account with the permission to list users (\"admin\") -->\n+    <property name=\"Username\">{KEYCLOAK_CLIENT_USERNAME}</property>\n+    \n+    <!-- The KeyCloak password  -->\n+    <property name=\"Password\">{{KEYCLOAK_CLIENT_PASSWORD}</property>\n+\n+    <!-- The KeyCloak realm to sync the users ( admin-cli ) -->\n+    <property name=\"ClientID\">{KEYCLOAK_CLIENT_ID}</property>\n+    \n+    <!-- The KeyCloak realm to sync the Users -->\n+    <property name=\"ClientSecret\">{KEYCLOAK_CLIENT_SECRET}</property>\n </userGroupProvider>\n ```    \n+\n+\n+## Build\n+```shell script\n+$ mvn clean package\n+```"
  },
  {
    "sha": "bfb0a85ce96ae92a387d88d92e9069c69b413cc7",
    "filename": "docs/authorizers.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/docs/authorizers.xml",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/docs/authorizers.xml",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/docs/authorizers.xml?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -23,6 +23,7 @@\n         <property name=\"Username\"></property>\n         <property name=\"Password\"></property>\n         <property name=\"ClientID\">admin-cli</property>\n+        <property name=\"ClientSecret\">secret</property>\n     </userGroupProvider>\n \n </authorizers>\n\\ No newline at end of file"
  },
  {
    "sha": "f2ee3249f9cd2bc7922921337230653fcf60b04f",
    "filename": "nifi-keycloak-client/pom.xml",
    "status": "renamed",
    "additions": 10,
    "deletions": 2,
    "changes": 12,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/pom.xml",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/pom.xml",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak-client/pom.xml?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -18,9 +18,9 @@\n     <parent>\n         <groupId>org.apache.nifi</groupId>\n         <artifactId>nifi-keycloak-bundle</artifactId>\n-        <version>0.0.1-SNAPSHOT</version>\n+        <version>0.0.3</version>\n     </parent>\n-    <artifactId>nifi-keycloak</artifactId>\n+    <artifactId>nifi-keycloak-client</artifactId>\n \n     <build>\n         <resources>\n@@ -38,10 +38,12 @@\n         <dependency>\n             <groupId>org.apache.nifi</groupId>\n             <artifactId>nifi-framework-api</artifactId>\n+            <version>${nifi.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.nifi</groupId>\n             <artifactId>nifi-properties</artifactId>\n+            <version>${nifi.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.nifi</groupId>\n@@ -61,5 +63,11 @@\n             <version>1.11.3</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.nifi</groupId>\n+            <artifactId>nifi-expression-language</artifactId>\n+            <version>${nifi.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n     </dependencies>\n </project>",
    "previous_filename": "nifi-keycloak/pom.xml"
  },
  {
    "sha": "40ab23dbee3d77613e6ec590627f42a3003f5825",
    "filename": "nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakApiClient.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakApiClient.java",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakApiClient.java",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakApiClient.java?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -49,8 +49,8 @@ public KeycloakApiClient(KeycloakConfig config) {\n \n     private Group map(GroupRepresentation kcGroup) {\n \n-        GroupResource groupResource = realm().groups().group(kcGroup.getId());\n-        Set<String> users = groupResource.members().stream().map(UserRepresentation::getId).collect(Collectors.toSet());\n+        final GroupResource groupResource = realm().groups().group(kcGroup.getId());\n+        final Set<String> users = groupResource.members().stream().map(UserRepresentation::getId).collect(Collectors.toSet());\n \n         return new Group.Builder()\n                 .identifier(kcGroup.getId())",
    "previous_filename": "nifi-keycloak/src/main/java/org/apache/nifi/authorization/KeycloakApiClient.java"
  },
  {
    "sha": "88160daa20edda70d566be75ba31801728fcf1fb",
    "filename": "nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakConfig.java",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakConfig.java",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakConfig.java",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakConfig.java?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -0,0 +1,86 @@\n+package org.apache.nifi.authorization;\n+\n+import org.apache.nifi.authorization.exceptions.PropertyNotSetException;\n+import org.apache.nifi.components.PropertyValue;\n+import org.keycloak.admin.client.KeycloakBuilder;\n+\n+public class KeycloakConfig {\n+\n+    public static final String PROP_SERVER_URL = \"ServerUrl\";\n+    public static final String PROP_REALM = \"Realm\";\n+    public static final String PROP_USERNAME = \"Username\";\n+    public static final String PROP_PASSWORD = \"Password\";\n+    public static final String PROP_CLIENT_ID = \"ClientID\";\n+    public static final String PROP_CLIENT_SECRET = \"ClientSecret\";\n+\n+    private final String server;\n+    private final String realm;\n+    private final String clientId;\n+    private final String clientSecret;\n+    private final String username;\n+    private final String password;\n+\n+    private KeycloakConfig(String server,\n+                           String realm,\n+                           String username,\n+                           String password,\n+                           String clientId,\n+                           String clientSecret) {\n+\n+        this.server = server;\n+        this.realm = realm;\n+        this.clientId = clientId;\n+        this.clientSecret = clientSecret;\n+        this.username = username;\n+        this.password = password;\n+    }\n+\n+    public static KeycloakConfig from(AuthorizerConfigurationContext context) {\n+        return new KeycloakConfig(\n+            getProperty(context, PROP_SERVER_URL),\n+            getProperty(context, PROP_REALM),\n+            getProperty(context, PROP_USERNAME),\n+            getProperty(context, PROP_PASSWORD),\n+            getProperty(context, PROP_CLIENT_ID),\n+            getOptionalProperty(context, PROP_CLIENT_SECRET)\n+\n+        );\n+    }\n+\n+    private static String getProperty(AuthorizerConfigurationContext context, String property) {\n+        PropertyValue propertyValue = context.getProperty(property);\n+        if (propertyValue == null || !propertyValue.isSet()) {\n+            throw new PropertyNotSetException(property);\n+        }\n+\n+        return propertyValue.getValue();\n+    }\n+\n+    private static String getOptionalProperty(AuthorizerConfigurationContext context, String property) {\n+        PropertyValue propertyValue = context.getProperty(property);\n+        if (propertyValue == null || !propertyValue.isSet()) {\n+            return null;\n+        }\n+\n+        return propertyValue.getValue();\n+    }\n+\n+    public final String getRealm() {\n+        return realm;\n+    }\n+\n+    public KeycloakBuilder keycloakBuilder() {\n+        KeycloakBuilder builder = KeycloakBuilder.builder();\n+        apply(builder);\n+        return builder;\n+    }\n+\n+    public KeycloakBuilder apply(KeycloakBuilder builder) {\n+        return builder.serverUrl(server)\n+            .realm(realm)\n+            .username(username)\n+            .password(password)\n+            .clientId(clientId)\n+            .clientSecret(clientSecret);\n+    }\n+}"
  },
  {
    "sha": "acef95f2fc5ef42e2dcc5651394cba0b83b595a9",
    "filename": "nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakUserGroupProvider.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakUserGroupProvider.java",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakUserGroupProvider.java",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/KeycloakUserGroupProvider.java?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -152,8 +152,8 @@ public final void preDestruction() throws ProviderDestructionException {\n     private void load() {\n \n         KeycloakApiClient client = new KeycloakApiClient(keycloakConfig);\n-        var userList = client.getUsers();\n-        var groupList = client.getGroups();\n+        Set<User> userList = client.getUsers();\n+        Set<Group> groupList = client.getGroups();\n \n         tenants.set(new TenantHolder(new HashSet<>(userList), new HashSet<>(groupList)));\n     }",
    "previous_filename": "nifi-keycloak/src/main/java/org/apache/nifi/authorization/KeycloakUserGroupProvider.java"
  },
  {
    "sha": "82f93ff35fe26bd36d5a5625372a1b78097167cf",
    "filename": "nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/TenantHolder.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/TenantHolder.java",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/TenantHolder.java",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/TenantHolder.java?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "previous_filename": "nifi-keycloak/src/main/java/org/apache/nifi/authorization/TenantHolder.java"
  },
  {
    "sha": "4c5a239fbbd6273db2319be2c081683b4cf183fd",
    "filename": "nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/exceptions/PropertyNotSetException.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/exceptions/PropertyNotSetException.java",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/exceptions/PropertyNotSetException.java",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak-client/src/main/java/org/apache/nifi/authorization/exceptions/PropertyNotSetException.java?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -0,0 +1,8 @@\n+package org.apache.nifi.authorization.exceptions;\n+\n+public class PropertyNotSetException extends RuntimeException {\n+\n+    public PropertyNotSetException(String property) {\n+        super(\"KeycloakUserGroupProvider config property '\" + property + \"' is not set\");\n+    }\n+}"
  },
  {
    "sha": "bd1bec6ecbe7d7db7efea5db87d625788aac45cc",
    "filename": "nifi-keycloak-client/src/main/resources/META-INF/services/org.apache.nifi.authorization.UserGroupProvider",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/resources/META-INF/services/org.apache.nifi.authorization.UserGroupProvider",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/main/resources/META-INF/services/org.apache.nifi.authorization.UserGroupProvider",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak-client/src/main/resources/META-INF/services/org.apache.nifi.authorization.UserGroupProvider?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "previous_filename": "nifi-keycloak/src/main/resources/META-INF/services/org.apache.nifi.authorization.UserGroupProvider"
  },
  {
    "sha": "70c4cf3540ce7cf81542b54c2a5ca8ec5100916b",
    "filename": "nifi-keycloak-client/src/test/java/org/apache/nifi/authorization/KeyCloakIntegrationTests.java",
    "status": "added",
    "additions": 81,
    "deletions": 0,
    "changes": 81,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/test/java/org/apache/nifi/authorization/KeyCloakIntegrationTests.java",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/test/java/org/apache/nifi/authorization/KeyCloakIntegrationTests.java",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak-client/src/test/java/org/apache/nifi/authorization/KeyCloakIntegrationTests.java?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -0,0 +1,81 @@\n+package org.apache.nifi.authorization;\n+\n+import org.apache.nifi.attribute.expression.language.StandardPropertyValue;\n+import org.apache.nifi.parameter.ParameterLookup;\n+import org.apache.nifi.util.NiFiProperties;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import java.util.Properties;\n+\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class KeyCloakIntegrationTests {\n+\n+    private KeycloakUserGroupProvider kcUserGroupProvider;\n+\n+    @Before\n+    public void setup() {\n+        final UserGroupProviderInitializationContext initializationContext = mock(UserGroupProviderInitializationContext.class);\n+        when(initializationContext.getIdentifier()).thenReturn(\"identifier\");\n+\n+        kcUserGroupProvider = new KeycloakUserGroupProvider();\n+        kcUserGroupProvider.setNiFiProperties(getNiFiProperties(new Properties()));\n+        kcUserGroupProvider.initialize(initializationContext);\n+    }\n+\n+    @Test()\n+    //@Ignore(\"Requires KeyCloak setup\")\n+    public void testGetUser() throws Exception {\n+\n+        // KeyCloak Setup\n+        String USERID = \"84a423b7-5e14-4a99-b7f8-c790e7e31cbe\";\n+        String USERNAME = \"chris\";\n+\n+        String GROUPID = \"8d7ab8e9-073c-4e04-b8ce-8a7b8503ae4f\";\n+        String GROUPNAME = \"nifi-devs\";\n+        // Test setup\n+\n+        final AuthorizerConfigurationContext configurationContext = getBaseConfiguration();\n+        kcUserGroupProvider.onConfigured(configurationContext);\n+\n+        User userByIdentifier = kcUserGroupProvider.getUser(USERID);\n+        Assert.assertEquals(USERNAME, userByIdentifier.getIdentity());\n+\n+        User userByIdentity = kcUserGroupProvider.getUserByIdentity(USERNAME);\n+        Assert.assertEquals(USERNAME, userByIdentity.getIdentity());\n+\n+        Group groupByIdentifier = kcUserGroupProvider.getGroup(GROUPID);\n+        Assert.assertEquals(GROUPNAME, groupByIdentifier.getName());\n+\n+        UserAndGroups res = kcUserGroupProvider.getUserAndGroups(USERNAME);\n+        Assert.assertNotNull(res.getGroups());\n+        Assert.assertFalse(res.getGroups().isEmpty());\n+    }\n+\n+    private AuthorizerConfigurationContext getBaseConfiguration() {\n+        final AuthorizerConfigurationContext configurationContext = mock(AuthorizerConfigurationContext.class);\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_SERVER_URL))).thenReturn(new StandardPropertyValue(\"http://localhost:4000/auth\", null, ParameterLookup.EMPTY));\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_REALM))).thenReturn(new StandardPropertyValue(\"master\", null, ParameterLookup.EMPTY));\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_CLIENT_ID))).thenReturn(new StandardPropertyValue(\"admin-cli\", null, ParameterLookup.EMPTY));\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_CLIENT_SECRET))).thenReturn(new StandardPropertyValue(null, null, ParameterLookup.EMPTY));\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_USERNAME))).thenReturn(new StandardPropertyValue(\"admin\", null, ParameterLookup.EMPTY));\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_PASSWORD))).thenReturn(new StandardPropertyValue(\"admin\", null, ParameterLookup.EMPTY));\n+\n+\n+        return configurationContext;\n+    }\n+\n+    private NiFiProperties getNiFiProperties(final Properties properties) {\n+        final NiFiProperties nifiProperties = Mockito.mock(NiFiProperties.class);\n+        when(nifiProperties.getPropertyKeys()).thenReturn(properties.stringPropertyNames());\n+        when(nifiProperties.getProperty(anyString())).then(invocationOnMock -> properties.getProperty((String) invocationOnMock.getArguments()[0]));\n+        return nifiProperties;\n+    }\n+}"
  },
  {
    "sha": "01820d1e9014c176c8243944e1f8c1bbb155ba75",
    "filename": "nifi-keycloak-client/src/test/java/org/apache/nifi/authorization/KeycloakTests.java",
    "status": "renamed",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/test/java/org/apache/nifi/authorization/KeycloakTests.java",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-client/src/test/java/org/apache/nifi/authorization/KeycloakTests.java",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak-client/src/test/java/org/apache/nifi/authorization/KeycloakTests.java?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -3,7 +3,6 @@\n import org.apache.nifi.attribute.expression.language.StandardPropertyValue;\n import org.apache.nifi.parameter.ParameterLookup;\n import org.apache.nifi.util.NiFiProperties;\n-import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n import org.mockito.Mockito;\n@@ -40,7 +39,12 @@ public void testInitialize() throws Exception {\n     private AuthorizerConfigurationContext getBaseConfiguration() {\n         final AuthorizerConfigurationContext configurationContext = mock(AuthorizerConfigurationContext.class);\n         when(configurationContext.getProperty(eq(KeycloakConfig.PROP_SERVER_URL))).thenReturn(new StandardPropertyValue(\"http://localhost:4000/auth\", null, ParameterLookup.EMPTY));\n-\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_SERVER_URL))).thenReturn(new StandardPropertyValue(\"http://localhost:4000/auth\", null, ParameterLookup.EMPTY));\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_REALM))).thenReturn(new StandardPropertyValue(\"master\", null, ParameterLookup.EMPTY));\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_CLIENT_ID))).thenReturn(new StandardPropertyValue(\"admin-cli\", null, ParameterLookup.EMPTY));\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_CLIENT_SECRET))).thenReturn(new StandardPropertyValue(null, null, ParameterLookup.EMPTY));\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_USERNAME))).thenReturn(new StandardPropertyValue(\"admin\", null, ParameterLookup.EMPTY));\n+        when(configurationContext.getProperty(eq(KeycloakConfig.PROP_PASSWORD))).thenReturn(new StandardPropertyValue(\"admin\", null, ParameterLookup.EMPTY));\n         return configurationContext;\n     }\n ",
    "previous_filename": "nifi-keycloak/src/test/java/org/apache/nifi/authorization/KeycloakTests.java"
  },
  {
    "sha": "2a811eb4c02028b3d42c515eb60c56760510675a",
    "filename": "nifi-keycloak-provider/pom.xml",
    "status": "renamed",
    "additions": 30,
    "deletions": 4,
    "changes": 34,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-provider/pom.xml",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/nifi-keycloak-provider/pom.xml",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak-provider/pom.xml?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -17,9 +17,9 @@\n     <parent>\n         <groupId>org.apache.nifi</groupId>\n         <artifactId>nifi-keycloak-bundle</artifactId>\n-        <version>0.0.1-SNAPSHOT</version>\n+        <version>0.0.3</version>\n     </parent>\n-    <artifactId>nifi-keycloak-nar</artifactId>\n+    <artifactId>nifi-keycloak-provider</artifactId>\n     <packaging>nar</packaging>\n     <description>NiFi: Keycloak Nar</description>\n     <properties>\n@@ -29,8 +29,34 @@\n     <dependencies>\n         <dependency>\n             <groupId>org.apache.nifi</groupId>\n-            <artifactId>nifi-keycloak</artifactId>\n-            <version>${parent.version}</version>\n+            <artifactId>nifi-keycloak-client</artifactId>\n+            <version>${project.parent.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.nifi</groupId>\n+            <artifactId>nifi-properties</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.nifi</groupId>\n+            <artifactId>nifi-framework-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.nifi</groupId>\n+            <artifactId>nifi-framework-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.nifi</groupId>\n+            <artifactId>nifi-properties</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.nifi</groupId>\n+            <artifactId>nifi-expression-language</artifactId>\n+            <version>1.13.0</version>\n+            <scope>test</scope>\n         </dependency>\n     </dependencies>\n </project>",
    "previous_filename": "nifi-keycloak-nar/pom.xml"
  },
  {
    "sha": "d43fc310e789978e7140f24dc520844972785c93",
    "filename": "nifi-keycloak/src/main/java/org/apache/nifi/authorization/KeycloakConfig.java",
    "status": "removed",
    "additions": 0,
    "deletions": 68,
    "changes": 68,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/af453fcc8be6603f9169c5c29f49ca5d2d447c80/nifi-keycloak/src/main/java/org/apache/nifi/authorization/KeycloakConfig.java",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/af453fcc8be6603f9169c5c29f49ca5d2d447c80/nifi-keycloak/src/main/java/org/apache/nifi/authorization/KeycloakConfig.java",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/nifi-keycloak/src/main/java/org/apache/nifi/authorization/KeycloakConfig.java?ref=af453fcc8be6603f9169c5c29f49ca5d2d447c80",
    "patch": "@@ -1,68 +0,0 @@\n-package org.apache.nifi.authorization;\n-\n-import org.keycloak.admin.client.KeycloakBuilder;\n-\n-public class KeycloakConfig {\n-\n-    public static final String PROP_SERVER_URL = \"ServerUrl\";\n-    public static final String PROP_REALM = \"Realm\";\n-    public static final String PROP_USERNAME = \"Username\";\n-    public static final String PROP_PASSWORD = \"Password\";\n-    public static final String PROP_CLIENT_ID = \"ClientID\";\n-\n-    private final String server;\n-    private final String realm;\n-    private final String clientId;\n-    private final String username;\n-    private final String password;\n-\n-    private KeycloakConfig(String server,\n-                           String realm,\n-                           String clientId,\n-                           String username,\n-                           String password) {\n-\n-        this.server = server;\n-        this.realm = realm;\n-        this.clientId = clientId;\n-        this.username = username;\n-        this.password = password;\n-    }\n-\n-    public static KeycloakConfig from(AuthorizerConfigurationContext context) {\n-\n-        return new KeycloakConfig(\n-            getOrDefault(context, PROP_SERVER_URL, \"http://localhost:3000/auth\"),\n-            getOrDefault(context, PROP_REALM, \"master\"),\n-            getOrDefault(context, PROP_CLIENT_ID, \"admin-cli\"),\n-            getOrDefault(context, PROP_USERNAME, \"admin\"),\n-            getOrDefault(context, PROP_PASSWORD, \"admin\")\n-        );\n-    }\n-\n-    private static String getOrDefault(AuthorizerConfigurationContext context, String property, String defaultValue) {\n-        if (context.getProperty(property) != null && context.getProperty(property).isSet()) {\n-            return context.getProperty(property).getValue();\n-        }\n-\n-        return defaultValue;\n-    }\n-\n-    public final String getRealm() {\n-        return realm;\n-    }\n-\n-    public KeycloakBuilder keycloakBuilder() {\n-        var builder = KeycloakBuilder.builder();\n-        apply(builder);\n-        return builder;\n-    }\n-\n-    public KeycloakBuilder apply(KeycloakBuilder builder) {\n-        return builder.serverUrl(server)\n-            .realm(realm)\n-            .username(username)\n-            .password(password)\n-            .clientId(clientId);\n-    }\n-}"
  },
  {
    "sha": "e1156a0cfd801b8727401a2d19d52a7b37f425e4",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 20,
    "deletions": 7,
    "changes": 27,
    "blob_url": "https://github.com/ChrisEnglert/nifi-keycloak/blob/71f82d5b65a3e53095e38b1997fae02530fde8d9/pom.xml",
    "raw_url": "https://github.com/ChrisEnglert/nifi-keycloak/raw/71f82d5b65a3e53095e38b1997fae02530fde8d9/pom.xml",
    "contents_url": "https://api.github.com/repos/ChrisEnglert/nifi-keycloak/contents/pom.xml?ref=71f82d5b65a3e53095e38b1997fae02530fde8d9",
    "patch": "@@ -17,31 +17,44 @@\n     <parent>\n         <groupId>org.apache.nifi</groupId>\n         <artifactId>nifi-nar-bundles</artifactId>\n-        <version>1.11.4</version>\n+        <version>1.13.0</version>\n     </parent>\n \n     <artifactId>nifi-keycloak-bundle</artifactId>\n     <packaging>pom</packaging>\n     <description>NiFi: Keycloak Bundle</description>\n-    <version>0.0.1-SNAPSHOT</version>\n+    <version>0.0.3</version>\n \n     <properties>\n-        <keycloak.version>10.0.0</keycloak.version>\n-        <nifi.version>1.11.4</nifi.version>\n+        <keycloak.version>12.0.4</keycloak.version>\n+        <nifi.version>1.13.0</nifi.version>\n     </properties>\n \n     <modules>\n-        <module>nifi-keycloak</module>\n-        <module>nifi-keycloak-nar</module>\n+        <module>nifi-keycloak-provider</module>\n+        <module>nifi-keycloak-client</module>\n     </modules>\n \n     <dependencyManagement>\n         <dependencies>\n             <dependency>\n                 <groupId>org.apache.nifi</groupId>\n                 <artifactId>nifi-keycloak</artifactId>\n-                <version>${version}</version>\n+                <version>${project.version}</version>\n             </dependency>\n         </dependencies>\n     </dependencyManagement>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>1.8</source>\n+                    <target>1.8</target>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n </project>"
  }
]
