[
  {
    "sha": "643d213c6227a6be02cda46721d7c5fdae639053",
    "filename": ".gitignore",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/.gitignore",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/.gitignore",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/.gitignore?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,15 @@\n+*.iml\r\n+.gradle\r\n+/local.properties\r\n+/.idea/caches\r\n+/.idea/libraries\r\n+/.idea/modules.xml\r\n+/.idea/workspace.xml\r\n+/.idea/navEditor.xml\r\n+/.idea/assetWizardSettings.xml\r\n+.DS_Store\r\n+/build\r\n+/captures\r\n+.externalNativeBuild\r\n+.cxx\r\n+local.properties\r"
  },
  {
    "sha": "26d33521af10bcc7fd8cea344038eaaeb78d0ef5",
    "filename": ".idea/.gitignore",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/.idea/.gitignore",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/.idea/.gitignore?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,3 @@\n+# Default ignored files\n+/shelf/\n+/workspace.xml"
  },
  {
    "sha": "2ab0632ad2207af4d8bbaa3c8c094634749326c9",
    "filename": ".idea/.name",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/.idea/.name",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/.idea/.name",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/.idea/.name?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1 @@\n+tapOrDie\n\\ No newline at end of file"
  },
  {
    "sha": "61a9130cd9669c3843e6445dfe1fee2d493869bc",
    "filename": ".idea/compiler.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/.idea/compiler.xml",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/.idea/compiler.xml?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"CompilerConfiguration\">\n+    <bytecodeTargetLevel target=\"1.8\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "23a89bbb6ca829a47211d20c8b11960088ea4950",
    "filename": ".idea/gradle.xml",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/.idea/gradle.xml",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/.idea/gradle.xml",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/.idea/gradle.xml?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n+  <component name=\"GradleSettings\">\n+    <option name=\"linkedExternalProjectsSettings\">\n+      <GradleProjectSettings>\n+        <option name=\"testRunner\" value=\"PLATFORM\" />\n+        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n+        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n+        <option name=\"gradleJvm\" value=\"1.8\" />\n+        <option name=\"modules\">\n+          <set>\n+            <option value=\"$PROJECT_DIR$\" />\n+            <option value=\"$PROJECT_DIR$/app\" />\n+          </set>\n+        </option>\n+        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n+        <option name=\"useQualifiedModuleNames\" value=\"true\" />\n+      </GradleProjectSettings>\n+    </option>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "c83a369c04fb0bf84bbc484b702198e1f1493570",
    "filename": ".idea/inspectionProfiles/Project_Default.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/.idea/inspectionProfiles/Project_Default.xml",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/.idea/inspectionProfiles/Project_Default.xml",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/.idea/inspectionProfiles/Project_Default.xml?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,6 @@\n+<component name=\"InspectionProjectProfileManager\">\n+  <profile version=\"1.0\">\n+    <option name=\"myName\" value=\"Project Default\" />\n+    <inspection_tool class=\"MarkdownUnresolvedFileReference\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\" />\n+  </profile>\n+</component>\n\\ No newline at end of file"
  },
  {
    "sha": "a5f05cd8c87d4a72b0242026524cb32639fca7f0",
    "filename": ".idea/jarRepositories.xml",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/.idea/jarRepositories.xml",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/.idea/jarRepositories.xml",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/.idea/jarRepositories.xml?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"RemoteRepositoriesConfiguration\">\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Maven Central repository\" />\n+      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"jboss.community\" />\n+      <option name=\"name\" value=\"JBoss Community repository\" />\n+      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"BintrayJCenter\" />\n+      <option name=\"name\" value=\"BintrayJCenter\" />\n+      <option name=\"url\" value=\"https://jcenter.bintray.com/\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"Google\" />\n+      <option name=\"name\" value=\"Google\" />\n+      <option name=\"url\" value=\"https://dl.google.com/dl/android/maven2/\" />\n+    </remote-repository>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "d5d35ec44f10991b508f6454a85204a276726364",
    "filename": ".idea/misc.xml",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/.idea/misc.xml",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/.idea/misc.xml?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n+    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n+  </component>\n+  <component name=\"ProjectType\">\n+    <option name=\"id\" value=\"Android\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "418601b87ce6d38c0ba3b9a1a85225f25ab92c2e",
    "filename": ".idea/modules.xml",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/.idea/modules.xml",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/.idea/modules.xml",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/.idea/modules.xml?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectModuleManager\">\n+    <modules>\n+      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/tapOrDie.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/tapOrDie.iml\" />\n+      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/app/tapOrDie.app.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/app/tapOrDie.app.iml\" />\n+    </modules>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "94a25f7f4cb416c083d265558da75d457237d671",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/.idea/vcs.xml",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/.idea/vcs.xml?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "0e5aa9fe9d3b841a4379181dd1f5da65d1e29835",
    "filename": "README.md",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/en3m3/Team08/blob/72f19775be435024a623328f3d1afc65356aa482/README.md",
    "raw_url": "https://github.com/en3m3/Team08/raw/72f19775be435024a623328f3d1afc65356aa482/README.md",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/README.md?ref=72f19775be435024a623328f3d1afc65356aa482",
    "patch": "@@ -1 +0,0 @@\n-# Team08\n\\ No newline at end of file"
  },
  {
    "sha": "97ee4f2afa512370e17c368d1592c1d0c6d7f6ce",
    "filename": "Sample.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/en3m3/Team08/blob/72f19775be435024a623328f3d1afc65356aa482/Sample.txt",
    "raw_url": "https://github.com/en3m3/Team08/raw/72f19775be435024a623328f3d1afc65356aa482/Sample.txt",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/Sample.txt?ref=72f19775be435024a623328f3d1afc65356aa482",
    "patch": "@@ -1 +0,0 @@\n-This is some text.\n\\ No newline at end of file"
  },
  {
    "sha": "42afabfd2abebf31384ca7797186a27a4b7dbee8",
    "filename": "app/.gitignore",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/.gitignore",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/.gitignore",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/.gitignore?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1 @@\n+/build\n\\ No newline at end of file"
  },
  {
    "sha": "c2ec50f3d453d6af48834e0ec0f82562f8cd6c36",
    "filename": "app/build.gradle",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/build.gradle",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/build.gradle",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/build.gradle?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,39 @@\n+plugins {\r\n+    id 'com.android.application'\r\n+}\r\n+\r\n+android {\r\n+    compileSdkVersion 30\r\n+    buildToolsVersion \"30.0.3\"\r\n+\r\n+    defaultConfig {\r\n+        applicationId \"com.example.tapordie\"\r\n+        minSdkVersion 16\r\n+        targetSdkVersion 30\r\n+        versionCode 1\r\n+        versionName \"1.0\"\r\n+\r\n+        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n+    }\r\n+\r\n+    buildTypes {\r\n+        release {\r\n+            minifyEnabled false\r\n+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n+        }\r\n+    }\r\n+    compileOptions {\r\n+        sourceCompatibility JavaVersion.VERSION_1_8\r\n+        targetCompatibility JavaVersion.VERSION_1_8\r\n+    }\r\n+}\r\n+\r\n+dependencies {\r\n+\r\n+    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n+    implementation 'com.google.android.material:material:1.3.0'\r\n+    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n+    testImplementation 'junit:junit:4.+'\r\n+    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "64b4a059a2d5777f903b96984a78d9ddb56c4717",
    "filename": "app/proguard-rules.pro",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/proguard-rules.pro",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/proguard-rules.pro",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/proguard-rules.pro?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,21 @@\n+# Add project specific ProGuard rules here.\r\n+# You can control the set of applied configuration files using the\r\n+# proguardFiles setting in build.gradle.\r\n+#\r\n+# For more details, see\r\n+#   http://developer.android.com/guide/developing/tools/proguard.html\r\n+\r\n+# If your project uses WebView with JS, uncomment the following\r\n+# and specify the fully qualified class name to the JavaScript interface\r\n+# class:\r\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\r\n+#   public *;\r\n+#}\r\n+\r\n+# Uncomment this to preserve the line number information for\r\n+# debugging stack traces.\r\n+#-keepattributes SourceFile,LineNumberTable\r\n+\r\n+# If you keep the line number information, uncomment this to\r\n+# hide the original source file name.\r\n+#-renamesourcefileattribute SourceFile\n\\ No newline at end of file"
  },
  {
    "sha": "65bf4e9ec821cd8a62f373eba30648be092a3512",
    "filename": "app/src/androidTest/java/com/example/tapordie/ExampleInstrumentedTest.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/androidTest/java/com/example/tapordie/ExampleInstrumentedTest.java",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/androidTest/java/com/example/tapordie/ExampleInstrumentedTest.java",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/androidTest/java/com/example/tapordie/ExampleInstrumentedTest.java?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,26 @@\n+package com.example.tapordie;\r\n+\r\n+import android.content.Context;\r\n+\r\n+import androidx.test.platform.app.InstrumentationRegistry;\r\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\r\n+\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+\r\n+import static org.junit.Assert.*;\r\n+\r\n+/**\r\n+ * Instrumented test, which will execute on an Android device.\r\n+ *\r\n+ * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\r\n+ */\r\n+@RunWith(AndroidJUnit4.class)\r\n+public class ExampleInstrumentedTest {\r\n+    @Test\r\n+    public void useAppContext() {\r\n+        // Context of the app under test.\r\n+        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();\r\n+        assertEquals(\"com.example.tapordie\", appContext.getPackageName());\r\n+    }\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "52ffb36b85364c996dac4eb5a35c66c32b491d5e",
    "filename": "app/src/main/AndroidManifest.xml",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/AndroidManifest.xml?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n+    package=\"com.example.tapordie\">\r\n+\r\n+    <application\r\n+        android:allowBackup=\"true\"\r\n+        android:icon=\"@mipmap/ic_launcher\"\r\n+        android:label=\"@string/app_name\"\r\n+        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n+        android:supportsRtl=\"true\"\r\n+        android:theme=\"@style/Theme.AppCompat.NoActionBar\">\r\n+        <activity android:name=\".MainActivity\">\r\n+            <intent-filter>\r\n+                <action android:name=\"android.intent.action.MAIN\" />\r\n+\r\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n+            </intent-filter>\r\n+        </activity>\r\n+    </application>\r\n+\r\n+</manifest>\n\\ No newline at end of file"
  },
  {
    "sha": "c5b43eac5d1bc6ec648a24dd90efb12a6a4e8f1d",
    "filename": "app/src/main/java/com/example/tapordie/BaseObject.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/BaseObject.java",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/BaseObject.java",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/java/com/example/tapordie/BaseObject.java?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,71 @@\n+package com.example.tapordie;\r\n+\r\n+import android.graphics.Bitmap;\r\n+import android.graphics.Rect;\r\n+\r\n+public class BaseObject {\r\n+    protected float x, y;\r\n+    protected int width, height;\r\n+    protected Bitmap bm;\r\n+    protected Rect rect;\r\n+\r\n+\r\n+    public BaseObject(){\r\n+\r\n+    }\r\n+\r\n+    public BaseObject(float x, float y, int width, int height) {\r\n+        this.x = x;\r\n+        this.y = y;\r\n+        this.width = width;\r\n+        this.height = height;\r\n+    }\r\n+\r\n+    public float getX() {\r\n+        return x;\r\n+    }\r\n+\r\n+    public void setX(float x) {\r\n+        this.x = x;\r\n+    }\r\n+\r\n+    public float getY() {\r\n+        return y;\r\n+    }\r\n+\r\n+    public void setY(float y) {\r\n+        this.y = y;\r\n+    }\r\n+\r\n+    public int getWidth() {\r\n+        return width;\r\n+    }\r\n+\r\n+    public void setWidth(int width) {\r\n+        this.width = width;\r\n+    }\r\n+\r\n+    public int getHeight() {\r\n+        return height;\r\n+    }\r\n+\r\n+    public void setHeight(int height) {\r\n+        this.height = height;\r\n+    }\r\n+\r\n+    public Bitmap getBm() {\r\n+        return bm;\r\n+    }\r\n+\r\n+    public void setBm(Bitmap bm) {\r\n+        this.bm = bm;\r\n+    }\r\n+\r\n+    public Rect getRect() {\r\n+        return new Rect((int)this.x, (int)this.y, (int)this.x + this.width, (int)this.y + this.height);\r\n+    }\r\n+\r\n+    public void setRect(Rect rect) {\r\n+        this.rect = rect;\r\n+    }\r\n+}\r"
  },
  {
    "sha": "500a3ed063fcc481dc5bece1b3ab7b09f592b9e1",
    "filename": "app/src/main/java/com/example/tapordie/Bird.java",
    "status": "added",
    "additions": 80,
    "deletions": 0,
    "changes": 80,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/Bird.java",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/Bird.java",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/java/com/example/tapordie/Bird.java?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,80 @@\n+package com.example.tapordie;\r\n+\r\n+import android.graphics.Bitmap;\r\n+import android.graphics.Canvas;\r\n+import android.graphics.Matrix;\r\n+\r\n+import java.util.ArrayList;\r\n+\r\n+public class Bird extends BaseObject {\r\n+    private ArrayList<Bitmap> arrBms = new ArrayList<>();\r\n+    private int count, vFlap, idCurrentBitmap;\r\n+    private float drop;\r\n+\r\n+    public Bird(){\r\n+        this.count = 0;\r\n+        this.vFlap =5;\r\n+        this.idCurrentBitmap = 0;\r\n+        this.drop = 0;\r\n+    }\r\n+    public void draw(Canvas canvas) {\r\n+        drop();\r\n+        canvas.drawBitmap(this.getBm(), this.x, this.y, null);\r\n+    }\r\n+\r\n+    private void drop() {\r\n+        this.drop += 0.6;\r\n+        this.y += this.drop;\r\n+    }\r\n+\r\n+    public float getDrop() {\r\n+        return drop;\r\n+    }\r\n+\r\n+    public void setDrop(float drop) {\r\n+        this.drop = drop;\r\n+    }\r\n+\r\n+    public ArrayList<Bitmap> getArrBms() {\r\n+        return arrBms;\r\n+    }\r\n+\r\n+    public void setArrBms(ArrayList<Bitmap> arrBms) {\r\n+        this.arrBms = arrBms;\r\n+        //scale bitmaps to size of bird\r\n+        for(int i = 0; i < arrBms.size(); i++){\r\n+            this.arrBms.set(i, Bitmap.createScaledBitmap(this.arrBms.get(i), this.width, this.height, true));\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    public Bitmap getBm() {\r\n+        count++;\r\n+        if(this.count == this.vFlap){\r\n+            for(int i = 0; i <arrBms.size(); i++){\r\n+                if(i == arrBms.size()-1) {\r\n+                    this.idCurrentBitmap = 0;\r\n+                    break;\r\n+                } else if (this.idCurrentBitmap == i) {\r\n+                    idCurrentBitmap = i + 1;\r\n+                    break;\r\n+                }\r\n+            }\r\n+            count =0;\r\n+        }\r\n+        if(this.drop<0) {\r\n+            Matrix matrix = new Matrix();\r\n+            matrix.postRotate(-25);\r\n+            return Bitmap.createBitmap(arrBms.get(idCurrentBitmap), 0, 0, arrBms.get(idCurrentBitmap).getWidth(), arrBms.get(idCurrentBitmap).getHeight(), matrix, true);\r\n+        } else if(drop>=0){\r\n+            Matrix matrix = new Matrix();\r\n+            if(drop<70) {\r\n+                matrix.postRotate(-25+(drop*2));\r\n+            } else {\r\n+                matrix.postRotate(45);\r\n+            }\r\n+            return Bitmap.createBitmap(arrBms.get(idCurrentBitmap), 0, 0, arrBms.get(idCurrentBitmap).getWidth(), arrBms.get(idCurrentBitmap).getHeight(), matrix, true);\r\n+        }\r\n+        return this.arrBms.get(idCurrentBitmap);\r\n+    }\r\n+}\r"
  },
  {
    "sha": "3750fdfcfa4bf43a3a9c97527ad8cf66bbfcbe12",
    "filename": "app/src/main/java/com/example/tapordie/Chopper.java",
    "status": "added",
    "additions": 125,
    "deletions": 0,
    "changes": 125,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/Chopper.java",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/Chopper.java",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/java/com/example/tapordie/Chopper.java?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,125 @@\n+package com.example.tapordie;\n+\n+import android.graphics.Bitmap;\n+import android.graphics.Canvas;\n+import android.graphics.Matrix;\n+import android.util.Log;\n+\n+import java.util.ArrayList;\n+\n+public class Chopper extends BaseObject {\n+    private ArrayList<Bitmap> arrBms = new ArrayList<>();\n+    private int count, vFlap, idCurrentBitmap;\n+    private float drop;\n+    private int monkeyNums = 0;\n+    private int yMove = 0;\n+    private double speed = 5;\n+    private int moveTo = 0;\n+    private ChopperState state = ChopperState.NOTMOVING;\n+\n+    public Chopper(){\n+        this.count = 0;\n+        this.vFlap =0;\n+        this.idCurrentBitmap = 0;\n+        this.drop = 0;\n+    }\n+    public void draw(Canvas canvas) {\n+        canvas.drawBitmap(this.getBm(), this.x, this.y, null);\n+    }\n+\n+    public void update() {\n+        switch(this.state) {\n+            case MOVINGUP:\n+                this.y += this.speed;\n+                if(this.y > this.moveTo) {this.state=ChopperState.NOTMOVING;}\n+                break;\n+            case MOVINGDOWN:\n+                this.y -= this.speed;\n+                if(this.y < this.moveTo) {this.state=ChopperState.NOTMOVING;}\n+                break;\n+            default:\n+                break;\n+        }\n+        Log.d(\"state\", this.state.toString());\n+    }\n+\n+    private void drop() {\n+//        this.drop += 0.6;\n+//        this.drop += (monkeyNums)*0.3;\n+//        this.drop += 0.1;\n+//        this.drop = 0;\n+//        this.y += this.drop;\n+    }\n+\n+    public float getDrop() {\n+        return drop;\n+    }\n+\n+    public void setDrop(float drop) {\n+        this.drop = drop;\n+    }\n+\n+    public ArrayList<Bitmap> getArrBms() {\n+        return arrBms;\n+    }\n+\n+    public void setArrBms(ArrayList<Bitmap> arrBms) {\n+        this.arrBms = arrBms;\n+        //scale bitmaps to size of Chopper\n+        for(int i = 0; i < arrBms.size(); i++){\n+            this.arrBms.set(i, Bitmap.createScaledBitmap(this.arrBms.get(i), this.width, this.height, true));\n+        }\n+    }\n+\n+    @Override\n+    public Bitmap getBm() {\n+        count++;\n+        if(this.count == this.vFlap){\n+            for(int i = 0; i <arrBms.size(); i++){\n+                if(i == arrBms.size()-1) {\n+                    this.idCurrentBitmap = 0;\n+                    break;\n+                } else if (this.idCurrentBitmap == i) {\n+                    idCurrentBitmap = i + 1;\n+                    break;\n+                }\n+            }\n+            count =0;\n+        }\n+        Matrix matrix = new Matrix();\n+        if(state == ChopperState.MOVINGDOWN) {\n+            if (this.y - this.moveTo < 70) {\n+//                matrix.postRotate((float) (-45 + (.1* this.moveTo-this.y)));\n+                matrix.postRotate(-25);\n+            } else {\n+                matrix.postRotate(-25);\n+            }\n+         } else if(state == ChopperState.MOVINGUP) {\n+            if (this.moveTo - this.y < 70) {\n+//                matrix.postRotate((float) -.1* this.y-this.moveTo);\n+                matrix.postRotate(25);\n+            } else {\n+                matrix.postRotate(25);\n+            }\n+        } else {\n+            matrix.postRotate(10);\n+        }\n+            return Bitmap.createBitmap(arrBms.get(idCurrentBitmap), 0, 0, arrBms.get(idCurrentBitmap).getWidth(), arrBms.get(idCurrentBitmap).getHeight(), matrix, true);\n+//        return this.arrBms.get(idCurrentBitmap);\n+    }\n+\n+    public int getMoveTo() {\n+        return this.moveTo;\n+    }\n+    public void setMoveTo(int yTarget) {\n+        this.moveTo = yTarget;\n+    }\n+\n+    public void setState(ChopperState newState) {\n+        this.state = newState;\n+    }\n+\n+    public ChopperState getState() {\n+       return this.state;\n+    }\n+}"
  },
  {
    "sha": "48b4788324f46ccec71a1372c628d56afde609d2",
    "filename": "app/src/main/java/com/example/tapordie/ChopperState.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/ChopperState.java",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/ChopperState.java",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/java/com/example/tapordie/ChopperState.java?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,5 @@\n+package com.example.tapordie;\n+\n+public enum ChopperState {\n+    MOVINGUP,MOVINGDOWN,NOTMOVING\n+}"
  },
  {
    "sha": "07757fb1dd5c88eb927511726b78a960ff526e9c",
    "filename": "app/src/main/java/com/example/tapordie/Constants.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/Constants.java",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/Constants.java",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/java/com/example/tapordie/Constants.java?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,6 @@\n+package com.example.tapordie;\r\n+\r\n+public class Constants {\r\n+    public static int SCREEN_WIDTH;\r\n+    public static int SCREEN_HEIGHT;\r\n+}\r"
  },
  {
    "sha": "ebd851af483834cc30eb159fefc84ffdaa861389",
    "filename": "app/src/main/java/com/example/tapordie/GameView.java",
    "status": "added",
    "additions": 148,
    "deletions": 0,
    "changes": 148,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/GameView.java",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/GameView.java",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/java/com/example/tapordie/GameView.java?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,148 @@\n+package com.example.tapordie;\r\n+\r\n+import android.content.Context;\r\n+import android.content.SharedPreferences;\r\n+import android.graphics.Bitmap;\r\n+import android.graphics.BitmapFactory;\r\n+import android.graphics.Canvas;\r\n+import android.os.Handler;\r\n+import android.util.AttributeSet;\r\n+import android.view.MotionEvent;\r\n+import android.view.View;\r\n+\r\n+import androidx.annotation.Nullable;\r\n+\r\n+import java.util.ArrayList;\r\n+\r\n+public class GameView extends View {\r\n+    private Chopper chopper;\r\n+    private Handler handler;\r\n+    private Runnable r;\r\n+    private  ArrayList<Pipe> arrPipes;\r\n+    private int sumpipe, distance;\r\n+    private int score, bestscore = 0;\r\n+    private boolean start;\r\n+    private Context context;\r\n+    public GameView (Context context, @Nullable AttributeSet attrs){\r\n+        super(context, attrs);\r\n+        this.context = context;\r\n+        SharedPreferences sp = context.getSharedPreferences(\"gamesetting\", context.MODE_PRIVATE);\r\n+        if(sp != null) {\r\n+            bestscore = sp.getInt(\"bestscore\", 0);\r\n+        }\r\n+        start = false;\r\n+        score = 0;\r\n+        initChopper();\r\n+        initPipe();\r\n+        handler = new Handler();\r\n+        r = new Runnable() {\r\n+            @Override\r\n+            public void run() {\r\n+                invalidate();\r\n+            }\r\n+        };\r\n+    }\r\n+\r\n+    private void initPipe() {\r\n+//        sumpipe = 6;\r\n+        sumpipe = 0;\r\n+        distance = 300 *Constants.SCREEN_HEIGHT/1920;\r\n+        arrPipes = new ArrayList<>();\r\n+        for (int i = 0; i < sumpipe; i++) {\r\n+            if(i < sumpipe/2) {\r\n+                this.arrPipes.add(new Pipe(Constants.SCREEN_WIDTH+i*((Constants.SCREEN_WIDTH+200*Constants.SCREEN_WIDTH/1080)/(sumpipe/2)),\r\n+                        0, 200 * Constants.SCREEN_WIDTH/1080, Constants.SCREEN_HEIGHT/2));\r\n+                this.arrPipes.get(this.arrPipes.size() -1).setBm(BitmapFactory.decodeResource(this.getResources(), R.drawable.pipe2));\r\n+                this.arrPipes.get(this.arrPipes.size()-1).randomY();\r\n+            } else {\r\n+                this.arrPipes.add(new Pipe(this.arrPipes.get(i-sumpipe/2).getX(), this.arrPipes.get(i-sumpipe/2).getY()\r\n+                + this.arrPipes.get(i-sumpipe/2).getHeight() + this.distance, 200 * Constants.SCREEN_WIDTH/1080, Constants.SCREEN_HEIGHT/2));\r\n+                this.arrPipes.get(this.arrPipes.size()-1).setBm(BitmapFactory.decodeResource(this.getResources(), R.drawable.pipe1));\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private void initChopper() {\r\n+        chopper = new Chopper();\r\n+        chopper.setWidth(100*Constants.SCREEN_WIDTH/1000);\r\n+        chopper.setHeight(100*Constants.SCREEN_HEIGHT/1980);\r\n+        chopper.setX(100*Constants.SCREEN_WIDTH/1080);\r\n+        chopper.setY(Constants.SCREEN_HEIGHT/2-chopper.getHeight()/2);\r\n+        ArrayList<Bitmap> arrBms = new ArrayList<>();\r\n+        arrBms.add(BitmapFactory.decodeResource(this.getResources(), R.drawable.copter1));\r\n+        arrBms.add(BitmapFactory.decodeResource(this.getResources(), R.drawable.copter2));\r\n+        chopper.setArrBms(arrBms);\r\n+    }\r\n+\r\n+    public void draw(Canvas canvas){\r\n+        super.draw(canvas);\r\n+        if(start) {\r\n+            chopper.draw(canvas);\r\n+            for(int i = 0; i < sumpipe; i++) {\r\n+                if(chopper.getRect().intersect(arrPipes.get(i).getRect()) || chopper.getY()-chopper.getHeight()<0 || chopper.getY() > Constants.SCREEN_HEIGHT){\r\n+                    Pipe.speed = 0;\r\n+                    MainActivity.txt_score_over.setText(MainActivity.txt_score.getText());\r\n+                    MainActivity.txt_best_score.setText(\"best: \"+ bestscore);\r\n+                    MainActivity.txt_score.setVisibility(INVISIBLE);\r\n+                    MainActivity.rl_game_over.setVisibility(VISIBLE);\r\n+\r\n+                }\r\n+                if(this.chopper.getX()+this.chopper.getWidth()>arrPipes.get(i).getX()+arrPipes.get(i).getWidth()/2\r\n+                        && this.chopper.getX()+this.chopper.getWidth()<=arrPipes.get(i).getX()+arrPipes.get(i).getWidth()/2 + Pipe.speed\r\n+                        && i<sumpipe/2){\r\n+                    score++;\r\n+                    if(score > bestscore) {\r\n+                        bestscore = score;\r\n+                        SharedPreferences sp = context.getSharedPreferences(\"gamesetting\", context.MODE_PRIVATE);\r\n+                        SharedPreferences.Editor editor = sp.edit();\r\n+                        editor.putInt(\"bestscore\", bestscore);\r\n+                        editor.apply();\r\n+                    }\r\n+                    MainActivity.txt_score.setText(\"\"+score);\r\n+                }\r\n+                //reset water pipes position if out of screen.\r\n+                if(this.arrPipes.get(i).getX() < -arrPipes.get(i).getWidth()){\r\n+                    this.arrPipes.get(i).setX(Constants.SCREEN_WIDTH);\r\n+                    if(i < sumpipe/2) {\r\n+                        arrPipes.get(i).randomY();\r\n+                    } else {\r\n+                        arrPipes.get(i).setY(this.arrPipes.get(i - sumpipe/2).getY()\r\n+                                +this.arrPipes.get(i-sumpipe/2).getHeight() + this.distance);\r\n+                    }\r\n+                }\r\n+                this.arrPipes.get(i).draw(canvas);\r\n+            }\r\n+        } else {\r\n+            if(chopper.getY()>Constants.SCREEN_HEIGHT/2){\r\n+                chopper.setDrop(-15*Constants.SCREEN_HEIGHT/1920);\r\n+            }\r\n+            chopper.draw(canvas);\r\n+        }\r\n+        // update every 0.01 seconds\r\n+        handler.postDelayed(r, 10);\r\n+\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean onTouchEvent(MotionEvent event) {\r\n+        if(event.getAction() == MotionEvent.ACTION_DOWN){\r\n+            chopper.setDrop(-3);\r\n+        }\r\n+        return true;\r\n+    }\r\n+\r\n+    public boolean isStart() {\r\n+        return start;\r\n+    }\r\n+\r\n+    public void setStart(boolean start) {\r\n+        this.start = start;\r\n+    }\r\n+\r\n+    public void reset() {\r\n+        MainActivity.txt_score.setText(\"0\");\r\n+        score = 0;\r\n+        initPipe();\r\n+        initChopper();\r\n+    }\r\n+}\r"
  },
  {
    "sha": "e577ff2ca2555d01f0e244674ed8896be56547b7",
    "filename": "app/src/main/java/com/example/tapordie/MainActivity.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/MainActivity.java",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/MainActivity.java",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/java/com/example/tapordie/MainActivity.java?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,53 @@\n+package com.example.tapordie;\r\n+\r\n+import androidx.appcompat.app.AppCompatActivity;\r\n+\r\n+import android.os.Bundle;\r\n+import android.util.DisplayMetrics;\r\n+import android.view.View;\r\n+import android.view.WindowManager;\r\n+import android.widget.Button;\r\n+import android.widget.RelativeLayout;\r\n+import android.widget.TextView;\r\n+\r\n+public class MainActivity extends AppCompatActivity {\r\n+    public static TextView txt_score, txt_best_score, txt_score_over;\r\n+    public static RelativeLayout rl_game_over;\r\n+    public static Button btn_start;\r\n+    private GameView gv;\r\n+    @Override\r\n+    protected void onCreate(Bundle savedInstanceState) {\r\n+        super.onCreate(savedInstanceState);\r\n+//        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n+        DisplayMetrics dm = new DisplayMetrics();\r\n+        this.getWindowManager().getDefaultDisplay().getMetrics(dm);\r\n+        Constants.SCREEN_WIDTH = dm.widthPixels;\r\n+        Constants.SCREEN_HEIGHT = dm.heightPixels;\r\n+        setContentView(R.layout.activity_main);\r\n+        txt_score = findViewById(R.id.txt_score);\r\n+        txt_best_score = findViewById(R.id.txt_best_score);\r\n+        txt_score_over = findViewById(R.id.txt_score_over);\r\n+        rl_game_over = findViewById(R.id.rl_game_over);\r\n+        btn_start = findViewById(R.id.btn_start);\r\n+        gv = findViewById(R.id.gv);\r\n+        btn_start.setOnClickListener(new View.OnClickListener() {\r\n+            @Override\r\n+            public void onClick(View v) {\r\n+                gv.setStart(true);\r\n+                txt_score.setVisibility(View.VISIBLE);\r\n+                btn_start.setVisibility(View.INVISIBLE);\r\n+            }\r\n+        });\r\n+        rl_game_over.setOnClickListener(new View.OnClickListener() {\r\n+            @Override\r\n+            public void onClick(View v) {\r\n+                gv.setStart(false);\r\n+                btn_start.setVisibility(View.VISIBLE);\r\n+                rl_game_over.setVisibility(View.INVISIBLE);\r\n+                gv.reset();\r\n+\r\n+            }\r\n+        });\r\n+\r\n+    }\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ef1cc7e3548e17071dcd194996c99ec405f88b7c",
    "filename": "app/src/main/java/com/example/tapordie/Pipe.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/Pipe.java",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/java/com/example/tapordie/Pipe.java",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/java/com/example/tapordie/Pipe.java?ref=68ed6546baba25b257b3d065e91720643404c466",
    "patch": "@@ -0,0 +1,29 @@\n+package com.example.tapordie;\r\n+\r\n+import android.graphics.Bitmap;\r\n+import android.graphics.Canvas;\r\n+\r\n+import java.util.Random;\r\n+\r\n+public class Pipe extends BaseObject {\r\n+    public static int speed;\r\n+    public Pipe(float x, float y, int width, int height) {\r\n+        super(x, y, width, height);\r\n+    }\r\n+    public void draw(Canvas canvas) {\r\n+        canvas.drawBitmap(this.bm, this.x, this.y, null);\r\n+        this.x -=speed;\r\n+        speed = 10*Constants.SCREEN_WIDTH/1080;\r\n+    }\r\n+\r\n+    public void randomY() {\r\n+        Random r = new Random();\r\n+        this.y = r.nextInt((0+this.height/4) + 1) - this.height/4;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void setBm(Bitmap bm) {\r\n+        // sets the bitmaps = to the width and height of the water pipe\r\n+        this.bm = Bitmap.createScaledBitmap(bm, width, height, true);\r\n+    }\r\n+}\r"
  },
  {
    "sha": "819d23144a48e550b851406d80f25e10e8863191",
    "filename": "app/src/main/res/drawable-v24/background.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/res/drawable-v24/background.png",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/res/drawable-v24/background.png",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/res/drawable-v24/background.png?ref=68ed6546baba25b257b3d065e91720643404c466"
  },
  {
    "sha": "b20621df17fa77fcc389fc461f094bbcb4e475a4",
    "filename": "app/src/main/res/drawable-v24/bird1.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/res/drawable-v24/bird1.png",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/res/drawable-v24/bird1.png",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/res/drawable-v24/bird1.png?ref=68ed6546baba25b257b3d065e91720643404c466"
  },
  {
    "sha": "249442db59adb99d4cf88ba5a50d70536df2e7b7",
    "filename": "app/src/main/res/drawable-v24/bird2.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/res/drawable-v24/bird2.png",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/res/drawable-v24/bird2.png",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/res/drawable-v24/bird2.png?ref=68ed6546baba25b257b3d065e91720643404c466"
  },
  {
    "sha": "2cc212c5dbae8eaade01e74242e860e098805b5e",
    "filename": "app/src/main/res/drawable-v24/copter1.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/res/drawable-v24/copter1.png",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/res/drawable-v24/copter1.png",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/res/drawable-v24/copter1.png?ref=68ed6546baba25b257b3d065e91720643404c466"
  },
  {
    "sha": "349fe93078f748ace47f6519d2ea489c670aaa01",
    "filename": "app/src/main/res/drawable-v24/copter2.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/en3m3/Team08/blob/68ed6546baba25b257b3d065e91720643404c466/app/src/main/res/drawable-v24/copter2.png",
    "raw_url": "https://github.com/en3m3/Team08/raw/68ed6546baba25b257b3d065e91720643404c466/app/src/main/res/drawable-v24/copter2.png",
    "contents_url": "https://api.github.com/repos/en3m3/Team08/contents/app/src/main/res/drawable-v24/copter2.png?ref=68ed6546baba25b257b3d065e91720643404c466"
  }
]
