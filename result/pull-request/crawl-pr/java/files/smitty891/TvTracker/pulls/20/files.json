[
  {
    "sha": "c031b1f3a135f184b7bd35eab2b8148660996e09",
    "filename": "src/main/java/com/tvtracker/enterprise/TvTrackerController.java",
    "status": "modified",
    "additions": 13,
    "deletions": 6,
    "changes": 19,
    "blob_url": "https://github.com/smitty891/TvTracker/blob/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/TvTrackerController.java",
    "raw_url": "https://github.com/smitty891/TvTracker/raw/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/TvTrackerController.java",
    "contents_url": "https://api.github.com/repos/smitty891/TvTracker/contents/src/main/java/com/tvtracker/enterprise/TvTrackerController.java?ref=a4da39dc7818aac069f3b16189b25997adc9c364",
    "patch": "@@ -38,7 +38,6 @@\n     @RequestMapping(\"/\")\n     public String index(){\n         return \"start\";\n-\n     }\n \n     /**\n@@ -87,7 +86,8 @@ public ResponseEntity signUpUser(@RequestBody UserAccount userAccount) {\n      * @return a valid user token for session authentication\n      */\n     @GetMapping(\"/authenticate\")\n-    public ResponseEntity authenticateUser(@RequestParam(value=\"username\", required=true) String username, @RequestParam(value=\"password\", required=true) String password) {\n+    public ResponseEntity authenticateUser(@RequestParam(value=\"username\", required=true) String username,\n+                                           @RequestParam(value=\"password\", required=true) String password) {\n         HttpHeaders headers = new HttpHeaders();\n         headers.setContentType(MediaType.APPLICATION_JSON);\n \n@@ -116,7 +116,8 @@ public ResponseEntity authenticateUser(@RequestParam(value=\"username\", required=\n      * @return List user's media entries\n      */\n     @GetMapping(\"/getMediaEntries\")\n-    public ResponseEntity getUsersMediaEntries(@RequestParam(value=\"username\", required=true) String username, @RequestParam(value=\"token\", required=true) String token) {\n+    public ResponseEntity getUsersMediaEntries(@RequestParam(value=\"username\", required=true) String username,\n+                                               @RequestParam(value=\"token\", required=true) String token) {\n         HttpHeaders headers = new HttpHeaders();\n         headers.setContentType(MediaType.APPLICATION_JSON);\n \n@@ -146,7 +147,9 @@ public ResponseEntity getUsersMediaEntries(@RequestParam(value=\"username\", requi\n      * @return HttpStatus\n      */\n     @PutMapping(value=\"/editMediaEntry\", consumes=\"application/json\", produces=\"application/json\")\n-    public ResponseEntity editMediaEntry(@RequestBody MediaEntry mediaEntry, @RequestParam(value=\"username\", required=true) String username, @RequestParam(value=\"token\", required=true) String token) {\n+    public ResponseEntity editMediaEntry(@RequestBody MediaEntry mediaEntry,\n+                                         @RequestParam(value=\"username\", required=true) String username,\n+                                         @RequestParam(value=\"token\", required=true) String token) {\n         HttpHeaders headers = new HttpHeaders();\n         headers.setContentType(MediaType.APPLICATION_JSON);\n \n@@ -181,7 +184,9 @@ public ResponseEntity editMediaEntry(@RequestBody MediaEntry mediaEntry, @Reques\n      * @return HttpStatus\n      */\n     @DeleteMapping(\"/removeMediaEntry\")\n-    public ResponseEntity removeMediaEntry(@RequestParam(value=\"entryId\", required=true) int entryId, @RequestParam(value=\"username\", required=true) String username, @RequestParam(value=\"token\", required=true) String token) {\n+    public ResponseEntity removeMediaEntry(@RequestParam(value=\"entryId\", required=true) int entryId,\n+                                           @RequestParam(value=\"username\", required=true) String username,\n+                                           @RequestParam(value=\"token\", required=true) String token) {\n         HttpHeaders headers = new HttpHeaders();\n         headers.setContentType(MediaType.APPLICATION_JSON);\n \n@@ -216,7 +221,9 @@ public ResponseEntity removeMediaEntry(@RequestParam(value=\"entryId\", required=t\n      * @return HttpStatus\n      */\n     @PostMapping(value=\"/addMediaEntry\", consumes=\"application/json\", produces=\"application/json\")\n-    public ResponseEntity addMediaEntry(@RequestBody MediaEntry mediaEntry, @RequestParam(value=\"username\", required=true) String username, @RequestParam(value=\"token\", required=true) String token) {\n+    public ResponseEntity addMediaEntry(@RequestBody MediaEntry mediaEntry,\n+                                        @RequestParam(value=\"username\", required=true) String username,\n+                                        @RequestParam(value=\"token\", required=true) String token) {\n         HttpHeaders headers = new HttpHeaders();\n         headers.setContentType(MediaType.APPLICATION_JSON);\n "
  },
  {
    "sha": "9d199acd38552643c86ff9b5bd016b99a32f3ae7",
    "filename": "src/main/java/com/tvtracker/enterprise/dao/IMediaEntryDAO.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/smitty891/TvTracker/blob/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/dao/IMediaEntryDAO.java",
    "raw_url": "https://github.com/smitty891/TvTracker/raw/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/dao/IMediaEntryDAO.java",
    "contents_url": "https://api.github.com/repos/smitty891/TvTracker/contents/src/main/java/com/tvtracker/enterprise/dao/IMediaEntryDAO.java?ref=a4da39dc7818aac069f3b16189b25997adc9c364",
    "patch": "@@ -36,7 +36,7 @@\n          * @param entryId integer uniquely identifying a MediaEntry record\n          * @return MediaEntry object representation of corresponding database record\n          */\n-        MediaEntry fetch(int entryId) throws Exception;\n+        MediaEntry fetchByID(int entryId) throws Exception;\n \n         /**\n          * Method for deleting a single MediaEntry record in the database"
  },
  {
    "sha": "fd5f707188cb440d1243f97e24d156954efd896f",
    "filename": "src/main/java/com/tvtracker/enterprise/dao/MediaEntryDAOStub.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/smitty891/TvTracker/blob/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/dao/MediaEntryDAOStub.java",
    "raw_url": "https://github.com/smitty891/TvTracker/raw/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/dao/MediaEntryDAOStub.java",
    "contents_url": "https://api.github.com/repos/smitty891/TvTracker/contents/src/main/java/com/tvtracker/enterprise/dao/MediaEntryDAOStub.java?ref=a4da39dc7818aac069f3b16189b25997adc9c364",
    "patch": "@@ -9,8 +9,8 @@\n \n @Component\n public class MediaEntryDAOStub implements  IMediaEntryDAO {\n-    HashMap<Integer, MediaEntry> entriesByID = new HashMap<Integer, MediaEntry>();\n-    HashMap<String, HashMap<Integer, MediaEntry>> entriesByUsername = new HashMap<String, HashMap<Integer, MediaEntry>>();\n+    HashMap<Integer, MediaEntry> entriesByID = new HashMap<>();\n+    HashMap<String, HashMap<Integer, MediaEntry>> entriesByUsername = new HashMap<>();\n \n     /**\n      * Method for creating a new MediaEntry record in the database\n@@ -41,7 +41,7 @@ public MediaEntry save(MediaEntry mediaEntry) throws Exception {\n      * @return List of MediaEntry objects belonging to the given user\n      */\n     @Override\n-    public List<MediaEntry> fetchByUsername(String username) throws Exception {\n+    public List<MediaEntry> fetchByUsername(String username) {\n         return new ArrayList(entriesByUsername.get(username).values());\n     }\n \n@@ -52,7 +52,7 @@ public MediaEntry save(MediaEntry mediaEntry) throws Exception {\n      * @return MediaEntry object representation of corresponding database record\n      */\n     @Override\n-    public MediaEntry fetch(int entryId) throws Exception {\n+    public MediaEntry fetchByID(int entryId) {\n         return entriesByID.get(entryId);\n     }\n \n@@ -62,7 +62,7 @@ public MediaEntry fetch(int entryId) throws Exception {\n      * @param entryId integer uniquely identifying a MediaEntry record\n      */\n     @Override\n-    public void delete(int entryId) throws Exception {\n+    public void delete(int entryId) {\n         MediaEntry entry = entriesByID.remove(entryId);\n         if(entry != null) {\n             entriesByUsername.get(entry.getUsername()).remove(entryId);"
  },
  {
    "sha": "d34b8eda6b019cb4341e790cf96551012ee7037e",
    "filename": "src/main/java/com/tvtracker/enterprise/dto/UserAccount.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/smitty891/TvTracker/blob/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/dto/UserAccount.java",
    "raw_url": "https://github.com/smitty891/TvTracker/raw/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/dto/UserAccount.java",
    "contents_url": "https://api.github.com/repos/smitty891/TvTracker/contents/src/main/java/com/tvtracker/enterprise/dto/UserAccount.java?ref=a4da39dc7818aac069f3b16189b25997adc9c364",
    "patch": "@@ -10,16 +10,19 @@\n \n public class UserAccount {\n     /**\n-     * UserAccount's unique identifier\n+     * UserAccount's unique identifiers\n      */\n     private int userId;\n     private String username;\n     private String password;\n     private String email;\n+    private Timestamp birthDate;\n+\n     /**\n      * Random generated character string used for authentication\n      */\n     private String token;\n+\n     /**\n      * <p>Holds the time of the user's last successful login.</p>\n      * <p>Use this to check whether a token needs to be updated.</p>"
  },
  {
    "sha": "643ff0f70fd96ce70efd71ef3689a0aa261f32bf",
    "filename": "src/main/java/com/tvtracker/enterprise/service/MediaEntryServiceStub.java",
    "status": "modified",
    "additions": 2,
    "deletions": 7,
    "changes": 9,
    "blob_url": "https://github.com/smitty891/TvTracker/blob/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/service/MediaEntryServiceStub.java",
    "raw_url": "https://github.com/smitty891/TvTracker/raw/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/service/MediaEntryServiceStub.java",
    "contents_url": "https://api.github.com/repos/smitty891/TvTracker/contents/src/main/java/com/tvtracker/enterprise/service/MediaEntryServiceStub.java?ref=a4da39dc7818aac069f3b16189b25997adc9c364",
    "patch": "@@ -21,12 +21,10 @@\n      */\n     @Override\n     public boolean createMediaEntry(MediaEntry mediaEntry) throws Exception {\n-        if(mediaEntry == null){\n+        if(mediaEntry == null) {\n             return false;\n         }\n-\n         mediaEntryDAO.save(mediaEntry);\n-\n         return true;\n     }\n \n@@ -38,12 +36,10 @@ public boolean createMediaEntry(MediaEntry mediaEntry) throws Exception {\n      */\n     @Override\n     public boolean updateMediaEntry(MediaEntry mediaEntry) throws Exception {\n-        if(mediaEntry == null){\n+        if(mediaEntry == null) {\n             return false;\n         }\n-\n         mediaEntryDAO.update(mediaEntry);\n-\n         return true;\n     }\n \n@@ -56,7 +52,6 @@ public boolean updateMediaEntry(MediaEntry mediaEntry) throws Exception {\n     @Override\n     public boolean deleteMediaEntry(int entryId) throws Exception {\n         mediaEntryDAO.delete(entryId);\n-\n         return true;\n     }\n "
  },
  {
    "sha": "5d50658161639c8cc6c2488970dcdf3c33691582",
    "filename": "src/main/java/com/tvtracker/enterprise/service/UserAccountServiceStub.java",
    "status": "modified",
    "additions": 9,
    "deletions": 5,
    "changes": 14,
    "blob_url": "https://github.com/smitty891/TvTracker/blob/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/service/UserAccountServiceStub.java",
    "raw_url": "https://github.com/smitty891/TvTracker/raw/a4da39dc7818aac069f3b16189b25997adc9c364/src/main/java/com/tvtracker/enterprise/service/UserAccountServiceStub.java",
    "contents_url": "https://api.github.com/repos/smitty891/TvTracker/contents/src/main/java/com/tvtracker/enterprise/service/UserAccountServiceStub.java?ref=a4da39dc7818aac069f3b16189b25997adc9c364",
    "patch": "@@ -31,7 +31,7 @@\n     @Override\n     public UserAccount createUserAccount(UserAccount userAccount) throws Exception {\n         // return null if user name isn't unique;\n-        if(userAccountDAO.existsBy(userAccount.getUsername())){\n+        if(userAccountDAO.existsBy(userAccount.getUsername())) {\n             return null;\n         }\n \n@@ -56,8 +56,9 @@ public UserAccount createUserAccount(UserAccount userAccount) throws Exception {\n      */\n     @Override\n     public UserAccount fetchUserAccount(String username) throws Exception {\n-        if(username == null)\n+        if(username == null) {\n             return null;\n+        }\n \n         return userAccountDAO.fetch(username);\n     }\n@@ -73,11 +74,13 @@ public UserAccount fetchUserAccount(String username) throws Exception {\n     public boolean isTokenValid(String token, String username) throws Exception {\n         UserAccount userAccount = fetchUserAccount(username);\n \n-        if(userAccount == null || userAccount.getToken() == null || userAccount.getLastLogin() == null)\n+        if(userAccount == null || userAccount.getToken() == null || userAccount.getLastLogin() == null) {\n             return false;\n+        }\n \n-        if(!userAccount.getToken().equals(token))\n+        if(!userAccount.getToken().equals(token)) {\n             return false;\n+        }\n \n         // Verify user's token was created within the last hour\n         Instant lastLogin = userAccount.getLastLogin().toInstant();\n@@ -95,8 +98,9 @@ public boolean isTokenValid(String token, String username) throws Exception {\n      */\n     @Override\n     public String updateUserToken(UserAccount userAccount) throws Exception {\n-        if(userAccount == null)\n+        if(userAccount == null) {\n             return null;\n+        }\n \n         String token = generateNewToken();\n         userAccount.setToken(token);"
  }
]
