[
  {
    "sha": "8e99c1ed52707d2d7f178904b40e6247135279fd",
    "filename": ".github/workflows/Build-Without-Release.yml",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/.github/workflows/Build-Without-Release.yml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/.github/workflows/Build-Without-Release.yml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/workflows/Build-Without-Release.yml?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -0,0 +1,68 @@\n+name: Geyser Build No Release\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      name:\n+        description: 'Build without Release'\n+        required: true\n+        default: 'Build'\n+      home:\n+        description: 'location'\n+        required: false\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+    - uses: actions/cache@v2\n+      with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+    - name: Set up JDK 1.8\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 1.8\n+        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml\n+        settings-path: ${{ github.workspace }} # location for the settings.xml file\n+    - name: submodules-init\n+      uses: snickerbockers/submodules-init@v4\n+\n+    - name: Build with Maven\n+      run: mvn -B -U package -T 2C\n+\n+    - name: Archive artifacts (Geyser Standalone)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+          name: Geyser Standalone\n+          path: bootstrap/standalone/target/Geyser.jar\n+    - name: Archive artifacts (Geyser Spigot)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+          name: Geyser Spigot\n+          path: bootstrap/spigot/target/Geyser-Spigot.jar\n+    - name: Archive artifacts (Geyser BungeeCord)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser BungeeCord\n+        path: bootstrap/bungeecord/target/Geyser-BungeeCord.jar\n+    - name: Archive artifacts (Geyser Sponge)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser Sponge\n+        path: bootstrap/sponge/target/Geyser-Sponge.jar\n+    - name: Archive artifacts (Geyser Velocity)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser Velocity\n+        path: bootstrap/velocity/target/Geyser-Velocity.jar"
  },
  {
    "sha": "c93e5f3dd1daf8e38d749f54b36caa9c50a52954",
    "filename": ".github/workflows/connector-common.yml",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/.github/workflows/connector-common.yml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/.github/workflows/connector-common.yml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/workflows/connector-common.yml?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -0,0 +1,61 @@\n+# This workflow will build a Java project with Maven\n+# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven\n+\n+name: connector-common\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      name:\n+        description: 'Build Connector-common with Release'\n+        required: true\n+        default: 'Build con com'\n+      home:\n+        description: 'locationf'\n+        required: false\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+    - uses: actions/labeler@v2\n+      with:\n+        repo-token: ${{ secrets.GITHUB_TOKEN }}\n+    - uses: actions/cache@v2\n+      with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+    - name: Generate settings.xml for Maven Deploy\n+      # You may pin to the exact commit or the version.\n+      # uses: whelk-io/maven-settings-xml-action@f2ce02adb757b1118ab14604d2e8bdaafdb9bf92\n+      uses: whelk-io/maven-settings-xml-action@v14\n+      with:\n+        repositories: '[{ \"id\": \"github\", \"name\": \"GitHub hellohi3654 Apache Maven Packages\", \"url\": \"https://maven.pkg.github.com/hellohi3654/Geyser\", \"releases\": { \"enabled\": \"false\" }, \"snapshots\": { \"enabled\": \"true\" } }]'\n+        servers: '[{ \"id\": \"github\", \"username\": \"hellohi3654\", \"password\": \"${{ secrets.PKEY }}\" }]'\n+        profiles: '[{ \"id\": \"github\" }]'\n+    - name: Set up JDK 1.8\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 1.8\n+        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml\n+        settings-path: ${{ github.workspace }} # location for the settings.xml file\n+    - name: submodules-init\n+      uses: snickerbockers/submodules-init@v4\n+\n+    - name: purge packages\n+      # You may pin to the exact commit or the version.\n+      # uses: MobileheadHolding/github-action-purge-packages@16e2ecc0100c7edfd52652eae2bea7c075666150\n+      uses: MobileheadHolding/github-action-purge-packages@v2.0.1\n+      with:\n+        # number of days the package has to be old to be purged\n+        days-old: 1\n+        # string to be contained in the package name.\n+        package-name-query: 1.2\n+\n+    - name: Build with Maven Deploy\n+      run: mvn javadoc:jar source:jar deploy -DskipTests -T 2C"
  },
  {
    "sha": "602a6244388d2a60da3ce91913b9b6c3240dbbcf",
    "filename": ".github/workflows/geyser-build-branch.yml",
    "status": "added",
    "additions": 135,
    "deletions": 0,
    "changes": 135,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/.github/workflows/geyser-build-branch.yml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/.github/workflows/geyser-build-branch.yml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/workflows/geyser-build-branch.yml?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -0,0 +1,135 @@\n+name: Geyser Build Branch\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      name:\n+        description: 'Build with Release'\n+        required: true\n+        default: 'Build'\n+      home:\n+        description: 'location'\n+        required: false\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+    - uses: actions/cache@v2\n+      with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+    - name: Set up JDK 1.8\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 1.8\n+        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml\n+        settings-path: ${{ github.workspace }} # location for the settings.xml file\n+    - name: submodules-init\n+      uses: snickerbockers/submodules-init@v4\n+\n+    - name: Build with Maven\n+      run: mvn -B -U package -T 2C\n+\n+    - name: Archive artifacts (Geyser Standalone)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+          name: Geyser Standalone\n+          path: bootstrap/standalone/target/Geyser.jar\n+    - name: Archive artifacts (Geyser Spigot)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+          name: Geyser Spigot\n+          path: bootstrap/spigot/target/Geyser-Spigot.jar\n+    - name: Archive artifacts (Geyser BungeeCord)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser BungeeCord\n+        path: bootstrap/bungeecord/target/Geyser-BungeeCord.jar\n+    - name: Archive artifacts (Geyser Sponge)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser Sponge\n+        path: bootstrap/sponge/target/Geyser-Sponge.jar\n+    - name: Archive artifacts (Geyser Velocity)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser Velocity\n+        path: bootstrap/velocity/target/Geyser-Velocity.jar\n+    \n+    - name: Create Release\n+      id: create_release\n+      uses: actions/create-release@v1.1.4\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        tag_name: Serverinventory+floodgate2.0_v${{ github.run_number }}\n+        release_name: Serverinventory+floodgate2.0_v${{ github.run_number }}\n+        body: \"This is a test branch expect bugs and glitches. Please use Bleeding releases for a more stable experience\"\n+        draft: false\n+        prerelease: false\n+    \n+    - name: Upload Release Asset 1\n+      id: upload-release-asset-1\n+      uses: actions/upload-release-asset@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps \n+        asset_path: bootstrap/standalone/target/Geyser.jar\n+        asset_name: Geyser.jar\n+        asset_content_type: application/zip\n+\n+    - name: Upload Release Asset 2\n+      id: upload-release-asset-2\n+      uses: actions/upload-release-asset@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps \n+        asset_path: bootstrap/spigot/target/Geyser-Spigot.jar\n+        asset_name: Geyser-Spigot.jar\n+        asset_content_type: application/zip\n+        \n+    - name: Upload Release Asset 3\n+      id: upload-release-asset-3\n+      uses: actions/upload-release-asset@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps \n+        asset_path: bootstrap/bungeecord/target/Geyser-BungeeCord.jar\n+        asset_name: Geyser-BungeeCord.jar\n+        asset_content_type: application/zip\n+    \n+    - name: Upload Release Asset 4\n+      id: upload-release-asset-4\n+      uses: actions/upload-release-asset@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps \n+        asset_path: bootstrap/sponge/target/Geyser-Sponge.jar\n+        asset_name: Geyser-Sponge.jar\n+        asset_content_type: application/zip\n+    \n+    - name: Upload Release Asset 5\n+      id: upload-release-asset-5\n+      uses: actions/upload-release-asset@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps \n+        asset_path: bootstrap/velocity/target/Geyser-Velocity.jar\n+        asset_name: Geyser-Velocity.jar\n+        asset_content_type: application/zip"
  },
  {
    "sha": "e80347831c9721f9e35afeb64f2159a43b6df10c",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/.gitignore",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/.gitignore",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.gitignore?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -241,6 +241,10 @@ config.yml\n logs/\n public-key.pem\n locales/\n+\n+### VS Code ###\n+.vscode\n+# Note: Manually edited to change cache/ to /cache/\n /cache/\n /packs/\n /dump.json"
  },
  {
    "sha": "3b5befdcdf77c5229e657d4b90792c80528de98d",
    "filename": ".gitmodules",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/.gitmodules",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/.gitmodules",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.gitmodules?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -1,6 +1,6 @@\n-[submodule \"connector/src/main/resources/mappings\"]\n-\tpath = connector/src/main/resources/mappings\n-\turl = https://github.com/GeyserMC/mappings.git\n [submodule \"connector/src/main/resources/languages\"]\n \tpath = connector/src/main/resources/languages\n \turl = https://github.com/GeyserMC/languages.git\n+[submodule \"connector/src/main/resources/mappings\"]\n+\tpath = connector/src/main/resources/mappings\n+\turl = https://github.com/Hellohi3654/mappings.git"
  },
  {
    "sha": "527471bae77c8031980f3d60a9d218e142deca86",
    "filename": "CONTRIBUTING.md",
    "status": "modified",
    "additions": 30,
    "deletions": 23,
    "changes": 53,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/CONTRIBUTING.md",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/CONTRIBUTING.md",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/CONTRIBUTING.md?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -11,29 +11,36 @@ Thank for for considering a contribution! Generally, Geyser welcomes PRs from ev\n We have some general style guides that should be applied throughout the code:\n \n ```java\n-\n-private static final AIR_ITEM = 0; // Static item names should be capitalized\n-\n-public Int2IntMap items = new Int2IntOpenHashMap(); // Use the interface as the class type but initialize with the implementation.\n-\n-public int nameWithMultipleWords = 0;\n-\n-/**\n-* Javadoc comment to explain what a function does.\n-*/\n-public void applyStuff() {\n-\tif (condition) {\n-\t\t// Do stuff.\n-\t} else if (anotherCondition) {\n-\t\t// Do something else.\n-\t}\n-\t\n-\tswitch (value) {\n-\t\tcase 0:\n-\t\t\tbreak;\n-\t\tcase 1:\n-\t\t\tbreak:\n-\t}\n+public class LongClassName {\n+    private static final int AIR_ITEM = 0; // Static item names should be capitalized\n+\n+    public Int2IntMap items = new Int2IntOpenHashMap(); // Use the interface as the class type but initialize with the implementation.\n+\n+    public int nameWithMultipleWords = 0;\n+\n+    /**\n+    * Javadoc comment to explain what a function does.\n+    */\n+    @RandomAnnotation(stuff = true, moreStuff = \"might exist\")\n+    public void applyStuff() {\n+        Variable variable = new Variable();\n+        Variable otherVariable = new Variable();\n+\n+        if (condition) {\n+\t        // Do stuff.\n+        } else if (anotherCondition) {\n+\t    \t// Do something else.\n+        }\n+\n+        switch (value) {\n+            case 0:\n+                stuff();\n+                break;\n+            case 1:\n+                differentStuff();\n+                break;\n+        }\n+    }\n }\n ```\n "
  },
  {
    "sha": "57bb3344ce9fee14b66ab4e5fde2fde2f05ff248",
    "filename": "README.md",
    "status": "modified",
    "additions": 39,
    "deletions": 2,
    "changes": 41,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/README.md",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/README.md",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/README.md?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -1,3 +1,35 @@\n+## Warning Do not use master branch it is not tested and is very outdated\n+## Instead use bundabrg-bleeding Branch VVV\n+- (https://github.com/Hellohi3654/Geyser/tree/bundabrg-bleeding)\n+\n+![Geyser Build Branch](https://github.com/Hellohi3654/Geyser/workflows/Geyser%20Build%20Branch/badge.svg)\n+\n+## I have a server that uses the bundabrg-bleeding branch\n+\n+- Join the discord if you have any questions or create a issue (https://github.com/Hellohi3654/Geyser/issues)\n+- https://discord.gg/92xQSQnKzG\n+- IP and Port for both Java and Bedrock Players VVV\n+\n+- Bedrock:\n+- IP: play.voltiac.xyz\n+- Port: 19132\n+\n+- Java:\n+- Server Address: play.voltiac.xyz\n+\n+## The bundabrg-bleeding branch is a combination of many different geyser forks / PRs\n+- Don't message geyser devs if you find a problem\n+- Create a issue on my fork I will try and fix it (https://github.com/Hellohi3654/Geyser/issues)\n+- You can either compile this branch yourself or download the lastest release (https://github.com/Hellohi3654/Geyser/releases)\n+- Here's a list of features this branch includes:\n+* [Allow for crawling and moving in one-block spaces where possible](https://github.com/GeyserMC/Geyser/pull/1814)\n+* [Smooth Pistons](https://github.com/GeyserMC/Geyser/pull/1542)\n+* [Replace Spaces in Usernames with Underscores](https://github.com/GeyserMC/Geyser/pull/264)\n+* [Improve Playerlist](https://github.com/GeyserMC/Geyser/pull/711)\n+* [Native Geyser Extension Support](https://github.com/GeyserMC/Geyser/pull/742)\n+* [Improved Login Process](https://github.com/GeyserMC/Geyser/pull/1184)\n+* [Remove 'geyser' from commands fix](https://github.com/GeyserMC/Geyser/pull/1266)\n+\n <img src=\"https://geysermc.org/img/geyser-1760-860.png\" alt=\"Geyser\" width=\"600\"/>\n \n [![forthebadge made-with-java](http://ForTheBadge.com/images/badges/made-with-java.svg)](https://java.com/)\n@@ -37,7 +69,7 @@ Take a look [here](https://github.com/GeyserMC/Geyser/wiki#Setup) for how to set\n - Lecterns\n - Near-perfect movement (to the point where anticheat on large servers is unlikely to ban you)\n - Resource pack conversion/CustomModelData\n-- Some Entity Flags\n+- Some Entity Flags (We don't talk about the squids)\n - The Following Inventories \n   - Enchantment Table (as a proper GUI)\n   - Beacon\n@@ -55,12 +87,13 @@ The following things can't be fixed because of Bedrock limitations. They might b\n - Custom heads in inventories\n - Clickable links in chat\n - Glowing effect\n+- Custom armor stand poses\n \n ## Compiling\n 1. Clone the repo to your computer\n 2. [Install Maven](https://maven.apache.org/install.html)\n 3. Navigate to the Geyser root directory and run `git submodule update --init --recursive`. This downloads all the needed submodules for Geyser and is a crucial step in this process.\n-4. Run `mvn clean install` and locate to the `target` folder.\n+4. Run `mvn -U clean install` and locate to the `target` folder.\n \n ## Contributing\n Any contributions are appreciated. Please feel free to reach out to us on [Discord](http://discord.geysermc.org/) if\n@@ -71,3 +104,7 @@ you're interested in helping out with Geyser.\n - [Steveice10's Java Protocol Library](https://github.com/Steveice10/MCProtocolLib)\n - [TerminalConsoleAppender](https://github.com/Minecrell/TerminalConsoleAppender)\n - [Simple Logging Facade for Java (slf4j)](https://github.com/qos-ch/slf4j)\n+\n+## Update submodules VVV\n+\n+Do `git submodule update` to update submodules in local branch to update submodules"
  },
  {
    "sha": "a62faa33a2ceda602d447539b975ac27316b6dec",
    "filename": "bootstrap/bungeecord/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/bungeecord/pom.xml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/bungeecord/pom.xml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/bungeecord/pom.xml?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -6,15 +6,15 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>bootstrap-parent</artifactId>\n-        <version>1.2.0-SNAPSHOT</version>\n+        <version>1.2.1-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-bungeecord</artifactId>\n \n     <dependencies>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>connector</artifactId>\n-            <version>1.2.0-SNAPSHOT</version>\n+            <version>1.2.1-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>"
  },
  {
    "sha": "dc29b4bde46dc693c630661efa393e3a9aac6226",
    "filename": "bootstrap/bungeecord/src/main/java/org/geysermc/platform/bungeecord/GeyserBungeeConfiguration.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/bungeecord/src/main/java/org/geysermc/platform/bungeecord/GeyserBungeeConfiguration.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/bungeecord/src/main/java/org/geysermc/platform/bungeecord/GeyserBungeeConfiguration.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/bungeecord/src/main/java/org/geysermc/platform/bungeecord/GeyserBungeeConfiguration.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -41,7 +41,7 @@\n     private Path floodgateKeyPath;\n \n     public void loadFloodgate(GeyserBungeePlugin plugin) {\n-        Plugin floodgate = plugin.getProxy().getPluginManager().getPlugin(\"floodgate-bungee\");\n+        Plugin floodgate = plugin.getProxy().getPluginManager().getPlugin(\"floodgate\");\n         Path geyserDataFolder = plugin.getDataFolder().toPath();\n         Path floodgateDataFolder = floodgate != null ? floodgate.getDataFolder().toPath() : null;\n "
  },
  {
    "sha": "51b817660fc2e609c08e01ed7cb61a3ee4333422",
    "filename": "bootstrap/bungeecord/src/main/java/org/geysermc/platform/bungeecord/GeyserBungeePlugin.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/bungeecord/src/main/java/org/geysermc/platform/bungeecord/GeyserBungeePlugin.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/bungeecord/src/main/java/org/geysermc/platform/bungeecord/GeyserBungeePlugin.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/bungeecord/src/main/java/org/geysermc/platform/bungeecord/GeyserBungeePlugin.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -95,10 +95,10 @@ public void onEnable() {\n         this.geyserLogger = new GeyserBungeeLogger(getLogger(), geyserConfig.isDebugMode());\n         GeyserConfiguration.checkGeyserConfiguration(geyserConfig, geyserLogger);\n \n-        if (geyserConfig.getRemote().getAuthType().equals(\"floodgate\") && getProxy().getPluginManager().getPlugin(\"floodgate-bungee\") == null) {\n+        if (geyserConfig.getRemote().getAuthType().equals(\"floodgate\") && getProxy().getPluginManager().getPlugin(\"floodgate\") == null) {\n             geyserLogger.severe(LanguageUtils.getLocaleStringLog(\"geyser.bootstrap.floodgate.not_installed\") + \" \" + LanguageUtils.getLocaleStringLog(\"geyser.bootstrap.floodgate.disabling\"));\n             return;\n-        } else if (geyserConfig.isAutoconfiguredRemote() && getProxy().getPluginManager().getPlugin(\"floodgate-bungee\") != null) {\n+        } else if (geyserConfig.isAutoconfiguredRemote() && getProxy().getPluginManager().getPlugin(\"floodgate\") != null) {\n             // Floodgate installed means that the user wants Floodgate authentication\n             geyserLogger.debug(\"Auto-setting to Floodgate authentication.\");\n             geyserConfig.getRemote().setAuthType(\"floodgate\");"
  },
  {
    "sha": "49a32bdad02ce1ebba550ffcf0561a28d00f0b25",
    "filename": "bootstrap/pom.xml",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/pom.xml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/pom.xml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/pom.xml?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -6,7 +6,7 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>geyser-parent</artifactId>\n-        <version>1.2.0-SNAPSHOT</version>\n+        <version>1.2.1-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-parent</artifactId>\n     <packaging>pom</packaging>\n@@ -22,7 +22,7 @@\n         </repository>\n         <repository>\n             <id>sponge-repo</id>\n-            <url>https://repo.spongepowered.org/maven</url>\n+            <url>https://repo.spongepowered.org/repository/maven-public/</url>\n         </repository>\n         <repository>\n             <id>bungeecord-repo</id>\n@@ -40,4 +40,4 @@\n         <module>standalone</module>\n         <module>velocity</module>\n     </modules>\n-</project>\n\\ No newline at end of file\n+</project>"
  },
  {
    "sha": "009fdac9c723f82bbd1eedeab7621a60f77ecae2",
    "filename": "bootstrap/spigot/pom.xml",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/pom.xml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/pom.xml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/pom.xml?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -6,15 +6,15 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>bootstrap-parent</artifactId>\n-        <version>1.2.0-SNAPSHOT</version>\n+        <version>1.2.1-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-spigot</artifactId>\n \n     <dependencies>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>connector</artifactId>\n-            <version>1.2.0-SNAPSHOT</version>\n+            <version>1.2.1-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>\n@@ -30,9 +30,9 @@\n             <scope>provided</scope>\n         </dependency>\n         <dependency>\n-            <groupId>org.geysermc.adapters</groupId>\n+            <groupId>org.geysermc.geyser.adapters</groupId>\n             <artifactId>spigot-all</artifactId>\n-            <version>1.0-SNAPSHOT</version>\n+            <version>1.1-SNAPSHOT</version>\n         </dependency>\n     </dependencies>\n     <build>\n@@ -115,4 +115,4 @@\n             </plugin>\n         </plugins>\n     </build>\n-</project>\n\\ No newline at end of file\n+</project>"
  },
  {
    "sha": "e3540943a1b3135ebf12ae48e34a4bf681d32b7e",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotConfiguration.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotConfiguration.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotConfiguration.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotConfiguration.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -42,7 +42,7 @@\n     private Path floodgateKeyPath;\n \n     public void loadFloodgate(GeyserSpigotPlugin plugin) {\n-        Plugin floodgate = Bukkit.getPluginManager().getPlugin(\"floodgate-bukkit\");\n+        Plugin floodgate = Bukkit.getPluginManager().getPlugin(\"floodgate\");\n         Path geyserDataFolder = plugin.getDataFolder().toPath();\n         Path floodgateDataFolder = floodgate != null ? floodgate.getDataFolder().toPath() : null;\n "
  },
  {
    "sha": "cc4cb3985adff6c774faa236d64e8c8934ef5049",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotPlugin.java",
    "status": "modified",
    "additions": 30,
    "deletions": 14,
    "changes": 44,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotPlugin.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotPlugin.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotPlugin.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -28,7 +28,6 @@\n import com.github.steveice10.mc.protocol.MinecraftConstants;\n import org.bukkit.Bukkit;\n import org.bukkit.plugin.java.JavaPlugin;\n-import org.geysermc.adapters.spigot.SpigotAdapters;\n import org.geysermc.common.PlatformType;\n import org.geysermc.connector.GeyserConnector;\n import org.geysermc.connector.bootstrap.GeyserBootstrap;\n@@ -41,9 +40,11 @@\n import org.geysermc.connector.ping.IGeyserPingPassthrough;\n import org.geysermc.connector.utils.FileUtils;\n import org.geysermc.connector.utils.LanguageUtils;\n+import org.geysermc.geyser.adapters.spigot.SpigotAdapters;\n import org.geysermc.platform.spigot.command.GeyserSpigotCommandExecutor;\n import org.geysermc.platform.spigot.command.GeyserSpigotCommandManager;\n import org.geysermc.platform.spigot.command.SpigotCommandSender;\n+import org.geysermc.platform.spigot.world.GeyserSpigot1_11CraftingListener;\n import org.geysermc.platform.spigot.world.GeyserSpigotBlockPlaceListener;\n import org.geysermc.platform.spigot.world.manager.*;\n import us.myles.ViaVersion.api.Pair;\n@@ -70,6 +71,11 @@\n \n     private GeyserConnector connector;\n \n+    /**\n+     * The Minecraft server version, formatted as <code>1.#.#</code>\n+     */\n+    private String minecraftVersion;\n+\n     @Override\n     public void onEnable() {\n         // This is manually done instead of using Bukkit methods to save the config because otherwise comments get removed\n@@ -107,18 +113,21 @@ public void onEnable() {\n         this.geyserLogger = new GeyserSpigotLogger(getLogger(), geyserConfig.isDebugMode());\n         GeyserConfiguration.checkGeyserConfiguration(geyserConfig, geyserLogger);\n \n-        if (geyserConfig.getRemote().getAuthType().equals(\"floodgate\") && Bukkit.getPluginManager().getPlugin(\"floodgate-bukkit\") == null) {\n+        if (geyserConfig.getRemote().getAuthType().equals(\"floodgate\") && Bukkit.getPluginManager().getPlugin(\"floodgate\") == null) {\n             geyserLogger.severe(LanguageUtils.getLocaleStringLog(\"geyser.bootstrap.floodgate.not_installed\") + \" \" + LanguageUtils.getLocaleStringLog(\"geyser.bootstrap.floodgate.disabling\"));\n             this.getPluginLoader().disablePlugin(this);\n             return;\n-        } else if (geyserConfig.isAutoconfiguredRemote() && Bukkit.getPluginManager().getPlugin(\"floodgate-bukkit\") != null) {\n+        } else if (geyserConfig.isAutoconfiguredRemote() && Bukkit.getPluginManager().getPlugin(\"floodgate\") != null) {\n             // Floodgate installed means that the user wants Floodgate authentication\n             geyserLogger.debug(\"Auto-setting to Floodgate authentication.\");\n             geyserConfig.getRemote().setAuthType(\"floodgate\");\n         }\n \n         geyserConfig.loadFloodgate(this);\n \n+        // Turn \"(MC: 1.16.4)\" into 1.16.4.\n+        this.minecraftVersion = Bukkit.getServer().getVersion().split(\"\\\\(MC: \")[1].split(\"\\\\)\")[0];\n+\n         this.connector = GeyserConnector.start(PlatformType.SPIGOT, this);\n \n         if (geyserConfig.isLegacyPingPassthrough()) {\n@@ -147,8 +156,9 @@ public void onEnable() {\n             geyserLogger.debug(\"Legacy version of Minecraft (1.15.2 or older) detected; not using 3D biomes.\");\n         }\n \n+        boolean isPre1_12 = !isCompatible(Bukkit.getServer().getVersion(), \"1.12.0\");\n         // Set if we need to use a different method for getting a player's locale\n-        SpigotCommandSender.setUseLegacyLocaleMethod(!isCompatible(Bukkit.getServer().getVersion(), \"1.12.0\"));\n+        SpigotCommandSender.setUseLegacyLocaleMethod(isPre1_12);\n \n         if (connector.getConfig().isUseAdapters()) {\n             try {\n@@ -158,14 +168,14 @@ public void onEnable() {\n                 if (isViaVersion && isViaVersionNeeded()) {\n                     if (isLegacy) {\n                         // Pre-1.13\n-                        this.geyserWorldManager = new GeyserSpigot1_12NativeWorldManager();\n+                        this.geyserWorldManager = new GeyserSpigot1_12NativeWorldManager(this);\n                     } else {\n                         // Post-1.13\n                         this.geyserWorldManager = new GeyserSpigotLegacyNativeWorldManager(this, use3dBiomes);\n                     }\n                 } else {\n                     // No ViaVersion\n-                    this.geyserWorldManager = new GeyserSpigotNativeWorldManager(use3dBiomes);\n+                    this.geyserWorldManager = new GeyserSpigotNativeWorldManager(this, use3dBiomes);\n                 }\n                 geyserLogger.debug(\"Using NMS adapter: \" + this.geyserWorldManager.getClass() + \", \" + nmsVersion);\n             } catch (Exception e) {\n@@ -181,20 +191,24 @@ public void onEnable() {\n             // No NMS adapter\n             if (isLegacy && isViaVersion) {\n                 // Use ViaVersion for converting pre-1.13 block states\n-                this.geyserWorldManager = new GeyserSpigot1_12WorldManager();\n+                this.geyserWorldManager = new GeyserSpigot1_12WorldManager(this);\n             } else if (isLegacy) {\n                 // Not sure how this happens - without ViaVersion, we don't know any block states, so just assume everything is air\n-                this.geyserWorldManager = new GeyserSpigotFallbackWorldManager();\n+                this.geyserWorldManager = new GeyserSpigotFallbackWorldManager(this);\n             } else {\n                 // Post-1.13\n-                this.geyserWorldManager = new GeyserSpigotWorldManager(use3dBiomes);\n+                this.geyserWorldManager = new GeyserSpigotWorldManager(this, use3dBiomes);\n             }\n             geyserLogger.debug(\"Using default world manager: \" + this.geyserWorldManager.getClass());\n         }\n         GeyserSpigotBlockPlaceListener blockPlaceListener = new GeyserSpigotBlockPlaceListener(connector, this.geyserWorldManager);\n-\n         Bukkit.getServer().getPluginManager().registerEvents(blockPlaceListener, this);\n \n+        if (isPre1_12) {\n+            // Register events needed to send all recipes to the client\n+            Bukkit.getServer().getPluginManager().registerEvents(new GeyserSpigot1_11CraftingListener(this, connector), this);\n+        }\n+\n         this.getCommand(\"geyser\").setExecutor(new GeyserSpigotCommandExecutor(connector));\n \n         // Trigger GeyserStart Events\n@@ -243,6 +257,11 @@ public BootstrapDumpInfo getDumpInfo() {\n         return new GeyserSpigotDumpInfo();\n     }\n \n+    @Override\n+    public String getMinecraftServerVersion() {\n+        return this.minecraftVersion;\n+    }\n+\n     public boolean isCompatible(String version, String whichVersion) {\n         int[] currentVersion = parseVersion(version);\n         int[] otherVersion = parseVersion(whichVersion);\n@@ -281,10 +300,7 @@ public boolean isCompatible(String version, String whichVersion) {\n      * @return the server version before ViaVersion finishes initializing\n      */\n     public ProtocolVersion getServerProtocolVersion() {\n-        String bukkitVersion = Bukkit.getServer().getVersion();\n-        // Turn \"(MC: 1.16.4)\" into 1.16.4.\n-        String version = bukkitVersion.split(\"\\\\(MC: \")[1].split(\"\\\\)\")[0];\n-        return ProtocolVersion.getClosest(version);\n+        return ProtocolVersion.getClosest(this.minecraftVersion);\n     }\n \n     /**"
  },
  {
    "sha": "66fbb0163a2d1956aa622ac299e05aa87db184e8",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/GeyserSpigot1_11CraftingListener.java",
    "status": "added",
    "additions": 196,
    "deletions": 0,
    "changes": 196,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/GeyserSpigot1_11CraftingListener.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/GeyserSpigot1_11CraftingListener.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/GeyserSpigot1_11CraftingListener.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -0,0 +1,196 @@\n+/*\n+ * Copyright (c) 2019-2021 GeyserMC. http://geysermc.org\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ *\n+ * @author GeyserMC\n+ * @link https://github.com/GeyserMC/Geyser\n+ */\n+\n+package org.geysermc.platform.spigot.world;\n+\n+import com.github.steveice10.mc.protocol.MinecraftConstants;\n+import com.github.steveice10.mc.protocol.data.game.entity.metadata.ItemStack;\n+import com.github.steveice10.mc.protocol.data.game.recipe.Ingredient;\n+import com.github.steveice10.mc.protocol.data.game.recipe.RecipeType;\n+import com.github.steveice10.mc.protocol.data.game.recipe.data.ShapedRecipeData;\n+import com.github.steveice10.mc.protocol.data.game.recipe.data.ShapelessRecipeData;\n+import com.nukkitx.protocol.bedrock.data.inventory.CraftingData;\n+import com.nukkitx.protocol.bedrock.data.inventory.ItemData;\n+import com.nukkitx.protocol.bedrock.packet.CraftingDataPacket;\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.player.PlayerJoinEvent;\n+import org.bukkit.inventory.Recipe;\n+import org.bukkit.inventory.ShapedRecipe;\n+import org.bukkit.inventory.ShapelessRecipe;\n+import org.geysermc.connector.GeyserConnector;\n+import org.geysermc.connector.network.session.GeyserSession;\n+import org.geysermc.connector.network.translators.item.ItemTranslator;\n+import org.geysermc.connector.network.translators.item.RecipeRegistry;\n+import org.geysermc.platform.spigot.GeyserSpigotPlugin;\n+import us.myles.ViaVersion.api.Pair;\n+import us.myles.ViaVersion.api.data.MappingData;\n+import us.myles.ViaVersion.api.protocol.Protocol;\n+import us.myles.ViaVersion.api.protocol.ProtocolRegistry;\n+import us.myles.ViaVersion.api.protocol.ProtocolVersion;\n+import us.myles.ViaVersion.protocols.protocol1_13to1_12_2.Protocol1_13To1_12_2;\n+\n+import java.util.*;\n+\n+/**\n+ * Used to send all available recipes from the server to the client, as a valid recipe book packet won't be sent by the server.\n+ * Requires ViaVersion.\n+ */\n+public class GeyserSpigot1_11CraftingListener implements Listener {\n+\n+    private final GeyserConnector connector;\n+    /**\n+     * Specific mapping data for 1.12 to 1.13. Used to convert the 1.12 item into 1.13.\n+     */\n+    private final MappingData mappingData1_12to1_13;\n+    /**\n+     * The list of all protocols from the client's version to 1.13.\n+     */\n+    private final List<Pair<Integer, Protocol>> protocolList;\n+    private final ProtocolVersion version;\n+\n+    public GeyserSpigot1_11CraftingListener(GeyserSpigotPlugin plugin, GeyserConnector connector) {\n+        this.connector = connector;\n+        this.mappingData1_12to1_13 = ProtocolRegistry.getProtocol(Protocol1_13To1_12_2.class).getMappingData();\n+        this.protocolList = ProtocolRegistry.getProtocolPath(MinecraftConstants.PROTOCOL_VERSION,\n+                ProtocolVersion.v1_13.getVersion());\n+        this.version = plugin.getServerProtocolVersion();\n+    }\n+\n+    @EventHandler\n+    public void onPlayerJoin(PlayerJoinEvent event) {\n+        GeyserSession session = null;\n+        for (GeyserSession otherSession : connector.getPlayers()) {\n+            if (otherSession.getName().equals(event.getPlayer().getName())) {\n+                session = otherSession;\n+                break;\n+            }\n+        }\n+        if (session == null) {\n+            return;\n+        }\n+\n+        sendServerRecipes(session);\n+    }\n+\n+    public void sendServerRecipes(GeyserSession session) {\n+        int netId = RecipeRegistry.LAST_RECIPE_NET_ID;\n+\n+        CraftingDataPacket craftingDataPacket = new CraftingDataPacket();\n+        craftingDataPacket.setCleanRecipes(true);\n+        Iterator<Recipe> recipeIterator = Bukkit.getServer().recipeIterator();\n+        while (recipeIterator.hasNext()) {\n+            Recipe recipe = recipeIterator.next();\n+            Pair<ItemStack, ItemData> outputs = translateToBedrock(session, recipe.getResult());\n+            ItemStack javaOutput = outputs.getKey();\n+            ItemData output = outputs.getValue();\n+            if (output.getId() == 0) continue; // If items make air we don't want that\n+            boolean isNotAllAir = false; // Check for all-air recipes\n+            if (recipe instanceof ShapedRecipe) {\n+                ShapedRecipe shapedRecipe = (ShapedRecipe) recipe;\n+                int size = shapedRecipe.getShape().length * shapedRecipe.getShape()[0].length();\n+                Ingredient[] ingredients = new Ingredient[size];\n+                ItemData[] input = new ItemData[size];\n+                for (int i = 0; i < input.length; i++) {\n+                    // Index is converting char to integer, adding i then converting back to char based on ASCII code\n+                    Pair<ItemStack, ItemData> result = translateToBedrock(session, shapedRecipe.getIngredientMap().get((char) ('a' + i)));\n+                    ingredients[i] = new Ingredient(new ItemStack[]{result.getKey()});\n+                    input[i] = result.getValue();\n+                    isNotAllAir = isNotAllAir || input[i].getId() != 0;\n+                }\n+                if (!isNotAllAir) continue;\n+                UUID uuid = UUID.randomUUID();\n+                // Add recipe to our internal cache\n+                ShapedRecipeData data = new ShapedRecipeData(shapedRecipe.getShape()[0].length(), shapedRecipe.getShape().length,\n+                        \"\", ingredients, javaOutput);\n+                session.getCraftingRecipes().put(netId,\n+                        new com.github.steveice10.mc.protocol.data.game.recipe.Recipe(RecipeType.CRAFTING_SHAPED, uuid.toString(), data));\n+                // Add recipe for Bedrock\n+                craftingDataPacket.getCraftingData().add(CraftingData.fromShaped(uuid.toString(),\n+                        shapedRecipe.getShape()[0].length(), shapedRecipe.getShape().length, Arrays.asList(input),\n+                        Collections.singletonList(output), uuid, \"crafting_table\", 0, netId++));\n+            } else if (recipe instanceof ShapelessRecipe) {\n+                ShapelessRecipe shapelessRecipe = (ShapelessRecipe) recipe;\n+                Ingredient[] ingredients = new Ingredient[shapelessRecipe.getIngredientList().size()];\n+                ItemData[] input = new ItemData[shapelessRecipe.getIngredientList().size()];\n+                for (int i = 0; i < input.length; i++) {\n+                    Pair<ItemStack, ItemData> result = translateToBedrock(session, shapelessRecipe.getIngredientList().get(i));\n+                    ingredients[i] = new Ingredient(new ItemStack[]{result.getKey()});\n+                    input[i] = result.getValue();\n+                    isNotAllAir = isNotAllAir || input[i].getId() != 0;\n+                }\n+                if (!isNotAllAir) continue;\n+                UUID uuid = UUID.randomUUID();\n+                // Add recipe to our internal cache\n+                ShapelessRecipeData data = new ShapelessRecipeData(\"\", ingredients, javaOutput);\n+                session.getCraftingRecipes().put(netId,\n+                        new com.github.steveice10.mc.protocol.data.game.recipe.Recipe(RecipeType.CRAFTING_SHAPELESS, uuid.toString(), data));\n+                // Add recipe for Bedrock\n+                craftingDataPacket.getCraftingData().add(CraftingData.fromShapeless(uuid.toString(),\n+                        Arrays.asList(input), Collections.singletonList(output), uuid, \"crafting_table\", 0, netId++));\n+            }\n+        }\n+\n+        session.sendUpstreamPacket(craftingDataPacket);\n+    }\n+\n+    @SuppressWarnings(\"deprecation\")\n+    private Pair<ItemStack, ItemData> translateToBedrock(GeyserSession session, org.bukkit.inventory.ItemStack itemStack) {\n+        if (itemStack != null && itemStack.getData() != null) {\n+            if (itemStack.getType().getId() == 0) {\n+                return new Pair<>(null, ItemData.AIR);\n+            }\n+            int legacyId = (itemStack.getType().getId() << 4) | (itemStack.getData().getData() & 0xFFFF);\n+            if (itemStack.getType().getId() == 355 && itemStack.getData().getData() == (byte) 0) { // Handle bed color since the server will always be pre-1.12\n+                legacyId = (itemStack.getType().getId() << 4) | ((byte) 14 & 0xFFFF);\n+            }\n+            // old version -> 1.13 -> 1.13.1 -> 1.14 -> 1.15 -> 1.16 and so on\n+            int itemId;\n+            if (mappingData1_12to1_13.getItemMappings().containsKey(legacyId)) {\n+                itemId = mappingData1_12to1_13.getNewItemId(legacyId);\n+            } else if (mappingData1_12to1_13.getItemMappings().containsKey((itemStack.getType().getId() << 4) | (0))) {\n+                itemId = mappingData1_12to1_13.getNewItemId((itemStack.getType().getId() << 4) | (0));\n+            } else {\n+                // No ID found, just send back air\n+                return new Pair<>(null, ItemData.AIR);\n+            }\n+\n+            for (int i = protocolList.size() - 1; i >= 0; i--) {\n+                MappingData mappingData = protocolList.get(i).getValue().getMappingData();\n+                if (mappingData != null) {\n+                    itemId = mappingData.getNewItemId(itemId);\n+                }\n+            }\n+\n+            ItemStack mcItemStack = new ItemStack(itemId, itemStack.getAmount());\n+            ItemData finalData = ItemTranslator.translateToBedrock(session, mcItemStack);\n+            return new Pair<>(mcItemStack, finalData);\n+        }\n+        // Empty slot, most likely\n+        return new Pair<>(null, ItemData.AIR);\n+    }\n+\n+}"
  },
  {
    "sha": "02347f5deb826c5b6f6f6f72d80ae975b947f19e",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12NativeWorldManager.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12NativeWorldManager.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12NativeWorldManager.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12NativeWorldManager.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -27,10 +27,11 @@\n \n import org.bukkit.Bukkit;\n import org.bukkit.entity.Player;\n-import org.geysermc.adapters.spigot.SpigotAdapters;\n-import org.geysermc.adapters.spigot.SpigotWorldAdapter;\n+import org.bukkit.plugin.Plugin;\n import org.geysermc.connector.network.session.GeyserSession;\n import org.geysermc.connector.network.translators.world.block.BlockTranslator;\n+import org.geysermc.geyser.adapters.spigot.SpigotAdapters;\n+import org.geysermc.geyser.adapters.spigot.SpigotWorldAdapter;\n import us.myles.ViaVersion.api.Via;\n import us.myles.ViaVersion.protocols.protocol1_13to1_12_2.storage.BlockStorage;\n \n@@ -40,7 +41,8 @@\n public class GeyserSpigot1_12NativeWorldManager extends GeyserSpigot1_12WorldManager {\n     private final SpigotWorldAdapter adapter;\n \n-    public GeyserSpigot1_12NativeWorldManager() {\n+    public GeyserSpigot1_12NativeWorldManager(Plugin plugin) {\n+        super(plugin);\n         this.adapter = SpigotAdapters.getWorldAdapter();\n         // Unlike post-1.13, we can't build up a cache of block states, because block entities need some special conversion\n     }"
  },
  {
    "sha": "a28eef5b4709b453b921221c9867d1c2643253a3",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12WorldManager.java",
    "status": "modified",
    "additions": 7,
    "deletions": 2,
    "changes": 9,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12WorldManager.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12WorldManager.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12WorldManager.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -30,6 +30,7 @@\n import org.bukkit.World;\n import org.bukkit.block.Block;\n import org.bukkit.entity.Player;\n+import org.bukkit.plugin.Plugin;\n import org.geysermc.connector.network.session.GeyserSession;\n import org.geysermc.connector.network.translators.world.block.BlockTranslator;\n import us.myles.ViaVersion.api.Pair;\n@@ -61,8 +62,8 @@\n      */\n     private final List<Pair<Integer, Protocol>> protocolList;\n \n-    public GeyserSpigot1_12WorldManager() {\n-        super(false);\n+    public GeyserSpigot1_12WorldManager(Plugin plugin) {\n+        super(plugin, false);\n         this.mappingData1_12to1_13 = ProtocolRegistry.getProtocol(Protocol1_13To1_12_2.class).getMappingData();\n         this.protocolList = ProtocolRegistry.getProtocolPath(CLIENT_PROTOCOL_VERSION,\n                 ProtocolVersion.v1_13.getVersion());\n@@ -75,6 +76,10 @@ public int getBlockAt(GeyserSession session, int x, int y, int z) {\n         if (player == null) {\n             return BlockTranslator.JAVA_AIR_ID;\n         }\n+        if (!player.getWorld().isChunkLoaded(x >> 4, z >> 4)) {\n+            // Prevent nasty async errors if a player is loading in\n+            return BlockTranslator.JAVA_AIR_ID;\n+        }\n         // Get block entity storage\n         BlockStorage storage = Via.getManager().getConnection(player.getUniqueId()).get(BlockStorage.class);\n         Block block = player.getWorld().getBlockAt(x, y, z);"
  },
  {
    "sha": "4cac791a09b75b308e3374bc64f1ec3e33a23cfd",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotFallbackWorldManager.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotFallbackWorldManager.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotFallbackWorldManager.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotFallbackWorldManager.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -26,6 +26,7 @@\n package org.geysermc.platform.spigot.world.manager;\n \n import com.github.steveice10.mc.protocol.data.game.chunk.Chunk;\n+import org.bukkit.plugin.Plugin;\n import org.geysermc.connector.network.session.GeyserSession;\n import org.geysermc.connector.network.translators.world.block.BlockTranslator;\n \n@@ -35,9 +36,9 @@\n  * If this occurs to you somehow, please let us know!!\n  */\n public class GeyserSpigotFallbackWorldManager extends GeyserSpigotWorldManager {\n-    public GeyserSpigotFallbackWorldManager() {\n+    public GeyserSpigotFallbackWorldManager(Plugin plugin) {\n         // Since this is pre-1.13 (and thus pre-1.15), there will never be 3D biomes.\n-        super(false);\n+        super(plugin, false);\n     }\n \n     @Override"
  },
  {
    "sha": "8f407de0a4bc41ba7ab931812dac319ed5f6b85e",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotLegacyNativeWorldManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotLegacyNativeWorldManager.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotLegacyNativeWorldManager.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotLegacyNativeWorldManager.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -47,7 +47,7 @@\n     private final Int2IntMap oldToNewBlockId;\n \n     public GeyserSpigotLegacyNativeWorldManager(GeyserSpigotPlugin plugin, boolean use3dBiomes) {\n-        super(use3dBiomes);\n+        super(plugin, use3dBiomes);\n         IntList allBlockStates = adapter.getAllBlockStates();\n         oldToNewBlockId = new Int2IntOpenHashMap(allBlockStates.size());\n         ProtocolVersion serverVersion = plugin.getServerProtocolVersion();"
  },
  {
    "sha": "cc9d5bddc2c0e53ed5a45959c07a50d54312e671",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotNativeWorldManager.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotNativeWorldManager.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotNativeWorldManager.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotNativeWorldManager.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -27,16 +27,17 @@\n \n import org.bukkit.Bukkit;\n import org.bukkit.entity.Player;\n-import org.geysermc.adapters.spigot.SpigotAdapters;\n-import org.geysermc.adapters.spigot.SpigotWorldAdapter;\n+import org.bukkit.plugin.Plugin;\n import org.geysermc.connector.network.session.GeyserSession;\n import org.geysermc.connector.network.translators.world.block.BlockTranslator;\n+import org.geysermc.geyser.adapters.spigot.SpigotAdapters;\n+import org.geysermc.geyser.adapters.spigot.SpigotWorldAdapter;\n \n public class GeyserSpigotNativeWorldManager extends GeyserSpigotWorldManager {\n     protected final SpigotWorldAdapter adapter;\n \n-    public GeyserSpigotNativeWorldManager(boolean use3dBiomes) {\n-        super(use3dBiomes);\n+    public GeyserSpigotNativeWorldManager(Plugin plugin, boolean use3dBiomes) {\n+        super(plugin, use3dBiomes);\n         adapter = SpigotAdapters.getWorldAdapter();\n     }\n "
  },
  {
    "sha": "25546a3ad7e318624baf8d730cbbce1774e9caa9",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotWorldManager.java",
    "status": "modified",
    "additions": 66,
    "deletions": 4,
    "changes": 70,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotWorldManager.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotWorldManager.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotWorldManager.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -28,23 +28,35 @@\n import com.fasterxml.jackson.databind.JsonNode;\n import com.github.steveice10.mc.protocol.MinecraftConstants;\n import com.github.steveice10.mc.protocol.data.game.chunk.Chunk;\n+import com.nukkitx.math.vector.Vector3i;\n+import com.nukkitx.nbt.NbtMap;\n+import com.nukkitx.nbt.NbtMapBuilder;\n+import com.nukkitx.nbt.NbtType;\n import it.unimi.dsi.fastutil.ints.Int2IntMap;\n import it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap;\n import org.bukkit.Bukkit;\n import org.bukkit.World;\n import org.bukkit.block.Biome;\n import org.bukkit.block.Block;\n+import org.bukkit.block.Lectern;\n import org.bukkit.block.data.BlockData;\n import org.bukkit.entity.Player;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.BookMeta;\n+import org.bukkit.plugin.Plugin;\n import org.geysermc.connector.GeyserConnector;\n import org.geysermc.connector.network.session.GeyserSession;\n+import org.geysermc.connector.network.translators.inventory.translators.LecternInventoryTranslator;\n import org.geysermc.connector.network.translators.world.GeyserWorldManager;\n import org.geysermc.connector.network.translators.world.block.BlockTranslator;\n+import org.geysermc.connector.utils.BlockEntityUtils;\n import org.geysermc.connector.utils.FileUtils;\n import org.geysermc.connector.utils.GameRule;\n import org.geysermc.connector.utils.LanguageUtils;\n \n import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n \n /**\n  * The base world manager to use when there is no supported NMS revision\n@@ -72,8 +84,11 @@\n      */\n     private final Int2IntMap biomeToIdMap = new Int2IntOpenHashMap(Biome.values().length);\n \n-    public GeyserSpigotWorldManager(boolean use3dBiomes) {\n+    private final Plugin plugin;\n+\n+    public GeyserSpigotWorldManager(Plugin plugin, boolean use3dBiomes) {\n         this.use3dBiomes = use3dBiomes;\n+        this.plugin = plugin;\n \n         // Load the values into the biome-to-ID map\n         InputStream biomeStream = FileUtils.getResource(\"biomes.json\");\n@@ -132,9 +147,6 @@ public boolean hasMoreBlockDataThanChunkCache() {\n     @Override\n     @SuppressWarnings(\"deprecation\")\n     public int[] getBiomeDataAt(GeyserSession session, int x, int z) {\n-        if (session.getPlayerEntity() == null) {\n-            return new int[1024];\n-        }\n         int[] biomeData = new int[1024];\n         World world = Bukkit.getPlayer(session.getPlayerEntity().getUsername()).getWorld();\n         int chunkX = x << 4;\n@@ -167,6 +179,56 @@ public boolean hasMoreBlockDataThanChunkCache() {\n         return biomeData;\n     }\n \n+    @Override\n+    public NbtMap getLecternDataAt(GeyserSession session, int x, int y, int z, boolean isChunkLoad) {\n+        // Run as a task to prevent async issues\n+        Bukkit.getScheduler().runTask(this.plugin, () -> {\n+            Player bukkitPlayer;\n+            if ((bukkitPlayer = Bukkit.getPlayer(session.getPlayerEntity().getUsername())) == null) {\n+                return;\n+            }\n+            Block block = bukkitPlayer.getWorld().getBlockAt(x, y, z);\n+            if (!(block.getState() instanceof Lectern)) {\n+                session.getConnector().getLogger().error(\"Lectern expected at: \" + Vector3i.from(x, y, z).toString() + \" but was not! \" + block.toString());\n+                return;\n+            }\n+            Lectern lectern = (Lectern) block.getState();\n+            ItemStack itemStack = lectern.getInventory().getItem(0);\n+            if (itemStack == null || !(itemStack.getItemMeta() instanceof BookMeta)) {\n+                if (!isChunkLoad) {\n+                    // We need to update the lectern since it's not going to be updated otherwise\n+                    BlockEntityUtils.updateBlockEntity(session, LecternInventoryTranslator.getBaseLecternTag(x, y, z, 0).build(), Vector3i.from(x, y, z));\n+                }\n+                // We don't care; return\n+                return;\n+            }\n+            BookMeta bookMeta = (BookMeta) itemStack.getItemMeta();\n+            NbtMapBuilder lecternTag = LecternInventoryTranslator.getBaseLecternTag(x, y, z, bookMeta.getPageCount());\n+            lecternTag.putInt(\"page\", lectern.getPage() / 2);\n+            NbtMapBuilder bookTag = NbtMap.builder()\n+                    .putByte(\"Count\", (byte) itemStack.getAmount())\n+                    .putShort(\"Damage\", (short) 0)\n+                    .putString(\"Name\", \"minecraft:writable_book\");\n+            List<NbtMap> pages = new ArrayList<>();\n+            for (String page : bookMeta.getPages()) {\n+                NbtMapBuilder pageBuilder = NbtMap.builder()\n+                        .putString(\"photoname\", \"\")\n+                        .putString(\"text\", page);\n+                pages.add(pageBuilder.build());\n+            }\n+            bookTag.putCompound(\"tag\", NbtMap.builder().putList(\"pages\", NbtType.COMPOUND, pages).build());\n+            lecternTag.putCompound(\"book\", bookTag.build());\n+            NbtMap blockEntityTag = lecternTag.build();\n+            BlockEntityUtils.updateBlockEntity(session, blockEntityTag, Vector3i.from(x, y, z));\n+        });\n+        return LecternInventoryTranslator.getBaseLecternTag(x, y, z, 0).build(); // Will be updated later\n+    }\n+\n+    @Override\n+    public boolean shouldExpectLecternHandled() {\n+        return true;\n+    }\n+\n     public Boolean getGameRuleBool(GeyserSession session, GameRule gameRule) {\n         return Boolean.parseBoolean(Bukkit.getPlayer(session.getPlayerEntity().getUsername()).getWorld().getGameRuleValue(gameRule.getJavaID()));\n     }"
  },
  {
    "sha": "5e4afb4896de832f544103160454758733575d93",
    "filename": "bootstrap/sponge/pom.xml",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/sponge/pom.xml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/sponge/pom.xml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/sponge/pom.xml?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -6,15 +6,15 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>bootstrap-parent</artifactId>\n-        <version>1.2.0-SNAPSHOT</version>\n+        <version>1.2.1-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-sponge</artifactId>\n \n     <dependencies>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>connector</artifactId>\n-            <version>1.2.0-SNAPSHOT</version>\n+            <version>1.2.1-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>\n@@ -106,4 +106,4 @@\n             </plugin>\n         </plugins>\n     </build>\n-</project>\n\\ No newline at end of file\n+</project>"
  },
  {
    "sha": "9ebe8c4823c7ce2b117e5ecec72a7f7e021d6876",
    "filename": "bootstrap/sponge/src/main/java/org/geysermc/platform/sponge/GeyserSpongePlugin.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/sponge/src/main/java/org/geysermc/platform/sponge/GeyserSpongePlugin.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/sponge/src/main/java/org/geysermc/platform/sponge/GeyserSpongePlugin.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/sponge/src/main/java/org/geysermc/platform/sponge/GeyserSpongePlugin.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -167,4 +167,9 @@ public void onServerStop(GameStoppedEvent event) {\n     public BootstrapDumpInfo getDumpInfo() {\n         return new GeyserSpongeDumpInfo();\n     }\n+\n+    @Override\n+    public String getMinecraftServerVersion() {\n+        return Sponge.getPlatform().getMinecraftVersion().getName();\n+    }\n }"
  },
  {
    "sha": "b2abd3ad83735f007263cd5fab77f129c8717475",
    "filename": "bootstrap/standalone/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/standalone/pom.xml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/standalone/pom.xml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/standalone/pom.xml?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -6,15 +6,15 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>bootstrap-parent</artifactId>\n-        <version>1.2.0-SNAPSHOT</version>\n+        <version>1.2.1-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-standalone</artifactId>\n \n     <dependencies>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>connector</artifactId>\n-            <version>1.2.0-SNAPSHOT</version>\n+            <version>1.2.1-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>"
  },
  {
    "sha": "a6aaf98d7969dc94c964ac5da1920320e66aae30",
    "filename": "bootstrap/velocity/pom.xml",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/velocity/pom.xml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/bootstrap/velocity/pom.xml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/velocity/pom.xml?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -6,15 +6,15 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>bootstrap-parent</artifactId>\n-        <version>1.2.0-SNAPSHOT</version>\n+        <version>1.2.1-SNAPSHOT</version>\n     </parent>\n     <artifactId>bootstrap-velocity</artifactId>\n \n     <dependencies>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n             <artifactId>connector</artifactId>\n-            <version>1.2.0-SNAPSHOT</version>\n+            <version>1.2.1-SNAPSHOT</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>\n@@ -122,4 +122,4 @@\n             </plugin>\n         </plugins>\n     </build>\n-</project>\n\\ No newline at end of file\n+</project>"
  },
  {
    "sha": "700420fbd5bb0c8f3f058770e65608b4c44ddbb3",
    "filename": "common/pom.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 10,
    "changes": 18,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/common/pom.xml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/common/pom.xml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/common/pom.xml?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -6,22 +6,20 @@\n     <parent>\n         <groupId>org.geysermc</groupId>\n         <artifactId>geyser-parent</artifactId>\n-        <version>1.2.0-SNAPSHOT</version>\n+        <version>1.2.1-SNAPSHOT</version>\n     </parent>\n     <artifactId>common</artifactId>\n \n     <dependencies>\n         <dependency>\n-            <groupId>com.google.code.gson</groupId>\n-            <artifactId>gson</artifactId>\n-            <version>2.8.2</version>\n-            <scope>compile</scope>\n+            <groupId>org.geysermc.cumulus</groupId>\n+            <artifactId>cumulus</artifactId>\n+            <version>1.0-SNAPSHOT</version>\n         </dependency>\n         <dependency>\n-            <groupId>com.fasterxml.jackson.datatype</groupId>\n-            <artifactId>jackson-datatype-jsr310</artifactId>\n-            <version>2.9.8</version>\n-            <scope>compile</scope>\n+            <groupId>com.google.code.gson</groupId>\n+            <artifactId>gson</artifactId>\n+            <version>2.8.6</version>\n         </dependency>\n     </dependencies>\n-</project>\n\\ No newline at end of file\n+</project>"
  },
  {
    "sha": "098fd39464f0190e2f9938552d2d29a823219660",
    "filename": "common/src/main/java/org/geysermc/common/PlatformType.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/08d57e041fc49565a5e4cd22f40024733587da26/common/src/main/java/org/geysermc/common/PlatformType.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/08d57e041fc49565a5e4cd22f40024733587da26/common/src/main/java/org/geysermc/common/PlatformType.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/common/src/main/java/org/geysermc/common/PlatformType.java?ref=08d57e041fc49565a5e4cd22f40024733587da26",
    "patch": "@@ -31,7 +31,6 @@\n @Getter\n @AllArgsConstructor\n public enum PlatformType {\n-\n     ANDROID(\"Android\"),\n     BUNGEECORD(\"BungeeCord\"),\n     FABRIC(\"Fabric\"),"
  },
  {
    "sha": "f4e597f003bb9d6a85cf21b99b675125ef996904",
    "filename": "common/src/main/java/org/geysermc/common/window/CustomFormBuilder.java",
    "status": "removed",
    "additions": 0,
    "deletions": 71,
    "changes": 71,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/27777aa5a6463b167dc1677a44fea12ad3f7e8ed/common/src/main/java/org/geysermc/common/window/CustomFormBuilder.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/27777aa5a6463b167dc1677a44fea12ad3f7e8ed/common/src/main/java/org/geysermc/common/window/CustomFormBuilder.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/common/src/main/java/org/geysermc/common/window/CustomFormBuilder.java?ref=27777aa5a6463b167dc1677a44fea12ad3f7e8ed",
    "patch": "@@ -1,71 +0,0 @@\n-/*\n- * Copyright (c) 2019-2021 GeyserMC. http://geysermc.org\n- *\n- * Permission is hereby granted, free of charge, to any person obtaining a copy\n- * of this software and associated documentation files (the \"Software\"), to deal\n- * in the Software without restriction, including without limitation the rights\n- * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n- * copies of the Software, and to permit persons to whom the Software is\n- * furnished to do so, subject to the following conditions:\n- *\n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- *\n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n- * THE SOFTWARE.\n- *\n- * @author GeyserMC\n- * @link https://github.com/GeyserMC/Geyser\n- */\n-\n-package org.geysermc.common.window;\n-\n-import lombok.Getter;\n-import org.geysermc.common.window.CustomFormWindow;\n-import org.geysermc.common.window.button.FormImage;\n-import org.geysermc.common.window.component.FormComponent;\n-import org.geysermc.common.window.response.CustomFormResponse;\n-\n-public class CustomFormBuilder {\n-\n-    @Getter\n-    private CustomFormWindow form;\n-\n-    public CustomFormBuilder(String title) {\n-        form = new CustomFormWindow(title);\n-    }\n-\n-    public CustomFormBuilder setTitle(String title) {\n-        form.setTitle(title);\n-        return this;\n-    }\n-\n-    public CustomFormBuilder setIcon(FormImage icon) {\n-        form.setIcon(icon);\n-        return this;\n-    }\n-\n-    public CustomFormBuilder setResponse(String data) {\n-        form.setResponse(data);\n-        return this;\n-    }\n-\n-    public CustomFormBuilder setResponse(CustomFormResponse response) {\n-        form.setResponse(response);\n-        return this;\n-    }\n-\n-    public CustomFormBuilder addComponent(FormComponent component) {\n-        form.addComponent(component);\n-        return this;\n-    }\n-\n-    public CustomFormWindow build() {\n-        return form;\n-    }\n-}"
  },
  {
    "sha": "7043dda9f0753e9398b99343a92444b3cdedfbf1",
    "filename": "common/src/main/java/org/geysermc/common/window/CustomFormWindow.java",
    "status": "removed",
    "additions": 0,
    "deletions": 165,
    "changes": 165,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/27777aa5a6463b167dc1677a44fea12ad3f7e8ed/common/src/main/java/org/geysermc/common/window/CustomFormWindow.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/27777aa5a6463b167dc1677a44fea12ad3f7e8ed/common/src/main/java/org/geysermc/common/window/CustomFormWindow.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/common/src/main/java/org/geysermc/common/window/CustomFormWindow.java?ref=27777aa5a6463b167dc1677a44fea12ad3f7e8ed",
    "patch": "@@ -1,165 +0,0 @@\n-/*\n- * Copyright (c) 2019-2021 GeyserMC. http://geysermc.org\n- *\n- * Permission is hereby granted, free of charge, to any person obtaining a copy\n- * of this software and associated documentation files (the \"Software\"), to deal\n- * in the Software without restriction, including without limitation the rights\n- * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n- * copies of the Software, and to permit persons to whom the Software is\n- * furnished to do so, subject to the following conditions:\n- *\n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- *\n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n- * THE SOFTWARE.\n- *\n- * @author GeyserMC\n- * @link https://github.com/GeyserMC/Geyser\n- */\n-\n-package org.geysermc.common.window;\n-\n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import lombok.Getter;\n-import lombok.Setter;\n-import org.geysermc.common.window.button.FormImage;\n-import org.geysermc.common.window.component.*;\n-import org.geysermc.common.window.response.CustomFormResponse;\n-import org.geysermc.common.window.response.FormResponseData;\n-\n-import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-\n-public class CustomFormWindow extends FormWindow {\n-\n-    @Getter\n-    @Setter\n-    private String title;\n-\n-    @Getter\n-    @Setter\n-    private FormImage icon;\n-\n-    @Getter\n-    private List<FormComponent> content;\n-\n-    public CustomFormWindow(String title) {\n-        this(title, new ArrayList<>());\n-    }\n-\n-    public CustomFormWindow(String title, List<FormComponent> content) {\n-        this(title, content, (FormImage) null);\n-    }\n-\n-    public CustomFormWindow(String title, List<FormComponent> content, String icon) {\n-        this(title, content, new FormImage(FormImage.FormImageType.URL, icon));\n-    }\n-\n-    public CustomFormWindow(String title, List<FormComponent> content, FormImage icon) {\n-        super(\"custom_form\");\n-\n-        this.title = title;\n-        this.content = content;\n-        this.icon = icon;\n-    }\n-\n-    public void addComponent(FormComponent component) {\n-        content.add(component);\n-    }\n-\n-    public String getJSONData() {\n-        String toModify = \"\";\n-        try {\n-            toModify = new ObjectMapper().writeValueAsString(this);\n-        } catch (JsonProcessingException e) { }\n-\n-        //We need to replace this due to Java not supporting declaring class field 'default'\n-        return toModify.replace(\"defaultOptionIndex\", \"default\")\n-                .replace(\"defaultText\", \"default\")\n-                .replace(\"defaultValue\", \"default\")\n-                .replace(\"defaultStepIndex\", \"default\");\n-    }\n-\n-    public void setResponse(String data) {\n-        if (data == null || data.trim().equalsIgnoreCase(\"null\") || data.isEmpty()) {\n-            closed = true;\n-            return;\n-        }\n-\n-        int i = 0;\n-        Map<Integer, FormResponseData> dropdownResponses = new HashMap<Integer, FormResponseData>();\n-        Map<Integer, String> inputResponses = new HashMap<Integer, String>();\n-        Map<Integer, Float> sliderResponses = new HashMap<Integer, Float>();\n-        Map<Integer, FormResponseData> stepSliderResponses = new HashMap<Integer, FormResponseData>();\n-        Map<Integer, Boolean> toggleResponses = new HashMap<Integer, Boolean>();\n-        Map<Integer, Object> responses = new HashMap<Integer, Object>();\n-        Map<Integer, String> labelResponses = new HashMap<Integer, String>();\n-\n-        List<String> componentResponses = new ArrayList<>();\n-        try {\n-            componentResponses = new ObjectMapper().readValue(data.trim(), new TypeReference<List<String>>(){});\n-        } catch (IOException e) { }\n-\n-        for (String response : componentResponses) {\n-            if (i >= content.size()) {\n-                break;\n-            }\n-\n-            FormComponent component = content.get(i);\n-            if (component == null)\n-                return;\n-\n-            if (component instanceof LabelComponent) {\n-                LabelComponent labelComponent = (LabelComponent) component;\n-                labelResponses.put(i, labelComponent.getText());\n-            }\n-\n-            if (component instanceof DropdownComponent) {\n-                DropdownComponent dropdownComponent = (DropdownComponent) component;\n-                String option = dropdownComponent.getOptions().get(Integer.parseInt(response));\n-\n-                dropdownResponses.put(i, new FormResponseData(Integer.parseInt(response), option));\n-                responses.put(i, option);\n-            }\n-\n-            if (component instanceof InputComponent) {\n-                inputResponses.put(i, response);\n-                responses.put(i, response);\n-            }\n-\n-            if (component instanceof SliderComponent) {\n-                float value = Float.parseFloat(response);\n-                sliderResponses.put(i, value);\n-                responses.put(i, value);\n-            }\n-\n-            if (component instanceof StepSliderComponent) {\n-                StepSliderComponent stepSliderComponent = (StepSliderComponent) component;\n-                String step = stepSliderComponent.getSteps().get(Integer.parseInt(response));\n-                stepSliderResponses.put(i, new FormResponseData(Integer.parseInt(response), step));\n-                responses.put(i, step);\n-            }\n-\n-            if (component instanceof ToggleComponent) {\n-                boolean answer = Boolean.parseBoolean(response);\n-                toggleResponses.put(i, answer);\n-                responses.put(i, answer);\n-            }\n-            i++;\n-        }\n-\n-        this.response = new CustomFormResponse(responses, dropdownResponses, inputResponses,\n-                sliderResponses, stepSliderResponses, toggleResponses, labelResponses);\n-    }\n-}"
  },
  {
    "sha": "48bda0bd2389e66997ba287ec8f391c298d502ef",
    "filename": "common/src/main/java/org/geysermc/common/window/SimpleFormWindow.java",
    "status": "removed",
    "additions": 0,
    "deletions": 94,
    "changes": 94,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/27777aa5a6463b167dc1677a44fea12ad3f7e8ed/common/src/main/java/org/geysermc/common/window/SimpleFormWindow.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/27777aa5a6463b167dc1677a44fea12ad3f7e8ed/common/src/main/java/org/geysermc/common/window/SimpleFormWindow.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/common/src/main/java/org/geysermc/common/window/SimpleFormWindow.java?ref=27777aa5a6463b167dc1677a44fea12ad3f7e8ed",
    "patch": "@@ -1,94 +0,0 @@\n-/*\n- * Copyright (c) 2019-2021 GeyserMC. http://geysermc.org\n- *\n- * Permission is hereby granted, free of charge, to any person obtaining a copy\n- * of this software and associated documentation files (the \"Software\"), to deal\n- * in the Software without restriction, including without limitation the rights\n- * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n- * copies of the Software, and to permit persons to whom the Software is\n- * furnished to do so, subject to the following conditions:\n- *\n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- *\n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n- * THE SOFTWARE.\n- *\n- * @author GeyserMC\n- * @link https://github.com/GeyserMC/Geyser\n- */\n-\n-package org.geysermc.common.window;\n-\n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import lombok.Getter;\n-import lombok.Setter;\n-import org.geysermc.common.window.button.FormButton;\n-import org.geysermc.common.window.response.SimpleFormResponse;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-\n-public class SimpleFormWindow extends FormWindow {\n-\n-    @Getter\n-    @Setter\n-    private String title;\n-\n-    @Getter\n-    @Setter\n-    private String content;\n-\n-    @Getter\n-    @Setter\n-    private List<FormButton> buttons;\n-\n-    public SimpleFormWindow(String title, String content) {\n-        this(title, content, new ArrayList<FormButton>());\n-    }\n-\n-    public SimpleFormWindow(String title, String content, List<FormButton> buttons) {\n-        super(\"form\");\n-\n-        this.title = title;\n-        this.content = content;\n-        this.buttons = buttons;\n-    }\n-\n-    @Override\n-    public String getJSONData() {\n-        try {\n-            return new ObjectMapper().writeValueAsString(this);\n-        } catch (JsonProcessingException e) {\n-            return \"\";\n-        }\n-    }\n-\n-    public void setResponse(String data) {\n-        if (data == null || data.trim().equalsIgnoreCase(\"null\")) {\n-            closed = true;\n-            return;\n-        }\n-\n-        int buttonID;\n-        try {\n-            buttonID = Integer.parseInt(data.trim());\n-        } catch (Exception ex) {\n-            return;\n-        }\n-\n-        if (buttonID >= buttons.size()) {\n-            response = new SimpleFormResponse(buttonID, null);\n-            return;\n-        }\n-\n-        response = new SimpleFormResponse(buttonID, buttons.get(buttonID));\n-    }\n-}"
  }
]
