[
  {
    "sha": "17e88f26887c1fe6c5b2257df38e3e992d766486",
    "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
    "status": "removed",
    "additions": 0,
    "deletions": 57,
    "changes": 57,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/27777aa5a6463b167dc1677a44fea12ad3f7e8ed/.github/ISSUE_TEMPLATE/bug_report.md",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/27777aa5a6463b167dc1677a44fea12ad3f7e8ed/.github/ISSUE_TEMPLATE/bug_report.md",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=27777aa5a6463b167dc1677a44fea12ad3f7e8ed",
    "patch": "@@ -1,57 +0,0 @@\n----\n-name: Bug report\n-about: Create a report to help us improve\n-title: ''\n-labels: ''\n-assignees: ''\n-\n----\n-\n-<!--- DELETING THIS TEMPLATE WILL GET YOUR ISSUE CLOSED! --->\n-\n-<!--- Please follow this format COMPLETELY and make sure the bug you are reporting has not been reported yet. Reports should contain as much information or context as possible to help us find the problem. Simply creating an issue on a vague topic will not help us at all, and if you are unsure if something should belong here, please contact us on [Discord](http://discord.geysermc.org).-->\n-\n-<!--- Issues pertaining to connection problems, or anything of that covered on the [Common Issues](https://github.com/GeyserMC/Geyser/wiki/Common-Issues) do not belong here and only clutter this issue tracker. -->\n-\n-**Describe the bug**\n-\n-A clear and concise description of what the bug is.\n-\n-**To Reproduce**\n-\n-Steps to reproduce the behavior:\n-1. Go to '...'\n-2. Click on '....'\n-3. Scroll down to '....'\n-4. See error\n-\n-**Expected behavior**\n-\n-A clear and concise description of what you expected to happen.\n-\n-**Screenshots / Videos**\n-\n-If applicable, add screenshots to help explain your problem.\n-\n-**Server Version and Plugins**\n-\n-If you just run Geyser-Spigot, you can leave this area blank as the next section covers this information.\n-\n-If you're running a multi-server instance, or using Geyser Standalone:\n-\n-- Give us the exact output from `/version` on all servers involved. Saying \"latest\" does not help us at all.\n-- Please list all plugins on all servers involved.\n-\n-If this bug occurs on a server you do not control, please fill this in to the best of your knowledge.\n-\n-**Geyser Dump**\n-\n-If Geyser starts correctly, please also include the link to a dump by using `/geyser dump`. If you use the Standalone GUI, the option can be found under `Commands` => `Dump`. This provides us information about your server that we can use to debug your issue.\n-\n-**Minecraft: Bedrock Edition Version**\n-\n-The version of your Minecraft: Bedrock Edition client you tested with, along with your device type (e.g. Windows 10, Switch...).\n-\n-**Additional Context**\n-\n-Add any other context about the problem here."
  },
  {
    "sha": "ca83c83f8c7a785a6e2658ac640f3f16be92e314",
    "filename": ".github/ISSUE_TEMPLATE/bug_report.yml",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/ISSUE_TEMPLATE/bug_report.yml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/ISSUE_TEMPLATE/bug_report.yml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/ISSUE_TEMPLATE/bug_report.yml?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -0,0 +1,64 @@\n+name: Bug report\n+about: Create a report to help us improve\n+body:\n+- type: markdown\n+  attributes:\n+    value: |\n+      Thanks for taking the time to fill out this bug report for Geyser! Fill out the following form to your best ability to help us fix the problem.\n+      Only use this if you're absolutely sure that you found a bug and can reproduce it. For anything else, use: [our Discord server](https://discord.gg/geysermc), [the FAQ](https://github.com/GeyserMC/Geyser/wiki/FAQ) or the [Common Issues](https://github.com/GeyserMC/Geyser/wiki/Common-Issues).\n+- type: textarea\n+  attributes:\n+    label: Describe the bug\n+    description: A clear and concise description of what the bug is.\n+  validations:\n+    required: true\n+- type: textarea\n+  attributes:\n+    label: To Reproduce\n+    description: Steps to reproduce this behaviour\n+    placeholder: |\n+      1. Go to '...'\n+      2. Click on '...'\n+      3. Scroll down to '...'\n+      4. See error\n+  validations:\n+    required: true\n+- type: textarea\n+  attributes:\n+    label: Expected behaviour\n+    description: A clear and concise description of what you expected to happen.\n+  validations:\n+    required: true\n+- type: textarea\n+  attributes:\n+    label: Screenshots / Videos\n+    description: If applicable, add screenshots to help explain your problem.\n+- type: textarea\n+  attributes:\n+    label: Server Version and Plugins\n+    description: |\n+      If you just run Geyser-Spigot, you can leave this area blank as the next section covers this information.\n+      If you're running a multi-server instance or using Geyser Standalone:\n+      *  Give us the exact output from `/version` on all servers involved. Saying \"latest\" does not help us at all.\n+      * Please list all plugins on all servers involved.\n+      If this bug occurs on a server you do not control, please full this in to the best of your knowledge.\n+- type: input\n+  attributes:\n+    label: Geyser Dump\n+    description: If Geyser starts correctly, please also include the link to a dump by using `/geyser dump`. If you're using the Standalone GUI, the option can be found under `Commands` => `Dump`. This provides us information about your server that we can use to debug your issue.\n+- type: input\n+  attributes:\n+    label: Geyser Version\n+    description: What version of Geyser are you running?\n+    placeholder: \"For example: 1.2.0-SNAPSHOT (git-master-2d9baf1)\"\n+  validations:\n+    required: true\n+- type: input\n+  attributes:\n+    label: \"Minecraft: Bedrock Edition Version\"\n+    description: \"What version of Minecraft: Bedrock Edition are you using? Leave empty if the bug happens before you can connect with Minecraft: Bedrock Edition.\"\n+    placeholder: \"For example: 1.16.201\"\n+- type: textarea\n+  attributes:\n+    label: Additional Context\n+    description: Add any other context about the problem here"
  },
  {
    "sha": "a8a5bf95d31be42b81bc729a582eea69ad767b9b",
    "filename": ".github/ISSUE_TEMPLATE/config.yml",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/ISSUE_TEMPLATE/config.yml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/ISSUE_TEMPLATE/config.yml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/ISSUE_TEMPLATE/config.yml?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -1,5 +1,11 @@\n blank_issues_enabled: false\n contact_links:\n-  - name: GeyserMC Discord\n-    url: http://discord.geysermc.org/\n+  - name: Common Issues\n+    url: https://github.com/GeyserMC/Geyser/wiki/Common-Issues\n+    about: Check the common issues to see if you are not alone with that issue and see how you can fix them.\n+  - name: Frequently Asked Questions\n+    url: https://github.com/GeyserMC/Geyser/wiki/FAQ\n+    about: Look at the FAQ page for answers for frequently asked questions.\n+  - name: Get help on the GeyserMC Discord server\n+    url: https://discord.gg/geysermc\n     about: If your issue seems like it could possibly be an easy fix due to configuration, please hop on our Discord."
  },
  {
    "sha": "46653e624ae2c015c81c8b2031be01fe42880fd1",
    "filename": ".github/ISSUE_TEMPLATE/feature_request.md",
    "status": "removed",
    "additions": 0,
    "deletions": 14,
    "changes": 14,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/27777aa5a6463b167dc1677a44fea12ad3f7e8ed/.github/ISSUE_TEMPLATE/feature_request.md",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/27777aa5a6463b167dc1677a44fea12ad3f7e8ed/.github/ISSUE_TEMPLATE/feature_request.md",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/ISSUE_TEMPLATE/feature_request.md?ref=27777aa5a6463b167dc1677a44fea12ad3f7e8ed",
    "patch": "@@ -1,14 +0,0 @@\n----\n-name: Feature request\n-about: Suggest an idea for this project\n-title: ''\n-labels: ''\n-assignees: ''\n-\n----\n-\n-**What feature do you want?**\n-Add a description\n-\n-**Alternatives?**\n-List any alternatives you might have tried"
  },
  {
    "sha": "64ad937a59b3c650d50f0447abd92d3c945d0e41",
    "filename": ".github/ISSUE_TEMPLATE/feature_request.yml",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/ISSUE_TEMPLATE/feature_request.yml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/ISSUE_TEMPLATE/feature_request.yml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/ISSUE_TEMPLATE/feature_request.yml?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -0,0 +1,21 @@\n+name: Feature request\n+about: Suggest an idea for this project\n+labels: \"Feature Request\"\n+body:\n+- type: markdown\n+  attributes:\n+    value: |\n+      Thanks for taking the time to fill out this feature request for Geyser! Fill out the following form to your best ability to help us understand your feature request and greately improve the change of it getting added.\n+      For anything else than a feature request, use: [our Discord server](https://discord.gg/geysermc), [the FAQ](https://github.com/GeyserMC/Geyser/wiki/FAQ) or [the Common Issues](https://github.com/GeyserMC/Geyser/wiki/Common-Issues).\n+- type: textarea\n+  attributes:\n+    label: What feature do you want to see added?\n+    description: A clear and concise description of your feature request.\n+  validations:\n+    required: true\n+- type: textarea\n+  attributes:\n+    label: Are there any alternatives?\n+    description: List any alternatives you might have tried\n+  validations:\n+    required: true\n\\ No newline at end of file"
  },
  {
    "sha": "c2aab0e940ae697f9d28f5bc2d3187cb08908f96",
    "filename": ".github/workflows/buildwithoutrelease.yml",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/workflows/buildwithoutrelease.yml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/workflows/buildwithoutrelease.yml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/workflows/buildwithoutrelease.yml?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -0,0 +1,68 @@\n+name: Geyser Build No Release\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      name:\n+        description: 'Build without Release'\n+        required: true\n+        default: 'Build12'\n+      home:\n+        description: 'location12'\n+        required: false\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+    - uses: actions/cache@v2\n+      with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+    - name: Set up JDK 1.8\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 1.8\n+        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml\n+        settings-path: ${{ github.workspace }} # location for the settings.xml file\n+    - name: submodules-init\n+      uses: snickerbockers/submodules-init@v4\n+\n+    - name: Build with Maven\n+      run: mvn -B -U package -T 2C\n+\n+    - name: Archive artifacts (Geyser Standalone)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+          name: Geyser Standalone\n+          path: bootstrap/standalone/target/Geyser.jar\n+    - name: Archive artifacts (Geyser Spigot)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+          name: Geyser Spigot\n+          path: bootstrap/spigot/target/Geyser-Spigot.jar\n+    - name: Archive artifacts (Geyser BungeeCord)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser BungeeCord\n+        path: bootstrap/bungeecord/target/Geyser-BungeeCord.jar\n+    - name: Archive artifacts (Geyser Sponge)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser Sponge\n+        path: bootstrap/sponge/target/Geyser-Sponge.jar\n+    - name: Archive artifacts (Geyser Velocity)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser Velocity\n+        path: bootstrap/velocity/target/Geyser-Velocity.jar"
  },
  {
    "sha": "7efc3620e71e62b1d50bf5ae63aae87871e59414",
    "filename": ".github/workflows/geyserbuildbranch.yml",
    "status": "added",
    "additions": 134,
    "deletions": 0,
    "changes": 134,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/workflows/geyserbuildbranch.yml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/workflows/geyserbuildbranch.yml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/workflows/geyserbuildbranch.yml?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -0,0 +1,134 @@\n+name: Geyser Build Branch\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      name:\n+        description: 'Build with Release'\n+        required: true\n+        default: 'Build11'\n+      home:\n+        description: 'location11'\n+        required: false\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+    - uses: actions/cache@v2\n+      with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+    - name: Set up JDK 1.8\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 1.8\n+        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml\n+        settings-path: ${{ github.workspace }} # location for the settings.xml file\n+    - name: submodules-init\n+      uses: snickerbockers/submodules-init@v4\n+\n+    - name: Build with Maven\n+      run: mvn -B -U package -T 2C\n+\n+    - name: Archive artifacts (Geyser Standalone)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+          name: Geyser Standalone\n+          path: bootstrap/standalone/target/Geyser.jar\n+    - name: Archive artifacts (Geyser Spigot)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+          name: Geyser Spigot\n+          path: bootstrap/spigot/target/Geyser-Spigot.jar\n+    - name: Archive artifacts (Geyser BungeeCord)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser BungeeCord\n+        path: bootstrap/bungeecord/target/Geyser-BungeeCord.jar\n+    - name: Archive artifacts (Geyser Sponge)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser Sponge\n+        path: bootstrap/sponge/target/Geyser-Sponge.jar\n+    - name: Archive artifacts (Geyser Velocity)\n+      uses: actions/upload-artifact@v2\n+      if: success()\n+      with:\n+        name: Geyser Velocity\n+        path: bootstrap/velocity/target/Geyser-Velocity.jar\n+    \n+    - name: Create Release\n+      id: create_release\n+      uses: actions/create-release@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        tag_name: New-Bleeding_v${{ github.run_number }}\n+        release_name: New-Bleeding_v${{ github.run_number }}\n+        draft: false\n+        prerelease: false\n+    \n+    - name: Upload Release Asset 1\n+      id: upload-release-asset-1\n+      uses: actions/upload-release-asset@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps \n+        asset_path: bootstrap/standalone/target/Geyser.jar\n+        asset_name: Geyser.jar\n+        asset_content_type: application/zip\n+\n+    - name: Upload Release Asset 2\n+      id: upload-release-asset-2\n+      uses: actions/upload-release-asset@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps \n+        asset_path: bootstrap/spigot/target/Geyser-Spigot.jar\n+        asset_name: Geyser-Spigot.jar\n+        asset_content_type: application/zip\n+        \n+    - name: Upload Release Asset 3\n+      id: upload-release-asset-3\n+      uses: actions/upload-release-asset@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps \n+        asset_path: bootstrap/bungeecord/target/Geyser-BungeeCord.jar\n+        asset_name: Geyser-BungeeCord.jar\n+        asset_content_type: application/zip\n+    \n+    - name: Upload Release Asset 4\n+      id: upload-release-asset-4\n+      uses: actions/upload-release-asset@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps \n+        asset_path: bootstrap/sponge/target/Geyser-Sponge.jar\n+        asset_name: Geyser-Sponge.jar\n+        asset_content_type: application/zip\n+    \n+    - name: Upload Release Asset 5\n+      id: upload-release-asset-5\n+      uses: actions/upload-release-asset@v1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps \n+        asset_path: bootstrap/velocity/target/Geyser-Velocity.jar\n+        asset_name: Geyser-Velocity.jar\n+        asset_content_type: application/zip"
  },
  {
    "sha": "a52b00969d21c2dd40ab6d71f2100174802e70f7",
    "filename": ".github/workflows/releaseassets.yml",
    "status": "added",
    "additions": 58,
    "deletions": 0,
    "changes": 58,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/workflows/releaseassets.yml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.github/workflows/releaseassets.yml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.github/workflows/releaseassets.yml?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -0,0 +1,58 @@\n+name: Release Assets\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      name:\n+        description: 'Build Assets'\n+        required: true\n+        default: 'Build10'\n+      home:\n+        description: 'location10'\n+        required: false\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+    - uses: actions/labeler@v2\n+      with:\n+        repo-token: ${{ secrets.GITHUB_TOKEN }}\n+    - uses: actions/cache@v2\n+      with:\n+          path: ~/.m2/repository\n+          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n+          restore-keys: |\n+            ${{ runner.os }}-maven-\n+    - name: Generate settings.xml for Maven Deploy\n+      # You may pin to the exact commit or the version.\n+      # uses: whelk-io/maven-settings-xml-action@f2ce02adb757b1118ab14604d2e8bdaafdb9bf92\n+      uses: whelk-io/maven-settings-xml-action@v14\n+      with:\n+        repositories: '[{ \"id\": \"github\", \"name\": \"GitHub hellohi3654 Apache Maven Packages\", \"url\": \"https://maven.pkg.github.com/hellohi3654/Geyser\", \"releases\": { \"enabled\": \"false\" }, \"snapshots\": { \"enabled\": \"true\" } }]'\n+        servers: '[{ \"id\": \"github\", \"username\": \"hellohi3654\", \"password\": \"${{ secrets.PKEY }}\" }]'\n+        profiles: '[{ \"id\": \"github\" }]'\n+    - name: Set up JDK 1.8\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 1.8\n+        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml\n+        settings-path: ${{ github.workspace }} # location for the settings.xml file\n+    - name: submodules-init\n+      uses: snickerbockers/submodules-init@v4\n+\n+    - name: purge packages\n+      # You may pin to the exact commit or the version.\n+      # uses: MobileheadHolding/github-action-purge-packages@16e2ecc0100c7edfd52652eae2bea7c075666150\n+      uses: MobileheadHolding/github-action-purge-packages@v2.0.1\n+      with:\n+        # number of days the package has to be old to be purged\n+        days-old: 1\n+        # string to be contained in the package name.\n+        package-name-query: 1.2\n+\n+    - name: Build with Maven Deploy\n+      run: mvn javadoc:jar source:jar deploy -DskipTests -T 2C"
  },
  {
    "sha": "e095b86837a4793c23e379d270a070eb4b7ad565",
    "filename": ".gitmodules",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.gitmodules",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/.gitmodules",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/.gitmodules?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -1,6 +1,6 @@\n [submodule \"connector/src/main/resources/mappings\"]\n \tpath = connector/src/main/resources/mappings\n-\turl = https://github.com/GeyserMC/mappings.git\n+\turl = https://github.com/Hellohi3654/mappings.git\n [submodule \"connector/src/main/resources/languages\"]\n \tpath = connector/src/main/resources/languages\n \turl = https://github.com/GeyserMC/languages.git"
  },
  {
    "sha": "527471bae77c8031980f3d60a9d218e142deca86",
    "filename": "CONTRIBUTING.md",
    "status": "modified",
    "additions": 30,
    "deletions": 23,
    "changes": 53,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/CONTRIBUTING.md",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/CONTRIBUTING.md",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/CONTRIBUTING.md?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -11,29 +11,36 @@ Thank for for considering a contribution! Generally, Geyser welcomes PRs from ev\n We have some general style guides that should be applied throughout the code:\n \n ```java\n-\n-private static final AIR_ITEM = 0; // Static item names should be capitalized\n-\n-public Int2IntMap items = new Int2IntOpenHashMap(); // Use the interface as the class type but initialize with the implementation.\n-\n-public int nameWithMultipleWords = 0;\n-\n-/**\n-* Javadoc comment to explain what a function does.\n-*/\n-public void applyStuff() {\n-\tif (condition) {\n-\t\t// Do stuff.\n-\t} else if (anotherCondition) {\n-\t\t// Do something else.\n-\t}\n-\t\n-\tswitch (value) {\n-\t\tcase 0:\n-\t\t\tbreak;\n-\t\tcase 1:\n-\t\t\tbreak:\n-\t}\n+public class LongClassName {\n+    private static final int AIR_ITEM = 0; // Static item names should be capitalized\n+\n+    public Int2IntMap items = new Int2IntOpenHashMap(); // Use the interface as the class type but initialize with the implementation.\n+\n+    public int nameWithMultipleWords = 0;\n+\n+    /**\n+    * Javadoc comment to explain what a function does.\n+    */\n+    @RandomAnnotation(stuff = true, moreStuff = \"might exist\")\n+    public void applyStuff() {\n+        Variable variable = new Variable();\n+        Variable otherVariable = new Variable();\n+\n+        if (condition) {\n+\t        // Do stuff.\n+        } else if (anotherCondition) {\n+\t    \t// Do something else.\n+        }\n+\n+        switch (value) {\n+            case 0:\n+                stuff();\n+                break;\n+            case 1:\n+                differentStuff();\n+                break;\n+        }\n+    }\n }\n ```\n "
  },
  {
    "sha": "933668aaecd70e14959057614c7ec6ea10ecfb63",
    "filename": "README.md",
    "status": "modified",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/README.md",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/README.md",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/README.md?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -1,3 +1,32 @@\n+## I have a server that uses the new-geyser branch\n+\n+- Join the discord if you have any questions or create a issue (https://github.com/Hellohi3654/Geyser/issues)\n+- https://discord.gg/92xQSQnKzG\n+- IP and Port for both Java and Bedrock Players VVV\n+\n+- Bedrock:\n+- IP: play.voltiac.xyz\n+- Port: 19132\n+\n+- Java:\n+- Server Address: play.voltiac.xyz\n+\n+## The new-geyser branch is a combination of many different geyser forks / PRs\n+\n+![Geyser Build Branch](https://github.com/Hellohi3654/Geyser/workflows/Geyser%20Build%20Branch/badge.svg)\n+\n+- Don't message geyser devs if you find a problem\n+- Create a issue on my fork I will try and fix it (https://github.com/Hellohi3654/Geyser/issues)\n+- You can either compile this branch yourself or download the lastest release (https://github.com/Hellohi3654/Geyser/releases)\n+- Here's a list of features this branch includes:\n+* [Allow for crawling and moving in one-block spaces where possible](https://github.com/GeyserMC/Geyser/pull/1814)\n+* [Smooth Pistons](https://github.com/GeyserMC/Geyser/pull/1542)\n+* [2021 World Border](https://github.com/GeyserMC/Geyser/pull/264)\n+* [Native Geyser Extension Support](https://github.com/GeyserMC/Geyser/pull/742)\n+* and more\n+\n+## Also checkout [Server-inventory](https://github.com/Hellohi3654/Geyser/tree/server-inventory-new) and [Floodgate 2.0](https://github.com/Hellohi3654/Geyser/tree/floodgate-2.0-new)\n+\n <img src=\"https://geysermc.org/img/geyser-1760-860.png\" alt=\"Geyser\" width=\"600\"/>\n \n [![forthebadge made-with-java](http://ForTheBadge.com/images/badges/made-with-java.svg)](https://java.com/)\n@@ -55,6 +84,7 @@ The following things can't be fixed because of Bedrock limitations. They might b\n - Custom heads in inventories\n - Clickable links in chat\n - Glowing effect\n+- Custom armor stand poses\n \n ## Compiling\n 1. Clone the repo to your computer"
  },
  {
    "sha": "a6a2a86de76f4dc11d7f483d272306deae745ff4",
    "filename": "bootstrap/pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/pom.xml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/pom.xml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/pom.xml?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -22,7 +22,7 @@\n         </repository>\n         <repository>\n             <id>sponge-repo</id>\n-            <url>https://repo.spongepowered.org/maven</url>\n+            <url>https://repo.spongepowered.org/repository/maven-public/</url>\n         </repository>\n         <repository>\n             <id>bungeecord-repo</id>"
  },
  {
    "sha": "d1cba8aea0c0aaacf9317444d874e326c278c7d2",
    "filename": "bootstrap/spigot/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/spigot/pom.xml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/spigot/pom.xml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/pom.xml?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -30,9 +30,9 @@\n             <scope>provided</scope>\n         </dependency>\n         <dependency>\n-            <groupId>org.geysermc.adapters</groupId>\n+            <groupId>org.geysermc.geyser.adapters</groupId>\n             <artifactId>spigot-all</artifactId>\n-            <version>1.0-SNAPSHOT</version>\n+            <version>1.1-SNAPSHOT</version>\n         </dependency>\n     </dependencies>\n     <build>"
  },
  {
    "sha": "b6ada8c04611af1cc77c4a4901e23caf4b5d9fb6",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotPlugin.java",
    "status": "modified",
    "additions": 15,
    "deletions": 5,
    "changes": 20,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotPlugin.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotPlugin.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/GeyserSpigotPlugin.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -28,7 +28,6 @@\n import com.github.steveice10.mc.protocol.MinecraftConstants;\n import org.bukkit.Bukkit;\n import org.bukkit.plugin.java.JavaPlugin;\n-import org.geysermc.adapters.spigot.SpigotAdapters;\n import org.geysermc.common.PlatformType;\n import org.geysermc.connector.GeyserConnector;\n import org.geysermc.connector.bootstrap.GeyserBootstrap;\n@@ -41,6 +40,7 @@\n import org.geysermc.connector.ping.IGeyserPingPassthrough;\n import org.geysermc.connector.utils.FileUtils;\n import org.geysermc.connector.utils.LanguageUtils;\n+import org.geysermc.geyser.adapters.spigot.SpigotAdapters;\n import org.geysermc.platform.spigot.command.GeyserSpigotCommandExecutor;\n import org.geysermc.platform.spigot.command.GeyserSpigotCommandManager;\n import org.geysermc.platform.spigot.command.SpigotCommandSender;\n@@ -70,6 +70,11 @@\n \n     private GeyserConnector connector;\n \n+    /**\n+     * The Minecraft server version, formatted as <code>1.#.#</code>\n+     */\n+    private String minecraftVersion;\n+\n     @Override\n     public void onEnable() {\n         // This is manually done instead of using Bukkit methods to save the config because otherwise comments get removed\n@@ -119,6 +124,9 @@ public void onEnable() {\n \n         geyserConfig.loadFloodgate(this);\n \n+        // Turn \"(MC: 1.16.4)\" into 1.16.4.\n+        this.minecraftVersion = Bukkit.getServer().getVersion().split(\"\\\\(MC: \")[1].split(\"\\\\)\")[0];\n+\n         this.connector = GeyserConnector.start(PlatformType.SPIGOT, this);\n \n         if (geyserConfig.isLegacyPingPassthrough()) {\n@@ -243,6 +251,11 @@ public BootstrapDumpInfo getDumpInfo() {\n         return new GeyserSpigotDumpInfo();\n     }\n \n+    @Override\n+    public String getMinecraftServerVersion() {\n+        return this.minecraftVersion;\n+    }\n+\n     public boolean isCompatible(String version, String whichVersion) {\n         int[] currentVersion = parseVersion(version);\n         int[] otherVersion = parseVersion(whichVersion);\n@@ -281,10 +294,7 @@ public boolean isCompatible(String version, String whichVersion) {\n      * @return the server version before ViaVersion finishes initializing\n      */\n     public ProtocolVersion getServerProtocolVersion() {\n-        String bukkitVersion = Bukkit.getServer().getVersion();\n-        // Turn \"(MC: 1.16.4)\" into 1.16.4.\n-        String version = bukkitVersion.split(\"\\\\(MC: \")[1].split(\"\\\\)\")[0];\n-        return ProtocolVersion.getClosest(version);\n+        return ProtocolVersion.getClosest(this.minecraftVersion);\n     }\n \n     /**"
  },
  {
    "sha": "2cbec3273cd05f52dc62c5e45617247014a2adc3",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12NativeWorldManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12NativeWorldManager.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12NativeWorldManager.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12NativeWorldManager.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -27,10 +27,10 @@\n \n import org.bukkit.Bukkit;\n import org.bukkit.entity.Player;\n-import org.geysermc.adapters.spigot.SpigotAdapters;\n-import org.geysermc.adapters.spigot.SpigotWorldAdapter;\n import org.geysermc.connector.network.session.GeyserSession;\n import org.geysermc.connector.network.translators.world.block.BlockTranslator;\n+import org.geysermc.geyser.adapters.spigot.SpigotAdapters;\n+import org.geysermc.geyser.adapters.spigot.SpigotWorldAdapter;\n import us.myles.ViaVersion.api.Via;\n import us.myles.ViaVersion.protocols.protocol1_13to1_12_2.storage.BlockStorage;\n "
  },
  {
    "sha": "423156c97382d2f0433468d6efa1bc4daad8f796",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12WorldManager.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12WorldManager.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12WorldManager.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigot1_12WorldManager.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -75,6 +75,10 @@ public int getBlockAt(GeyserSession session, int x, int y, int z) {\n         if (player == null) {\n             return BlockTranslator.JAVA_AIR_ID;\n         }\n+        if (!player.getWorld().isChunkLoaded(x >> 4, z >> 4)) {\n+            // Prevent nasty async errors if a player is loading in\n+            return BlockTranslator.JAVA_AIR_ID;\n+        }\n         // Get block entity storage\n         BlockStorage storage = Via.getManager().getConnection(player.getUniqueId()).get(BlockStorage.class);\n         Block block = player.getWorld().getBlockAt(x, y, z);"
  },
  {
    "sha": "469a38f17f86f8cf99282824d690107e806c1ec2",
    "filename": "bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotNativeWorldManager.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotNativeWorldManager.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotNativeWorldManager.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/spigot/src/main/java/org/geysermc/platform/spigot/world/manager/GeyserSpigotNativeWorldManager.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -27,10 +27,10 @@\n \n import org.bukkit.Bukkit;\n import org.bukkit.entity.Player;\n-import org.geysermc.adapters.spigot.SpigotAdapters;\n-import org.geysermc.adapters.spigot.SpigotWorldAdapter;\n import org.geysermc.connector.network.session.GeyserSession;\n import org.geysermc.connector.network.translators.world.block.BlockTranslator;\n+import org.geysermc.geyser.adapters.spigot.SpigotAdapters;\n+import org.geysermc.geyser.adapters.spigot.SpigotWorldAdapter;\n \n public class GeyserSpigotNativeWorldManager extends GeyserSpigotWorldManager {\n     protected final SpigotWorldAdapter adapter;"
  },
  {
    "sha": "6085e253b00a5b62956e2314ecb16e3e6a675652",
    "filename": "bootstrap/sponge/src/main/java/org/geysermc/platform/sponge/GeyserSpongePlugin.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/sponge/src/main/java/org/geysermc/platform/sponge/GeyserSpongePlugin.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/sponge/src/main/java/org/geysermc/platform/sponge/GeyserSpongePlugin.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/sponge/src/main/java/org/geysermc/platform/sponge/GeyserSpongePlugin.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -102,7 +102,7 @@ public void onEnable() {\n             }\n         }\n \n-        if (geyserConfig.getBedrock().isCloneRemotePort()){\n+        if (geyserConfig.getBedrock().isCloneRemotePort()) {\n             geyserConfig.getBedrock().setPort(geyserConfig.getRemote().getPort());\n         }\n \n@@ -167,4 +167,9 @@ public void onServerStop(GameStoppedEvent event) {\n     public BootstrapDumpInfo getDumpInfo() {\n         return new GeyserSpongeDumpInfo();\n     }\n+\n+    @Override\n+    public String getMinecraftServerVersion() {\n+        return Sponge.getPlatform().getMinecraftVersion().getName();\n+    }\n }"
  },
  {
    "sha": "7b3ddb736052669f073f0f4fca96c688f88b9156",
    "filename": "bootstrap/standalone/src/main/java/org/geysermc/platform/standalone/GeyserStandaloneBootstrap.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/standalone/src/main/java/org/geysermc/platform/standalone/GeyserStandaloneBootstrap.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/standalone/src/main/java/org/geysermc/platform/standalone/GeyserStandaloneBootstrap.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/standalone/src/main/java/org/geysermc/platform/standalone/GeyserStandaloneBootstrap.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -32,6 +32,7 @@\n import com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;\n import lombok.Getter;\n import net.minecrell.terminalconsole.TerminalConsoleAppender;\n+import org.apache.logging.log4j.Level;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.core.Appender;\n import org.apache.logging.log4j.core.Logger;\n@@ -168,11 +169,6 @@ public void onEnable(boolean useGui, String configFilename) {\n         this.onEnable();\n     }\n \n-    public void onEnable(boolean useGui) {\n-        this.useGui = useGui;\n-        this.onEnable();\n-    }\n-\n     @Override\n     public void onEnable() {\n         Logger logger = (Logger) LogManager.getRootLogger();\n@@ -214,6 +210,9 @@ public void onEnable() {\n         }\n         GeyserConfiguration.checkGeyserConfiguration(geyserConfig, geyserLogger);\n \n+        // Allow libraries like Protocol to have their debug information passthrough\n+        logger.get().setLevel(geyserConfig.isDebugMode() ? Level.DEBUG : Level.INFO);\n+\n         connector = GeyserConnector.start(PlatformType.STANDALONE, this);\n         geyserCommandManager = new GeyserCommandManager(connector);\n "
  },
  {
    "sha": "7eeba84bd7c863808ed7fc87164cd52d45546313",
    "filename": "bootstrap/standalone/src/main/java/org/geysermc/platform/standalone/LoopbackUtil.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/standalone/src/main/java/org/geysermc/platform/standalone/LoopbackUtil.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/bootstrap/standalone/src/main/java/org/geysermc/platform/standalone/LoopbackUtil.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/bootstrap/standalone/src/main/java/org/geysermc/platform/standalone/LoopbackUtil.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -55,7 +55,7 @@ public static void checkLoopback(GeyserStandaloneLogger geyserLogger) {\n \n                 if (!result.contains(\"minecraftuwp\")) {\n                     Files.write(Paths.get(System.getenv(\"temp\") + \"/loopback_minecraft.bat\"), loopbackCommand.getBytes(), new OpenOption[0]);\n-                    process = Runtime.getRuntime().exec(startScript);\n+                    Runtime.getRuntime().exec(startScript);\n \n                     geyserLogger.info(ChatColor.AQUA + LanguageUtils.getLocaleStringLog(\"geyser.bootstrap.loopback.added\"));\n                 }"
  },
  {
    "sha": "0c9007f198982febd804325de85fce56e6c8d42f",
    "filename": "connector/pom.xml",
    "status": "modified",
    "additions": 57,
    "deletions": 18,
    "changes": 75,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/pom.xml",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/pom.xml",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/connector/pom.xml?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -10,6 +10,10 @@\n     </parent>\n     <artifactId>connector</artifactId>\n \n+    <properties>\n+        <netty.version>4.1.59.Final</netty.version>\n+    </properties>\n+\n     <dependencies>\n         <dependency>\n             <groupId>org.geysermc</groupId>\n@@ -20,37 +24,36 @@\n         <dependency>\n             <groupId>com.fasterxml.jackson.dataformat</groupId>\n             <artifactId>jackson-dataformat-yaml</artifactId>\n-            <version>2.9.8</version>\n-            <scope>compile</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>com.fasterxml.jackson.datatype</groupId>\n-            <artifactId>jackson-datatype-jsr310</artifactId>\n-            <version>2.9.8</version>\n+            <version>2.10.2</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>\n             <groupId>com.github.CloudburstMC.Protocol</groupId>\n             <artifactId>bedrock-v422</artifactId>\n-            <version>d41b84e86c</version>\n+            <version>294e7e5</version>\n             <scope>compile</scope>\n             <exclusions>\n                 <exclusion>\n                     <groupId>net.sf.trove4j</groupId>\n                     <artifactId>trove</artifactId>\n                 </exclusion>\n-                <!-- Stay on the older version of Network while it's rewritten -->\n                 <exclusion>\n                     <groupId>com.nukkitx.network</groupId>\n                     <artifactId>raknet</artifactId>\n                 </exclusion>\n             </exclusions>\n         </dependency>\n         <dependency>\n-            <groupId>com.nukkitx.network</groupId>\n+            <groupId>com.github.CloudburstMC.Network</groupId>\n             <artifactId>raknet</artifactId>\n-            <version>1.6.20</version>\n+            <version>a94d2dd</version>\n             <scope>compile</scope>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>io.netty</groupId>\n+                    <artifactId>*</artifactId>\n+                </exclusion>\n+            </exclusions>\n         </dependency>\n         <dependency>\n             <groupId>com.nukkitx.fastutil</groupId>\n@@ -121,7 +124,7 @@\n         <dependency>\n             <groupId>com.github.steveice10</groupId>\n             <artifactId>mcprotocollib</artifactId>\n-            <version>26201a4</version>\n+            <version>62721cf</version>\n             <scope>compile</scope>\n             <exclusions>\n                 <exclusion>\n@@ -153,15 +156,51 @@\n         <dependency>\n             <groupId>io.netty</groupId>\n             <artifactId>netty-resolver-dns</artifactId>\n-            <version>4.1.43.Final</version>\n+            <version>${netty.version}</version>\n             <scope>compile</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>io.netty</groupId>\n+            <artifactId>netty-resolver-dns-native-macos</artifactId>\n+            <version>${netty.version}</version>\n+            <scope>compile</scope>\n+            <classifier>osx-x86_64</classifier>\n+        </dependency>\n         <dependency>\n             <groupId>io.netty</groupId>\n             <artifactId>netty-codec-haproxy</artifactId>\n-            <version>4.1.56.Final</version>\n+            <version>${netty.version}</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <!-- Network dependencies we are updating ourselves -->\n+        <dependency>\n+            <groupId>io.netty</groupId>\n+            <artifactId>netty-handler</artifactId>\n+            <version>${netty.version}</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.netty</groupId>\n+            <artifactId>netty-transport-native-epoll</artifactId>\n+            <version>${netty.version}</version>\n+            <scope>compile</scope>\n+            <classifier>linux-x86_64</classifier>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.netty</groupId>\n+            <artifactId>netty-transport-native-epoll</artifactId>\n+            <version>${netty.version}</version>\n+            <scope>compile</scope>\n+            <classifier>linux-aarch_64</classifier>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.netty</groupId>\n+            <artifactId>netty-transport-native-kqueue</artifactId>\n+            <version>${netty.version}</version>\n             <scope>compile</scope>\n+            <classifier>osx-x86_64</classifier>\n         </dependency>\n+        <!-- End -->\n         <dependency>\n             <groupId>org.reflections</groupId>\n             <artifactId>reflections</artifactId>\n@@ -175,25 +214,25 @@\n         <dependency>\n             <groupId>net.kyori</groupId>\n             <artifactId>adventure-api</artifactId>\n-            <version>4.3.0</version>\n+            <version>4.5.0</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>\n             <groupId>net.kyori</groupId>\n             <artifactId>adventure-text-serializer-gson</artifactId>\n-            <version>4.3.0</version>\n+            <version>4.5.0</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>\n             <groupId>net.kyori</groupId>\n             <artifactId>adventure-text-serializer-legacy</artifactId>\n-            <version>4.3.0</version>\n+            <version>4.5.0</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>\n             <groupId>net.kyori</groupId>\n             <artifactId>adventure-text-serializer-gson-legacy-impl</artifactId>\n-            <version>4.3.0</version>\n+            <version>4.5.0</version>\n             <scope>compile</scope>\n         </dependency>\n         <dependency>"
  },
  {
    "sha": "188027a516b7114c6bf596c3c4087940c89ca50d",
    "filename": "connector/src/main/java/org/geysermc/connector/GeyserConnector.java",
    "status": "modified",
    "additions": 26,
    "deletions": 6,
    "changes": 32,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/GeyserConnector.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/GeyserConnector.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/connector/src/main/java/org/geysermc/connector/GeyserConnector.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -29,6 +29,7 @@\n import com.fasterxml.jackson.databind.DeserializationFeature;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.nukkitx.network.raknet.RakNetConstants;\n+import com.nukkitx.network.util.EventLoops;\n import com.nukkitx.protocol.bedrock.BedrockServer;\n import lombok.Getter;\n import lombok.Setter;\n@@ -59,10 +60,7 @@\n import org.geysermc.connector.network.translators.world.block.entity.BlockEntityTranslator;\n import org.geysermc.connector.network.translators.world.block.entity.SkullBlockEntityTranslator;\n import org.geysermc.connector.event.events.geyser.GeyserStopEvent;\n-import org.geysermc.connector.utils.DimensionUtils;\n-import org.geysermc.connector.utils.LanguageUtils;\n-import org.geysermc.connector.utils.LocaleUtils;\n-import org.geysermc.connector.utils.ResourcePack;\n+import org.geysermc.connector.utils.*;\n \n import javax.naming.directory.Attribute;\n import javax.naming.directory.InitialDirContext;\n@@ -83,7 +81,8 @@\n             .enable(JsonParser.Feature.IGNORE_UNDEFINED)\n             .enable(JsonParser.Feature.ALLOW_COMMENTS)\n             .disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)\n-            .enable(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES);\n+            .enable(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES)\n+            .enable(JsonParser.Feature.ALLOW_SINGLE_QUOTES);\n \n     public static final String NAME = \"Geyser\";\n     public static final String GIT_VERSION = \"DEV\"; // A fallback for running in IDEs\n@@ -201,14 +200,21 @@ private GeyserConnector(PlatformType platformType, GeyserBootstrap bootstrap) {\n         remoteServer = new RemoteServer(config.getRemote().getAddress(), remotePort);\n         authType = AuthType.getByName(config.getRemote().getAuthType());\n \n+        CooldownUtils.setShowCooldown(config.isShowCooldown());\n         DimensionUtils.changeBedrockNetherId(config.isAboveBedrockNetherBuilding()); // Apply End dimension ID workaround to Nether\n         SkullBlockEntityTranslator.ALLOW_CUSTOM_SKULLS = config.isAllowCustomSkulls();\n \n         // https://github.com/GeyserMC/Geyser/issues/957\n         RakNetConstants.MAXIMUM_MTU_SIZE = (short) config.getMtu();\n         logger.debug(\"Setting MTU to \" + config.getMtu());\n \n-        bedrockServer = new BedrockServer(new InetSocketAddress(config.getBedrock().getAddress(), config.getBedrock().getPort()));\n+        boolean enableProxyProtocol = config.getBedrock().isEnableProxyProtocol();\n+        bedrockServer = new BedrockServer(\n+                new InetSocketAddress(config.getBedrock().getAddress(), config.getBedrock().getPort()),\n+                1,\n+                EventLoops.commonGroup(),\n+                enableProxyProtocol\n+        );\n         bedrockServer.setHandler(new ConnectorServerEventHandler(this));\n         bedrockServer.bind().whenComplete((avoid, throwable) -> {\n             if (throwable == null) {\n@@ -255,6 +261,20 @@ private GeyserConnector(PlatformType platformType, GeyserBootstrap bootstrap) {\n                 }\n                 return valueMap;\n             }));\n+\n+            String minecraftVersion = bootstrap.getMinecraftServerVersion();\n+            if (minecraftVersion != null) {\n+                Map<String, Map<String, Integer>> versionMap = new HashMap<>();\n+                Map<String, Integer> platformMap = new HashMap<>();\n+                platformMap.put(platformType.getPlatformName(), 1);\n+                versionMap.put(minecraftVersion, platformMap);\n+\n+                metrics.addCustomChart(new Metrics.DrilldownPie(\"minecraftServerVersion\", () -> {\n+                    // By the end, we should return, for example:\n+                    // 1.16.5 => (Spigot, 1)\n+                    return versionMap;\n+                }));\n+            }\n         }\n \n         boolean isGui = false;"
  },
  {
    "sha": "59dc58c2ba3e04af7dd07b8d0754ebe0040583e6",
    "filename": "connector/src/main/java/org/geysermc/connector/bootstrap/GeyserBootstrap.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/bootstrap/GeyserBootstrap.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/bootstrap/GeyserBootstrap.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/connector/src/main/java/org/geysermc/connector/bootstrap/GeyserBootstrap.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -33,6 +33,7 @@\n import org.geysermc.connector.network.translators.world.GeyserWorldManager;\n import org.geysermc.connector.network.translators.world.WorldManager;\n \n+import javax.annotation.Nullable;\n import java.nio.file.Path;\n \n public interface GeyserBootstrap {\n@@ -99,4 +100,18 @@ default WorldManager getWorldManager() {\n      * @return The info about the bootstrap\n      */\n     BootstrapDumpInfo getDumpInfo();\n+\n+    /**\n+     * Returns the Minecraft version currently being used on the server. This should be only be implemented on platforms\n+     * that have direct server access - platforms such as proxies always have to be on their latest version to support\n+     * the newest Minecraft version, but older servers can use ViaVersion to enable newer versions to join.\n+     * <br>\n+     * If used, this should not be null before {@link org.geysermc.connector.GeyserConnector} initialization.\n+     *\n+     * @return the Minecraft version being used on the server, or <code>null</code> if not applicable\n+     */\n+    @Nullable\n+    default String getMinecraftServerVersion() {\n+        return null;\n+    }\n }"
  },
  {
    "sha": "f91da11b590cfad72352a928b38552e3a9db75f6",
    "filename": "connector/src/main/java/org/geysermc/connector/common/main/IGeyserMain.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/common/main/IGeyserMain.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/common/main/IGeyserMain.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/connector/src/main/java/org/geysermc/connector/common/main/IGeyserMain.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -52,7 +52,7 @@ public void displayMessage() {\n      * @return The formatted message\n      */\n     private String createMessage() {\n-        String message = \"\";\n+        StringBuilder message = new StringBuilder();\n \n         InputStream helpStream = IGeyserMain.class.getClassLoader().getResourceAsStream(\"languages/run-help/\" + Locale.getDefault().toString() + \".txt\");\n \n@@ -68,10 +68,10 @@ private String createMessage() {\n             line = line.replace(\"${plugin_type}\", this.getPluginType());\n             line = line.replace(\"${plugin_folder}\", this.getPluginFolder());\n \n-            message += line + \"\\n\";\n+            message.append(line).append(\"\\n\");\n         }\n \n-        return message;\n+        return message.toString();\n     }\n \n     /**"
  },
  {
    "sha": "6052bd2832859254d3ab65b5dfa8152d5d49304b",
    "filename": "connector/src/main/java/org/geysermc/connector/configuration/GeyserConfiguration.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/configuration/GeyserConfiguration.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/configuration/GeyserConfiguration.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/connector/src/main/java/org/geysermc/connector/configuration/GeyserConfiguration.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -27,9 +27,11 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import org.geysermc.connector.GeyserLogger;\n+import org.geysermc.connector.network.CIDRMatcher;\n import org.geysermc.connector.utils.LanguageUtils;\n \n import java.nio.file.Path;\n+import java.util.List;\n import java.util.Map;\n \n public interface GeyserConfiguration {\n@@ -59,6 +61,8 @@\n \n     int getPingPassthroughInterval();\n \n+    boolean isForwardPlayerPing();\n+\n     int getMaxPlayers();\n \n     boolean isDebugMode();\n@@ -104,6 +108,15 @@\n         String getMotd2();\n \n         String getServerName();\n+\n+        boolean isEnableProxyProtocol();\n+\n+        List<String> getProxyProtocolWhitelistedIPs();\n+\n+        /**\n+         * @return Unmodifiable list of {@link CIDRMatcher}s from {@link #getProxyProtocolWhitelistedIPs()}\n+         */\n+        List<CIDRMatcher> getWhitelistedIPsMatchers();\n     }\n \n     interface IRemoteConfiguration {"
  },
  {
    "sha": "70aa3ff5ddc52074caf81a898d8a9dc1bc3cffd2",
    "filename": "connector/src/main/java/org/geysermc/connector/configuration/GeyserJacksonConfiguration.java",
    "status": "modified",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/configuration/GeyserJacksonConfiguration.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/configuration/GeyserJacksonConfiguration.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/connector/src/main/java/org/geysermc/connector/configuration/GeyserJacksonConfiguration.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -25,16 +25,21 @@\n \n package org.geysermc.connector.configuration;\n \n+import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import lombok.Getter;\n import lombok.Setter;\n import org.geysermc.connector.GeyserConnector;\n import org.geysermc.connector.common.serializer.AsteriskSerializer;\n+import org.geysermc.connector.network.CIDRMatcher;\n \n import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n import java.util.UUID;\n+import java.util.stream.Collectors;\n \n @Getter\n @JsonIgnoreProperties(ignoreUnknown = true)\n@@ -74,6 +79,9 @@\n     @JsonProperty(\"ping-passthrough-interval\")\n     private int pingPassthroughInterval = 3;\n \n+    @JsonProperty(\"forward-player-ping\")\n+    private boolean forwardPlayerPing = false;\n+\n     @JsonProperty(\"max-players\")\n     private int maxPlayers = 100;\n \n@@ -119,6 +127,7 @@\n     private MetricsInfo metrics = new MetricsInfo();\n \n     @Getter\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n     public static class BedrockConfiguration implements IBedrockConfiguration {\n         @AsteriskSerializer.Asterisk(sensitive = true)\n         private String address = \"0.0.0.0\";\n@@ -134,9 +143,33 @@\n \n         @JsonProperty(\"server-name\")\n         private String serverName = GeyserConnector.NAME;\n+\n+        @JsonProperty(\"enable-proxy-protocol\")\n+        private boolean enableProxyProtocol = false;\n+\n+        @JsonProperty(\"proxy-protocol-whitelisted-ips\")\n+        private List<String> proxyProtocolWhitelistedIPs = Collections.emptyList();\n+\n+        @JsonIgnore\n+        private List<CIDRMatcher> whitelistedIPsMatchers = null;\n+\n+        @Override\n+        public List<CIDRMatcher> getWhitelistedIPsMatchers() {\n+            // Effective Java, Third Edition; Item 83: Use lazy initialization judiciously\n+            List<CIDRMatcher> matchers = this.whitelistedIPsMatchers;\n+            if (matchers == null) {\n+                synchronized (this) {\n+                    this.whitelistedIPsMatchers = matchers = proxyProtocolWhitelistedIPs.stream()\n+                            .map(CIDRMatcher::new)\n+                            .collect(Collectors.toList());\n+                }\n+            }\n+            return Collections.unmodifiableList(matchers);\n+        }\n     }\n \n     @Getter\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n     public static class RemoteConfiguration implements IRemoteConfiguration {\n         @Setter\n         @AsteriskSerializer.Asterisk(sensitive = true)\n@@ -170,6 +203,7 @@\n     }\n \n     @Getter\n+    @JsonIgnoreProperties(ignoreUnknown = true)\n     public static class MetricsInfo implements IMetricsInfo {\n         private boolean enabled = true;\n "
  },
  {
    "sha": "70dbdf9593336320ff21de45deeefbcf957b3ae6",
    "filename": "connector/src/main/java/org/geysermc/connector/entity/AbstractArrowEntity.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/entity/AbstractArrowEntity.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/entity/AbstractArrowEntity.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/connector/src/main/java/org/geysermc/connector/entity/AbstractArrowEntity.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -35,6 +35,8 @@\n \n     public AbstractArrowEntity(long entityId, long geyserId, EntityType entityType, Vector3f position, Vector3f motion, Vector3f rotation) {\n         super(entityId, geyserId, entityType, position, motion, rotation);\n+\n+        setMotion(motion);\n     }\n \n     @Override\n@@ -47,4 +49,20 @@ public void updateBedrockMetadata(EntityMetadata entityMetadata, GeyserSession s\n \n         super.updateBedrockMetadata(entityMetadata, session);\n     }\n+\n+    @Override\n+    public void setRotation(Vector3f rotation) {\n+        // Ignore the rotation sent by the Java server since the\n+        // Java client calculates the rotation from the motion\n+    }\n+\n+    @Override\n+    public void setMotion(Vector3f motion) {\n+        super.setMotion(motion);\n+\n+        double horizontalSpeed = Math.sqrt(motion.getX() * motion.getX() + motion.getZ() * motion.getZ());\n+        float yaw = (float) Math.toDegrees(Math.atan2(motion.getX(), motion.getZ()));\n+        float pitch = (float) Math.toDegrees(Math.atan2(motion.getY(), horizontalSpeed));\n+        rotation = Vector3f.from(yaw, pitch, yaw);\n+    }\n }"
  },
  {
    "sha": "d80b337488047bc5d1ffc9c85633b301d315c4e3",
    "filename": "connector/src/main/java/org/geysermc/connector/entity/BoatEntity.java",
    "status": "modified",
    "additions": 62,
    "deletions": 24,
    "changes": 86,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/entity/BoatEntity.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/entity/BoatEntity.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/connector/src/main/java/org/geysermc/connector/entity/BoatEntity.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -28,6 +28,7 @@\n import com.github.steveice10.mc.protocol.data.game.entity.metadata.EntityMetadata;\n import com.nukkitx.math.vector.Vector3f;\n import com.nukkitx.protocol.bedrock.data.entity.EntityData;\n+import com.nukkitx.protocol.bedrock.packet.AnimatePacket;\n import org.geysermc.connector.entity.type.EntityType;\n import org.geysermc.connector.network.session.GeyserSession;\n \n@@ -43,7 +44,7 @@\n      */\n     private static final String BUOYANCY_DATA = \"{\\\"apply_gravity\\\":true,\\\"base_buoyancy\\\":1.0,\\\"big_wave_probability\\\":0.02999999932944775,\" +\n             \"\\\"big_wave_speed\\\":10.0,\\\"drag_down_on_buoyancy_removed\\\":0.0,\\\"liquid_blocks\\\":[\\\"minecraft:water\\\",\" +\n-            \"\\\"minecraft:flowing_water\\\"],\\\"simulate_waves\\\":false}}\";\n+            \"\\\"minecraft:flowing_water\\\"],\\\"simulate_waves\\\":false}\";\n \n     private boolean isPaddlingLeft;\n     private float paddleTimeLeft;\n@@ -67,6 +68,13 @@ public void moveAbsolute(GeyserSession session, Vector3f position, Vector3f rota\n         super.moveAbsolute(session, position.add(0d, this.entityType.getOffset(), 0d), Vector3f.from(rotation.getX() + 90, 0, rotation.getX() + 90), isOnGround, teleported);\n     }\n \n+    /**\n+     * Move the boat without making the adjustments needed to translate from Java\n+     */\n+    public void moveAbsoluteWithoutAdjustments(GeyserSession session, Vector3f position, Vector3f rotation, boolean isOnGround, boolean teleported) {\n+        super.moveAbsolute(session, position, Vector3f.from(rotation.getX(), 0, rotation.getX()), isOnGround, teleported);\n+    }\n+\n     @Override\n     public void moveRelative(GeyserSession session, double relX, double relY, double relZ, Vector3f rotation, boolean isOnGround) {\n         super.moveRelative(session, relX, relY, relZ, Vector3f.from(rotation.getX(), 0, rotation.getX()), isOnGround);\n@@ -105,27 +113,38 @@ public void updateBedrockMetadata(EntityMetadata entityMetadata, GeyserSession s\n             metadata.put(EntityData.VARIANT, entityMetadata.getValue());\n         } else if (entityMetadata.getId() == 11) {\n             isPaddlingLeft = (boolean) entityMetadata.getValue();\n-            if (!isPaddlingLeft) {\n-                metadata.put(EntityData.ROW_TIME_LEFT, 0f);\n-            }\n-            else {\n+            if (isPaddlingLeft) {\n                 // Java sends simply \"true\" and \"false\" (is_paddling_left), Bedrock keeps sending packets as you're rowing\n                 // This is an asynchronous method that emulates Bedrock rowing until \"false\" is sent.\n                 paddleTimeLeft = 0f;\n-                session.getConnector().getGeneralThreadPool().execute(() ->\n-                        updateLeftPaddle(session, entityMetadata)\n-                );\n+                if (!this.passengers.isEmpty()) {\n+                    // Get the entity by the first stored passenger and convey motion in this manner\n+                    Entity entity = session.getEntityCache().getEntityByJavaId(this.passengers.iterator().nextLong());\n+                    if (entity != null) {\n+                        session.getConnector().getGeneralThreadPool().execute(() ->\n+                                updateLeftPaddle(session, entity)\n+                        );\n+                    }\n+                }\n+            } else {\n+                // Indicate that the row position should be reset\n+                metadata.put(EntityData.ROW_TIME_LEFT, 0.0f);\n             }\n         }\n         else if (entityMetadata.getId() == 12) {\n             isPaddlingRight = (boolean) entityMetadata.getValue();\n-            if (!isPaddlingRight) {\n-                metadata.put(EntityData.ROW_TIME_RIGHT, 0f);\n-            } else {\n+            if (isPaddlingRight) {\n                 paddleTimeRight = 0f;\n-                session.getConnector().getGeneralThreadPool().execute(() ->\n-                        updateRightPaddle(session, entityMetadata)\n-                );\n+                if (!this.passengers.isEmpty()) {\n+                    Entity entity = session.getEntityCache().getEntityByJavaId(this.passengers.iterator().nextLong());\n+                    if (entity != null) {\n+                        session.getConnector().getGeneralThreadPool().execute(() ->\n+                                updateRightPaddle(session, entity)\n+                        );\n+                    }\n+                }\n+            } else {\n+                metadata.put(EntityData.ROW_TIME_RIGHT, 0.0f);\n             }\n         } else if (entityMetadata.getId() == 13) {\n             // Possibly - I don't think this does anything?\n@@ -135,27 +154,46 @@ else if (entityMetadata.getId() == 12) {\n         super.updateBedrockMetadata(entityMetadata, session);\n     }\n \n-    public void updateLeftPaddle(GeyserSession session, EntityMetadata entityMetadata) {\n+    @Override\n+    public void updateBedrockMetadata(GeyserSession session) {\n+        super.updateBedrockMetadata(session);\n+\n+        // As these indicate to reset rowing, remove them until it is time to send them out again.\n+        metadata.remove(EntityData.ROW_TIME_LEFT);\n+        metadata.remove(EntityData.ROW_TIME_RIGHT);\n+    }\n+\n+    private void updateLeftPaddle(GeyserSession session, Entity rower) {\n         if (isPaddlingLeft) {\n             paddleTimeLeft += ROWING_SPEED;\n-            metadata.put(EntityData.ROW_TIME_LEFT, paddleTimeLeft);\n-            super.updateBedrockMetadata(entityMetadata, session);\n+            sendAnimationPacket(session, rower, AnimatePacket.Action.ROW_LEFT, paddleTimeLeft);\n+\n             session.getConnector().getGeneralThreadPool().schedule(() ->\n-                    updateLeftPaddle(session, entityMetadata),\n+                    updateLeftPaddle(session, rower),\n                     100,\n                     TimeUnit.MILLISECONDS\n             );\n-        }}\n+        }\n+    }\n \n-    public void updateRightPaddle(GeyserSession session, EntityMetadata entityMetadata) {\n+    private void updateRightPaddle(GeyserSession session, Entity rower) {\n         if (isPaddlingRight) {\n             paddleTimeRight += ROWING_SPEED;\n-            metadata.put(EntityData.ROW_TIME_RIGHT, paddleTimeRight);\n-            super.updateBedrockMetadata(entityMetadata, session);\n+            sendAnimationPacket(session, rower, AnimatePacket.Action.ROW_RIGHT, paddleTimeRight);\n+\n             session.getConnector().getGeneralThreadPool().schedule(() ->\n-                            updateRightPaddle(session, entityMetadata),\n+                            updateRightPaddle(session, rower),\n                     100,\n                     TimeUnit.MILLISECONDS\n             );\n-        }}\n+        }\n+    }\n+\n+    private void sendAnimationPacket(GeyserSession session, Entity rower, AnimatePacket.Action action, float rowTime) {\n+        AnimatePacket packet = new AnimatePacket();\n+        packet.setRuntimeEntityId(rower.getGeyserId());\n+        packet.setAction(action);\n+        packet.setRowingTime(rowTime);\n+        session.sendUpstreamPacket(packet);\n+    }\n }"
  },
  {
    "sha": "f1d0a852edde9eb7b4c85498c0ce5e5e5f647813",
    "filename": "connector/src/main/java/org/geysermc/connector/entity/Entity.java",
    "status": "modified",
    "additions": 36,
    "deletions": 20,
    "changes": 56,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/entity/Entity.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/entity/Entity.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/connector/src/main/java/org/geysermc/connector/entity/Entity.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -270,16 +270,12 @@ public void updateBedrockMetadata(EntityMetadata entityMetadata, GeyserSession s\n                     metadata.getFlags().setFlag(EntityFlag.ON_FIRE, ((xd & 0x01) == 0x01) && !metadata.getFlags().getFlag(EntityFlag.FIRE_IMMUNE)); // Otherwise immune entities sometimes flicker onfire\n                     metadata.getFlags().setFlag(EntityFlag.SNEAKING, (xd & 0x02) == 0x02);\n                     metadata.getFlags().setFlag(EntityFlag.SPRINTING, (xd & 0x08) == 0x08);\n-                    metadata.getFlags().setFlag(EntityFlag.SWIMMING, ((xd & 0x10) == 0x10) && metadata.getFlags().getFlag(EntityFlag.SPRINTING)); // Otherwise swimming is enabled on older servers\n+                    // Swimming is ignored here and instead we rely on the pose\n                     metadata.getFlags().setFlag(EntityFlag.GLIDING, (xd & 0x80) == 0x80);\n \n-                    if ((xd & 0x20) == 0x20) {\n-                        // Armour stands are handled in their own class\n-                        if (!this.is(ArmorStandEntity.class)) {\n-                            metadata.getFlags().setFlag(EntityFlag.INVISIBLE, true);\n-                        }\n-                    } else {\n-                        metadata.getFlags().setFlag(EntityFlag.INVISIBLE, false);\n+                    // Armour stands are handled in their own class\n+                    if (!this.is(ArmorStandEntity.class)) {\n+                        metadata.getFlags().setFlag(EntityFlag.INVISIBLE, (xd & 0x20) == 0x20);\n                     }\n \n                     // Shield code\n@@ -330,19 +326,39 @@ public void updateBedrockMetadata(EntityMetadata entityMetadata, GeyserSession s\n             case 5: // no gravity\n                 metadata.getFlags().setFlag(EntityFlag.HAS_GRAVITY, !(boolean) entityMetadata.getValue());\n                 break;\n-            case 6: // Pose change\n-                if (entityMetadata.getValue().equals(Pose.SLEEPING)) {\n-                    metadata.getFlags().setFlag(EntityFlag.SLEEPING, true);\n-                    // Has to be a byte or it does not work\n-                    metadata.put(EntityData.PLAYER_FLAGS, (byte) 2);\n-                    metadata.put(EntityData.BOUNDING_BOX_WIDTH, 0.2f);\n-                    metadata.put(EntityData.BOUNDING_BOX_HEIGHT, 0.2f);\n-                } else if (metadata.getFlags().getFlag(EntityFlag.SLEEPING)) {\n-                    metadata.getFlags().setFlag(EntityFlag.SLEEPING, false);\n-                    metadata.put(EntityData.BOUNDING_BOX_WIDTH, getEntityType().getWidth());\n-                    metadata.put(EntityData.BOUNDING_BOX_HEIGHT, getEntityType().getHeight());\n-                    metadata.put(EntityData.PLAYER_FLAGS, (byte) 0);\n+            case 6: // Pose change - typically used for bounding box and not animation\n+                Pose pose = (Pose) entityMetadata.getValue();\n+\n+                metadata.getFlags().setFlag(EntityFlag.SLEEPING, pose.equals(Pose.SLEEPING));\n+                // Triggered when crawling\n+                metadata.getFlags().setFlag(EntityFlag.SWIMMING, pose.equals(Pose.SWIMMING));\n+                // Has to be a byte or it does not work\n+                metadata.put(EntityData.PLAYER_FLAGS, pose.equals(Pose.SLEEPING) ? (byte) 2 : (byte) 0);\n+                float width = entityType.getWidth();\n+                float height = entityType.getHeight();\n+                switch (pose) {\n+                    case SLEEPING:\n+                        if (this instanceof LivingEntity) {\n+                            width = 0.2f;\n+                            height = 0.2f;\n+                        }\n+                        break;\n+                    case SNEAKING:\n+                        if (entityType == EntityType.PLAYER) {\n+                            height = 1.5f;\n+                        }\n+                        break;\n+                    case FALL_FLYING:\n+                    case SPIN_ATTACK:\n+                    case SWIMMING:\n+                        if (entityType == EntityType.PLAYER) {\n+                            // Seems like this is only cared about for players; nothing else\n+                            height = 0.6f;\n+                        }\n+                        break;\n                 }\n+                metadata.put(EntityData.BOUNDING_BOX_WIDTH, width);\n+                metadata.put(EntityData.BOUNDING_BOX_HEIGHT, height);\n                 break;\n         }\n     }"
  },
  {
    "sha": "06e56ad03cdc1fdbbee259385e6cfed70a14b292",
    "filename": "connector/src/main/java/org/geysermc/connector/entity/FishingHookEntity.java",
    "status": "modified",
    "additions": 141,
    "deletions": 17,
    "changes": 158,
    "blob_url": "https://github.com/Fluhf-Devs/Geyser/blob/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/entity/FishingHookEntity.java",
    "raw_url": "https://github.com/Fluhf-Devs/Geyser/raw/8f8029b6c6640845aa9704c8936dfc89fa54e3c2/connector/src/main/java/org/geysermc/connector/entity/FishingHookEntity.java",
    "contents_url": "https://api.github.com/repos/Fluhf-Devs/Geyser/contents/connector/src/main/java/org/geysermc/connector/entity/FishingHookEntity.java?ref=8f8029b6c6640845aa9704c8936dfc89fa54e3c2",
    "patch": "@@ -26,43 +26,167 @@\n package org.geysermc.connector.entity;\n \n import com.github.steveice10.mc.protocol.data.game.entity.metadata.EntityMetadata;\n-import com.github.steveice10.mc.protocol.data.game.entity.object.ProjectileData;\n import com.nukkitx.math.vector.Vector3f;\n+import com.nukkitx.math.vector.Vector3i;\n import com.nukkitx.protocol.bedrock.data.entity.EntityData;\n-import org.geysermc.connector.GeyserConnector;\n+import com.nukkitx.protocol.bedrock.data.entity.EntityFlag;\n+import com.nukkitx.protocol.bedrock.packet.PlaySoundPacket;\n+import org.geysermc.connector.entity.player.PlayerEntity;\n import org.geysermc.connector.entity.type.EntityType;\n import org.geysermc.connector.network.session.GeyserSession;\n+import org.geysermc.connector.network.translators.collision.BoundingBox;\n+import org.geysermc.connector.network.translators.collision.CollisionManager;\n+import org.geysermc.connector.network.translators.collision.CollisionTranslator;\n+import org.geysermc.connector.network.translators.collision.translators.BlockCollision;\n+import org.geysermc.connector.network.translators.world.block.BlockStateValues;\n+import org.geysermc.connector.network.translators.world.block.BlockTranslator;\n \n-public class FishingHookEntity extends Entity {\n-    public FishingHookEntity(long entityId, long geyserId, EntityType entityType, Vector3f position, Vector3f motion, Vector3f rotation, ProjectileData data) {\n+import java.util.List;\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+public class FishingHookEntity extends ThrowableEntity {\n+\n+    private boolean hooked = false;\n+\n+    private final BoundingBox boundingBox;\n+\n+    private boolean inWater = false;\n+\n+    public FishingHookEntity(long entityId, long geyserId, EntityType entityType, Vector3f position, Vector3f motion, Vector3f rotation, PlayerEntity owner) {\n         super(entityId, geyserId, entityType, position, motion, rotation);\n \n-        for (GeyserSession session : GeyserConnector.getInstance().getPlayers()) {\n-            Entity entity = session.getEntityCache().getEntityByJavaId(data.getOwnerId());\n-            if (entity == null && session.getPlayerEntity().getEntityId() == data.getOwnerId()) {\n-                entity = session.getPlayerEntity();\n-            }\n+        this.boundingBox = new BoundingBox(0.125, 0.125, 0.125, 0.25, 0.25, 0.25);\n \n-            if (entity != null) {\n-                this.metadata.put(EntityData.OWNER_EID, entity.getGeyserId());\n-                return;\n-            }\n-        }\n+        // In Java, the splash sound depends on the entity's velocity, but in Bedrock the volume doesn't change.\n+        // This splash can be confused with the sound from catching a fish. This silences the splash from Bedrock,\n+        // so that it can be handled by moveAbsoluteImmediate.\n+        this.metadata.putFloat(EntityData.BOUNDING_BOX_HEIGHT, 128);\n+\n+        this.metadata.put(EntityData.OWNER_EID, owner.getGeyserId());\n     }\n \n     @Override\n     public void updateBedrockMetadata(EntityMetadata entityMetadata, GeyserSession session) {\n-        if (entityMetadata.getId() == 7) {\n-            Entity entity = session.getEntityCache().getEntityByJavaId((Integer) entityMetadata.getValue() - 1);\n-            if (entity == null && session.getPlayerEntity().getEntityId() == (Integer) entityMetadata.getValue() - 1) {\n+        if (entityMetadata.getId() == 7) { // Hooked entity\n+            int hookedEntityId = (int) entityMetadata.getValue() - 1;\n+            Entity entity = session.getEntityCache().getEntityByJavaId(hookedEntityId);\n+            if (entity == null && session.getPlayerEntity().getEntityId() == hookedEntityId) {\n                 entity = session.getPlayerEntity();\n             }\n \n             if (entity != null) {\n                 metadata.put(EntityData.TARGET_EID, entity.getGeyserId());\n+                hooked = true;\n+            } else {\n+                hooked = false;\n             }\n         }\n \n         super.updateBedrockMetadata(entityMetadata, session);\n     }\n+\n+    @Override\n+    protected void moveAbsoluteImmediate(GeyserSession session, Vector3f position, Vector3f rotation, boolean isOnGround, boolean teleported) {\n+        boundingBox.setMiddleX(position.getX());\n+        boundingBox.setMiddleY(position.getY() + boundingBox.getSizeY() / 2);\n+        boundingBox.setMiddleZ(position.getZ());\n+\n+        CollisionManager collisionManager = session.getCollisionManager();\n+        List<Vector3i> collidableBlocks = collisionManager.getCollidableBlocks(boundingBox);\n+        boolean touchingWater = false;\n+        boolean collided = false;\n+        for (Vector3i blockPos : collidableBlocks) {\n+            if (0 <= blockPos.getY() && blockPos.getY() <= 255) {\n+                int blockID = session.getConnector().getWorldManager().getBlockAt(session, blockPos);\n+                BlockCollision blockCollision = CollisionTranslator.getCollision(blockID, blockPos.getX(), blockPos.getY(), blockPos.getZ());\n+                if (blockCollision != null && blockCollision.checkIntersection(boundingBox)) {\n+                    // TODO Push bounding box out of collision to improve movement\n+                    collided = true;\n+                }\n+\n+                int waterLevel = BlockStateValues.getWaterLevel(blockID);\n+                if (BlockTranslator.isWaterlogged(blockID)) {\n+                    waterLevel = 0;\n+                }\n+                if (waterLevel >= 0) {\n+                    double waterMaxY = blockPos.getY() + 1 - (waterLevel + 1) / 9.0;\n+                    // Falling water is a full block\n+                    if (waterLevel >= 8) {\n+                        waterMaxY = blockPos.getY() + 1;\n+                    }\n+                    if (position.getY() <= waterMaxY) {\n+                        touchingWater = true;\n+                    }\n+                }\n+            }\n+        }\n+\n+        if (!inWater && touchingWater) {\n+            sendSplashSound(session);\n+        }\n+        inWater = touchingWater;\n+\n+        if (!collided) {\n+            super.moveAbsoluteImmediate(session, position, rotation, isOnGround, teleported);\n+        } else {\n+            super.moveAbsoluteImmediate(session, this.position, rotation, true, true);\n+        }\n+    }\n+\n+    private void sendSplashSound(GeyserSession session) {\n+        if (!metadata.getFlags().getFlag(EntityFlag.SILENT)) {\n+            float volume = (float) (0.2f * Math.sqrt(0.2 * (motion.getX() * motion.getX() + motion.getZ() * motion.getZ()) + motion.getY() * motion.getY()));\n+            if (volume > 1) {\n+                volume = 1;\n+            }\n+            PlaySoundPacket playSoundPacket = new PlaySoundPacket();\n+            playSoundPacket.setSound(\"random.splash\");\n+            playSoundPacket.setPosition(position);\n+            playSoundPacket.setVolume(volume);\n+            playSoundPacket.setPitch(1f + ThreadLocalRandom.current().nextFloat() * 0.3f);\n+            session.sendUpstreamPacket(playSoundPacket);\n+        }\n+    }\n+\n+    @Override\n+    public void tick(GeyserSession session) {\n+        if (hooked || !isInAir(session) && !isInWater(session) || isOnGround()) {\n+            motion = Vector3f.ZERO;\n+            return;\n+        }\n+        float gravity = getGravity(session);\n+        motion = motion.down(gravity);\n+\n+        moveAbsoluteImmediate(session, position.add(motion), rotation, onGround, false);\n+\n+        float drag = getDrag(session);\n+        motion = motion.mul(drag);\n+    }\n+\n+    @Override\n+    protected float getGravity(GeyserSession session) {\n+        if (!isInWater(session) && !onGround) {\n+            return 0.03f;\n+        }\n+        return 0;\n+    }\n+\n+    /**\n+     * @param session the session of the Bedrock client.\n+     * @return true if this entity is currently in air.\n+     */\n+    protected boolean isInAir(GeyserSession session) {\n+        if (session.getConnector().getConfig().isCacheChunks()) {\n+            if (0 <= position.getFloorY() && position.getFloorY() <= 255) {\n+                int block = session.getConnector().getWorldManager().getBlockAt(session, position.toInt());\n+                return block == BlockTranslator.JAVA_AIR_ID;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    protected float getDrag(GeyserSession session) {\n+        return 0.92f;\n+    }\n }"
  }
]
