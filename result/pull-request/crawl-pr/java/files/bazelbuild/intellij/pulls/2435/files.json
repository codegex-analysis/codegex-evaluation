[
  {
    "sha": "45187fb6b466ade5789f3d526f625a3a9d1a0d60",
    "filename": "base/src/com/google/idea/blaze/base/run/producers/AllInPackageTestContextProvider.java",
    "status": "modified",
    "additions": 37,
    "deletions": 7,
    "changes": 44,
    "blob_url": "https://github.com/bazelbuild/intellij/blob/37f2d8089f9a8a7f91dd1f165fb9976043166af8/base/src/com/google/idea/blaze/base/run/producers/AllInPackageTestContextProvider.java",
    "raw_url": "https://github.com/bazelbuild/intellij/raw/37f2d8089f9a8a7f91dd1f165fb9976043166af8/base/src/com/google/idea/blaze/base/run/producers/AllInPackageTestContextProvider.java",
    "contents_url": "https://api.github.com/repos/bazelbuild/intellij/contents/base/src/com/google/idea/blaze/base/run/producers/AllInPackageTestContextProvider.java?ref=37f2d8089f9a8a7f91dd1f165fb9976043166af8",
    "patch": "@@ -15,15 +15,17 @@\n  */\n package com.google.idea.blaze.base.run.producers;\n \n+import com.google.idea.blaze.base.bazel.BuildSystemProvider;\n import com.google.idea.blaze.base.command.BlazeCommandName;\n-import com.google.idea.blaze.base.lang.buildfile.search.BlazePackage;\n import com.google.idea.blaze.base.model.primitives.TargetExpression;\n import com.google.idea.blaze.base.model.primitives.WorkspacePath;\n import com.google.idea.blaze.base.model.primitives.WorkspaceRoot;\n+import com.google.idea.blaze.base.settings.Blaze;\n import com.intellij.execution.actions.ConfigurationContext;\n import com.intellij.openapi.vfs.VirtualFile;\n import com.intellij.psi.PsiDirectory;\n import com.intellij.psi.PsiElement;\n+import com.intellij.psi.PsiFile;\n import java.io.File;\n import javax.annotation.Nullable;\n \n@@ -34,25 +36,53 @@\n   @Override\n   public RunConfigurationContext getTestContext(ConfigurationContext context) {\n     PsiElement location = context.getPsiLocation();\n-    if (!(location instanceof PsiDirectory)) {\n+    boolean recursive = false;\n+    PsiDirectory dir = null;\n+\n+    // A BUILD file is selected.\n+    if (location instanceof PsiFile) {\n+      PsiFile file = (PsiFile) location;\n+      if (!isBuildFile(context, file)) {\n+        return null;\n+      }\n+      dir = file.getParent();\n+      recursive = false;\n+    }\n+\n+    // A directory is selected.\n+    if (location instanceof PsiDirectory) {\n+      dir = (PsiDirectory) location;\n+      recursive = true;\n+    }\n+\n+    if (dir == null) {\n       return null;\n     }\n+\n     WorkspaceRoot root = WorkspaceRoot.fromProject(context.getProject());\n-    PsiDirectory dir = (PsiDirectory) location;\n     if (!isInWorkspace(root, dir)) {\n       return null;\n     }\n-    // only check if the directory itself is a blaze package\n-    // TODO(brendandouglas): otherwise check off the EDT, and return PendingRunConfigurationContext?\n-    return BlazePackage.isBlazePackage(dir) ? fromDirectory(root, dir) : null;\n+\n+    return fromDirectory(root, dir, recursive);\n+  }\n+\n+  private static boolean isBuildFile(ConfigurationContext context, PsiFile file) {\n+    BuildSystemProvider buildSystemProvider = Blaze.getBuildSystemProvider(context.getProject());\n+    return buildSystemProvider.isBuildFile(file.getName());\n   }\n \n   @Nullable\n-  private static RunConfigurationContext fromDirectory(WorkspaceRoot root, PsiDirectory dir) {\n+  private static RunConfigurationContext fromDirectory(\n+      WorkspaceRoot root, PsiDirectory dir, boolean recursive) {\n     WorkspacePath packagePath = getWorkspaceRelativePath(root, dir.getVirtualFile());\n     if (packagePath == null) {\n       return null;\n     }\n+    if (recursive) {\n+      return RunConfigurationContext.fromKnownTarget(\n+          TargetExpression.allFromPackageRecursive(packagePath), BlazeCommandName.TEST, dir);\n+    }\n     return RunConfigurationContext.fromKnownTarget(\n         TargetExpression.allFromPackageNonRecursive(packagePath), BlazeCommandName.TEST, dir);\n   }"
  },
  {
    "sha": "a805b829ddb7db7b71dddf5a97e5ab1bbc496ff4",
    "filename": "base/tests/integrationtests/com/google/idea/blaze/base/run/producer/AllInPackageTestContextProviderTest.java",
    "status": "modified",
    "additions": 15,
    "deletions": 8,
    "changes": 23,
    "blob_url": "https://github.com/bazelbuild/intellij/blob/37f2d8089f9a8a7f91dd1f165fb9976043166af8/base/tests/integrationtests/com/google/idea/blaze/base/run/producer/AllInPackageTestContextProviderTest.java",
    "raw_url": "https://github.com/bazelbuild/intellij/raw/37f2d8089f9a8a7f91dd1f165fb9976043166af8/base/tests/integrationtests/com/google/idea/blaze/base/run/producer/AllInPackageTestContextProviderTest.java",
    "contents_url": "https://api.github.com/repos/bazelbuild/intellij/contents/base/tests/integrationtests/com/google/idea/blaze/base/run/producer/AllInPackageTestContextProviderTest.java?ref=37f2d8089f9a8a7f91dd1f165fb9976043166af8",
    "patch": "@@ -33,6 +33,7 @@\n import com.intellij.execution.actions.ConfigurationContext;\n import com.intellij.execution.actions.ConfigurationFromContext;\n import com.intellij.psi.PsiDirectory;\n+import com.intellij.psi.PsiFile;\n import java.util.List;\n import org.junit.Before;\n import org.junit.Test;\n@@ -67,15 +68,15 @@ protected void setProjectView(String... contents) {\n   }\n \n   @Test\n-  public void testProducedFromPsiDirectory() {\n+  public void testProducedFromBuildFile() {\n     setProjectView(\n         \"directories:\", \"  java/com/google/test\", \"targets:\", \"  //java/com/google/test:lib\");\n-    PsiDirectory directory =\n-        workspace.createPsiDirectory(new WorkspacePath(\"java/com/google/test\"));\n-    workspace.createPsiFile(\n-        new WorkspacePath(\"java/com/google/test/BUILD\"), \"java_test(name='unit_tests'\");\n \n-    ConfigurationContext context = createContextFromPsi(directory);\n+    PsiFile buildFile =\n+        workspace.createPsiFile(\n+            new WorkspacePath(\"java/com/google/test/BUILD\"), \"java_test(name='unit_tests'\");\n+\n+    ConfigurationContext context = createContextFromPsi(buildFile);\n     List<ConfigurationFromContext> configurations = context.getConfigurationsFromContext();\n     assertThat(configurations).hasSize(1);\n \n@@ -91,14 +92,20 @@ public void testProducedFromPsiDirectory() {\n   }\n \n   @Test\n-  public void testDirectoryWithoutBlazePackageChildIsIgnored() {\n+  public void testProducedFromPsiDirectory() {\n     setProjectView(\"directories:\", \"  java/com/google/test\");\n     PsiDirectory directory =\n         workspace.createPsiDirectory(new WorkspacePath(\"java/com/google/test\"));\n \n     ConfigurationContext context = createContextFromPsi(directory);\n \n     TestContextRunConfigurationProducer producer = new TestContextRunConfigurationProducer();\n-    assertThat(producer.createConfigurationFromContext(context)).isNull();\n+    BlazeCommandRunConfiguration config =\n+        (BlazeCommandRunConfiguration)\n+            producer.createConfigurationFromContext(context).getConfiguration();\n+\n+    assertThat(config.getTargets())\n+        .containsExactly(TargetExpression.fromStringSafe(\"//java/com/google/test/...:all\"));\n+    assertThat(getCommandType(config)).isEqualTo(BlazeCommandName.TEST);\n   }\n }"
  }
]
