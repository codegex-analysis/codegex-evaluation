[
  {
    "sha": "19c5fc0957d462421f5ec45307d587b5dbc5b492",
    "filename": "org.envirocar.app/src/org/envirocar/app/handler/BluetoothHandler.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/enviroCar/enviroCar-app/blob/714aab746fc5c2cf2157200afa6efc0d7b608ae7/org.envirocar.app/src/org/envirocar/app/handler/BluetoothHandler.java",
    "raw_url": "https://github.com/enviroCar/enviroCar-app/raw/714aab746fc5c2cf2157200afa6efc0d7b608ae7/org.envirocar.app/src/org/envirocar/app/handler/BluetoothHandler.java",
    "contents_url": "https://api.github.com/repos/enviroCar/enviroCar-app/contents/org.envirocar.app/src/org/envirocar/app/handler/BluetoothHandler.java?ref=714aab746fc5c2cf2157200afa6efc0d7b608ae7",
    "patch": "@@ -26,7 +26,9 @@\n import android.content.Context;\n import android.content.Intent;\n import android.content.IntentFilter;\n+import android.util.Log;\n import android.util.Pair;\n+import android.widget.Toast;\n \n import com.google.common.base.Preconditions;\n import com.squareup.otto.Bus;\n@@ -62,6 +64,7 @@\n @Singleton\n public class BluetoothHandler {\n     private static final Logger LOGGER = Logger.getLogger(BluetoothHandler.class);\n+    private static final String BLUETOOTH_TAG = \"BluetoothHandler\";\n \n \n     private final Context context;\n@@ -463,7 +466,13 @@ public void stopBluetoothDeviceDiscovery() {\n      * @return the set of already paired Bluetooth devices.\n      */\n     public Set<BluetoothDevice> getPairedBluetoothDevices() {\n-        return mBluetoothAdapter.getBondedDevices();\n+        try{\n+            return mBluetoothAdapter.getBondedDevices();\n+        }\n+        catch (Exception e){\n+            Log.e(BLUETOOTH_TAG, \"getPairedBluetoothDevices: \" + e);\n+        }\n+        return null;\n     }\n \n     public boolean isAutoconnecting() {"
  },
  {
    "sha": "111ba0c0300c2f0c672e96ed989a9b3759034889",
    "filename": "org.envirocar.app/src/org/envirocar/app/interactor/ValidateAcceptedTerms.java",
    "status": "modified",
    "additions": 21,
    "deletions": 15,
    "changes": 36,
    "blob_url": "https://github.com/enviroCar/enviroCar-app/blob/714aab746fc5c2cf2157200afa6efc0d7b608ae7/org.envirocar.app/src/org/envirocar/app/interactor/ValidateAcceptedTerms.java",
    "raw_url": "https://github.com/enviroCar/enviroCar-app/raw/714aab746fc5c2cf2157200afa6efc0d7b608ae7/org.envirocar.app/src/org/envirocar/app/interactor/ValidateAcceptedTerms.java",
    "contents_url": "https://api.github.com/repos/enviroCar/enviroCar-app/contents/org.envirocar.app/src/org/envirocar/app/interactor/ValidateAcceptedTerms.java?ref=714aab746fc5c2cf2157200afa6efc0d7b608ae7",
    "patch": "@@ -19,6 +19,7 @@\n package org.envirocar.app.interactor;\n \n import android.app.Activity;\n+import android.util.Log;\n \n import org.envirocar.app.R;\n import org.envirocar.app.handler.DAOProvider;\n@@ -109,23 +110,28 @@ public ValidateAcceptedTerms(@InjectUIScheduler Scheduler observeOn, @InjectIOSc\n \n     private Function<TermsOfUse, Observable<TermsOfUse>> checkTermsOfUseAcceptance(User user, Activity activity) {\n         return termsOfUse -> {\n-            LOG.info(String.format(\"Retrieved terms of use for user [%s] with version [%s]\",\n-                    user.getUsername(), user.getTermsOfUseVersion()));\n-\n-            boolean hasAccepted = termsOfUse.getIssuedDate().equals(user.getTermsOfUseVersion());\n-\n-            // If the user has accepted, then just return the generic type\n-            if (hasAccepted) {\n-                return Observable.just(termsOfUse);\n+            try {\n+                LOG.info(String.format(\"Retrieved terms of use for user [%s] with version [%s]\",\n+                        user.getUsername(), user.getTermsOfUseVersion()));\n+                boolean hasAccepted = termsOfUse.getIssuedDate().equals(user.getTermsOfUseVersion());\n+\n+                // If the user has accepted, then just return the generic type\n+                if (hasAccepted) {\n+                    return Observable.just(termsOfUse);\n+                }\n+                // If the input activity is not null, then create an dialog observable.\n+                else if (activity != null) {\n+                    return createTermsOfUseDialogObservable(user, termsOfUse, activity);\n+                }\n+                // Otherwise, throw an exception.\n+                else {\n+                    throw new TermsOfUseException(\"The user has not accepted the terms of use\");\n+                }\n             }\n-            // If the input activity is not null, then create an dialog observable.\n-            else if (activity != null) {\n-                return createTermsOfUseDialogObservable(user, termsOfUse, activity);\n-            }\n-            // Otherwise, throw an exception.\n-            else {\n-                throw new TermsOfUseException(\"The user has not accepted the terms of use\");\n+            catch (Exception e){\n+                Log.e(\"ValidateAcceptedTerms\", \"checkTermsOfUseAcceptance: \", e);\n             }\n+            return null;\n         };\n     }\n "
  },
  {
    "sha": "26c912d895327265ca184cc74fa66347dc17a6d8",
    "filename": "org.envirocar.app/src/org/envirocar/app/views/obdselection/OBDSelectionFragment.java",
    "status": "modified",
    "additions": 17,
    "deletions": 10,
    "changes": 27,
    "blob_url": "https://github.com/enviroCar/enviroCar-app/blob/714aab746fc5c2cf2157200afa6efc0d7b608ae7/org.envirocar.app/src/org/envirocar/app/views/obdselection/OBDSelectionFragment.java",
    "raw_url": "https://github.com/enviroCar/enviroCar-app/raw/714aab746fc5c2cf2157200afa6efc0d7b608ae7/org.envirocar.app/src/org/envirocar/app/views/obdselection/OBDSelectionFragment.java",
    "contents_url": "https://api.github.com/repos/enviroCar/enviroCar-app/contents/org.envirocar.app/src/org/envirocar/app/views/obdselection/OBDSelectionFragment.java?ref=714aab746fc5c2cf2157200afa6efc0d7b608ae7",
    "patch": "@@ -21,6 +21,7 @@\n import android.app.AlertDialog;\n import android.bluetooth.BluetoothDevice;\n import android.os.Bundle;\n+import android.util.Log;\n import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n@@ -377,17 +378,23 @@ public void onUnpairingError(BluetoothDevice device) {\n      */\n     private void updatePairedDevicesList() {\n         // Get the set of paired devices.\n-        Set<BluetoothDevice> pairedDevices = mBluetoothHandler.getPairedBluetoothDevices();\n-\n-        // For each device, add an entry to the list view.\n-        mPairedDevicesAdapter.addAll(pairedDevices);\n-        mPairedDevicesAdapter.setSelectedBluetoothDevice(mBluetoothHandler\n-                .getSelectedBluetoothDevice());\n-\n-        // Make the paired devices textview visible if there are paired devices\n-        if (!pairedDevices.isEmpty()) {\n-            mPairedDevicesTextView.setVisibility(View.VISIBLE);\n+        try {\n+            Set<BluetoothDevice> pairedDevices = mBluetoothHandler.getPairedBluetoothDevices();\n+\n+            // For each device, add an entry to the list view.\n+            mPairedDevicesAdapter.addAll(pairedDevices);\n+            mPairedDevicesAdapter.setSelectedBluetoothDevice(mBluetoothHandler\n+                    .getSelectedBluetoothDevice());\n+\n+            // Make the paired devices textview visible if there are paired devices\n+            if (!pairedDevices.isEmpty()) {\n+                mPairedDevicesTextView.setVisibility(View.VISIBLE);\n+            }\n         }\n+        catch (Exception e){\n+            Log.e(\"OBDSelectionFragment\", \"updatePairedDevicesList: \", e);\n+        }\n+\n     }\n \n     /**"
  }
]
