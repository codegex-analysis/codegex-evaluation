[
  {
    "sha": "64998ea35de95cab20bc3ef0423f174edda01766",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 13,
    "deletions": 1,
    "changes": 14,
    "blob_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/blob/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/pom.xml",
    "raw_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/raw/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/pom.xml",
    "contents_url": "https://api.github.com/repos/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/contents/pom.xml?ref=8b73ee87c636c3e8a941ca4b3caa05f382d62f1a",
    "patch": "@@ -6,7 +6,19 @@\n \t<groupId>br.com.zup.edu.ligaqualidade</groupId>\n \t<artifactId>desafio-emprestimo-imobiliario</artifactId>\n \t<version>0.0.1-SNAPSHOT</version>\n-\t<name>liga-qualidade-desafio-emprestimo-imobiliario</name>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>8</source>\n+                    <target>8</target>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+    <name>liga-qualidade-desafio-emprestimo-imobiliario</name>\n \t<description>Demo project for Spring Boot</description>\n \t<properties>\n \t\t<java.version>1.8</java.version>"
  },
  {
    "sha": "1c2e86ec68f7e8f1879b60189d376bc7828f381d",
    "filename": "src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/EventProcessorEnum.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/blob/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/EventProcessorEnum.java",
    "raw_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/raw/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/EventProcessorEnum.java",
    "contents_url": "https://api.github.com/repos/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/contents/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/EventProcessorEnum.java?ref=8b73ee87c636c3e8a941ca4b3caa05f382d62f1a",
    "patch": "@@ -0,0 +1,15 @@\n+package br.com.zup.edu.ligaqualidade.desafioemprestimoimobiliario.modifique;\n+\n+public enum EventProcessorEnum {\n+\n+    EVENT_ID(0),\n+    EVENT_SCHEMA(1),\n+    EVENT_ACTION(2),\n+    EVENT_TIMESTAMP(3);\n+\n+    public int infoLocation;\n+\n+    EventProcessorEnum(int infoLocation) {\n+        this.infoLocation = infoLocation;\n+    }\n+}"
  },
  {
    "sha": "5b2e2d178e7fd1f26c3f8f516f61fe47bc0e2318",
    "filename": "src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Proponent.java",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/blob/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Proponent.java",
    "raw_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/raw/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Proponent.java",
    "contents_url": "https://api.github.com/repos/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/contents/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Proponent.java?ref=8b73ee87c636c3e8a941ca4b3caa05f382d62f1a",
    "patch": "@@ -0,0 +1,68 @@\n+package br.com.zup.edu.ligaqualidade.desafioemprestimoimobiliario.modifique;\n+\n+public class Proponent {\n+\n+    private String idProposal;\n+    private String id;\n+    private String name;\n+    private Integer age;\n+    private Double monthlyIncome;\n+    private Boolean isMain;\n+\n+    public Proponent(String idProposal, String id, String name, Integer age, Double monthlyIncome, Boolean isMain) {\n+        this.idProposal = idProposal;\n+        this.id = id;\n+        this.name = name;\n+        this.age = age;\n+        this.monthlyIncome = monthlyIncome;\n+        this.isMain = isMain;\n+    }\n+\n+    public String getIdProposal() {\n+        return idProposal;\n+    }\n+\n+    public void setIdProposal(String idProposal) {\n+        this.idProposal = idProposal;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Integer getAge() {\n+        return age;\n+    }\n+\n+    public void setAge(Integer age) {\n+        this.age = age;\n+    }\n+\n+    public Double getMonthlyIncome() {\n+        return monthlyIncome;\n+    }\n+\n+    public void setMonthlyIncome(Double monthlyIncome) {\n+        this.monthlyIncome = monthlyIncome;\n+    }\n+\n+    public Boolean getMain() {\n+        return isMain;\n+    }\n+\n+    public void setMain(Boolean main) {\n+        isMain = main;\n+    }\n+}"
  },
  {
    "sha": "8f4bbc9c453de9ced7fae5870980c85b57a11173",
    "filename": "src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/ProponentProcessorEnum.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/blob/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/ProponentProcessorEnum.java",
    "raw_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/raw/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/ProponentProcessorEnum.java",
    "contents_url": "https://api.github.com/repos/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/contents/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/ProponentProcessorEnum.java?ref=8b73ee87c636c3e8a941ca4b3caa05f382d62f1a",
    "patch": "@@ -0,0 +1,17 @@\n+package br.com.zup.edu.ligaqualidade.desafioemprestimoimobiliario.modifique;\n+\n+public enum ProponentProcessorEnum {\n+\n+    PROPOSAL_ID(4),\n+    PROPONENT_ID(5),\n+    PROPONENT_NAME(6),\n+    PROPONENT_AGE(7),\n+    PROPONENT_MONTHLY_INCOME(8),\n+    PROPONENT_IS_MAIN(9);\n+\n+    public int infoLocation;\n+\n+    ProponentProcessorEnum(int infoLocation) {\n+        this.infoLocation = infoLocation;\n+    }\n+}"
  },
  {
    "sha": "b673151d1b9448867ec8ce2bacb0023fceaab004",
    "filename": "src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Proposal.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/blob/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Proposal.java",
    "raw_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/raw/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Proposal.java",
    "contents_url": "https://api.github.com/repos/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/contents/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Proposal.java?ref=8b73ee87c636c3e8a941ca4b3caa05f382d62f1a",
    "patch": "@@ -0,0 +1,57 @@\n+package br.com.zup.edu.ligaqualidade.desafioemprestimoimobiliario.modifique;\n+\n+import java.util.List;\n+\n+public class Proposal {\n+    private String id;\n+    private Double loanValue;\n+    private Integer numberMonthlyInstallments;\n+    private List<Warranty> warranties;\n+    private List<Proponent> proponents;\n+\n+    public Proposal(String id, Double loanValue, Integer numberMonthlyInstallments) {\n+        this.id = id;\n+        this.loanValue = loanValue;\n+        this.numberMonthlyInstallments = numberMonthlyInstallments;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public Double getLoanValue() {\n+        return loanValue;\n+    }\n+\n+    public void setLoanValue(Double loanValue) {\n+        this.loanValue = loanValue;\n+    }\n+\n+    public Integer getNumberMonthlyInstallments() {\n+        return numberMonthlyInstallments;\n+    }\n+\n+    public void setNumberMonthlyInstallments(Integer numberMonthlyInstallments) {\n+        this.numberMonthlyInstallments = numberMonthlyInstallments;\n+    }\n+\n+    public List<Warranty> getWarranties() {\n+        return warranties;\n+    }\n+\n+    public void setWarranties(List<Warranty> warranties) {\n+        this.warranties = warranties;\n+    }\n+\n+    public List<Proponent> getProponents() {\n+        return proponents;\n+    }\n+\n+    public void setProponents(List<Proponent> proponents) {\n+        this.proponents = proponents;\n+    }\n+}"
  },
  {
    "sha": "1b10626f8d0c2b9c5777b5be9855e431cf1a9587",
    "filename": "src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/ProposalProcessorEnum.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/blob/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/ProposalProcessorEnum.java",
    "raw_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/raw/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/ProposalProcessorEnum.java",
    "contents_url": "https://api.github.com/repos/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/contents/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/ProposalProcessorEnum.java?ref=8b73ee87c636c3e8a941ca4b3caa05f382d62f1a",
    "patch": "@@ -0,0 +1,14 @@\n+package br.com.zup.edu.ligaqualidade.desafioemprestimoimobiliario.modifique;\n+\n+public enum ProposalProcessorEnum {\n+\n+    PROPOSAL_ID(4),\n+    PROPOSAL_LOAN_VALUE(5),\n+    PROPOSAL_NUMBER_OF_MONTHLY_INSTALLMENTS(6);\n+\n+    public int infoLocation;\n+\n+    ProposalProcessorEnum(int infoLocation) {\n+        this.infoLocation = infoLocation;\n+    }\n+}"
  },
  {
    "sha": "53035eaf0e670d97e07a861270c76d9fa760547e",
    "filename": "src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Solucao.java",
    "status": "modified",
    "additions": 181,
    "deletions": 1,
    "changes": 182,
    "blob_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/blob/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Solucao.java",
    "raw_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/raw/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Solucao.java",
    "contents_url": "https://api.github.com/repos/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/contents/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Solucao.java?ref=8b73ee87c636c3e8a941ca4b3caa05f382d62f1a",
    "patch": "@@ -1,10 +1,190 @@\n package br.com.zup.edu.ligaqualidade.desafioemprestimoimobiliario.modifique;\n \n+import java.util.LinkedList;\n import java.util.List;\n+import java.util.Optional;\n \n public class Solucao {\n \t\n   public static String processMessages(List<String> messages) {\n-\t  return \"\"; \n+      List<Proposal> proposals = new LinkedList<>();\n+\n+      messages.forEach(message -> {\n+        String[] actualEvent = message.split(\",\");\n+        String action = actualEvent[EventProcessorEnum.EVENT_ACTION.infoLocation];\n+        String schema = actualEvent[EventProcessorEnum.EVENT_SCHEMA.infoLocation];\n+\n+        if (\"created\".equals(action)) {\n+            if (\"proposal\".equals(schema)) {\n+                createProposal(proposals, actualEvent);\n+            }\n+        } else if (\"added\".equals(action)) {\n+            if (\"warranty\".equals(schema)) {\n+                createWarranty(proposals, actualEvent);\n+            } else if (\"proponent\".equals(schema)) {\n+                createProponent(proposals, actualEvent);\n+            }\n+        }\n+        else if (\"updated\".equals(action)) {\n+            if (\"proposal\".equals(schema)) {\n+                updateProposal(proposals, actualEvent);\n+            } else if (\"warranty\".equals(schema)) {\n+                updateWarranty(proposals, actualEvent);\n+            }\n+        } else if (\"deleted\".equals(action)) {\n+            if (\"proposal\".equals(schema)) {\n+                deleteProposal(proposals, actualEvent);\n+            }\n+        } else if (\"removed\".equals(action)) {\n+            if (\"warranty\".equals(schema)) {\n+                removeWarranty(proposals, actualEvent);\n+            } else if (\"proponent\".equals(schema)) {\n+                removeProponent(proposals, actualEvent);\n+            }\n+        }\n+      });\n+        // todo - rever a lógica do processamento dos eventos\n+       // OBS: Não deu tempo de entrar nas validações das propostas e também de separar os métodos em classes menores\n+\n+\t  return \"\";\n   }\n+\n+    private static void createProposal(List<Proposal> proposals, String[] actualEvent) {\n+        if (!proposalExists(proposals, actualEvent[ProposalProcessorEnum.PROPOSAL_ID.infoLocation])) {\n+             proposals.add(\n+                     new Proposal(\n+                          actualEvent[ProposalProcessorEnum.PROPOSAL_ID.infoLocation],\n+                          Double.parseDouble(actualEvent[ProposalProcessorEnum.PROPOSAL_LOAN_VALUE.infoLocation]),\n+                          Integer.parseInt(actualEvent[ProposalProcessorEnum.PROPOSAL_NUMBER_OF_MONTHLY_INSTALLMENTS.infoLocation])\n+                     )\n+             );\n+        }\n+    }\n+\n+    private static void updateProposal(List<Proposal> proposals, String[] actualEvent) {\n+        String proposalId = actualEvent[WarrantyProcessorEnum.PROPOSAL_ID.infoLocation];\n+\n+        Optional<Proposal> proposalOp = proposals.stream().filter(proposal -> proposalId.equals(proposal.getId())).findFirst();\n+        if (proposalOp.isPresent()) {\n+            proposalOp.get().setLoanValue(Double\n+                    .parseDouble(actualEvent[ProposalProcessorEnum.PROPOSAL_LOAN_VALUE.infoLocation]));\n+            proposalOp.get().setNumberMonthlyInstallments(Integer\n+                    .parseInt(actualEvent[ProposalProcessorEnum.PROPOSAL_NUMBER_OF_MONTHLY_INSTALLMENTS.infoLocation]));\n+        }\n+    }\n+\n+    private static void deleteProposal(List<Proposal> proposals, String[] actualEvent) {\n+        String proposalId = actualEvent[WarrantyProcessorEnum.PROPOSAL_ID.infoLocation];\n+        Optional<Proposal> proposalOp = proposals.stream().filter(proposal -> proposalId.equals(proposal.getId())).findFirst();\n+\n+        if (proposalOp.isPresent()) {\n+            proposals.remove(proposalOp.get());\n+        }\n+    }\n+\n+    private static boolean proposalExists(List<Proposal> proposals, String idProposal) {\n+      return proposals.stream().anyMatch(proposal -> idProposal.equals(proposal.getId()));\n+    }\n+\n+    private static boolean warrantyExists(List<Warranty> warranties, String idWarranty) {\n+        return warranties.stream().anyMatch(warranty -> idWarranty.equals(warranty.getId()));\n+    }\n+\n+    private static boolean proponentExists(List<Proponent> proponents, String idProponent) {\n+        return proponents.stream().anyMatch(proponent -> idProponent.equals(proponent.getId()));\n+    }\n+\n+    private static void createWarranty(List<Proposal> proposals, String[] actualEvent) {\n+        String proposalId = actualEvent[WarrantyProcessorEnum.PROPOSAL_ID.infoLocation];\n+\n+        Optional<Proposal> proposalOp = proposals.stream().filter(proposal -> proposalId.equals(proposal.getId())).findFirst();\n+        if (proposalOp.isPresent()) {\n+            if (!warrantyExists(proposalOp.get().getWarranties(), actualEvent[WarrantyProcessorEnum.WARRANTY_ID.infoLocation])) {\n+                proposalOp\n+                        .get()\n+                        .getWarranties()\n+                        .add(\n+                          new Warranty(\n+                                  actualEvent[WarrantyProcessorEnum.PROPOSAL_ID.infoLocation],\n+                                  actualEvent[WarrantyProcessorEnum.WARRANTY_ID.infoLocation],\n+                                  Double.parseDouble(actualEvent[WarrantyProcessorEnum.WARRANTY_VALUE.infoLocation]),\n+                                  actualEvent[WarrantyProcessorEnum.WARRANTY_PROVINCE.infoLocation])\n+                          );\n+            }\n+        }\n+    }\n+\n+    private static void updateWarranty(List<Proposal> proposals, String[] actualEvent) {\n+        String proposalId = actualEvent[WarrantyProcessorEnum.PROPOSAL_ID.infoLocation];\n+\n+        Optional<Proposal> proposalOp = proposals.stream().filter(proposal -> proposalId.equals(proposal.getId())).findFirst();\n+        if (proposalOp.isPresent()) {\n+            String warrantyId = actualEvent[WarrantyProcessorEnum.WARRANTY_ID.infoLocation];\n+            Optional<Warranty> warrantyOp = proposalOp.get()\n+                    .getWarranties()\n+                    .stream()\n+                    .filter(warranty -> warrantyId.equals(warranty.getId())).findFirst();\n+\n+            if (warrantyOp.isPresent()) {\n+                warrantyOp.get().setValue(Double.parseDouble(actualEvent[WarrantyProcessorEnum.WARRANTY_VALUE.infoLocation]));\n+                warrantyOp.get().setProvince(actualEvent[WarrantyProcessorEnum.WARRANTY_PROVINCE.infoLocation]);\n+            }\n+        }\n+    }\n+\n+    private static void removeWarranty(List<Proposal> proposals, String[] actualEvent) {\n+        String proposalId = actualEvent[WarrantyProcessorEnum.PROPOSAL_ID.infoLocation];\n+\n+        Optional<Proposal> proposalOp = proposals.stream().filter(proposal -> proposalId.equals(proposal.getId())).findFirst();\n+        if (proposalOp.isPresent()) {\n+            String warrantyId = actualEvent[WarrantyProcessorEnum.WARRANTY_ID.infoLocation];\n+            Optional<Warranty> warrantyOp = proposalOp.get()\n+                    .getWarranties()\n+                    .stream()\n+                    .filter(warranty -> warrantyId.equals(warranty.getId())).findFirst();\n+\n+            if (warrantyOp.isPresent()) {\n+                proposalOp.get().getWarranties().remove(warrantyOp.get());\n+            }\n+        }\n+    }\n+\n+    private static void createProponent(List<Proposal> proposals, String[] actualEvent) {\n+        String proposalId = actualEvent[ProponentProcessorEnum.PROPOSAL_ID.infoLocation];\n+\n+        Optional<Proposal> proposalOp = proposals.stream().filter(proposal -> proposalId.equals(proposal.getId())).findFirst();\n+        if (proposalOp.isPresent()) {\n+            if (!proponentExists(proposalOp.get().getProponents(), actualEvent[ProponentProcessorEnum.PROPONENT_ID.infoLocation])) {\n+                proposalOp\n+                        .get()\n+                        .getProponents()\n+                        .add(\n+                                new Proponent(\n+                                        actualEvent[ProponentProcessorEnum.PROPOSAL_ID.infoLocation],\n+                                        actualEvent[ProponentProcessorEnum.PROPONENT_ID.infoLocation],\n+                                        actualEvent[ProponentProcessorEnum.PROPONENT_NAME.infoLocation],\n+                                        Integer.parseInt(actualEvent[ProponentProcessorEnum.PROPONENT_AGE.infoLocation]),\n+                                        Double.parseDouble(actualEvent[ProponentProcessorEnum.PROPONENT_MONTHLY_INCOME.infoLocation]),\n+                                        Boolean.getBoolean(actualEvent[ProponentProcessorEnum.PROPONENT_IS_MAIN.infoLocation]))\n+                        );\n+            }\n+        }\n+    }\n+\n+    private static void removeProponent(List<Proposal> proposals, String[] actualEvent) {\n+        String proposalId = actualEvent[ProponentProcessorEnum.PROPOSAL_ID.infoLocation];\n+\n+        Optional<Proposal> proposalOp = proposals.stream().filter(proposal -> proposalId.equals(proposal.getId())).findFirst();\n+        if (proposalOp.isPresent()) {\n+            String proponentId = actualEvent[ProponentProcessorEnum.PROPONENT_ID.infoLocation];\n+            Optional<Proponent> proponentOp = proposalOp.get()\n+                    .getProponents()\n+                    .stream()\n+                    .filter(proponent -> proponentId.equals(proponent.getId())).findFirst();\n+\n+            if (proponentOp.isPresent()) {\n+                proposalOp.get().getProponents().remove(proponentOp.get());\n+            }\n+        }\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "e62c06e4c7f9e9d5664dc14bf7c901efae378599",
    "filename": "src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Warranty.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/blob/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Warranty.java",
    "raw_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/raw/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Warranty.java",
    "contents_url": "https://api.github.com/repos/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/contents/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/Warranty.java?ref=8b73ee87c636c3e8a941ca4b3caa05f382d62f1a",
    "patch": "@@ -0,0 +1,47 @@\n+package br.com.zup.edu.ligaqualidade.desafioemprestimoimobiliario.modifique;\n+\n+public class Warranty {\n+    private String idProposal;\n+    private String id;\n+    private Double value;\n+    private String province;\n+\n+    public Warranty(String idProposal, String id, Double value, String province) {\n+        this.idProposal = idProposal;\n+        this.id = id;\n+        this.value = value;\n+        this.province = province;\n+    }\n+\n+    public String getIdProposal() {\n+        return idProposal;\n+    }\n+\n+    public void setIdProposal(String idProposal) {\n+        this.idProposal = idProposal;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public Double getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(Double value) {\n+        this.value = value;\n+    }\n+\n+    public String getProvince() {\n+        return province;\n+    }\n+\n+    public void setProvince(String province) {\n+        this.province = province;\n+    }\n+}"
  },
  {
    "sha": "a48333f19ba442bc315206482b8edd0a6f9bd453",
    "filename": "src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/WarrantyProcessorEnum.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/blob/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/WarrantyProcessorEnum.java",
    "raw_url": "https://github.com/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/raw/8b73ee87c636c3e8a941ca4b3caa05f382d62f1a/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/WarrantyProcessorEnum.java",
    "contents_url": "https://api.github.com/repos/liga-qualidade-zup/liga-qualidade-desafio-emprestimo-imobiliario/contents/src/main/java/br/com/zup/edu/ligaqualidade/desafioemprestimoimobiliario/modifique/WarrantyProcessorEnum.java?ref=8b73ee87c636c3e8a941ca4b3caa05f382d62f1a",
    "patch": "@@ -0,0 +1,15 @@\n+package br.com.zup.edu.ligaqualidade.desafioemprestimoimobiliario.modifique;\n+\n+public enum WarrantyProcessorEnum {\n+\n+    PROPOSAL_ID(4),\n+    WARRANTY_ID(5),\n+    WARRANTY_VALUE(6),\n+    WARRANTY_PROVINCE(7);\n+\n+    public int infoLocation;\n+\n+    WarrantyProcessorEnum(int infoLocation) {\n+        this.infoLocation = infoLocation;\n+    }\n+}"
  }
]
