[
  {
    "sha": "a89e49ff6f93a2ad4a5647e0c3f68d5677be1313",
    "filename": "src/lesson_7/Animal.java",
    "status": "added",
    "additions": 77,
    "deletions": 0,
    "changes": 77,
    "blob_url": "https://github.com/UlyaVoropaeva/homework_2021/blob/e563dece07ab75611169f848454a9bbe84e32295/src/lesson_7/Animal.java",
    "raw_url": "https://github.com/UlyaVoropaeva/homework_2021/raw/e563dece07ab75611169f848454a9bbe84e32295/src/lesson_7/Animal.java",
    "contents_url": "https://api.github.com/repos/UlyaVoropaeva/homework_2021/contents/src/lesson_7/Animal.java?ref=e563dece07ab75611169f848454a9bbe84e32295",
    "patch": "@@ -0,0 +1,77 @@\n+package lesson_7;\n+\n+public abstract class Animal {\n+\n+    private final String name;\n+    private final int maxRunDistance;\n+    private final int maxSwimDistance;\n+    private int appetite;\n+    private int full;\n+\n+\n+    public Animal(String name, int maxRunDistance, int maxSwimDistance,\n+                  int appetite, int full) {\n+        this.name = name;\n+        this.maxRunDistance = maxRunDistance;\n+        this.maxSwimDistance = maxSwimDistance;\n+        this.appetite = appetite;\n+        this.full = full;\n+    }\n+\n+    public String getName() {\n+\n+        return name;\n+    }\n+\n+    public int getFull() {\n+        return full;\n+    }\n+\n+\n+    public int getAppetite() {\n+        return appetite;\n+    }\n+\n+    public void eat(Plate p) {\n+        while (isSatiety(p)) {\n+            if (full != 0) {\n+                p.decreaseFood(appetite);\n+                full -= appetite;\n+            } else\n+                break;\n+        }\n+\n+        String message = isSatiety(p) == true ? \"%s сыт %n\" : \"%s  голеден и  просит добавки %n \";\n+        System.out.printf(message, getName());\n+    }\n+\n+    public boolean isSatiety(Plate p) {\n+\n+        return p.contentsPlate(full);\n+    }\n+\n+    public void run(int distance) {\n+\n+        boolean isFeasible = distance <= maxRunDistance;\n+\n+        String message = isFeasible == true ? \"%s  пробежал  %s метров %n\" : \"%s  пробежал только %s метров. Больше не смог... упал. %n\";\n+        System.out.printf(message, name, distance);\n+    }\n+\n+    public void swim(int distance) {\n+        boolean isFeasible = distance <= maxRunDistance;\n+\n+        String message = isFeasible == true ? \"%s проплыла  %s метров %n\" : \"%s отказалась плыть дистанцию в %s метров %n\";\n+        System.out.printf(message, name, distance);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Animal{\" +\n+                \"name='\" + name + '\\'' +\n+                \", maxRunDistance=\" + maxRunDistance +\n+                \", maxSwimDistance=\" + maxSwimDistance +\n+                '}';\n+    }\n+\n+}"
  },
  {
    "sha": "fc86fc59356d3c87a7c64f8d2dd6a2daea0511c2",
    "filename": "src/lesson_7/Cat.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/UlyaVoropaeva/homework_2021/blob/e563dece07ab75611169f848454a9bbe84e32295/src/lesson_7/Cat.java",
    "raw_url": "https://github.com/UlyaVoropaeva/homework_2021/raw/e563dece07ab75611169f848454a9bbe84e32295/src/lesson_7/Cat.java",
    "contents_url": "https://api.github.com/repos/UlyaVoropaeva/homework_2021/contents/src/lesson_7/Cat.java?ref=e563dece07ab75611169f848454a9bbe84e32295",
    "patch": "@@ -0,0 +1,14 @@\n+package lesson_7;\n+\n+public class Cat extends Animal {\n+    public Cat(String name) {\n+        super(name, 200, 0, 20, 60);\n+    }\n+\n+    @Override\n+    public void swim(int distance) {\n+        System.out.printf(\"%s боится воды и купаться он точно не пойдет.%n\", getName());\n+    }\n+\n+\n+}"
  },
  {
    "sha": "fc4c05f38588ad55376d308e90458703e6820a9b",
    "filename": "src/lesson_7/Dog.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/UlyaVoropaeva/homework_2021/blob/e563dece07ab75611169f848454a9bbe84e32295/src/lesson_7/Dog.java",
    "raw_url": "https://github.com/UlyaVoropaeva/homework_2021/raw/e563dece07ab75611169f848454a9bbe84e32295/src/lesson_7/Dog.java",
    "contents_url": "https://api.github.com/repos/UlyaVoropaeva/homework_2021/contents/src/lesson_7/Dog.java?ref=e563dece07ab75611169f848454a9bbe84e32295",
    "patch": "@@ -0,0 +1,7 @@\n+package lesson_7;\n+\n+public class Dog extends Animal {\n+    public Dog(String name) {\n+        super(name, 500, 10, 50, 100);\n+    }\n+}"
  },
  {
    "sha": "0e30105f31f4bf72e36568d572327499b1339d12",
    "filename": "src/lesson_7/Main.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/UlyaVoropaeva/homework_2021/blob/e563dece07ab75611169f848454a9bbe84e32295/src/lesson_7/Main.java",
    "raw_url": "https://github.com/UlyaVoropaeva/homework_2021/raw/e563dece07ab75611169f848454a9bbe84e32295/src/lesson_7/Main.java",
    "contents_url": "https://api.github.com/repos/UlyaVoropaeva/homework_2021/contents/src/lesson_7/Main.java?ref=e563dece07ab75611169f848454a9bbe84e32295",
    "patch": "@@ -0,0 +1,53 @@\n+package lesson_7;\n+\n+import java.util.Scanner;\n+\n+/**\n+ * 1. Расширить задачу про котов и тарелки с едой.\n+ * 2. Сделать так, чтобы в тарелке с едой не могло получиться отрицательного количества еды\n+ * (например, в миске 10 еды, а кот пытается покушать 15-20).\n+ * 3. Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны).\n+ * Если коту удалось покушать (хватило еды), сытость = true.\n+ * 4. Считаем, что если коту мало еды в тарелке, то он её просто не трогает,\n+ * то есть не может быть наполовину сыт (это сделано для упрощения логики программы).\n+ * 5. Создать массив котов и тарелку с едой, попросить всех котов покушать\n+ * из этой тарелки и потом вывести информацию о сытости котов в консоль.\n+ * 6. Добавить в тарелку метод, с помощью которого можно было бы добавлять еду в тарелку.\n+ */\n+\n+public class Main {\n+    public static void main(String[] args) {\n+        Scanner scanner = new Scanner(System.in);\n+        Animal[] animals = {\n+                new Cat(\"Cat Zifir\"),\n+                new Dog(\"Dog Bobik\"),\n+                new Cat(\"Cat Simon\"),\n+                new Dog(\"Dog Sharik\"),\n+                new Cat(\"Cat Murzik\"),\n+                new Cat(\"Cat Iris\"),\n+        };\n+        //Animal animals =new Cat(\"Cat Simon\");\n+        System.out.println(\"Пожалуйста, покормите домашних питомцев:\");\n+        int us = scanner.nextInt();\n+        Plate plate = new Plate(us);\n+        plate.info();\n+\n+        for (int i = 0; i < animals.length; i++) {\n+            //animals[i].run(500);\n+            //animals[i].swim(150);\n+            while (true) {\n+                if (animals[i].isSatiety(plate)) {\n+                    animals[i].eat(plate);\n+                    plate.info();\n+                    break;\n+                } else {\n+                    System.out.printf(\"%s до полной сытоти не хватает %s еды %n Добавьте еды в тарелку %n\", animals[i].getName(), (animals[i].getFull() - plate.getFood()));\n+                    us = scanner.nextInt();\n+                    plate.setFood(us);\n+                }\n+            }\n+\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "303bcca42d55e0cbe2c684ce3e3625612150de09",
    "filename": "src/lesson_7/Plate.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/UlyaVoropaeva/homework_2021/blob/e563dece07ab75611169f848454a9bbe84e32295/src/lesson_7/Plate.java",
    "raw_url": "https://github.com/UlyaVoropaeva/homework_2021/raw/e563dece07ab75611169f848454a9bbe84e32295/src/lesson_7/Plate.java",
    "contents_url": "https://api.github.com/repos/UlyaVoropaeva/homework_2021/contents/src/lesson_7/Plate.java?ref=e563dece07ab75611169f848454a9bbe84e32295",
    "patch": "@@ -0,0 +1,35 @@\n+package lesson_7;\n+\n+public class Plate {\n+    private int food;\n+\n+    public Plate(int food) {\n+        this.food = food;\n+    }\n+\n+    public int getFood() {\n+        return food;\n+    }\n+\n+    public int setFood(int pul) {\n+        food += pul;\n+        return food;\n+    }\n+\n+    public void decreaseFood(int n) {\n+        if (contentsPlate(n))\n+            food -= n;\n+    }\n+\n+    public boolean contentsPlate(int n) {\n+\n+        return food - n >= 0;\n+    }\n+\n+\n+    public void info() {\n+        System.out.printf(\"Количество еды в тарелке %s%n \", food);\n+    }\n+}\n+\n+"
  }
]
