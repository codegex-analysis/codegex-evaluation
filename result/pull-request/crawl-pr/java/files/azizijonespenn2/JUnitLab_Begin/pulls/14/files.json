[
  {
    "sha": "e37fd735bef71c78aff60a0cdf54ba86d11292a3",
    "filename": "src/main/java/csc131/junit/GiftCardTest.java",
    "status": "added",
    "additions": 103,
    "deletions": 0,
    "changes": 103,
    "blob_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/blob/e56cfcb63948cf8f71454be25e92917cf044ddbe/src/main/java/csc131/junit/GiftCardTest.java",
    "raw_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/raw/e56cfcb63948cf8f71454be25e92917cf044ddbe/src/main/java/csc131/junit/GiftCardTest.java",
    "contents_url": "https://api.github.com/repos/azizijonespenn2/JUnitLab_Begin/contents/src/main/java/csc131/junit/GiftCardTest.java?ref=e56cfcb63948cf8f71454be25e92917cf044ddbe",
    "patch": "@@ -0,0 +1,103 @@\n+package csc131.junit;\r\n+\r\n+/***************************\r\n+*    Jabari Crenshaw       *\r\n+*      CSC 131             *\r\n+*      03 March 2021       *\r\n+*      GiftCardTest.java   *\r\n+****************************/\r\n+\r\n+import static org.junit.Assert.*;\r\n+import org.junit.*;\r\n+\r\n+public class GiftCardTest {\r\n+\t\r\n+   //TESTING getIssuingStore() \r\n+   @Test\r\n+   public void testGetIssuingStore() {\r\n+      int issuingStore = 1337;\r\n+      double balance = 100.00;\r\n+      GiftCard card = new GiftCard(issuingStore, balance);\r\n+   \t\r\n+      assertEquals(\"testsGetIssuingStore()\", issuingStore, card.getIssuingStore());\r\n+   }\r\n+\t\r\n+   //TESTING getBalance()\r\n+   @Test\r\n+   public void testGetBalance() {\r\n+      int issuingStore = 420;\r\n+      double balance = 8232019.00;\r\n+      GiftCard card = new GiftCard(issuingStore, balance);\r\n+   \t\r\n+      assertEquals(\"testGetBalance()\", balance, card.getBalance(), 0.001);\r\n+   \t\r\n+   }\r\n+\t\r\n+   //TESTING deduct()\r\n+   @Test\r\n+   public void deduct_RemainingBalance() {\r\n+      int issuingStore = 2020;\r\n+      double balance = 314.18;\r\n+      GiftCard card = new GiftCard(issuingStore, balance);\r\n+   \t\r\n+      double purchaseTotal = 15.47;\r\n+      String remainingBalance = \"Remaining Balance: \" + (balance - purchaseTotal);\r\n+   \t\r\n+      assertEquals(\"testDeduct_RemainingBalance()\", remainingBalance, card.deduct(purchaseTotal));\r\n+   }\r\n+\t\r\n+\t//TESTING if (storeID > MAX_ID)\r\n+   @Test\r\n+   public void constructor_IncorrectID_High() {\r\n+      int issuingStore = 101010;\r\n+      double balance = 314.18;\r\n+   \t\r\n+      assertThrows(IllegalArgumentException.class, () -> {new GiftCard(issuingStore, balance);});\r\n+   }\r\n+\t\r\n+   //TESTING -- > if (storeID < 0)\r\n+   @Test\r\n+   public void constructor_IncorrectID_Low() {\r\n+      int issuingStore = -5;\r\n+      double balance = 314.18;\r\n+   \t\r\n+      assertThrows(IllegalArgumentException.class, () -> {new GiftCard(issuingStore, balance);});\r\n+   }\r\n+   \r\n+   //TESTING --> if (openingBalance < 0.00)\r\n+   @Test\r\n+   public void testGiftCard_openingBalance() {\r\n+      int issuingStore = 2020;\r\n+      double balance = -12;\r\n+   \t\r\n+      assertThrows(IllegalArgumentException.class, () -> {new GiftCard(issuingStore, balance);});\r\n+   }\r\n+\t\r\n+   //TESTING if --> (transaction total > balance)\r\n+   @Test\r\n+   public void testDeduct_negativeBalance() {\r\n+      int issuingStore = 2020;\r\n+   \t\r\n+      double balance = 12.00;\r\n+      GiftCard card = new GiftCard(issuingStore, balance);\r\n+   \t\r\n+      double purchaseTotal = 15.50;\r\n+   \t//String remainingBalance = \"Remaining Balance: \" + (balance - purchaseTotal);\r\n+      String stimulusPending = \"Amount Due: \" + (String.format(\"%6.2f\", Math.abs(purchaseTotal - balance)));\r\n+      assertEquals(\"testDeduct2()\", stimulusPending, card.deduct(purchaseTotal));\r\n+   }\r\n+\t\r\n+   //TESTING if --> (transaction total < 0)\r\n+   @Test\r\n+   public void testDeduct_negativeTransaction() {\r\n+      int issuingStore = 2020;\r\n+      double balance = 314.18;\r\n+      GiftCard card = new GiftCard(issuingStore, balance);\r\n+   \t\r\n+      double purchaseTotal = -7.00;\r\n+   \t//String remainingBalance = \"Remaining Balance: \" + (balance - purchaseTotal);\r\n+      String doNotGiveAwayMoney = \"Invalid Transaction\";\r\n+      assertEquals(\"testDeduct2()\", doNotGiveAwayMoney, card.deduct(purchaseTotal));\r\n+   }\r\n+\r\n+}\r"
  }
]
