[
  {
    "sha": "0686e2bd7a79a27002cc36f56790a5270e49009b",
    "filename": ".DS_Store",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/blob/83c17de388358ec1f97a3471032bb2f8bd59f601/.DS_Store",
    "raw_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/raw/83c17de388358ec1f97a3471032bb2f8bd59f601/.DS_Store",
    "contents_url": "https://api.github.com/repos/azizijonespenn2/JUnitLab_Begin/contents/.DS_Store?ref=83c17de388358ec1f97a3471032bb2f8bd59f601"
  },
  {
    "sha": "6d4ed25c3bf5facdea147dc7aad40e4f7fec9715",
    "filename": ".classpath",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/blob/83c17de388358ec1f97a3471032bb2f8bd59f601/.classpath",
    "raw_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/raw/83c17de388358ec1f97a3471032bb2f8bd59f601/.classpath",
    "contents_url": "https://api.github.com/repos/azizijonespenn2/JUnitLab_Begin/contents/.classpath?ref=83c17de388358ec1f97a3471032bb2f8bd59f601",
    "patch": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER\"/>\n+\t<classpathentry kind=\"src\" path=\"src/main/java\"/>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.junit.JUNIT_CONTAINER/5\"/>\n+\t<classpathentry kind=\"output\" path=\"bin\"/>\n+</classpath>"
  },
  {
    "sha": "ae3c1726048cd06b9a143e0376ed46dd9b9a8d53",
    "filename": ".gitignore",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/blob/83c17de388358ec1f97a3471032bb2f8bd59f601/.gitignore",
    "raw_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/raw/83c17de388358ec1f97a3471032bb2f8bd59f601/.gitignore",
    "contents_url": "https://api.github.com/repos/azizijonespenn2/JUnitLab_Begin/contents/.gitignore?ref=83c17de388358ec1f97a3471032bb2f8bd59f601",
    "patch": "@@ -0,0 +1 @@\n+/bin/"
  },
  {
    "sha": "1633627cb0644c52eed4770ed65d8921d606f414",
    "filename": ".project",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/blob/83c17de388358ec1f97a3471032bb2f8bd59f601/.project",
    "raw_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/raw/83c17de388358ec1f97a3471032bb2f8bd59f601/.project",
    "contents_url": "https://api.github.com/repos/azizijonespenn2/JUnitLab_Begin/contents/.project?ref=83c17de388358ec1f97a3471032bb2f8bd59f601",
    "patch": "@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>JUnitLab_Begin</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>\n+\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n+\t</natures>\n+</projectDescription>"
  },
  {
    "sha": "5b3ca23058e7393fb85ffee42c6284fc471975a7",
    "filename": "src/main/java/csc131/junit/GiftCardTest.java",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/blob/83c17de388358ec1f97a3471032bb2f8bd59f601/src/main/java/csc131/junit/GiftCardTest.java",
    "raw_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/raw/83c17de388358ec1f97a3471032bb2f8bd59f601/src/main/java/csc131/junit/GiftCardTest.java",
    "contents_url": "https://api.github.com/repos/azizijonespenn2/JUnitLab_Begin/contents/src/main/java/csc131/junit/GiftCardTest.java?ref=83c17de388358ec1f97a3471032bb2f8bd59f601",
    "patch": "@@ -0,0 +1,87 @@\n+package csc131.junit;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.Assert.assertEquals;\n+//import org.junit.rules.ExpectedException;\n+import org.junit.jupiter.api.Test;\n+\n+class GiftCardTest {\n+\n+\t@Test\n+\tpublic void getIssuingStore()\n+\t{\n+\t\tdouble balance;\n+\t\tGiftCard card;\n+\t\tint issuingStore;\n+\t\t\n+\t\tissuingStore = 1337;\n+\t\tbalance = 100.00;\n+\t\t\n+\t\tcard = new GiftCard(issuingStore, balance);\n+\t\tassertEquals(\"getIssuingStore()\", issuingStore, card.getIssuingStore());\n+\t}\n+\t@Test\n+\tpublic void getBalance()\n+\t{\n+\t\tdouble balance;\n+\t\tGiftCard card;\n+\t\tint issuingStore;\n+\t\tdouble tolerance = 0.001;\n+\t\t\n+\t\tissuingStore = 1337;\n+\t\tbalance = 100.00;\n+\t\t\n+\t\tcard = new GiftCard(issuingStore, balance);\n+\t\tassertEquals(\"getBalance()\", balance, card.getBalance(), tolerance);\n+\t}\n+\t@Test\n+\tpublic void deduct_RemainingBalance()\n+\t{\n+\t\tdouble balance;\n+\t\tGiftCard card;\n+\t\tint issuingStore;\n+\t\tdouble deduction = 5.05;\n+\t\t\n+\t\t\n+\t\tissuingStore = 1337;\n+\t\tbalance = 100.00;\n+\t\t\n+\t\tcard = new GiftCard(issuingStore, balance);\n+\t\tString leftOver = card.deduct(deduction);\n+\t\tbalance -= deduction;\n+\t\tString expected = \"Remaining Balance: \" + String.format(\"%6.2f\",\n+                Math.abs(balance));;\n+\t\tassertEquals(\"deductRemainingBalance()\", expected,leftOver);\n+\t\t\n+\t\t//when deducting negative num from balance\n+\t\tdeduction = -1.5;\n+\t\texpected = \"Invalid Transaction\";\n+\t\tleftOver = card.deduct(deduction);\n+\t\tassertEquals(\"deductRemainingBalance()\", expected,leftOver);\n+\t\t\n+\t\t//when deducting greater than balance\n+\t\tdeduction = 100.50;\n+\t\tbalance -= deduction;\n+\t\texpected = \"Amount Due: \" + String.format(\"%6.2f\",\n+                Math.abs(balance));\n+\t\tleftOver = card.deduct(deduction);\n+\t\tassertEquals(\"deductRemainingBalance()\", expected,leftOver);\n+\t\t\n+\t\t\n+\t}\n+\t\n+\t@Test\n+\tpublic void constructor_IncorrectID_Low() {\n+\t\tassertThrows(IllegalArgumentException.class, () -> {new GiftCard(1,-100.00);});\n+\t\tassertThrows(IllegalArgumentException.class, () -> {new GiftCard(-5,100.00);});\n+\t\n+\t}\n+\t@Test\n+\tpublic void constructor_IncorrectID_High() {\n+\t\tassertThrows(IllegalArgumentException.class, () -> {new GiftCard(10000,100.00);});\n+\t\n+\t}\n+\t\n+\n+}\n+"
  }
]
