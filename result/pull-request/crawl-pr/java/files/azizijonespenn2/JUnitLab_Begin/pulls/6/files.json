[
  {
    "sha": "6153cafbb648774e11226bf7401cf566588a310b",
    "filename": "src/main/java/csc131/junit/GiftCardTest.java",
    "status": "added",
    "additions": 95,
    "deletions": 0,
    "changes": 95,
    "blob_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/blob/c9f24d1d96d12f87b7002ff23c809c9cd5e541f7/src/main/java/csc131/junit/GiftCardTest.java",
    "raw_url": "https://github.com/azizijonespenn2/JUnitLab_Begin/raw/c9f24d1d96d12f87b7002ff23c809c9cd5e541f7/src/main/java/csc131/junit/GiftCardTest.java",
    "contents_url": "https://api.github.com/repos/azizijonespenn2/JUnitLab_Begin/contents/src/main/java/csc131/junit/GiftCardTest.java?ref=c9f24d1d96d12f87b7002ff23c809c9cd5e541f7",
    "patch": "@@ -0,0 +1,95 @@\n+package csc131.junit;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertThrows;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+\n+public class GiftCardTest \n+{\n+\t@Test\n+\tpublic void getIssuingStore() \n+\t{\n+\t\tdouble balance;\n+\t\tGiftCard card;\n+\t\tint issuingStore;\n+\t\t\n+\t\tissuingStore = 1337;\n+\t\tbalance = 100.0;\n+\t\tcard = new GiftCard(issuingStore, balance);\n+\t\t\n+\t\tassertEquals(\"getIssuingStore()\", issuingStore, card.getIssuingStore());\n+\t\tassertEquals(\"getBalance()\", balance, card.getBalance(), 0.001);\n+\t}\n+\t\n+\t@Test\n+\tpublic void deduct_RemainingBalance()\n+\t{\n+\t\tdouble balance;\n+\t\tGiftCard card;\n+\t\tint issuingStore;\n+\t\tString expected;\n+\t\t\n+\t\tissuingStore = 1337;\n+\t\tbalance = 100.0;\n+\t\tcard = new GiftCard(issuingStore, balance);\n+\t\t\n+\t\tbalance -= 100.0;\n+\t\texpected = \"Remaining Balance: \" + String.format(\"%6.2f\", Math.abs(balance));\n+\t\t\n+\t\tassertEquals(\"deduct_RemaingBalance()\", expected, card.deduct(100.0));\n+\t}\n+\t\n+\t@Test\n+\tpublic void deduct_RemainingBalance2() \n+\t{\n+\t\tdouble balance;\n+\t\tGiftCard card;\n+\t\tint issuingStore;\n+\t\tString expected;\n+\t\t\n+\t\tissuingStore = 1337;\n+\t\tbalance = 100.0;\n+\t\tcard = new GiftCard(issuingStore, balance);\n+\t\t\n+\t\texpected = \"Invalid Transaction\";\n+\t\t\n+\t\tassertEquals(\"deduct_RemaingBalance()\", expected, card.deduct(-100.0));\n+\t}\n+\t\n+\t@Test\n+\tpublic void deduct_RemainingBlance3() \n+\t{\n+\t\tdouble balance;\n+\t\tGiftCard card;\n+\t\tint issuingStore;\n+\t\tString expected;\n+\t\t\n+\t\tissuingStore = 1337;\n+\t\tbalance = 100.0;\n+\t\tcard = new GiftCard(issuingStore, balance);\n+\t\t\n+\t\tbalance -= 105.0;\n+\t\texpected = \"Amount Due: \" + String.format(\"%6.2f\", Math.abs(balance));\n+\t\t\n+\t\tassertEquals(\"deduct_RemaingBalance()\", expected, card.deduct(105.0));\n+\t}\n+\t\n+\t@Test\n+\tpublic void constructor_IncorrectBalance_Low() \n+\t{\n+\t\tassertThrows(IllegalArgumentException.class, () -> {new GiftCard(1,-100.00);});\n+\t}\n+\t\n+\t@Test\n+\tpublic void constructor_IncorrectID_Low()\n+\t{\n+\t\tassertThrows(IllegalArgumentException.class, () -> {new GiftCard(-1, 100.0);});\n+\t}\n+\t\n+\t@Test\n+\tpublic void constructor_IncorrectID_High()\n+\t{\n+\t\tassertThrows(IllegalArgumentException.class, () -> {new GiftCard(10000, 100.0);});\n+\t}\n+}"
  }
]
