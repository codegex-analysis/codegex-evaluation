[
  {
    "sha": "91c0a286e7d781251c0124e55a0938501b6324a4",
    "filename": "src/test/java/ru/devray/restassureddemo/FinancialGrowthTest.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/devrayone/restassureddemo/blob/de5320a5dcda603c51dadfcad947f870c884315f/src/test/java/ru/devray/restassureddemo/FinancialGrowthTest.java",
    "raw_url": "https://github.com/devrayone/restassureddemo/raw/de5320a5dcda603c51dadfcad947f870c884315f/src/test/java/ru/devray/restassureddemo/FinancialGrowthTest.java",
    "contents_url": "https://api.github.com/repos/devrayone/restassureddemo/contents/src/test/java/ru/devray/restassureddemo/FinancialGrowthTest.java?ref=de5320a5dcda603c51dadfcad947f870c884315f",
    "patch": "@@ -0,0 +1,71 @@\n+package ru.devray.restassureddemo;\n+\n+import io.restassured.builder.RequestSpecBuilder;\n+import io.restassured.filter.log.LogDetail;\n+import io.restassured.http.ContentType;\n+import io.restassured.specification.RequestSpecification;\n+import org.hamcrest.Matchers;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+\n+\n+import static io.restassured.RestAssured.given;\n+\n+public class FinancialGrowthTest {\n+\n+    public static final String API_KEY = \"d634d41889f8409d1345b2bd5131efcb\";\n+    public static final String wrongEndPointFinancialGrowth = \"api/v3/financial-grow?limit=20&apikey=\";\n+    public static final String BASE_URI = \"https://financialmodelingprep.com/\";\n+    public static final String endPointFinancialGrowth = \"api/v3/financial-growth/AAPL?limit=20&apikey=\";\n+    public static RequestSpecification spec;\n+\n+    @BeforeAll\n+    static void setUp(){\n+        spec = new RequestSpecBuilder()\n+                .setBaseUri(BASE_URI)\n+                .log(LogDetail.ALL)\n+                .setAccept(ContentType.JSON)\n+                .build();\n+    }\n+\n+    @DisplayName(\"Проверяем, что запрос отрабатывает успешно\")\n+    @Test\n+    void checkStatusCode() {\n+        given().spec(spec)\n+                .when().get(endPointFinancialGrowth + API_KEY)\n+                .then().statusCode(200);\n+\n+    }\n+\n+    @DisplayName(\"Проверяем соответствие статуса, при попытке открыть несуществующую страницу\")\n+    @Test\n+    void checkErrorStatusCode() {\n+        given().spec(spec)\n+                .when().get(wrongEndPointFinancialGrowth + API_KEY)\n+                .then().statusCode(404);\n+\n+    }\n+\n+    @DisplayName(\"Проверяем что первый symbol = AAPL\")\n+    @Test\n+    void getFirstSymbolTest(){\n+        given().spec(spec)\n+                .when().get(endPointFinancialGrowth + API_KEY)\n+                .then().body(\"symbol[0]\", Matchers.equalTo(\"AAPL\"));\n+\n+    }\n+\n+    @DisplayName(\"Проверяем, что поля №2-4 у первого объекта имеют значения\")\n+    @Test\n+    void checkValues(){\n+        given().spec(spec)\n+                .when().get(endPointFinancialGrowth + API_KEY)\n+                .then().body(\"date[0]\", Matchers.notNullValue())\n+                .and().body(\"revenueGrowth[0]\", Matchers.notNullValue())\n+                .and().body(\"grossProfitGrowth[0]\",Matchers.notNullValue());\n+\n+    }\n+\n+}"
  }
]
