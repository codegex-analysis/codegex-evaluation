[
  {
    "sha": "0d8a44fc4b97d05bfbc5bf7084b9ca2259db371e",
    "filename": "src/test/java/ru/devray/restassureddemo/DowJonesTest.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/devrayone/restassureddemo/blob/5b57fbe801d269a33db496bd3be61c24d0d82c16/src/test/java/ru/devray/restassureddemo/DowJonesTest.java",
    "raw_url": "https://github.com/devrayone/restassureddemo/raw/5b57fbe801d269a33db496bd3be61c24d0d82c16/src/test/java/ru/devray/restassureddemo/DowJonesTest.java",
    "contents_url": "https://api.github.com/repos/devrayone/restassureddemo/contents/src/test/java/ru/devray/restassureddemo/DowJonesTest.java?ref=5b57fbe801d269a33db496bd3be61c24d0d82c16",
    "patch": "@@ -0,0 +1,78 @@\n+package ru.devray.restassureddemo;\n+\n+import io.restassured.builder.RequestSpecBuilder;\n+import io.restassured.filter.log.LogDetail;\n+import io.restassured.http.ContentType;\n+import io.restassured.specification.RequestSpecification;\n+import org.hamcrest.Matchers;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import ru.devray.restassureddemo.entities.DowJonesInfo;\n+import ru.devray.restassureddemo.entities.StockPrice;\n+\n+import java.util.Arrays;\n+\n+import static io.restassured.RestAssured.given;\n+\n+public class DowJonesTest {\n+\n+    public static final String API_KEY = \"817b47687569e101091f87615b20c36b\";\n+    public static final String BASE_URI = \"https://financialmodelingprep.com/\";\n+    public static final String endPointStockData = \"api/v3/dowjones_constituent?apikey=\";\n+    public static RequestSpecification spec;\n+    public static long dowJonesCompanyReal = 30;\n+\n+    @BeforeAll\n+    static void setUp(){\n+        spec = new RequestSpecBuilder()\n+                .setBaseUri(BASE_URI)\n+                .log(LogDetail.ALL)\n+                .setAccept(ContentType.JSON)\n+                .build();\n+    }\n+\n+    @Test\n+    void getResponseBodyAsObjectTest(){\n+        DowJonesInfo[] dowJonesInfo =\n+                given().baseUri(BASE_URI)\n+                        .when().get(endPointStockData+API_KEY)\n+                        .then().extract().body().as(DowJonesInfo[].class);\n+    }\n+\n+    @DisplayName(\"Проверяем что в индексе Dow Jones 30 компаний\")\n+    @Test\n+    void getDowJonesCompanyCountTest(){\n+        long dowJonesCompanyCount = Arrays.stream(given().baseUri(BASE_URI)\n+                        .when().get(endPointStockData + API_KEY)\n+                        .then().extract().body().as(DowJonesInfo[].class)).count();\n+\n+        Assertions.assertEquals(dowJonesCompanyCount, dowJonesCompanyReal);\n+\n+    }\n+\n+\n+    @DisplayName(\"Проверяем, что sector объекта Technology или Healthcare\")\n+    @Test\n+    void isCompanyInSectorTest(){\n+        given().baseUri(BASE_URI)\n+                .when().get(endPointStockData+API_KEY)\n+                .then().body(\"[0].sector\", Matchers.oneOf(\"Technology\", \"Healthcare\"));\n+    }\n+\n+    @DisplayName(\"Проверяем что у объекта есть поле sector\")\n+    @Test\n+    void getSectorTest(){\n+        given().baseUri(BASE_URI)\n+                .when().get(endPointStockData+API_KEY)\n+                .then().body(\"[0].sector\", Matchers.notNullValue());\n+    }\n+\n+}\n+\n+\n+\n+\n+\n+"
  },
  {
    "sha": "5b367e8947799bd73bcb19569358cf3a89439be5",
    "filename": "src/test/java/ru/devray/restassureddemo/entities/DowJonesInfo.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/devrayone/restassureddemo/blob/5b57fbe801d269a33db496bd3be61c24d0d82c16/src/test/java/ru/devray/restassureddemo/entities/DowJonesInfo.java",
    "raw_url": "https://github.com/devrayone/restassureddemo/raw/5b57fbe801d269a33db496bd3be61c24d0d82c16/src/test/java/ru/devray/restassureddemo/entities/DowJonesInfo.java",
    "contents_url": "https://api.github.com/repos/devrayone/restassureddemo/contents/src/test/java/ru/devray/restassureddemo/entities/DowJonesInfo.java?ref=5b57fbe801d269a33db496bd3be61c24d0d82c16",
    "patch": "@@ -0,0 +1,51 @@\n+package ru.devray.restassureddemo.entities;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * Этот класс - POJO-класс, представление получаемых от REST-сервиса данных.\n+ * Поскольку от REST сервиса мы получаем данные в формате JSON, то чтобы работать с ними как с объектами,\n+ * нам необходимо\n+ */\n+\n+public class DowJonesInfo {\n+\n+    @JsonProperty(\"symbol\")\n+    String symbol;\n+\n+    @JsonProperty(\"name\")\n+    String name;\n+\n+    @JsonProperty(\"sector\")\n+    String sector;\n+\n+    @JsonProperty(\"subSector\")\n+    String subSector;\n+\n+    @JsonProperty(\"headQuarter\")\n+    String headQuarter;\n+\n+    @JsonProperty(\"dateFirstAdded\")\n+    String dateFirstAdded;\n+\n+    @JsonProperty(\"cik\")\n+    String cik;\n+\n+    @JsonProperty(\"founded\")\n+    String founded;\n+\n+    @Override\n+    public String toString() {\n+        return \"DowJones{\" +\n+                \"symbol='\" + symbol + '\\'' +\n+                \", name='\" + name + '\\'' +\n+                \", sector='\" + sector + '\\'' +\n+                \", subSector='\" + subSector + '\\'' +\n+                \", headQuarter='\" + headQuarter + '\\'' +\n+                \", dateFirstAdded='\" + dateFirstAdded + '\\'' +\n+                \", cik='\" + cik + '\\'' +\n+                \", founded='\" + founded + '\\'' +\n+                '}';\n+    }\n+\n+}"
  }
]
