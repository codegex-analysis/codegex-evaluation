[
  {
    "sha": "896506b93f9de17b6f7d23105b172aea3565abb0",
    "filename": "app/src/main/java/info/nightscout/androidaps/activities/StatsActivity.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/activities/StatsActivity.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/activities/StatsActivity.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/activities/StatsActivity.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -2,6 +2,7 @@ package info.nightscout.androidaps.activities\n \n import android.os.Bundle\n import info.nightscout.androidaps.R\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.ActivityStatsBinding\n import info.nightscout.androidaps.logging.UserEntryLogger\n import info.nightscout.androidaps.utils.ActivityMonitor\n@@ -31,7 +32,7 @@ class StatsActivity : NoSplashAppCompatActivity() {\n         binding.ok.setOnClickListener { finish() }\n         binding.reset.setOnClickListener {\n             OKDialog.showConfirmation(this, resourceHelper.gs(R.string.doyouwantresetstats)) {\n-                uel.log(\"STATS RESET\")\n+                uel.log(Action.STAT_RESET)\n                 activityMonitor.reset()\n                 recreate()\n             }"
  },
  {
    "sha": "52dea0d14e02497b0d939fd6aa37030db982477f",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/CalibrationDialog.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/CalibrationDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/CalibrationDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/CalibrationDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -9,10 +9,10 @@ import dagger.android.HasAndroidInjector\n import info.nightscout.androidaps.Constants\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.data.Profile\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.DialogCalibrationBinding\n import info.nightscout.androidaps.interfaces.ProfileFunction\n import info.nightscout.androidaps.logging.UserEntryLogger\n-import info.nightscout.androidaps.plugins.iob.iobCobCalculator.GlucoseStatus\n import info.nightscout.androidaps.plugins.iob.iobCobCalculator.GlucoseStatusProvider\n import info.nightscout.androidaps.utils.HtmlHelper\n import info.nightscout.androidaps.utils.XdripCalibrations\n@@ -79,7 +79,7 @@ class CalibrationDialog : DialogFragmentWithDate() {\n         if (bg > 0) {\n             activity?.let { activity ->\n                 OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.overview_calibration), HtmlHelper.fromHtml(Joiner.on(\"<br/>\").join(actions)), {\n-                    uel.log(\"CALIBRATION\", d1 = bg)\n+                    uel.log(Action.CALIBRATION, ValueWithUnit(bg, units))\n                     xdripCalibrations.sendIntent(bg)\n                 })\n             }"
  },
  {
    "sha": "56dfbae96cd5a3a46a7c4adbb43ae05be2f90ef3",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/CarbsDialog.kt",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/CarbsDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/CarbsDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/CarbsDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -14,6 +14,7 @@ import info.nightscout.androidaps.data.Profile\n import info.nightscout.androidaps.database.AppRepository\n import info.nightscout.androidaps.database.entities.TemporaryTarget\n import info.nightscout.androidaps.database.entities.TherapyEvent\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.database.transactions.InsertTemporaryTargetAndCancelCurrentTransaction\n import info.nightscout.androidaps.databinding.DialogCarbsBinding\n import info.nightscout.androidaps.interfaces.Constraint\n@@ -221,7 +222,7 @@ class CarbsDialog : DialogFragmentWithDate() {\n                 OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.carbs), HtmlHelper.fromHtml(Joiner.on(\"<br/>\").join(actions)), {\n                     when {\n                         activitySelected   -> {\n-                            uel.log(\"TT ACTIVITY\", d1 = activityTT, i1 = activityTTDuration)\n+                            uel.log(Action.TT, ValueWithUnit(TemporaryTarget.Reason.ACTIVITY.text, Units.TherapyEvent), ValueWithUnit(activityTT, units) , ValueWithUnit(activityTTDuration, Units.M))\n                             disposable += repository.runTransactionForResult(InsertTemporaryTargetAndCancelCurrentTransaction(\n                                 timestamp = System.currentTimeMillis(),\n                                 duration = TimeUnit.MINUTES.toMillis(activityTTDuration.toLong()),\n@@ -237,7 +238,7 @@ class CarbsDialog : DialogFragmentWithDate() {\n                         }\n \n                         eatingSoonSelected -> {\n-                            uel.log(\"TT EATING SOON\", d1 = eatingSoonTT, i1 = eatingSoonTTDuration)\n+                            uel.log(Action.TT, ValueWithUnit(TemporaryTarget.Reason.EATING_SOON.text, Units.TherapyEvent), ValueWithUnit(eatingSoonTT, units) , ValueWithUnit(eatingSoonTTDuration, Units.M))\n                             disposable += repository.runTransactionForResult(InsertTemporaryTargetAndCancelCurrentTransaction(\n                                 timestamp = System.currentTimeMillis(),\n                                 duration = TimeUnit.MINUTES.toMillis(eatingSoonTTDuration.toLong()),\n@@ -253,7 +254,7 @@ class CarbsDialog : DialogFragmentWithDate() {\n                         }\n \n                         hypoSelected       -> {\n-                            uel.log(\"TT HYPO\", d1 = hypoTT, i1 = hypoTTDuration)\n+                            uel.log(Action.TT, ValueWithUnit(TemporaryTarget.Reason.HYPOGLYCEMIA.text, Units.TherapyEvent), ValueWithUnit(hypoTT, units) , ValueWithUnit(hypoTTDuration, Units.M))\n                             disposable += repository.runTransactionForResult(InsertTemporaryTargetAndCancelCurrentTransaction(\n                                 timestamp = System.currentTimeMillis(),\n                                 duration = TimeUnit.MINUTES.toMillis(hypoTTDuration.toLong()),\n@@ -270,13 +271,12 @@ class CarbsDialog : DialogFragmentWithDate() {\n                     }\n                     if (carbsAfterConstraints > 0) {\n                         if (duration == 0) {\n-                            uel.log(\"CARBS\", d1 = carbsAfterConstraints.toDouble(), i1 = timeOffset)\n                             carbsGenerator.createCarb(carbsAfterConstraints, time, TherapyEvent.Type.CARBS_CORRECTION.text, notes)\n                         } else {\n-                            uel.log(\"CARBS\", d1 = carbsAfterConstraints.toDouble(), i1 = timeOffset, i2 = duration)\n                             carbsGenerator.generateCarbs(carbsAfterConstraints, time, duration, notes)\n                             nsUpload.uploadEvent(TherapyEvent.Type.NOTE.text, DateUtil.now() - 2000, resourceHelper.gs(R.string.generated_ecarbs_note, carbsAfterConstraints, duration, timeOffset))\n                         }\n+                        uel.log(Action.CARBS, notes, ValueWithUnit(eventTime, Units.Timestamp, eventTimeChanged), ValueWithUnit(carbsAfterConstraints, Units.G), ValueWithUnit(timeOffset, Units.M, timeOffset != 0), ValueWithUnit(duration, Units.H, duration != 0))\n                     }\n                     if (useAlarm && carbs > 0 && timeOffset > 0) {\n                         carbTimer.scheduleReminder(dateUtil._now() + T.mins(timeOffset.toLong()).msecs())"
  },
  {
    "sha": "122b38cd8145d54f489eb42bb5719e76b29230c7",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/CareDialog.kt",
    "status": "modified",
    "additions": 9,
    "deletions": 4,
    "changes": 13,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/CareDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/CareDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/CareDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -16,6 +16,7 @@ import info.nightscout.androidaps.data.Profile\n import info.nightscout.androidaps.database.AppRepository\n import info.nightscout.androidaps.database.entities.TherapyEvent\n import info.nightscout.androidaps.database.transactions.InsertTherapyEventIfNewTransaction\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.DialogCareBinding\n import info.nightscout.androidaps.interfaces.ProfileFunction\n import info.nightscout.androidaps.logging.LTag\n@@ -59,6 +60,7 @@ class CareDialog : DialogFragmentWithDate() {\n     }\n \n     private var options: EventType = EventType.BGCHECK\n+    private var valuesWithUnit = mutableListOf<ValueWithUnit>()\n \n     @StringRes\n     private var event: Int = R.string.none\n@@ -200,19 +202,21 @@ class CareDialog : DialogFragmentWithDate() {\n             actions.add(resourceHelper.gs(R.string.treatments_wizard_bg_label) + \": \" + Profile.toCurrentUnitsString(profileFunction, binding.bg.value) + \" \" + resourceHelper.gs(unitResId))\n             therapyEvent.glucoseType = meterType\n             therapyEvent.glucose = binding.bg.value\n+            valuesWithUnit.add(ValueWithUnit(binding.bg.value.toDouble(), profileFunction.getUnits()))\n+            valuesWithUnit.add(ValueWithUnit(meterType.text, Units.TherapyEvent))\n         }\n         if (options == EventType.NOTE || options == EventType.EXERCISE) {\n             actions.add(resourceHelper.gs(R.string.careportal_newnstreatment_duration_label) + \": \" + resourceHelper.gs(R.string.format_mins, binding.duration.value.toInt()))\n             therapyEvent.duration = T.mins(binding.duration.value.toLong()).msecs()\n+            valuesWithUnit.add(ValueWithUnit(binding.duration.value.toInt(), Units.M, !binding.duration.value.equals(0.0)))\n         }\n         val notes = binding.notesLayout.notes.text.toString()\n         if (notes.isNotEmpty()) {\n             actions.add(resourceHelper.gs(R.string.notes_label) + \": \" + notes)\n             therapyEvent.note = notes\n         }\n \n-        if (eventTimeChanged)\n-            actions.add(resourceHelper.gs(R.string.time) + \": \" + dateUtil.dateAndTimeString(eventTime))\n+        if (eventTimeChanged) actions.add(resourceHelper.gs(R.string.time) + \": \" + dateUtil.dateAndTimeString(eventTime))\n \n         therapyEvent.enteredBy = enteredBy\n \n@@ -223,8 +227,9 @@ class CareDialog : DialogFragmentWithDate() {\n                 }, {\n                     aapsLogger.error(LTag.BGSOURCE, \"Error while saving therapy event\", it)\n                 })\n-\n-                uel.log(\"CAREPORTAL\", therapyEvent.type.text)\n+                valuesWithUnit.add(0, ValueWithUnit(eventTime, Units.Timestamp, eventTimeChanged))\n+                valuesWithUnit.add(1, ValueWithUnit(therapyEvent.type.text, Units.TherapyEvent))\n+                uel.log(Action.CAREPORTAL, notes, valuesWithUnit)\n             }, null)\n         }\n         return true"
  },
  {
    "sha": "4116091eedc178ecbe90ab36fac58afe95e72af3",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/ExtendedBolusDialog.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/ExtendedBolusDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/ExtendedBolusDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/ExtendedBolusDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -8,6 +8,7 @@ import android.view.ViewGroup\n import com.google.common.base.Joiner\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.activities.ErrorHelperActivity\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.DialogExtendedbolusBinding\n import info.nightscout.androidaps.interfaces.ActivePluginProvider\n import info.nightscout.androidaps.interfaces.CommandQueueProvider\n@@ -87,7 +88,7 @@ class ExtendedBolusDialog : DialogFragmentWithDate() {\n \n         activity?.let { activity ->\n             OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.extended_bolus), HtmlHelper.fromHtml(Joiner.on(\"<br/>\").join(actions)), {\n-                uel.log(\"EXTENDED BOLUS\", d1 = insulinAfterConstraint, i1 = durationInMinutes)\n+                uel.log(Action.EXTENDED_BOLUS, ValueWithUnit(insulinAfterConstraint, Units.U), ValueWithUnit(durationInMinutes, Units.M))\n                 commandQueue.extendedBolus(insulinAfterConstraint, durationInMinutes, object : Callback() {\n                     override fun run() {\n                         if (!result.success) {"
  },
  {
    "sha": "09f9234937eb6c41181ff2d13b69ac52dfce48f6",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/FillDialog.kt",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/FillDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/FillDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/FillDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -12,6 +12,7 @@ import info.nightscout.androidaps.data.DetailedBolusInfo\n import info.nightscout.androidaps.database.AppRepository\n import info.nightscout.androidaps.database.entities.TherapyEvent\n import info.nightscout.androidaps.database.transactions.InsertTherapyEventIfNewTransaction\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.DialogFillBinding\n import info.nightscout.androidaps.db.Source\n import info.nightscout.androidaps.interfaces.ActivePluginProvider\n@@ -135,11 +136,11 @@ class FillDialog : DialogFragmentWithDate() {\n             activity?.let { activity ->\n                 OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.primefill), HtmlHelper.fromHtml(Joiner.on(\"<br/>\").join(actions)), {\n                     if (insulinAfterConstraints > 0) {\n-                        uel.log(\"PRIME BOLUS\", d1 = insulinAfterConstraints)\n+                        uel.log(Action.PRIME_BOLUS, notes, ValueWithUnit(insulinAfterConstraints, Units.U, insulinAfterConstraints != 0.0))\n                         requestPrimeBolus(insulinAfterConstraints, notes)\n                     }\n                     if (siteChange) {\n-                        uel.log(\"SITE CHANGE\")\n+                        uel.log(Action.CAREPORTAL, notes, ValueWithUnit(TherapyEvent.Type.CANNULA_CHANGE.text, Units.TherapyEvent))\n                         disposable += repository.runTransactionForResult(InsertTherapyEventIfNewTransaction(\n                             timestamp = eventTime,\n                             type = TherapyEvent.Type.CANNULA_CHANGE,\n@@ -153,7 +154,7 @@ class FillDialog : DialogFragmentWithDate() {\n                     }\n                     if (insulinChange) {\n                         // add a second for case of both checked\n-                        uel.log(\"INSULIN CHANGE\")\n+                        uel.log(Action.CAREPORTAL, notes, ValueWithUnit(TherapyEvent.Type.INSULIN_CHANGE.text, Units.TherapyEvent))\n                         disposable += repository.runTransactionForResult(InsertTherapyEventIfNewTransaction(\n                             timestamp = eventTime + 1000,\n                             type = TherapyEvent.Type.INSULIN_CHANGE,"
  },
  {
    "sha": "da3347485a4fd67c0d546d72b85b15ffef580634",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/InsulinDialog.kt",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/InsulinDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/InsulinDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/InsulinDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -17,6 +17,7 @@ import info.nightscout.androidaps.data.Profile\n import info.nightscout.androidaps.database.AppRepository\n import info.nightscout.androidaps.database.entities.TemporaryTarget\n import info.nightscout.androidaps.database.entities.TherapyEvent\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.database.transactions.InsertTemporaryTargetAndCancelCurrentTransaction\n import info.nightscout.androidaps.databinding.DialogInsulinBinding\n import info.nightscout.androidaps.db.Source\n@@ -188,7 +189,7 @@ class InsulinDialog : DialogFragmentWithDate() {\n             activity?.let { activity ->\n                 OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.bolus), HtmlHelper.fromHtml(Joiner.on(\"<br/>\").join(actions)), {\n                     if (eatingSoonChecked) {\n-                        uel.log(\"TT EATING SOON\", d1 = eatingSoonTT, i1 = eatingSoonTTDuration)\n+                        uel.log(Action.TT, notes, ValueWithUnit(TemporaryTarget.Reason.EATING_SOON.text, Units.TherapyEvent), ValueWithUnit(eatingSoonTT, units), ValueWithUnit(eatingSoonTTDuration, Units.M))\n                         disposable += repository.runTransactionForResult(InsertTemporaryTargetAndCancelCurrentTransaction(\n                             timestamp = System.currentTimeMillis(),\n                             duration = TimeUnit.MINUTES.toMillis(eatingSoonTTDuration.toLong()),\n@@ -210,11 +211,11 @@ class InsulinDialog : DialogFragmentWithDate() {\n                         detailedBolusInfo.source = Source.USER\n                         detailedBolusInfo.notes = notes\n                         if (recordOnlyChecked) {\n-                            uel.log(\"BOLUS RECORD\", d1 = insulinAfterConstraints, i1 = timeOffset)\n+                            uel.log(Action.BOLUS_RECORD, notes, ValueWithUnit(insulinAfterConstraints, Units.U), ValueWithUnit(timeOffset, Units.M, timeOffset!= 0))\n                             detailedBolusInfo.date = time\n                             activePlugin.activeTreatments.addToHistoryTreatment(detailedBolusInfo, false)\n                         } else {\n-                            uel.log(\"BOLUS\", d1 = insulinAfterConstraints)\n+                            uel.log(Action.BOLUS, notes, ValueWithUnit(insulinAfterConstraints, Units.U))\n                             detailedBolusInfo.date = DateUtil.now()\n                             commandQueue.bolus(detailedBolusInfo, object : Callback() {\n                                 override fun run() {"
  },
  {
    "sha": "9b10142c8c0e84560811b069a7b24701dec9dd08",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/LoopDialog.kt",
    "status": "modified",
    "additions": 16,
    "deletions": 15,
    "changes": 31,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/LoopDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/LoopDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/LoopDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -12,6 +12,7 @@ import androidx.fragment.app.FragmentManager\n import dagger.android.support.DaggerDialogFragment\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.activities.ErrorHelperActivity\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.DialogLoopBinding\n import info.nightscout.androidaps.events.EventPreferenceChange\n import info.nightscout.androidaps.events.EventRefreshOverview\n@@ -238,28 +239,28 @@ class LoopDialog : DaggerDialogFragment() {\n         val profile = profileFunction.getProfile() ?: return true\n         when (v.id) {\n             R.id.overview_closeloop -> {\n-                uel.log(\"CLOSED LOOP MODE\")\n+                uel.log(Action.CLOSED_LOOP_MODE)\n                 sp.putString(R.string.key_aps_mode, \"closed\")\n                 rxBus.send(EventPreferenceChange(resourceHelper.gs(R.string.closedloop)))\n                 return true\n             }\n \n             R.id.overview_lgsloop -> {\n-                uel.log(\"LGS LOOP MODE\")\n+                uel.log(Action.LGS_LOOP_MODE)\n                 sp.putString(R.string.key_aps_mode, \"lgs\")\n                 rxBus.send(EventPreferenceChange(resourceHelper.gs(R.string.lowglucosesuspend)))\n                 return true\n             }\n \n             R.id.overview_openloop -> {\n-                uel.log(\"OPEN LOOP MODE\")\n+                uel.log(Action.OPEN_LOOP_MODE)\n                 sp.putString(R.string.key_aps_mode, \"open\")\n                 rxBus.send(EventPreferenceChange(resourceHelper.gs(R.string.lowglucosesuspend)))\n                 return true\n             }\n \n             R.id.overview_disable -> {\n-                uel.log(\"LOOP DISABLED\")\n+                uel.log(Action.LOOP_DISABLED)\n                 loopPlugin.setPluginEnabled(PluginType.LOOP, false)\n                 loopPlugin.setFragmentVisible(PluginType.LOOP, false)\n                 configBuilderPlugin.storeSettings(\"DisablingLoop\")\n@@ -276,7 +277,7 @@ class LoopDialog : DaggerDialogFragment() {\n             }\n \n             R.id.overview_enable -> {\n-                uel.log(\"LOOP ENABLED\")\n+                uel.log(Action.LOOP_ENABLED)\n                 loopPlugin.setPluginEnabled(PluginType.LOOP, true)\n                 loopPlugin.setFragmentVisible(PluginType.LOOP, true)\n                 configBuilderPlugin.storeSettings(\"EnablingLoop\")\n@@ -286,7 +287,7 @@ class LoopDialog : DaggerDialogFragment() {\n             }\n \n             R.id.overview_resume, R.id.overview_reconnect -> {\n-                uel.log(\"RESUME\")\n+                uel.log(if (v.id==R.id.overview_resume) Action.RESUME else Action.RECONNECT )\n                 loopPlugin.suspendTo(0L)\n                 rxBus.send(EventRefreshOverview(\"suspendmenu\"))\n                 commandQueue.cancelTempBasal(true, object : Callback() {\n@@ -302,64 +303,64 @@ class LoopDialog : DaggerDialogFragment() {\n             }\n \n             R.id.overview_suspend_1h -> {\n-                uel.log(\"SUSPEND 1h\")\n+                uel.log(Action.SUSPEND, ValueWithUnit(1, Units.H))\n                 loopPlugin.suspendLoop(60)\n                 rxBus.send(EventRefreshOverview(\"suspendmenu\"))\n                 return true\n             }\n \n             R.id.overview_suspend_2h -> {\n-                uel.log(\"SUSPEND 2h\")\n+                uel.log(Action.SUSPEND, ValueWithUnit(2, Units.H))\n                 loopPlugin.suspendLoop(120)\n                 rxBus.send(EventRefreshOverview(\"suspendmenu\"))\n                 return true\n             }\n \n             R.id.overview_suspend_3h -> {\n-                uel.log(\"SUSPEND 3h\")\n+                uel.log(Action.SUSPEND, ValueWithUnit(3, Units.H))\n                 loopPlugin.suspendLoop(180)\n                 rxBus.send(EventRefreshOverview(\"suspendmenu\"))\n                 return true\n             }\n \n             R.id.overview_suspend_10h -> {\n-                uel.log(\"SUSPEND 10h\")\n+                uel.log(Action.SUSPEND, ValueWithUnit(10, Units.H))\n                 loopPlugin.suspendLoop(600)\n                 rxBus.send(EventRefreshOverview(\"suspendmenu\"))\n                 return true\n             }\n \n             R.id.overview_disconnect_15m -> {\n-                uel.log(\"DISCONNECT 15m\")\n+                uel.log(Action.DISCONNECT, ValueWithUnit(15, Units.M))\n                 loopPlugin.disconnectPump(15, profile)\n                 rxBus.send(EventRefreshOverview(\"suspendmenu\"))\n                 return true\n             }\n \n             R.id.overview_disconnect_30m -> {\n-                uel.log(\"DISCONNECT 30m\")\n+                uel.log(Action.DISCONNECT, ValueWithUnit(30, Units.M))\n                 loopPlugin.disconnectPump(30, profile)\n                 rxBus.send(EventRefreshOverview(\"suspendmenu\"))\n                 return true\n             }\n \n             R.id.overview_disconnect_1h -> {\n-                uel.log(\"DISCONNECT 1h\")\n+                uel.log(Action.DISCONNECT, ValueWithUnit(1, Units.H))\n                 loopPlugin.disconnectPump(60, profile)\n                 sp.putBoolean(R.string.key_objectiveusedisconnect, true)\n                 rxBus.send(EventRefreshOverview(\"suspendmenu\"))\n                 return true\n             }\n \n             R.id.overview_disconnect_2h -> {\n-                uel.log(\"DISCONNECT 2h\")\n+                uel.log(Action.DISCONNECT, ValueWithUnit(2, Units.H))\n                 loopPlugin.disconnectPump(120, profile)\n                 rxBus.send(EventRefreshOverview(\"suspendmenu\"))\n                 return true\n             }\n \n             R.id.overview_disconnect_3h -> {\n-                uel.log(\"DISCONNECT 3h\")\n+                uel.log(Action.DISCONNECT, ValueWithUnit(3, Units.H))\n                 loopPlugin.disconnectPump(180, profile)\n                 rxBus.send(EventRefreshOverview(\"suspendmenu\"))\n                 return true"
  },
  {
    "sha": "692f3ee431632d5bd38ccedc6330a6717fdeb777",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/ProfileSwitchDialog.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/ProfileSwitchDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/ProfileSwitchDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/ProfileSwitchDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -8,6 +8,7 @@ import android.widget.ArrayAdapter\n import com.google.common.base.Joiner\n import info.nightscout.androidaps.Constants\n import info.nightscout.androidaps.R\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.DialogProfileswitchBinding\n import info.nightscout.androidaps.interfaces.ActivePluginProvider\n import info.nightscout.androidaps.interfaces.ProfileFunction\n@@ -124,7 +125,7 @@ class ProfileSwitchDialog : DialogFragmentWithDate() {\n \n         activity?.let { activity ->\n             OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.careportal_profileswitch), HtmlHelper.fromHtml(Joiner.on(\"<br/>\").join(actions)), {\n-                uel.log(\"PROFILE SWITCH\", d1 = percent.toDouble(), i1 = timeShift, i2 = duration)\n+                uel.log(Action.PROFILE_SWITCH, notes, ValueWithUnit(eventTime, Units.Timestamp, eventTimeChanged), ValueWithUnit(profile, Units.None), ValueWithUnit(percent, Units.Percent), ValueWithUnit(timeShift, Units.H, timeShift != 0), ValueWithUnit(duration, Units.M, duration != 0))\n                 treatmentsPlugin.doProfileSwitch(profileStore, profile, duration, percent, timeShift, eventTime)\n             })\n         }"
  },
  {
    "sha": "01c9aa8d2a0fa69fe6beb47d520378f14d86fac0",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/TempBasalDialog.kt",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/TempBasalDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/TempBasalDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/TempBasalDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -8,6 +8,7 @@ import android.view.ViewGroup\n import com.google.common.base.Joiner\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.activities.ErrorHelperActivity\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.DialogTempbasalBinding\n import info.nightscout.androidaps.interfaces.ActivePluginProvider\n import info.nightscout.androidaps.interfaces.CommandQueueProvider\n@@ -125,10 +126,10 @@ class TempBasalDialog : DialogFragmentWithDate() {\n                     }\n                 }\n                 if (isPercentPump) {\n-                    uel.log(\"TEMP BASAL\", d1 = percent.toDouble(), i1 = durationInMinutes)\n+                    uel.log(Action.TEMP_BASAL, ValueWithUnit(percent, Units.Percent), ValueWithUnit(durationInMinutes, Units.M))\n                     commandQueue.tempBasalPercent(percent, durationInMinutes, true, profile, callback)\n                 } else {\n-                    uel.log(\"TEMP BASAL\", d1 = absolute, i1 = durationInMinutes)\n+                    uel.log(Action.TEMP_BASAL, ValueWithUnit(absolute, Units.U), ValueWithUnit(durationInMinutes, Units.M))\n                     commandQueue.tempBasalAbsolute(absolute, durationInMinutes, true, profile, callback)\n                 }\n             })"
  },
  {
    "sha": "7cebd826f08a944d65b6b0148defd2facddafe89",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/TempTargetDialog.kt",
    "status": "modified",
    "additions": 16,
    "deletions": 2,
    "changes": 18,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/TempTargetDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/TempTargetDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/TempTargetDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -13,6 +13,7 @@ import info.nightscout.androidaps.data.Profile\n import info.nightscout.androidaps.database.AppRepository\n import info.nightscout.androidaps.database.ValueWrapper\n import info.nightscout.androidaps.database.entities.TemporaryTarget\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.database.transactions.CancelCurrentTemporaryTargetIfAnyTransaction\n import info.nightscout.androidaps.database.transactions.InsertTemporaryTargetAndCancelCurrentTransaction\n import info.nightscout.androidaps.databinding.DialogTemptargetBinding\n@@ -145,6 +146,10 @@ class TempTargetDialog : DialogFragmentWithDate() {\n                 binding.duration.value = defaultValueHelper.determineHypoTTDuration().toDouble()\n                 binding.reason.setSelection(reasonList.indexOf(resourceHelper.gs(R.string.hypo)))\n             }\n+\n+            R.id.cancel -> {\n+                binding.duration.value = 0.0\n+            }\n         }\n     }\n \n@@ -157,7 +162,7 @@ class TempTargetDialog : DialogFragmentWithDate() {\n     override fun submit(): Boolean {\n         if (_binding == null) return false\n         val actions: LinkedList<String> = LinkedList()\n-        val reason = binding.reason.selectedItem?.toString() ?: return false\n+        var reason = binding.reason.selectedItem?.toString() ?: return false\n         val unitResId = if (profileFunction.getUnits() == Constants.MGDL) R.string.mgdl else R.string.mmol\n         val target = binding.temptarget.value\n         val duration = binding.duration.value.toInt()\n@@ -167,13 +172,21 @@ class TempTargetDialog : DialogFragmentWithDate() {\n             actions.add(resourceHelper.gs(R.string.duration) + \": \" + resourceHelper.gs(R.string.format_mins, duration))\n         } else {\n             actions.add(resourceHelper.gs(R.string.stoptemptarget))\n+            reason = resourceHelper.gs(R.string.stoptemptarget)\n         }\n         if (eventTimeChanged)\n             actions.add(resourceHelper.gs(R.string.time) + \": \" + dateUtil.dateAndTimeString(eventTime))\n \n         activity?.let { activity ->\n             OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.careportal_temporarytarget), HtmlHelper.fromHtml(Joiner.on(\"<br/>\").join(actions)), {\n-                uel.log(\"TT\", d1 = target, i1 = duration)\n+                val units = profileFunction.getUnits()\n+                when(reason) {\n+                    resourceHelper.gs(R.string.eatingsoon) -> uel.log(Action.TT, ValueWithUnit(eventTime, Units.Timestamp, eventTimeChanged), ValueWithUnit(TemporaryTarget.Reason.EATING_SOON.text, Units.TherapyEvent), ValueWithUnit(target, units), ValueWithUnit(duration, Units.M))\n+                    resourceHelper.gs(R.string.activity) -> uel.log(Action.TT, ValueWithUnit(eventTime, Units.Timestamp, eventTimeChanged), ValueWithUnit(TemporaryTarget.Reason.ACTIVITY.text, Units.TherapyEvent), ValueWithUnit(target, units), ValueWithUnit(duration, Units.M))\n+                    resourceHelper.gs(R.string.hypo) -> uel.log(Action.TT, ValueWithUnit(eventTime, Units.Timestamp, eventTimeChanged), ValueWithUnit(TemporaryTarget.Reason.HYPOGLYCEMIA.text, Units.TherapyEvent), ValueWithUnit(target, units), ValueWithUnit(duration, Units.M))\n+                    resourceHelper.gs(R.string.manual) -> uel.log(Action.TT, ValueWithUnit(eventTime, Units.Timestamp, eventTimeChanged), ValueWithUnit(TemporaryTarget.Reason.CUSTOM.text, Units.TherapyEvent), ValueWithUnit(target, units), ValueWithUnit(duration, Units.M))\n+                    resourceHelper.gs(R.string.stoptemptarget) -> uel.log(Action.CANCEL_TT, ValueWithUnit(eventTime, Units.Timestamp, eventTimeChanged))\n+                }\n                 if (target == 0.0 || duration == 0) {\n                     disposable += repository.runTransactionForResult(CancelCurrentTemporaryTargetIfAnyTransaction(eventTime))\n                         .subscribe({ result ->\n@@ -200,6 +213,7 @@ class TempTargetDialog : DialogFragmentWithDate() {\n                         aapsLogger.error(LTag.BGSOURCE, \"Error while saving temporary target\", it)\n                     })\n                 }\n+\n                 if (duration == 10) sp.putBoolean(R.string.key_objectiveusetemptarget, true)\n             })\n         }"
  },
  {
    "sha": "5f421134a3f5cd4cd2558e32008f39e9fe0f40e4",
    "filename": "app/src/main/java/info/nightscout/androidaps/dialogs/TreatmentDialog.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/TreatmentDialog.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/dialogs/TreatmentDialog.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/dialogs/TreatmentDialog.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -13,6 +13,7 @@ import info.nightscout.androidaps.R\n import info.nightscout.androidaps.activities.ErrorHelperActivity\n import info.nightscout.androidaps.data.DetailedBolusInfo\n import info.nightscout.androidaps.database.entities.TherapyEvent\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.DialogTreatmentBinding\n import info.nightscout.androidaps.db.Source\n import info.nightscout.androidaps.interfaces.ActivePluginProvider\n@@ -129,7 +130,7 @@ class TreatmentDialog : DialogFragmentWithDate() {\n         if (insulinAfterConstraints > 0 || carbsAfterConstraints > 0) {\n             activity?.let { activity ->\n                 OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.overview_treatment_label), HtmlHelper.fromHtml(Joiner.on(\"<br/>\").join(actions)), {\n-                    uel.log(\"TREATMENT\", d1 = insulin, i1 = carbs)\n+                    uel.log(Action.TREATMENT, ValueWithUnit(insulin, Units.U, insulin != 0.0), ValueWithUnit(carbs, Units.G, carbs != 0))\n                     val detailedBolusInfo = DetailedBolusInfo()\n                     if (insulinAfterConstraints == 0.0) detailedBolusInfo.eventType = TherapyEvent.Type.CARBS_CORRECTION.text\n                     if (carbsAfterConstraints == 0) detailedBolusInfo.eventType = TherapyEvent.Type.CORRECTION_BOLUS.text"
  },
  {
    "sha": "d2065c238c3ecff0e632d57af8d94fe9e95814bd",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/configBuilder/ConfigBuilderPlugin.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/configBuilder/ConfigBuilderPlugin.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/configBuilder/ConfigBuilderPlugin.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/configBuilder/ConfigBuilderPlugin.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -3,6 +3,7 @@ package info.nightscout.androidaps.plugins.configBuilder\n import androidx.fragment.app.FragmentActivity\n import dagger.android.HasAndroidInjector\n import info.nightscout.androidaps.R\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.events.EventAppInitialized\n import info.nightscout.androidaps.events.EventConfigBuilderChange\n import info.nightscout.androidaps.events.EventRebuildTabs\n@@ -142,7 +143,7 @@ class ConfigBuilderPlugin @Inject constructor(\n             OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.allow_hardware_pump_text), Runnable {\n                 performPluginSwitch(changedPlugin, newState, type)\n                 sp.putBoolean(\"allow_hardware_pump\", true)\n-                uel.log(\"HW PUMP ALLOWED\")\n+                uel.log(Action.HW_PUMP_ALLOWED)\n                 aapsLogger.debug(LTag.PUMP, \"First time HW pump allowed!\")\n             }, Runnable {\n                 rxBus.send(EventConfigBuilderUpdateGui())"
  },
  {
    "sha": "22fcb7052f9ed0c9e76b4ec5880792a6107abd7f",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/constraints/objectives/ObjectivesFragment.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/constraints/objectives/ObjectivesFragment.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/constraints/objectives/ObjectivesFragment.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/constraints/objectives/ObjectivesFragment.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -17,6 +17,7 @@ import androidx.recyclerview.widget.LinearSmoothScroller\n import androidx.recyclerview.widget.RecyclerView\n import dagger.android.support.DaggerFragment\n import info.nightscout.androidaps.R\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.ObjectivesFragmentBinding\n import info.nightscout.androidaps.databinding.ObjectivesItemBinding\n import info.nightscout.androidaps.dialogs.NtpProgressDialog\n@@ -307,7 +308,7 @@ class ObjectivesFragment : DaggerFragment() {\n             holder.binding.unstart.setOnClickListener {\n                 activity?.let { activity ->\n                     OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.objectives), resourceHelper.gs(R.string.doyouwantresetstart), Runnable {\n-                        uel.log(\"OBJECTIVE UNSTARTED\", i1 = position + 1)\n+                        uel.log(Action.OBJECTIVE_UNSTARTED, ValueWithUnit(position + 1, Units.None))\n                         objective.startedOn = 0\n                         scrollToCurrentObjective()\n                         rxBus.send(EventObjectivesUpdateGui())"
  },
  {
    "sha": "93090c753348199945f8203a5bbf9c226bd72530",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/constraints/objectives/ObjectivesPlugin.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/constraints/objectives/ObjectivesPlugin.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/constraints/objectives/ObjectivesPlugin.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/constraints/objectives/ObjectivesPlugin.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -7,6 +7,7 @@ import dagger.android.HasAndroidInjector\n import info.nightscout.androidaps.BuildConfig\n import info.nightscout.androidaps.Config\n import info.nightscout.androidaps.R\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.interfaces.*\n import info.nightscout.androidaps.logging.AAPSLogger\n import info.nightscout.androidaps.logging.UserEntryLogger\n@@ -142,7 +143,7 @@ class ObjectivesPlugin @Inject constructor(\n             sp.putLong(\"Objectives_\" + \"auto\" + \"_accomplished\", DateUtil.now())\n             setupObjectives()\n             OKDialog.show(activity, resourceHelper.gs(R.string.objectives), resourceHelper.gs(R.string.codeaccepted))\n-            uel.log(\"OBJECTIVES SKIPPED\")\n+            uel.log(Action.OBJECTIVES_SKIPPED)\n         } else {\n             OKDialog.show(activity, resourceHelper.gs(R.string.objectives), resourceHelper.gs(R.string.codeinvalid))\n         }"
  },
  {
    "sha": "6f735ba04bb284267c2bc62de9438dfd427e9821",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/general/actions/ActionsFragment.kt",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/actions/ActionsFragment.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/actions/ActionsFragment.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/general/actions/ActionsFragment.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -16,6 +16,7 @@ import info.nightscout.androidaps.Constants\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.activities.ErrorHelperActivity\n import info.nightscout.androidaps.activities.TDDStatsActivity\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.dialogs.*\n import info.nightscout.androidaps.events.*\n import info.nightscout.androidaps.historyBrowser.HistoryBrowseActivity\n@@ -154,7 +155,7 @@ class ActionsFragment : DaggerFragment() {\n         }\n         extendedBolusCancel?.setOnClickListener {\n             if (activePlugin.activeTreatments.isInHistoryExtendedBolusInProgress) {\n-                uel.log(\"CANCEL EXTENDED BOLUS\")\n+                uel.log(Action.CANCEL_EXTENDED_BOLUS)\n                 commandQueue.cancelExtended(object : Callback() {\n                     override fun run() {\n                         if (!result.success) {\n@@ -169,7 +170,7 @@ class ActionsFragment : DaggerFragment() {\n         }\n         cancelTempBasal?.setOnClickListener {\n             if (activePlugin.activeTreatments.isTempBasalInProgress) {\n-                uel.log(\"CANCEL TEMP BASAL\")\n+                uel.log(Action.CANCEL_TEMP_BASAL)\n                 commandQueue.cancelTempBasal(true, object : Callback() {\n                     override fun run() {\n                         if (!result.success) {"
  },
  {
    "sha": "f9ce2e17bb9e627b6b2332cc9d653dcd0b87a21d",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/general/food/FoodFragment.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/food/FoodFragment.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/food/FoodFragment.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/general/food/FoodFragment.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -15,6 +15,7 @@ import androidx.recyclerview.widget.LinearLayoutManager\n import androidx.recyclerview.widget.RecyclerView\n import dagger.android.support.DaggerFragment\n import info.nightscout.androidaps.R\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.FoodFragmentBinding\n import info.nightscout.androidaps.databinding.FoodItemBinding\n import info.nightscout.androidaps.events.EventFoodDatabaseChanged\n@@ -216,7 +217,7 @@ class FoodFragment : DaggerFragment() {\n                     val food = v.tag as Food\n                     activity?.let { activity ->\n                         OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.confirmation), resourceHelper.gs(R.string.removerecord) + \"\\n\" + food.name, DialogInterface.OnClickListener { _: DialogInterface?, _: Int ->\n-                            uel.log(\"FOOD REMOVED\", food.name)\n+                            uel.log(Action.FOOD_REMOVED, food.name)\n                             if (food._id != null && food._id != \"\") {\n                                 nsUpload.removeFoodFromNS(food._id)\n                             }"
  },
  {
    "sha": "8e9456ffda37a47e8bcb28d23eae4a723fdd4299",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/general/maintenance/ImportExportPrefs.kt",
    "status": "modified",
    "additions": 22,
    "deletions": 1,
    "changes": 23,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/maintenance/ImportExportPrefs.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/maintenance/ImportExportPrefs.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/general/maintenance/ImportExportPrefs.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -15,6 +15,8 @@ import info.nightscout.androidaps.BuildConfig\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.activities.DaggerAppCompatActivityWithResult\n import info.nightscout.androidaps.activities.PreferencesActivity\n+import info.nightscout.androidaps.database.entities.UserEntry\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.events.EventAppExit\n import info.nightscout.androidaps.interfaces.ConfigInterface\n import info.nightscout.androidaps.interfaces.ImportExportPrefsInterface\n@@ -34,6 +36,7 @@ import info.nightscout.androidaps.utils.buildHelper.BuildHelper\n import info.nightscout.androidaps.utils.protection.PasswordCheck\n import info.nightscout.androidaps.utils.resources.ResourceHelper\n import info.nightscout.androidaps.utils.sharedPreferences.SP\n+import io.reactivex.Single\n import java.io.File\n import java.io.FileNotFoundException\n import java.io.IOException\n@@ -344,7 +347,7 @@ class ImportExportPrefs @Inject constructor(\n     private fun restartAppAfterImport(context: Context) {\n         sp.putBoolean(R.string.key_setupwizard_processed, true)\n         OKDialog.show(context, resourceHelper.gs(R.string.setting_imported), resourceHelper.gs(R.string.restartingapp), Runnable {\n-            uel.log(\"IMPORT\")\n+            uel.log(Action.IMPORT_SETTINGS)\n             log.debug(LTag.CORE, \"Exiting\")\n             rxBus.send(EventAppExit())\n             if (context is AppCompatActivity) {\n@@ -354,4 +357,22 @@ class ImportExportPrefs @Inject constructor(\n             exitProcess(0)\n         })\n     }\n+\n+    override fun exportUserEntriesCsv(activity: FragmentActivity, listEntries: Single<List<UserEntry>>) {\n+        val entries = listEntries.blockingGet()\n+        prefFileList.ensureExportDirExists()\n+        val newFile = prefFileList.newExportXmlFile()\n+        //log.debug(\"XXXXX \" + classicPrefsFormat.UserEntriesToCsv(entries))\n+\n+        try {\n+            classicPrefsFormat.saveCsv(newFile, entries)\n+            ToastUtils.okToast(activity, resourceHelper.gs(R.string.ue_exported))\n+        } catch (e: FileNotFoundException) {\n+            ToastUtils.errorToast(activity, resourceHelper.gs(R.string.filenotfound) + \" \" + newFile)\n+            log.error(LTag.CORE, \"Unhandled exception\", e)\n+        } catch (e: IOException) {\n+            ToastUtils.errorToast(activity, e.message)\n+            log.error(LTag.CORE, \"Unhandled exception\", e)\n+        }\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "882cfc389fb31dd2011ce0a7c2d936b073e3d48f",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/general/maintenance/MaintenanceFragment.kt",
    "status": "modified",
    "additions": 13,
    "deletions": 4,
    "changes": 17,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/maintenance/MaintenanceFragment.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/maintenance/MaintenanceFragment.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/general/maintenance/MaintenanceFragment.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -8,6 +8,7 @@ import android.view.ViewGroup\n import dagger.android.support.DaggerFragment\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.database.AppRepository\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.MaintenanceFragmentBinding\n import info.nightscout.androidaps.events.EventNewBG\n import info.nightscout.androidaps.interfaces.DatabaseHelperInterface\n@@ -57,13 +58,13 @@ class MaintenanceFragment : DaggerFragment() {\n         super.onViewCreated(view, savedInstanceState)\n         binding.logSend.setOnClickListener { maintenancePlugin.sendLogs() }\n         binding.logDelete.setOnClickListener {\n-            uel.log(\"DELETE LOGS\")\n+            uel.log(Action.DELETE_LOGS)\n             maintenancePlugin.deleteLogs()\n         }\n         binding.navResetdb.setOnClickListener {\n             activity?.let { activity ->\n                 OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.maintenance), resourceHelper.gs(R.string.reset_db_confirm), Runnable {\n-                    uel.log(\"RESET DATABASES\")\n+                    uel.log(Action.RESET_DATABASES)\n                     compositeDisposable.add(\n                         fromAction {\n                             databaseHelper.resetDatabases()\n@@ -84,20 +85,28 @@ class MaintenanceFragment : DaggerFragment() {\n             }\n         }\n         binding.navExport.setOnClickListener {\n-            uel.log(\"EXPORT SETTINGS\")\n+            uel.log(Action.EXPORT_SETTINGS)\n             // start activity for checking permissions...\n             importExportPrefs.verifyStoragePermissions(this) {\n                 importExportPrefs.exportSharedPreferences(this)\n             }\n         }\n         binding.navImport.setOnClickListener {\n-            uel.log(\"IMPORT SETTINGS\")\n+            uel.log(Action.IMPORT_SETTINGS)\n             // start activity for checking permissions...\n             importExportPrefs.verifyStoragePermissions(this) {\n                 importExportPrefs.importSharedPreferences(this)\n             }\n         }\n         binding.navLogsettings.setOnClickListener { startActivity(Intent(activity, LogSettingActivity::class.java)) }\n+        binding.exportCsv.setOnClickListener {\n+            activity?.let { activity ->\n+                OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.ue_export_to_csv) + \"?\") {\n+                    uel.log(Action.EXPORT_CSV)\n+                    importExportPrefs.exportUserEntriesCsv(activity, repository.getAllUserEntries())\n+                }\n+            }\n+        }\n     }\n \n     @Synchronized"
  },
  {
    "sha": "fdb22635c7499f201aee6e10f47a17e9ec6c715e",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/NSClientFragment.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/NSClientFragment.java",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/NSClientFragment.java",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/NSClientFragment.java?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -16,6 +16,8 @@\n \n import dagger.android.support.DaggerFragment;\n import info.nightscout.androidaps.R;\n+import info.nightscout.androidaps.database.entities.UserEntry;\n+import info.nightscout.androidaps.database.entities.UserEntry.*;\n import info.nightscout.androidaps.logging.UserEntryLogger;\n import info.nightscout.androidaps.plugins.bus.RxBusWrapper;\n import info.nightscout.androidaps.plugins.general.nsclient.events.EventNSClientNewLog;\n@@ -123,7 +125,7 @@ public void onClick(View view) {\n                 break;\n             case R.id.nsclientinternal_clearqueue:\n                 OKDialog.showConfirmation(getContext(), resourceHelper.gs(R.string.nsclientinternal), resourceHelper.gs(R.string.clearqueueconfirm), () -> {\n-                    uel.log(\"NS QUEUE CLEARED\", \"\", 0.0, 0.0, 0, 0);\n+                    uel.log(Action.NS_QUEUE_CLEARED);\n                     uploadQueue.clearQueue();\n                     updateGui();\n                     fabricPrivacy.logCustom(\"NSClientClearQueue\");\n@@ -139,7 +141,7 @@ public void onClick(View view) {\n     public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n         switch (buttonView.getId()) {\n             case R.id.nsclientinternal_paused:\n-                uel.log(\"NS PAUSED\", \"\", 0.0, 0.0, isChecked ? 1 : 0, 0);\n+                uel.log(isChecked ? Action.NS_PAUSED : Action.NS_RESUME);\n                 nsClientPlugin.pause(isChecked);\n                 updateGui();\n                 fabricPrivacy.logCustom(\"NSClientPause\");"
  },
  {
    "sha": "66aa97f51a699bdbf8ed0536944e74c85d693501",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/NSClientPlugin.java",
    "status": "modified",
    "additions": 8,
    "deletions": 7,
    "changes": 15,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/NSClientPlugin.java",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/NSClientPlugin.java",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/NSClientPlugin.java?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -31,6 +31,7 @@\n import info.nightscout.androidaps.database.AppRepository;\n import info.nightscout.androidaps.database.entities.TemporaryTarget;\n import info.nightscout.androidaps.database.entities.TherapyEvent;\n+import info.nightscout.androidaps.database.entities.UserEntry.*;\n import info.nightscout.androidaps.database.transactions.SyncTemporaryTargetTransaction;\n import info.nightscout.androidaps.database.transactions.SyncTherapyEventTransaction;\n import info.nightscout.androidaps.events.EventAppExit;\n@@ -427,12 +428,12 @@ private void handleRemovedTreatmentFromNS(JSONObject json) {\n         // room  Temporary target\n         TemporaryTarget temporaryTarget = temporaryTargetFromNsIdForInvalidating(_id);\n         disposable.add(repository.runTransactionForResult(new SyncTemporaryTargetTransaction(temporaryTarget)).subscribe(\n-                result -> result.getInvalidated().forEach(record -> uel.log(\"TT DELETED FROM NS\", record.getReason().getText(), record.getLowTarget(), record.getHighTarget(), (int) record.getDuration(), 0)),\n+                result -> result.getInvalidated().forEach(record -> uel.log(Action.TT_DELETED_FROM_NS, new ValueWithUnit(record.getReason().getText(), Units.TherapyEvent), new ValueWithUnit(record.getLowTarget(), Units.Mg_Dl, true), new ValueWithUnit(record.getHighTarget(), Units.Mg_Dl, record.getLowTarget() != record.getHighTarget()), new ValueWithUnit((int) record.getDuration()/60000, Units.M, record.getDuration() != 0))),\n                 error -> aapsLogger.error(LTag.DATABASE, \"Error while removing temporary target\", error)));\n         // room  Therapy Event\n         TherapyEvent therapyEvent = therapyEventFromNsIdForInvalidating(_id);\n         disposable.add(repository.runTransactionForResult(new SyncTherapyEventTransaction(therapyEvent)).subscribe(\n-                result -> result.getInvalidated().forEach(record -> uel.log(\"CAREPORTAL EVENT DELETED FROM NS\", record.getType().getText(), 0.0, 0.0, 0, 0)),\n+                result -> result.getInvalidated().forEach(record -> uel.log(Action.CAREPORTAL_DELETED_FROM_NS, record.getNote() , new ValueWithUnit(record.getTimestamp(), Units.Timestamp, true), new ValueWithUnit(record.getType().getText(), Units.TherapyEvent))),\n                 error -> aapsLogger.error(LTag.DATABASE, \"Error while removing therapy event\", error)));\n         // new DB model\n         EventNsTreatment evtTreatment = new EventNsTreatment(EventNsTreatment.Companion.getREMOVE(), json);\n@@ -462,9 +463,9 @@ private void handleTreatmentFromNS(JSONObject json, String action) {\n                 disposable.add(repository.runTransactionForResult(new SyncTemporaryTargetTransaction(temporaryTarget))\n                         .subscribe(\n                                 result -> {\n-                                    result.getInserted().forEach(record -> uel.log(\"TT FROM NS\", record.getReason().getText(), record.getLowTarget(), record.getHighTarget(), (int) record.getDuration(), 0));\n-                                    result.getInvalidated().forEach(record -> uel.log(\"TT DELETED FROM NS\", record.getReason().getText(), record.getLowTarget(), record.getHighTarget(), (int) record.getDuration(), 0));\n-                                    result.getEnded().forEach(record -> uel.log(\"TT CANCELED FROM NS\", record.getReason().getText(), record.getLowTarget(), record.getHighTarget(), (int) record.getDuration(), 0));\n+                                    result.getInserted().forEach(record -> uel.log(Action.TT_FROM_NS, new ValueWithUnit(record.getReason().getText(), Units.TherapyEvent), new ValueWithUnit(record.getLowTarget(), Units.Mg_Dl, true), new ValueWithUnit(record.getHighTarget(), Units.Mg_Dl, record.getLowTarget() != record.getHighTarget()), new ValueWithUnit((int) record.getDuration()/60000, Units.M, true)));\n+                                    result.getInvalidated().forEach(record -> uel.log(Action.TT_DELETED_FROM_NS, new ValueWithUnit(record.getReason().getText(), Units.TherapyEvent), new ValueWithUnit(record.getLowTarget(), Units.Mg_Dl, true), new ValueWithUnit(record.getHighTarget(), Units.Mg_Dl, record.getLowTarget() != record.getHighTarget()), new ValueWithUnit((int) record.getDuration()/60000, Units.M, true)));\n+                                    result.getEnded().forEach(record -> uel.log(Action.TT_CANCELED_FROM_NS, new ValueWithUnit(record.getReason().getText(), Units.TherapyEvent), new ValueWithUnit(record.getLowTarget(), Units.Mg_Dl, true), new ValueWithUnit(record.getHighTarget(), Units.Mg_Dl, record.getLowTarget() != record.getHighTarget()), new ValueWithUnit((int) record.getDuration()/60000, Units.M, true)));\n                                 },\n                                 error -> aapsLogger.error(LTag.DATABASE, \"Error while saving temporary target\", error)));\n             } else {\n@@ -492,8 +493,8 @@ private void handleTreatmentFromNS(JSONObject json, String action) {\n                 disposable.add(repository.runTransactionForResult(new SyncTherapyEventTransaction(therapyEvent))\n                         .subscribe(\n                                 result -> {\n-                                    result.getInserted().forEach(record -> uel.log(\"CAREPORTAL EVENT NS\", record.getType().getText(), 0.0, 0.0, 0, 0));\n-                                    result.getInvalidated().forEach(record -> uel.log(\"CAREPORTAL EVENT DELETED FROM NS\", \"\", 0.0, 0.0, (int) record.getTimestamp(), 0));\n+                                    result.getInserted().forEach(record -> uel.log(Action.CAREPORTAL_FROM_NS, record.getNote() , new ValueWithUnit(record.getTimestamp(), Units.Timestamp, true), new ValueWithUnit(record.getType().getText(), Units.TherapyEvent)));\n+                                    result.getInvalidated().forEach(record -> uel.log(Action.CAREPORTAL_DELETED_FROM_NS, record.getNote() , new ValueWithUnit(record.getTimestamp(), Units.Timestamp, true), new ValueWithUnit(record.getType().getText(), Units.TherapyEvent)));\n                                 },\n                                 error -> aapsLogger.error(LTag.DATABASE, \"Error while saving therapy event\", error)));\n             } else {"
  },
  {
    "sha": "70d55c2dcc182b2528218ce3f644cd5f00cb744d",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/data/NSSettingsStatus.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/data/NSSettingsStatus.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/data/NSSettingsStatus.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/general/nsclient/data/NSSettingsStatus.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -3,6 +3,7 @@ package info.nightscout.androidaps.plugins.general.nsclient.data\n import android.content.Context\n import info.nightscout.androidaps.Config\n import info.nightscout.androidaps.R\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.logging.AAPSLogger\n import info.nightscout.androidaps.logging.LTag\n import info.nightscout.androidaps.logging.UserEntryLogger\n@@ -235,7 +236,7 @@ class NSSettingsStatus @Inject constructor(\n             getExtendedWarnValue(\"sage\", \"urgent\")?.let { sp.putDouble(R.string.key_statuslights_sage_critical, it) }\n             getExtendedWarnValue(\"bage\", \"warn\")?.let { sp.putDouble(R.string.key_statuslights_bage_warning, it) }\n             getExtendedWarnValue(\"bage\", \"urgent\")?.let { sp.putDouble(R.string.key_statuslights_bage_critical, it) }\n-            uel.log(\"NS SETTINGS COPIED\")\n+            uel.log(Action.NS_SETTINGS_COPIED)\n         }\n \n         if (context != null) OKDialog.showConfirmation(context, resourceHelper.gs(R.string.statuslights), resourceHelper.gs(R.string.copyexistingvalues), action)"
  },
  {
    "sha": "b6bdbe4f04da19c9fa5d70c8ba754575b4237bca",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/general/overview/OverviewFragment.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/overview/OverviewFragment.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/overview/OverviewFragment.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/general/overview/OverviewFragment.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -31,6 +31,7 @@ import info.nightscout.androidaps.data.Profile\n import info.nightscout.androidaps.database.AppRepository\n import info.nightscout.androidaps.database.ValueWrapper\n import info.nightscout.androidaps.database.entities.TemporaryTarget\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.database.interfaces.end\n import info.nightscout.androidaps.databinding.OverviewFragmentBinding\n import info.nightscout.androidaps.dialogs.*\n@@ -350,7 +351,7 @@ class OverviewFragment : DaggerFragment(), View.OnClickListener, OnLongClickList\n                             protectionCheck.queryProtection(activity, ProtectionCheck.Protection.BOLUS, UIRunnable {\n                                 OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.tempbasal_label), lastRun.constraintsProcessed?.toSpanned()\n                                     ?: \"\".toSpanned(), {\n-                                    uel.log(\"ACCEPT TEMP BASAL\")\n+                                    uel.log(Action.ACCEPTS_TEMP_BASAL)\n                                     binding.buttonsLayout.acceptTempButton.visibility = View.GONE\n                                     (context?.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager).cancel(Constants.notificationID)\n                                     rxBus.send(EventWearInitiateAction(\"cancelChangeRequest\"))"
  },
  {
    "sha": "be4eeb41a231261c5ba269aa95e9da618d358c8a",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/general/smsCommunicator/SmsCommunicatorPlugin.kt",
    "status": "modified",
    "additions": 40,
    "deletions": 26,
    "changes": 66,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/smsCommunicator/SmsCommunicatorPlugin.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/smsCommunicator/SmsCommunicatorPlugin.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/general/smsCommunicator/SmsCommunicatorPlugin.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -17,6 +17,7 @@ import info.nightscout.androidaps.data.DetailedBolusInfo\n import info.nightscout.androidaps.data.Profile\n import info.nightscout.androidaps.database.AppRepository\n import info.nightscout.androidaps.database.entities.TemporaryTarget\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.database.transactions.CancelCurrentTemporaryTargetIfAnyTransaction\n import info.nightscout.androidaps.database.transactions.InsertTemporaryTargetAndCancelCurrentTransaction\n import info.nightscout.androidaps.db.Source\n@@ -348,7 +349,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n                     receivedSms.processed = true\n                     messageToConfirm = AuthRequest(injector, receivedSms, reply, passCode, object : SmsAction() {\n                         override fun run() {\n-                            uel.log(\"SMS LOOP DISABLE\")\n+                            uel.log(Action.SMS_LOOP_DISABLED)\n                             loopPlugin.setPluginEnabled(PluginType.LOOP, false)\n                             commandQueue.cancelTempBasal(true, object : Callback() {\n                                 override fun run() {\n@@ -372,7 +373,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n                     receivedSms.processed = true\n                     messageToConfirm = AuthRequest(injector, receivedSms, reply, passCode, object : SmsAction() {\n                         override fun run() {\n-                            uel.log(\"SMS LOOP ENABLE\")\n+                            uel.log(Action.SMS_LOOP_ENABLED)\n                             loopPlugin.setPluginEnabled(PluginType.LOOP, true)\n                             sendSMS(Sms(receivedSms.phoneNumber, resourceHelper.gs(R.string.smscommunicator_loophasbeenenabled)))\n                             rxBus.send(EventRefreshOverview(\"SMS_LOOP_START\"))\n@@ -399,7 +400,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n                 receivedSms.processed = true\n                 messageToConfirm = AuthRequest(injector, receivedSms, reply, passCode, object : SmsAction() {\n                     override fun run() {\n-                        uel.log(\"SMS LOOP RESUME\")\n+                        uel.log(Action.SMS_LOOP_RESUME)\n                         loopPlugin.suspendTo(0L)\n                         rxBus.send(EventRefreshOverview(\"SMS_LOOP_RESUME\"))\n                         commandQueue.cancelTempBasal(true, object : Callback() {\n@@ -432,7 +433,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n                     receivedSms.processed = true\n                     messageToConfirm = AuthRequest(injector, receivedSms, reply, passCode, object : SmsAction(duration) {\n                         override fun run() {\n-                            uel.log(\"SMS LOOP SUSPEND\")\n+                            uel.log(Action.SMS_LOOP_SUSPEND)\n                             commandQueue.cancelTempBasal(true, object : Callback() {\n                                 override fun run() {\n                                     if (result.success) {\n@@ -516,7 +517,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n             receivedSms.processed = true\n             messageToConfirm = AuthRequest(injector, receivedSms, reply, passCode, object : SmsAction() {\n                 override fun run() {\n-                    uel.log(\"SMS PUMP CONNECT\")\n+                    uel.log(Action.SMS_PUMP_CONNECT)\n                     commandQueue.cancelTempBasal(true, object : Callback() {\n                         override fun run() {\n                             if (!result.success) {\n@@ -545,7 +546,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n                 receivedSms.processed = true\n                 messageToConfirm = AuthRequest(injector, receivedSms, reply, passCode, object : SmsAction() {\n                     override fun run() {\n-                        uel.log(\"SMS PUMP DISCONNECT\")\n+                        uel.log(Action.SMS_PUMP_DISCONNECT)\n                         val profile = profileFunction.getProfile()\n                         loopPlugin.disconnectPump(duration, profile)\n                         rxBus.send(EventRefreshOverview(\"SMS_PUMP_DISCONNECT\"))\n@@ -602,7 +603,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n                             activePlugin.activeTreatments.doProfileSwitch(store, list[pIndex - 1] as String, 0, finalPercentage, 0, DateUtil.now())\n                             val replyText = resourceHelper.gs(R.string.profileswitchcreated)\n                             sendSMS(Sms(receivedSms.phoneNumber, replyText))\n-                            uel.log(\"SMS PROFILE\", replyText)\n+                            uel.log(Action.SMS_PROFILE, ValueWithUnit(R.string.profileswitchcreated, Units.R_String))\n                         }\n                     })\n                 }\n@@ -624,12 +625,12 @@ class SmsCommunicatorPlugin @Inject constructor(\n                                 var replyText = resourceHelper.gs(R.string.smscommunicator_tempbasalcanceled)\n                                 replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                 sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                                uel.log(\"SMS BASAL\", replyText)\n+                                uel.log(Action.SMS_BASAL, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_tempbasalcanceled, Units.R_String))\n                             } else {\n                                 var replyText = resourceHelper.gs(R.string.smscommunicator_tempbasalcancelfailed)\n                                 replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                 sendSMS(Sms(receivedSms.phoneNumber, replyText))\n-                                uel.log(\"SMS BASAL\", replyText)\n+                                uel.log(Action.SMS_BASAL, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_tempbasalcancelfailed, Units.R_String))\n                             }\n                         }\n                     })\n@@ -657,12 +658,15 @@ class SmsCommunicatorPlugin @Inject constructor(\n                                     var replyText = if (result.isPercent) String.format(resourceHelper.gs(R.string.smscommunicator_tempbasalset_percent), result.percent, result.duration) else String.format(resourceHelper.gs(R.string.smscommunicator_tempbasalset), result.absolute, result.duration)\n                                     replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                     sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                                    uel.log(\"SMS BASAL\", replyText)\n+                                    if (result.isPercent)\n+                                        uel.log(Action.SMS_BASAL, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_tempbasalset_percent, 2), ValueWithUnit(result.percent, Units.Percent), ValueWithUnit(result.duration, Units.M))\n+                                    else\n+                                        uel.log(Action.SMS_BASAL, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_tempbasalset, 2), ValueWithUnit(result.absolute, Units.U_H), ValueWithUnit(result.duration, Units.M))\n                                 } else {\n                                     var replyText = resourceHelper.gs(R.string.smscommunicator_tempbasalfailed)\n                                     replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                     sendSMS(Sms(receivedSms.phoneNumber, replyText))\n-                                    uel.log(\"SMS BASAL\", replyText)\n+                                    uel.log(Action.SMS_BASAL, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_tempbasalfailed, Units.R_String))\n                                 }\n                             }\n                         })\n@@ -692,12 +696,15 @@ class SmsCommunicatorPlugin @Inject constructor(\n                                     else String.format(resourceHelper.gs(R.string.smscommunicator_tempbasalset), result.absolute, result.duration)\n                                     replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                     sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                                    uel.log(\"SMS BASAL\", replyText)\n+                                    if (result.isPercent)\n+                                        uel.log(Action.SMS_BASAL, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_tempbasalset_percent, 2), ValueWithUnit(result.percent, Units.Percent), ValueWithUnit(result.duration, Units.M))\n+                                    else\n+                                        uel.log(Action.SMS_BASAL, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_tempbasalset, 2), ValueWithUnit(result.absolute, Units.U_H), ValueWithUnit(result.duration, Units.M))\n                                 } else {\n                                     var replyText = resourceHelper.gs(R.string.smscommunicator_tempbasalfailed)\n                                     replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                     sendSMS(Sms(receivedSms.phoneNumber, replyText))\n-                                    uel.log(\"SMS BASAL\", replyText)\n+                                    uel.log(Action.SMS_BASAL, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_tempbasalfailed, Units.R_String))\n                                 }\n                             }\n                         })\n@@ -724,7 +731,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n                                 var replyText = resourceHelper.gs(R.string.smscommunicator_extendedcancelfailed)\n                                 replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                 sendSMS(Sms(receivedSms.phoneNumber, replyText))\n-                                uel.log(\"SMS EXTENDED\", replyText)\n+                                uel.log(Action.SMS_EXTENDED_BOLUS, activePlugin.activePump.shortStatus(true),ValueWithUnit(R.string.smscommunicator_extendedcanceled, Units.R_String))\n                             }\n                         }\n                     })\n@@ -750,12 +757,15 @@ class SmsCommunicatorPlugin @Inject constructor(\n                                     if (config.APS) replyText += \"\\n\" + resourceHelper.gs(R.string.loopsuspended)\n                                     replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                     sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                                    uel.log(\"SMS EXTENDED\", replyText)\n+                                    if (config.APS)\n+                                        uel.log(Action.SMS_EXTENDED_BOLUS, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_extendedset, 2), ValueWithUnit(aDouble ?:0.0, Units.U), ValueWithUnit(duration, Units.M), ValueWithUnit(R.string.loopsuspended, Units.R_String))\n+                                     else\n+                                        uel.log(Action.SMS_EXTENDED_BOLUS, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_extendedset, 2), ValueWithUnit(aDouble ?:0.0, Units.U), ValueWithUnit(duration, Units.M))\n                                 } else {\n                                     var replyText = resourceHelper.gs(R.string.smscommunicator_extendedfailed)\n                                     replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                     sendSMS(Sms(receivedSms.phoneNumber, replyText))\n-                                    uel.log(\"SMS EXTENDED\", replyText)\n+                                    uel.log(Action.SMS_EXTENDED_BOLUS, activePlugin.activePump.shortStatus(true),ValueWithUnit(R.string.smscommunicator_extendedfailed, Units.R_String))\n                                 }\n                             }\n                         })\n@@ -828,12 +838,12 @@ class SmsCommunicatorPlugin @Inject constructor(\n                                             }\n                                         }\n                                         sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                                        uel.log(\"SMS BOLUS\", replyText)\n+                                        uel.log(Action.SMS_BOLUS, replyText)\n                                     } else {\n                                         var replyText = resourceHelper.gs(R.string.smscommunicator_bolusfailed)\n                                         replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                         sendSMS(Sms(receivedSms.phoneNumber, replyText))\n-                                        uel.log(\"SMS BOLUS\", replyText)\n+                                        uel.log(Action.SMS_BOLUS, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_bolusfailed, Units.R_String))\n                                     }\n                                 }\n                             })\n@@ -873,12 +883,12 @@ class SmsCommunicatorPlugin @Inject constructor(\n                                     var replyText = String.format(resourceHelper.gs(R.string.smscommunicator_carbsset), anInteger)\n                                     replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                     sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                                    uel.log(\"SMS CARBS\", replyText)\n+                                    uel.log(Action.SMS_CARBS, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_carbsset, 1), ValueWithUnit(anInteger ?:0,Units.G))\n                                 } else {\n-                                    var replyText = resourceHelper.gs(R.string.smscommunicator_carbsfailed)\n+                                    var replyText = resourceHelper.gs(R.string.smscommunicator_carbsfailed, anInteger)\n                                     replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                                     sendSMS(Sms(receivedSms.phoneNumber, replyText))\n-                                    uel.log(\"SMS CARBS\", replyText)\n+                                    uel.log(Action.SMS_CARBS, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_carbsfailed, 1), ValueWithUnit(anInteger ?:0,Units.G))\n                                 }\n                             }\n                         })\n@@ -887,7 +897,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n                         var replyText = String.format(resourceHelper.gs(R.string.smscommunicator_carbsset), anInteger)\n                         replyText += \"\\n\" + activePlugin.activePump.shortStatus(true)\n                         sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                        uel.log(\"SMS CARBS\", replyText)\n+                        uel.log(Action.SMS_CARBS, activePlugin.activePump.shortStatus(true), ValueWithUnit(R.string.smscommunicator_carbsset, 1), ValueWithUnit(anInteger ?:0,Units.G))\n                     }\n                 }\n             })\n@@ -956,7 +966,8 @@ class SmsCommunicatorPlugin @Inject constructor(\n                     val ttString = if (units == Constants.MMOL) DecimalFormatter.to1Decimal(tt) else DecimalFormatter.to0Decimal(tt)\n                     val replyText = String.format(resourceHelper.gs(R.string.smscommunicator_tt_set), ttString, ttDuration)\n                     sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                    uel.log(\"SMS TARGET\", replyText)\n+                    //uel.log(Action.SMS_TT, ValueWithUnit(R.string.smscommunicator_tt_set, 2), ValueWithUnit(tt, units), ValueWithUnit(ttDuration, Units.M))\n+                    uel.log(Action.SMS_TT, ValueWithUnit(tt, units), ValueWithUnit(ttDuration, Units.M))\n                 }\n             })\n         } else if (isStop) {\n@@ -973,7 +984,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n                         })\n                     val replyText = String.format(resourceHelper.gs(R.string.smscommunicator_tt_canceled))\n                     sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                    uel.log(\"SMS TARGET\", reply)\n+                    uel.log(Action.SMS_TT, ValueWithUnit(R.string.smscommunicator_tt_canceled, Units.R_String))\n                 }\n             })\n         } else\n@@ -992,7 +1003,7 @@ class SmsCommunicatorPlugin @Inject constructor(\n                     sp.putBoolean(R.string.key_smscommunicator_remotecommandsallowed, false)\n                     val replyText = String.format(resourceHelper.gs(R.string.smscommunicator_stoppedsms))\n                     sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                    uel.log(\"SMS SMS\", replyText)\n+                    uel.log(Action.SMS_SMS, ValueWithUnit(R.string.smscommunicator_stoppedsms, Units.R_String))\n                 }\n             })\n         } else sendSMS(Sms(receivedSms.phoneNumber, resourceHelper.gs(R.string.wrongformat)))\n@@ -1010,7 +1021,10 @@ class SmsCommunicatorPlugin @Inject constructor(\n                     val replyText =\n                         if (result) resourceHelper.gs(R.string.smscommunicator_calibrationsent) else resourceHelper.gs(R.string.smscommunicator_calibrationfailed)\n                     sendSMSToAllNumbers(Sms(receivedSms.phoneNumber, replyText))\n-                    uel.log(\"SMS CAL\", replyText)\n+                    if (result)\n+                        uel.log(Action.SMS_CAL, ValueWithUnit(R.string.smscommunicator_calibrationsent, Units.R_String))\n+                    else\n+                        uel.log(Action.SMS_CAL, ValueWithUnit(R.string.smscommunicator_calibrationfailed, Units.R_String))\n                 }\n             })\n         } else sendSMS(Sms(receivedSms.phoneNumber, resourceHelper.gs(R.string.wrongformat)))"
  },
  {
    "sha": "848dc05fafead9c2e4606593a77834aac91620d5",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/general/smsCommunicator/activities/SmsCommunicatorOtpActivity.kt",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/smsCommunicator/activities/SmsCommunicatorOtpActivity.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/general/smsCommunicator/activities/SmsCommunicatorOtpActivity.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/general/smsCommunicator/activities/SmsCommunicatorOtpActivity.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -14,6 +14,7 @@ import com.google.common.primitives.Ints.min\n import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.activities.NoSplashAppCompatActivity\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.ActivitySmscommunicatorOtpBinding\n import info.nightscout.androidaps.logging.UserEntryLogger\n import info.nightscout.androidaps.plugins.bus.RxBusWrapper\n@@ -72,7 +73,7 @@ class SmsCommunicatorOtpActivity : NoSplashAppCompatActivity() {\n                 resourceHelper.gs(R.string.smscommunicator_otp_reset_title),\n                 resourceHelper.gs(R.string.smscommunicator_otp_reset_prompt),\n                 Runnable {\n-                    uel.log(\"OTP RESET\")\n+                    uel.log(Action.OTP_RESET)\n                     otp.ensureKey(true)\n                     updateGui()\n                     ToastUtils.Long.infoToast(this, resourceHelper.gs(R.string.smscommunicator_otp_reset_successful))\n@@ -88,7 +89,7 @@ class SmsCommunicatorOtpActivity : NoSplashAppCompatActivity() {\n                     val clip = ClipData.newPlainText(\"OTP Secret\", otp.provisioningSecret())\n                     clipboard.primaryClip = clip\n                     ToastUtils.Long.infoToast(this, resourceHelper.gs(R.string.smscommunicator_otp_export_successful))\n-                    uel.log(\"OTP EXPORT\")\n+                    uel.log(Action.OTP_EXPORT)\n                 })\n \n             true"
  },
  {
    "sha": "ccc2c1959633f4282933ff207ed5da126e0d51d7",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/profile/local/LocalProfileFragment.kt",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/profile/local/LocalProfileFragment.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/profile/local/LocalProfileFragment.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/profile/local/LocalProfileFragment.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -12,6 +12,7 @@ import dagger.android.support.DaggerFragment\n import info.nightscout.androidaps.Constants\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.data.Profile\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.LocalprofileFragmentBinding\n import info.nightscout.androidaps.dialogs.ProfileSwitchDialog\n import info.nightscout.androidaps.interfaces.ActivePluginProvider\n@@ -162,7 +163,7 @@ class LocalProfileFragment : DaggerFragment() {\n             if (localProfilePlugin.isEdited) {\n                 activity?.let { OKDialog.show(it, \"\", resourceHelper.gs(R.string.saveorresetchangesfirst)) }\n             } else {\n-                uel.log(\"NEW PROFILE\")\n+                uel.log(Action.NEW_PROFILE)\n                 localProfilePlugin.addNewProfile()\n                 build()\n             }\n@@ -172,7 +173,7 @@ class LocalProfileFragment : DaggerFragment() {\n             if (localProfilePlugin.isEdited) {\n                 activity?.let { OKDialog.show(it, \"\", resourceHelper.gs(R.string.saveorresetchangesfirst)) }\n             } else {\n-                uel.log(\"CLONE PROFILE\", localProfilePlugin.currentProfile()?.name ?: \"\")\n+                uel.log(Action.CLONE_PROFILE, localProfilePlugin.currentProfile()?.name ?: \"\")\n                 localProfilePlugin.cloneProfile()\n                 build()\n             }\n@@ -181,7 +182,7 @@ class LocalProfileFragment : DaggerFragment() {\n         binding.profileRemove.setOnClickListener {\n             activity?.let { activity ->\n                 OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.deletecurrentprofile), {\n-                    uel.log(\"REMOVE PROFILE\", localProfilePlugin.currentProfile()?.name ?: \"\")\n+                    uel.log(Action.PROFILE_REMOVED, localProfilePlugin.currentProfile()?.name ?: \"\")\n                     localProfilePlugin.removeCurrentProfile()\n                     build()\n                 }, null)"
  },
  {
    "sha": "8da1e6b1883a9be2bf1cbd6f43f21380c65b0a74",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/profile/local/LocalProfilePlugin.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/profile/local/LocalProfilePlugin.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/profile/local/LocalProfilePlugin.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/profile/local/LocalProfilePlugin.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -5,6 +5,7 @@ import dagger.android.HasAndroidInjector\n import info.nightscout.androidaps.Constants\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.data.Profile\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.events.EventProfileStoreChanged\n import info.nightscout.androidaps.interfaces.*\n import info.nightscout.androidaps.logging.AAPSLogger\n@@ -115,7 +116,7 @@ class LocalProfilePlugin @Inject constructor(\n         createAndStoreConvertedProfile()\n         isEdited = false\n         aapsLogger.debug(LTag.PROFILE, \"Storing settings: \" + rawProfile?.data.toString())\n-        uel.log(\"STORE PROFILE\")\n+        uel.log(Action.STORE_PROFILE)\n         rxBus.send(EventProfileStoreChanged())\n         var namesOK = true\n         profiles.forEach {"
  },
  {
    "sha": "3b0b60768b113ab3edde14cb25b8c434edb01855",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/profile/ns/NSProfileFragment.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/profile/ns/NSProfileFragment.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/profile/ns/NSProfileFragment.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/profile/ns/NSProfileFragment.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -8,6 +8,7 @@ import android.widget.AdapterView\n import android.widget.ArrayAdapter\n import dagger.android.support.DaggerFragment\n import info.nightscout.androidaps.R\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.NsprofileFragmentBinding\n import info.nightscout.androidaps.interfaces.ProfileFunction\n import info.nightscout.androidaps.logging.UserEntryLogger\n@@ -61,7 +62,7 @@ class NSProfileFragment : DaggerFragment() {\n                     activity?.let { activity ->\n                         OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.nsprofile),\n                             resourceHelper.gs(R.string.activate_profile) + \": \" + name + \" ?\", Runnable {\n-                            uel.log(\"PROFILE SWITCH\", name, i1 = 100)\n+                            uel.log(Action.PROFILE_SWITCH, ValueWithUnit(name, Units.None), ValueWithUnit(100.toInt(), Units.Percent))\n                             treatmentsPlugin.doProfileSwitch(store, name, 0, 100, 0, DateUtil.now())\n                         })\n                     }"
  },
  {
    "sha": "a889ea38ba1725baddd20eb23e52d7d747de36dd",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/source/BGSourceFragment.kt",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/source/BGSourceFragment.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/source/BGSourceFragment.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/source/BGSourceFragment.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -11,6 +11,7 @@ import dagger.android.support.DaggerFragment\n import info.nightscout.androidaps.R\n import info.nightscout.androidaps.database.AppRepository\n import info.nightscout.androidaps.database.entities.GlucoseValue\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.database.transactions.InvalidateGlucoseValueTransaction\n import info.nightscout.androidaps.databinding.BgsourceFragmentBinding\n import info.nightscout.androidaps.databinding.BgsourceItemBinding\n@@ -128,7 +129,7 @@ class BGSourceFragment : DaggerFragment() {\n                     activity?.let { activity ->\n                         val text = dateUtil.dateAndTimeString(glucoseValue.timestamp) + \"\\n\" + glucoseValue.valueToUnitsString(profileFunction.getUnits())\n                         OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.removerecord), text, Runnable {\n-                            uel.log(\"BG REMOVED\", dateUtil.dateAndTimeString(glucoseValue.timestamp))\n+                            uel.log(Action.BG_REMOVED, ValueWithUnit(glucoseValue.timestamp, Units.Timestamp))\n                             disposable += repository.runTransaction(InvalidateGlucoseValueTransaction(glucoseValue.id)).subscribe()\n                         })\n                     }"
  },
  {
    "sha": "bdf2c3308da6052c2125092a52af40136bd13b85",
    "filename": "app/src/main/java/info/nightscout/androidaps/plugins/treatments/fragments/TreatmentsBolusFragment.kt",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/nightscout/AndroidAPS/blob/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/treatments/fragments/TreatmentsBolusFragment.kt",
    "raw_url": "https://github.com/nightscout/AndroidAPS/raw/afa64d0111f2d603903290782163638a3d96a95b/app/src/main/java/info/nightscout/androidaps/plugins/treatments/fragments/TreatmentsBolusFragment.kt",
    "contents_url": "https://api.github.com/repos/nightscout/AndroidAPS/contents/app/src/main/java/info/nightscout/androidaps/plugins/treatments/fragments/TreatmentsBolusFragment.kt?ref=afa64d0111f2d603903290782163638a3d96a95b",
    "patch": "@@ -9,6 +9,7 @@ import androidx.recyclerview.widget.LinearLayoutManager\n import androidx.recyclerview.widget.RecyclerView\n import dagger.android.support.DaggerFragment\n import info.nightscout.androidaps.R\n+import info.nightscout.androidaps.database.entities.UserEntry.*\n import info.nightscout.androidaps.databinding.TreatmentsBolusFragmentBinding\n import info.nightscout.androidaps.databinding.TreatmentsBolusItemBinding\n import info.nightscout.androidaps.db.Source\n@@ -68,7 +69,7 @@ class TreatmentsBolusFragment : DaggerFragment() {\n         binding.refreshFromNightscout.setOnClickListener {\n             activity?.let { activity ->\n                 OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.refresheventsfromnightscout) + \"?\") {\n-                    uel.log(\"TREAT NS REFRESH\")\n+                    uel.log(Action.TREATMENTS_NS_REFRESH)\n                     treatmentsPlugin.service.resetTreatments()\n                     rxBus.send(EventNSClientRestart())\n                 }\n@@ -77,7 +78,7 @@ class TreatmentsBolusFragment : DaggerFragment() {\n         binding.deleteFutureTreatments.setOnClickListener {\n             activity?.let { activity ->\n                 OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.overview_treatment_label), resourceHelper.gs(R.string.deletefuturetreatments) + \"?\", Runnable {\n-                    uel.log(\"DELETE FUTURE TREATMENTS\")\n+                    uel.log(Action.DELETE_FUTURE_TREATMENTS)\n                     val futureTreatments = treatmentsPlugin.service.getTreatmentDataFromTime(DateUtil.now() + 1000, true)\n                     for (treatment in futureTreatments) {\n                         if (NSUpload.isIdValid(treatment._id))\n@@ -174,7 +175,7 @@ class TreatmentsBolusFragment : DaggerFragment() {\n                             resourceHelper.gs(R.string.carbs) + \": \" + resourceHelper.gs(R.string.format_carbs, treatment.carbs.toInt()) + \"\\n\" +\n                             resourceHelper.gs(R.string.date) + \": \" + dateUtil.dateAndTimeString(treatment.date)\n                         OKDialog.showConfirmation(activity, resourceHelper.gs(R.string.removerecord), text, Runnable {\n-                            uel.log(\"REMOVED TREATMENT\", text)\n+                            uel.log(Action.TREATMENT_REMOVED, ValueWithUnit(treatment.date, Units.Timestamp), ValueWithUnit(treatment.insulin, Units.U, treatment.insulin != 0.0), ValueWithUnit(treatment.carbs.toInt(), Units.G, treatment.carbs != 0.0))\n                             if (treatment.source == Source.PUMP) {\n                                 treatment.isValid = false\n                                 treatmentsPlugin.service.update(treatment)"
  }
]
