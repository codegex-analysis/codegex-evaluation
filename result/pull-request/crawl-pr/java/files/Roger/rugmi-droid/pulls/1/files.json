[
  {
    "sha": "333fa9ffc03d4bf5215e3e88e69d6eb50779272e",
    "filename": "app/build.gradle",
    "status": "modified",
    "additions": 10,
    "deletions": 5,
    "changes": 15,
    "blob_url": "https://github.com/Roger/rugmi-droid/blob/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/build.gradle",
    "raw_url": "https://github.com/Roger/rugmi-droid/raw/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/build.gradle",
    "contents_url": "https://api.github.com/repos/Roger/rugmi-droid/contents/app/build.gradle?ref=2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1",
    "patch": "@@ -1,13 +1,13 @@\n apply plugin: 'com.android.application'\n \n android {\n-    compileSdkVersion 16\n-    buildToolsVersion \"22.0.1\"\n+    compileSdkVersion 29\n+    buildToolsVersion \"29.0.2\"\n \n     defaultConfig {\n         applicationId \"ar.com.fsck.rugmi\"\n-        minSdkVersion 11\n-        targetSdkVersion 16\n+        minSdkVersion 28\n+        targetSdkVersion 29\n     }\n \n     buildTypes {\n@@ -16,8 +16,13 @@ android {\n             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'\n         }\n     }\n+    compileOptions {\n+        sourceCompatibility JavaVersion.VERSION_1_8\n+        targetCompatibility JavaVersion.VERSION_1_8\n+    }\n }\n \n dependencies {\n-    compile 'com.android.support:support-v4:18.0.0'\n+    implementation 'androidx.activity:activity:1.2.0'\n+    implementation \"androidx.core:core:1.3.2\"\n }"
  },
  {
    "sha": "f40ce037e8255ae36786055b06043af57f3ae698",
    "filename": "app/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Roger/rugmi-droid/blob/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/Roger/rugmi-droid/raw/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/Roger/rugmi-droid/contents/app/src/main/AndroidManifest.xml?ref=2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1",
    "patch": "@@ -4,13 +4,13 @@\n     android:versionCode=\"1\"\n     android:versionName=\"1.0\" >\n \n-    <uses-sdk android:minSdkVersion=\"7\" android:targetSdkVersion=\"16\" />\n     <uses-permission android:name=\"android.permission.INTERNET\"/>\n     <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n \n     <application\n         android:icon=\"@drawable/ic_launcher\"\n-        android:label=\"@string/app_name\" >\n+        android:label=\"@string/app_name\"\n+        android:allowBackup=\"true\">\n \n         <activity\n             android:name=\".ConfigActivity\""
  },
  {
    "sha": "ed4618e091c056bea5ced341c7aac77edc8186e3",
    "filename": "app/src/main/java/ar/com/fsck/rugmi/ConfigActivity.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/Roger/rugmi-droid/blob/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/src/main/java/ar/com/fsck/rugmi/ConfigActivity.java",
    "raw_url": "https://github.com/Roger/rugmi-droid/raw/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/src/main/java/ar/com/fsck/rugmi/ConfigActivity.java",
    "contents_url": "https://api.github.com/repos/Roger/rugmi-droid/contents/app/src/main/java/ar/com/fsck/rugmi/ConfigActivity.java?ref=2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1",
    "patch": "@@ -1,14 +1,26 @@\n package ar.com.fsck.rugmi;\n \n+import android.Manifest;\n import android.app.Activity;\n import android.app.AlertDialog;\n import android.content.DialogInterface;\n import android.content.SharedPreferences;\n+import android.content.pm.PackageManager;\n import android.os.Bundle;\n import android.widget.EditText;\n import android.widget.LinearLayout;\n \n+import androidx.core.app.ActivityCompat;\n+import androidx.core.content.ContextCompat;\n+\n public class ConfigActivity extends Activity {\n+    private void askForPermission() {\n+        String perm = Manifest.permission.READ_EXTERNAL_STORAGE;\n+        if (ContextCompat.checkSelfPermission(this, perm) != PackageManager.PERMISSION_GRANTED) {\n+            ActivityCompat.requestPermissions(this, new String[]{perm}, 1);\n+        }\n+    }\n+\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n \n@@ -50,6 +62,7 @@ public void onClick(DialogInterface dialog, int which) {\n                     editor.putString(\"key\", keyText.getText().toString());\n                     editor.putString(\"url\", urlText.getText().toString());\n                     editor.commit();\n+                    askForPermission();\n                     finish();\n                 }\n             })"
  },
  {
    "sha": "6912da485558cc1953dd0e3aca46df7fc94948d3",
    "filename": "app/src/main/java/ar/com/fsck/rugmi/NotificationReceiveActivity.java",
    "status": "modified",
    "additions": 14,
    "deletions": 9,
    "changes": 23,
    "blob_url": "https://github.com/Roger/rugmi-droid/blob/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/src/main/java/ar/com/fsck/rugmi/NotificationReceiveActivity.java",
    "raw_url": "https://github.com/Roger/rugmi-droid/raw/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/src/main/java/ar/com/fsck/rugmi/NotificationReceiveActivity.java",
    "contents_url": "https://api.github.com/repos/Roger/rugmi-droid/contents/app/src/main/java/ar/com/fsck/rugmi/NotificationReceiveActivity.java?ref=2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1",
    "patch": "@@ -1,6 +1,8 @@\n package ar.com.fsck.rugmi;\n \n import android.app.Activity;\n+import android.content.ClipData;\n+import android.content.ClipboardManager;\n import android.content.Context;\n import android.content.Intent;\n import android.os.Bundle;\n@@ -11,17 +13,20 @@ public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         Intent intent = getIntent();\n \n-        String text = intent.getStringExtra(\"text\");\n+        String action = intent.getStringExtra(\"action\");\n \n-        int sdk = android.os.Build.VERSION.SDK_INT;\n-        if(sdk < android.os.Build.VERSION_CODES.HONEYCOMB) {\n-            android.text.ClipboardManager clipboard = (android.text.ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);\n-            clipboard.setText(text);\n-        } else {\n-            android.content.ClipboardManager clipboard = (android.content.ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE); \n-            android.content.ClipData clip = android.content.ClipData.newPlainText(\"text label\", text);\n-            clipboard.setPrimaryClip(clip);\n+        if (action.equals(\"cancel\")) {\n+            UploadService.cancelRequested = true;\n+            finish();\n+            return;\n         }\n+        assert action.equals(\"copy\");\n+\n+        String text = intent.getStringExtra(\"text\");\n+\n+        ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);\n+        ClipData clip = ClipData.newPlainText(\"text label\", text);\n+        clipboard.setPrimaryClip(clip);\n \n         Toast.makeText(getApplicationContext(), \"Copied to clipboard\", Toast.LENGTH_LONG).show();\n "
  },
  {
    "sha": "27b2eb9fea9980cca4ae744b479550a0caffb9b2",
    "filename": "app/src/main/java/ar/com/fsck/rugmi/RugmiActivity.java",
    "status": "modified",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/Roger/rugmi-droid/blob/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/src/main/java/ar/com/fsck/rugmi/RugmiActivity.java",
    "raw_url": "https://github.com/Roger/rugmi-droid/raw/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/src/main/java/ar/com/fsck/rugmi/RugmiActivity.java",
    "contents_url": "https://api.github.com/repos/Roger/rugmi-droid/contents/app/src/main/java/ar/com/fsck/rugmi/RugmiActivity.java?ref=2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1",
    "patch": "@@ -2,10 +2,18 @@\n \n import android.app.Activity;\n import android.content.Intent;\n+import android.database.Cursor;\n import android.net.Uri;\n import android.os.Bundle;\n+import android.provider.MediaStore;\n import android.util.Log;\n \n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n public class RugmiActivity extends Activity {\n \n     /** Called when the activity is first created. */\n@@ -33,11 +41,69 @@ public void onCreate(Bundle savedInstanceState) {\n                 // prepare service\n                 Intent uploadService = new Intent(getApplicationContext(), UploadService.class);\n                 uploadService.putExtra(\"uri\", uri);\n+\n+                try {\n+                    String filename = getFileNameByUri(uri);\n+                    uploadService.putExtra(\"filename\", filename);\n+\n+                    InputStream inputStream = getApplicationContext().getContentResolver().openInputStream(uri);\n+                    UploadService.uploadData = readInputStream(inputStream);\n+                } catch (Exception e) {\n+                    StringWriter sw = new StringWriter();\n+                    e.printStackTrace(new PrintWriter(sw));\n+                    uploadService.putExtra(\"exception\", sw.toString());\n+                }\n+\n                 startService(uploadService);\n             }\n         }\n \n         finish();\n     }\n \n+    public byte[] readInputStream(InputStream is) throws IOException {\n+        ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n+        int nRead;\n+        byte[] data = new byte[16384];\n+\n+        while ((nRead = is.read(data, 0, data.length)) != -1) {\n+            buffer.write(data, 0, nRead);\n+        }\n+\n+        return buffer.toByteArray();\n+    }\n+\n+    public String getFileNameByUri(Uri uri) {\n+        String fileName = \"unknown\"; //default fileName\n+\n+        if (uri == null) {\n+            return fileName;\n+        }\n+\n+        Uri filePathUri = uri;\n+        if (uri.getScheme().toString().compareTo(\"content\") == 0) {\n+            Cursor cursor = null;\n+            try {\n+                cursor = getContentResolver().query(uri, null, null, null,\n+                        null);\n+            } catch (SecurityException e) {\n+                return uri.getLastPathSegment();\n+            }\n+            if (cursor != null && cursor.moveToFirst()) {\n+                // cursor contains three columns, _display_name, _size and _data\n+                // no idea why we used to get _data, but it's often null\n+                int column_index = cursor\n+                        .getColumnIndexOrThrow(MediaStore.Images.Media.DISPLAY_NAME);\n+                filePathUri = Uri.parse(cursor.getString(column_index));\n+                return filePathUri.getLastPathSegment().toString();\n+            }\n+        } else if (uri.getScheme().compareTo(\"file\") == 0) {\n+            return filePathUri.getLastPathSegment().toString();\n+        } else {\n+            return fileName + \"_\" + filePathUri.getLastPathSegment();\n+        }\n+        return fileName;\n+    }\n+\n+\n }"
  },
  {
    "sha": "8064b8822adf7e2eb1f7e54bd866a0975c51afa6",
    "filename": "app/src/main/java/ar/com/fsck/rugmi/UploadService.java",
    "status": "modified",
    "additions": 164,
    "deletions": 79,
    "changes": 243,
    "blob_url": "https://github.com/Roger/rugmi-droid/blob/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/src/main/java/ar/com/fsck/rugmi/UploadService.java",
    "raw_url": "https://github.com/Roger/rugmi-droid/raw/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/app/src/main/java/ar/com/fsck/rugmi/UploadService.java",
    "contents_url": "https://api.github.com/repos/Roger/rugmi-droid/contents/app/src/main/java/ar/com/fsck/rugmi/UploadService.java?ref=2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1",
    "patch": "@@ -2,9 +2,9 @@\n \n import java.io.BufferedReader;\n import java.io.DataOutputStream;\n-import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.io.ByteArrayInputStream;\n import java.io.InputStreamReader;\n import java.io.StringWriter;\n import java.io.PrintWriter;\n@@ -13,70 +13,55 @@\n \n import android.app.IntentService;\n import android.app.Notification;\n+import android.app.NotificationChannel;\n import android.app.NotificationManager;\n import android.app.PendingIntent;\n-import android.content.Context;\n import android.content.Intent;\n import android.content.SharedPreferences;\n-import android.database.Cursor;\n-import android.net.ParseException;\n import android.net.Uri;\n+import android.os.Build;\n import android.os.IBinder;\n-import android.provider.MediaStore;\n-import android.support.v4.app.NotificationCompat;\n+import androidx.core.app.NotificationCompat;\n+import androidx.core.app.NotificationManagerCompat;\n+\n import android.util.Log;\n \n public class UploadService extends IntentService {\n \n-    public UploadService() {\n-        super(\"UploadService\");\n-    }\n+    private static final String CHANNEL_ID = \"rugmi_notifications\";\n+    private static final String PROGRESS_CHANNEL_ID = \"rugmi_progress\";\n+    private static final int ERROR_MID = 1;\n+    private static final int PROGRESS_MID = 2;\n+    private static final int SUCCESS_MID = 3;\n \n-    public String getFileNameByUri(Uri uri) {\n-        String fileName = \"unknown\"; //default fileName\n+    public static byte[] uploadData;\n+    public static boolean cancelRequested = false;\n \n-        if (uri == null) {\n-            return fileName;\n-        }\n+    private NotificationCompat.Builder progressNotification;\n+    private NotificationManagerCompat mNotificationManager;\n \n-        Uri filePathUri = uri;\n-        if (uri.getScheme().toString().compareTo(\"content\") == 0) {\n-            Cursor cursor = getContentResolver().query(uri, null, null, null,\n-                    null);\n-            if (cursor.moveToFirst()) {\n-                //Instead of \"MediaStore.Images.Media.DATA\" can be used \"_data\"\n-                int column_index = cursor\n-                        .getColumnIndexOrThrow(MediaStore.Images.Media.DATA);\n-                filePathUri = Uri.parse(cursor.getString(column_index));\n-                fileName = filePathUri.getLastPathSegment().toString();\n-            }\n-        } else if (uri.getScheme().compareTo(\"file\") == 0) {\n-            fileName = filePathUri.getLastPathSegment().toString();\n-        } else {\n-            fileName = fileName + \"_\" + filePathUri.getLastPathSegment();\n-        }\n-        return fileName;\n+    public UploadService() {\n+        super(\"UploadService\");\n     }\n \n     // see http://androidsnippets.com/multipart-http-requests\n     public String multipartRequest(String urlTo, String[] posts,\n-            InputStream fileInputStream, String fileName, String fileField)\n+            InputStream fileInputStream, String fileName, String fileField, int sizeBytes)\n             throws Exception {\n \n         HttpURLConnection connection = null;\n         DataOutputStream outputStream = null;\n         InputStream inputStream = null;\n \n         String twoHyphens = \"--\";\n-        String boundary = \"*****\" + Long.toString(System.currentTimeMillis())\n-                + \"*****\";\n+        String boundary = \"*****\" + System.currentTimeMillis() + \"*****\";\n         String lineEnd = \"\\r\\n\";\n \n         String result = \"\";\n \n         int bytesRead, bytesAvailable, bufferSize;\n         byte[] buffer;\n-        int maxBufferSize = 1 * 1024 * 1024;\n+        int maxBufferSize = 128 * 1024;\n \n         URL url = new URL(urlTo);\n         connection = (HttpURLConnection) url.openConnection();\n@@ -92,49 +77,67 @@ public String multipartRequest(String urlTo, String[] posts,\n         connection.setRequestProperty(\"Content-Type\",\n                 \"multipart/form-data; boundary=\" + boundary);\n \n+        String head = \"\";\n+\n+        for (int i = 0; i < posts.length; i++) {\n+            String[] kv = posts[i].split(\"=\");\n+\n+            head += twoHyphens + boundary + lineEnd\n+                + \"Content-Disposition: form-data; name=\\\"\" + kv[0] + \"\\\"\" + lineEnd\n+                + \"Content-Type: text/plain\" + lineEnd\n+                + lineEnd\n+                + kv[1] + lineEnd;\n+        }\n+\n+        head += twoHyphens + boundary + lineEnd\n+            + \"Content-Disposition: form-data; name=\\\"\" + fileField\n+                + \"\\\"; filename=\\\"\" + fileName + \"\\\"\" + lineEnd\n+            + \"Content-Transfer-Encoding: binary\" + lineEnd\n+            + lineEnd;\n+\n+        String tail = lineEnd + twoHyphens + boundary + twoHyphens + lineEnd;\n+\n+        int requestLength = head.length() + sizeBytes + tail.length();\n+\n+        connection.setFixedLengthStreamingMode((int) requestLength);\n+        connection.connect();\n+\n         outputStream = new DataOutputStream(connection.getOutputStream());\n-        outputStream.writeBytes(twoHyphens + boundary + lineEnd);\n-        outputStream\n-                .writeBytes(\"Content-Disposition: form-data; name=\\\"\"\n-                        + fileField + \"\\\"; filename=\\\"\" + fileName + \"\\\"\"\n-                        + lineEnd);\n-        outputStream.writeBytes(\"Content-Transfer-Encoding: binary\"\n-                + lineEnd);\n-        outputStream.writeBytes(lineEnd);\n+        outputStream.writeBytes(head);\n \n         bytesAvailable = fileInputStream.available();\n         bufferSize = Math.min(bytesAvailable, maxBufferSize);\n         buffer = new byte[bufferSize];\n \n+        int totalBytesRead = 0;\n         bytesRead = fileInputStream.read(buffer, 0, bufferSize);\n+        progress(totalBytesRead, sizeBytes, fileName);\n+\n         while (bytesRead > 0) {\n+            totalBytesRead += bytesRead;\n             outputStream.write(buffer, 0, bufferSize);\n+            outputStream.flush();\n+            progress(totalBytesRead, sizeBytes, fileName);\n             bytesAvailable = fileInputStream.available();\n             bufferSize = Math.min(bytesAvailable, maxBufferSize);\n             bytesRead = fileInputStream.read(buffer, 0, bufferSize);\n-        }\n \n-        outputStream.writeBytes(lineEnd);\n-\n-        int max = posts.length;\n-        for (int i = 0; i < max; i++) {\n-            outputStream.writeBytes(twoHyphens + boundary + lineEnd);\n-            String[] kv = posts[i].split(\"=\");\n-            outputStream\n-                    .writeBytes(\"Content-Disposition: form-data; name=\\\"\"\n-                            + kv[0] + \"\\\"\" + lineEnd);\n-            outputStream.writeBytes(\"Content-Type: text/plain\" + lineEnd);\n-            outputStream.writeBytes(lineEnd);\n-            outputStream.writeBytes(kv[1]);\n-            outputStream.writeBytes(lineEnd);\n+            if (cancelRequested) {\n+                return \"Cancelled\";\n+            }\n         }\n+        progress(sizeBytes, sizeBytes, fileName);\n \n-        outputStream.writeBytes(twoHyphens + boundary + twoHyphens\n-                + lineEnd);\n+        outputStream.writeBytes(tail);\n+        outputStream.flush();\n \n         int responseCode = connection.getResponseCode();\n         if (responseCode != 200) {\n-            throw new Exception(\"Connection Error Code: \" + responseCode);\n+            if (responseCode == 500) {\n+                result = this.convertStreamToString(connection.getErrorStream());\n+                return result;\n+            }\n+            throw new Exception(\"Connection Error Code: \" + responseCode + \" \" + connection.getResponseMessage());\n         }\n \n         inputStream = connection.getInputStream();\n@@ -177,45 +180,128 @@ public IBinder onBind(Intent arg0) {\n     @Override\n     public void onCreate() {\n         super.onCreate();\n+        createNotificationChannel();\n     }\n \n     @Override\n     public void onDestroy() {\n         super.onDestroy();\n     }\n \n-    public void notificate(String title, String text) {\n+    private void createNotificationChannel() {\n+        // copypasted from docs\n+        // Create the NotificationChannel, but only on API 26+ because\n+        // the NotificationChannel class is new and not in the support library\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n+            NotificationChannel channel = new NotificationChannel(\n+                    CHANNEL_ID,\n+                    \"rugmi\",\n+                    NotificationManager.IMPORTANCE_DEFAULT\n+            );\n+\n+            NotificationChannel progressChannel = new NotificationChannel(\n+                    PROGRESS_CHANNEL_ID,\n+                    \"rugmi progress\",\n+                    NotificationManager.IMPORTANCE_LOW\n+            );\n+            // Register the channel with the system; you can't change the importance\n+            // or other notification behaviors after this\n+            NotificationManager notificationManager = getSystemService(NotificationManager.class);\n+            notificationManager.createNotificationChannel(channel);\n+            notificationManager.createNotificationChannel(progressChannel);\n+        }\n+    }\n+\n+    public PendingIntent buildNotificationIntent(String action, String text) {\n         Intent intent = new Intent(this, NotificationReceiveActivity.class);\n-        intent.putExtra(\"text\", text);\n \n         intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n         intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n         intent.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);\n         intent.addFlags(Intent.FLAG_FROM_BACKGROUND);\n+        intent.putExtra(\"action\", action);\n+        intent.putExtra(\"text\", text);\n \n-        PendingIntent pIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);\n+        return PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);\n+    }\n+\n+    public NotificationCompat.Builder buildNotification(String title, String text) {\n+        PendingIntent pIntent = buildNotificationIntent(\"copy\", text);\n \n-        Notification noti = new NotificationCompat.Builder(this)\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, CHANNEL_ID)\n             .setSmallIcon(R.drawable.ic_launcher)\n             .addAction(R.drawable.ic_launcher, \"Copy\", pIntent)\n             .setContentIntent(pIntent)\n             .setContentTitle(title)\n             .setAutoCancel(true)\n             .setContentText(text)\n-            .build();\n+            .setStyle(new NotificationCompat.BigTextStyle().bigText(text));\n+\n+        return builder;\n+    }\n \n-        NotificationManager mNotificationManager =\n-            (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n+    public NotificationCompat.Builder notificate(int mid, String title, String text) {\n+        NotificationCompat.Builder builder = buildNotification(title, text);\n+        notificate(mid, builder);\n+        return builder;\n+    }\n \n-        // mId allows you to update the notification later on.\n-        mNotificationManager.notify(42, noti);\n+    public void notificate(int mid, NotificationCompat.Builder builder) {\n+        if (mNotificationManager == null) {\n+            mNotificationManager = NotificationManagerCompat.from(this);\n+        };\n \n+        if (builder == null) {\n+            mNotificationManager.cancel(mid);\n+        } else {\n+            mNotificationManager.notify(mid, builder.build());\n+        }\n+    }\n+\n+    public void progress(int read, int total, String fileName) {\n+        if (progressNotification == null) {\n+            cancelRequested = false;\n+            PendingIntent pIntent = buildNotificationIntent(\"cancel\", \"\");\n+            progressNotification = new NotificationCompat.Builder(this, PROGRESS_CHANNEL_ID)\n+                    .setSmallIcon(R.drawable.ic_launcher)\n+                    .addAction(R.drawable.ic_launcher, \"Cancel\", pIntent)\n+                    .setContentTitle(\"Uploading \" + fileName + \" (\" + total / 1024 + \" KB)\")\n+                    .setContentText(\"Starting upload\")\n+                    .setOngoing(true)\n+                    .setProgress(100, 0, false)\n+                    .setPriority(NotificationCompat.PRIORITY_LOW);\n+        }\n+\n+        int percent = 100 * read / total;\n+\n+        if (percent > 0) {\n+            progressNotification.setContentText(percent + \"% done\");\n+        }\n+\n+        progressNotification.setProgress(100, percent, false);\n+\n+        notificate(PROGRESS_MID, progressNotification);\n+    }\n+\n+    public void notificateException(Exception e) {\n+        e.printStackTrace();\n+        StringWriter sw = new StringWriter();\n+        e.printStackTrace(new PrintWriter(sw));\n+        notificate(ERROR_MID, \"Error\", sw.toString());\n     }\n \n     @Override\n     protected void onHandleIntent(Intent intent) {\n         Uri uri = (Uri) intent.getParcelableExtra(\"uri\");\n-        String fileName = getFileNameByUri(uri);\n+        String fileName = intent.getStringExtra(\"filename\");\n+        String exceptionText = intent.getStringExtra(\"exception\");\n+\n+        if (exceptionText != null) {\n+            notificate(ERROR_MID, \"Error\", exceptionText);\n+            return;\n+        }\n+\n+        byte[] data = uploadData;\n \n         SharedPreferences prefs = getSharedPreferences(\"ConfigActivity\", MODE_PRIVATE);\n \n@@ -227,19 +313,18 @@ protected void onHandleIntent(Intent intent) {\n         InputStream inputStream;\n \n         try {\n-            inputStream = getApplicationContext().getContentResolver()\n-                    .openInputStream(uri);\n-\n+            inputStream = new ByteArrayInputStream(data);\n+            int sizeBytes = data.length;\n             String url = multipartRequest(urlPref, posts,\n-                    inputStream, fileName, \"file\");\n-            notificate(\"Uploaded\", url);\n+                    inputStream, fileName, \"file\", sizeBytes);\n+\n+            notificate(PROGRESS_MID, null);\n+            progressNotification = null;\n+            notificate(SUCCESS_MID, \"Uploaded\", url);\n \n         } catch (Exception e) {\n             Log.e(\"MultipartRequest\", \"Multipart Form Upload Error\");\n-            e.printStackTrace();\n-            StringWriter sw = new StringWriter();\n-            e.printStackTrace(new PrintWriter(sw));\n-            notificate(\"Error\", sw.toString());\n+            notificateException(e);\n         }\n \n     }"
  },
  {
    "sha": "bbdbd822a1aa337724c8d9a8ce9101938a90bde1",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/Roger/rugmi-droid/blob/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/build.gradle",
    "raw_url": "https://github.com/Roger/rugmi-droid/raw/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/build.gradle",
    "contents_url": "https://api.github.com/repos/Roger/rugmi-droid/contents/build.gradle?ref=2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1",
    "patch": "@@ -2,14 +2,16 @@\n buildscript {\n     repositories {\n         jcenter()\n+        google()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:1.2.3'\n+        classpath 'com.android.tools.build:gradle:4.1.2'\n     }\n }\n \n allprojects {\n     repositories {\n         jcenter()\n+        google()\n     }\n }"
  },
  {
    "sha": "5465fec0ecadbf086fce0db92293c8f1d5f720ff",
    "filename": "gradle.properties",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Roger/rugmi-droid/blob/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/gradle.properties",
    "raw_url": "https://github.com/Roger/rugmi-droid/raw/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/gradle.properties",
    "contents_url": "https://api.github.com/repos/Roger/rugmi-droid/contents/gradle.properties?ref=2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1",
    "patch": "@@ -0,0 +1,2 @@\n+android.enableJetifier=true\n+android.useAndroidX=true\n\\ No newline at end of file"
  },
  {
    "sha": "d327f97855e48993ff860f0d5dab22abe2784613",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Roger/rugmi-droid/blob/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/Roger/rugmi-droid/raw/2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/Roger/rugmi-droid/contents/gradle/wrapper/gradle-wrapper.properties?ref=2a2eb7fad205d1d93fdf82718f1c8bd8c6d752d1",
    "patch": "@@ -1,6 +1,6 @@\n-#Wed Apr 10 15:27:10 PDT 2013\n+#Sat Mar 06 11:43:22 CET 2021\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.2.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-all.zip"
  }
]
