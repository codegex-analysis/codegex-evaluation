[
  {
    "sha": "6aeffb309596f0b0ea4753474ec6f40246a20385",
    "filename": "bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableDirectEditManager.java",
    "status": "modified",
    "additions": 60,
    "deletions": 25,
    "changes": 85,
    "blob_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/blob/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableDirectEditManager.java",
    "raw_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/raw/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableDirectEditManager.java",
    "contents_url": "https://api.github.com/repos/PalladioSimulator/Palladio-Editors-Sirius/contents/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableDirectEditManager.java?ref=6c9b60420714acc812cf0bb1c9f567b26a00e1aa",
    "patch": "@@ -1,48 +1,83 @@\n package org.palladiosimulator.editors.sirius.custom.editpart;\n \n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import org.eclipse.emf.common.util.TreeIterator;\n+import org.eclipse.emf.ecore.EObject;\n+import org.eclipse.gef.EditPart;\n+import org.eclipse.gmf.runtime.notation.Node;\n import org.eclipse.jface.viewers.CellEditor;\n+import org.eclipse.sirius.viewpoint.DRepresentationElement;\n import org.eclipse.swt.SWT;\n import org.eclipse.swt.layout.FillLayout;\n import org.eclipse.swt.widgets.Composite;\n import org.yakindu.base.xtext.utils.gmf.directedit.IXtextAwareEditPart;\n import org.yakindu.base.xtext.utils.gmf.directedit.XtextDirectEditManager;\n+\n import com.google.inject.Injector;\n \n+import de.uka.ipd.sdq.stoex.RandomVariable;\n import de.uka.ipd.sdq.stoex.analyser.visitors.TypeEnum;\n \n public class RandomVariableDirectEditManager extends XtextDirectEditManager {\n \n-\tprivate Injector injector;\n-\tprivate int style;\n-\tprivate TypeEnum expectedType;\n+    private Injector injector;\n+    private int style;\n+    private TypeEnum expectedType;\n \n-\tpublic RandomVariableDirectEditManager(IXtextAwareEditPart source, Injector injector, int style,\n-\t\t\tTypeEnum expectedType) {\n-\t\tsuper(source, injector, style);\n-\t\tthis.injector = injector;\n-\t\tthis.style = style;\n-\t\tthis.expectedType = expectedType;\n-\t}\n+    public RandomVariableDirectEditManager(IXtextAwareEditPart source, Injector injector, int style,\n+            TypeEnum expectedType) {\n+        super(source, injector, style);\n+        this.injector = injector;\n+        this.style = style;\n+        this.expectedType = expectedType;\n+    }\n \n-\t@Override\n-\tpublic void show() {\n-\t\tsuper.show();\n-\t}\n+    @Override\n+    protected CellEditor createCellEditorOn(Composite composite) {\n \n-\t@Override\n-\tprotected CellEditor createCellEditorOn(Composite composite) {\n+        Composite parent = new Composite(composite, SWT.None);\n+        FillLayout fillLayout = new FillLayout();\n+        fillLayout.marginWidth = 10;\n+        parent.setLayout(fillLayout);\n \n-\t\tComposite parent = new Composite(composite, SWT.None);\n-\t\tFillLayout fillLayout = new FillLayout();\n-\t\tfillLayout.marginWidth = 10;\n-\t\tparent.setLayout(fillLayout);\n+        RandomVariableXtextStyledTextCellEditorEx editor;\n+        editor = new RandomVariableXtextStyledTextCellEditorEx(style, injector, getRandomVariable(), expectedType);\n \n-\t\tRandomVariableXtextStyledTextCellEditorEx editor;\n-\t\teditor = new RandomVariableXtextStyledTextCellEditorEx(style, injector, expectedType);\n+        editor.create(composite);\n \n-\t\teditor.create(composite);\n+        return editor;\n+    }\n \n-\t\treturn editor;\n-\t}\n+    protected Optional<RandomVariable> getRandomVariable() {\n+        return Optional.ofNullable(getEditPart())\n+            .map(EditPart::getModel)\n+            .filter(Node.class::isInstance)\n+            .map(Node.class::cast)\n+            .map(Node::getElement)\n+            .filter(DRepresentationElement.class::isInstance)\n+            .map(DRepresentationElement.class::cast)\n+            .map(DRepresentationElement::getSemanticElements)\n+            .map(c -> (Collection<EObject>) c)\n+            .orElse(Collections.emptyList())\n+            .stream()\n+            .map(contextElement -> {\n+                if (contextElement instanceof RandomVariable) {\n+                    return (RandomVariable) contextElement;\n+                }\n+                for (TreeIterator<EObject> iter = contextElement.eAllContents(); iter.hasNext();) {\n+                    EObject current = iter.next();\n+                    if (current instanceof RandomVariable) {\n+                        return (RandomVariable) current;\n+                    }\n+                }\n+                return null;\n+            })\n+            .filter(Objects::nonNull)\n+            .findFirst();\n+    }\n \n }"
  },
  {
    "sha": "28ee4049c04ee1ddf1e3fc4cbcb1461e916e0242",
    "filename": "bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableEditPart.java",
    "status": "modified",
    "additions": 1,
    "deletions": 9,
    "changes": 10,
    "blob_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/blob/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableEditPart.java",
    "raw_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/raw/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableEditPart.java",
    "contents_url": "https://api.github.com/repos/PalladioSimulator/Palladio-Editors-Sirius/contents/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableEditPart.java?ref=6c9b60420714acc812cf0bb1c9f567b26a00e1aa",
    "patch": "@@ -15,17 +15,13 @@\n @SuppressWarnings(\"restriction\")\n public class RandomVariableEditPart extends DNodeListElementEditPart implements IXtextAwareEditPart {\n \n-\tprivate TypeEnum expectedType;\n+\tprivate final TypeEnum expectedType;\n \n \tpublic RandomVariableEditPart(View view, TypeEnum expectedType) {\n \t\tsuper(view);\n \t\tthis.expectedType = expectedType;\n \t}\n \n-\tpublic RandomVariableEditPart(View view) {\n-\t\tthis(view, TypeEnum.ANY);\n-\t}\n-\n \tprotected int getEditorStyles() {\n \t\treturn SWT.SINGLE | SWT.WRAP;\n \t}\n@@ -51,8 +47,4 @@ private Injector getInjector() {\n \t\treturn StoexActivator.getInstance().getInjector(StoexActivator.ORG_PALLADIOSIMULATOR_PCM_STOEX_PCMSTOEX);\n \t}\n \n-\tpublic void setExpectedType(TypeEnum expectedType) {\n-\t\tthis.expectedType = expectedType;\n-\t}\n-\n }"
  },
  {
    "sha": "9064f8afe6b51d50993406c38ced6c0a5f669ba7",
    "filename": "bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableEditPartProvider.java",
    "status": "modified",
    "additions": 23,
    "deletions": 19,
    "changes": 42,
    "blob_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/blob/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableEditPartProvider.java",
    "raw_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/raw/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableEditPartProvider.java",
    "contents_url": "https://api.github.com/repos/PalladioSimulator/Palladio-Editors-Sirius/contents/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableEditPartProvider.java?ref=6c9b60420714acc812cf0bb1c9f567b26a00e1aa",
    "patch": "@@ -70,25 +70,7 @@ public synchronized IGraphicalEditPart createGraphicEditPart(View view) {\n \t\t\tString name = element.getMapping().getName();\n \t\t\tswitch (SiriusVisualIDRegistry.getVisualID(view)) {\n \t\t\tcase DNodeListElementEditPart.VISUAL_ID:\n-\t\t\t\tfinal RandomVariableEditPart editPart = new RandomVariableEditPart(view);\n-\t\t\t\tswitch (name) {\n-\t\t\t\tcase \"GuardedBranchTransition\": // Guarded Branch Transistion Condition Dialog\n-\t\t\t\tcase \"Condition\": // Guarded Branch Transistion Condition Dialog\n-\t\t\t\t\teditPart.setExpectedType(TypeEnum.BOOL);\n-\t\t\t\t\treturn editPart;\n-\t\t\t\tcase \"InfrastructureCall\": // NumberOfCalls\n-\t\t\t\tcase \"ResourceCall\":\n-\t\t\t\t\teditPart.setExpectedType(TypeEnum.INT);\n-\t\t\t\t\treturn editPart;\n-\t\t\t\tcase \"thinkTime\": // Closed Workload Think Time Action\n-\t\t\t\tcase \"delayTime\": // Delay Time Action\n-\t\t\t\tcase \"Throughput\":\n-\t\t\t\tcase \"Latency\":\n-\t\t\t\tcase \"PassiveResource\": // SetCapacity\n-\t\t\t\t\teditPart.setExpectedType(TypeEnum.DOUBLE);\n-\t\t\t\t\treturn editPart;\n-\t\t\t\t}\n-\t\t\t\treturn editPart;\n+\t\t\t\treturn new RandomVariableEditPart(view, getExpectedType(name));\n \t\t\tcase DNodeContainer2EditPart.VISUAL_ID: {\n \t\t\t\tif (name.equals(\"LoopIterationCount\")) {\n \t\t\t\t\tRandomVariableNodeContainerEditPart containerEditPart = new RandomVariableNodeContainerEditPart(\n@@ -103,6 +85,28 @@ public synchronized IGraphicalEditPart createGraphicEditPart(View view) {\n \t\treturn null;\n \n \t}\n+\t\n+\tprotected TypeEnum getExpectedType(String mappingName) {\n+\t    TypeEnum expectedType = TypeEnum.ANY;\n+\t    switch (mappingName) {\n+        case \"GuardedBranchTransition\": // Guarded Branch Transistion Condition Dialog\n+        case \"Condition\": // Guarded Branch Transistion Condition Dialog\n+            expectedType = TypeEnum.BOOL;\n+            break;\n+        case \"InfrastructureCall\": // NumberOfCalls\n+        case \"ResourceCall\":\n+            expectedType = TypeEnum.INT;\n+            break;\n+        case \"thinkTime\": // Closed Workload Think Time Action\n+        case \"delayTime\": // Delay Time Action\n+        case \"Throughput\":\n+        case \"Latency\":\n+        case \"PassiveResource\": // SetCapacity\n+            expectedType = TypeEnum.DOUBLE;\n+            break;\n+        }\n+\t    return expectedType;\n+\t}\n \n \t@Override\n \tpublic boolean provides(IOperation operation) {"
  },
  {
    "sha": "d5608bae15a51cb6a7f97ed013a94b756bdc4949",
    "filename": "bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableNodeContainerEditPart.java",
    "status": "modified",
    "additions": 1,
    "deletions": 9,
    "changes": 10,
    "blob_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/blob/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableNodeContainerEditPart.java",
    "raw_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/raw/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableNodeContainerEditPart.java",
    "contents_url": "https://api.github.com/repos/PalladioSimulator/Palladio-Editors-Sirius/contents/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableNodeContainerEditPart.java?ref=6c9b60420714acc812cf0bb1c9f567b26a00e1aa",
    "patch": "@@ -17,16 +17,12 @@\n @SuppressWarnings(\"restriction\")\n public class RandomVariableNodeContainerEditPart extends DNodeContainer2EditPart implements IXtextAwareEditPart {\n \n-\tprivate TypeEnum expectedType;\n+\tprivate final TypeEnum expectedType;\n \n \tpublic RandomVariableNodeContainerEditPart(View view, TypeEnum expectedType) {\n \t\tsuper(view);\n \t\tthis.expectedType = expectedType;\n \t}\n-\t\n-\tpublic RandomVariableNodeContainerEditPart(View view) {\n-\t\tthis(view, TypeEnum.ANY);\n-\t}\n \n \tprotected int getEditorStyles() {\n \t\treturn SWT.SINGLE | SWT.WRAP;\n@@ -47,10 +43,6 @@ protected DirectEditManager createDirectEditManager() {\n \tprivate Injector getInjector() {\n \t\treturn StoexActivator.getInstance().getInjector(StoexActivator.ORG_PALLADIOSIMULATOR_PCM_STOEX_PCMSTOEX);\n \t}\n-\t\n-\tpublic void setExpectedType(TypeEnum expectedType) {\n-\t\tthis.expectedType = expectedType;\n-\t}\n \n \t@Override\n \tpublic String getEditText() {"
  },
  {
    "sha": "363f3ee6f4e7c8c1b5494931630c3ed19f2ffb10",
    "filename": "bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableXtextAdapter.java",
    "status": "modified",
    "additions": 41,
    "deletions": 59,
    "changes": 100,
    "blob_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/blob/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableXtextAdapter.java",
    "raw_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/raw/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableXtextAdapter.java",
    "contents_url": "https://api.github.com/repos/PalladioSimulator/Palladio-Editors-Sirius/contents/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableXtextAdapter.java?ref=6c9b60420714acc812cf0bb1c9f567b26a00e1aa",
    "patch": "@@ -1,75 +1,57 @@\n package org.palladiosimulator.editors.sirius.custom.editpart;\n \n-import java.util.Collection;\n-import java.util.Collections;\n import java.util.List;\n+import java.util.Optional;\n \n import org.eclipse.core.runtime.NullProgressMonitor;\n-import org.eclipse.emf.ecore.EObject;\n import org.eclipse.xtext.validation.Issue;\n+import org.palladiosimulator.editors.commons.dialogs.stoex.StoExContextProvidingAdapter;\n+import org.palladiosimulator.editors.commons.dialogs.stoex.StoxContextProvidingAdapterFactory;\n import org.yakindu.base.xtext.utils.jface.viewers.StyledTextXtextAdapter;\n import org.yakindu.base.xtext.utils.jface.viewers.context.IXtextFakeContextResourcesProvider;\n+import org.yakindu.base.xtext.utils.jface.viewers.context.XtextFakeResourceContext;\n \n import com.google.inject.Injector;\n \n-import de.uka.ipd.sdq.errorhandling.IIssue;\n-import de.uka.ipd.sdq.stoex.Expression;\n-import de.uka.ipd.sdq.stoex.analyser.exceptions.ExpectedTypeMismatchIssue;\n-import de.uka.ipd.sdq.stoex.analyser.visitors.ExpressionInferTypeVisitor;\n-import de.uka.ipd.sdq.stoex.analyser.visitors.NonProbabilisticExpressionInferTypeVisitor;\n-import de.uka.ipd.sdq.stoex.analyser.visitors.TypeCheckVisitor;\n+import de.uka.ipd.sdq.stoex.RandomVariable;\n import de.uka.ipd.sdq.stoex.analyser.visitors.TypeEnum;\n \n public class RandomVariableXtextAdapter extends StyledTextXtextAdapter {\n \n-\tprivate TypeEnum expectedType;\n-\n-\tpublic RandomVariableXtextAdapter(Injector injector, IXtextFakeContextResourcesProvider contextFakeResourceProvider,\n-\t\t\tTypeEnum expectedType) {\n-\t\tsuper(injector, contextFakeResourceProvider);\n-\t\tthis.expectedType = expectedType;\n-\t}\n-\n-\t@Override\n-\tpublic List<Issue> getXtextValidationIssues() {\n-\t\tList<Issue> issues = getValidationJob().createIssues(new NullProgressMonitor());\n-\t\tString warningText = \"\";\n-\t\tfor (Issue issue : issues) {\n-\t\t\twarningText = warningText + issue.getMessage() + \"\\n\";\n-\t\t}\n-\n-\t\tEObject resultType = getXtextParseResult().getRootASTElement();\n-\t\tif (resultType != null) {\n-\t\t\tfinal NonProbabilisticExpressionInferTypeVisitor typeVisitor = new NonProbabilisticExpressionInferTypeVisitor();\n-\t\t\ttypeVisitor.doSwitch(resultType);\n-\t\t\tCollection<? extends IIssue> typeIssues = assertType(resultType, typeVisitor, expectedType);\n-\t\t\tfor (IIssue typeIssue : typeIssues) {\n-\t\t\t\twarningText = warningText + typeIssue.getMessage() + \"\\n\";\n-\t\t\t}\n-\t\t}\n-\n-\t\tgetDecoration().setDescriptionText(warningText);\n-\t\treturn issues;\n-\t}\n-\n-\t/**\n-\t * Assert type.\n-\t * \n-\t * @param result\n-\t *            the result\n-\t * @param typeVisitor\n-\t *            the type visitor\n-\t * @param expectedType\n-\t *            the expected type\n-\t * @return the collection<? extends i issue>\n-\t */\n-\tprivate Collection<? extends IIssue> assertType(final EObject result, final ExpressionInferTypeVisitor typeVisitor,\n-\t\t\tfinal TypeEnum expectedType) {\n-\t\tif (!TypeCheckVisitor.typesCompatible(expectedType, typeVisitor.getType((Expression) result))) {\n-\t\t\treturn Collections.singletonList(\n-\t\t\t\t\tnew ExpectedTypeMismatchIssue(expectedType, typeVisitor.getType((Expression) result)));\n-\t\t}\n-\t\treturn Collections.emptyList();\n-\t}\n-\n+    private final TypeEnum expectedType;\n+    private final Optional<RandomVariable> randomVariable;\n+\n+    public RandomVariableXtextAdapter(Injector injector, IXtextFakeContextResourcesProvider contextFakeResourceProvider,\n+            Optional<RandomVariable> randomVariable, TypeEnum expectedType) {\n+        super(injector, contextFakeResourceProvider);\n+        this.randomVariable = randomVariable;\n+        this.expectedType = expectedType;\n+    }\n+\n+    @Override\n+    protected void initXtextDocument(XtextFakeResourceContext context) {\n+        super.initXtextDocument(context);\n+        registerContext();\n+    }\n+\n+    @Override\n+    public List<Issue> getXtextValidationIssues() {\n+        List<Issue> issues = getValidationJob().createIssues(new NullProgressMonitor());\n+        String warningText = \"\";\n+        for (Issue issue : issues) {\n+            warningText = warningText + issue.getMessage() + \"\\n\";\n+        }\n+        getDecoration().setDescriptionText(warningText);\n+        return issues;\n+    }\n+\n+    protected void registerContext() {\n+        StoExContextProvidingAdapter adapter = StoxContextProvidingAdapterFactory.create();\n+        randomVariable.ifPresent(adapter::setStoexContainer);\n+        adapter.setExpectedType(expectedType);\n+        getXtextDocument().readOnly(r -> {\n+            return r.eAdapters()\n+                .add(adapter);\n+        });\n+    }\n }"
  },
  {
    "sha": "2402eae7c3f6622842ef9c69365087386b339d0f",
    "filename": "bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableXtextStyledTextCellEditorEx.java",
    "status": "modified",
    "additions": 9,
    "deletions": 9,
    "changes": 18,
    "blob_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/blob/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableXtextStyledTextCellEditorEx.java",
    "raw_url": "https://github.com/PalladioSimulator/Palladio-Editors-Sirius/raw/6c9b60420714acc812cf0bb1c9f567b26a00e1aa/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableXtextStyledTextCellEditorEx.java",
    "contents_url": "https://api.github.com/repos/PalladioSimulator/Palladio-Editors-Sirius/contents/bundles/org.palladiosimulator.editors.sirius.custom/src/org/palladiosimulator/editors/sirius/custom/editpart/RandomVariableXtextStyledTextCellEditorEx.java?ref=6c9b60420714acc812cf0bb1c9f567b26a00e1aa",
    "patch": "@@ -1,6 +1,8 @@\n package org.palladiosimulator.editors.sirius.custom.editpart;\n \n import java.awt.Toolkit;\n+import java.util.Optional;\n+\n import org.eclipse.swt.SWT;\n import org.eclipse.swt.custom.StyledText;\n import org.eclipse.swt.events.ModifyEvent;\n@@ -16,29 +18,27 @@\n \n import com.google.inject.Injector;\n \n+import de.uka.ipd.sdq.stoex.RandomVariable;\n import de.uka.ipd.sdq.stoex.analyser.visitors.TypeEnum;\n \n public class RandomVariableXtextStyledTextCellEditorEx extends XtextStyledTextCellEditorEx {\n \n-\tprivate Color errorColor;\n+\tprivate final Color errorColor;\n \tprivate Color whiteColor;\n \n-\tprivate TypeEnum expectedType;\n+\tprivate final Optional<RandomVariable> randomVariable;\n+\tprivate final TypeEnum expectedType;\n \n \tprivate boolean errorDisplayed = false;\n \n-\tpublic RandomVariableXtextStyledTextCellEditorEx(int style, Injector injector, TypeEnum expectedType) {\n+\tpublic RandomVariableXtextStyledTextCellEditorEx(int style, Injector injector, Optional<RandomVariable> randomVariable, TypeEnum expectedType) {\n \t\tsuper(style, injector);\n \t\tthis.expectedType = expectedType;\n+\t\tthis.randomVariable = randomVariable;\n \t\tDisplay display = Display.getCurrent();\n \t\terrorColor = display.getSystemColor(SWT.COLOR_RED);\n \t}\n \n-\tpublic RandomVariableXtextStyledTextCellEditorEx(int style, Injector injector, TypeEnum expectedType,\n-\t\t\tString editText) {\n-\t\tthis(style, injector, expectedType);\n-\t}\n-\n \t@Override\n \tprotected void focusLost() {\n \t\t// don't close the editor if the new value has errors\n@@ -94,7 +94,7 @@ protected StyledTextXtextAdapter createXtextAdapter() {\n \t\treturn new RandomVariableXtextAdapter(this.getInjector(),\n \t\t\t\tgetContextFakeResourceProvider() == null ? IXtextFakeContextResourcesProvider.NULL_CONTEXT_PROVIDER\n \t\t\t\t\t\t: getContextFakeResourceProvider(),\n-\t\t\t\texpectedType);\n+\t\t\t\t\t\trandomVariable, expectedType);\n \t}\n \n }"
  }
]
