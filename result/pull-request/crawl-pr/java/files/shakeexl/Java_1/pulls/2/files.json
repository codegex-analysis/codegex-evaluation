[
  {
    "sha": "3e39b908fc5f76c717eebd65f7102ed61a23eeba",
    "filename": "Lesson_2.java",
    "status": "added",
    "additions": 101,
    "deletions": 0,
    "changes": 101,
    "blob_url": "https://github.com/shakeexl/Java_1/blob/3cfc8ad396bbda6ea6937c4bccd085eddacd9dd4/Lesson_2.java",
    "raw_url": "https://github.com/shakeexl/Java_1/raw/3cfc8ad396bbda6ea6937c4bccd085eddacd9dd4/Lesson_2.java",
    "contents_url": "https://api.github.com/repos/shakeexl/Java_1/contents/Lesson_2.java?ref=3cfc8ad396bbda6ea6937c4bccd085eddacd9dd4",
    "patch": "@@ -0,0 +1,101 @@\n+package ru.geekbrains.lesson_2;\n+\n+//1. Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].\n+//   С помощью цикла и условия заменить 0 на 1, 1 на 0;\n+//2. Задать пустой целочисленный массив размером 8. С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21;\n+//3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ] пройти по нему циклом, и числа меньшие 6 умножить на 2;\n+//4. Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое), и с помощью цикла(-ов)\n+//   заполнить его диагональные элементы единицами (можно только одну из диагоналей, если обе сложно). Определить\n+//   элементы одной из диагоналей можно по следующему принципу: индексы таких элементов равны,\n+//   то есть [0][0], [1][1], [2][2], …, [n][n];\n+//5. Задать одномерный массив и найти в нем минимальный и максимальный элементы (без помощи интернета);\n+//6. Написать метод, в который передается не пустой одномерный целочисленный массив, метод должен вернуть true,\n+//   если в массиве есть место, в котором сумма левой и правой части массива равны.\n+//   Примеры: checkBalance([2, 2, 2, 1, 2, 2, || 10, 1]) → true, checkBalance([1, 1, 1, || 2, 1]) → true, граница показана\n+//   символами ||, эти символы в массив не входят.\n+//7. Написать метод, которому на вход подается одномерный массив и число n (может быть положительным, или отрицательным),\n+//   при этом метод должен сместить все элементы массива на n позиций. Элементы смещаются циклично. Для усложнения\n+//   задачи нельзя пользоваться вспомогательными массивами.\n+//   Примеры: [ 1, 2, 3 ] при n = 1 (на один вправо) -> [ 3, 1, 2 ]; [ 3, 5, 6, 1] при n = -2 (на два влево) -> [ 6, 1, 3, 5 ].\n+//   При каком n в какую сторону сдвиг можете выбирать сами.\n+\n+import java.util.Arrays;\n+\n+public class Lesson_2 {\n+\n+    public static void main(String[] args) {\n+        System.out.println(\"Задание 1: \" + task_1());\n+        System.out.println(\"Задание 2: \" + task_2());\n+        System.out.println(\"Задание 3: \" + task_3());\n+        System.out.println(\"Задание 4: \");\n+        printArr(task_4());\n+        task_5();\n+    }\n+\n+    public static String task_1() {\n+        int[] arr = {1, 1, 0, 0, 1, 0, 1, 1, 0, 0};\n+        for(int i = 0; i < arr.length; i++) {\n+            if (arr[i] == 1) {\n+                arr[i] = 0;\n+            } else {\n+                arr[i] = 1;\n+            }\n+        }\n+        return Arrays.toString(arr);\n+    }\n+\n+    public static String task_2() {\n+        int[] arr = new int[8];\n+        int j = 0;\n+        for(int i = 0; i < arr.length; i++) {\n+            arr[i] = j;\n+            j = j + 3;\n+        }\n+        return Arrays.toString(arr);\n+    }\n+\n+    public static String task_3() {\n+        int[] arr = { 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 };\n+        for(int i = 0; i < arr.length; i++) {\n+            if (arr[i] < 6) {\n+                arr[i] = arr[i] * 2;\n+            }\n+        }\n+        return Arrays.toString(arr);\n+    }\n+\n+    public static int[][] task_4() {\n+        int[][] arr = new int[5][5];\n+        for (int i = 0, j = 0; i < arr.length; i++, j++) {\n+            arr[i][j] = 1;\n+        }\n+        for (int i = 0, j = arr.length-1; i < arr.length; i++, j--) {\n+            arr[i][j] = 1;\n+        }\n+        return arr;\n+    }\n+\n+    public static void printArr(int[][] arr) {\n+        for (int[] ints : arr) {\n+            for (int anInt : ints) {\n+                System.out.print(anInt);\n+            }\n+            System.out.println();\n+        }\n+    }\n+\n+    public static void task_5() {\n+        int[] arr = { 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 };\n+        int max = arr[0];\n+        int min = arr[0];\n+        for (int j : arr) {\n+            if (max <= j) {\n+                max = j;\n+            }\n+            if (min >= j) {\n+                min = j;\n+            }\n+        }\n+        System.out.println(\"Задание 5: Max - \" + max + \", Min - \" + min);\n+    }\n+}"
  }
]
