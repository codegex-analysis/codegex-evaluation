[
  {
    "sha": "2884fcdc2dc141453d9f563ec80633a57ca9fe13",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/pom.xml",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/pom.xml",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/pom.xml?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -37,7 +37,7 @@\n \t\t\t<dependency>\n \t\t\t\t<groupId>io.jenkins.tools.bom</groupId>\n \t\t\t\t<artifactId>bom-2.235.x</artifactId>\n-\t\t\t\t<version>25</version>\n+\t\t\t\t<version>26</version>\n \t\t\t\t<scope>import</scope>\n \t\t\t\t<type>pom</type>\n \t\t\t</dependency>"
  },
  {
    "sha": "89f12257f9e70d56e5153a1428c26ee0a54c2192",
    "filename": "src/main/java/jenkins/advancedqueue/ItemTransitionLogger.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/ItemTransitionLogger.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/ItemTransitionLogger.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/ItemTransitionLogger.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -28,7 +28,6 @@\n import javax.annotation.Nonnull;\n \n import jenkins.advancedqueue.sorter.ItemInfo;\n-import jenkins.model.Jenkins;\n \n /**\n  * @author Magnus Sandberg"
  },
  {
    "sha": "650d56e93f0e6b2cd89de1429afd682f93d8f472",
    "filename": "src/main/java/jenkins/advancedqueue/JobGroup.java",
    "status": "modified",
    "additions": 9,
    "deletions": 5,
    "changes": 14,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/JobGroup.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/JobGroup.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/JobGroup.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -25,19 +25,23 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.stream.Collectors;\n+\n import javax.annotation.CheckForNull;\n+import javax.annotation.Nonnull;\n+\n+import org.kohsuke.stapler.DataBoundConstructor;\n+import org.kohsuke.stapler.DataBoundSetter;\n+import org.kohsuke.stapler.StaplerRequest;\n \n+import hudson.model.Descriptor;\n+import hudson.model.Queue.Item;\n import jenkins.advancedqueue.jobinclusion.JobInclusionStrategy;\n import jenkins.advancedqueue.jobinclusion.strategy.ViewBasedJobInclusionStrategy;\n-import javax.annotation.Nonnull;\n-\n import jenkins.advancedqueue.priority.PriorityStrategy;\n import net.sf.json.JSONArray;\n import net.sf.json.JSONObject;\n \n-import org.kohsuke.stapler.DataBoundConstructor;\n-import org.kohsuke.stapler.StaplerRequest;\n-\n /**\n  * Describes job group for Advanced Queue Sorter.\n  *"
  },
  {
    "sha": "857ccd99c0d687a9c608f87ccef24df7f734c463",
    "filename": "src/main/java/jenkins/advancedqueue/PriorityConfiguration.java",
    "status": "modified",
    "additions": 47,
    "deletions": 60,
    "changes": 107,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/PriorityConfiguration.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/PriorityConfiguration.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/PriorityConfiguration.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -23,25 +23,6 @@\n  */\n package jenkins.advancedqueue;\n \n-import hudson.DescriptorExtensionList;\n-import hudson.Extension;\n-import hudson.ExtensionList;\n-import hudson.Plugin;\n-import hudson.matrix.MatrixConfiguration;\n-import hudson.matrix.MatrixProject;\n-import hudson.model.Describable;\n-import hudson.model.Descriptor;\n-import hudson.model.Job;\n-import hudson.model.Queue;\n-import hudson.model.RootAction;\n-import hudson.model.TopLevelItem;\n-import hudson.model.ViewGroup;\n-import hudson.model.View;\n-import hudson.security.ACL;\n-import hudson.security.Permission;\n-import hudson.util.FormValidation;\n-import hudson.util.ListBoxModel;\n-\n import java.io.IOException;\n import java.util.Collection;\n import java.util.Collections;\n@@ -50,48 +31,62 @@\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n+import java.util.logging.Level;\n import java.util.logging.Logger;\n import java.util.regex.Pattern;\n import java.util.regex.PatternSyntaxException;\n+\n import javax.annotation.CheckForNull;\n import javax.annotation.Nonnull;\n-\n import javax.servlet.ServletException;\n \n+import org.jenkinsci.plugins.workflow.support.steps.ExecutorStepExecution;\n+import org.kohsuke.stapler.DataBoundConstructor;\n+import org.kohsuke.stapler.DataBoundSetter;\n+import org.kohsuke.stapler.QueryParameter;\n+import org.kohsuke.stapler.StaplerRequest;\n+import org.kohsuke.stapler.StaplerResponse;\n+\n+import hudson.DescriptorExtensionList;\n+import hudson.Extension;\n+import hudson.ExtensionList;\n+import hudson.Plugin;\n+import hudson.matrix.MatrixConfiguration;\n+import hudson.model.Describable;\n+import hudson.model.Descriptor;\n+import hudson.model.Job;\n+import hudson.model.Queue;\n+import hudson.model.RootAction;\n+import hudson.model.TopLevelItem;\n+import hudson.model.View;\n+import hudson.model.ViewGroup;\n+import hudson.security.ACL;\n+import hudson.security.ACLContext;\n+import hudson.util.FormValidation;\n+import hudson.util.ListBoxModel;\n import jenkins.advancedqueue.jobinclusion.JobInclusionStrategy;\n import jenkins.advancedqueue.priority.PriorityStrategy;\n-import jenkins.advancedqueue.sorter.ItemInfo;\n-import jenkins.advancedqueue.sorter.QueueItemCache;\n+import jenkins.model.GlobalConfiguration;\n import jenkins.model.Jenkins;\n import net.sf.json.JSONArray;\n import net.sf.json.JSONObject;\n \n-import org.acegisecurity.context.SecurityContext;\n-import org.acegisecurity.context.SecurityContextHolder;\n-import org.jenkinsci.plugins.workflow.support.steps.ExecutorStepExecution;\n-import org.kohsuke.stapler.QueryParameter;\n-import org.kohsuke.stapler.StaplerRequest;\n-import org.kohsuke.stapler.StaplerResponse;\n-\n /**\n  * @author Magnus Sandberg\n  * @since 2.0\n  */\n @Extension\n-public class PriorityConfiguration extends Descriptor<PriorityConfiguration> implements RootAction, Describable<PriorityConfiguration> {\n-\n-\tprivate final static Logger LOGGER = Logger.getLogger(PriorityConfiguration.class.getName());\n+public class PriorityConfiguration extends GlobalConfiguration implements RootAction {\n \n+\tprivate static final Logger LOGGER = Logger.getLogger(PriorityConfiguration.class.getName());\n \ttransient private Map<Integer, JobGroup> id2jobGroup;\n \ttransient private PriorityConfigurationMatrixHelper priorityConfigurationMatrixHelper;\n \ttransient private PriorityConfigurationPlaceholderTaskHelper placeholderTaskHelper = new PriorityConfigurationPlaceholderTaskHelper();\n-\tprivate List<JobGroup> jobGroups;\n+\tprivate List<JobGroup> jobGroups = new LinkedList<JobGroup>();\n \n+\t@DataBoundConstructor\n \tpublic PriorityConfiguration() {\n-\t\tsuper(PriorityConfiguration.class);\n-\t\tjobGroups = new LinkedList<JobGroup>();\n \t\tload();\n-\t\t//\n \t\tCollections.sort(jobGroups, new Comparator<JobGroup>() {\n \t\t\tpublic int compare(JobGroup o1, JobGroup o2) {\n \t\t\t\treturn o1.getId() - o2.getId();\n@@ -110,8 +105,10 @@ public int compare(JobGroup.PriorityStrategyHolder o1, JobGroup.PriorityStrategy\n \t\t//\n \t\tPlugin plugin = Jenkins.get().getPlugin(\"matrix-project\");\n \t\tif(plugin == null || !plugin.getWrapper().isEnabled()){\n+\t\t\tLOGGER.log(Level.FINE, \"The matrix-project plugin is not installed or enable.\");\n \t\t\tpriorityConfigurationMatrixHelper = null;\n \t\t} else {\n+\t\t\tLOGGER.log(Level.FINE, \"The matrix-project plugin is installed and enable.\");\n \t\t\tpriorityConfigurationMatrixHelper = new PriorityConfigurationMatrixHelper();\n \t\t}\n \t}\n@@ -147,28 +144,22 @@ private boolean checkActive() {\n \t\treturn jobGroups;\n \t}\n \n-\tpublic JobGroup getJobGroup(int id) {\n-\t\treturn id2jobGroup.get(id);\n-\t}\n-\n \tpublic ExtensionList<Descriptor<PriorityStrategy>> getPriorityStrategyDescriptors() {\n \t\treturn PriorityStrategy.all();\n \t}\n-\t\n+\n \tpublic DescriptorExtensionList<JobInclusionStrategy, Descriptor<JobInclusionStrategy>> getJobInclusionStrategyDescriptors() {\n \t\treturn JobInclusionStrategy.all();\n \t}\n \n-\n \tpublic ListBoxModel getPriorities() {\n \t\tListBoxModel items = PrioritySorterConfiguration.get().doGetPriorityItems();\n \t\treturn items;\n \t}\n \n \tpublic void doPriorityConfigSubmit(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {\n \t\tjobGroups = new LinkedList<JobGroup>();\n-\t\tid2jobGroup = new HashMap<Integer, JobGroup>();\n-\t\t//\n+\n \t\tString parameter = req.getParameter(\"json\");\n \t\tJSONObject jobGroupsObject = JSONObject.fromObject(parameter);\n \t\tJSONArray jsonArray = JSONArray.fromObject(jobGroupsObject.get(\"jobGroup\"));\n@@ -180,16 +171,11 @@ public void doPriorityConfigSubmit(StaplerRequest req, StaplerResponse rsp) thro\n \t\t\t}\n \t\t\tJobGroup jobGroup = JobGroup.newInstance(req, jobGroupObject, id++);\n \t\t\tjobGroups.add(jobGroup);\n-\t\t\tid2jobGroup.put(jobGroup.getId(), jobGroup);\n \t\t}\n \t\tsave();\n \t\trsp.sendRedirect(Jenkins.get().getRootUrl());\n \t}\n \n-\tpublic Descriptor<PriorityConfiguration> getDescriptor() {\n-\t\treturn this;\n-\t}\n-\n \tpublic FormValidation doCheckJobPattern(@QueryParameter String value) throws IOException, ServletException {\n \t\tif (value.length() > 0) {\n \t\t\ttry {\n@@ -202,11 +188,8 @@ public FormValidation doCheckJobPattern(@QueryParameter String value) throws IOE\n \t}\n \n \tpublic PriorityConfigurationCallback getPriority(Queue.Item item, PriorityConfigurationCallback priorityCallback) {\n-\t\tSecurityContext saveCtx = ACL.impersonate(ACL.SYSTEM);\n-\t\ttry {\n+\t\ttry (ACLContext ctx = ACL.as(ACL.SYSTEM)) {\n \t\t\treturn getPriorityInternal(item, priorityCallback);\n-\t\t} finally {\n-\t\t\tSecurityContextHolder.setContext(saveCtx);\n \t\t}\n \t}\n \n@@ -223,7 +206,7 @@ private PriorityConfigurationCallback getPriorityInternal(Queue.Item item, Prior\n \t\t}\n \n \t\tJob<?, ?> job = (Job<?, ?>) item.task;\n-\t\t\n+\n \t\tif (priorityConfigurationMatrixHelper != null && priorityConfigurationMatrixHelper.isMatrixConfiguration(job)) {\n \t\t\treturn priorityConfigurationMatrixHelper.getPriority((MatrixConfiguration) job, priorityCallback);\n \t\t}\n@@ -238,29 +221,29 @@ private PriorityConfigurationCallback getPriorityInternal(Queue.Item item, Prior\n \t\treturn priorityCallback.setPrioritySelection(PrioritySorterConfiguration.get().getStrategy().getDefaultPriority());\n \t}\n \n-        @CheckForNull\n+\t@CheckForNull\n \tpublic JobGroup getJobGroup(@Nonnull PriorityConfigurationCallback priorityCallback, @Nonnull Job<?, ?> job) {\n \t\tif (!(job instanceof TopLevelItem)) {\n \t\t\tpriorityCallback.addDecisionLog(0, \"Job is not a TopLevelItem [\" + job.getClass().getName() + \"] ...\");\n \t\t\treturn null;\n \t\t}\n \t\tfor (JobGroup jobGroup : jobGroups) {\n \t\t\tpriorityCallback.addDecisionLog(0, \"Evaluating JobGroup [\" + jobGroup.getId() + \"] ...\");\n-\t\t\tif (jobGroup.getJobGroupStrategy().contains(priorityCallback, job)) {\n+\t\t\tif (jobGroup.getJobGroupStrategy() != null && jobGroup.getJobGroupStrategy().contains(priorityCallback, job)) {\n \t\t\t\treturn jobGroup;\n \t\t\t}\n \t\t}\n \t\treturn null;\n \t}\n-\t\n+\n \tprivate boolean isJobInView(Job<?, ?> job, View view) {\n \t\tif(view instanceof ViewGroup) {\n \t\t\treturn isJobInViewGroup(job, (ViewGroup) view);\n \t\t} else {\n-\t\t\treturn view.contains((TopLevelItem) job); \n+\t\t\treturn view.contains((TopLevelItem) job);\n \t\t}\n \t}\n-\t\n+\n \tprivate boolean isJobInViewGroup(Job<?, ?> job, ViewGroup viewGroup) {\n \t\tCollection<View> views = viewGroup.getViews();\n \t\tfor (View view : views) {\n@@ -270,7 +253,7 @@ private boolean isJobInViewGroup(Job<?, ?> job, ViewGroup viewGroup) {\n \t\t}\n \t\treturn false;\n \t}\n-\t\n+\n \tprivate PriorityConfigurationCallback getPriorityForJobGroup(PriorityConfigurationCallback priorityCallback, JobGroup jobGroup, Queue.Item item) {\n \t\tint priority = jobGroup.getPriority();\n \t\tPriorityStrategy reason = null;\n@@ -304,4 +287,8 @@ static public PriorityConfiguration get() {\n \t\treturn (PriorityConfiguration) Jenkins.get().getDescriptor(PriorityConfiguration.class);\n \t}\n \n+\n+\t// static public PriorityConfiguration get() {\n+\t// \treturn GlobalConfiguration.all().get(PriorityConfiguration.class);\n+\t// }\n }"
  },
  {
    "sha": "d6bca47af6ae77ccd718c4d01f6bb57bc068c763",
    "filename": "src/main/java/jenkins/advancedqueue/PriorityConfigurationPlaceholderTaskHelper.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/PriorityConfigurationPlaceholderTaskHelper.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/PriorityConfigurationPlaceholderTaskHelper.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/PriorityConfigurationPlaceholderTaskHelper.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -13,8 +13,8 @@\n \n class PriorityConfigurationPlaceholderTaskHelper {\n \n-    private static final Logger LOGGER = Logger.getLogger(PriorityConfigurationPlaceholderTaskHelper.class.getName());\n-    \n+\tprivate static final Logger LOGGER = Logger.getLogger(PriorityConfigurationPlaceholderTaskHelper.class.getName());\n+\t\n \tboolean isPlaceholderTask(Queue.Task task) {\n \t\treturn isPlaceholderTaskUsed() && task instanceof ExecutorStepExecution.PlaceholderTask;\n \t}"
  },
  {
    "sha": "f8df339dca496f2b3a3d6b85bf20b00b3863bfb1",
    "filename": "src/main/java/jenkins/advancedqueue/PrioritySorterConfiguration.java",
    "status": "modified",
    "additions": 20,
    "deletions": 48,
    "changes": 68,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/PrioritySorterConfiguration.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/PrioritySorterConfiguration.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/PrioritySorterConfiguration.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -35,7 +35,19 @@\n import java.util.logging.Level;\n import java.util.logging.Logger;\n \n+import org.acegisecurity.context.SecurityContext;\n+import org.acegisecurity.context.SecurityContextHolder;\n+import org.kohsuke.stapler.DataBoundSetter;\n+import org.kohsuke.stapler.QueryParameter;\n+\n+import hudson.Extension;\n+import hudson.model.Job;\n+import hudson.security.ACL;\n+import hudson.util.FormValidation;\n+import hudson.util.ListBoxModel;\n+\n import jenkins.advancedqueue.JobGroup.PriorityStrategyHolder;\n+import jenkins.advancedqueue.priority.PriorityStrategy;\n import jenkins.advancedqueue.priority.strategy.PriorityJobProperty;\n import jenkins.advancedqueue.sorter.SorterStrategy;\n import jenkins.advancedqueue.sorter.SorterStrategyDescriptor;\n@@ -44,12 +56,6 @@\n import jenkins.advancedqueue.util.PrioritySorterUtil;\n import jenkins.model.GlobalConfiguration;\n import jenkins.model.Jenkins;\n-import net.sf.json.JSONObject;\n-\n-import org.acegisecurity.context.SecurityContext;\n-import org.acegisecurity.context.SecurityContextHolder;\n-import org.kohsuke.stapler.QueryParameter;\n-import org.kohsuke.stapler.StaplerRequest;\n \n /**\n  * @author Magnus Sandberg\n@@ -62,45 +68,12 @@\n \tprivate final static SorterStrategy DEFAULT_STRATEGY = new AbsoluteStrategy(\n \t\t\tMultiBucketStrategy.DEFAULT_PRIORITIES_NUMBER, MultiBucketStrategy.DEFAULT_PRIORITY);\n \n-\t/**\n-\t * @deprecated used in 2.x - replaces with XXX\n-\t */\n-\t@Deprecated\n-\tprivate boolean allowPriorityOnJobs;\n-\n \tprivate boolean onlyAdminsMayEditPriorityConfiguration = false;\n \n-\tprivate SorterStrategy strategy;\n+\tprivate SorterStrategy strategy = DEFAULT_STRATEGY;\n \n \tpublic PrioritySorterConfiguration() {\n-\t}\n-\n-\tpublic static void init() {\n-\t\tPrioritySorterConfiguration prioritySorterConfiguration = PrioritySorterConfiguration.get();\n-\t\t// Make sure default is good for updating from legacy\n-\t\tprioritySorterConfiguration.strategy = DEFAULT_STRATEGY; // TODO: replace with class ref\n-\t\tprioritySorterConfiguration.allowPriorityOnJobs = false;\n-\t\tprioritySorterConfiguration.load();\n-\t}\n-\n-\t@Override\n-\tpublic boolean configure(StaplerRequest req, JSONObject json) throws FormException {\n-\n-\t\tint prevNumberOfPriorities = strategy.getNumberOfPriorities();\n-\t\tstrategy = req.bindJSON(SorterStrategy.class, json.getJSONObject(\"strategy\"));\n-\t\tint newNumberOfPriorities = strategy.getNumberOfPriorities();\n-\n-\t\tFormValidation numberOfPrioritiesCheck = doCheckNumberOfPriorities(String.valueOf(newNumberOfPriorities));\n-\t\tif (numberOfPrioritiesCheck.kind != FormValidation.Kind.OK) {\n-\t\t\tthrow new FormException(numberOfPrioritiesCheck.getMessage(), \"numberOfPriorities\");\n-\t\t}\n-\t\t//\n-\t\tonlyAdminsMayEditPriorityConfiguration = json.getBoolean(\"onlyAdminsMayEditPriorityConfiguration\");\n-\t\t//\n-\t\tupdatePriorities(prevNumberOfPriorities);\n-\t\t//\n-\t\tsave();\n-\t\treturn true;\n+\t\tload();\n \t}\n \n \tpublic boolean getOnlyAdminsMayEditPriorityConfiguration() {\n@@ -158,12 +131,12 @@ private void updatePriorities(int prevNumberOfPriorities) {\n \t\t\t\t\tif (priorityProperty != null && priorityProperty.getUseJobPriority()) {\n \t\t\t\t\t\tint newPriority = PriorityCalculationsUtil.scale(prevNumberOfPriorities,\n \t\t\t\t\t\t\t\tstrategy.getNumberOfPriorities(), priorityProperty.priority);\n-                        if (newPriority != priorityProperty.getPriority()) {\n-                            job.removeProperty(priorityProperty);\n-                            job.addProperty(new PriorityJobProperty(priorityProperty.getUseJobPriority(),\n-                                    newPriority));\n-                            job.save();\n-                        }\n+\t\t\t\t\t\tif (newPriority != priorityProperty.getPriority()) {\n+\t\t\t\t\t\t\tjob.removeProperty(priorityProperty);\n+\t\t\t\t\t\t\tjob.addProperty(new PriorityJobProperty(priorityProperty.getUseJobPriority(),\n+\t\t\t\t\t\t\t\t\tnewPriority));\n+\t\t\t\t\t\t\tjob.save();\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t} catch (IOException e) {\n \t\t\t\t\tLOGGER.log(Level.WARNING, \"Failed to update Advanced Job Priority To {0}\", job.getName());\n@@ -187,5 +160,4 @@ private void updatePriorities(int prevNumberOfPriorities) {\n \tstatic public PrioritySorterConfiguration get() {\n \t\treturn (PrioritySorterConfiguration) Jenkins.get().getDescriptor(PrioritySorterConfiguration.class);\n \t}\n-\n }"
  },
  {
    "sha": "6497443bba5aa4f8edc2e6770b8d6deeb1f64871",
    "filename": "src/main/java/jenkins/advancedqueue/PrioritySorterJobColumn.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/PrioritySorterJobColumn.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/PrioritySorterJobColumn.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/PrioritySorterJobColumn.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -22,6 +22,9 @@\n package jenkins.advancedqueue;\n \n import hudson.Extension;\n+import hudson.init.InitMilestone;\n+import hudson.init.Initializer;\n+import hudson.model.Items;\n import hudson.model.Job;\n import hudson.views.ListViewColumn;\n import hudson.views.ListViewColumnDescriptor;\n@@ -35,7 +38,7 @@\n  * for the job and is an easy way to compare the priorities of many jobs.\n  */\n public class PrioritySorterJobColumn extends ListViewColumn {\n-\t\n+\n \t@DataBoundConstructor\n \tpublic PrioritySorterJobColumn() {\n \t}\n@@ -60,5 +63,11 @@ public String getDisplayName() {\n \t\tpublic boolean shownByDefault() {\n \t\t\treturn false;\n \t\t}\n+\n+\t\t@Initializer(before = InitMilestone.PLUGINS_STARTED)\n+\t\tpublic static void addAliases() {\n+\t\t\t// moved in 3.0 everything in hudson.* is deprecated\n+\t\t\tItems.XSTREAM2.addCompatibilityAlias(\"hudson.queueSorter.PrioritySorterJobColumn\", PrioritySorterJobColumn.class);\n+\t\t}\n \t}\n }"
  },
  {
    "sha": "cd0d2c5276895a00f874abe69ada4808e94d2a8d",
    "filename": "src/main/java/jenkins/advancedqueue/PrioritySorterPlugin.java",
    "status": "removed",
    "additions": 0,
    "deletions": 72,
    "changes": 72,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/3123f8cf37cde3e52e9b14bf9c8ad79b23153614/src/main/java/jenkins/advancedqueue/PrioritySorterPlugin.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/3123f8cf37cde3e52e9b14bf9c8ad79b23153614/src/main/java/jenkins/advancedqueue/PrioritySorterPlugin.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/PrioritySorterPlugin.java?ref=3123f8cf37cde3e52e9b14bf9c8ad79b23153614",
    "patch": "@@ -1,72 +0,0 @@\n-/*\n- * The MIT License\n- *\n- * Copyright 2013 Magnus Sandberg, Oleg Nenashev\n- *\n- * Permission is hereby granted, free of charge, to any person obtaining a copy\n- * of this software and associated documentation files (the \"Software\"), to deal\n- * in the Software without restriction, including without limitation the rights\n- * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n- * copies of the Software, and to permit persons to whom the Software is\n- * furnished to do so, subject to the following conditions:\n- *\n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- *\n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n- * THE SOFTWARE.\n- */\n-package jenkins.advancedqueue;\n-\n-import static hudson.init.InitMilestone.JOB_LOADED;\n-import static hudson.init.InitMilestone.PLUGINS_STARTED;\n-import static hudson.init.InitMilestone.EXTENSIONS_AUGMENTED;\n-import hudson.Plugin;\n-import hudson.init.Initializer;\n-import hudson.model.Items;\n-\n-import java.util.logging.Logger;\n-\n-import jenkins.advancedqueue.priority.strategy.PriorityJobProperty;\n-import jenkins.advancedqueue.sorter.AdvancedQueueSorter;\n-\n-/**\n- * Plugin is the staring point of the Priority Sorter Plugin.\n- * \n- * Used to make sure that the data is initialized at startup.\n- * \n- * @author Magnus Sandberg\n- * @since 2.3\n- */\n-public class PrioritySorterPlugin extends Plugin {\n-\n-\tprivate final static Logger LOGGER = Logger.getLogger(PrioritySorterPlugin.class.getName());\n-\n-\t@Initializer(before=PLUGINS_STARTED) \n-\tpublic static void addAliases() { \n-\t\t// Moved in 3.0 when JobPropertyStrategy was added\n-\t\tItems.XSTREAM2.addCompatibilityAlias(\"jenkins.advancedqueue.AdvancedQueueSorterJobProperty\", PriorityJobProperty.class);\n-\t\t// moved in 3.0 everything in hudson.* is deprecated\n-\t\tItems.XSTREAM2.addCompatibilityAlias(\"hudson.queueSorter.PrioritySorterJobColumn\", PrioritySorterJobColumn.class);\t\t\n-\t}\n-\t\n-\t@Initializer(after = EXTENSIONS_AUGMENTED)\n-\tpublic static void init1() {\n-\t\t// Check for any Legacy Configuration and init the Configuration\n-\t\tLOGGER.info(\"Configuring the Priority Sorter ...\");\n-\t\tPrioritySorterConfiguration.init();\n-\t}\n-\n-\t@Initializer(after = JOB_LOADED)\n-\tpublic static void init2() {\n-\t\t// Init the Queue and sort the loaded Queue items\n-\t\tLOGGER.info(\"Sorting existing Queue ...\");\n-\t\tAdvancedQueueSorter.init();\n-\t}\n-\n-}"
  },
  {
    "sha": "7c8fc791d05e4f8724f873343e3f1ca1c9ab6c5b",
    "filename": "src/main/java/jenkins/advancedqueue/RunExclusiveThrottler.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/RunExclusiveThrottler.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/RunExclusiveThrottler.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/RunExclusiveThrottler.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -22,15 +22,15 @@\n \tstatic private String exclusiveJobName = \"\";\n \n \tstatic PriorityConfigurationCallback dummyCallback = new PriorityConfigurationCallback() {\n-\t\t\n+\n \t\tpublic PriorityConfigurationCallback setPrioritySelection(int priority, int jobGroupId, PriorityStrategy reason) {\n \t\t\treturn this;\n \t\t}\n-\t\t\n+\n \t\tpublic PriorityConfigurationCallback setPrioritySelection(int priority) {\n \t\t\treturn this;\n \t\t}\n-\t\t\n+\n \t\tpublic PriorityConfigurationCallback addDecisionLog(int indent, String log) {\n \t\t\treturn this;\n \t\t}\n@@ -40,12 +40,12 @@ public PriorityConfigurationCallback setPrioritySelection(int priority, long sor\n \t\t\treturn this;\n \t\t}\n \t};\n-\t\n+\n \t@Extension\n-\tstatic public class RunExclusiveRunListener extends RunListener<Run> {\n+\tstatic public class RunExclusiveRunListener extends RunListener<Run<?,?>> {\n \n \t\t@Override\n-\t\tpublic void onStarted(Run r, TaskListener listener) {\n+\t\tpublic void onStarted(Run<?,?> r, TaskListener listener) {\n \t\t\tJobGroup jobGroup = PriorityConfiguration.get().getJobGroup(dummyCallback, r.getParent());\n \t\t\tif (jobGroup != null && jobGroup.isRunExclusive()) {\n \t\t\t\texclusiveJobGroupId = jobGroup.getId();\n@@ -55,7 +55,7 @@ public void onStarted(Run r, TaskListener listener) {\n \t\t}\n \n \t\t@Override\n-\t\tpublic void onCompleted(Run r, TaskListener listener) {\n+\t\tpublic void onCompleted(Run<?,?> r, TaskListener listener) {\n \t\t\texclusiveJobs.remove(r.getParent().getName());\n \t\t}\n "
  },
  {
    "sha": "a9cb2b1063c16b8006510413dbb2c3d80a7058a4",
    "filename": "src/main/java/jenkins/advancedqueue/jobinclusion/strategy/AllJobsJobInclusionStrategy.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/AllJobsJobInclusionStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/AllJobsJobInclusionStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/AllJobsJobInclusionStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -35,6 +35,7 @@\n  * @author Magnus Sandberg\n  * @since 3.0\n  */\n+@Extension\n public class AllJobsJobInclusionStrategy extends JobInclusionStrategy {\n \n \t@Extension"
  },
  {
    "sha": "4fb2a897054a3375542b029c75e4f1286ae8d2ae",
    "filename": "src/main/java/jenkins/advancedqueue/jobinclusion/strategy/FolderBasedJobInclusionStrategy.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/FolderBasedJobInclusionStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/FolderBasedJobInclusionStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/FolderBasedJobInclusionStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -42,6 +42,7 @@\n  * @author Magnus Sandberg\n  * @since 3.0\n  */\n+@Extension\n public class FolderBasedJobInclusionStrategy extends JobInclusionStrategy {\n \n \t@Extension(optional = true)\n@@ -65,6 +66,9 @@ public ListBoxModel getListFolderItems() {\n \n \tprivate String folderName;\n \n+\tpublic FolderBasedJobInclusionStrategy() {\n+\t}\n+\n \t@DataBoundConstructor\n \tpublic FolderBasedJobInclusionStrategy(String folderName) {\n \t\tthis.folderName = folderName;"
  },
  {
    "sha": "93edaa221b192825348b08aa459f9aa15014a342",
    "filename": "src/main/java/jenkins/advancedqueue/jobinclusion/strategy/FolderPropertyLoader.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/FolderPropertyLoader.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/FolderPropertyLoader.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/FolderPropertyLoader.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -23,31 +23,31 @@\n  */\n package jenkins.advancedqueue.jobinclusion.strategy;\n \n+import javax.annotation.CheckForNull;\n+\n import com.cloudbees.hudson.plugins.folder.AbstractFolder;\n import com.cloudbees.hudson.plugins.folder.AbstractFolderProperty;\n import com.cloudbees.hudson.plugins.folder.AbstractFolderPropertyDescriptor;\n+\n import hudson.model.ItemGroup;\n import hudson.model.Job;\n import hudson.model.TopLevelItem;\n import hudson.util.DescribableList;\n import jenkins.advancedqueue.DecisionLogger;\n \n-import com.cloudbees.hudson.plugins.folder.Folder;\n-import javax.annotation.CheckForNull;\n-\n /**\n  * @author Magnus Sandberg\n  * @since 3.0\n  */\n public class FolderPropertyLoader {\n \n-\t@CheckForNull    \n+\t@CheckForNull\n \tstatic public String getJobGroupName(DecisionLogger decisionLogger, Job<?, ?> job) {\n \t\tItemGroup<?> parent = job.getParent();\n \t\tdecisionLogger.addDecisionLog(2, \"Checking for Cloudbees Folder inclusion ...\");\n \t\twhile(parent != null) {\n \t\t\tif(parent instanceof AbstractFolder) {\n-\t\t\t\tAbstractFolder folder = (AbstractFolder) parent;\n+\t\t\t\tAbstractFolder<?> folder = (AbstractFolder<?>) parent;\n \t\t\t\tdecisionLogger.addDecisionLog(3, \"Evaluating Folder [\" + folder.getFullName() + \"] ...\");\n \t\t\t\tDescribableList<AbstractFolderProperty<?>,AbstractFolderPropertyDescriptor> properties = folder.getProperties();\n \t\t\t\tfor(AbstractFolderProperty<?> property : properties) {\n@@ -62,7 +62,7 @@ static public String getJobGroupName(DecisionLogger decisionLogger, Job<?, ?> jo\n \t\t\t\t}\n \t\t\t}\n \t\t\tif(parent instanceof TopLevelItem) {\n-\t\t\t\tparent = ((TopLevelItem) parent).getParent();\t\t\t\t\n+\t\t\t\tparent = ((TopLevelItem) parent).getParent();\n \t\t\t} else {\n \t\t\t\tparent = null;\n \t\t\t}"
  },
  {
    "sha": "4d4395f1911dde380bf8f75918aecc2ab1dc1611",
    "filename": "src/main/java/jenkins/advancedqueue/jobinclusion/strategy/JobInclusionFolderProperty.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/JobInclusionFolderProperty.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/JobInclusionFolderProperty.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/JobInclusionFolderProperty.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -51,20 +51,19 @@ public JobInclusionFolderProperty(Boolean useJobGroup, String jobGroupName) {\n \tpublic String getJobGroupName() {\n \t\treturn jobGroupName;\n \t}\n-\t\n+\n \tpublic boolean isUseJobGroup() {\n \t\treturn useJobGroup;\n \t}\n \n-\n \t@Override\n \tpublic DescriptorImpl getDescriptor() {\n \t\treturn (DescriptorImpl) super.getDescriptor();\n \t}\n \n \t@Extension(optional = true)\n \tpublic static final class DescriptorImpl extends FolderPropertyDescriptor {\n-\t\t\n+\n \t\t@Override\n \t\tpublic String getDisplayName() {\n \t\t\treturn \"XXX\";"
  },
  {
    "sha": "7b952780e1a156aedb85b9b96c07411f90264af7",
    "filename": "src/main/java/jenkins/advancedqueue/jobinclusion/strategy/JobInclusionJobProperty.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/JobInclusionJobProperty.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/JobInclusionJobProperty.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/JobInclusionJobProperty.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -50,7 +50,7 @@ public JobInclusionJobProperty(Boolean useJobGroup, String jobGroupName) {\n \tpublic String getJobGroupName() {\n \t\treturn jobGroupName;\n \t}\n-\t\n+\n \tpublic boolean isUseJobGroup() {\n \t\treturn useJobGroup;\n \t}\n@@ -63,7 +63,7 @@ public DescriptorImpl getDescriptor() {\n \n \t@Extension\n \tpublic static final class DescriptorImpl extends JobPropertyDescriptor {\n-\t\t\n+\n \t\t@Override\n \t\tpublic String getDisplayName() {\n \t\t\treturn \"XXX\";"
  },
  {
    "sha": "1c801c3b5700a7b8a58121da228baa4502ab79c1",
    "filename": "src/main/java/jenkins/advancedqueue/jobinclusion/strategy/PropertyBasedJobInclusionStrategy.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/PropertyBasedJobInclusionStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/PropertyBasedJobInclusionStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/PropertyBasedJobInclusionStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -43,6 +43,7 @@\n  * @author Magnus Sandberg\n  * @since 3.0\n  */\n+@Extension\n public class PropertyBasedJobInclusionStrategy extends JobInclusionStrategy {\n \n \t@Extension\n@@ -70,6 +71,8 @@ public PropertyBasedJobInclusionStrategyDescriptor() {\n \n \tprivate String name;\n \n+\tpublic PropertyBasedJobInclusionStrategy() {}\n+\n \t@DataBoundConstructor\n \tpublic PropertyBasedJobInclusionStrategy(String name) {\n \t\tthis.name = name;"
  },
  {
    "sha": "da848a88ac4569095a9c826940687e113f2981f1",
    "filename": "src/main/java/jenkins/advancedqueue/jobinclusion/strategy/ViewBasedJobInclusionStrategy.java",
    "status": "modified",
    "additions": 19,
    "deletions": 18,
    "changes": 37,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/ViewBasedJobInclusionStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/ViewBasedJobInclusionStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/jobinclusion/strategy/ViewBasedJobInclusionStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -48,10 +48,11 @@\n  * @author Magnus Sandberg\n  * @since 3.0\n  */\n+@Extension\n public class ViewBasedJobInclusionStrategy extends JobInclusionStrategy {\n \n \tprivate final static Logger LOGGER = Logger.getLogger(ViewBasedJobInclusionStrategy.class.getName());\n-\t\n+\n \t@Extension\n \tstatic public class ViewBasedJobInclusionStrategyDescriptor extends\n \t\t\tAbstractJobInclusionStrategyDescriptor<ViewBasedJobInclusionStrategy> {\n@@ -66,29 +67,27 @@ public ListBoxModel getListViewItems() {\n \t\t\taddViews(\"\", items, views);\n \t\t\treturn items;\n \t\t}\n-\t\t\n-\t\t\n+\n \t\tprivate void addViews(String parent, ListBoxModel items, Collection<View> views) {\n \t\t\tfor (View view : views) {\n \t\t\t\titems.add(parent + view.getDisplayName(), parent + view.getViewName());\n \t\t\t\tif(view instanceof ViewGroup) {\n \t\t\t\t\taddViews(parent + view.getDisplayName() + \"/\", items, ((ViewGroup) view).getViews());\n \t\t\t\t}\n-\t\t\t}\t\t\t\n+\t\t\t}\n \t\t}\n-\t\t\n+\n \t\tpublic FormValidation doCheckJobPattern(@QueryParameter String jobPattern) {\n \t\t\tif(jobPattern.isEmpty()) {\n \t\t\t\treturn FormValidation.ok(\"Empty pattern matches all Jobs.\");\n \t\t\t}\n-            try {\n-                Pattern.compile(jobPattern);\n-            } catch (PatternSyntaxException exception) {\n-                return FormValidation.error(exception.getDescription());\n-            }\n-            return FormValidation.ok(\"Pattern is valid.\");\n-        }\n-\t\t\n+\t\t\ttry {\n+\t\t\t\tPattern.compile(jobPattern);\n+\t\t\t} catch (PatternSyntaxException exception) {\n+\t\t\t\treturn FormValidation.error(exception.getDescription());\n+\t\t\t}\n+\t\t\treturn FormValidation.ok(\"Pattern is valid.\");\n+\t\t}\n \t};\n \n \tstatic public class JobPattern {\n@@ -102,11 +101,13 @@ public JobPattern(String jobPattern) {\n \t}\n \n \tprivate String viewName;\n-\t\n+\n \tprivate boolean useJobFilter = false;\n \n \tprivate String jobPattern = \".*\";\n \n+\tpublic ViewBasedJobInclusionStrategy() {}\n+\n \t@DataBoundConstructor\n \tpublic ViewBasedJobInclusionStrategy(String viewName, JobPattern jobFilter) {\n \t\tthis.viewName = viewName;\n@@ -145,7 +146,7 @@ private View getView() {\n \t\t}\n \t\treturn view;\n \t}\n-\t\n+\n \t@Override\n \tpublic boolean contains(DecisionLogger decisionLogger, Job<?, ?> job) {\n \t\tif (isJobInView(job, getView())) {\n@@ -174,7 +175,7 @@ public boolean contains(DecisionLogger decisionLogger, Job<?, ?> job) {\n \t\t}\n \t\treturn false;\n \t}\n-\t\n+\n \tprivate boolean isJobInView(Job<?, ?> job, View view) {\n \t\t// First do a simple test using contains\n \t\tif(view.contains((TopLevelItem) job)) {\n@@ -187,10 +188,10 @@ private boolean isJobInView(Job<?, ?> job, View view) {\n \t\t// Then try to iterate over the ViewGroup (Nested View)\n \t\tif(view instanceof ViewGroup) {\n \t\t\treturn isJobInViewGroup(job, (ViewGroup) view);\n-\t\t} \n+\t\t}\n \t\treturn false;\n \t}\n-\t\n+\n \tprivate boolean isJobInViewGroup(Job<?, ?> job, ViewGroup viewGroup) {\n \t\tCollection<View> views = viewGroup.getViews();\n \t\tfor (View view : views) {"
  },
  {
    "sha": "103aecf7191bb4bf1ba06d8902eb67c5c36084f1",
    "filename": "src/main/java/jenkins/advancedqueue/jobrestrictions/PrioritySorterRestriction.java",
    "status": "modified",
    "additions": 50,
    "deletions": 46,
    "changes": 96,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobrestrictions/PrioritySorterRestriction.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/jobrestrictions/PrioritySorterRestriction.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/jobrestrictions/PrioritySorterRestriction.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -25,21 +25,22 @@\n \n import java.util.logging.Logger;\n \n+import com.synopsys.arc.jenkinsci.plugins.jobrestrictions.restrictions.JobRestriction;\n+import com.synopsys.arc.jenkinsci.plugins.jobrestrictions.restrictions.JobRestrictionDescriptor;\n+\n+import org.kohsuke.stapler.DataBoundConstructor;\n+import org.kohsuke.stapler.QueryParameter;\n+\n import hudson.Extension;\n-import hudson.model.Queue.BuildableItem;\n import hudson.model.Run;\n+import hudson.model.Queue.BuildableItem;\n import hudson.util.ListBoxModel;\n-import jenkins.advancedqueue.Messages;\n import jenkins.advancedqueue.PrioritySorterConfiguration;\n import jenkins.advancedqueue.sorter.ItemInfo;\n import jenkins.advancedqueue.sorter.QueueItemCache;\n import jenkins.advancedqueue.util.PrioritySorterUtil;\n \n-import org.kohsuke.stapler.DataBoundConstructor;\n-import org.kohsuke.stapler.QueryParameter;\n-\n-import com.synopsys.arc.jenkinsci.plugins.jobrestrictions.restrictions.JobRestriction;\n-import com.synopsys.arc.jenkinsci.plugins.jobrestrictions.restrictions.JobRestrictionDescriptor;\n+import jenkins.advancedqueue.Messages;\n \n /**\n  * Extends the {@link JobRestriction} from  <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Job+Restrictions+Plugin\">Job Restrictions Plugin</a>\n@@ -48,17 +49,54 @@\n  * @author Magnus Sandberg\n  * @since 3.3\n  */\n+@Extension\n public class PrioritySorterRestriction extends JobRestriction {\n-\t\n+\n+\tprivate static final long serialVersionUID = -9006082445139117284L;\n+\n \tprivate final static Logger LOGGER = Logger.getLogger(PrioritySorterRestriction.class.getName());\n \n+\tprivate int fromPriority, toPriority;\n+\n+\tpublic PrioritySorterRestriction() {\n+\t}\n+\n+\t@DataBoundConstructor\n+\tpublic PrioritySorterRestriction(int fromPriority, int toPriority) {\n+\t\tthis.fromPriority = fromPriority;\n+\t\tthis.toPriority = toPriority;\n+\t}\n+\n+\t@Override\n+\tpublic boolean canTake(BuildableItem buildableItem) {\n+\t\tItemInfo item = QueueItemCache.get().getItem(buildableItem.getId());\n+\t\tif (item == null) {\n+\t\t\tLOGGER.warning(\"Missing ItemInfo for [\" + buildableItem.task.getDisplayName() + \"] allowing execution.\");\n+\t\t\treturn true;\n+\t\t}\n+\t\tint priority = item.getPriority();\n+\t\treturn priority >= fromPriority && priority <= toPriority;\n+\t}\n+\n+\t@Override\n+\t@SuppressWarnings(\"rawtypes\")\n+\tpublic boolean canTake(Run run) {\n+\t\treturn true;\n+\t}\n+\n+\tpublic int getFromPriority() {\n+\t\treturn fromPriority;\n+\t}\n+\n+\tpublic int getToPriority() {\n+\t\treturn toPriority;\n+\t}\n+\n \t@Extension(optional = true)\n \tpublic static class DescriptorImpl extends JobRestrictionDescriptor {\n \n \t\t@Override\n-\t\tpublic String getDisplayName() {\n-\t\t\treturn Messages.Priority_from_prioritySorter();\n-\t\t}\n+\t\tpublic String getDisplayName() { return Messages.Priority_from_prioritySorter(); }\n \n \t\tpublic ListBoxModel doFillFromPriorityItems() {\n \t\t\treturn PrioritySorterUtil.fillPriorityItems(PrioritySorterConfiguration.get().getStrategy()\n@@ -82,38 +120,4 @@ public ListBoxModel doUpdateFromPriorityItems(@QueryParameter(\"value\") String st\n \t\t}\n \n \t}\n-\n-\tprivate int fromPriority;\n-\t\n-\tprivate int toPriority;\n-\n-\tpublic int getFromPriority() {\n-\t\treturn fromPriority;\n-\t}\n-\n-\tpublic int getToPriority() {\n-\t\treturn toPriority;\n-\t}\n-\n-\t@DataBoundConstructor\n-\tpublic PrioritySorterRestriction(int fromPriority, int toPriority) {\n-\t\tthis.fromPriority = fromPriority;\n-\t\tthis.toPriority = toPriority;\n-\t}\n-\n-\t@Override\n-\tpublic boolean canTake(BuildableItem buildableItem) {\n-\t\tItemInfo item = QueueItemCache.get().getItem(buildableItem.getId());\n-\t\tif(item == null) {\n-\t\t\tLOGGER.warning(\"Missing ItemInfo for [\" + buildableItem.task.getDisplayName() + \"] allowing execution.\");\n-\t\t\treturn true;\n-\t\t}\n-\t\tint priority = item.getPriority();\n-\t\treturn priority >= fromPriority && priority <= toPriority;\n-\t}\n-\n-\t@Override\n-\tpublic boolean canTake(Run run) {\n-\t\treturn true;\n-\t}\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "170063d2ea95352f145818a14767c74cbf3f7da7",
    "filename": "src/main/java/jenkins/advancedqueue/priority/PriorityStrategy.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/PriorityStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/PriorityStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/priority/PriorityStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -48,12 +48,12 @@\n \t */\n \tabstract public boolean isApplicable(Queue.Item item);\n \n-\t/** \n+\t/**\n \t * Method that that return the priority that should be used for this {@link Item}, this method is only called id\n \t * {@link PriorityStrategy#isApplicable(Queue.Item)} returned true\n \t * \n \t * The caller garanties that the {@link Item#task} is a {@link Job}\n-\t * \n+\t *\n \t * @param item the {@link Item} to check\n \t * @return the priority to be used by the provided {@link Item}\n \t */\n@@ -64,5 +64,4 @@\n \tpublic static DescriptorExtensionList<PriorityStrategy, Descriptor<PriorityStrategy>> all() {\n \t\treturn Jenkins.get().getDescriptorList(PriorityStrategy.class);\n \t}\n-\n }"
  },
  {
    "sha": "ca0882dd385026bdef95668718fc46b7b53c4d87",
    "filename": "src/main/java/jenkins/advancedqueue/priority/strategy/BuildParameterStrategy.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/BuildParameterStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/BuildParameterStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/priority/strategy/BuildParameterStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -41,6 +41,7 @@\n  * @author Magnus Sandberg\n  * @since 2.0\n  */\n+@Extension\n public class BuildParameterStrategy extends AbstractDynamicPriorityStrategy {\n \n \t@Extension\n@@ -51,7 +52,9 @@ public BuildParameterStrategyDescriptor() {\n \t\t}\n \t};\n \n-\tprivate final String parameterName;\n+\tprivate String parameterName;\n+\n+\tpublic BuildParameterStrategy() {}\n \n \t@DataBoundConstructor\n \tpublic BuildParameterStrategy(String parameterName) {"
  },
  {
    "sha": "3867ff3da010c01b269052ad71d3bcae728e8a5b",
    "filename": "src/main/java/jenkins/advancedqueue/priority/strategy/CLICauseStrategy.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/CLICauseStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/CLICauseStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/priority/strategy/CLICauseStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -37,6 +37,7 @@\n  * @author Magnus Sandberg\n  * @since 2.0\n  */\n+@Extension\n public class CLICauseStrategy extends AbstractStaticPriorityStrategy {\n \n \t@Extension\n@@ -48,6 +49,8 @@ public UserIdCauseStrategyDescriptor() {\n \n \t}\n \n+\tpublic CLICauseStrategy() {}\n+\n \t@DataBoundConstructor\n \tpublic CLICauseStrategy(int priority) {\n \t\tsetPriority(priority);"
  },
  {
    "sha": "4994cc139c6d59f4d1b620b019db783e64c6ac66",
    "filename": "src/main/java/jenkins/advancedqueue/priority/strategy/HealthStrategy.java",
    "status": "modified",
    "additions": 30,
    "deletions": 27,
    "changes": 57,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/HealthStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/HealthStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/priority/strategy/HealthStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -34,6 +34,7 @@\n  * @author Magnus Sandberg\n  * @since 2.5\n  */\n+@Extension\n public class HealthStrategy extends AbstractStaticPriorityStrategy {\n \n \t@Extension\n@@ -49,7 +50,9 @@ public HealthStrategyDescriptor() {\n \n \tprivate String health;\n \n-\t@DataBoundConstructor                      \n+\tpublic HealthStrategy() {}\n+\n+\t@DataBoundConstructor\n \tpublic HealthStrategy(int priority, String selection, String health) {\n \t\tsetPriority(priority);\n \t\tthis.selection = selection;\n@@ -73,32 +76,32 @@ public boolean isApplicable(Queue.Item item) {\n \t\tint score = job.getBuildHealth().getScore();\n \t\tint scoreOver = 0;\n \t\tint scoreUnder = 100;\n-\t    if(\"HEALTH_OVER_80\".equals(health)) {\n-\t    \tscoreOver = 80;\n-\t    \tscoreUnder = 100;\n-\t    } else if(\"HEALTH_61_TO_80\".equals(health)) {\n-\t    \tscoreOver = 61;\n-\t    \tscoreUnder = 80;\n-\t    } else if(\"HEALTH_41_TO_60\".equals(health)) {\n-\t    \tscoreOver = 41;\n-\t    \tscoreUnder = 60;\n-\t    } else if(\"HEALTH_21_TO_40\".equals(health)) {\n-\t    \tscoreOver = 21;\n-\t    \tscoreUnder = 40;\t    \t\n-\t    } else if(\"HEALTH_0_TO_20\".equals(health)) {\n-\t    \tscoreOver = 0;\n-\t    \tscoreUnder = 20;\t    \t\n-\t    }\n-\t    if(\"SAME\".equals(selection)) {\n-\t    \treturn score >= scoreOver && score <= scoreUnder;\n-\t    }\n-\t    if(\"BETTER\".equals(selection)) {\n-\t    \treturn score >= scoreOver;\n-\t    }\n-\t    if(\"WORSE\".equals(selection)) {\n-\t    \treturn score <= scoreUnder;\n-\t    }\n-\t    return false;\n+\t\tif(\"HEALTH_OVER_80\".equals(health)) {\n+\t\t\tscoreOver = 80;\n+\t\t\tscoreUnder = 100;\n+\t\t} else if(\"HEALTH_61_TO_80\".equals(health)) {\n+\t\t\tscoreOver = 61;\n+\t\t\tscoreUnder = 80;\n+\t\t} else if(\"HEALTH_41_TO_60\".equals(health)) {\n+\t\t\tscoreOver = 41;\n+\t\t\tscoreUnder = 60;\n+\t\t} else if(\"HEALTH_21_TO_40\".equals(health)) {\n+\t\t\tscoreOver = 21;\n+\t\t\tscoreUnder = 40;\n+\t\t} else if(\"HEALTH_0_TO_20\".equals(health)) {\n+\t\t\tscoreOver = 0;\n+\t\t\tscoreUnder = 20;\n+\t\t}\n+\t\tif(\"SAME\".equals(selection)) {\n+\t\t\treturn score >= scoreOver && score <= scoreUnder;\n+\t\t}\n+\t\tif(\"BETTER\".equals(selection)) {\n+\t\t\treturn score >= scoreOver;\n+\t\t}\n+\t\tif(\"WORSE\".equals(selection)) {\n+\t\t\treturn score <= scoreUnder;\n+\t\t}\n+\t\treturn false;\n \t}\n \n }"
  },
  {
    "sha": "91fc83450f853ad4daa58c9a86654366d50a7e2e",
    "filename": "src/main/java/jenkins/advancedqueue/priority/strategy/JobPropertyStrategy.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/JobPropertyStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/JobPropertyStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/priority/strategy/JobPropertyStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -38,6 +38,7 @@\n  * @author Magnus Sandberg\n  * @since 3.0\n  */\n+@Extension\n public class JobPropertyStrategy extends AbstractDynamicPriorityStrategy {\n \n \t@Extension\n@@ -52,7 +53,7 @@ public UserIdCauseStrategyDescriptor() {\n \t@DataBoundConstructor\n \tpublic JobPropertyStrategy() {\n \t}\n-\t\n+\n \t@CheckForNull\n \tprivate Integer getPriorityInternal(Queue.Item item) {\n \t\tif(item.task instanceof Job<?, ?>) {\n@@ -61,7 +62,7 @@ private Integer getPriorityInternal(Queue.Item item) {\n \t\t\tif (priorityProperty != null && priorityProperty.getUseJobPriority()) {\n \t\t\t\treturn priorityProperty.priority;\n \t\t\t}\n-\t\t} \n+\t\t}\n \t\treturn null;\n \t}\n "
  },
  {
    "sha": "23223a4818f71a7a24abfdd7a74ae8780c0abbfa",
    "filename": "src/main/java/jenkins/advancedqueue/priority/strategy/PriorityJobProperty.java",
    "status": "modified",
    "additions": 20,
    "deletions": 16,
    "changes": 36,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/PriorityJobProperty.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/PriorityJobProperty.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/priority/strategy/PriorityJobProperty.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -23,17 +23,20 @@\n  */\n package jenkins.advancedqueue.priority.strategy;\n \n+import java.util.List;\n+\n+import org.kohsuke.stapler.DataBoundConstructor;\n+import org.kohsuke.stapler.StaplerRequest;\n+\n import hudson.Extension;\n-import hudson.model.AbstractProject;\n-import hudson.model.Descriptor.FormException;\n+import hudson.init.InitMilestone;\n+import hudson.init.Initializer;\n+import hudson.model.Items;\n import hudson.model.Job;\n import hudson.model.JobProperty;\n import hudson.model.JobPropertyDescriptor;\n+import hudson.model.Descriptor.FormException;\n import hudson.util.ListBoxModel;\n-\n-import java.util.List;\n-import java.util.logging.Logger;\n-\n import jenkins.advancedqueue.JobGroup;\n import jenkins.advancedqueue.JobGroup.PriorityStrategyHolder;\n import jenkins.advancedqueue.Messages;\n@@ -43,17 +46,12 @@\n import jenkins.advancedqueue.priority.PriorityStrategy;\n import net.sf.json.JSONObject;\n \n-import org.kohsuke.stapler.DataBoundConstructor;\n-import org.kohsuke.stapler.StaplerRequest;\n-\n /**\n  * @author Magnus Sandberg\n  * @since 2.0\n  */\n public class PriorityJobProperty extends JobProperty<Job<?, ?>> {\n \n-\tprivate final static Logger LOGGER = Logger.getLogger(PriorityJobProperty.class.getName());\n-\n \tpublic final boolean useJobPriority;\n \tpublic final int priority;\n \n@@ -83,17 +81,17 @@ public DescriptorImpl getDescriptor() {\n \n \t@Extension\n \tpublic static final class DescriptorImpl extends JobPropertyDescriptor {\n-\t\t\n+\n \t\tprivate PriorityConfigurationCallback dummyCallback = new PriorityConfigurationCallback() {\n-\t\t\t\n+\n \t\t\tpublic PriorityConfigurationCallback setPrioritySelection(int priority, int jobGroupId, PriorityStrategy reason) {\n \t\t\t\treturn this;\n \t\t\t}\n-\t\t\t\n+\n \t\t\tpublic PriorityConfigurationCallback setPrioritySelection(int priority) {\n \t\t\t\treturn this;\n \t\t\t}\n-\t\t\t\n+\n \t\t\tpublic PriorityConfigurationCallback addDecisionLog(int indent, String log) {\n \t\t\t\treturn this;\n \t\t\t}\n@@ -103,7 +101,7 @@ public PriorityConfigurationCallback setPrioritySelection(int priority, long sor\n \t\t\t\treturn this;\n \t\t\t}\n \t\t};\n-\t\t\n+\n \t\t@Override\n \t\tpublic String getDisplayName() {\n \t\t\treturn Messages.AdvancedQueueSorterJobProperty_displayName();\n@@ -131,5 +129,11 @@ public boolean isUsed(Job<?,?> owner) {\n \t\t\t}\n \t\t\treturn false;\n \t\t}\n+\n+\t\t@Initializer(before = InitMilestone.PLUGINS_STARTED)\n+\t\tpublic static void addAliases() {\n+\t\t\t// Moved in 3.0 when JobPropertyStrategy was added\n+\t\t\tItems.XSTREAM2.addCompatibilityAlias(\"jenkins.advancedqueue.AdvancedQueueSorterJobProperty\", PriorityJobProperty.class);\n+\t\t}\n \t}\n }"
  },
  {
    "sha": "46b06209387633e82db4b3add636fc0ff9aed745",
    "filename": "src/main/java/jenkins/advancedqueue/priority/strategy/UpstreamCauseStrategy.java",
    "status": "modified",
    "additions": 13,
    "deletions": 13,
    "changes": 26,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/UpstreamCauseStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/UpstreamCauseStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/priority/strategy/UpstreamCauseStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -23,27 +23,27 @@\n  */\n package jenkins.advancedqueue.priority.strategy;\n \n-import hudson.Extension;\n-import hudson.model.Cause;\n-import hudson.model.Cause.UpstreamCause;\n-import hudson.model.Queue;\n-\n import java.util.List;\n+\n import javax.annotation.CheckForNull;\n import javax.annotation.Nonnull;\n \n+import org.kohsuke.stapler.DataBoundConstructor;\n+\n+import hudson.Extension;\n+import hudson.model.Cause;\n+import hudson.model.Queue;\n+import hudson.model.Cause.UpstreamCause;\n import jenkins.advancedqueue.Messages;\n import jenkins.advancedqueue.PrioritySorterConfiguration;\n import jenkins.advancedqueue.sorter.ItemInfo;\n-import jenkins.advancedqueue.sorter.QueueItemCache;\n import jenkins.advancedqueue.sorter.StartedJobItemCache;\n \n-import org.kohsuke.stapler.DataBoundConstructor;\n-\n /**\n  * @author Magnus Sandberg\n  * @since 2.3\n  */\n+@Extension\n public class UpstreamCauseStrategy extends AbstractDynamicPriorityStrategy {\n \n \t@Extension\n@@ -70,11 +70,11 @@ private UpstreamCause getUpstreamCause(@Nonnull Queue.Item item) {\n \n \tpublic int getPriority(Queue.Item item) {\n \t\tUpstreamCause upstreamCause = getUpstreamCause(item);\n-                if (upstreamCause == null) {\n-                    // Cannot determine\n-                    return PrioritySorterConfiguration.get().getStrategy().getDefaultPriority();\n-                }\n-                \n+\t\t\t\tif (upstreamCause == null) {\n+\t\t\t\t\t// Cannot determine\n+\t\t\t\t\treturn PrioritySorterConfiguration.get().getStrategy().getDefaultPriority();\n+\t\t\t\t}\n+\t\t\t\t\n \t\tString upstreamProject = upstreamCause.getUpstreamProject();\n \t\tint upstreamBuildId = upstreamCause.getUpstreamBuild();\n \t\tItemInfo upstreamItem = StartedJobItemCache.get().getStartedItem(upstreamProject, upstreamBuildId);"
  },
  {
    "sha": "dd0e1ebcfa21136fcb9571c56d391efcaf114355",
    "filename": "src/main/java/jenkins/advancedqueue/priority/strategy/UserIdCauseStrategy.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/UserIdCauseStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/priority/strategy/UserIdCauseStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/priority/strategy/UserIdCauseStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -37,6 +37,7 @@\n  * @author Magnus Sandberg\n  * @since 2.0\n  */\n+@Extension\n public class UserIdCauseStrategy extends AbstractStaticPriorityStrategy {\n \n \t@Extension\n@@ -48,6 +49,8 @@ public UserIdCauseStrategyDescriptor() {\n \n \t}\n \n+\tpublic UserIdCauseStrategy() {}\n+\n \t@DataBoundConstructor\n \tpublic UserIdCauseStrategy(int priority) {\n \t\tsetPriority(priority);"
  },
  {
    "sha": "f83fa684f0bab57093615b1a31e2a8d7323f90cf",
    "filename": "src/main/java/jenkins/advancedqueue/sorter/AdvancedQueueSorter.java",
    "status": "modified",
    "additions": 16,
    "deletions": 9,
    "changes": 25,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/sorter/AdvancedQueueSorter.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/sorter/AdvancedQueueSorter.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/sorter/AdvancedQueueSorter.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -23,23 +23,28 @@\n  */\n package jenkins.advancedqueue.sorter;\n \n-import hudson.Extension;\n-import hudson.model.Queue;\n-import hudson.model.Queue.BuildableItem;\n-import hudson.model.Queue.Item;\n-import hudson.model.Queue.LeftItem;\n-import hudson.model.queue.QueueSorter;\n+import static jenkins.advancedqueue.ItemTransitionLogger.logCanceledItem;\n+import static jenkins.advancedqueue.ItemTransitionLogger.logNewItem;\n+import static jenkins.advancedqueue.ItemTransitionLogger.logStartedItem;\n \n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n+\n import javax.annotation.Nonnull;\n \n+import hudson.Extension;\n+import hudson.init.InitMilestone;\n+import hudson.init.Initializer;\n+import hudson.model.Queue;\n+import hudson.model.Queue.BuildableItem;\n+import hudson.model.Queue.Item;\n+import hudson.model.Queue.LeftItem;\n+import hudson.model.queue.QueueSorter;\n import jenkins.advancedqueue.PriorityConfiguration;\n import jenkins.advancedqueue.PrioritySorterConfiguration;\n-import static jenkins.advancedqueue.ItemTransitionLogger.*;\n \n /**\n  * @author Magnus Sandberg\n@@ -51,9 +56,11 @@\n \tprivate final static Logger LOGGER = Logger.getLogger(\"PrioritySorter.Queue.Sorter\");\n \n \tpublic AdvancedQueueSorter() {\n+\t\t// init();\n \t}\n \n-\tstatic public void init() {\n+\t@Initializer(after = InitMilestone.JOB_LOADED)\n+\tpublic void init() {\n \t\tList<BuildableItem> items = Queue.getInstance().getBuildableItems();\n \t\t// Sort the queue in the order the items entered the queue\n \t\t// so that onNewItem() happens in the correct order below\n@@ -96,7 +103,7 @@ public int compare(BuildableItem o1, BuildableItem o2) {\n \t\tif (items.size() > 0 && LOGGER.isLoggable(Level.FINER)) {\n \t\t\tStringBuilder queueStr = new StringBuilder(\"Queue:\\n\"\n \t\t\t\t\t+ \"+----------------------------------------------------------------------+\\n\"\n-\t\t\t\t\t+ \"|   Item Id  |        Job Name       | Priority |        Weight        |\\n\"\n+\t\t\t\t\t+ \"|   Item Id  |\t\tJob Name\t   | Priority |\t\tWeight\t\t|\\n\"\n \t\t\t\t\t+ \"+----------------------------------------------------------------------+\\n\");\n \t\t\tfor (BuildableItem item : items) {\n \t\t\t\tItemInfo itemInfo = QueueItemCache.get().getItem(item.getId());"
  },
  {
    "sha": "d6ec9e25e84da9847b8211e3a7816ae2e1bce4cc",
    "filename": "src/main/java/jenkins/advancedqueue/sorter/ItemInfo.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/sorter/ItemInfo.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/sorter/ItemInfo.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/sorter/ItemInfo.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -46,7 +46,7 @@\n \tprivate long itemId;\n \n \tprivate long inQueueSince;\n-\t\n+\n \tprivate Long sortAsInQueueSince = null;\n \n \tprivate int jobGroupId;\n@@ -60,7 +60,7 @@\n \tprivate int priority;\n \n \tprivate ItemStatus itemStatus;\n-\t\n+\n \tprivate List<String> decisionLog = new ArrayList<String>(10);\n \n \tItemInfo(Item item) {\n@@ -182,13 +182,12 @@ public String toString() {\n \t\treturn String.format(\"Id: %s, JobName: %s, jobGroupId: %s, reason: %s, priority: %s, weight: %s, status: %s\", itemId,\n \t\t\t\tjobName, jobGroupId, reason, priority, weight, itemStatus);\n \t}\n-\t\n+\n \tpublic String getDescisionLog() {\n \t\tStringBuilder buffer = new StringBuilder();\n \t\tfor (String  log : decisionLog) {\n \t\t\tbuffer.append(log).append(\"\\n\");\n \t\t}\n \t\treturn buffer.toString();\n \t}\n-\n }"
  },
  {
    "sha": "2e5d28f3c2f3f1dea0c6eb0550381d7b28667910",
    "filename": "src/main/java/jenkins/advancedqueue/sorter/QueueItemCache.java",
    "status": "modified",
    "additions": 6,
    "deletions": 9,
    "changes": 15,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/sorter/QueueItemCache.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/sorter/QueueItemCache.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/sorter/QueueItemCache.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -31,7 +31,6 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.logging.Logger;\n import javax.annotation.CheckForNull;\n \n /**\n@@ -44,8 +43,6 @@\n  */\n public class QueueItemCache {\n \n-\tprivate final static Logger LOGGER = Logger.getLogger(QueueItemCache.class.getName());\n-\n \tstatic private QueueItemCache queueItemCache = null;\n \n \tstatic {\n@@ -70,10 +67,10 @@ public synchronized ItemInfo getItem(long itemId) {\n \n \t/**\n \t * Gets the Item for and itemId/queueId\n-\t * \n+\t *\n \t * @param itemId the id of a Job currently in the queue\n \t * @return the {@link ItemInfo} for the provided id or <code>null</code> if the id is not in the\n-\t *         queue\n+\t *\t\t queue\n \t */\n \t@Deprecated\n \tsynchronized public ItemInfo getItem(Integer itemId) {\n@@ -82,12 +79,12 @@ synchronized public ItemInfo getItem(Integer itemId) {\n \n \t/**\n \t * Get the ItemInfo for the last knows start of this Job Name\n-\t * \n+\t *\n \t * @param jobName a name of a Job\n \t * @return the {@link ItemInfo} for the last know start of the Job.\n-         *         Can be {@code null} if job didn't run yet\n+\t\t *\t\t Can be {@code null} if job didn't run yet\n \t */\n-        @CheckForNull\n+\t\t@CheckForNull\n \tsynchronized public ItemInfo getItem(String jobName) {\n \t\treturn jobName2info.get(jobName);\n \t}\n@@ -113,7 +110,7 @@ public synchronized ItemInfo removeItem(long itemId) {\n \t/**\n \t * This method will return a sorted list of all known and active {@link ItemInfo}s this will\n \t * include Items mapped to {@link BuildableItem}s as well as {@link BlockedItem}s\n-\t * \n+\t *\n \t * @return the sorted list of all {@link ItemInfo}s\n \t */\n \tsynchronized public List<ItemInfo> getSortedList() {"
  },
  {
    "sha": "94fa4beb71b8d367ca247b5621e3ba318f6643e2",
    "filename": "src/main/java/jenkins/advancedqueue/sorter/SorterStrategy.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/sorter/SorterStrategy.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/sorter/SorterStrategy.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/sorter/SorterStrategy.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -52,7 +52,7 @@ public SorterStrategyDescriptor getDescriptor() {\n \t * @param item the {@link hudson.model.Queue.WaitingItem} or {@link hudson.model.BuildableItem} that\n \t *            enters the queue\n \t * @param weightCallback the callback holds the priority to use anded the called method must set\n-\t *            the weight before returning\n+\t *\t\t\tthe weight before returning\n \t * @return the {@link SorterStrategyCallback} provided to the call must be returned\n \t */\n \tpublic abstract SorterStrategyCallback onNewItem(@Nonnull Queue.Item item, SorterStrategyCallback weightCallback);"
  },
  {
    "sha": "fb7e81ca2612804b7d06a4221057e54ff72cbe61",
    "filename": "src/main/java/jenkins/advancedqueue/sorter/SorterStrategyCallback.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/fr123k/priority-sorter-plugin/blob/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/sorter/SorterStrategyCallback.java",
    "raw_url": "https://github.com/fr123k/priority-sorter-plugin/raw/306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c/src/main/java/jenkins/advancedqueue/sorter/SorterStrategyCallback.java",
    "contents_url": "https://api.github.com/repos/fr123k/priority-sorter-plugin/contents/src/main/java/jenkins/advancedqueue/sorter/SorterStrategyCallback.java?ref=306d12f6dea2cdd2883be9e8ca7c07c26f2b2c9c",
    "patch": "@@ -3,6 +3,6 @@\n public interface SorterStrategyCallback {\n \n \tint getPriority();\n-\t\n+\n \tSorterStrategyCallback setWeightSelection(float weight);\n }"
  }
]
