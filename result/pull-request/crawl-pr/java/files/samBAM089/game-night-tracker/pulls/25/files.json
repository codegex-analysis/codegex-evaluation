[
  {
    "sha": "2b951c5515dbd5c6c96926209e8e67b4ab8419a7",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/controller/GameController.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/controller/GameController.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/controller/GameController.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/controller/GameController.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,24 @@\n+package de.sambam.gamenighttracker.controller;\n+\n+import de.sambam.gamenighttracker.model.Game;\n+import de.sambam.gamenighttracker.service.GameService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.*;\n+\n+@RestController\n+@RequestMapping(\"/games\")\n+public class GameController {\n+\n+    private GameService gameService;\n+\n+    @Autowired\n+    public GameController(GameService gameService) {\n+        this.gameService = gameService;\n+    }\n+\n+    @PostMapping\n+    public Game addNewGameToDb(@RequestBody Game newGame) {\n+        return gameService.addNewGame(newGame);\n+    }\n+\n+}"
  },
  {
    "sha": "e03455e83a970bba2352342fcab20a51c50dae77",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/controller/GameSessionController.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/controller/GameSessionController.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/controller/GameSessionController.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/controller/GameSessionController.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,30 @@\n+package de.sambam.gamenighttracker.controller;\n+\n+import de.sambam.gamenighttracker.db.GameSessionDb;\n+import de.sambam.gamenighttracker.model.GameSession;\n+import de.sambam.gamenighttracker.service.GameSessionService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+@RestController\n+@RequestMapping(\"/gamesessions\")\n+public class GameSessionController {\n+\n+    private GameSessionService gameSessionService;\n+    private GameSessionDb gameSessionDb;\n+\n+    @Autowired\n+    public GameSessionController(GameSessionService gameSessionService, GameSessionDb gameSessionDb) {\n+        this.gameSessionService = gameSessionService;\n+        this.gameSessionDb = gameSessionDb;\n+    }\n+\n+    @PostMapping\n+    public GameSession addNewGameSession(@RequestBody GameSession gameSessionToAdd) {\n+        gameSessionService.addNewGameSession(gameSessionToAdd);\n+        return gameSessionToAdd;\n+    }\n+}"
  },
  {
    "sha": "3e2ab76d22fff0853a7bcf9af542097454790302",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/controller/PlayerController.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/controller/PlayerController.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/controller/PlayerController.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/controller/PlayerController.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -18,6 +18,11 @@ public PlayerController(PlayerService playerService) {\n         this.playerService = playerService;\n     }\n \n+    @GetMapping\n+    public List<Player> playerList() {\n+        return playerService.listAllPlayers();\n+    }\n+\n     @PostMapping\n     public Player addNewPlayer(@RequestBody Player newPlayer) {\n         playerService.addPlayer(newPlayer);"
  },
  {
    "sha": "c07591317c74f5a6dbd13c24506a5959196a0718",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/db/GameDb.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/db/GameDb.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/db/GameDb.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/db/GameDb.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,35 @@\n+package de.sambam.gamenighttracker.db;\n+\n+import de.sambam.gamenighttracker.model.Game;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Repository\n+public class GameDb {\n+    private final List<Game> gameList;\n+\n+    public GameDb() {\n+        this.gameList = new ArrayList<>(List.of(\n+                Game.builder().name(\"Cubitos\").releaseYear(\"2020\").build(),\n+                Game.builder().name(\"CloudAge\").releaseYear(\"2020\").build(),\n+                Game.builder().name(\"Barrage\").releaseYear(\"2019\").build()\n+        ));\n+    }\n+\n+    public Game add(Game newGame) {\n+        this.gameList.add(newGame);\n+        return newGame;\n+\n+    }\n+\n+    public List<Game> getGameList() {\n+        return gameList;\n+    }\n+\n+    public void clear() {\n+        this.gameList.clear();\n+    }\n+}"
  },
  {
    "sha": "4eb73351c4c07be71c23c85a2386827e1558ed94",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/db/GameSessionDb.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/db/GameSessionDb.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/db/GameSessionDb.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/db/GameSessionDb.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,29 @@\n+package de.sambam.gamenighttracker.db;\n+\n+import de.sambam.gamenighttracker.model.GameSession;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Repository\n+public class GameSessionDb {\n+\n+    private final List<GameSession> gameSessionList;\n+\n+    public GameSessionDb() {\n+        this.gameSessionList = new ArrayList<>();\n+    }\n+\n+    public void addGameSession(GameSession gameSessionToAdd) {\n+        gameSessionList.add(gameSessionToAdd);\n+    }\n+\n+    public List<GameSession> getGameSessionList() {\n+        return gameSessionList;\n+    }\n+\n+    public void clear() {\n+        this.gameSessionList.clear();\n+    }\n+}"
  },
  {
    "sha": "858bfc8da5d2f36ed931de4d1a5fb1d60177426e",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/db/PlayerDb.java",
    "status": "modified",
    "additions": 7,
    "deletions": 5,
    "changes": 12,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/db/PlayerDb.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/db/PlayerDb.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/db/PlayerDb.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -9,16 +9,17 @@\n @Repository\n public class PlayerDb {\n \n-    private Player player1 = Player.builder().id(\"001\").name(\"samBam\").build();\n-    private Player player2 = Player.builder().id(\"002\").name(\"Felix\").build();\n-    private Player player3 = Player.builder().id(\"003\").name(\"Andrea\").build();\n-\n     private List<Player> playerList;\n \n     public PlayerDb() {\n-        this.playerList = new ArrayList<>();\n+        this.playerList = new ArrayList<>(List.of(\n+                Player.builder().id(\"001\").name(\"samBam\").build(),\n+                Player.builder().id(\"002\").name(\"Felix\").build(),\n+                Player.builder().id(\"003\").name(\"Andrea\").build()\n+        ));\n     }\n \n+\n     public void add(Player newPlayer) {\n         this.playerList.add(newPlayer);\n     }\n@@ -30,4 +31,5 @@ public void add(Player newPlayer) {\n     public void clearDb() {\n         playerList.clear();\n     }\n+\n }"
  },
  {
    "sha": "48339d8186a06a61bc99daa89a32b2affdc49b23",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/model/Game.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/model/Game.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/model/Game.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/model/Game.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,22 @@\n+package de.sambam.gamenighttracker.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Builder\n+public class Game {\n+    private String id;\n+    private String name;\n+    private String releaseYear;\n+    private String boxArt;\n+    private String lastPlay;\n+    private String mostWins;\n+    private String highScore;\n+    private String averageScore;\n+    private String totalPlayTime;\n+}"
  },
  {
    "sha": "806ec3c3d1f3b3fefd9e40ac9b26440cdb352c4e",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/model/GameSession.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/model/GameSession.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/model/GameSession.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/model/GameSession.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,24 @@\n+package de.sambam.gamenighttracker.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Builder\n+public class GameSession {\n+\n+    private String id;\n+    private String gameName;\n+    private String thumbnailUrl;\n+    private String date;\n+    private List<Player> playerList;\n+    private String duration;\n+\n+}"
  },
  {
    "sha": "3b321e60a1c65c3a9bb71c3be031690bc24d797f",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/service/GameService.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/service/GameService.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/service/GameService.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/service/GameService.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,21 @@\n+package de.sambam.gamenighttracker.service;\n+\n+import de.sambam.gamenighttracker.db.GameDb;\n+import de.sambam.gamenighttracker.model.Game;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class GameService {\n+\n+    private final GameDb gameDb;\n+\n+    @Autowired\n+    public GameService(GameDb gameDb) {\n+        this.gameDb = gameDb;\n+    }\n+\n+    public Game addNewGame(Game newGame) {\n+        return gameDb.add(newGame);\n+    }\n+}"
  },
  {
    "sha": "2a2074ec8ab5c7c06c10da0f1de75d188e4f5897",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/service/GameSessionService.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/service/GameSessionService.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/service/GameSessionService.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/service/GameSessionService.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,22 @@\n+package de.sambam.gamenighttracker.service;\n+\n+import de.sambam.gamenighttracker.db.GameSessionDb;\n+import de.sambam.gamenighttracker.model.GameSession;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class GameSessionService {\n+\n+    private final GameSessionDb gameSessionDb;\n+\n+    @Autowired\n+    public GameSessionService(GameSessionDb gameSessionDb) {\n+        this.gameSessionDb = gameSessionDb;\n+    }\n+\n+\n+    public void addNewGameSession(GameSession gameSessionToAdd) {\n+        gameSessionDb.addGameSession(gameSessionToAdd);\n+    }\n+}"
  },
  {
    "sha": "145c55f114712cfff7bfb30c389a08716ca84b02",
    "filename": "backend/src/main/java/de/sambam/gamenighttracker/service/PlayerService.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/service/PlayerService.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/main/java/de/sambam/gamenighttracker/service/PlayerService.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/main/java/de/sambam/gamenighttracker/service/PlayerService.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -9,6 +9,8 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n+import java.util.List;\n+\n @Service\n public class PlayerService {\n \n@@ -23,4 +25,7 @@ public void addPlayer(Player newPlayer) {\n         playerDb.add(newPlayer);\n     }\n \n+    public List<Player> listAllPlayers() {\n+        return playerDb.getPlayers();\n+    }\n }"
  },
  {
    "sha": "44e5a19111179076f7433b7435dc81e5155ec15b",
    "filename": "backend/src/test/java/de/sambam/gamenighttracker/controller/GameControllerTest.java",
    "status": "added",
    "additions": 58,
    "deletions": 0,
    "changes": 58,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/controller/GameControllerTest.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/controller/GameControllerTest.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/test/java/de/sambam/gamenighttracker/controller/GameControllerTest.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,58 @@\n+package de.sambam.gamenighttracker.controller;\n+\n+import de.sambam.gamenighttracker.db.GameDb;\n+import de.sambam.gamenighttracker.model.Game;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.web.client.TestRestTemplate;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n+class GameControllerTest {\n+\n+    @LocalServerPort\n+    private int port;\n+\n+    @Autowired\n+    private TestRestTemplate restTemplate;\n+\n+    @Autowired\n+    private GameDb gameDb;\n+\n+    @BeforeEach\n+    public void resetDatabase() {\n+        gameDb.clear();\n+    }\n+\n+\n+    @Test\n+    @DisplayName(\"post request should add new game to gameDb\")\n+    public void addNewGameTest() {\n+        //GIVEN\n+        HttpEntity<Game> requestEntity = new HttpEntity<>(\n+                Game.builder().name(\"Scrabble\").build());\n+\n+        //WHEN\n+        ResponseEntity<Game> postResponse = restTemplate.exchange(\n+                \"http://localhost:\" + port + \"/games\", HttpMethod.POST, requestEntity, Game.class);\n+\n+        //THEN\n+        assertThat(postResponse.getStatusCode(), is(HttpStatus.OK));\n+        assertEquals(postResponse.getBody(), Game.builder().name(\"Scrabble\").build());\n+        assertTrue(gameDb.getGameList().contains(Game.builder().name(\"Scrabble\").build()));\n+\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "75ecb3e1e55876c287515719c9d46098f1cf0342",
    "filename": "backend/src/test/java/de/sambam/gamenighttracker/controller/GameSessionControllerTest.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/controller/GameSessionControllerTest.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/controller/GameSessionControllerTest.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/test/java/de/sambam/gamenighttracker/controller/GameSessionControllerTest.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,71 @@\n+package de.sambam.gamenighttracker.controller;\n+\n+import de.sambam.gamenighttracker.db.GameSessionDb;\n+import de.sambam.gamenighttracker.model.GameSession;\n+import de.sambam.gamenighttracker.model.Player;\n+import jdk.jfr.Description;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.web.client.TestRestTemplate;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+\n+import java.util.List;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n+class GameSessionControllerTest {\n+\n+    @LocalServerPort\n+    private int port;\n+\n+    @Autowired\n+    private TestRestTemplate restTemplate;\n+\n+    @Autowired\n+    GameSessionDb gameSessionDb;\n+\n+    @BeforeEach\n+    public void resetDb() {\n+        gameSessionDb.clear();\n+    }\n+\n+    @Test\n+    @Description(\"post endpoint should add new game session to db\")\n+    public void addNewGameSessionTest() {\n+        //GIVEN\n+        HttpEntity<GameSession> requestEntity = new HttpEntity<>(\n+                GameSession.builder().gameName(\"CloudAge\").playerList(List.of(\n+                        Player.builder().name(\"samBAM\").build(),\n+                        Player.builder().name(\"Susanne\").build()\n+                )).build()\n+        );\n+\n+        //WHEN\n+        ResponseEntity<GameSession> postResponse = restTemplate.exchange(\n+                \"http://localhost:\" + port + \"/gamesessions\", HttpMethod.POST, requestEntity, GameSession.class);\n+\n+\n+        //THEN\n+        assertThat(postResponse.getStatusCode(), is(HttpStatus.OK));\n+        assertEquals(postResponse.getBody(), GameSession.builder().gameName(\"CloudAge\").playerList(List.of(\n+                Player.builder().name(\"samBAM\").build(),\n+                Player.builder().name(\"Susanne\").build())).build());\n+        assertTrue(gameSessionDb.getGameSessionList().contains(\n+                GameSession.builder().gameName(\"CloudAge\").playerList(List.of(\n+                        Player.builder().name(\"samBAM\").build(),\n+                        Player.builder().name(\"Susanne\").build())).build()));\n+\n+    }\n+\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f61d825adecae4f97662f4390582e1f7b2f7653f",
    "filename": "backend/src/test/java/de/sambam/gamenighttracker/controller/PlayerControllerTest.java",
    "status": "modified",
    "additions": 23,
    "deletions": 3,
    "changes": 26,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/controller/PlayerControllerTest.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/controller/PlayerControllerTest.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/test/java/de/sambam/gamenighttracker/controller/PlayerControllerTest.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -10,15 +10,15 @@\n import org.springframework.boot.test.web.client.TestRestTemplate;\n import org.springframework.boot.web.server.LocalServerPort;\n import org.springframework.http.*;\n-import org.springframework.web.client.RestTemplate;\n \n+import java.util.List;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.is;\n import static org.junit.jupiter.api.Assertions.*;\n \n @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n-@DisplayName(\"post request should add new player to db\")\n+@DisplayName(\"Testing all available requests to the backend\")\n class PlayerControllerTest {\n \n     @LocalServerPort\n@@ -35,10 +35,30 @@ public void resetDatabase() {\n         playerDb.clearDb();\n     }\n \n+    @Test\n+    @DisplayName(\"get endpoint should show all players in db\")\n+    public void getAllPlayers() {\n+        //GIVEN\n+        playerDb.add(Player.builder().id(\"001\").name(\"Richard\").build());\n+        playerDb.add(Player.builder().id(\"002\").name(\"Tom\").build());\n+\n+        //WHEN\n+        ResponseEntity<Player[]> response = restTemplate.getForEntity(\n+                \"http://localhost:\" + port + \"/players\", Player[].class);\n+        HttpStatus statusCode = response.getStatusCode();\n+        Player[] players = response.getBody();\n+\n+        //THEN\n+        assertEquals(HttpStatus.OK, statusCode);\n+        assertTrue(playerDb.getPlayers().containsAll(List.of(\n+                Player.builder().id(\"001\").name(\"Richard\").build(),\n+                Player.builder().id(\"002\").name(\"Tom\").build()\n+        )));\n+    }\n+\n     @Test\n     @DisplayName(\"post endpoint should add new player to db\")\n     public void postNewPlayerTest() {\n-\n         //GIVEN\n         HttpEntity<Player> requestEntity = new HttpEntity<>(\n                 Player.builder().id(\"009\").name(\"Tom\").build());"
  },
  {
    "sha": "5f3d4f7a59525ecf53b76af7e7a6e78325a0c137",
    "filename": "backend/src/test/java/de/sambam/gamenighttracker/db/GameDbTest.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/db/GameDbTest.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/db/GameDbTest.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/test/java/de/sambam/gamenighttracker/db/GameDbTest.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,45 @@\n+package de.sambam.gamenighttracker.db;\n+\n+import de.sambam.gamenighttracker.model.Game;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class GameDbTest {\n+\n+    @Test\n+    @DisplayName(\"getGameList should return all games from Db\")\n+    public void getGameListTest() {\n+        //GIVEN\n+        GameDb gameDb = new GameDb();\n+        gameDb.add(Game.builder().name(\"Cubitos\").releaseYear(\"2020\").build());\n+        gameDb.add(Game.builder().name(\"CloudAge\").releaseYear(\"2020\").build());\n+\n+        //WHEN\n+        List<Game> gameList = gameDb.getGameList();\n+        List<Game> expectedList = new ArrayList<>();\n+        expectedList.add(Game.builder().name(\"Cubitos\").releaseYear(\"2020\").build());\n+        expectedList.add(Game.builder().name(\"CloudAge\").releaseYear(\"2020\").build());\n+\n+        //THEN\n+        assertTrue(gameList.containsAll(expectedList));\n+    }\n+\n+    @Test\n+    @DisplayName(\"add() should add new game to Db\")\n+    public void addNewGameTest() {\n+        //GIVEN\n+        GameDb gameDb = new GameDb();\n+\n+        //WHEN\n+        Game newGame = Game.builder().name(\"Monopoly\").releaseYear(\"1933\").build();\n+        gameDb.add(newGame);\n+\n+        //THEN\n+        assertTrue(gameDb.getGameList().contains(newGame));\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "32fa50797387b5ef7137d5c14de6cb79d117cada",
    "filename": "backend/src/test/java/de/sambam/gamenighttracker/db/GameSessionDbTest.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/db/GameSessionDbTest.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/db/GameSessionDbTest.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/test/java/de/sambam/gamenighttracker/db/GameSessionDbTest.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,24 @@\n+package de.sambam.gamenighttracker.db;\n+\n+import de.sambam.gamenighttracker.model.GameSession;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class GameSessionDbTest {\n+\n+    @Test\n+    @DisplayName(\"addGameSession method should add new game session to db\")\n+    public void addGameSessionTest() {\n+        //GIVEN\n+        GameSessionDb gameSessionDb = new GameSessionDb();\n+        GameSession gameSession = GameSession.builder().gameName(\"CloudAge\").build();\n+\n+        //WHEN\n+        gameSessionDb.addGameSession(gameSession);\n+\n+        //THEN\n+        assertTrue(gameSessionDb.getGameSessionList().contains(GameSession.builder().gameName(\"CloudAge\").build()));\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a7d8557483ba025d89ce24d6ffc9b3595c14a666",
    "filename": "backend/src/test/java/de/sambam/gamenighttracker/db/PlayerDbTest.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/db/PlayerDbTest.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/db/PlayerDbTest.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/test/java/de/sambam/gamenighttracker/db/PlayerDbTest.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -4,10 +4,12 @@\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n \n class PlayerDbTest {\n \n@@ -26,4 +28,26 @@ public void addNewPlayerToDbTest() {\n         //THEN\n         assertThat(players.contains(expectedPlayer), is(true));\n     }\n+\n+    @Test\n+    @DisplayName(\"getPlayers should return all player objects\")\n+    public void getPlayersTest() {\n+        //GIVEN\n+        PlayerDb playerDb = new PlayerDb();\n+        playerDb.add(Player.builder().id(\"001\").name(\"samBAM\").build());\n+        playerDb.add(Player.builder().id(\"002\").name(\"Andrea\").build());\n+        playerDb.add(Player.builder().id(\"003\").name(\"Tim\").build());\n+\n+        //WHEN\n+        List<Player> playerList = playerDb.getPlayers();\n+        List<Player> expectedList = new ArrayList<>(List.of(\n+                Player.builder().id(\"001\").name(\"samBAM\").build(),\n+                Player.builder().id(\"002\").name(\"Andrea\").build(),\n+                Player.builder().id(\"003\").name(\"Tim\").build()\n+        ));\n+\n+        //THEN\n+        assertTrue(playerList.containsAll(expectedList));\n+    }\n+\n }"
  },
  {
    "sha": "1f0d2921e8f881a86ed9a8d67c7f93d09ff5575f",
    "filename": "backend/src/test/java/de/sambam/gamenighttracker/service/GameServiceTest.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/service/GameServiceTest.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/service/GameServiceTest.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/test/java/de/sambam/gamenighttracker/service/GameServiceTest.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,26 @@\n+package de.sambam.gamenighttracker.service;\n+\n+import de.sambam.gamenighttracker.db.GameDb;\n+import de.sambam.gamenighttracker.model.Game;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class GameServiceTest {\n+\n+    @Test\n+    @DisplayName(\"addNewGame method should add a game to the Db\")\n+    public void addNewGameTester() {\n+        //GIVEN\n+        GameDb gameDb = new GameDb();\n+        GameService gameService = new GameService(gameDb);\n+\n+        //WHEN\n+        Game newGame = Game.builder().name(\"Monopoly\").build();\n+        gameService.addNewGame(newGame);\n+\n+        //THEN\n+        assertTrue(gameDb.getGameList().contains(Game.builder().name(\"Monopoly\").build()));\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "309ea7aeaf696346d7c39e1ec982cca8068641be",
    "filename": "backend/src/test/java/de/sambam/gamenighttracker/service/GameSessionServiceTest.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/service/GameSessionServiceTest.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/service/GameSessionServiceTest.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/test/java/de/sambam/gamenighttracker/service/GameSessionServiceTest.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -0,0 +1,39 @@\n+package de.sambam.gamenighttracker.service;\n+\n+import de.sambam.gamenighttracker.db.GameSessionDb;\n+import de.sambam.gamenighttracker.model.GameSession;\n+import de.sambam.gamenighttracker.model.Player;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.List;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class GameSessionServiceTest {\n+\n+    @Test\n+    @DisplayName(\"addNewGameSession should add new game session to db\")\n+    public void addNewGameSessionTest() {\n+        //GIVEN\n+        GameSessionDb gameSessionDb = new GameSessionDb();\n+        GameSessionService gameSessionService = new GameSessionService(gameSessionDb);\n+        GameSession gameSessionToAdd = new GameSession();\n+        gameSessionToAdd = GameSession.builder().gameName(\"CloudAge\").playerList(List.of(\n+                Player.builder().name(\"samBAM\").build(),\n+                Player.builder().name(\"Susanne\").build()\n+        )).build();\n+\n+        //WHEN\n+        gameSessionService.addNewGameSession(gameSessionToAdd);\n+\n+        //THEN\n+        assertTrue(gameSessionDb.getGameSessionList().contains(\n+                GameSession.builder().gameName(\"CloudAge\").playerList(List.of(\n+                        Player.builder().name(\"samBAM\").build(),\n+                        Player.builder().name(\"Susanne\").build()\n+                )).build()\n+        ));\n+\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "71f739c3394fb512a190d1e2699da8ba39a10aa4",
    "filename": "backend/src/test/java/de/sambam/gamenighttracker/service/PlayerServiceTest.java",
    "status": "modified",
    "additions": 19,
    "deletions": 1,
    "changes": 20,
    "blob_url": "https://github.com/samBAM089/game-night-tracker/blob/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/service/PlayerServiceTest.java",
    "raw_url": "https://github.com/samBAM089/game-night-tracker/raw/28fd46672753dce89e89a02ba56642240ba2a0e7/backend/src/test/java/de/sambam/gamenighttracker/service/PlayerServiceTest.java",
    "contents_url": "https://api.github.com/repos/samBAM089/game-night-tracker/contents/backend/src/test/java/de/sambam/gamenighttracker/service/PlayerServiceTest.java?ref=28fd46672753dce89e89a02ba56642240ba2a0e7",
    "patch": "@@ -24,7 +24,7 @@ public void addPlayerTester() {\n         PlayerDb playerDb = new PlayerDb();\n         playerDb.add(Player.builder().id(\"001\").name(\"samBAM\").build());\n         playerDb.add(Player.builder().id(\"002\").name(\"Andrea\").build());\n-        \n+\n \n         PlayerService playerService = new PlayerService(playerDb);\n \n@@ -36,4 +36,22 @@ public void addPlayerTester() {\n         assertTrue(playerList.contains(Player.builder().id(\"003\").name(\"Thomas\").build()));\n \n     }\n+\n+    @Test\n+    @DisplayName(\"listAllPlayers should return all players\")\n+    public void listAllPlayersTest() {\n+        //GIVEN\n+        PlayerDb playerDb = new PlayerDb();\n+        playerDb.add(Player.builder().id(\"001\").name(\"samBAM\").build());\n+        playerDb.add(Player.builder().id(\"002\").name(\"Andrea\").build());\n+\n+        //WHEN\n+        List<Player> playerList = playerDb.getPlayers();\n+\n+        //THEN\n+        assertTrue(playerList.containsAll(List.of(\n+                Player.builder().id(\"001\").name(\"samBAM\").build(),\n+                Player.builder().id(\"002\").name(\"Andrea\").build()\n+        )));\n+    }\n }\n\\ No newline at end of file"
  }
]
