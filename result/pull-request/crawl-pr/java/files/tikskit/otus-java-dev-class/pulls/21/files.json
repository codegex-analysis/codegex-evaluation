[
  {
    "sha": "ca3d28dc5115872f08295bfa581b7d86dfa7d024",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 5,
    "changes": 6,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/build.gradle",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/build.gradle",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/build.gradle?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -47,6 +47,7 @@ allprojects {\n             dependency(\"org.postgresql:postgresql:${Versions.postgresql}\")\n             dependency(\"org.testcontainers:junit-jupiter:${Versions.testcontainers}\")\n             dependency(\"org.testcontainers:postgresql:${Versions.testcontainers}\")\n+            dependency(\"com.h2database:h2:${Versions.h2}\")\n         }\n     }\n \n@@ -65,8 +66,3 @@ allprojects {\n     }\n }\n \n-\n-\n-\n-\n-"
  },
  {
    "sha": "4e5f32e0b4efe582861349d4f32067ddf23a9502",
    "filename": "buildSrc/src/main/java/Versions.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/buildSrc/src/main/java/Versions.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/buildSrc/src/main/java/Versions.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/buildSrc/src/main/java/Versions.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -29,4 +29,5 @@\n     String stomp = \"2.3.3-1\";\n     String bootstrap = \"4.4.1-1\";\n     String netty = \"4.1.53.Final\";\n+    String h2 = \"1.4.200\";\n }"
  },
  {
    "sha": "8456318aac11009c857501331372606639a89a1a",
    "filename": "hw30-ms/MessageSystem/build.gradle",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/build.gradle",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/build.gradle",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/build.gradle?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,31 @@\n+plugins {\n+    id 'java'\n+}\n+\n+sourceCompatibility = JavaVersion.VERSION_15\n+targetCompatibility = JavaVersion.VERSION_15\n+\n+dependencies {\n+\n+    implementation(\"ch.qos.logback:logback-classic\")\n+\n+    testImplementation(\"org.junit.jupiter:junit-jupiter-engine\")\n+    testImplementation(\"org.junit.jupiter:junit-jupiter-params\")\n+    testImplementation(\"org.assertj:assertj-core\")\n+    testImplementation(\"org.mockito:mockito-junit-jupiter\")\n+}\n+\n+test {\n+    useJUnitPlatform()\n+    testLogging {\n+        events \"passed\", \"skipped\", \"failed\"\n+    }\n+}\n+\n+compileJava.options.encoding = 'UTF-8'\n+\n+tasks.withType(JavaCompile) {\n+    options.with {\n+        encoding = 'UTF-8'\n+    }\n+}"
  },
  {
    "sha": "9f568dba961beaff849e44304259052e0ba8fe94",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/HandlersStore.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/HandlersStore.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/HandlersStore.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/HandlersStore.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.messagesystem;\n+\n+import ru.otus.messagesystem.client.ResultDataType;\n+import ru.otus.messagesystem.message.MessageType;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public interface HandlersStore {\n+    RequestHandler<? extends ResultDataType> getHandlerByType(String messageTypeName);\n+\n+    void addHandler(MessageType messageType, RequestHandler<? extends ResultDataType> handler);\n+}"
  },
  {
    "sha": "e224d5f22bf1967655a103df057e4ce1f57f6e49",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/HandlersStoreImpl.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/HandlersStoreImpl.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/HandlersStoreImpl.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/HandlersStoreImpl.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,23 @@\n+package ru.otus.messagesystem;\n+\n+import ru.otus.messagesystem.client.ResultDataType;\n+import ru.otus.messagesystem.message.MessageType;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class HandlersStoreImpl implements HandlersStore {\n+    private final Map<String, RequestHandler<? extends ResultDataType>> handlers = new ConcurrentHashMap<>();\n+\n+    @Override\n+    public RequestHandler<? extends ResultDataType> getHandlerByType(String messageTypeName) {\n+        return handlers.get(messageTypeName);\n+    }\n+\n+    @Override\n+    public void addHandler(MessageType messageType, RequestHandler<? extends ResultDataType> handler) {\n+        handlers.put(messageType.getName(), handler);\n+    }\n+\n+\n+}"
  },
  {
    "sha": "b87a6a60bfd0cb365f68e3d9c763ae4665c9dc7b",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/MessageSystem.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/MessageSystem.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/MessageSystem.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/MessageSystem.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.otus.messagesystem;\n+\n+import ru.otus.messagesystem.client.MsClient;\n+import ru.otus.messagesystem.message.Message;\n+\n+public interface MessageSystem {\n+\n+    void addClient(MsClient msClient);\n+\n+    void removeClient(String clientId);\n+\n+    boolean newMessage(Message msg);\n+\n+    void dispose() throws InterruptedException;\n+\n+    void dispose(Runnable callback) throws InterruptedException;\n+\n+    void start();\n+\n+    int currentQueueSize();\n+}\n+"
  },
  {
    "sha": "af432e6e4a655aafe4c0e579021da093a04ec889",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/MessageSystemImpl.java",
    "status": "added",
    "additions": 176,
    "deletions": 0,
    "changes": 176,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/MessageSystemImpl.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/MessageSystemImpl.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/MessageSystemImpl.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,176 @@\n+package ru.otus.messagesystem;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import ru.otus.messagesystem.client.MsClient;\n+import ru.otus.messagesystem.message.Message;\n+import ru.otus.messagesystem.message.MessageBuilder;\n+\n+import java.util.Map;\n+import java.util.concurrent.ArrayBlockingQueue;\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+import java.util.concurrent.ThreadFactory;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+\n+public final class MessageSystemImpl implements MessageSystem {\n+    private static final Logger logger = LoggerFactory.getLogger(MessageSystemImpl.class);\n+    private static final int MESSAGE_QUEUE_SIZE = 100_000;\n+    private static final int MSG_HANDLER_THREAD_LIMIT = 2;\n+\n+    private final AtomicBoolean runFlag = new AtomicBoolean(true); // запущено ли приложение\n+\n+    // Map с клиентами. Имя клиента (адресат) является ключем, значением является сам клиент\n+    private final Map<String, MsClient> clientMap = new ConcurrentHashMap<>();\n+    // Очередь, в которую попадают сообщения и разбираются из нее\n+    private final BlockingQueue<Message> messageQueue = new ArrayBlockingQueue<>(MESSAGE_QUEUE_SIZE);\n+\n+    private Runnable disposeCallback;\n+\n+    //Поток, который разбирает очередь сообщений messageQueue.\n+    private final ExecutorService msgProcessor = Executors.newSingleThreadExecutor(runnable -> {\n+        Thread thread = new Thread(runnable);\n+        thread.setName(\"msg-processor-thread\");\n+        return thread;\n+    });\n+\n+    // Потоки, которые будут разбирать сообщения, которые msgProcessor вытащил из очереди сообщений\n+    private final ExecutorService msgHandler = Executors.newFixedThreadPool(MSG_HANDLER_THREAD_LIMIT,\n+            new ThreadFactory() {\n+\n+        private final AtomicInteger threadNameSeq = new AtomicInteger(0);\n+\n+        @Override\n+        public Thread newThread(Runnable runnable) {\n+            Thread thread = new Thread(runnable);\n+            thread.setName(\"msg-handler-thread-\" + threadNameSeq.incrementAndGet());\n+            return thread;\n+        }\n+    });\n+\n+    public MessageSystemImpl() {\n+        start();\n+    }\n+\n+    public MessageSystemImpl(boolean startProcessing) {\n+        if (startProcessing) {\n+            start();\n+        }\n+    }\n+\n+    @Override\n+    public void start() {\n+        msgProcessor.submit(this::processMessages);\n+    }\n+\n+    @Override\n+    public int currentQueueSize() {\n+        return messageQueue.size();\n+    }\n+\n+    @Override\n+    public void addClient(MsClient msClient) {\n+        logger.info(\"new client:{}\", msClient.getName());\n+        if (clientMap.containsKey(msClient.getName())) {\n+            throw new IllegalArgumentException(\"Error. client: \" + msClient.getName() + \" already exists\");\n+        }\n+        clientMap.put(msClient.getName(), msClient);\n+    }\n+\n+    @Override\n+    public void removeClient(String clientId) {\n+        MsClient removedClient = clientMap.remove(clientId);\n+        if (removedClient == null) {\n+            logger.warn(\"client not found: {}\", clientId);\n+        } else {\n+            logger.info(\"removed client:{}\", removedClient);\n+        }\n+    }\n+\n+    @Override\n+    public boolean newMessage(Message msg) {\n+        if (runFlag.get()) {\n+            return messageQueue.offer(msg);\n+        } else {\n+            logger.warn(\"MS is being shutting down... rejected:{}\", msg);\n+            return false;\n+        }\n+    }\n+\n+    @Override\n+    public void dispose() throws InterruptedException {\n+        logger.info(\"now in the messageQueue {} messages\", currentQueueSize());\n+        runFlag.set(false);\n+        insertStopMessage();\n+        msgProcessor.shutdown();\n+        msgHandler.awaitTermination(60, TimeUnit.SECONDS);\n+    }\n+\n+    @Override\n+    public void dispose(Runnable callback) throws InterruptedException {\n+        disposeCallback = callback;\n+        dispose();\n+    }\n+\n+    private void processMessages() {\n+        logger.info(\"msgProcessor started, {}\", currentQueueSize());\n+        while (runFlag.get() || !messageQueue.isEmpty()) {\n+            try {\n+                Message msg = messageQueue.take();\n+                if (msg == MessageBuilder.getVoidMessage()) {\n+                    logger.info(\"received the stop message\");\n+                } else {\n+                    MsClient clientTo = clientMap.get(msg.getTo()); // Получаем клиента по адресату сообщения\n+                    if (clientTo == null) {\n+                        logger.warn(\"client not found\");\n+                    } else {\n+                        msgHandler.submit(() -> handleMessage(clientTo, msg)); // Обработать сообщение msg с помощью клиента clientTo в одном из двух потоков (msgHandler двухпоточный, см. MSG_HANDLER_THREAD_LIMIT)\n+                    }\n+                }\n+            } catch (InterruptedException ex) {\n+                logger.error(ex.getMessage(), ex);\n+                Thread.currentThread().interrupt();\n+            } catch (Exception ex) {\n+                logger.error(ex.getMessage(), ex);\n+            }\n+        }\n+\n+\n+        // Вызываем специальный call back, если нужно сделать что-то перед остановкой\n+        if (disposeCallback != null) {\n+            msgHandler.submit(disposeCallback);\n+        }\n+        msgHandler.submit(this::messageHandlerShutdown);\n+        logger.info(\"msgProcessor finished\");\n+    }\n+\n+    private void messageHandlerShutdown() {\n+        msgHandler.shutdown();\n+        logger.info(\"msgHandler has been shut down\");\n+    }\n+\n+\n+    private void handleMessage(MsClient msClient, Message msg) {\n+        try {\n+            msClient.handle(msg);\n+        } catch (Exception ex) {\n+            logger.error(ex.getMessage(), ex);\n+            logger.error(\"message:{}\", msg);\n+        }\n+    }\n+\n+    private void insertStopMessage() throws InterruptedException {\n+        boolean result = messageQueue.offer(MessageBuilder.getVoidMessage());\n+        while (!result) {\n+            Thread.sleep(100);\n+            result = messageQueue.offer(MessageBuilder.getVoidMessage());\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "06ff1ab1616311e3682c0c0950ca5854ecea7c7f",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/RequestHandler.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/RequestHandler.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/RequestHandler.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/RequestHandler.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,12 @@\n+package ru.otus.messagesystem;\n+\n+\n+import ru.otus.messagesystem.client.ResultDataType;\n+import ru.otus.messagesystem.message.Message;\n+\n+import java.util.Optional;\n+\n+\n+public interface RequestHandler<T extends ResultDataType> {\n+    Optional<Message> handle(Message msg);\n+}"
  },
  {
    "sha": "3ef4e9e91c494f76362b80b286e21590fb26daee",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackId.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackId.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackId.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackId.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,37 @@\n+package ru.otus.messagesystem.client;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+public class CallbackId implements Serializable {\n+    private static final long serialVersionUID = 1L;\n+    private final String id;\n+\n+    public CallbackId(String id) {\n+        this.id = id;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"CallbackId{\" +\n+                \"id=\" + id +\n+                '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        CallbackId that = (CallbackId) o;\n+        return Objects.equals(id, that.id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id);\n+    }\n+}"
  },
  {
    "sha": "333967c20c823b109bcdaa838855549ccd67a7ae",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackRegistry.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackRegistry.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackRegistry.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackRegistry.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.otus.messagesystem.client;\n+\n+public interface CallbackRegistry {\n+    void put(CallbackId id, MessageCallback<? extends ResultDataType> callback);\n+\n+    MessageCallback<? extends ResultDataType> getAndRemove(CallbackId id);\n+}"
  },
  {
    "sha": "4634d4f526c33b0b66c696bb9ce41ac94318c372",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackRegistryImpl.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackRegistryImpl.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackRegistryImpl.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/CallbackRegistryImpl.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.otus.messagesystem.client;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+public class CallbackRegistryImpl implements CallbackRegistry {\n+\n+    private final Map<CallbackId, MessageCallback<? extends ResultDataType>> callbackRegistry = new ConcurrentHashMap<>();\n+\n+    @Override\n+    public void put(CallbackId id, MessageCallback<? extends ResultDataType> callback) {\n+        callbackRegistry.put(id, callback);\n+    }\n+\n+    @Override\n+    public MessageCallback<? extends ResultDataType> getAndRemove(CallbackId id) {\n+        return callbackRegistry.remove(id);\n+    }\n+}"
  },
  {
    "sha": "5b7b0eb1b28c40605f3e7c082a3004d4d6e38924",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MessageCallback.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MessageCallback.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MessageCallback.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MessageCallback.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,6 @@\n+package ru.otus.messagesystem.client;\n+\n+import java.util.function.Consumer;\n+\n+public interface MessageCallback<T extends ResultDataType> extends Consumer<T> {\n+}"
  },
  {
    "sha": "9baba6740470d1c99017b546d34201b5faf02bda",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MsClient.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MsClient.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MsClient.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MsClient.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.otus.messagesystem.client;\n+\n+import ru.otus.messagesystem.message.Message;\n+import ru.otus.messagesystem.message.MessageType;\n+\n+public interface MsClient {\n+\n+    boolean sendMessage(Message msg);\n+\n+    void handle(Message msg);\n+\n+    String getName();\n+\n+    <T extends ResultDataType> Message produceMessage(String to, T data, MessageType msgType, MessageCallback<T> callback);\n+}"
  },
  {
    "sha": "e00ba46a87ffaaef019c6ae733a0458eccc34e7c",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MsClientImpl.java",
    "status": "added",
    "additions": 80,
    "deletions": 0,
    "changes": 80,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MsClientImpl.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MsClientImpl.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/MsClientImpl.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,80 @@\n+package ru.otus.messagesystem.client;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import ru.otus.messagesystem.HandlersStore;\n+import ru.otus.messagesystem.message.Message;\n+import ru.otus.messagesystem.message.MessageBuilder;\n+import ru.otus.messagesystem.MessageSystem;\n+import ru.otus.messagesystem.message.MessageType;\n+import ru.otus.messagesystem.RequestHandler;\n+\n+import java.util.Objects;\n+\n+public class MsClientImpl implements MsClient {\n+    private static final Logger logger = LoggerFactory.getLogger(MsClientImpl.class);\n+\n+    private final String name;\n+    private final MessageSystem messageSystem;\n+    private final HandlersStore handlersStore;\n+    private final CallbackRegistry callbackRegistry;\n+\n+    public MsClientImpl(String name, MessageSystem messageSystem, HandlersStore handlersStore,\n+                        CallbackRegistry callbackRegistry) {\n+        this.name = name;\n+        this.messageSystem = messageSystem;\n+        this.handlersStore = handlersStore;\n+        this.callbackRegistry = callbackRegistry;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public boolean sendMessage(Message msg) {\n+        boolean result = messageSystem.newMessage(msg);\n+        if (!result) {\n+            logger.error(\"the last message was rejected: {}\", msg);\n+        }\n+        return result;\n+    }\n+\n+    @SuppressWarnings(\"all\")\n+    @Override\n+    public void handle(Message msg) {\n+        logger.info(\"new message:{}\", msg);\n+        try {\n+            RequestHandler requestHandler = handlersStore.getHandlerByType(msg.getType()); // Получаем хэндлер для данного типа сообщения\n+            if (requestHandler != null) {\n+                requestHandler.handle(msg).ifPresent(message -> sendMessage((Message) message)); // Если обработка сообщения возвращает ответ - отправляем его\n+            } else {\n+                logger.error(\"handler not found for the message type:{}\", msg.getType());\n+            }\n+        } catch (Exception ex) {\n+            logger.error(\"msg:{}\", msg, ex);\n+        }\n+    }\n+\n+    @Override\n+    public <T extends ResultDataType> Message produceMessage(String to, T data, MessageType msgType,\n+                                                                MessageCallback<T> callback) {\n+        Message message = MessageBuilder.buildMessage(name, to, null, data, msgType);\n+        callbackRegistry.put(message.getCallbackId(), callback);\n+        return message;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        MsClientImpl msClient = (MsClientImpl) o;\n+        return Objects.equals(name, msClient.name);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(name);\n+    }\n+}"
  },
  {
    "sha": "468a24b20b07dba9b2cdf49f2ceaa69f1003fa86",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/ResultDataType.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/ResultDataType.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/ResultDataType.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/client/ResultDataType.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.otus.messagesystem.client;\n+\n+import java.io.Serializable;\n+\n+public class ResultDataType implements Serializable {\n+    private static final long serialVersionUID = 1L;\n+}"
  },
  {
    "sha": "01ea06a98975509e8986e896898db27999565b72",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/Message.java",
    "status": "added",
    "additions": 92,
    "deletions": 0,
    "changes": 92,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/Message.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/Message.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/Message.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,92 @@\n+package ru.otus.messagesystem.message;\n+\n+import ru.otus.messagesystem.client.CallbackId;\n+\n+import java.io.Serializable;\n+import java.util.Arrays;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+public class Message implements Serializable {\n+    private static final long serialVersionUID = 1L;\n+\n+    private final MessageId id;\n+    private final String from;\n+    private final String to;\n+    private final MessageId sourceMessageId; // Для ответных сообщений в этом поле задается исходное\n+    private final String type;\n+    private final byte[] payload;\n+    private final CallbackId callbackId; // Идентификатор действия, которое нужно выполнить, когда сообщение придет\n+\n+    Message(MessageId messageId, String from, String to, MessageId sourceMessageId, String type,\n+            byte[] payload, CallbackId callbackId) {\n+        this.id = messageId;\n+        this.from = from;\n+        this.to = to;\n+        this.sourceMessageId = sourceMessageId;\n+        this.type = type;\n+        this.payload = payload;\n+        this.callbackId = callbackId;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        Message message = (Message) o;\n+        return Objects.equals(id, message.id) &&\n+                Objects.equals(from, message.from) &&\n+                Objects.equals(to, message.to) &&\n+                Objects.equals(sourceMessageId, message.sourceMessageId) &&\n+                Objects.equals(type, message.type) &&\n+                Arrays.equals(payload, message.payload) &&\n+                Objects.equals(callbackId, message.callbackId);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = Objects.hash(id, from, to, sourceMessageId, type, callbackId);\n+        result = 31 * result + Arrays.hashCode(payload);\n+        return result;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Message{\" +\n+                \"id=\" + id +\n+                \", from='\" + from + '\\'' +\n+                \", to='\" + to + '\\'' +\n+                \", sourceMessageId=\" + sourceMessageId +\n+                \", type='\" + type + '\\'' +\n+                \", callbackId=\" + callbackId +\n+                '}';\n+    }\n+\n+    public MessageId getId() {\n+        return id;\n+    }\n+\n+    public String getFrom() {\n+        return from;\n+    }\n+\n+    public String getTo() {\n+        return to;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public byte[] getPayload() {\n+        return payload;\n+    }\n+\n+    public CallbackId getCallbackId() {\n+        return callbackId;\n+    }\n+\n+    public Optional<MessageId> getSourceMessageId() {\n+        return Optional.ofNullable(sourceMessageId);\n+    }\n+}"
  },
  {
    "sha": "c5a89c7aeaba996c0fcd1570ec797aa5fe065b68",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageBuilder.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageBuilder.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageBuilder.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageBuilder.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,36 @@\n+package ru.otus.messagesystem.message;\n+\n+import ru.otus.messagesystem.client.CallbackId;\n+import ru.otus.messagesystem.client.ResultDataType;\n+\n+import java.util.UUID;\n+\n+public class MessageBuilder {\n+    private static final Message VOID_MESSAGE =\n+            new Message(new MessageId(UUID.randomUUID().toString()), null, null,\n+                    null, \"voidTechnicalMessage\", new byte[1],  null);\n+\n+    private MessageBuilder() {\n+    }\n+\n+    public static Message getVoidMessage() {\n+        return VOID_MESSAGE;\n+    }\n+\n+    public static <T extends ResultDataType> Message buildMessage(String from, String to, MessageId sourceMessageId,\n+                                                                     T data, MessageType msgType) {\n+        return buildMessage(from, to, sourceMessageId, data, msgType, null);\n+    }\n+\n+    public static <T extends ResultDataType> Message buildReplyMessage(Message message, T data) {\n+        return buildMessage(message.getTo(), message.getFrom(), message.getId(), data,\n+                MessageType.USER_DATA, message.getCallbackId());\n+    }\n+\n+    private static <T extends ResultDataType> Message buildMessage(String from, String to, MessageId sourceMessageId,\n+                                                                     T data, MessageType msgType, CallbackId callbackId) {\n+        String id = UUID.randomUUID().toString();\n+        return new Message(new MessageId(id), from, to, sourceMessageId, msgType.getName(),\n+                Serializers.serialize(data), callbackId == null ? new CallbackId(id) : callbackId);\n+    }\n+}"
  },
  {
    "sha": "5db5f71afa93646a39b97c1b2bfac2ac9029d70b",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageHelper.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageHelper.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageHelper.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageHelper.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,18 @@\n+package ru.otus.messagesystem.message;\n+\n+public class MessageHelper {\n+    private MessageHelper() {\n+    }\n+\n+    public static <T> T getPayload(Message msg) {\n+        return (T) Serializers.deserialize(msg.getPayload());\n+    }\n+\n+    public static byte[] serializeMessage(Message msg) {\n+        return Serializers.serialize(msg);\n+    }\n+\n+    public static Message deSerializeMessage(byte[] bytes) {\n+        return (Message) Serializers.deserialize(bytes);\n+    }\n+}"
  },
  {
    "sha": "19bbec4f91cc667466f9d444b17becc04c6ba52d",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageId.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageId.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageId.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageId.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,37 @@\n+package ru.otus.messagesystem.message;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+public class MessageId implements Serializable {\n+    private static final long serialVersionUID = 1L;\n+    private final String id;\n+\n+    public MessageId(String id) {\n+        this.id = id;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"MessageId{\" +\n+                \"id=\" + id +\n+                '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        MessageId messageId = (MessageId) o;\n+        return Objects.equals(id, messageId.id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id);\n+    }\n+}"
  },
  {
    "sha": "105cdfe5f497ef34bbc9bedcd9e55545825d9bde",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageType.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageType.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageType.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/MessageType.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.otus.messagesystem.message;\n+\n+public enum MessageType {\n+    USER_DATA(\"UserData\");\n+\n+    private final String name;\n+\n+    MessageType(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+}"
  },
  {
    "sha": "2f0494946951841eaf519e173b9293133a5edab9",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/SerializerError.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/SerializerError.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/SerializerError.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/SerializerError.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,8 @@\n+package ru.otus.messagesystem.message;\n+\n+public class SerializerError extends RuntimeException {\n+\n+    public SerializerError(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+}"
  },
  {
    "sha": "a4e8f32ec73c322cb3a9c052a6660149b0615846",
    "filename": "hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/Serializers.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/Serializers.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/Serializers.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/main/java/ru/otus/messagesystem/message/Serializers.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,31 @@\n+package ru.otus.messagesystem.message;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+\n+class Serializers {\n+    private Serializers() {\n+    }\n+\n+    static byte[] serialize(Object data) {\n+        try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+             ObjectOutputStream os = new ObjectOutputStream(baos)) {\n+            os.writeObject(data);\n+            os.flush();\n+            return baos.toByteArray();\n+        } catch (Exception e) {\n+            throw new SerializerError(\"Serialization error\", e);\n+        }\n+    }\n+\n+    static Object deserialize(byte[] data) {\n+        try (ByteArrayInputStream bis = new ByteArrayInputStream(data);\n+             ObjectInputStream is = new ObjectInputStream(bis)) {\n+            return is.readObject();\n+        } catch (Exception e) {\n+            throw new SerializerError(\"DeSerialization error\", e);\n+        }\n+    }\n+}"
  },
  {
    "sha": "992e2b68d50cfa81e443944e1d4f8a8f9a6efaa2",
    "filename": "hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/MessageHelperTest.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/MessageHelperTest.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/MessageHelperTest.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/MessageHelperTest.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,29 @@\n+package ru.otus.messagesystem.message;\n+\n+import org.junit.jupiter.api.Test;\n+import ru.otus.messagesystem.client.CallbackId;\n+import java.util.UUID;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+class MessageHelperTest {\n+\n+    @Test\n+    void serializeDeSerializeMessage() {\n+        Message msgExpected = new Message(new MessageId(UUID.randomUUID().toString()), \"from\", \"to\",\n+                new MessageId(UUID.randomUUID().toString()), \"type\",\n+                new byte[12], new CallbackId(UUID.randomUUID().toString()));\n+\n+        byte[] data = MessageHelper.serializeMessage(msgExpected);\n+\n+        Message msg = MessageHelper.deSerializeMessage(data);\n+\n+        assertThat(msg.getId()).isEqualTo(msgExpected.getId());\n+        assertThat(msg.getFrom()).isEqualTo(msgExpected.getFrom());\n+        assertThat(msg.getTo()).isEqualTo(msgExpected.getTo());\n+        assertThat(msg.getSourceMessageId()).isEqualTo(msgExpected.getSourceMessageId());\n+        assertThat(msg.getType()).isEqualTo(msgExpected.getType());\n+        assertThat(msg.getPayload()).isEqualTo(msgExpected.getPayload());\n+        assertThat(msg.getCallbackId()).isEqualTo(msgExpected.getCallbackId());\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "14b36e1f1139ddde761778da469c65052b39b220",
    "filename": "hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/SerializersTest.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/SerializersTest.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/SerializersTest.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/SerializersTest.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,23 @@\n+package ru.otus.messagesystem.message;\n+\n+import org.junit.jupiter.api.Test;\n+import ru.otus.messagesystem.client.CallbackId;\n+import ru.otus.messagesystem.client.MessageCallback;\n+import ru.otus.messagesystem.client.ResultDataType;\n+\n+import java.util.function.Consumer;\n+\n+import static org.assertj.core.api.Assertions.*;\n+\n+class SerializersTest {\n+\n+    @Test\n+    void serializeDeSerialize() {\n+        TestData testData = new TestData(1, \"str\", 2);\n+\n+        byte[] data = Serializers.serialize(testData);\n+\n+        TestData object = (TestData) Serializers.deserialize(data);\n+        assertThat(object).isEqualTo(testData);\n+    }\n+}"
  },
  {
    "sha": "c1b2aa0fc7172822d4482a84c1b520c390bedcc2",
    "filename": "hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/TestData.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/TestData.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/TestData.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/MessageSystem/src/test/java/ru/otus/messagesystem/message/TestData.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,40 @@\n+package ru.otus.messagesystem.message;\n+\n+import ru.otus.messagesystem.client.ResultDataType;\n+import java.util.Objects;\n+\n+class TestData extends ResultDataType {\n+    int x;\n+    String str;\n+    int y;\n+\n+    TestData(int x, String str, int y) {\n+        this.x = x;\n+        this.str = str;\n+        this.y = y;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        TestData testData = (TestData) o;\n+        return x == testData.x &&\n+                y == testData.y &&\n+                Objects.equals(str, testData.str);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(x, str, y);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"TestData{\" +\n+                \"x=\" + x +\n+                \", str='\" + str + '\\'' +\n+                \", y=\" + y +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "3fd75a95b349bb28ff9f26eb5dbe3933b7088600",
    "filename": "hw30-ms/WebServ/build.gradle",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/WebServ/build.gradle",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/WebServ/build.gradle",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/WebServ/build.gradle?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,31 @@\n+plugins {\n+    id 'java'\n+    id 'org.springframework.boot' version '2.4.2'\n+}\n+\n+sourceCompatibility = JavaVersion.VERSION_15\n+targetCompatibility = JavaVersion.VERSION_15\n+\n+dependencies {\n+    implementation project(':hw30-ms:MessageSystem')\n+\n+    implementation(\"org.springframework.boot:spring-boot-starter-websocket\")\n+    implementation(\"org.springframework.boot:spring-boot-starter-data-jpa\")\n+    implementation(\"org.springframework.boot:spring-boot-starter-thymeleaf\")\n+    implementation(\"org.springframework.boot:spring-boot-starter-web\")\n+    implementation(\"com.h2database:h2\")\n+\n+    implementation(\"org.webjars:webjars-locator-core\")\n+    implementation(\"org.webjars:sockjs-client:${Versions.sockjs}\")\n+    implementation(\"org.webjars:stomp-websocket:${Versions.stomp}\")\n+    implementation(\"org.webjars:bootstrap:${Versions.bootstrap}\")\n+\n+}\n+\n+compileJava.options.encoding = 'UTF-8'\n+\n+tasks.withType(JavaCompile) {\n+    options.with {\n+        encoding = 'UTF-8'\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "8b9604a8419ee9998959b35038905ff28194a621",
    "filename": "hw30-ms/WebServ/src/main/java/ru/otus/core/dao/UserDao.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/WebServ/src/main/java/ru/otus/core/dao/UserDao.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/WebServ/src/main/java/ru/otus/core/dao/UserDao.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/WebServ/src/main/java/ru/otus/core/dao/UserDao.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.otus.core.dao;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import ru.otus.core.model.User;\n+import ru.otus.core.sessionmanager.SessionManager;\n+\n+public interface UserDao {\n+    Optional<User> findById(long id);\n+    Optional<User> findByLogin(String login);\n+    List<User> getAll();\n+\n+    long insertUser(User user);\n+\n+    void updateUser(User user);\n+    void insertOrUpdate(User user);\n+\n+    SessionManager getSessionManager();\n+}"
  },
  {
    "sha": "33d335455ac54a041df5e69afe14b61c2fc60c67",
    "filename": "hw30-ms/WebServ/src/main/java/ru/otus/core/dao/UserDaoException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/WebServ/src/main/java/ru/otus/core/dao/UserDaoException.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/WebServ/src/main/java/ru/otus/core/dao/UserDaoException.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/WebServ/src/main/java/ru/otus/core/dao/UserDaoException.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.otus.core.dao;\n+\n+public class UserDaoException extends RuntimeException {\n+    public UserDaoException(Exception ex) {\n+        super(ex);\n+    }\n+}"
  },
  {
    "sha": "899104d290c1b5b697fd1e78da29f80c1373390d",
    "filename": "hw30-ms/WebServ/src/main/java/ru/otus/core/model/User.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/WebServ/src/main/java/ru/otus/core/model/User.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/WebServ/src/main/java/ru/otus/core/model/User.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/WebServ/src/main/java/ru/otus/core/model/User.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,67 @@\n+package ru.otus.core.model;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+import javax.persistence.UniqueConstraint;\n+\n+\n+@Entity\n+@Table(\n+        name=\"users\",\n+        uniqueConstraints = @UniqueConstraint(columnNames = {\"login\"})\n+)\n+public class User {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE)\n+    @Column(name = \"id\")\n+    private long id;\n+\n+    @Column(name = \"login\")\n+    private String login;\n+\n+    @Column(name = \"pass\")\n+    private String pass;\n+\n+\n+    public User() {\n+\n+    }\n+\n+    public User(long id, String login, String pass) {\n+        this.id = id;\n+        this.login = login;\n+        this.pass = pass;\n+    }\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public String getLogin() {\n+        return login;\n+    }\n+\n+    public String getPass() {\n+        return pass;\n+    }\n+\n+    public void setLogin(String login) {\n+        this.login = login;\n+    }\n+\n+    public void setPass(String pass) {\n+        this.pass = pass;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"User{\" +\n+                \"id=\" + id +\n+                \", login='\" + login + '\\'' +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "5e38b516071e4bf1292cf9d07e34f0c44da81630",
    "filename": "hw30-ms/WebServ/src/main/java/ru/otus/core/service/DBServiceUser.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/tikskit/otus-java-dev-class/blob/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/WebServ/src/main/java/ru/otus/core/service/DBServiceUser.java",
    "raw_url": "https://github.com/tikskit/otus-java-dev-class/raw/84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e/hw30-ms/WebServ/src/main/java/ru/otus/core/service/DBServiceUser.java",
    "contents_url": "https://api.github.com/repos/tikskit/otus-java-dev-class/contents/hw30-ms/WebServ/src/main/java/ru/otus/core/service/DBServiceUser.java?ref=84d4a0aa53e99d9e0113f3d7dff484ae2ffc269e",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.otus.core.service;\n+\n+import ru.otus.core.model.User;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface DBServiceUser {\n+\n+    long saveUser(User user);\n+\n+    Optional<User> getUser(long id);\n+    Optional<User> findByLogin(String login);\n+    List<User> getAll();\n+}"
  }
]
