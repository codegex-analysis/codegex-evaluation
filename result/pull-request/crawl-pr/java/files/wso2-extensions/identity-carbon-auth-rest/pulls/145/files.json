[
  {
    "sha": "be7f72dab04b2bd77fc21aa48c20d33a740729ac",
    "filename": "components/org.wso2.carbon.identity.context.rewrite.valve/src/main/java/org/wso2/carbon/identity/context/rewrite/valve/TenantContextRewriteValve.java",
    "status": "modified",
    "additions": 49,
    "deletions": 12,
    "changes": 61,
    "blob_url": "https://github.com/wso2-extensions/identity-carbon-auth-rest/blob/5dcc59731c4781fbac7e6110997304933cdb1096/components/org.wso2.carbon.identity.context.rewrite.valve/src/main/java/org/wso2/carbon/identity/context/rewrite/valve/TenantContextRewriteValve.java",
    "raw_url": "https://github.com/wso2-extensions/identity-carbon-auth-rest/raw/5dcc59731c4781fbac7e6110997304933cdb1096/components/org.wso2.carbon.identity.context.rewrite.valve/src/main/java/org/wso2/carbon/identity/context/rewrite/valve/TenantContextRewriteValve.java",
    "contents_url": "https://api.github.com/repos/wso2-extensions/identity-carbon-auth-rest/contents/components/org.wso2.carbon.identity.context.rewrite.valve/src/main/java/org/wso2/carbon/identity/context/rewrite/valve/TenantContextRewriteValve.java?ref=5dcc59731c4781fbac7e6110997304933cdb1096",
    "patch": "@@ -23,6 +23,7 @@\n import org.apache.catalina.connector.Request;\n import org.apache.catalina.connector.Response;\n import org.apache.catalina.valves.ValveBase;\n+import org.apache.commons.io.FileUtils;\n import org.apache.commons.lang.StringUtils;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -38,8 +39,14 @@\n import org.wso2.carbon.identity.core.util.IdentityUtil;\n import org.wso2.carbon.user.api.UserStoreException;\n import org.wso2.carbon.user.core.tenant.TenantManager;\n+import org.wso2.carbon.utils.CarbonUtils;\n \n+import java.io.File;\n import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n@@ -120,7 +127,7 @@ public void invoke(Request request, Response response) throws IOException, Servl\n                             \" domain via /t/carbon.super context. Super tenant should be invoked without the tenant \" +\n                             \"in context path using the server base path.\");\n                 }\n-                handleRestrictedTenantDomainErrorResponse(response);\n+                handleRestrictedTenantDomainErrorResponse(request, response);\n \n             } else {\n                 IdentityUtil.threadLocalProperties.get().put(TENANT_NAME_FROM_CONTEXT, tenantDomain);\n@@ -273,17 +280,47 @@ private void handleInvalidTenantDomainErrorResponse(Response response, int error\n         response.getWriter().print(errorResponse.toString());\n     }\n \n-    private void handleRestrictedTenantDomainErrorResponse(Response response) throws IOException, ServletException {\n+    private void handleRestrictedTenantDomainErrorResponse(Request request, Response response) throws IOException {\n+\n+        String requestContentType = request.getContentType();\n+        if (StringUtils.contains(requestContentType, \"application/json\")) {\n+            response.setContentType(\"application/json\");\n+            response.setStatus(HttpServletResponse.SC_FORBIDDEN);\n+            response.setCharacterEncoding(\"UTF-8\");\n+            JsonObject errorResponse = new JsonObject();\n+            errorResponse.addProperty(\"code\", HttpServletResponse.SC_FORBIDDEN);\n+            String errorMsg = \"Access to super tenant domain over tenanted URL format (/t/carbon.super) is restricted. \"\n+                    + \"Please use the server base path instead.\";\n+            errorResponse.addProperty(\"message\", errorMsg);\n+            errorResponse.addProperty(\"description\", errorMsg);\n+            response.getWriter().print(errorResponse.toString());\n+        } else {\n+            response.setContentType(\"text/html\");\n+            String errorPage = loadPageNotFoundErrorPage();\n+            response.getWriter().print(errorPage);\n+        }\n+    }\n \n-        response.setContentType(\"application/json\");\n-        response.setStatus(HttpServletResponse.SC_FORBIDDEN);\n-        response.setCharacterEncoding(\"UTF-8\");\n-        JsonObject errorResponse = new JsonObject();\n-        String errorMsg = \"Access to super tenant domain over tenanted URL format (/t/carbon.super) is restricted. \" +\n-                \"Please use the server base path instead.\";\n-        errorResponse.addProperty(\"code\", HttpServletResponse.SC_FORBIDDEN);\n-        errorResponse.addProperty(\"message\", errorMsg);\n-        errorResponse.addProperty(\"description\", errorMsg);\n-        response.getWriter().print(errorResponse.toString());\n+    private String loadPageNotFoundErrorPage() {\n+\n+        String errorPage = \"Page Not Found\";\n+        try {\n+            Path pageNotFoundHtmlResponse =\n+                    Paths.get(CarbonUtils.getCarbonHome(), \"repository\", \"resources\", \"identity\", \"pages\",\n+                            \"page_not_found.html\");\n+            if (!Files.exists(pageNotFoundHtmlResponse) ||\n+                    !Files.isRegularFile(pageNotFoundHtmlResponse)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"pageNotFoundHtmlResponse is not present at: \" + pageNotFoundHtmlResponse);\n+                }\n+            }\n+            File file = new File(pageNotFoundHtmlResponse.toString());\n+            errorPage = FileUtils.readFileToString(file, StandardCharsets.UTF_8);\n+        } catch (IOException e) {\n+            log.warn(\n+                    \"File page_not_found.html not found. The default content will be used \" +\n+                            \"as the error page content.\");\n+        }\n+        return errorPage;\n     }\n }"
  }
]
