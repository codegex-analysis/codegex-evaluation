[
  {
    "sha": "e3cc9eca2981b2df637e345219cf172b4b2c77d6",
    "filename": "components/org.wso2.carbon.identity.application.authenticator.basicauth/src/test/java/org/wso2/carbon/identity/application/authenticator/basicauth/BasicAuthenticatorTestCase.java",
    "status": "modified",
    "additions": 90,
    "deletions": 4,
    "changes": 94,
    "blob_url": "https://github.com/wso2-extensions/identity-local-auth-basicauth/blob/2cafafcedfc066ca6b7dfbee40e02942b3662cb6/components/org.wso2.carbon.identity.application.authenticator.basicauth/src/test/java/org/wso2/carbon/identity/application/authenticator/basicauth/BasicAuthenticatorTestCase.java",
    "raw_url": "https://github.com/wso2-extensions/identity-local-auth-basicauth/raw/2cafafcedfc066ca6b7dfbee40e02942b3662cb6/components/org.wso2.carbon.identity.application.authenticator.basicauth/src/test/java/org/wso2/carbon/identity/application/authenticator/basicauth/BasicAuthenticatorTestCase.java",
    "contents_url": "https://api.github.com/repos/wso2-extensions/identity-local-auth-basicauth/contents/components/org.wso2.carbon.identity.application.authenticator.basicauth/src/test/java/org/wso2/carbon/identity/application/authenticator/basicauth/BasicAuthenticatorTestCase.java?ref=2cafafcedfc066ca6b7dfbee40e02942b3662cb6",
    "patch": "@@ -570,11 +570,97 @@ public void processAuthenticationResponseTestcaseWithuserStoreException() throws\n         when(BasicAuthenticatorServiceComponent.getRealmService()).thenReturn(mockRealmService);\n         mockRealm = mock(UserRealm.class);\n         mockUserStoreManager = mock(UserStoreManager.class);\n-        when(BasicAuthenticatorServiceComponent.getRealmService().getTenantUserRealm(-1234)).thenThrow(new org\n-                .wso2.carbon.user.api.UserStoreException());\n+        when(BasicAuthenticatorServiceComponent.getRealmService().getTenantUserRealm(dummyTenantId))\n+                .thenReturn(mockRealm);\n+        when(mockRealm.getUserStoreManager()).thenReturn(mockUserStoreManager);\n+\n+        mockStatic(MultitenantUtils.class);\n+        when(MultitenantUtils.getTenantAwareUsername(dummyUserName)).thenReturn(dummyUserName);\n+\n+        when(mockUserStoreManager.authenticate(dummyUserName, dummyUserName)).thenThrow(\n+                new org.wso2.carbon.user.core.UserStoreException(\n+                        new org.wso2.carbon.user.core.UserStoreClientException()));\n         try {\n-            basicAuthenticator.processAuthenticationResponse(\n-                    mockRequest, mockResponse, mockAuthnCtxt);\n+            basicAuthenticator.processAuthenticationResponse(mockRequest, mockResponse, mockAuthnCtxt);\n+        } catch (AuthenticationFailedException e) {\n+            assertNotNull(e);\n+        }\n+    }\n+\n+    @Test\n+    public void processAuthenticationResponseTestcaseWithUserStoreClientException() throws Exception {\n+\n+        mockAuthnCtxt = mock(AuthenticationContext.class);\n+        when(mockAuthnCtxt.getProperties()).thenReturn(null);\n+\n+        mockRequest = mock(HttpServletRequest.class);\n+        when(mockRequest.getParameter(BasicAuthenticatorConstants.USER_NAME)).thenReturn(dummyUserName);\n+        when(mockRequest.getParameter(BasicAuthenticatorConstants.PASSWORD)).thenReturn(dummyUserName);\n+\n+        mockResponse = mock(HttpServletResponse.class);\n+\n+        mockStatic(IdentityTenantUtil.class);\n+        when(IdentityTenantUtil.getTenantIdOfUser(dummyUserName)).thenReturn(-1234);\n+\n+        mockStatic(FrameworkUtils.class);\n+        when(FrameworkUtils.preprocessUsername(dummyUserName, mockAuthnCtxt)).thenReturn(dummyUserName);\n+\n+        mockStatic(User.class);\n+        mockUser = mock(User.class);\n+        when(User.getUserFromUserName(anyString())).thenReturn(mockUser);\n+\n+        mockStatic(BasicAuthenticatorServiceComponent.class);\n+        mockRealmService = mock(RealmService.class);\n+        when(BasicAuthenticatorServiceComponent.getRealmService()).thenReturn(mockRealmService);\n+        mockRealm = mock(UserRealm.class);\n+        mockUserStoreManager = mock(UserStoreManager.class);\n+        when(BasicAuthenticatorServiceComponent.getRealmService().getTenantUserRealm(dummyTenantId))\n+                .thenReturn(mockRealm);\n+        when(mockRealm.getUserStoreManager()).thenReturn(mockUserStoreManager);\n+\n+        mockStatic(MultitenantUtils.class);\n+        when(MultitenantUtils.getTenantAwareUsername(dummyUserName)).thenReturn(dummyUserName);\n+\n+        when(mockUserStoreManager.authenticate(dummyUserName, dummyUserName))\n+                .thenThrow(new org.wso2.carbon.user.core.UserStoreClientException());\n+        try {\n+            basicAuthenticator.processAuthenticationResponse(mockRequest, mockResponse, mockAuthnCtxt);\n+        } catch (AuthenticationFailedException e) {\n+            assertNotNull(e);\n+        }\n+    }\n+\n+    @Test\n+    public void processAuthenticationResponseTestcaseWithUserStoreManagerException() throws Exception {\n+\n+        mockAuthnCtxt = mock(AuthenticationContext.class);\n+        when(mockAuthnCtxt.getProperties()).thenReturn(null);\n+\n+        mockRequest = mock(HttpServletRequest.class);\n+        when(mockRequest.getParameter(BasicAuthenticatorConstants.USER_NAME)).thenReturn(dummyUserName);\n+        when(mockRequest.getParameter(BasicAuthenticatorConstants.PASSWORD)).thenReturn(dummyUserName);\n+\n+        mockResponse = mock(HttpServletResponse.class);\n+\n+        mockStatic(IdentityTenantUtil.class);\n+        when(IdentityTenantUtil.getTenantIdOfUser(dummyUserName)).thenReturn(-1234);\n+\n+        mockStatic(FrameworkUtils.class);\n+        when(FrameworkUtils.preprocessUsername(dummyUserName, mockAuthnCtxt)).thenReturn(dummyUserName);\n+\n+        mockStatic(User.class);\n+        mockUser = mock(User.class);\n+        when(User.getUserFromUserName(anyString())).thenReturn(mockUser);\n+\n+        mockStatic(BasicAuthenticatorServiceComponent.class);\n+        mockRealmService = mock(RealmService.class);\n+        when(BasicAuthenticatorServiceComponent.getRealmService()).thenReturn(mockRealmService);\n+        mockRealm = mock(UserRealm.class);\n+        mockUserStoreManager = mock(UserStoreManager.class);\n+        when(BasicAuthenticatorServiceComponent.getRealmService().getTenantUserRealm(dummyTenantId))\n+                .thenThrow(new org.wso2.carbon.user.api.UserStoreException());\n+        try {\n+            basicAuthenticator.processAuthenticationResponse(mockRequest, mockResponse, mockAuthnCtxt);\n         } catch (AuthenticationFailedException e) {\n             assertNotNull(e);\n         }"
  }
]
