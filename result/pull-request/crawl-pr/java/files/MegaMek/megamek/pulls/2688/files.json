[
  {
    "sha": "c6626f31fc8574d9f6c0588fdf4e179dfbe9ce55",
    "filename": "megamek/src/megamek/common/Compute.java",
    "status": "modified",
    "additions": 48,
    "deletions": 1,
    "changes": 49,
    "blob_url": "https://github.com/MegaMek/megamek/blob/7b5c534b69a34829d45b81f8026e0534f91cd503/megamek/src/megamek/common/Compute.java",
    "raw_url": "https://github.com/MegaMek/megamek/raw/7b5c534b69a34829d45b81f8026e0534f91cd503/megamek/src/megamek/common/Compute.java",
    "contents_url": "https://api.github.com/repos/MegaMek/megamek/contents/megamek/src/megamek/common/Compute.java?ref=7b5c534b69a34829d45b81f8026e0534f91cd503",
    "patch": "@@ -13,7 +13,6 @@\n * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more\n * details.\n */\n-\n package megamek.common;\n \n import java.util.ArrayList;\n@@ -196,6 +195,54 @@ public static int d6() {\n         return roll.getIntValue();\n     }\n \n+    /**\n+     * Input is in format \"ndf\", so this can handle 2d6 or 3d10\n+     * @param number the number of dice to roll\n+     * @param faces  the number of faces on those dice\n+     * @return an Integer list of every dice roll, with index 0 containing the summed result\n+     */\n+    public static List<Integer> individualDice(final int number, final int faces) {\n+        final List<Integer> individualRolls = new ArrayList<>();\n+        int result = 0, roll;\n+        individualRolls.add(result);\n+\n+        for (int i = 0; i < number; i++) {\n+            roll = randomInt(faces) + 1;\n+            individualRolls.add(roll);\n+            result += roll;\n+        }\n+\n+        individualRolls.set(0, result);\n+\n+        return individualRolls;\n+    }\n+\n+    /**\n+     * Input is in format \"c ndf\", so that this can handle 10 rolls of 3d6\n+     * @param count  the count of sets of dice to roll\n+     * @param number the number of dice to roll per set\n+     * @param faces  the number of faces per die\n+     * @return an Integer list of every summed dice roll, with index 0 containing the summed result\n+     */\n+    public static List<Integer> individualRolls(int count, int number, int faces) {\n+        List<Integer> individualRolls = new ArrayList<>();\n+        int result = 0, roll;\n+        individualRolls.add(result);\n+\n+        for (int x = 0; x < count; x++) {\n+            roll = 0;\n+            for (int y = 0; y < number; y++) {\n+                roll += randomInt(faces) + 1;\n+            }\n+            individualRolls.add(roll);\n+            result += roll;\n+        }\n+\n+        individualRolls.set(0, result);\n+\n+        return individualRolls;\n+    }\n+\n     /**\n      * Wrapper to random#randomInt(n)\n      */"
  }
]
