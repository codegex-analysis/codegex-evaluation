[
  {
    "sha": "700882e04e7103f0034ed3b1da5adefbba37129a",
    "filename": ".github/workflows/maven.yml",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/YuliyaMuraveva/product_manager/blob/22cca609aa38d632d0cd4e2988135ff73dd55965/.github/workflows/maven.yml",
    "raw_url": "https://github.com/YuliyaMuraveva/product_manager/raw/22cca609aa38d632d0cd4e2988135ff73dd55965/.github/workflows/maven.yml",
    "contents_url": "https://api.github.com/repos/YuliyaMuraveva/product_manager/contents/.github/workflows/maven.yml?ref=22cca609aa38d632d0cd4e2988135ff73dd55965",
    "patch": "@@ -0,0 +1,25 @@\n+# This workflow will build a Java project with Maven\n+# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven\n+\n+name: Java CI with Maven\n+\n+on:\n+  push:\n+    branches: [ master, manager, rich_model ]\n+  pull_request:\n+    branches: [ master, manager, rich_model ]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up JDK 11\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 11\n+    - name: Build with Maven\n+      run: mvn -B -e verify\n+      "
  },
  {
    "sha": "32e89a61ab7b2f6c0712f764221fdc97b804d214",
    "filename": "src/main/java/ru/netology/domain/Book.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/YuliyaMuraveva/product_manager/blob/22cca609aa38d632d0cd4e2988135ff73dd55965/src/main/java/ru/netology/domain/Book.java",
    "raw_url": "https://github.com/YuliyaMuraveva/product_manager/raw/22cca609aa38d632d0cd4e2988135ff73dd55965/src/main/java/ru/netology/domain/Book.java",
    "contents_url": "https://api.github.com/repos/YuliyaMuraveva/product_manager/contents/src/main/java/ru/netology/domain/Book.java?ref=22cca609aa38d632d0cd4e2988135ff73dd55965",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.netology.domain;\n+\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+\n+@Data\n+@EqualsAndHashCode(callSuper = true)\n+public class Book extends Product {\n+    private String author;\n+\n+    public Book() {\n+        super();\n+    }\n+\n+    public Book(int id, String name, String author) {\n+        super(id, name);\n+        this.author = author;\n+    }\n+\n+    @Override\n+    public boolean matches(String search) {\n+        return super.matches(search) || this.getAuthor().equalsIgnoreCase(search);\n+    }\n+}"
  },
  {
    "sha": "49978136783a97e6cd1e48f6e5001cae0bfb56a4",
    "filename": "src/main/java/ru/netology/domain/Product.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/YuliyaMuraveva/product_manager/blob/22cca609aa38d632d0cd4e2988135ff73dd55965/src/main/java/ru/netology/domain/Product.java",
    "raw_url": "https://github.com/YuliyaMuraveva/product_manager/raw/22cca609aa38d632d0cd4e2988135ff73dd55965/src/main/java/ru/netology/domain/Product.java",
    "contents_url": "https://api.github.com/repos/YuliyaMuraveva/product_manager/contents/src/main/java/ru/netology/domain/Product.java?ref=22cca609aa38d632d0cd4e2988135ff73dd55965",
    "patch": "@@ -0,0 +1,21 @@\n+package ru.netology.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import ru.netology.repository.ProductRepository;\n+\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Data\n+public class Product {\n+    private int id;\n+    private String name;\n+\n+    public boolean matches(String search) {\n+        if (this.getName().equalsIgnoreCase(search)) {\n+            return true;\n+            }\n+            return false;\n+        }\n+}"
  },
  {
    "sha": "0d47145f54a65bfbf9978f280d065e9fd90ee881",
    "filename": "src/main/java/ru/netology/domain/Smartphone.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/YuliyaMuraveva/product_manager/blob/22cca609aa38d632d0cd4e2988135ff73dd55965/src/main/java/ru/netology/domain/Smartphone.java",
    "raw_url": "https://github.com/YuliyaMuraveva/product_manager/raw/22cca609aa38d632d0cd4e2988135ff73dd55965/src/main/java/ru/netology/domain/Smartphone.java",
    "contents_url": "https://api.github.com/repos/YuliyaMuraveva/product_manager/contents/src/main/java/ru/netology/domain/Smartphone.java?ref=22cca609aa38d632d0cd4e2988135ff73dd55965",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.netology.domain;\n+\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+\n+@Data\n+@EqualsAndHashCode(callSuper = true)\n+public class Smartphone extends Product{\n+    private String manufacturer;\n+\n+    public Smartphone() {\n+        super();\n+    }\n+\n+    public Smartphone(int id, String name, String manufacturer) {\n+        super(id, name);\n+        this.manufacturer = manufacturer;\n+    }\n+\n+    @Override\n+    public boolean matches(String search) {\n+        return super.matches(search) || this.getManufacturer().equalsIgnoreCase(search);\n+    }\n+}"
  },
  {
    "sha": "6144695d3c4aa1ac55dff68142cd17d2c93f18bb",
    "filename": "src/main/java/ru/netology/manager/ProductManager.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/YuliyaMuraveva/product_manager/blob/22cca609aa38d632d0cd4e2988135ff73dd55965/src/main/java/ru/netology/manager/ProductManager.java",
    "raw_url": "https://github.com/YuliyaMuraveva/product_manager/raw/22cca609aa38d632d0cd4e2988135ff73dd55965/src/main/java/ru/netology/manager/ProductManager.java",
    "contents_url": "https://api.github.com/repos/YuliyaMuraveva/product_manager/contents/src/main/java/ru/netology/manager/ProductManager.java?ref=22cca609aa38d632d0cd4e2988135ff73dd55965",
    "patch": "@@ -0,0 +1,32 @@\n+package ru.netology.manager;\n+\n+import ru.netology.domain.Book;\n+import ru.netology.domain.Product;\n+import ru.netology.domain.Smartphone;\n+import ru.netology.repository.ProductRepository;\n+\n+public class ProductManager {\n+    private ProductRepository repository;\n+\n+    public ProductManager(ProductRepository repository) {\n+        this.repository = repository;\n+    }\n+\n+    public void add(Product product) {\n+        repository.save(product);\n+    }\n+\n+    public Product[] searchBy(String text) {\n+        Product[] items = repository.findAll();\n+        Product[] findProduct = new Product[0];\n+        for (int i = 0; i < items.length; i++) {\n+            if (items[i].matches(text)) {\n+                Product[] tmp = new Product[findProduct.length + 1];\n+                System.arraycopy(findProduct, 0, tmp,0, findProduct.length);\n+                tmp[tmp.length - 1] = items[i];\n+                findProduct = tmp;\n+            }\n+        }\n+        return findProduct;\n+    }\n+}"
  },
  {
    "sha": "608e7f4bd8c7b4063d0d70c4209dc7ad01327ea6",
    "filename": "src/main/java/ru/netology/repository/ProductRepository.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/YuliyaMuraveva/product_manager/blob/22cca609aa38d632d0cd4e2988135ff73dd55965/src/main/java/ru/netology/repository/ProductRepository.java",
    "raw_url": "https://github.com/YuliyaMuraveva/product_manager/raw/22cca609aa38d632d0cd4e2988135ff73dd55965/src/main/java/ru/netology/repository/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/YuliyaMuraveva/product_manager/contents/src/main/java/ru/netology/repository/ProductRepository.java?ref=22cca609aa38d632d0cd4e2988135ff73dd55965",
    "patch": "@@ -0,0 +1,32 @@\n+package ru.netology.repository;\n+\n+import ru.netology.domain.Product;\n+\n+public class ProductRepository {\n+    private Product[] items = new Product[0];\n+\n+    public void save(Product item) {\n+        int length = items.length + 1;\n+        Product[] tmp = new Product[length];\n+        System.arraycopy(items, 0, tmp,0, items.length);\n+        tmp[tmp.length - 1] = item;\n+        items = tmp;\n+    }\n+\n+    public Product[] findAll() {\n+        return items;\n+    }\n+\n+    public void removeById(int id) {\n+        int length = items.length - 1;\n+        Product[] tmp = new Product[length];\n+        int index = 0;\n+        for (Product item : items) {\n+            if (item.getId() != id) {\n+                tmp[index] = item;\n+                index++;\n+            }\n+        }\n+        items = tmp;\n+    }\n+}"
  },
  {
    "sha": "f6a8598ac6401b45af8020c4e9ec767f296b85f6",
    "filename": "src/test/java/ru/netology/manager/ProductManagerEmptyTest.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/YuliyaMuraveva/product_manager/blob/22cca609aa38d632d0cd4e2988135ff73dd55965/src/test/java/ru/netology/manager/ProductManagerEmptyTest.java",
    "raw_url": "https://github.com/YuliyaMuraveva/product_manager/raw/22cca609aa38d632d0cd4e2988135ff73dd55965/src/test/java/ru/netology/manager/ProductManagerEmptyTest.java",
    "contents_url": "https://api.github.com/repos/YuliyaMuraveva/product_manager/contents/src/test/java/ru/netology/manager/ProductManagerEmptyTest.java?ref=22cca609aa38d632d0cd4e2988135ff73dd55965",
    "patch": "@@ -0,0 +1,45 @@\n+package ru.netology.manager;\n+\n+import org.junit.jupiter.api.Test;\n+import ru.netology.domain.Book;\n+import ru.netology.domain.Product;\n+import ru.netology.repository.ProductRepository;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class ProductManagerEmptyTest {\n+    private ProductRepository repository = new ProductRepository();\n+    private ProductManager manager = new ProductManager(repository);\n+    private Book first = new Book(1, \"Head First Java\", \"Kathy Sierra\");\n+    private Product fifth = new Product(5, \"teapot\");\n+\n+    @Test\n+    void shouldGetAll() {\n+        Product[] actual = repository.findAll();\n+        Product[] expected = new Product[0];\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void shouldSearchByInEmpty() {\n+        Product[] actual = manager.searchBy(\"Head First Java\");\n+        Product[] expected = new Product[0];\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void shouldSearchByInOneItem() {\n+        manager.add(first);\n+        Product[] actual = manager.searchBy(\"Head First Java\");\n+        Product[] expected = new Product[]{first};\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void shouldSearchByInOneItemInProduct() {\n+        manager.add(fifth);\n+        Product[] actual = manager.searchBy(\"teapot\");\n+        Product[] expected = new Product[]{fifth};\n+        assertArrayEquals(expected, actual);\n+    }\n+}"
  },
  {
    "sha": "b44045537536519dfb888d06eb1f6e345de903c3",
    "filename": "src/test/java/ru/netology/manager/ProductManagerNonEmptyTest.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/YuliyaMuraveva/product_manager/blob/22cca609aa38d632d0cd4e2988135ff73dd55965/src/test/java/ru/netology/manager/ProductManagerNonEmptyTest.java",
    "raw_url": "https://github.com/YuliyaMuraveva/product_manager/raw/22cca609aa38d632d0cd4e2988135ff73dd55965/src/test/java/ru/netology/manager/ProductManagerNonEmptyTest.java",
    "contents_url": "https://api.github.com/repos/YuliyaMuraveva/product_manager/contents/src/test/java/ru/netology/manager/ProductManagerNonEmptyTest.java?ref=22cca609aa38d632d0cd4e2988135ff73dd55965",
    "patch": "@@ -0,0 +1,79 @@\n+package ru.netology.manager;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import ru.netology.domain.Book;\n+import ru.netology.domain.Product;\n+import ru.netology.domain.Smartphone;\n+import ru.netology.repository.ProductRepository;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class ProductManagerNonEmptyTest {\n+    private ProductRepository repository = new ProductRepository();\n+    private ProductManager manager = new ProductManager(repository);\n+    private Book first = new Book(1, \"Head First Java\", \"Kathy Sierra\");\n+    private Book second = new Book(2, \"Foundations of Software Testing\", \"Cem Kaner\");\n+    private Smartphone third = new Smartphone(3, \"IPhone 8\", \"Apple\");\n+    private Smartphone fourth = new Smartphone(4, \"Galaxy M31\", \"Samsung\");\n+    private Product fifth = new Product(5, \"teapot\");\n+\n+    @BeforeEach\n+    public void setUp() {\n+        repository.save(first);\n+        repository.save(second);\n+        repository.save(third);\n+        repository.save(fourth);\n+        repository.save(fifth);\n+    }\n+\n+    @Test\n+    void shouldGetAll() {\n+        Product[] actual = repository.findAll();\n+        Product[] expected = new Product[]{first, second, third, fourth, fifth};\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void shouldSearchNameInBooks() {\n+        Product[] actual = manager.searchBy(\"foundations of software testing\");\n+        Product[] expected = new Product[]{second};\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void shouldSearchAuthorInBooks() {\n+        Product[] actual = manager.searchBy(\"KATHY SIERRA\");\n+        Product[] expected = new Product[]{first};\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void shouldSearchNameInSmartphones() {\n+        Product[] actual = manager.searchBy(\"ipHONE 8\");\n+        Product[] expected = new Product[]{third};\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void shouldSearchManufacturerInSmartphones() {\n+        Product[] actual = manager.searchBy(\"Samsung\");\n+        Product[] expected = new Product[]{fourth};\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void shouldSearchInProduct() {\n+        Product[] actual = manager.searchBy(\"teapot\");\n+        Product[] expected = new Product[]{fifth};\n+        assertArrayEquals(expected, actual);\n+    }\n+\n+\n+    @Test\n+    void shouldSearchNotInItems() {\n+        Product[] actual = manager.searchBy(\"cup\");\n+        Product[] expected = new Product[0];\n+        assertArrayEquals(expected, actual);\n+    }\n+}"
  }
]
