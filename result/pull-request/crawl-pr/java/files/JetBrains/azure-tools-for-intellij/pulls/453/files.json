[
  {
    "sha": "a9a0365a4271e03f47375e0ae39d3eabd4c410c8",
    "filename": "PluginsAndFeatures/azure-toolkit-for-intellij/rider/resources/META-INF/plugin.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/rider/resources/META-INF/plugin.xml",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/rider/resources/META-INF/plugin.xml",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/PluginsAndFeatures/azure-toolkit-for-intellij/rider/resources/META-INF/plugin.xml?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -30,6 +30,8 @@\n         <h4>Fixed bugs:</h4>\n         <ul>\n           <li>TimerTrigger also support TimeSpan string (<a href=\"https://github.com/JetBrains/azure-tools-for-intellij/issues/434\">#434</a>)</li>\n+          <li>Device login - Subscription lookup improvements (<a href=\"https://github.com/JetBrains/azure-tools-for-intellij/issues/452\">#452</a>)</li>\n+          <li>Better error messages when auth fails (<a href=\"https://github.com/JetBrains/azure-tools-for-intellij/issues/438\">#438</a>)</li>\n         </ul>\n         <p>[3.40.0-2020.3]</p>\n         <ul>"
  },
  {
    "sha": "83422bf0cea6946571f8c8087dd5067672290a1b",
    "filename": "PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/actions/AzureSignInAction.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/actions/AzureSignInAction.java",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/actions/AzureSignInAction.java",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/actions/AzureSignInAction.java?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -140,7 +140,7 @@ public static void onAzureSignIn(Project project) {\n             }\n         } catch (Exception ex) {\n             ex.printStackTrace();\n-            ErrorWindow.show(project, ex.getMessage(), \"AzureSignIn Action Error\");\n+            ErrorWindow.show(project, ex, \"AzureSignIn Action Error\");\n         }\n     }\n "
  },
  {
    "sha": "e36cbafda6a70424026d258d1cfc47607f8fe78d",
    "filename": "PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/actions/SelectSubscriptionsAction.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/actions/SelectSubscriptionsAction.java",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/actions/SelectSubscriptionsAction.java",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/actions/SelectSubscriptionsAction.java?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -91,7 +91,7 @@ public static void onShowSubscriptions(Project project) {\n         }, (ex) -> {\n             ex.printStackTrace();\n             //LOGGER.error(\"onShowSubscriptions\", ex);\n-            ErrorWindow.show(project, ex.getMessage(), \"Select Subscriptions Action Error\");\n+            ErrorWindow.show(project, ex, \"Select Subscriptions Action Error\");\n         });\n     }\n "
  },
  {
    "sha": "ba13308aeca9619e619e6048afacd4bdc14b65ce",
    "filename": "PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/ErrorWindow.java",
    "status": "modified",
    "additions": 19,
    "deletions": 1,
    "changes": 20,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/ErrorWindow.java",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/ErrorWindow.java",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/ErrorWindow.java?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -1,5 +1,6 @@\n /*\n  * Copyright (c) Microsoft Corporation\n+ * Copyright (c) 2021 jetBrains s.r.o.\n  *\n  * All rights reserved.\n  *\n@@ -23,6 +24,8 @@\n package com.microsoft.azuretools.ijidea.ui;\n \n import com.intellij.openapi.project.Project;\n+import com.microsoft.azuretools.adauth.AuthException;\n+import com.microsoft.azuretools.authmanage.AuthExceptionUtil;\n import com.microsoft.intellij.ui.components.AzureDialogWrapper;\n import org.jetbrains.annotations.Nullable;\n \n@@ -38,10 +41,25 @@ public static void show(@Nullable Project project, String message, String title)\n         show(project, message, title, null, null);\n     }\n \n-    public static void show(@Nullable Project project, String message, String title, String okButtonText, Runnable okAction){\n+    public static void show(@Nullable Project project, String message, String title, String okButtonText, Runnable okAction) {\n         ErrorWindow w = new ErrorWindow(project, message, title, okButtonText, okAction);\n         w.show();\n+    }\n+\n+    public static void show(@Nullable Project project, Exception exception, String title) {\n+        show(project, exception, title, null, null);\n+    }\n+\n+    public static void show(@Nullable Project project, Exception exception, String title, String okButtonText, Runnable okAction) {\n+        String message = exception.getMessage();\n \n+        final AuthException authException = AuthExceptionUtil.GetUserRetryableAuthException(exception);\n+        if (authException != null) {\n+            message += \"\\n\\n\" + authException.getErrorMessage();\n+        }\n+\n+        ErrorWindow w = new ErrorWindow(project, message, title, okButtonText, okAction);\n+        w.show();\n     }\n \n     protected ErrorWindow(@Nullable Project project, String message, String title){"
  },
  {
    "sha": "0ac5fe869123991623836d111bb07b0e638cd501",
    "filename": "PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/RemoteDebuggingClientDialog.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/RemoteDebuggingClientDialog.java",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/RemoteDebuggingClientDialog.java",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/RemoteDebuggingClientDialog.java?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -362,7 +362,7 @@ public void run(ProgressIndicator progressIndicator) {\n                     ApplicationManager.getApplication().invokeLater(new Runnable() {\n                         @Override\n                         public void run() {\n-                            ErrorWindow.show(project, ex.getMessage(), title + \"Error\");\n+                            ErrorWindow.show(project, ex, title + \"Error\");\n                         }\n                     });\n                     try {"
  },
  {
    "sha": "058212919a597f57d3450d51c007f6aa4be8d687",
    "filename": "PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/SignInWindow.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/SignInWindow.java",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/SignInWindow.java",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/SignInWindow.java?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -288,7 +288,7 @@ private synchronized BaseADAuthManager doDeviceLogin() {\n             return dcAuthManager;\n         } catch (Exception ex) {\n             ex.printStackTrace();\n-            ErrorWindow.show(project, ex.getMessage(), SIGN_IN_ERROR);\n+            ErrorWindow.show(project, ex, SIGN_IN_ERROR);\n         }\n \n         return null;\n@@ -310,7 +310,7 @@ public void run(ProgressIndicator indicator) {\n                         } catch (Exception ex) {\n                             EventUtil.logError(operation, ErrorType.userError, ex, properties, null);\n                             ApplicationManager.getApplication().invokeLater(\n-                                () -> ErrorWindow.show(project, ex.getMessage(), SIGN_IN_ERROR));\n+                                () -> ErrorWindow.show(project, ex, SIGN_IN_ERROR));\n                         } finally {\n                             EventUtil.logEvent(EventType.info, operation, Collections.singletonMap(\n                                     AZURE_ENVIRONMENT, CommonSettings.getEnvironment().getName()));\n@@ -327,7 +327,7 @@ private void doSignOut() {\n             AuthMethod.DC.getAdAuthManager().signOut();\n         } catch (Exception ex) {\n             ex.printStackTrace();\n-            ErrorWindow.show(project, ex.getMessage(), \"Sign Out Error\");\n+            ErrorWindow.show(project, ex, \"Sign Out Error\");\n         }\n     }\n \n@@ -361,7 +361,7 @@ public void run(ProgressIndicator progressIndicator) {\n                         ApplicationManager.getApplication().invokeLater(new Runnable() {\n                             @Override\n                             public void run() {\n-                                ErrorWindow.show(project, ex.getMessage(), \"Load Subscription Error\");\n+                                ErrorWindow.show(project, ex, \"Load Subscription Error\");\n                             }\n                         });\n \n@@ -415,7 +415,7 @@ public void run() {\n         } catch (Exception ex) {\n             ex.printStackTrace();\n             //LOGGER.error(\"doCreateServicePrincipal\", ex);\n-            ErrorWindow.show(project, ex.getMessage(), \"Get Subscription Error\");\n+            ErrorWindow.show(project, ex, \"Get Subscription Error\");\n \n         } finally {\n             if (dcAuthManager != null) {"
  },
  {
    "sha": "2e86ddd76e5594b4326881d662fabce70430fe5f",
    "filename": "PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/SubscriptionsDialog.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/SubscriptionsDialog.java",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/SubscriptionsDialog.java",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/azuretools/ijidea/ui/SubscriptionsDialog.java?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -131,7 +131,7 @@ private void refreshSubscriptions() {\n         }, (ex) -> {\n                 ex.printStackTrace();\n                 //LOGGER.error(\"refreshSubscriptions\", ex);\n-                ErrorWindow.show(project, ex.getMessage(), \"Refresh Subscriptions Error\");\n+                ErrorWindow.show(project, ex, \"Refresh Subscriptions Error\");\n             });\n     }\n "
  },
  {
    "sha": "8f1b3a6d987b2b5c65826b54279ec543efe7b569",
    "filename": "PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/intellij/AzurePlugin.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/intellij/AzurePlugin.java",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/intellij/AzurePlugin.java",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/intellij/AzurePlugin.java?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -428,6 +428,10 @@ public static void log(String message, Throwable ex) {\n         LOG.error(message, ex);\n     }\n \n+    public static void logWarning(String message, Throwable ex) {\n+        LOG.warn(message, ex);\n+    }\n+\n     public static void log(String message) {\n         LOG.info(message);\n     }"
  },
  {
    "sha": "ac228602481803208e47f1db4a337a1818e9b7ea",
    "filename": "PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/intellij/helpers/UIHelperImpl.java",
    "status": "modified",
    "additions": 57,
    "deletions": 10,
    "changes": 67,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/intellij/helpers/UIHelperImpl.java",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/intellij/helpers/UIHelperImpl.java",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/PluginsAndFeatures/azure-toolkit-for-intellij/src/com/microsoft/intellij/helpers/UIHelperImpl.java?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -1,6 +1,6 @@\n /*\n  * Copyright (c) Microsoft Corporation\n- * Copyright (c) 2018-2020 JetBrains s.r.o.\n+ * Copyright (c) 2018-2021 JetBrains s.r.o.\n  *\n  * All rights reserved.\n  *\n@@ -43,8 +43,11 @@\n import com.intellij.openapi.wm.WindowManager;\n import com.intellij.testFramework.LightVirtualFile;\n import com.intellij.util.ui.UIUtil;\n+import com.microsoft.azure.CloudError;\n+import com.microsoft.azure.CloudException;\n import com.microsoft.azure.management.appplatform.v2019_05_01_preview.implementation.AppResourceInner;\n import com.microsoft.azure.management.storage.StorageAccount;\n+import com.microsoft.azuretools.authmanage.AuthMethodManager;\n import com.microsoft.azuretools.azurecommons.helpers.AzureCmdException;\n import com.microsoft.azuretools.azurecommons.helpers.NotNull;\n import com.microsoft.azuretools.azurecommons.helpers.Nullable;\n@@ -129,20 +132,60 @@ public void showException(@NotNull final String message,\n                               @NotNull final String title,\n                               final boolean appendEx,\n                               final boolean suggestDetail) {\n-        ApplicationManager.getApplication().invokeLater(new Runnable() {\n-            @Override\n-            public void run() {\n-                String headerMessage = getHeaderMessage(message, ex, appendEx, suggestDetail);\n \n-                String details = getDetails(ex);\n+        if (tryNotifyUserRetryableException(message, ex, title)) {\n+            return;\n+        }\n \n-                ErrorMessageForm em = new ErrorMessageForm(title);\n-                em.showErrorMessageForm(headerMessage, details);\n-                em.show();\n-            }\n+        ApplicationManager.getApplication().invokeLater(() -> {\n+            String headerMessage = getHeaderMessage(message, ex, appendEx, suggestDetail);\n+\n+            String details = getDetails(ex);\n+\n+            ErrorMessageForm em = new ErrorMessageForm(title);\n+            em.showErrorMessageForm(headerMessage, details);\n+            em.show();\n         });\n     }\n \n+    private boolean tryNotifyUserRetryableException(\n+            final String message,\n+            final Throwable ex,\n+            final String title) {\n+\n+        if (ex instanceof CloudException) {\n+            final CloudException cloudException = (CloudException)ex;\n+\n+            boolean isSignedIn = false;\n+            try {\n+                isSignedIn = AuthMethodManager.getInstance().isSignedIn();\n+            } catch (Exception e) {\n+                // Intentionally ignoring\n+            }\n+\n+            // Exceptions similar to https://github.com/JetBrains/azure-tools-for-intellij/issues/436\n+            // may be user-retryable. Do further analysis...\n+            // Example: {\"error\":{\"code\":\"InvalidAuthenticationToken\",\"message\":\"The access token is invalid.\"}}\n+            if (!isSignedIn && cloudException.response().code() == 401) {\n+                final CloudError cloudError = cloudException.body();\n+                if (cloudError != null && cloudError.code() != null && \"InvalidAuthenticationToken\".equals(cloudError.code())) {\n+                    // Skip report error form, show a notification instead.\n+                    ApplicationManager.getApplication().invokeLater(() -> {\n+                        showErrorNotification(\n+                                cloudError.message(),\n+                                \"Authorization is required to use Azure resources. Please sign out and sign in again.\");\n+                    });\n+\n+                    logWarning(cloudError.message(), ex);\n+\n+                    return true;\n+                }\n+            }\n+        }\n+\n+        return false;\n+    }\n+\n     @Override\n     public void showError(@NotNull final String message, @NotNull final String title) {\n         showError(null, message, title);\n@@ -198,6 +241,10 @@ public void logError(String message, Throwable ex) {\n         AzurePlugin.log(message, ex);\n     }\n \n+    public void logWarning(String message, Throwable ex) {\n+        AzurePlugin.logWarning(message, ex);\n+    }\n+\n     /**\n      * returns File if file chosen and OK pressed; otherwise returns null\n      * TODO: name confusion, FileChooser vs FileSaver"
  },
  {
    "sha": "e53587ccea180876185d778ae5122b803ccb2439",
    "filename": "Utils/azuretools-core/src/com/microsoft/azuretools/authmanage/AuthExceptionUtil.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/Utils/azuretools-core/src/com/microsoft/azuretools/authmanage/AuthExceptionUtil.java",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/Utils/azuretools-core/src/com/microsoft/azuretools/authmanage/AuthExceptionUtil.java",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/Utils/azuretools-core/src/com/microsoft/azuretools/authmanage/AuthExceptionUtil.java?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright (c) 2021 JetBrains s.r.o.\n+ *\n+ * All rights reserved.\n+ *\n+ * MIT License\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n+ * documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n+ * the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n+ * to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n+ * the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n+ * THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n+ * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.microsoft.azuretools.authmanage;\n+\n+import com.microsoft.azuretools.adauth.AuthError;\n+import com.microsoft.azuretools.adauth.AuthException;\n+import org.apache.commons.lang3.exception.ExceptionUtils;\n+\n+@SuppressWarnings(\"unused\")\n+public final class AuthExceptionUtil {\n+\n+    /**\n+     * When a Throwable is an AuthException that requires the user to re-authenticate,\n+     * such as the one described in https://github.com/JetBrains/azure-tools-for-intellij/issues/438,\n+     * returns the AuthException.\n+     *\n+     * @param throwable Throwable to check.\n+     * @return When a Throwable is an AuthException that requires the user to re-authenticate, returns the AuthException. Returns null otherwise.\n+     */\n+    public static AuthException GetUserRetryableAuthException(Throwable throwable) {\n+\n+        final Throwable rootCause = ExceptionUtils.getRootCause(throwable);\n+        if (rootCause instanceof AuthException) {\n+            final AuthException authException = (AuthException) rootCause;\n+\n+            // See com/microsoft/azuretools/authmanage/AdAuthManager.java:74\n+            // and com/microsoft/azuretools/authmanage/DCAuthManager.java:97\n+            // for similar logic.\n+            if (AuthError.InvalidGrant.equalsIgnoreCase(authException.getError()) ||\n+                    AuthError.InteractionRequired.equalsIgnoreCase(authException.getError())) {\n+\n+                return authException;\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+}"
  },
  {
    "sha": "54e60fdf309e52bc38a1fce3577bf66339cde79a",
    "filename": "Utils/azuretools-core/src/com/microsoft/azuretools/sdkmanage/AzureManagerBase.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/JetBrains/azure-tools-for-intellij/blob/84c54de9b567944fa549f18e808d90b251a69903/Utils/azuretools-core/src/com/microsoft/azuretools/sdkmanage/AzureManagerBase.java",
    "raw_url": "https://github.com/JetBrains/azure-tools-for-intellij/raw/84c54de9b567944fa549f18e808d90b251a69903/Utils/azuretools-core/src/com/microsoft/azuretools/sdkmanage/AzureManagerBase.java",
    "contents_url": "https://api.github.com/repos/JetBrains/azure-tools-for-intellij/contents/Utils/azuretools-core/src/com/microsoft/azuretools/sdkmanage/AzureManagerBase.java?ref=84c54de9b567944fa549f18e808d90b251a69903",
    "patch": "@@ -140,7 +140,11 @@ public String getTenantIdBySubscription(String subscriptionId) throws IOExceptio\n             } catch (final Exception e) {\n                 // just skip for cases user failing to get subscriptions of tenants he/she has no permission to get access token.\n                 // \"AADSTS50076\" is the code of a weired error related to multi-tenant configuration.\n-                final Predicate<Throwable> tenantError = (c) -> c instanceof AuthException && ((AuthException) c).getErrorMessage().contains(\"AADSTS50076\");\n+                // \"AADSTS50057\" is the code of an error related to having a disabled account in the tenant.\n+                final Predicate<Throwable> tenantError = (c) -> c instanceof AuthException &&\n+                        (((AuthException) c).getErrorMessage().contains(\"AADSTS50076\") ||\n+                                ((AuthException) c).getErrorMessage().contains(\"AADSTS50057\"));\n+\n                 if (e instanceof AzureRuntimeException && ((AzureRuntimeException) e).getCode() == ErrorEnum.FAILED_TO_GET_ACCESS_TOKEN.getErrorCode() ||\n                     Throwables.getCausalChain(e).stream().anyMatch(tenantError)) {\n                     // TODO: @wangmi better to notify user"
  }
]
