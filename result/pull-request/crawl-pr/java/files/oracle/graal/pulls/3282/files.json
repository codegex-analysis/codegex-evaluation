[
  {
    "sha": "79adc29b2e23db92561e533583035da86bf47df5",
    "filename": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/SubstrateRuntimeMXBean.java",
    "status": "modified",
    "additions": 12,
    "deletions": 13,
    "changes": 25,
    "blob_url": "https://github.com/oracle/graal/blob/759b705b9aa21d9e015f2722829f9f7cd4db6c58/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/SubstrateRuntimeMXBean.java",
    "raw_url": "https://github.com/oracle/graal/raw/759b705b9aa21d9e015f2722829f9f7cd4db6c58/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/SubstrateRuntimeMXBean.java",
    "contents_url": "https://api.github.com/repos/oracle/graal/contents/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/management/SubstrateRuntimeMXBean.java?ref=759b705b9aa21d9e015f2722829f9f7cd4db6c58",
    "patch": "@@ -46,19 +46,18 @@\n \n import com.oracle.svm.core.JavaMainWrapper;\n import com.oracle.svm.core.jdk.RuntimeSupport;\n-import com.oracle.svm.core.util.VMError;\n \n import sun.management.Util;\n //Checkstyle: resume\n \n final class SubstrateRuntimeMXBean implements RuntimeMXBean {\n \n-    private static final String MSG = \"RuntimeMXBean methods\";\n-\n+    private final String managementSpecVersion;\n     private long startMillis;\n \n     @Platforms(Platform.HOSTED_ONLY.class)\n     SubstrateRuntimeMXBean() {\n+        managementSpecVersion = ManagementFactory.getRuntimeMXBean().getManagementSpecVersion();\n         RuntimeSupport.getRuntimeSupport().addInitializationHook(this::initialize);\n     }\n \n@@ -101,37 +100,37 @@ public String getName() {\n \n     @Override\n     public String getVmName() {\n-        throw VMError.unsupportedFeature(MSG);\n+        return System.getProperty(\"java.vm.name\");\n     }\n \n     @Override\n     public String getVmVendor() {\n-        throw VMError.unsupportedFeature(MSG);\n+        return System.getProperty(\"java.vm.vendor\");\n     }\n \n     @Override\n     public String getVmVersion() {\n-        throw VMError.unsupportedFeature(MSG);\n+        return System.getProperty(\"java.vm.version\");\n     }\n \n     @Override\n     public String getSpecName() {\n-        throw VMError.unsupportedFeature(MSG);\n+        return System.getProperty(\"java.vm.specification.name\");\n     }\n \n     @Override\n     public String getSpecVendor() {\n-        throw VMError.unsupportedFeature(MSG);\n+        return System.getProperty(\"java.vm.specification.vendor\");\n     }\n \n     @Override\n     public String getSpecVersion() {\n-        throw VMError.unsupportedFeature(MSG);\n+        return System.getProperty(\"java.vm.specification.version\");\n     }\n \n     @Override\n     public String getManagementSpecVersion() {\n-        throw VMError.unsupportedFeature(MSG);\n+        return managementSpecVersion;\n     }\n \n     @Override\n@@ -141,17 +140,17 @@ public String getClassPath() {\n \n     @Override\n     public String getLibraryPath() {\n-        throw VMError.unsupportedFeature(MSG);\n+        return System.getProperty(\"java.vm.library.path\");\n     }\n \n     @Override\n     public boolean isBootClassPathSupported() {\n-        throw VMError.unsupportedFeature(MSG);\n+        return false;\n     }\n \n     @Override\n     public String getBootClassPath() {\n-        throw VMError.unsupportedFeature(MSG);\n+        throw new UnsupportedOperationException(\"boot class path mechanism is not supported\");\n     }\n \n     @Override"
  }
]
