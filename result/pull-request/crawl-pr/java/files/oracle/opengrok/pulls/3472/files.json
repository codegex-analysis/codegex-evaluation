[
  {
    "sha": "fa6b678a2ed41d56ca096eecd08c88481ca327e2",
    "filename": "opengrok-indexer/pom.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/pom.xml",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/pom.xml",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-indexer/pom.xml?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -23,7 +23,8 @@ Portions Copyright (c) 2017-2020, Chris Fraire <cfraire@me.com>.\n Portions Copyright (c) 2020-2020, Lubos Kosco <tarzanek@gmail.com>.\n \n -->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n     <modelVersion>4.0.0</modelVersion>\n \n     <parent>\n@@ -237,7 +238,7 @@ Portions Copyright (c) 2020-2020, Lubos Kosco <tarzanek@gmail.com>.\n \n     <build>\n         <plugins>\n-<!-- jflex:generate plugin HAS to be the first one which runs in generate-sources phase!!! -->\n+            <!-- jflex:generate plugin HAS to be the first one which runs in generate-sources phase!!! -->\n             <plugin>\n                 <groupId>de.jflex</groupId>\n                 <artifactId>jflex-maven-plugin</artifactId>\n@@ -265,7 +266,7 @@ Portions Copyright (c) 2020-2020, Lubos Kosco <tarzanek@gmail.com>.\n                     <includeOnlyProperties>\n                         <includeOnlyProperty>^git.commit.id</includeOnlyProperty>\n                     </includeOnlyProperties>\n-\t\t    <failOnNoGitDirectory>false</failOnNoGitDirectory>\n+                    <failOnNoGitDirectory>false</failOnNoGitDirectory>\n                 </configuration>\n                 <executions>\n                     <execution>\n@@ -356,7 +357,7 @@ Portions Copyright (c) 2020-2020, Lubos Kosco <tarzanek@gmail.com>.\n                 </executions>\n             </plugin>\n \n-           <plugin>\n+            <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-antrun-plugin</artifactId>\n                 <version>1.8</version>\n@@ -428,9 +429,9 @@ Portions Copyright (c) 2020-2020, Lubos Kosco <tarzanek@gmail.com>.\n                             <excludes>\n                                 <exclude>**/*XrefTest.java</exclude>\n                                 <exclude>**/HistoryGuruTest.java</exclude>\n-\t\t\t\t<!-- times out when running 'hg update mybranch' -->\n+                                <!-- times out when running 'hg update mybranch' -->\n                                 <exclude>**/MercurialRepositoryTest.java</exclude>\n-\t\t\t\t<!-- testSymlink fails due to path difference -->\n+                                <!-- testSymlink fails due to path difference -->\n                                 <exclude>**/IndexerRepoTest.java</exclude>\n                             </excludes>\n                         </configuration>"
  },
  {
    "sha": "aafd537b363cdffaab8144294a04b6039ec0a26d",
    "filename": "opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Configuration.java",
    "status": "modified",
    "additions": 46,
    "deletions": 27,
    "changes": 73,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Configuration.java",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Configuration.java",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Configuration.java?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -103,7 +103,7 @@\n      * value.\n      */\n     private static final String NONPOSITIVE_NUMBER_ERROR =\n-        \"Invalid value for \\\"%s\\\" - \\\"%s\\\". Expected value greater than 0\";\n+            \"Invalid value for \\\"%s\\\" - \\\"%s\\\". Expected value greater than 0\";\n \n     /**\n      * Path to {@code ctags} binary.\n@@ -149,7 +149,7 @@\n     private boolean authorizationWatchdogEnabled;\n     private AuthorizationStack pluginStack;\n     private Map<String, Project> projects; // project name -> Project\n-    private Set<Group> groups;\n+    private Map<String, Group> groups; // group name -> Group\n     private String sourceRoot;\n     private String dataRoot;\n     /**\n@@ -370,6 +370,7 @@ public int getNestingMaximum() {\n \n     /**\n      * Sets the nesting maximum of repositories to a specified value.\n+     *\n      * @param nestingMaximum the new value\n      * @throws IllegalArgumentException if {@code nestingMaximum} is negative\n      */\n@@ -526,7 +527,7 @@ public Configuration() {\n         setFetchHistoryWhenNotInCache(true);\n         setFoldingEnabled(true);\n         setGenerateHtml(true);\n-        setGroups(new TreeSet<>());\n+        setGroups(new ConcurrentHashMap<>());\n         setGroupsCollapseThreshold(4);\n         setHandleHistoryOfRenamedFiles(false);\n         setHistoryCache(true);\n@@ -591,19 +592,17 @@ public String setRepoCmd(String clazzName, String cmd) {\n     }\n \n     /**\n-     * @see org.opengrok.indexer.web.messages.MessagesContainer\n-     *\n      * @return int the current message limit\n+     * @see org.opengrok.indexer.web.messages.MessagesContainer\n      */\n     public int getMessageLimit() {\n         return messageLimit;\n     }\n \n     /**\n-     * @see org.opengrok.indexer.web.messages.MessagesContainer\n-     *\n      * @param messageLimit the limit\n      * @throws IllegalArgumentException when the limit is negative\n+     * @see org.opengrok.indexer.web.messages.MessagesContainer\n      */\n     public void setMessageLimit(int messageLimit) throws IllegalArgumentException {\n         if (messageLimit < 0) {\n@@ -644,6 +643,7 @@ public void setCmds(Map<String, String> cmds) {\n \n     /**\n      * Gets the configuration's ctags command. Default is null.\n+     *\n      * @return the configured value\n      */\n     public String getCtags() {\n@@ -652,6 +652,7 @@ public String getCtags() {\n \n     /**\n      * Sets the configuration's ctags command.\n+     *\n      * @param ctags A program name (full-path if necessary) or {@code null}\n      */\n     public void setCtags(String ctags) {\n@@ -660,6 +661,7 @@ public void setCtags(String ctags) {\n \n     /**\n      * Gets the configuration's mandoc command. Default is {@code null}.\n+     *\n      * @return the configured value\n      */\n     public String getMandoc() {\n@@ -668,6 +670,7 @@ public String getMandoc() {\n \n     /**\n      * Sets the configuration's mandoc command.\n+     *\n      * @param value A program name (full-path if necessary) or {@code null}\n      */\n     public void setMandoc(String value) {\n@@ -677,6 +680,7 @@ public void setMandoc(String value) {\n     /**\n      * Gets the total number of context lines per file to show in cases where it\n      * is limited. Default is 10.\n+     *\n      * @return a value greater than zero\n      */\n     public short getContextLimit() {\n@@ -686,20 +690,22 @@ public short getContextLimit() {\n     /**\n      * Sets the total number of context lines per file to show in cases where it\n      * is limited.\n+     *\n      * @param value a value greater than zero\n      * @throws IllegalArgumentException if {@code value} is not positive\n      */\n     public void setContextLimit(short value) throws IllegalArgumentException {\n         if (value < 1) {\n             throw new IllegalArgumentException(\n-                String.format(NONPOSITIVE_NUMBER_ERROR, \"contextLimit\", value));\n+                    String.format(NONPOSITIVE_NUMBER_ERROR, \"contextLimit\", value));\n         }\n         this.contextLimit = value;\n     }\n \n     /**\n      * Gets the number of context lines to show before or after any match.\n      * Default is zero.\n+     *\n      * @return a value greater than or equal to zero\n      */\n     public short getContextSurround() {\n@@ -708,14 +714,15 @@ public short getContextSurround() {\n \n     /**\n      * Sets the number of context lines to show before or after any match.\n+     *\n      * @param value a value greater than or equal to zero\n      * @throws IllegalArgumentException if {@code value} is negative\n      */\n     public void setContextSurround(short value)\n             throws IllegalArgumentException {\n         if (value < 0) {\n             throw new IllegalArgumentException(\n-                String.format(NEGATIVE_NUMBER_ERROR, \"contextSurround\", value));\n+                    String.format(NEGATIVE_NUMBER_ERROR, \"contextSurround\", value));\n         }\n         this.contextSurround = value;\n     }\n@@ -792,7 +799,7 @@ public boolean isHistoryCache() {\n     public void setHistoryCache(boolean historyCache) {\n         this.historyCache = historyCache;\n     }\n-    \n+\n     /**\n      * How long can a history request take before it's cached? If the time is\n      * exceeded, the result is cached. This setting only affects\n@@ -854,21 +861,27 @@ public void setProjects(Map<String, Project> projects) {\n      * @throws IOException when group is not unique across the set\n      */\n     public void addGroup(Group group) throws IOException {\n-        if (!groups.add(group)) {\n+        if (groups.containsKey(group.getName())) {\n             throw new IOException(\n                     String.format(\"Duplicate group name '%s' in configuration.\",\n                             group.getName()));\n+        } else {\n+            groups.put(group.getName(), group);\n         }\n     }\n \n-    public Set<Group> getGroups() {\n+    public Map<String, Group> getGroups() {\n         return groups;\n     }\n \n-    public void setGroups(Set<Group> groups) {\n+    public void setGroups(Map<String, Group> groups) {\n         this.groups = groups;\n     }\n \n+    public void setGroups(Set<Group> groups) {\n+        this.groups = setToMap(groups);\n+    }\n+\n     public String getSourceRoot() {\n         return sourceRoot;\n     }\n@@ -883,12 +896,11 @@ public String getDataRoot() {\n \n     /**\n      * Sets data root.\n-     *\n+     * <p>\n      * This method also sets the pluginDirectory if it is not already set.\n      *\n-     * @see #setPluginDirectory(java.lang.String)\n-     *\n      * @param dataRoot data root path\n+     * @see #setPluginDirectory(java.lang.String)\n      */\n     public void setDataRoot(String dataRoot) {\n         if (dataRoot != null && getPluginDirectory() == null) {\n@@ -899,16 +911,17 @@ public void setDataRoot(String dataRoot) {\n \n     /**\n      * If {@link #includeRoot} is not set, {@link #dataRoot} will be returned.\n+     *\n      * @return web include root directory\n      */\n     public String getIncludeRoot() {\n         return includeRoot != null ? includeRoot : dataRoot;\n     }\n-    \n+\n     public void setIncludeRoot(String newRoot) {\n         this.includeRoot = newRoot;\n     }\n-    \n+\n     public List<RepositoryInfo> getRepositories() {\n         return repositories;\n     }\n@@ -1021,8 +1034,8 @@ public String getBugPage() {\n      *\n      * @param bugPattern the new pattern\n      * @throws PatternSyntaxException when the pattern is not a valid regexp or\n-     * does not contain at least one capture group and the group does not\n-     * contain a single character\n+     *                                does not contain at least one capture group and the group does not\n+     *                                contain a single character\n      */\n     public void setBugPattern(String bugPattern) throws PatternSyntaxException {\n         if (!bugPattern.matches(PATTERN_SINGLE_GROUP)) {\n@@ -1052,8 +1065,8 @@ public String getReviewPattern() {\n      *\n      * @param reviewPattern the new pattern\n      * @throws PatternSyntaxException when the pattern is not a valid regexp or\n-     * does not contain at least one capture group and the group does not\n-     * contain a single character\n+     *                                does not contain at least one capture group and the group does not\n+     *                                contain a single character\n      */\n     public void setReviewPattern(String reviewPattern) throws PatternSyntaxException {\n         if (!reviewPattern.matches(PATTERN_SINGLE_GROUP)) {\n@@ -1106,7 +1119,7 @@ public LuceneLockName getLuceneLocking() {\n \n     /**\n      * @param value off|on|simple|native where \"on\" is an alias for \"simple\".\n-     * Any other value is a fallback alias for \"off\" (with a logged warning).\n+     *              Any other value is a fallback alias for \"off\" (with a logged warning).\n      */\n     public void setLuceneLocking(LuceneLockName value) {\n         this.luceneLocking = value;\n@@ -1436,7 +1449,7 @@ public void exceptionThrown(Exception e) {\n         // This ensures that when the configuration is reloaded then the set \n         // contains only root groups. Subgroups are discovered again\n         // as follows below\n-        conf.groups.removeIf(new Predicate<Group>() {\n+        conf.groups.values().removeIf(new Predicate<Group>() {\n             @Override\n             public boolean test(Group g) {\n                 return g.getParent() != null;\n@@ -1446,8 +1459,8 @@ public boolean test(Group g) {\n         // Traversing subgroups and checking for duplicates,\n         // effectively transforms the group tree to a structure (Set)\n         // supporting an iterator.\n-        TreeSet<Group> copy = new TreeSet<>();\n-        LinkedList<Group> stack = new LinkedList<>(conf.groups);\n+        Set<Group> copy = new TreeSet<>();\n+        LinkedList<Group> stack = new LinkedList<>(conf.groups.values());\n         while (!stack.isEmpty()) {\n             Group group = stack.pollFirst();\n             stack.addAll(group.getSubgroups());\n@@ -1465,7 +1478,7 @@ public boolean test(Group g) {\n                 tmp = tmp.getParent();\n             }\n         }\n-        conf.setGroups(copy);\n+        conf.setGroups(setToMap(copy));\n \n         /*\n          * Validate any defined canonicalRoot entries, and only include where\n@@ -1485,4 +1498,10 @@ public boolean test(Group g) {\n \n         return conf;\n     }\n+\n+    private static Map<String, Group> setToMap(Set<Group> groups) {\n+        Map<String, Group> groupsMap = new ConcurrentHashMap<>();\n+        groups.forEach(group -> groupsMap.put(group.getName(), group));\n+        return groupsMap;\n+    }\n }"
  },
  {
    "sha": "dea19480450cb30a91fc126aaadcc88e9d0923fd",
    "filename": "opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Group.java",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Group.java",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Group.java",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Group.java?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -28,11 +28,12 @@\n import java.util.TreeSet;\n import java.util.regex.Pattern;\n import java.util.regex.PatternSyntaxException;\n+\n import org.opengrok.indexer.util.ClassUtil;\n \n /**\n  * Placeholder for the information about subgroups of projects and repositories.\n- *\n+ * <p>\n  * Supports natural ordering based on case insensitive group names.\n  *\n  * @author Krystof Tulinger\n@@ -47,18 +48,18 @@\n     private String name;\n     /**\n      * Group regexp pattern.\n-     *\n+     * <p>\n      * No project matches the empty pattern of \"\" however this group can still\n      * be used as a superior group for other groups (without duplicating the\n      * projects).\n      */\n     private String pattern = \"\";\n     /**\n      * Compiled group pattern.\n-     *\n+     * <p>\n      * We set up the empty compiled pattern by default to \"()\" to reduce code\n      * complexity when performing a match for a group without a pattern.\n-     *\n+     * <p>\n      * This pattern is updated whenever the string pattern {@link #pattern} is\n      * updated.\n      *\n@@ -291,7 +292,7 @@ public static Group getByName(String name) {\n         Group ret = null;\n         RuntimeEnvironment env = RuntimeEnvironment.getInstance();\n         if (env.hasGroups()) {\n-            for (Group grp : env.getGroups()) {\n+            for (Group grp : env.getGroups().values()) {\n                 if (name.equals(grp.getName())) {\n                     ret = grp;\n                 }\n@@ -305,7 +306,7 @@ public static Group getByName(String name) {\n      * the project's description.\n      *\n      * @param project the project\n-     * @param groups set of groups\n+     * @param groups  set of groups\n      * @return set of groups matching the project\n      */\n     public static Set<Group> matching(Project project, Set<Group> groups) {"
  },
  {
    "sha": "45cc88312a36276eccd20887d0dcac4121aa10a5",
    "filename": "opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Groups.java",
    "status": "modified",
    "additions": 24,
    "deletions": 24,
    "changes": 48,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Groups.java",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Groups.java",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Groups.java?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -28,14 +28,15 @@\n import java.io.PrintStream;\n import java.io.UnsupportedEncodingException;\n import java.text.ParseException;\n-import java.util.ArrayList;\n-import java.util.LinkedList;\n-import java.util.List;\n import java.util.Set;\n+import java.util.TreeSet;\n+import java.util.List;\n+import java.util.LinkedList;\n+import java.util.ArrayList;\n+\n import org.opengrok.indexer.util.Getopt;\n \n /**\n- *\n  * @author Krystof Tulinger\n  */\n public final class Groups {\n@@ -151,7 +152,7 @@ public static void main(String[] argv) {\n                 usage(System.err);\n                 System.exit(1);\n             }\n-            matchGroups(System.out, cfg.getGroups(), match);\n+            matchGroups(System.out, new TreeSet<>(cfg.getGroups().values()), match);\n         } else if (empty) {\n             // just list the groups\n             if (parent != null || groupname != null || grouppattern != null) {\n@@ -173,15 +174,15 @@ public static void main(String[] argv) {\n                 usage(System.err);\n                 System.exit(1);\n             }\n-            deleteGroup(cfg.getGroups(), groupname);\n+            deleteGroup(new TreeSet<>(cfg.getGroups().values()), groupname);\n             out = prepareOutput(outFile);\n             printOut(list, cfg, out);\n         } else if (groupname != null) {\n             if (grouppattern == null) {\n                 grouppattern = \"\";\n             }\n             // perform insert/update. parent may be null\n-            if (!modifyGroup(cfg.getGroups(), groupname, grouppattern, parent)) {\n+            if (!modifyGroup(new TreeSet<>(cfg.getGroups().values()), groupname, grouppattern, parent)) {\n                 System.err.println(\"Parent group does not exist \\\"\" + parent + \"\\\"\");\n             } else {\n                 out = prepareOutput(outFile);\n@@ -206,15 +207,15 @@ public static void main(String[] argv) {\n      * Prints the configuration to the stream.\n      *\n      * @param list if true then it lists all available groups in configuration\n-     * if @param out is different than stdout it also prints the current\n-     * configuration to that stream otherwise it prints the configuration to the\n-     * @param out stream.\n-     * @param cfg configuration\n-     * @param out output stream\n+     *             if @param out is different than stdout it also prints the current\n+     *             configuration to that stream otherwise it prints the configuration to the\n+     * @param out  stream.\n+     * @param cfg  configuration\n+     * @param out  output stream\n      */\n     private static void printOut(boolean list, Configuration cfg, PrintStream out) {\n         if (list) {\n-            listGroups(System.out, cfg.getGroups());\n+            listGroups(System.out, new TreeSet<>(cfg.getGroups().values()));\n             if (out != System.out) {\n                 out.print(cfg.getXMLRepresentationAsString());\n             }\n@@ -244,7 +245,7 @@ private static PrintStream prepareOutput(File outFile) {\n     /**\n      * List groups given as a parameter.\n      *\n-     * @param out stream\n+     * @param out    stream\n      * @param groups groups\n      */\n     private static void listGroups(PrintStream out, Set<Group> groups) {\n@@ -263,9 +264,9 @@ public boolean call(Group g) {\n     /**\n      * Finds groups which would match the project.\n      *\n-     * @param out stream to write the results\n+     * @param out    stream to write the results\n      * @param groups set of groups\n-     * @param match project name\n+     * @param match  project name\n      */\n     private static void matchGroups(PrintStream out, Set<Group> groups, String match) {\n         Project p = new Project(match);\n@@ -289,14 +290,14 @@ public boolean call(Group g) {\n \n     /**\n      * Adds a group into the xml tree.\n-     *\n+     * <p>\n      * If group already exists, only the pattern is modified. Parent group can\n      * be null, in that case a new group is inserted as a top level group.\n      *\n-     * @param groups existing groups\n-     * @param groupname new group name\n+     * @param groups       existing groups\n+     * @param groupname    new group name\n      * @param grouppattern new group pattern\n-     * @param parent parent\n+     * @param parent       parent\n      * @return false if parent group was not found, true otherwise\n      */\n     private static boolean modifyGroup(Set<Group> groups, String groupname, String grouppattern, String parent) {\n@@ -321,7 +322,7 @@ private static boolean modifyGroup(Set<Group> groups, String groupname, String g\n     /**\n      * Removes group from the xml tree.\n      *\n-     * @param groups existing groups\n+     * @param groups    existing groups\n      * @param groupname group to remove\n      */\n     private static void deleteGroup(Set<Group> groups, String groupname) {\n@@ -340,10 +341,9 @@ private static void deleteGroup(Set<Group> groups, String groupname) {\n      *\n      * @param groups set of groups (mixed top level and other groups)\n      * @param walker an instance of {@link Walker} which is used for every\n-     * traversed group\n+     *               traversed group\n      * @return true if {@code walker} emits true for any of the groups; false\n      * otherwise\n-     *\n      * @see Walker\n      */\n     private static boolean treeTraverseGroups(Set<Group> groups, Walker walker) {\n@@ -376,7 +376,7 @@ private static boolean treeTraverseGroups(Set<Group> groups, Walker walker) {\n      *\n      * @param groups set of groups (mixed top level and other groups)\n      * @param walker an instance of {@link Walker} which is used for every\n-     * traversed group\n+     *               traversed group\n      * @return true if {@code walker} emits true for any of the groups; false\n      */\n     private static boolean linearTraverseGroups(Set<Group> groups, Walker walker) {"
  },
  {
    "sha": "00953e445b00ef5fa6dbdb657917b6f806b3f36c",
    "filename": "opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Project.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Project.java",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Project.java",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/Project.java?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -32,6 +32,7 @@\n import java.util.TreeSet;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n+\n import org.opengrok.indexer.logger.LoggerFactory;\n import org.opengrok.indexer.util.ClassUtil;\n import org.opengrok.indexer.util.ForbiddenSymlinkException;\n@@ -166,7 +167,7 @@ public int getTabSize() {\n     /**\n      * Set a textual name of this project, preferably don't use \" , \" in the\n      * name, since it's used as delimiter for more projects\n-     *\n+     * <p>\n      * XXX we should not allow setting project name after it has been\n      * constructed because it is probably part of HashMap.\n      *\n@@ -181,7 +182,7 @@ public void setName(String name) {\n      * Set the path (relative from source root) this project is located.\n      *\n      * @param path the relative path from source root where this project is\n-     * located, starting with path separator.\n+     *             located, starting with path separator.\n      */\n     public void setPath(String path) {\n         this.path = Util.fixPathIfWindows(path);"
  },
  {
    "sha": "0c3a8880ef0b3b56ccb013ae3a22badfd98fc782",
    "filename": "opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java",
    "status": "modified",
    "additions": 67,
    "deletions": 46,
    "changes": 113,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-indexer/src/main/java/org/opengrok/indexer/configuration/RuntimeEnvironment.java?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -163,7 +163,9 @@ public void setIndexer(boolean indexer) {\n         this.indexer = indexer;\n     }\n \n-    /** Gets the thread pool used for multi-project searches. */\n+    /**\n+     * Gets the thread pool used for multi-project searches.\n+     */\n     public ExecutorService getSearchExecutor() {\n         return lzSearchExecutor.get();\n     }\n@@ -172,13 +174,13 @@ private ExecutorService newSearchExecutor() {\n         return Executors.newFixedThreadPool(\n                 this.getMaxSearchThreadCount(),\n                 new ThreadFactory() {\n-                @Override\n-                public Thread newThread(Runnable runnable) {\n-                    Thread thread = Executors.defaultThreadFactory().newThread(runnable);\n-                    thread.setName(\"search-\" + thread.getId());\n-                    return thread;\n-                }\n-            });\n+                    @Override\n+                    public Thread newThread(Runnable runnable) {\n+                        Thread thread = Executors.defaultThreadFactory().newThread(runnable);\n+                        thread.setName(\"search-\" + thread.getId());\n+                        return thread;\n+                    }\n+                });\n     }\n \n     public ExecutorService getRevisionExecutor() {\n@@ -321,6 +323,7 @@ public String getIncludeRootPath() {\n \n     /**\n      * Set include root path.\n+     *\n      * @param includeRoot path\n      */\n     public void setIncludeRoot(String includeRoot) {\n@@ -400,11 +403,11 @@ public void setSourceRoot(String sourceRoot) {\n      *\n      * @param file A file to resolve\n      * @return Path relative to source root\n-     * @throws IOException If an IO error occurs\n-     * @throws FileNotFoundException if the file is not relative to source root\n-     * or if {@code sourceRoot} is not defined\n+     * @throws IOException               If an IO error occurs\n+     * @throws FileNotFoundException     if the file is not relative to source root\n+     *                                   or if {@code sourceRoot} is not defined\n      * @throws ForbiddenSymlinkException if symbolic-link checking encounters\n-     * an ineligible link\n+     *                                   an ineligible link\n      */\n     public String getPathRelativeToSourceRoot(File file)\n             throws IOException, ForbiddenSymlinkException {\n@@ -474,7 +477,7 @@ public boolean hasProjects() {\n     public void setProjects(Map<String, Project> projects) {\n         syncWriteConfiguration(projects, (c, p) -> {\n             if (p != null) {\n-                populateGroups(getGroups(), new TreeSet<>(p.values()));\n+                populateGroups(new TreeSet<>(getGroups().values()), new TreeSet<>(p.values()));\n             }\n             c.setProjects(p);\n         });\n@@ -494,7 +497,7 @@ public boolean hasGroups() {\n      *\n      * @return a set containing all of the groups (may be null)\n      */\n-    public Set<Group> getGroups() {\n+    public Map<String, Group> getGroups() {\n         return syncReadConfiguration(Configuration::getGroups);\n     }\n \n@@ -523,6 +526,7 @@ public void setGroups(Set<Group> groups) {\n     /**\n      * Gets a static placeholder for the web application context name that is\n      * translated to the true servlet {@code contextPath} on demand.\n+     *\n      * @return {@code \"/source\"} + {@link Prefix#SEARCH_R} + {@code \"?\"}\n      */\n     public String getUrlPrefix() {\n@@ -535,6 +539,7 @@ public String getUrlPrefix() {\n      * {@link Configuration#getCtags()}, or the system property for\n      * {@code \"org.opengrok.indexer.analysis.Ctags\"}, or \"ctags\" as a\n      * default.\n+     *\n      * @return a defined value\n      */\n     public String getCtags() {\n@@ -554,7 +559,7 @@ public String getCtags() {\n      * N.b. the value is not mediated to {@link Configuration}.\n      *\n      * @param ctags a defined value or {@code null} to reset to use the\n-     * {@link Configuration#getCtags()} fallbacks\n+     *              {@link Configuration#getCtags()} fallbacks\n      * @see #getCtags()\n      */\n     public void setCtags(String ctags) {\n@@ -567,6 +572,7 @@ public void setCtags(String ctags) {\n      * {@link Configuration#getMandoc()}, or the system property for\n      * {@code \"org.opengrok.indexer.analysis.Mandoc\"}, or {@code null} as a\n      * default.\n+     *\n      * @return a defined instance or {@code null}\n      */\n     public String getMandoc() {\n@@ -586,7 +592,7 @@ public String getMandoc() {\n      * N.b. the value is not mediated to {@link Configuration}.\n      *\n      * @param value a defined value or {@code null} to reset to use the\n-     * {@link Configuration#getMandoc()} fallbacks\n+     *              {@link Configuration#getMandoc()} fallbacks\n      * @see #getMandoc()\n      */\n     public void setMandoc(String value) {\n@@ -636,6 +642,7 @@ public boolean validateUniversalCtags() {\n \n     /**\n      * Gets the base set of supported Ctags languages.\n+     *\n      * @return a defined set which may be empty if\n      * {@link #validateUniversalCtags()} has not yet been called or if the call\n      * fails\n@@ -703,7 +710,7 @@ public void setGenerateHtml(boolean generateHtml) {\n      * Set if we should compress the xref files or not.\n      *\n      * @param compressXref set to true if the generated html files should be\n-     * compressed\n+     *                     compressed\n      */\n     public void setCompressXref(boolean compressXref) {\n         syncWriteConfiguration(compressXref, Configuration::setCompressXref);\n@@ -738,11 +745,11 @@ public void setQuickContextScan(boolean quickContextScan) {\n     public void setRepositories(List<RepositoryInfo> repositories) {\n         syncWriteConfiguration(repositories, Configuration::setRepositories);\n     }\n-    \n+\n     public void removeRepositories() {\n         syncWriteConfiguration(null, Configuration::setRepositories);\n     }\n-    \n+\n     /**\n      * Search through the directory for repositories and use the result to replace\n      * the lists of repositories in both RuntimeEnvironment/Configuration and HistoryGuru.\n@@ -757,6 +764,7 @@ public void setRepositories(String... dir) {\n \n     /**\n      * Add repositories to the list.\n+     *\n      * @param repositories list of repositories\n      */\n     public void addRepositories(List<RepositoryInfo> repositories) {\n@@ -819,7 +827,6 @@ public void setDefaultProjects(Set<Project> defaultProjects) {\n     }\n \n     /**\n-     *\n      * @return at what size (in MB) we should flush the buffer\n      */\n     public double getRamBufferSize() {\n@@ -941,9 +948,9 @@ public String getRepoCmd(String clazzName) {\n      * fully qualified classname.\n      *\n      * @param clazzName name of the targeting class. If {@code null} this method\n-     * does nothing.\n-     * @param cmd the client command to use. If {@code null} the corresponding\n-     * entry for the given clazzName get removed.\n+     *                  does nothing.\n+     * @param cmd       the client command to use. If {@code null} the corresponding\n+     *                  entry for the given clazzName get removed.\n      * @return the client command previously set, which might be {@code null}.\n      */\n     public String setRepoCmd(String clazzName, String cmd) {\n@@ -977,7 +984,7 @@ public String getUserPageSuffix() {\n      * Sets the user page suffix for the history listing.\n      *\n      * @param userPageSuffix the URL fragment following the username from\n-     * history\n+     *                       history\n      */\n     public void setUserPageSuffix(String userPageSuffix) {\n         syncWriteConfiguration(userPageSuffix, Configuration::setUserPageSuffix);\n@@ -1065,6 +1072,7 @@ public void setWebappLAF(String webappLAF) {\n \n     /**\n      * Gets a value indicating if the web app should run ctags as necessary.\n+     *\n      * @return the value of {@link Configuration#isWebappCtags()}\n      */\n     public boolean isWebappCtags() {\n@@ -1102,6 +1110,7 @@ public void setIndexVersionedFilesOnly(boolean indexVersionedFilesOnly) {\n     /**\n      * Gets the value of {@link Configuration#getIndexingParallelism()} -- or\n      * if zero, then as a default gets the number of available processors.\n+     *\n      * @return a natural number &gt;= 1\n      */\n     public int getIndexingParallelism() {\n@@ -1113,6 +1122,7 @@ public int getIndexingParallelism() {\n     /**\n      * Gets the value of {@link Configuration#getHistoryParallelism()} -- or\n      * if zero, then as a default gets the number of available processors.\n+     *\n      * @return a natural number &gt;= 1\n      */\n     public int getHistoryParallelism() {\n@@ -1124,6 +1134,7 @@ public int getHistoryParallelism() {\n     /**\n      * Gets the value of {@link Configuration#getHistoryRenamedParallelism()} -- or\n      * if zero, then as a default gets the number of available processors.\n+     *\n      * @return a natural number &gt;= 1\n      */\n     public int getHistoryRenamedParallelism() {\n@@ -1194,6 +1205,7 @@ public void setCanonicalRoots(Set<String> canonicalRoots) {\n \n     /**\n      * Return whether e-mail addresses should be obfuscated in the xref.\n+     *\n      * @return if we obfuscate emails\n      */\n     public boolean isObfuscatingEMailAddresses() {\n@@ -1202,6 +1214,7 @@ public boolean isObfuscatingEMailAddresses() {\n \n     /**\n      * Set whether e-mail addresses should be obfuscated in the xref.\n+     *\n      * @param obfuscatingEMailAddresses should we obfuscate emails?\n      */\n     public void setObfuscatingEMailAddresses(boolean obfuscatingEMailAddresses) {\n@@ -1223,7 +1236,7 @@ public boolean isChattyStatusPage() {\n      * Set whether status.jsp should print internal settings.\n      *\n      * @param chattyStatusPage {@code true} if internal settings should be printed,\n-     * {@code false} otherwise\n+     *                         {@code false} otherwise\n      */\n     public void setChattyStatusPage(boolean chattyStatusPage) {\n         syncWriteConfiguration(chattyStatusPage, Configuration::setChattyStatusPage);\n@@ -1342,6 +1355,7 @@ public int getTabSize() {\n \n     /**\n      * Gets the total number of context lines per file to show.\n+     *\n      * @return a value greater than zero\n      */\n     public short getContextLimit() {\n@@ -1350,6 +1364,7 @@ public short getContextLimit() {\n \n     /**\n      * Gets the number of context lines to show before or after any match.\n+     *\n      * @return a value greater than or equal to zero\n      */\n     public short getContextSurround() {\n@@ -1377,7 +1392,8 @@ public void readConfiguration(File file) throws IOException {\n \n     /**\n      * Read configuration from a file and put it into effect.\n-     * @param file the file to read\n+     *\n+     * @param file    the file to read\n      * @param cmdType command timeout type\n      * @throws IOException I/O\n      */\n@@ -1433,7 +1449,7 @@ public void writeConfiguration(String host) throws IOException {\n      * This is used for partial reindex.\n      *\n      * @param subFiles list of directories to refresh corresponding SearcherManagers\n-     * @param host the host address to receive the configuration\n+     * @param host     the host address to receive the configuration\n      */\n     public void signalTorefreshSearcherManagers(List<String> subFiles, String host) {\n         // subFile entries start with path separator so get basename\n@@ -1525,7 +1541,7 @@ public void populateGroups(Set<Group> groups, Set<Project> projects) {\n \n     /**\n      * Sets the configuration and performs necessary actions.\n-     *\n+     * <p>\n      * Mainly it classifies the projects in their groups and generates project -\n      * repositories map\n      *\n@@ -1537,8 +1553,9 @@ public void setConfiguration(Configuration configuration) {\n \n     /**\n      * Sets the configuration and performs necessary actions.\n+     *\n      * @param configuration new configuration\n-     * @param cmdType command timeout type\n+     * @param cmdType       command timeout type\n      */\n     public void setConfiguration(Configuration configuration, CommandTimeoutType cmdType) {\n         setConfiguration(configuration, null, cmdType);\n@@ -1580,7 +1597,7 @@ public synchronized void setConfiguration(Configuration configuration, List<Stri\n         }\n \n         // populate groups is dependent on repositories map\n-        populateGroups(getGroups(), new TreeSet<>(getProjects().values()));\n+        populateGroups(new TreeSet<>(getGroups().values()), new TreeSet<>(getProjects().values()));\n \n         includeFiles.reloadIncludeFiles();\n     }\n@@ -1611,7 +1628,7 @@ public AuthorizationFramework getAuthorizationFramework() {\n      */\n     public void setAuthorizationFramework(AuthorizationFramework fw) {\n         synchronized (authFrameworkLock) {\n-           if (this.authFramework != null) {\n+            if (this.authFramework != null) {\n                 this.authFramework.removeAll();\n             }\n             this.authFramework = fw;\n@@ -1620,6 +1637,7 @@ public void setAuthorizationFramework(AuthorizationFramework fw) {\n \n     /**\n      * Re-apply the configuration.\n+     *\n      * @param reindex is the message result of reindex\n      * @param cmdType command timeout type\n      * @see #applyConfig(org.opengrok.indexer.configuration.Configuration,\n@@ -1635,8 +1653,8 @@ public void applyConfig(boolean reindex, CommandTimeoutType cmdType) {\n      * to set new configuration in place.\n      *\n      * @param configuration XML configuration\n-     * @param reindex is the message result of reindex\n-     * @param cmdType command timeout type\n+     * @param reindex       is the message result of reindex\n+     * @param cmdType       command timeout type\n      * @see #applyConfig(org.opengrok.indexer.configuration.Configuration,\n      * boolean, CommandTimeoutType) applyConfig(config, reindex, cmdType)\n      */\n@@ -1656,13 +1674,13 @@ public void applyConfig(String configuration, boolean reindex, CommandTimeoutTyp\n      * Set configuration from the incoming parameter. The configuration could\n      * have come from the Indexer (in which case some extra work is needed) or\n      * is it just a request to set new configuration in place.\n-     *\n+     * <p>\n      * The classes that have registered their listener will be pinged here.\n-     * @see ConfigurationChangedListener\n      *\n-     * @param config the incoming configuration\n+     * @param config  the incoming configuration\n      * @param reindex is the message result of reindex\n      * @param cmdType command timeout type\n+     * @see ConfigurationChangedListener\n      */\n     public void applyConfig(Configuration config, boolean reindex, CommandTimeoutType cmdType) {\n         setConfiguration(config, cmdType);\n@@ -1708,7 +1726,7 @@ public void refreshDateForLastIndexRun() {\n     private void maybeRefreshSearcherManager(SearcherManager sm) {\n         try {\n             sm.maybeRefresh();\n-        }  catch (AlreadyClosedException ex) {\n+        } catch (AlreadyClosedException ex) {\n             // This is a case of removed project. See refreshSearcherManagerMap() for details.\n         } catch (IOException ex) {\n             LOGGER.log(Level.SEVERE, \"maybeRefresh failed\", ex);\n@@ -1775,11 +1793,11 @@ public void refreshSearcherManagerMap() {\n             if (!getProjectNames().contains(entry.getKey())) {\n                 try {\n                     LOGGER.log(Level.FINE,\n-                        \"closing SearcherManager for project\" + entry.getKey());\n+                            \"closing SearcherManager for project\" + entry.getKey());\n                     entry.getValue().close();\n                 } catch (IOException ex) {\n                     LOGGER.log(Level.SEVERE,\n-                        \"cannot close SearcherManager for project\" + entry.getKey(), ex);\n+                            \"cannot close SearcherManager for project\" + entry.getKey(), ex);\n                 }\n                 toRemove.add(entry.getKey());\n             }\n@@ -1796,12 +1814,12 @@ public void refreshSearcherManagerMap() {\n      * The caller is responsible for releasing the IndexSearcher objects\n      * so we add them to the map.\n      *\n-     * @param projects list of projects\n+     * @param projects     list of projects\n      * @param searcherList each SuperIndexSearcher produced will be put into this list\n      * @return MultiReader for the projects\n      */\n     public MultiReader getMultiReader(SortedSet<String> projects,\n-        ArrayList<SuperIndexSearcher> searcherList) {\n+                                      ArrayList<SuperIndexSearcher> searcherList) {\n \n         IndexReader[] subreaders = new IndexReader[projects.size()];\n         int ii = 0;\n@@ -1814,7 +1832,7 @@ public MultiReader getMultiReader(SortedSet<String> projects,\n                 searcherList.add(searcher);\n             } catch (IOException | NullPointerException ex) {\n                 LOGGER.log(Level.SEVERE,\n-                    \"cannot get IndexReader for project \" + proj, ex);\n+                        \"cannot get IndexReader for project \" + proj, ex);\n                 return null;\n             }\n         }\n@@ -1823,7 +1841,7 @@ public MultiReader getMultiReader(SortedSet<String> projects,\n             multiReader = new MultiReader(subreaders, true);\n         } catch (IOException ex) {\n             LOGGER.log(Level.SEVERE,\n-                \"cannot construct MultiReader for set of projects\", ex);\n+                    \"cannot construct MultiReader for set of projects\", ex);\n         }\n         return multiReader;\n     }\n@@ -1868,6 +1886,7 @@ public void addMessage(final Message message) {\n \n     /**\n      * Remove all messages containing at least one of the tags.\n+     *\n      * @param tags set of tags\n      * @param text message text (can be null, empty)\n      */\n@@ -1920,8 +1939,9 @@ public void setStatsdConfig(StatsdConfig statsdConfig) {\n     /**\n      * Applies the specified function to the runtime configuration, after having\n      * obtained the configuration read-lock (and releasing afterward).\n+     *\n      * @param function a defined function\n-     * @param <R> the type of the result of the function\n+     * @param <R>      the type of the result of the function\n      * @return the function result\n      */\n     public <R> R syncReadConfiguration(Function<Configuration, R> function) {\n@@ -1936,8 +1956,9 @@ public void setStatsdConfig(StatsdConfig statsdConfig) {\n      * Performs the specified operation which is provided the runtime\n      * configuration and the specified argument, after first having obtained the\n      * configuration write-lock (and releasing afterward).\n-     * @param <V> the type of the input to the operation\n-     * @param v the input argument\n+     *\n+     * @param <V>      the type of the input to the operation\n+     * @param v        the input argument\n      * @param consumer a defined consumer\n      */\n     public <V> void syncWriteConfiguration(V v, ConfigurationValueConsumer<V> consumer) {"
  },
  {
    "sha": "3f17d87aae0052ee4369f7c916e1216881464a16",
    "filename": "opengrok-indexer/src/test/java/org/opengrok/indexer/authorization/AuthorizationEntityTest.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/test/java/org/opengrok/indexer/authorization/AuthorizationEntityTest.java",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/test/java/org/opengrok/indexer/authorization/AuthorizationEntityTest.java",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-indexer/src/test/java/org/opengrok/indexer/authorization/AuthorizationEntityTest.java?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -31,6 +31,7 @@\n import java.util.TreeMap;\n import java.util.TreeSet;\n import java.util.function.Function;\n+\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n@@ -43,7 +44,6 @@\n import static org.junit.Assert.assertEquals;\n \n /**\n- *\n  * @author Krystof Tulinger\n  */\n @RunWith(Parameterized.class)\n@@ -83,7 +83,7 @@ public AuthorizationEntityTest(Function<Void, AuthorizationEntity> authEntityFac\n     @Before\n     public void setUp() {\n         RuntimeEnvironment env = RuntimeEnvironment.getInstance();\n-        envGroups = env.getGroups();\n+        envGroups = new TreeSet<>(env.getGroups().values());\n         envProjects = env.getProjects();\n         env.setGroups(new TreeSet<>());\n         env.setProjects(new TreeMap<>());\n@@ -133,20 +133,20 @@ public void testForGroupsAndForProjectsDiscovery() {\n         g1.addProject(env.getProjects().get(\"project 1\"));\n         g1.addProject(env.getProjects().get(\"project 2\"));\n         g1.addProject(env.getProjects().get(\"project 3\"));\n-        env.getGroups().add(g1);\n+        env.getGroups().put(g1.getName(), g1);\n         g2 = new Group();\n         g2.setName(\"group 2\");\n         g2.addProject(env.getProjects().get(\"project 4\"));\n         g2.addProject(env.getProjects().get(\"project 5\"));\n         g2.addProject(env.getProjects().get(\"project 6\"));\n         g2.addProject(env.getProjects().get(\"project 7\"));\n         g1.addGroup(g2);\n-        env.getGroups().add(g2);\n+        env.getGroups().put(g2.getName(), g2);\n         g3 = new Group();\n         g3.setName(\"group 3\");\n         g3.addProject(env.getProjects().get(\"project 8\"));\n         g3.addProject(env.getProjects().get(\"project 9\"));\n-        env.getGroups().add(g3);\n+        env.getGroups().put(g3.getName(), g3);\n \n         // add g1 and all descendants their projects\n         authEntity = authEntityFactory.apply(null);\n@@ -156,7 +156,7 @@ public void testForGroupsAndForProjectsDiscovery() {\n \n         assertEquals(new TreeSet<>(Arrays.asList(new String[]{\"group 1\", \"group 2\"})), authEntity.forGroups());\n         assertEquals(new TreeSet<>(Arrays.asList(new String[]{\"project 1\", \"project 2\", \"project 3\",\n-            \"project 4\", \"project 5\", \"project 6\", \"project 7\"})), authEntity.forProjects());\n+                \"project 4\", \"project 5\", \"project 6\", \"project 7\"})), authEntity.forProjects());\n \n         // add group2, its parent g1 and g2 projects\n         authEntity = authEntityFactory.apply(null);\n@@ -185,7 +185,7 @@ public void testForGroupsAndForProjectsDiscoveryInvalidProject() {\n         AuthorizationEntity authEntity = authEntityFactory.apply(null);\n \n         authEntity.setForProjects(new TreeSet<>(Arrays.asList(new String[]{\"project 1\", \"project 2\", \"project 3\",\n-            \"project 4\", \"project 5\", \"project 6\", \"project 7\"})));\n+                \"project 4\", \"project 5\", \"project 6\", \"project 7\"})));\n \n         authEntity.load(new TreeMap<>());\n \n@@ -223,7 +223,7 @@ public void testForGroupsAndForProjectsDiscoveryInvalidProjectInGroup() {\n         g1.addProject(new Project(\"project 1\"));\n         g1.addProject(new Project(\"project 2\"));\n         g1.addProject(new Project(\"project 3\"));\n-        env.getGroups().add(g1);\n+        env.getGroups().put(g1.getName(), g1);\n \n         authEntity.load(new TreeMap<>());\n "
  },
  {
    "sha": "8a336d3270222558f10e64dc7b1da54bcc14e35f",
    "filename": "opengrok-indexer/src/test/java/org/opengrok/indexer/configuration/GroupsTest.java",
    "status": "modified",
    "additions": 15,
    "deletions": 13,
    "changes": 28,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/test/java/org/opengrok/indexer/configuration/GroupsTest.java",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/test/java/org/opengrok/indexer/configuration/GroupsTest.java",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-indexer/src/test/java/org/opengrok/indexer/configuration/GroupsTest.java?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -27,6 +27,8 @@\n import java.io.PrintStream;\n import java.lang.reflect.Method;\n import java.util.Set;\n+import java.util.TreeSet;\n+\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n@@ -52,7 +54,7 @@ public void testBasicConfiguration() {\n \n     @Test\n     public void testDeleteGroup() {\n-        Set<Group> groups = cfg.getGroups();\n+        Set<Group> groups = new TreeSet<>(cfg.getGroups().values());\n \n         invokeMethod(\"deleteGroup\",\n                 new Class<?>[]{Set.class, String.class},\n@@ -75,7 +77,7 @@ public void testDeleteGroup() {\n \n     @Test\n     public void testAddGroup() {\n-        Set<Group> groups = cfg.getGroups();\n+        Set<Group> groups = new TreeSet<>(cfg.getGroups().values());\n         Group grp = findGroup(groups, \"new fantastic group\");\n         Assert.assertNull(grp);\n \n@@ -93,7 +95,7 @@ public void testAddGroup() {\n \n     @Test\n     public void testAddGroupToParent() {\n-        Set<Group> groups = cfg.getGroups();\n+        Set<Group> groups = new TreeSet<>(cfg.getGroups().values());\n         Group grp = findGroup(groups, \"apache\");\n         Assert.assertNotNull(grp);\n \n@@ -120,7 +122,7 @@ public void testAddGroupToParent() {\n \n     @Test\n     public void testModifyGroup() {\n-        Set<Group> groups = cfg.getGroups();\n+        Set<Group> groups = new TreeSet<>(cfg.getGroups().values());\n         Group grp = findGroup(groups, \"apache\");\n         Assert.assertNotNull(grp);\n         Assert.assertEquals(grp.getName(), \"apache\");\n@@ -139,16 +141,16 @@ public void testModifyGroup() {\n     @Test\n     public void testMatchGroup() {\n         Object[][] tests = new Object[][]{\n-            {\"null\", 0},\n-            {\"apache\", 0},\n-            {\"apache-2.2\", 1},\n-            {\"ctags 5.6.6.7.4\", 1},\n-            {\"ctags\", 0},\n-            {\"opengrok\", 1},\n-            {\"opengrok-12.0-rc3\", 1},\n-            {\"opengrk\", 0}\n+                {\"null\", 0},\n+                {\"apache\", 0},\n+                {\"apache-2.2\", 1},\n+                {\"ctags 5.6.6.7.4\", 1},\n+                {\"ctags\", 0},\n+                {\"opengrok\", 1},\n+                {\"opengrok-12.0-rc3\", 1},\n+                {\"opengrk\", 0}\n         };\n-        Set<Group> groups = cfg.getGroups();\n+        Set<Group> groups = new TreeSet<>(cfg.getGroups().values());\n \n         for (Object[] test : tests) {\n             testSingleMatch(groups, (int) test[1], (String) test[0]);"
  },
  {
    "sha": "9e5ea733f1ae5f20434157761fa821244f743db2",
    "filename": "opengrok-indexer/src/test/java/org/opengrok/indexer/configuration/RuntimeEnvironmentTest.java",
    "status": "modified",
    "additions": 38,
    "deletions": 36,
    "changes": 74,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/test/java/org/opengrok/indexer/configuration/RuntimeEnvironmentTest.java",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-indexer/src/test/java/org/opengrok/indexer/configuration/RuntimeEnvironmentTest.java",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-indexer/src/test/java/org/opengrok/indexer/configuration/RuntimeEnvironmentTest.java?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -42,6 +42,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.TreeSet;\n+\n import org.junit.AfterClass;\n import org.junit.Assert;\n import org.junit.Before;\n@@ -111,22 +112,22 @@ public void testDataRoot() throws IOException {\n     public void testIncludeRoot() throws IOException {\n         RuntimeEnvironment instance = RuntimeEnvironment.getInstance();\n         assertNull(instance.getIncludeRootPath());\n-        \n+\n         // set data root\n         File f = File.createTempFile(\"dataroot\", null);\n         String path = f.getCanonicalPath();\n         instance.setDataRoot(path);\n-        \n+\n         // verify they are the same\n         assertEquals(instance.getDataRootPath(), instance.getIncludeRootPath());\n-        \n+\n         // set include root\n         f = File.createTempFile(\"includeroot\", null);\n         path = f.getCanonicalPath();\n         instance.setIncludeRoot(path);\n         assertEquals(path, instance.getIncludeRootPath());\n     }\n-    \n+\n     @Test\n     public void testSourceRoot() throws IOException {\n         RuntimeEnvironment instance = RuntimeEnvironment.getInstance();\n@@ -170,10 +171,10 @@ public void testGroups() {\n \n         Group g = new Group(\"Random\", \"xyz.*\");\n \n-        instance.getGroups().add(g);\n+        instance.getGroups().put(g.getName(), g);\n         assertEquals(1, instance.getGroups().size());\n-        assertEquals(g, instance.getGroups().iterator().next());\n-        assertEquals(\"Random\", instance.getGroups().iterator().next().getName());\n+        assertEquals(g, instance.getGroups().values().iterator().next());\n+        assertEquals(\"Random\", instance.getGroups().values().iterator().next().getName());\n \n         instance.setGroups(null);\n         assertNull(instance.getGroups());\n@@ -206,17 +207,17 @@ public void testCtags() {\n         String instanceCtags = instance.getCtags();\n         assertNotNull(instanceCtags);\n         assertTrue(\"instance ctags should equals 'ctags' or the sys property\",\n-            instanceCtags.equals(\"ctags\") || instanceCtags.equals(\n-            System.getProperty(\"org.opengrok.indexer.analysis.Ctags\")));\n+                instanceCtags.equals(\"ctags\") || instanceCtags.equals(\n+                        System.getProperty(\"org.opengrok.indexer.analysis.Ctags\")));\n         String path = \"/usr/bin/ctags\";\n         instance.setCtags(path);\n         assertEquals(path, instance.getCtags());\n \n         instance.setCtags(null);\n         instanceCtags = instance.getCtags();\n         assertTrue(\"instance ctags should equals 'ctags' or the sys property\",\n-            instanceCtags.equals(\"ctags\") || instanceCtags.equals(\n-            System.getProperty(\"org.opengrok.indexer.analysis.Ctags\")));\n+                instanceCtags.equals(\"ctags\") || instanceCtags.equals(\n+                        System.getProperty(\"org.opengrok.indexer.analysis.Ctags\")));\n     }\n \n     @Test\n@@ -324,10 +325,10 @@ public void testBugPage() {\n     public void testBugPattern() {\n         RuntimeEnvironment instance = RuntimeEnvironment.getInstance();\n         String[] tests = new String[]{\n-            \"\\\\b([12456789][0-9]{6})\\\\b\",\n-            \"\\\\b(#\\\\d+)\\\\b\",\n-            \"(BUG123)\",\n-            \"\\\\sbug=(\\\\d+[a-t])*(\\\\W*)\"\n+                \"\\\\b([12456789][0-9]{6})\\\\b\",\n+                \"\\\\b(#\\\\d+)\\\\b\",\n+                \"(BUG123)\",\n+                \"\\\\sbug=(\\\\d+[a-t])*(\\\\W*)\"\n         };\n         for (String test : tests) {\n             try {\n@@ -343,12 +344,12 @@ public void testBugPattern() {\n     public void testInvalidBugPattern() {\n         RuntimeEnvironment instance = RuntimeEnvironment.getInstance();\n         String[] tests = new String[]{\n-            \"\\\\b([\",\n-            \"\\\\b({,6})\\\\b\",\n-            \"\\\\b6)\\\\b\",\n-            \"*buggy\",\n-            \"BUG123\", // does not contain a group\n-            \"\\\\b[a-z]+\\\\b\" // does not contain a group\n+                \"\\\\b([\",\n+                \"\\\\b({,6})\\\\b\",\n+                \"\\\\b6)\\\\b\",\n+                \"*buggy\",\n+                \"BUG123\", // does not contain a group\n+                \"\\\\b[a-z]+\\\\b\" // does not contain a group\n         };\n         for (String test : tests) {\n             try {\n@@ -372,10 +373,10 @@ public void testReviewPage() {\n     public void testReviewPattern() {\n         RuntimeEnvironment instance = RuntimeEnvironment.getInstance();\n         String[] tests = new String[]{\n-            \"\\\\b(\\\\d{4}/\\\\d{3})\\\\b\",\n-            \"\\\\b(#PSARC\\\\d+)\\\\b\",\n-            \"(REVIEW 123)\",\n-            \"\\\\sreview=(\\\\d+[a-t])*(\\\\W*)\"\n+                \"\\\\b(\\\\d{4}/\\\\d{3})\\\\b\",\n+                \"\\\\b(#PSARC\\\\d+)\\\\b\",\n+                \"(REVIEW 123)\",\n+                \"\\\\sreview=(\\\\d+[a-t])*(\\\\W*)\"\n         };\n         for (String test : tests) {\n             try {\n@@ -391,12 +392,12 @@ public void testReviewPattern() {\n     public void testInvalidReviewPattern() {\n         RuntimeEnvironment instance = RuntimeEnvironment.getInstance();\n         String[] tests = new String[]{\n-            \"\\\\b([\",\n-            \"\\\\b({,6})\\\\b\",\n-            \"\\\\b6)\\\\b\",\n-            \"*reviewy\",\n-            \"REVIEW 123\", // does not contain a group\n-            \"\\\\b[a-z]+\\\\b\" // does not contain a group\n+                \"\\\\b([\",\n+                \"\\\\b({,6})\\\\b\",\n+                \"\\\\b6)\\\\b\",\n+                \"*reviewy\",\n+                \"REVIEW 123\", // does not contain a group\n+                \"\\\\b[a-z]+\\\\b\" // does not contain a group\n         };\n         for (String test : tests) {\n             try {\n@@ -854,7 +855,8 @@ public void isChattyStatusPage() {\n     /**\n      * Verify that getPathRelativeToSourceRoot() returns path relative to\n      * source root for both directories and symbolic links.\n-     * @throws java.io.IOException I/O exception\n+     *\n+     * @throws java.io.IOException       I/O exception\n      * @throws ForbiddenSymlinkException forbidden symlink exception\n      */\n     @Test\n@@ -911,9 +913,9 @@ public void testPopulateGroupsMultipleTimes() {\n         Project project2 = new Project(\"barfoo\", \"/barfoo\");\n         env.getProjects().put(project2.getName(), project2);\n         final Group group1 = new Group(\"group1\", \"bar\");\n-        env.getGroups().add(group1);\n+        env.getGroups().put(group1.getName(), group1);\n         final Group group2 = new Group(\"group2\", \"bar.*\");\n-        env.getGroups().add(group2);\n+        env.getGroups().put(group2.getName(), group2);\n \n         final RepositoryInfo repository1 = new RepositoryInfo();\n         repository1.setDirectoryNameRelative(\"/bar\");\n@@ -930,7 +932,7 @@ public void testPopulateGroupsMultipleTimes() {\n         Assert.assertEquals(2, env.getGroups().size());\n \n         // populate groups for the first time\n-        env.populateGroups(env.getGroups(), new TreeSet<>(env.getProjects().values()));\n+        env.populateGroups(new TreeSet<>(env.getGroups().values()), new TreeSet<>(env.getProjects().values()));\n \n         Assert.assertEquals(2, env.getProjects().size());\n         Assert.assertEquals(2, env.getRepositories().size());\n@@ -947,7 +949,7 @@ public void testPopulateGroupsMultipleTimes() {\n         env.getRepositories().remove(repository1);\n \n         // populate groups for the second time\n-        env.populateGroups(env.getGroups(), new TreeSet<>(env.getProjects().values()));\n+        env.populateGroups(new TreeSet<>(env.getGroups().values()), new TreeSet<>(env.getProjects().values()));\n \n         Assert.assertEquals(2, env.getProjects().size());\n         Assert.assertEquals(1, env.getRepositories().size());"
  },
  {
    "sha": "d6f41fc2a7b3c5e4bbceef346deac650b1b28e3b",
    "filename": "opengrok-web/src/main/java/org/opengrok/web/ProjectHelper.java",
    "status": "modified",
    "additions": 11,
    "deletions": 10,
    "changes": 21,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-web/src/main/java/org/opengrok/web/ProjectHelper.java",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-web/src/main/java/org/opengrok/web/ProjectHelper.java",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-web/src/main/java/org/opengrok/web/ProjectHelper.java?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -34,6 +34,7 @@\n import java.util.TreeSet;\n import java.util.function.Predicate;\n import java.util.stream.Collectors;\n+\n import org.opengrok.indexer.configuration.Group;\n import org.opengrok.indexer.configuration.Project;\n import org.opengrok.indexer.history.RepositoryInfo;\n@@ -86,7 +87,7 @@\n \n     private ProjectHelper(PageConfig cfg) {\n         this.cfg = cfg;\n-        groups = new TreeSet<>(cfg.getEnv().getGroups());\n+        groups = new TreeSet<>(cfg.getEnv().getGroups().values());\n         ungroupedProjects = new TreeSet<>();\n         ungroupedRepositories = new TreeSet<>();\n \n@@ -149,7 +150,7 @@ public static ProjectHelper getInstance(PageConfig cfg) {\n      * Generates ungrouped projects and repositories.\n      */\n     private void populateGroups() {\n-        groups.addAll(cfg.getEnv().getGroups());\n+        groups.addAll(cfg.getEnv().getGroups().values());\n         for (Project project : cfg.getEnv().getProjectList()) {\n             // filterProjects() only adds groups which match project's name.\n             Set<Group> copy = Group.matching(project, groups);\n@@ -209,7 +210,7 @@ public boolean test(Group t) {\n     /**\n      * Filters and saves the original set of projects into request's attribute.\n      *\n-     * @param name attribute name\n+     * @param name     attribute name\n      * @param original original set\n      * @return filtered set\n      */\n@@ -226,7 +227,7 @@ public boolean test(Group t) {\n     /**\n      * Filters and saves the original set of groups into request's attribute.\n      *\n-     * @param name attribute name\n+     * @param name     attribute name\n      * @param original original set\n      * @return filtered set\n      */\n@@ -300,16 +301,16 @@ public boolean test(Group t) {\n     }\n \n     /**\n-     * @see #getProjects()\n      * @return filtered ungrouped projects\n+     * @see #getProjects()\n      */\n     public Set<Project> getUngroupedProjects() {\n         return cacheProjects(PROJECT_HELPER_UNGROUPED_PROJECTS, ungroupedProjects);\n     }\n \n     /**\n-     * @see #getRepositories()\n      * @return filtered ungrouped projects\n+     * @see #getRepositories()\n      */\n     public Set<Project> getUngroupedRepositories() {\n         return cacheProjects(PROJECT_HELPER_UNGROUPED_REPOSITORIES, ungroupedRepositories);\n@@ -363,7 +364,7 @@ public boolean test(Group t) {\n     /**\n      * Checks if given group contains a subgroup which is allowed by the\n      * AuthorizationFramework.\n-     *\n+     * <p>\n      * This should be used for deciding if this group should be written in the\n      * group hierarchy in the resulting html because it contains other allowed\n      * groups.\n@@ -392,10 +393,10 @@ public boolean hasAllowedSubgroup(Group group) {\n \n     /**\n      * Checks if given group contains a favourite project.\n-     *\n+     * <p>\n      * Favourite project is a project which is contained in the OpenGrokProject\n      * cookie, i. e. it has been searched or viewed by the user.\n-     *\n+     * <p>\n      * This should by used to determine if this group should be displayed\n      * expanded or rolled up.\n      *\n@@ -459,7 +460,7 @@ public boolean isFavourite(Project project) {\n \n     /**\n      * Checks if there is a favourite project in ungrouped projects.\n-     *\n+     * <p>\n      * This should by used to determine if this 'other' section should be\n      * displayed expanded or rolled up.\n      *"
  },
  {
    "sha": "bba461daf34984198ba20519adf2935e53e7ceeb",
    "filename": "opengrok-web/src/main/java/org/opengrok/web/api/v1/controller/ProjectsController.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/oracle/opengrok/blob/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-web/src/main/java/org/opengrok/web/api/v1/controller/ProjectsController.java",
    "raw_url": "https://github.com/oracle/opengrok/raw/2fd481f370a36b6a045a26d3027c00f12476c2c3/opengrok-web/src/main/java/org/opengrok/web/api/v1/controller/ProjectsController.java",
    "contents_url": "https://api.github.com/repos/oracle/opengrok/contents/opengrok-web/src/main/java/org/opengrok/web/api/v1/controller/ProjectsController.java?ref=2fd481f370a36b6a045a26d3027c00f12476c2c3",
    "patch": "@@ -100,7 +100,7 @@ public Response addProject(String projectName) {\n             // Note that the project is inactive in the UI until it is indexed.\n             // See {@code isIndexed()}\n             env.getProjects().put(projectName, project);\n-            env.populateGroups(env.getGroups(), new TreeSet<>(env.getProjectList()));\n+            env.populateGroups(new TreeSet<>(env.getGroups().values()), new TreeSet<>(env.getProjectList()));\n         } else {\n             Project project = env.getProjects().get(projectName);\n             Map<Project, List<RepositoryInfo>> map = env.getProjectRepositoriesMap();\n@@ -197,7 +197,7 @@ public void deleteProjectData(@PathParam(\"project\") String projectNameParam) {\n         logger.log(Level.INFO, \"deleting data for project {0}\", projectName);\n \n         // Delete index and xrefs.\n-        for (String dirName: new String[]{IndexDatabase.INDEX_DIR, IndexDatabase.XREF_DIR}) {\n+        for (String dirName : new String[]{IndexDatabase.INDEX_DIR, IndexDatabase.XREF_DIR}) {\n             java.nio.file.Path path = Paths.get(env.getDataRootPath(), dirName, projectName);\n             try {\n                 IOUtils.removeRecursive(path);"
  }
]
