[
  {
    "sha": "35a7528f46bf929112aa11adcc588a1fe1e445c3",
    "filename": "library/src/main/java/com/klinker/android/send_message/MmsReceivedReceiver.java",
    "status": "modified",
    "additions": 30,
    "deletions": 4,
    "changes": 34,
    "blob_url": "https://github.com/klinker41/android-smsmms/blob/22e0a2e9e8034f8c33cec704df178536f34d350b/library/src/main/java/com/klinker/android/send_message/MmsReceivedReceiver.java",
    "raw_url": "https://github.com/klinker41/android-smsmms/raw/22e0a2e9e8034f8c33cec704df178536f34d350b/library/src/main/java/com/klinker/android/send_message/MmsReceivedReceiver.java",
    "contents_url": "https://api.github.com/repos/klinker41/android-smsmms/contents/library/src/main/java/com/klinker/android/send_message/MmsReceivedReceiver.java?ref=22e0a2e9e8034f8c33cec704df178536f34d350b",
    "patch": "@@ -19,6 +19,7 @@\n import android.content.BroadcastReceiver;\n import android.content.Context;\n import android.content.Intent;\n+import android.database.Cursor;\n import android.net.Uri;\n import android.os.AsyncTask;\n import android.os.Build;\n@@ -71,8 +72,8 @@\n \n     private static final ExecutorService RECEIVE_NOTIFICATION_EXECUTOR = Executors.newSingleThreadExecutor();\n \n-    public abstract void onMessageReceived(Context context, Uri messageUri);\n-    public abstract void onError(Context context, String error);\n+    public abstract void onMessageReceived(Context context, Uri messageUri, String transactionId);\n+    public abstract void onError(Context context, String error, String transactionId);\n \n     public MmscInformation getMmscInfoForReceptionAck() {\n         // Override this and provide the MMSC to send the ACK to.\n@@ -84,6 +85,28 @@ public MmscInformation getMmscInfoForReceptionAck() {\n         return null;\n     }\n \n+    /**\n+     * Retrieve the transaction id from the original incoming mms.\n+     * PushReceiver removes the transaction id from the pdu table once mms is downloaded. If an application wants to map it to its internal database, this method is used\n+     * to get the transaction id and dispatches the success/failure including it\n+     *\n+     * @param context\n+     * @param locationUrl the locationUrl from the incoming mms\n+     * @return\n+     */\n+    private String getOriginalMmsTransactionId(Context context, String locationUrl) {\n+        String transactionId = null;\n+        Cursor cursor = SqliteWrapper.query(context, context.getContentResolver(), Telephony.Mms.CONTENT_URI, null, \"m_type=? AND ct_l =?\", new String[]{Integer.toString(130), locationUrl}, null);\n+\n+        if (cursor != null) {\n+            if (cursor.moveToNext()) {\n+                transactionId = cursor.getString(cursor.getColumnIndex(Telephony.Mms.TRANSACTION_ID));\n+            }\n+        }\n+\n+        return transactionId;\n+    }\n+\n     @Override\n     public final void onReceive(final Context context, final Intent intent) {\n         Log.v(TAG, \"MMS has finished downloading, persisting it to the database\");\n@@ -98,6 +121,7 @@ public void run() {\n                 FileInputStream reader = null;\n                 Uri messageUri = null;\n                 String errorMessage = null;\n+                String originalTransactionId = getOriginalMmsTransactionId(context, intent.getStringExtra(EXTRA_LOCATION_URL));\n \n                 try {\n                     File mDownloadFile = new File(path);\n@@ -142,12 +166,14 @@ public void run() {\n                 handleHttpError(context, intent);\n                 DownloadManager.finishDownload(intent.getStringExtra(EXTRA_LOCATION_URL));\n \n+                // Dispatches the information with original transaction id in order for application to retrieve it internally in case they are using an external database\n+                // to store the messages\n                 if (messageUri != null) {\n-                    onMessageReceived(context, messageUri);\n+                    onMessageReceived(context, messageUri, originalTransactionId);\n                 }\n \n                 if (errorMessage != null) {\n-                    onError(context, errorMessage);\n+                    onError(context, errorMessage, originalTransactionId);\n                 }\n             }\n         }).start();"
  },
  {
    "sha": "d271063e1b4492a4e343cb489e8d9a58483b02de",
    "filename": "sample/src/main/java/com/klinker/android/messaging_sample/MmsReceivedReceiverImpl.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/klinker41/android-smsmms/blob/22e0a2e9e8034f8c33cec704df178536f34d350b/sample/src/main/java/com/klinker/android/messaging_sample/MmsReceivedReceiverImpl.java",
    "raw_url": "https://github.com/klinker41/android-smsmms/raw/22e0a2e9e8034f8c33cec704df178536f34d350b/sample/src/main/java/com/klinker/android/messaging_sample/MmsReceivedReceiverImpl.java",
    "contents_url": "https://api.github.com/repos/klinker41/android-smsmms/contents/sample/src/main/java/com/klinker/android/messaging_sample/MmsReceivedReceiverImpl.java?ref=22e0a2e9e8034f8c33cec704df178536f34d350b",
    "patch": "@@ -9,12 +9,12 @@\n public class MmsReceivedReceiverImpl extends MmsReceivedReceiver {\n \n     @Override\n-    public void onMessageReceived(Context context, Uri messageUri) {\n+    public void onMessageReceived(Context context, Uri messageUri, String transactionId) {\n         Log.v(\"MmsReceived\", \"message received: \" + messageUri.toString());\n     }\n \n     @Override\n-    public void onError(Context context, String error) {\n+    public void onError(Context context, String error, String transactionId) {\n         Log.v(\"MmsReceived\", \"error: \" + error);\n     }\n "
  }
]
