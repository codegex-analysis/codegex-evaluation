[
  {
    "sha": "732c1a228fb664944c1c96b59a68642071ff5166",
    "filename": "src/main/java/com/uceventtracker/eventtracker/EventTrackerController.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/EventTrackerController.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/EventTrackerController.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/EventTrackerController.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -14,14 +14,16 @@\n     @RequestMapping(\"/\")\n     public String index(Model model) {\n         Event event = new Event();\n-        event.setEventId(10);\n+        event.setEventID(10);\n         event.setTitle(\"UC Hackathon\");\n         event.setLocation(\"Crosley tower\");\n+        event.setDate(\"1/2/2021\");\n         event.setStartTime(\"1pm\");\n         event.setEndTime(\"5pm\");\n         event.setDescription(\"Groups compete to solve problems\");\n-        event.setHost(\"CECH\");\n+        event.setHostName(\"CECH\");\n         model.addAttribute(event);\n+\n         return \"start\";\n     }\n "
  },
  {
    "sha": "5f4871f3ce3e08de938edb022fb7398945748c37",
    "filename": "src/main/java/com/uceventtracker/eventtracker/dao/DateDAO.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/DateDAO.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/DateDAO.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/dao/DateDAO.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -0,0 +1,37 @@\n+package com.uceventtracker.eventtracker.dao;\n+\n+import com.uceventtracker.eventtracker.dto.Date;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Component\n+public class DateDAO implements IDateDAO {\n+\n+    private Map<Integer, Date> dates = new HashMap<>();\n+\n+    @Override\n+    public boolean createEvent(Date date) {\n+        dates.put(date.getDateID(), date);\n+        if (dates.containsKey(date.getDateID())) return true;\n+\n+        return false;\n+    }\n+\n+    @Override\n+    public Date fetchByDate(String date) {\n+        List<Date> dateList = new ArrayList<>(dates.values());\n+        Date chooseDate = new Date();\n+\n+        for (Date cDate : dateList) {\n+            if (cDate.getDate().equals(date)) {\n+                chooseDate = cDate;\n+            }\n+        }\n+\n+        return chooseDate;\n+    }\n+}"
  },
  {
    "sha": "3f6fb31c431c867981570ca05dee38d6334206ff",
    "filename": "src/main/java/com/uceventtracker/eventtracker/dao/EventDAOStub.java",
    "status": "modified",
    "additions": 75,
    "deletions": 3,
    "changes": 78,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/EventDAOStub.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/EventDAOStub.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/dao/EventDAOStub.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -1,16 +1,88 @@\n package com.uceventtracker.eventtracker.dao;\n \n+import com.uceventtracker.eventtracker.dto.Date;\n import com.uceventtracker.eventtracker.dto.Event;\n+import com.uceventtracker.eventtracker.dto.Host;\n import org.springframework.stereotype.Repository;\n+\n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n \n @Repository\n public class EventDAOStub implements IEventDAO{\n-    List<Event> allEvents = new ArrayList<Event>();\n \n+    private Map<Integer, Event> events = new HashMap<>();\n+\n+    /**\n+     * Method for creating a new Event record\n+     */\n+    @Override\n+    public boolean createEvent(Event event) {\n+        events.put(event.getEventID(), event);\n+        if (events.containsKey(event.getEventID())) return true;\n+\n+        return false;\n+    }\n+\n+    /**\n+     * Method for fetching a list of the event titles\n+     * @param title\n+     */\n+    @Override\n+    public List<Event> fetchByTitle(String title) {\n+        List<Event> titleList = new ArrayList<>(events.values());\n+        List<Event> requiredTitles = new ArrayList<>();\n+\n+        for (Event cTitle : titleList) {\n+            if (cTitle.getTitle().equals(title)) {\n+                requiredTitles.add(cTitle);\n+            }\n+        }\n+\n+        return requiredTitles;\n+    }\n+\n+    /**\n+     * Method for fetching events by HostName\n+     * @param hostID tied to chosen hostID to draw events\n+     */\n+    @Override\n+    public Event fetchByHostName(int hostID) {\n+        List<Event> eventList = new ArrayList<>(events.values());\n+        Event chooseEvent = new Event();\n+\n+        for (Event event : eventList) {\n+            if (event.getHostID() == hostID) {\n+                chooseEvent = event;\n+            }\n+        }\n+\n+        return chooseEvent;\n+    }\n+\n+    /**\n+     * Method for fetching events by date\n+     * @param date tied to chosen date to draw events\n+     */\n     @Override\n-    public List<Event> fetchAllEvents() {\n-        return allEvents;\n+    public Event fetchByDate(String date) {\n+        List<Event> eventList = new ArrayList<>(events.values());\n+        Event chooseEvent = new Event();\n+\n+        for (Event event : eventList) {\n+            if (event.getDate().equals(event)) {\n+                chooseEvent = event;\n+            }\n+        }\n+\n+        return chooseEvent;\n     }\n+\n+    /**\n+     * Method for fetching all events\n+     */\n+    @Override\n+    public Map<Integer, Event> fetchAll() { return events; }\n }"
  },
  {
    "sha": "9decb69cd89ca639d58355887dbf8f3906057243",
    "filename": "src/main/java/com/uceventtracker/eventtracker/dao/HostDAO.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/HostDAO.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/HostDAO.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/dao/HostDAO.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -0,0 +1,56 @@\n+package com.uceventtracker.eventtracker.dao;\n+\n+import com.uceventtracker.eventtracker.dto.Host;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Component\n+public class HostDAO implements IHostDAO {\n+\n+    private Map<Integer, Host> hosts = new HashMap<>();\n+\n+    @Override\n+    public boolean createEvent(Host hostName) {\n+        hosts.put(hostName.getHostID(), hostName);\n+        if (hosts.containsKey(hostName.getHostID())) return true;\n+\n+        return false;\n+    }\n+\n+    @Override\n+    public Host fetchByHostID(int hostID) {\n+        List<Host> hostList = new ArrayList<>(hosts.values());\n+        Host chooseHost = new Host();\n+\n+        for (Host cHost : hostList) {\n+            if (cHost.getHostID() == hostID) {\n+                chooseHost = cHost;\n+            }\n+        }\n+\n+        return chooseHost;\n+    }\n+\n+    @Override\n+    public Host fetchByHostName(String hostName) {\n+        List<Host> hostList = new ArrayList<>(hosts.values());\n+        Host chooseHost = new Host();\n+\n+        for (Host cHost : hostList) {\n+            if (cHost.getHostName().equals(hostName)) {\n+                chooseHost = cHost;\n+            }\n+        }\n+\n+        return chooseHost;\n+    }\n+\n+    @Override\n+    public Map<Integer, Host> fetchAll() {\n+        return null;\n+    }\n+}"
  },
  {
    "sha": "16020b5c296200f46cfc63b877cd843bc020a28a",
    "filename": "src/main/java/com/uceventtracker/eventtracker/dao/IDateDAO.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/IDateDAO.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/IDateDAO.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/dao/IDateDAO.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -0,0 +1,16 @@\n+package com.uceventtracker.eventtracker.dao;\n+\n+import com.uceventtracker.eventtracker.dto.Date;\n+\n+/**\n+ * Data Access Object Interface for Dates\n+ * <p>\n+ *     Gives access to Date data\n+ * </p>\n+ */\n+public interface IDateDAO {\n+\n+    boolean createEvent(Date date);\n+\n+    Date fetchByDate(String date);\n+}"
  },
  {
    "sha": "209838cc55b5fb241f1a5138d77fb271838522c9",
    "filename": "src/main/java/com/uceventtracker/eventtracker/dao/IEventDAO.java",
    "status": "modified",
    "additions": 20,
    "deletions": 1,
    "changes": 21,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/IEventDAO.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/IEventDAO.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/dao/IEventDAO.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -1,8 +1,27 @@\n package com.uceventtracker.eventtracker.dao;\n \n+import com.uceventtracker.eventtracker.dto.Date;\n import com.uceventtracker.eventtracker.dto.Event;\n+import com.uceventtracker.eventtracker.dto.Host;\n+\n import java.util.List;\n+import java.util.Map;\n \n+/**\n+ * Data Access Object Interface for Events\n+ * <p>\n+ *     Gives access to Event data\n+ * </p>\n+ */\n public interface IEventDAO {\n-    List<Event> fetchAllEvents();\n+\n+    boolean createEvent(Event event);\n+\n+    List<Event> fetchByTitle(String title);\n+\n+    Event fetchByHostName(int hostID);\n+\n+    Event fetchByDate(String date);\n+\n+    Map<Integer,Event> fetchAll();\n }"
  },
  {
    "sha": "acaea0a49a9963f6305024710b19dfa54843b86a",
    "filename": "src/main/java/com/uceventtracker/eventtracker/dao/IHostDAO.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/IHostDAO.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dao/IHostDAO.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/dao/IHostDAO.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -0,0 +1,22 @@\n+package com.uceventtracker.eventtracker.dao;\n+\n+import com.uceventtracker.eventtracker.dto.Host;\n+\n+import java.util.Map;\n+\n+/**\n+ * Data Access Object Interface for Hosts\n+ * <p>\n+ *     Gives access to Host data\n+ * </p>\n+ */\n+public interface IHostDAO {\n+\n+    boolean createEvent(Host hostName);\n+\n+    Host fetchByHostID(int hostID);\n+\n+    Host fetchByHostName(String hostName);\n+\n+    Map<Integer, Host> fetchAll();\n+}"
  },
  {
    "sha": "be3fbdf28ad346c7a8735d3552371d0a53eb9976",
    "filename": "src/main/java/com/uceventtracker/eventtracker/dto/Date.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dto/Date.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dto/Date.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/dto/Date.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -0,0 +1,9 @@\n+package com.uceventtracker.eventtracker.dto;\n+\n+import lombok.Data;\n+\n+public @Data\n+class Date {\n+    private int dateID;\n+    private String date;\n+}"
  },
  {
    "sha": "b6b3bef6364d4d132f1534fca93b50b1fec3fca8",
    "filename": "src/main/java/com/uceventtracker/eventtracker/dto/Event.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dto/Event.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dto/Event.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/dto/Event.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -4,11 +4,14 @@\n \n public @Data\n class Event {\n-    private int eventId;\n+    private int eventID;\n+    private int dataID;\n+    private int hostID;\n     private String title;\n     private String location;\n+    private String date;\n     private String startTime;\n     private String endTime;\n     private String description;\n-    private String host;\n+    private String hostName;\n }"
  },
  {
    "sha": "a784a744990f20f67c79862e88df134430a1f179",
    "filename": "src/main/java/com/uceventtracker/eventtracker/dto/Host.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dto/Host.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/dto/Host.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/dto/Host.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -0,0 +1,9 @@\n+package com.uceventtracker.eventtracker.dto;\n+\n+import lombok.Data;\n+\n+public @Data\n+class Host {\n+    private int hostID;\n+    private String hostName;\n+}"
  },
  {
    "sha": "73aba6b432e4dade642f42ae603f0739814d6491",
    "filename": "src/main/java/com/uceventtracker/eventtracker/service/EventServiceStub.java",
    "status": "modified",
    "additions": 15,
    "deletions": 19,
    "changes": 34,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/service/EventServiceStub.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/service/EventServiceStub.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/service/EventServiceStub.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -14,29 +14,29 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Map;\n \n @Service\n public class EventServiceStub implements IEventService {\n+\n     @Autowired\n     private IEventDAO eventDAO;\n \n-    public EventServiceStub() {\n-\n-    }\n-\n     public EventServiceStub(IEventDAO eventDAO) {\n         this.eventDAO = eventDAO;\n     }\n \n     @Override\n     public Event fetchEventById(int eventId) {\n         Event event = new Event();\n-        event.setEventId(1);\n+        event.setEventID(1);\n         event.setTitle(\"Revolution UC\");\n+        event.setLocation(\"TUC University of Cincinnati\");\n+        event.setDate(\"1/1/2021\");\n         event.setStartTime(\"11:00am Friday\");\n         event.setEndTime(\"11:00am Friday\");\n         event.setDescription(\"Hackathon\");\n-        event.setHost(\"Major League Hacking\");\n+        event.setHostName(\"Major League Hacking\");\n \n         return event;\n     }\n@@ -53,14 +53,14 @@ public static void loadRSS() {\n                 for (SyndEntry entry : feed.getEntries()) {\n \n                     Event event = new Event();\n-                    event.setEventId(eventId);\n+                    event.setEventID(eventId);\n                     eventId++;\n                     event.setTitle(entry.getTitle());\n \n-                    String descriptionData = entry.getDescription().getValue();//get html text from the description which contains multiple values\n-                    descriptionData = descriptionData.replaceAll(\"\\\\<[^>]*>\", \"\");//remove html from string\n-                    descriptionData = descriptionData.replaceAll(\"  \", \"\");//remove extra spacing\n-                    String[] descriptionDataList = descriptionData.split(\"\\\\r?\\\\n\");//split by new lines\n+                    String descriptionData = entry.getDescription().getValue();                       /* gets html text from the description which contains multiple values */\n+                    descriptionData = descriptionData.replaceAll(\"\\\\<[^>]*>\", \"\");  /* removes html from string */\n+                    descriptionData = descriptionData.replaceAll(\"  \", \"\");         /* removes extra spacing */\n+                    String[] descriptionDataList = descriptionData.split(\"\\\\r?\\\\n\");            /* splits by new lines */\n \n                     boolean saveNextLine = false;\n                     String description = \"\";\n@@ -83,23 +83,19 @@ public static void loadRSS() {\n                             i = i.replace(\".\", \"\");\n                             event.setLocation(i);\n                         }\n-\n                     }\n                     event.setDescription(description);\n-                    event.setHost(entry.getAuthor());\n-\n-                    //add and save event to dao here\n+                    event.setHostName(entry.getAuthor());\n+                    //TODO: Add and save event to DAO here\n                 }\n             }\n         } catch (Exception e) {\n             e.printStackTrace();\n         }\n     }\n \n-\n     @Override\n-    public List<Event> fetchAllEvents() {\n-\n-        return eventDAO.fetchAllEvents();\n+    public Map<Integer, Event> fetchAllEvents() {\n+        return eventDAO.fetchAll();\n     }\n }"
  },
  {
    "sha": "dab642913da651cad523b51b7b1219e78756b429",
    "filename": "src/main/java/com/uceventtracker/eventtracker/service/IEventService.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/service/IEventService.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/main/java/com/uceventtracker/eventtracker/service/IEventService.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/main/java/com/uceventtracker/eventtracker/service/IEventService.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -3,15 +3,15 @@\n import com.uceventtracker.eventtracker.dto.Event;\n \n import java.util.List;\n+import java.util.Map;\n \n public interface IEventService {\n-\n     /*\n     *Fetch an event when an id param is passed.\n     * @param eventId\n     * @return event with the same event id or null if no matches found.\n-     */\n+    */\n     Event fetchEventById(int eventId);\n \n-    List<Event> fetchAllEvents();\n+    Map<Integer, Event> fetchAllEvents();\n }"
  },
  {
    "sha": "b07d51bb887c3c678abfed244b0d2f2ee3e7a668",
    "filename": "src/test/java/com/uceventtracker/eventtracker/EventTrackerApplicationTests.java",
    "status": "modified",
    "additions": 9,
    "deletions": 12,
    "changes": 21,
    "blob_url": "https://github.com/stoberdl/UCEventTracker/blob/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/test/java/com/uceventtracker/eventtracker/EventTrackerApplicationTests.java",
    "raw_url": "https://github.com/stoberdl/UCEventTracker/raw/42ae4cb46994f5570cd7ba5ca47c2e955a9126d1/src/test/java/com/uceventtracker/eventtracker/EventTrackerApplicationTests.java",
    "contents_url": "https://api.github.com/repos/stoberdl/UCEventTracker/contents/src/test/java/com/uceventtracker/eventtracker/EventTrackerApplicationTests.java?ref=42ae4cb46994f5570cd7ba5ca47c2e955a9126d1",
    "patch": "@@ -6,18 +6,19 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.test.context.SpringBootTest;\n import java.util.List;\n+import java.util.Map;\n \n @SpringBootTest\n class EventTrackerApplicationTests {\n+\n     private List<Event> allEvents;\n \n     @Autowired\n     private IEventService eventService;\n     private Event event;\n \n     @Test\n-    void contextLoads() {\n-    }\n+    void contextLoads() { }\n \n     @Test\n     void checkEventData(){\n@@ -34,13 +35,9 @@ void fetchAllEvents(){\n     }\n \n     @Test\n-    void readRSSEventsFeed(){\n+    void readRSSEventsFeed(){ }\n \n-\n-    }\n-\n-    private void givenEventDataIsAvailable() {\n-    }\n+    private void givenEventDataIsAvailable() { }\n \n     private void whenEventIsSearchedWithId() {\n         event = eventService.fetchEventById(1);\n@@ -49,16 +46,16 @@ private void whenEventIsSearchedWithId() {\n     private void thenViewEventData() {\n         System.out.println(event.getTitle());\n         System.out.println(event.getLocation());\n+        System.out.println(event.getDate());\n         System.out.println(event.getStartTime());\n         System.out.println(event.getEndTime());\n         System.out.println(event.getDescription());\n-        System.out.println(event.getHost());\n+        System.out.println(event.getHostName());\n     }\n \n-    private void whenEventDataIsLoaded() {\n-    }\n+    private void whenEventDataIsLoaded() { }\n \n     private void thenDisplayListOfEvents() {\n-        allEvents = eventService.fetchAllEvents();\n+        Map<Integer, Event> allEvents = eventService.fetchAllEvents();\n     }\n }"
  }
]
