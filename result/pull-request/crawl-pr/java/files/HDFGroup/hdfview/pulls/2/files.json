[
  {
    "sha": "fcc9b8ecb4e4337c02e55de25f426665f590f356",
    "filename": "build.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/HDFGroup/hdfview/blob/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/build.properties",
    "raw_url": "https://github.com/HDFGroup/hdfview/raw/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/build.properties",
    "contents_url": "https://api.github.com/repos/HDFGroup/hdfview/contents/build.properties?ref=cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf",
    "patch": "@@ -17,8 +17,8 @@ build.debug = true\n build.antoutput.append = false\n build.log.level = info\n build.log.level.run = trace\n-build.log.level.test = debug\n-build.object.test = test.object.Datatype\n+build.log.level.test =\n+build.object.test =\n \n # Uncomment to use jacoco for code coverage analysis\n # build.jacoco ="
  },
  {
    "sha": "577ae8aa7bd7e88cbfc8b5eef6dc27cbc71f56be",
    "filename": "build.xml",
    "status": "modified",
    "additions": 23,
    "deletions": 3,
    "changes": 26,
    "blob_url": "https://github.com/HDFGroup/hdfview/blob/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/build.xml",
    "raw_url": "https://github.com/HDFGroup/hdfview/raw/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/build.xml",
    "contents_url": "https://api.github.com/repos/HDFGroup/hdfview/contents/build.xml?ref=cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf",
    "patch": "@@ -995,7 +995,7 @@\n             </doctitle>\n \n             <bottom>\n-                <![CDATA[Copyright © 2020. All Rights Reserved.]]>\n+                <![CDATA[Copyright © 2021. All Rights Reserved.]]>\n             </bottom>\n \n             <group title=\"object packages\" packages=\"hdf.object.*\" />\n@@ -1068,7 +1068,7 @@\n         <replace file=\"${dist.dir}/README.txt\" token=\"@INSTALL_TYPE@\" value=\"Running\" />\n         <replace file=\"${dist.dir}/README.txt\" token=\"@INSTALL_PREFIX_HEADER@\" value=\"To install ${ant.project.name} for Windows, copy ${ant.project.name} directory to where you want${line.separator}to install ${ant.project.name} and:${line.separator}\" />\n         <replace file=\"${dist.dir}/README.txt\" token=\"@INSTALL_OR_RUN_FILE@\" value=\"1. cd into the new ${ant.project.name}\" />\n-        <replace file=\"${dist.dir}/README.txt\" token=\"@OPTIONAL_STEP@\" value=\"2. Execute ./${ant.project.name}.exe\" />\n+        <replace file=\"${dist.dir}/README.txt\" token=\"@OPTIONAL_STEP@\" value=\"2. Execute ./${ant.project.name}.exe${line.separator}3. Or execute .\\app\\${ant.project.name}.bat\" />\n     </target>\n \n     <target name=\"createUnixREADME\" depends=\"createREADME\" if=\"${isAppUnix}\">\n@@ -1088,7 +1088,7 @@\n         <replace file=\"${dist.dir}/README.txt\" token=\"@INSTALL_TYPE@\" value=\"Running\" />\n         <replace file=\"${dist.dir}/README.txt\" token=\"@INSTALL_PREFIX_HEADER@\" value=\"To install ${ant.project.name} for ${uname.os}, copy ${ant.project.name} directory to where you want${line.separator}to install ${ant.project.name} and:${line.separator}\" />\n         <replace file=\"${dist.dir}/README.txt\" token=\"@INSTALL_OR_RUN_FILE@\" value=\"1. cd into the new ${ant.project.name}\" />\n-        <replace file=\"${dist.dir}/README.txt\" token=\"@OPTIONAL_STEP@\" value=\"2. Execute ./bin/${ant.project.name}\" />\n+        <replace file=\"${dist.dir}/README.txt\" token=\"@OPTIONAL_STEP@\" value=\"2. Execute ./bin/${ant.project.name}${line.separator}3. Or execute ./lib/app/${ant.project.name}.sh\" />\n     </target>\n \n     <target name=\"createRPMREADME\" depends=\"createREADME\" if=\"${isXrpm}\">\n@@ -1262,6 +1262,18 @@\n                 <include name=\"hdf5.dll\"/>\n             </fileset>\n         </copy>\n+\n+        <!-- Create the run batch file -->\n+        <copy file=\"${packagefiles.dir}/hdfview.bat.in\" tofile=\"${release.dir}/hdfview.bat\" />\n+\n+        <!-- Set the correct classpath for the batch file -->\n+        <pathconvert targetos=\"windows\" property=\"runscript.classpath\" refid=\"jar-classpath\">\n+            <map from=\"${basedir}\" to=\"%INSTALLDIR%\" />\n+            <map from=\"${hdf.lib.dir}\" to=\"%INSTALLDIR%\\\\lib\" />\n+            <map from=\"${hdf5.lib.dir}\" to=\"$INSTALLDIR\\\\lib\" />\n+        </pathconvert>\n+        <property name=\"runscript.slf4j\" value=\"slf4j-nop${version.slf4j}.jar\" />\n+        <replace file=\"${release.dir}/hdfview.bat\" token=\"@SLF4J@\" value=\"${runscript.slf4j}\" />\n     </target>\n \n     <target name=\"deployUnix\" depends=\"deployBase, objectjar, jar, javadoc\" if=\"isUnix\">\n@@ -1288,6 +1300,14 @@\n                 <filename regex=\"libhdf5\\.so(\\.[0-9][0-9][0-9])$\"/>\n             </fileset>\n         </copy>\n+\n+        <!-- Create the .sh run script -->\n+        <copy file=\"${packagefiles.dir}/hdfview.sh.in\" tofile=\"${release.dir}/hdfview.sh\" />\n+\n+        <!-- Set the correct classpath for the run script -->\n+        <property name=\"runscript.slf4j\" value=\"slf4j-nop${version.slf4j}.jar\" />\n+        <replace file=\"${release.dir}/hdfview.sh\" token=\"@SLF4J@\" value=\"${runscript.slf4j}\" />\n+\n         <chmod perm=\"ugo+rx\">\n             <fileset dir=\"${release.dir}\" includes=\"**/**\" excludes=\"doc/** samples/**\" />\n         </chmod>"
  },
  {
    "sha": "bc728198308c1502e6202a6bc1def1b34a4f7f85",
    "filename": "docs/RELEASE.txt",
    "status": "modified",
    "additions": 10,
    "deletions": 15,
    "changes": 25,
    "blob_url": "https://github.com/HDFGroup/hdfview/blob/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/docs/RELEASE.txt",
    "raw_url": "https://github.com/HDFGroup/hdfview/raw/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/docs/RELEASE.txt",
    "contents_url": "https://api.github.com/repos/HDFGroup/hdfview/contents/docs/RELEASE.txt?ref=cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf",
    "patch": "@@ -20,24 +20,19 @@ newest jpackage for distribution.\n \n Major Enhancements\n ==============================================================================\n-    *  Converted to OpenJDK modules, for a smaller footprint and packaging\n-      improvements. Now uses the jpackage command for bundling HDFView and\n-      the JRE into a platform specific application.\n-\n+    *\n \n Major Bug Fixes\n ==============================================================================\n-    * Converted to Java Modules.\n-\n-    * Updated all SWT libraries.\n-\n-    * Resolved an issue with netcdf dimensions\n-\n-    * Fixed a bug with changing the working directory.\n-\n-    * Added code to use committed datatypes in creating new objects.\n-\n-    * Fixed enum creation and use.\n+    * Added optional startDir to command line options.\n+    * Corrected user.home vs user.dir confusion.\n+    * Split Current Working Directory options into three selections:\n+      a. Current Work Directory or user.dir system property\n+      b. User Home Directory or user.home system property\n+      c. User selected directory\n+\n+Minor Bug Fixes\n+==============================================================================\n \n \n Limitations / Known Problems"
  },
  {
    "sha": "766d8c3525a2b62cf5d3d3f993614f63729cbdd4",
    "filename": "docs/WorkingDirectory.txt",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/HDFGroup/hdfview/blob/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/docs/WorkingDirectory.txt",
    "raw_url": "https://github.com/HDFGroup/hdfview/raw/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/docs/WorkingDirectory.txt",
    "contents_url": "https://api.github.com/repos/HDFGroup/hdfview/contents/docs/WorkingDirectory.txt?ref=cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf",
    "patch": "@@ -0,0 +1,45 @@\n+File search location process in HDFView:\n+\n+# Default command line invocation of HDFView.\n+java -Djava.library.path=\"INSTALLDIR/lib/app:INSTALLDIR/lib/app/ext\" -Dhdfview.root=\"INSTALLDIR/lib/app\" -cp \"INSTALLDIR/lib/app/*\" hdf.view.HDFView \"ARGS\"\n+#    INSTALLDIR is the installation folder of the HDFView package.\n+#    ARGS are one or more of the following (noted by *);\n+       Usage:\n+           java(w)\n+           -Djava.library.path=\"INSTALLDIR/lib/app:INSTALLDIR/lib/app/ext\"\n+           -Dhdfview.root=\"INSTALLDIR/lib/app\"\n+           -cp \"INSTALLDIR/lib/app/*\"\n+       *        -Dhdf.hdf5lib.H5.hdf5lib=\"your HDF5 library path\"\n+       *        -Dhdf.hdflib.HDFLibrary.hdflib=\"your HDF4 library path\"\n+           hdf.view.HDFView\n+       *        -root \"the directory where the HDFView is installed\"\n+       *        -start \"the directory HDFView searches for files\"\n+       *        -geometry or -g \"the preferred window size as WIDTHxHEIGHT+XOFF+YOFF\"\n+       *        -java.version \"show the version of jave used to build the HDFView and exit\"\n+       *        [filename] \"the file to open\"\n+\n+The following locations are involved in where the working directory for a file search dialog will begin.\n+--------------------------------------------------------------------------------------------------------\n+ INITIAL WORKING DIRECTORY\n+   A. A system property, hdfview.workdir, which will be used as the initial working directory.\n+      This would require adding a define to the command line invocation of HDFView;\n+        java ... -Dhdfview.workdir=\"some/path\" ...\n+   B. A specified directory as the value to the startDir argument from the command line invocation of HDFView.\n+      java ... hdf.view.HDFView startDir=some_location \"ARGS\"\n+   C. A directory specified by the system property, user.dir.\n+      which is usually the current user location HDFView was launched\n+\n+   The difference between A and B is that the -startDir=some_location can be passed into a script containing the command line.\n+\n+ ACTIVE WORKING DIRECTORY\n+   A. The initial working directory as described above.\n+   B. The directory used to load a file specified as an argument on the command line invocation of HDFView.\n+      java ... hdf.view.HDFView startDir=some_location \"ARGS\"\n+   C. A location saved in the HDFView property file, .hdfview3.1.2 in the user home directory.\n+      work.dir=dir_path\n+      This is property is only set by using the \"User Options\" dialog.\n+   D. The last directory used to load a file using the HDFView file search dialog.\n+   E. Using the \"User Options\" dialog to reset the working directory:\n+      1. To the user home directory.\n+      2. To the system identified working directory.\n+      3. To a directory selected by the user using a file system browse dialog or typed into a text box."
  },
  {
    "sha": "f868648937d8829cdfc8bbc404d3b3b076f431ec",
    "filename": "package_files/hdfview.sh.in",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/HDFGroup/hdfview/blob/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/package_files/hdfview.sh.in",
    "raw_url": "https://github.com/HDFGroup/hdfview/raw/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/package_files/hdfview.sh.in",
    "contents_url": "https://api.github.com/repos/HDFGroup/hdfview/contents/package_files/hdfview.sh.in?ref=cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf",
    "patch": "@@ -28,4 +28,4 @@ export JAVAOPTS=-Xmx1024M\n #\"$JAVABIN/java\" \"$JAVAOPTS\" -Djava.library.path=\"$INSTALLDIR/lib/app\" -Dhdfview.root=\"$INSTALLDIR/lib/app\" -jar \"$INSTALLDIR/lib/app/HDFView.jar\" \"$@\"\n \n # Default invocation when using modules\n-\"$JAVABIN/java\" \"$JAVAOPTS\" -Djava.library.path=\"$INSTALLDIR/lib/app:$INSTALLDIR/lib/app/ext\" -Dhdfview.root=\"$INSTALLDIR/lib/app\" -cp \"$INSTALLDIR/lib/app/*\" hdf.view.HDFView \"$@\"\n\\ No newline at end of file\n+\"$JAVABIN/java\" \"$JAVAOPTS\" -Djava.library.path=\"$INSTALLDIR/lib/app:$INSTALLDIR/lib/app/ext\" -Dhdfview.root=\"$INSTALLDIR/lib/app\" -cp \"$INSTALLDIR/lib/app/*\" hdf.view.HDFView \"$@\""
  },
  {
    "sha": "74a6a5c5cd5916641a06307bf89acdb11e9a9a0b",
    "filename": "src/org.hdfgroup.hdfview/hdf/view/HDFView.java",
    "status": "modified",
    "additions": 53,
    "deletions": 21,
    "changes": 74,
    "blob_url": "https://github.com/HDFGroup/hdfview/blob/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/src/org.hdfgroup.hdfview/hdf/view/HDFView.java",
    "raw_url": "https://github.com/HDFGroup/hdfview/raw/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/src/org.hdfgroup.hdfview/hdf/view/HDFView.java",
    "contents_url": "https://api.github.com/repos/HDFGroup/hdfview/contents/src/org.hdfgroup.hdfview/hdf/view/HDFView.java?ref=cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf",
    "patch": "@@ -116,6 +116,9 @@\n     /* The directory where HDFView is installed */\n     private String                     rootDir;\n \n+    /* The initial directory where HDFView looks for files */\n+    private String                     startDir;\n+\n     /* The current working directory */\n     private String                     currentDir;\n \n@@ -168,7 +171,7 @@\n \n     private static final String        ABOUT_HDFVIEW = \"HDF Viewer, \" + \"Version \" + ViewProperties.VERSION + \"\\n\"\n             + \"For \" + System.getProperty(\"os.name\") + \"\\n\\n\"\n-            + \"Copyright \" + '\\u00a9' + \" 2006-2020 The HDF Group.\\n\"\n+            + \"Copyright \" + '\\u00a9' + \" 2006-2021 The HDF Group.\\n\"\n             + \"All rights reserved.\";\n \n     /* GUI component: The toolbar for open, close, help and hdf4 and hdf5 library information */\n@@ -203,17 +206,20 @@\n      *\n      * @param root\n      *            the directory where the HDFView is installed.\n+     * @param start_dir\n+     *            the starting directory for file searches\n      */\n-    public HDFView(String root) {\n+    public HDFView(String root, String start_dir) {\n         log.debug(\"Root is {}\", root);\n \n         if (display == null || display.isDisposed()) display = new Display();\n \n         rootDir = root;\n+        startDir = start_dir;\n \n         //editGUIs = new Vector<Object>();\n \n-        props = new ViewProperties(rootDir);\n+        props = new ViewProperties(rootDir, startDir);\n         try {\n             props.load();\n         }\n@@ -230,7 +236,7 @@ public HDFView(String root) {\n             currentDir = ViewProperties.getWorkDir();\n \n         if (currentDir == null)\n-            currentDir = System.getProperty(\"user.home\");\n+            currentDir = System.getProperty(\"user.dir\");\n \n         log.info(\"Current directory is {}\", currentDir);\n \n@@ -319,8 +325,9 @@ public Shell openMainWindow(List<File> flist, int width, int height, int x, int\n                     }\n                     catch (Exception ex) {}\n \n-                    urlBar.add(currentFile, 0);\n-                    urlBar.select(0);\n+                    // first entry is always the workdir\n+                    urlBar.add(currentFile, 1);\n+                    urlBar.select(1);\n                 }\n                 catch (Exception ex) {\n                     showError(ex.toString());\n@@ -564,8 +571,9 @@ public void widgetSelected(SelectionEvent e) {\n                         log.debug(\"unable to remove {} from urlBar\", filename);\n                     }\n \n-                    urlBar.add(filename, 0);\n-                    urlBar.select(0);\n+                    // first entry is always the workdir\n+                    urlBar.add(filename, 1);\n+                    urlBar.select(1);\n                 }\n                 catch (Exception ex) {\n                     display.beep();\n@@ -632,8 +640,9 @@ public void widgetSelected(SelectionEvent e) {\n                         log.debug(\"unable to remove {} from urlBar\", filename);\n                     }\n \n-                    urlBar.add(filename, 0);\n-                    urlBar.select(0);\n+                    // first entry is always the workdir\n+                    urlBar.add(filename, 1);\n+                    urlBar.select(1);\n                 }\n                 catch (Exception ex) {\n                     display.beep();\n@@ -839,7 +848,8 @@ public void widgetSelected(SelectionEvent e) {\n \n                 // TODO: this functionality is currently broken because isWorkDirChanged() is not exposed correctly.\n                 // if (userOptionDialog.isWorkDirChanged())\n-                //     currentDir = ViewProperties.getWorkDir();\n+                // this will always overwrite the currentDir until isWorkDirChanged() is fixed\n+                currentDir = ViewProperties.getWorkDir();\n \n                 //if (userOptionDialog.isFontChanged()) {\n                 Font font = null;\n@@ -1756,8 +1766,9 @@ private void openLocalFile(String filename, int fileAccessID) {\n                 log.trace(\"unable to remove {} from urlBar\", filename);\n             }\n \n-            urlBar.add(filename, 0);\n-            urlBar.select(0);\n+            // first entry is always the workdir\n+            urlBar.add(filename, 1);\n+            urlBar.select(1);\n         }\n         else {\n             if (!isTesting) {\n@@ -1800,8 +1811,9 @@ private void openLocalFile(String filename, int fileAccessID) {\n                         log.trace(\"unable to remove {} from urlBar\", chosenFiles[i].getAbsolutePath());\n                     }\n \n-                    urlBar.add(chosenFiles[i].getAbsolutePath(), 0);\n-                    urlBar.select(0);\n+                    // first entry is always the workdir\n+                    urlBar.add(chosenFiles[i].getAbsolutePath(), 1);\n+                    urlBar.select(1);\n \n                     log.trace(\"openLocalFile treeView.openFile(chosenFiles[{}]: {}\",i,chosenFiles[i].getAbsolutePath());\n                     try {\n@@ -1847,8 +1859,9 @@ private void openLocalFile(String filename, int fileAccessID) {\n                     log.trace(\"unable to remove {} from urlBar\", chosenFile.getAbsolutePath());\n                 }\n \n-                urlBar.add(chosenFile.getAbsolutePath(), 0);\n-                urlBar.select(0);\n+                // first entry is always the workdir\n+                urlBar.add(chosenFile.getAbsolutePath(), 1);\n+                urlBar.select(1);\n \n                 log.trace(\"openLocalFile treeView.openFile(chosenFile[{}]: {}\", chosenFile.getAbsolutePath(), accessMode + FileFormat.OPEN_NEW);\n                 try {\n@@ -1969,8 +1982,9 @@ private void convertFile(String typeFrom, String typeTo) {\n                     log.trace(\"unable to remove {} from urlBar\", filename);\n                 }\n \n-                urlBar.add(filename, 0);\n-                urlBar.select(0);\n+                // first entry is always the workdir\n+                urlBar.add(filename, 1);\n+                urlBar.select(1);\n             }\n             catch (Exception ex) {\n                 showError(ex.toString());\n@@ -2450,6 +2464,9 @@ public void widgetSelected(SelectionEvent e) {\n      *        -Dhdf.hdf5lib.H5.hdf5lib=\"your HDF5 library path\"\n      *        -Dhdf.hdflib.HDFLibrary.hdflib=\"your HDF4 library path\"\n      *        -root \"the directory where the HDFView is installed\"\n+     *        -start \"the directory HDFView searches for files\"\n+     *        -geometry or -g \"the preferred window size as WIDTHxHEIGHT+XOFF+YOFF\"\n+     *        -java.version \"show the version of jave used to build the HDFView and exit\"\n      *        [filename] \"the file to open\"\n      * </pre>\n      *\n@@ -2459,9 +2476,10 @@ public static void main(String[] args) {\n         if (display == null || display.isDisposed()) display = new Display();\n \n         String rootDir = System.getProperty(\"hdfview.root\");\n-        log.trace(\"main: rootDir = {} \", rootDir);\n         if (rootDir == null)\n             rootDir = System.getProperty(\"user.dir\");\n+        String startDir = System.getProperty(\"user.dir\");\n+        log.trace(\"main: rootDir = {}  startDir = {}\", rootDir, startDir);\n \n         File tmpFile = null;\n         Monitor primaryMonitor = display.getPrimaryMonitor();\n@@ -2488,6 +2506,19 @@ else if(tmpFile.isFile())\n                 }\n                 catch (Exception ex) {}\n             }\n+            else if (\"-start\".equalsIgnoreCase(args[i])) {\n+                j--;\n+                try {\n+                    j--;\n+                    tmpFile = new File(args[++i]);\n+\n+                    if(tmpFile.isDirectory())\n+                        startDir = tmpFile.getPath();\n+                    else if(tmpFile.isFile())\n+                        startDir = tmpFile.getParent();\n+                }\n+                catch (Exception ex) {}\n+            }\n             else if(\"-g\".equalsIgnoreCase(args[i]) || \"-geometry\".equalsIgnoreCase(args[i])) {\n                 j--;\n                 // -geometry WIDTHxHEIGHT+XOFF+YOFF\n@@ -2558,12 +2589,13 @@ else if(\"-java.version\".equalsIgnoreCase(args[i])) {\n \n         final ArrayList<File> theFileList = fList;\n         final String the_rootDir = rootDir;\n+        final String the_startDir = startDir;\n         final int the_X = X, the_Y = Y, the_W = W, the_H = H;\n \n         display.syncExec(new Runnable() {\n             @Override\n             public void run() {\n-                HDFView app = new HDFView(the_rootDir);\n+                HDFView app = new HDFView(the_rootDir, the_startDir);\n \n                 // TODO: Look for a better solution to native dialog problem\n                 app.setTestState(false);"
  },
  {
    "sha": "40127d319c3b1b13526e00d5394de9f0b053c180",
    "filename": "src/org.hdfgroup.hdfview/hdf/view/TreeView/DefaultTreeView.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/HDFGroup/hdfview/blob/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/src/org.hdfgroup.hdfview/hdf/view/TreeView/DefaultTreeView.java",
    "raw_url": "https://github.com/HDFGroup/hdfview/raw/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/src/org.hdfgroup.hdfview/hdf/view/TreeView/DefaultTreeView.java",
    "contents_url": "https://api.github.com/repos/HDFGroup/hdfview/contents/src/org.hdfgroup.hdfview/hdf/view/TreeView/DefaultTreeView.java?ref=cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf",
    "patch": "@@ -423,8 +423,9 @@ public void mouseUp(MouseEvent e) {\n                 }\r\n                 catch (Exception ex) {}\r\n \r\n-                recentFilesCombo.add(filename, 0);\r\n-                recentFilesCombo.select(0);\r\n+                // first entry is always the workdir\r\n+                recentFilesCombo.add(filename, 1);\r\n+                recentFilesCombo.select(1);\r\n \r\n                 ((HDFView) viewer).showMetaData(selectedObject);\r\n             }\r"
  },
  {
    "sha": "bc8d99e601275ca97b293da1c88745cbaa98e1e1",
    "filename": "src/org.hdfgroup.hdfview/hdf/view/ViewProperties.java",
    "status": "modified",
    "additions": 15,
    "deletions": 8,
    "changes": 23,
    "blob_url": "https://github.com/HDFGroup/hdfview/blob/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/src/org.hdfgroup.hdfview/hdf/view/ViewProperties.java",
    "raw_url": "https://github.com/HDFGroup/hdfview/raw/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/src/org.hdfgroup.hdfview/hdf/view/ViewProperties.java",
    "contents_url": "https://api.github.com/repos/HDFGroup/hdfview/contents/src/org.hdfgroup.hdfview/hdf/view/ViewProperties.java?ref=cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf",
    "patch": "@@ -158,7 +158,7 @@\n     private static ArrayList<String> recentFiles            = new ArrayList<>(MAX_RECENT_FILES + 5);\n \n     /** default starting file directory */\n-    private static String            workDir                = System.getProperty(\"user.home\");\n+    private static String            workDir                = System.getProperty(\"user.dir\");\n \n     /** default HDF file extensions */\n     private static String            fileExt                = \"hdf, h4, hdf4, h5, hdf5, he2, he5\";\n@@ -242,8 +242,10 @@\n      *\n      * @param viewRoot\n      *            the root directory of the HDFView\n+     * @param viewStart\n+     *            the starting directory for file searches\n      */\n-    public ViewProperties(String viewRoot) {\n+    public ViewProperties(String viewRoot, String viewStart) {\n         super();\n \n         // look for the property file in the user's home directory\n@@ -255,10 +257,12 @@ public ViewProperties(String viewRoot) {\n \n         setRootDir(viewRoot);\n         log.trace(\"rootDir is {}\", rootDir);\n+        setWorkDir(viewStart);\n+        setDefault(\"work.dir\", viewStart);\n \n         setUsersGuide(rootDir + usersGuide);\n \n-        setDefault(\"users.guide\", System.getProperty(\"user.dir\") + \"/UsersGuide/index.html\");\n+        setDefault(\"users.guide\", viewRoot + \"/UsersGuide/index.html\");\n         setDefault(\"image.contrast\", false);\n         setDefault(\"image.showvalues\", false);\n         setDefault(\"file.mode\", \"r\");\n@@ -271,7 +275,6 @@ public ViewProperties(String viewRoot) {\n         setDefault(\"h5file.indexType\", \"H5_INDEX_NAME\");\n         setDefault(\"h5file.indexOrder\", \"H5_ITER_INC\");\n         setDefault(\"h4toh5.converter\", \"\");\n-        setDefault(\"work.dir\", System.getProperty(\"user.home\"));\n         setDefault(\"file.extension\", \"hdf, h4, hdf4, h5, hdf5, he2, he5\");\n         setDefault(\"font.size\", 12);\n         setDefault(\"font.type\", \"Serif\");\n@@ -1295,8 +1298,10 @@ public void load() throws IOException {\n         setMaxMembers(getInt(\"max.members\"));\n \n         // load the most recent file list from the property file\n-        log.trace(\"load user properties: most recent file list\");\n+        log.trace(\"load user properties: most recent file list with {}\", getWorkDir());\n         String theFile = null;\n+        // first entry should be the working dir\n+        recentFiles.add(getWorkDir());\n         for (int i = 0; i < MAX_RECENT_FILES; i++) {\n             theFile = getString(\"recent.file\" + i);\n             if ((theFile != null) && !recentFiles.contains(theFile)) {\n@@ -1417,8 +1422,10 @@ public void save() throws IOException {\n         int size = recentFiles.size();\n         int minSize = Math.min(size, MAX_RECENT_FILES);\n         log.trace(\"save user properties: most recent files size={}\", size);\n-        for (int i = 0; i < minSize; i++) {\n-            theFile = recentFiles.get(i);\n+        // The first entry is always the working dir\n+        for (int i = 0; i < minSize - 1; i++) {\n+            theFile = recentFiles.get(i+1);\n+            log.trace(\"save user properties: save recent file={}\", theFile);\n             if ((theFile != null) && (theFile.length() > 0)) setValue(\"recent.file\" + i, theFile);\n         }\n \n@@ -1506,7 +1513,7 @@ public static String getWorkDir() {\n             workPath = System.getProperty(\"hdfview.workdir\");\n             log.trace(\"getWorkDir: hdfview.workdir={}\", workPath);\n             if (workPath == null) {\n-                workPath = System.getProperty(\"user.home\");\n+                workPath = System.getProperty(\"user.dir\");\n             }\n         }\n         log.trace(\"getWorkDir: final workPath={}\", workPath);"
  },
  {
    "sha": "af998f4d77d851ff45c4d69ec5a70dda56869955",
    "filename": "src/org.hdfgroup.hdfview/hdf/view/dialog/UserOptionsGeneralPage.java",
    "status": "modified",
    "additions": 34,
    "deletions": 4,
    "changes": 38,
    "blob_url": "https://github.com/HDFGroup/hdfview/blob/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/src/org.hdfgroup.hdfview/hdf/view/dialog/UserOptionsGeneralPage.java",
    "raw_url": "https://github.com/HDFGroup/hdfview/raw/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/src/org.hdfgroup.hdfview/hdf/view/dialog/UserOptionsGeneralPage.java",
    "contents_url": "https://api.github.com/repos/HDFGroup/hdfview/contents/src/org.hdfgroup.hdfview/hdf/view/dialog/UserOptionsGeneralPage.java?ref=cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf",
    "patch": "@@ -46,8 +46,8 @@\n \r\n     private Combo fontSizeChoice, fontTypeChoice, delimiterChoice, imageOriginChoice, indexBaseChoice;\r\n \r\n-    private Button checkCurrentUserDir, checkAutoContrast, checkShowValues;\r\n-    private Button currentDirButton, rwButton, helpButton;\r\n+    private Button checkCurrentUserDir, checkUserHomeDir, checkAutoContrast, checkShowValues;\r\n+    private Button currentDirButton, userHomeButton, rwButton, helpButton;\r\n     private Button checkReadOnly, checkReadAll;\r\n \r\n     private boolean isFontChanged;\r\n@@ -95,6 +95,8 @@ public boolean performOk() {\n         if (workField != null) {\r\n             String workPath = workField.getText();\r\n             if (checkCurrentUserDir.getSelection())\r\n+                workPath = System.getProperty(\"user.dir\");\r\n+            else if (checkUserHomeDir.getSelection())\r\n                 workPath = System.getProperty(\"user.home\");\r\n \r\n             if ((workPath != null) && (workPath.length() > 0)) {\r\n@@ -214,10 +216,21 @@ protected void load() {\n \r\n         workField.setText(workDir);\r\n \r\n-        if (workDir.equals(System.getProperty(\"user.home\"))) {\r\n+        if (workDir.equals(System.getProperty(\"user.dir\"))) {\r\n             checkCurrentUserDir.setSelection(true);\r\n+            checkUserHomeDir.setSelection(false);\r\n             workField.setEnabled(false);\r\n         }\r\n+        else if (workDir.equals(System.getProperty(\"user.home\"))) {\r\n+            checkCurrentUserDir.setSelection(false);\r\n+            checkUserHomeDir.setSelection(true);\r\n+            workField.setEnabled(false);\r\n+        }\r\n+        else {\r\n+            checkCurrentUserDir.setSelection(false);\r\n+            checkUserHomeDir.setSelection(false);\r\n+            workField.setEnabled(true);\r\n+        }\r\n \r\n         log.trace(\"UserOptionsGeneralPage: workDir={}\", workDir);\r\n \r\n@@ -319,17 +332,34 @@ protected Control createContents(Composite parent) {\n \r\n         checkCurrentUserDir = new Button(workingDirectoryGroup, SWT.CHECK);\r\n         checkCurrentUserDir.setFont(curFont);\r\n-        checkCurrentUserDir.setText(\"\\\"Current Working Directory\\\" or\");\r\n+        checkCurrentUserDir.setText(\"\\\"User Work\\\" or\");\r\n         checkCurrentUserDir.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, false));\r\n         checkCurrentUserDir.addSelectionListener(new SelectionAdapter() {\r\n             @Override\r\n             public void widgetSelected(SelectionEvent e) {\r\n                 boolean isCheckCurrentUserDirSelected = checkCurrentUserDir.getSelection();\r\n+                if (isCheckCurrentUserDirSelected)\r\n+                    checkUserHomeDir.setSelection(false);\r\n                 workField.setEnabled(!isCheckCurrentUserDirSelected);\r\n                 currentDirButton.setEnabled(!isCheckCurrentUserDirSelected);\r\n             }\r\n         });\r\n \r\n+        checkUserHomeDir = new Button(workingDirectoryGroup, SWT.CHECK);\r\n+        checkUserHomeDir.setFont(curFont);\r\n+        checkUserHomeDir.setText(\"\\\"User Home\\\" or\");\r\n+        checkUserHomeDir.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, false));\r\n+        checkUserHomeDir.addSelectionListener(new SelectionAdapter() {\r\n+            @Override\r\n+            public void widgetSelected(SelectionEvent e) {\r\n+                boolean isCheckUserHomeDirSelected = checkUserHomeDir.getSelection();\r\n+                if (isCheckUserHomeDirSelected)\r\n+                    checkCurrentUserDir.setSelection(false);\r\n+                workField.setEnabled(!isCheckUserHomeDirSelected);\r\n+                currentDirButton.setEnabled(!isCheckUserHomeDirSelected);\r\n+            }\r\n+        });\r\n+\r\n         workField = new Text(workingDirectoryGroup, SWT.SINGLE | SWT.BORDER);\r\n         workField.setFont(curFont);\r\n         workField.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));\r"
  },
  {
    "sha": "e117e1011de9987cf77f2eeda08f7814dd4568fa",
    "filename": "test/org.hdfgroup.hdfview.test/uitest/AbstractWindowTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/HDFGroup/hdfview/blob/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/test/org.hdfgroup.hdfview.test/uitest/AbstractWindowTest.java",
    "raw_url": "https://github.com/HDFGroup/hdfview/raw/cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf/test/org.hdfgroup.hdfview.test/uitest/AbstractWindowTest.java",
    "contents_url": "https://api.github.com/repos/HDFGroup/hdfview/contents/test/org.hdfgroup.hdfview.test/uitest/AbstractWindowTest.java?ref=cfb4370c4b3b0d9f8fce22616537f8d8ceb52eaf",
    "patch": "@@ -142,7 +142,7 @@ public void run() {\n \n                         while (true) {\n                             // open and layout the shell\n-                            HDFView window = new HDFView(rootDir);\n+                            HDFView window = new HDFView(rootDir, null);\n \n                             // Set the testing state to handle the problem with testing\n                             // of native dialogs"
  }
]
