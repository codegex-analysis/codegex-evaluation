[
  {
    "sha": "7b02516251dc8f1178597bb6b577efd8e397723f",
    "filename": "LernJava/.idea/misc.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/.idea/misc.xml",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/.idea/misc.xml?ref=0710b75131e3cbfbb466fa054c49427dce9251c4",
    "patch": "@@ -8,7 +8,7 @@\n       </list>\n     </option>\n   </component>\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"false\" project-jdk-name=\"9\" project-jdk-type=\"JavaSDK\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_15\" default=\"false\" project-jdk-name=\"openjdk-15\" project-jdk-type=\"JavaSDK\">\n     <output url=\"file://$PROJECT_DIR$/out\" />\n   </component>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "6c0b8635858dc7ad44b93df54b762707ce49eefc",
    "filename": "LernJava/.idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/.idea/vcs.xml",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/.idea/vcs.xml?ref=0710b75131e3cbfbb466fa054c49427dce9251c4",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"$PROJECT_DIR$/..\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "5411bc49dd03b6b0b162278ddd710585df4c6ea2",
    "filename": "LernJava/src/main/java/ru/neothat/DoubleHashTableImpl.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/DoubleHashTableImpl.java",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/DoubleHashTableImpl.java",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/src/main/java/ru/neothat/DoubleHashTableImpl.java?ref=0710b75131e3cbfbb466fa054c49427dce9251c4",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.neothat;\n+\n+public class DoubleHashTableImpl<K, V> extends HashTableImpl<K, V>{\n+\n+    private static final int DOUBLE_HASH_CONST = 5;\n+\n+    public DoubleHashTableImpl(int maxSize) {\n+        super(maxSize);\n+    }\n+\n+    @Override\n+    protected int getStep(K key) {\n+        return hashDoubleFunc(key);\n+    }\n+\n+    private int hashDoubleFunc(K key){\n+        return DOUBLE_HASH_CONST - (key.hashCode() % DOUBLE_HASH_CONST);\n+    }\n+}"
  },
  {
    "sha": "f81d10ad5b4e4c92d4ca0cb14d7b0833965a61c6",
    "filename": "LernJava/src/main/java/ru/neothat/HashTable.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/HashTable.java",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/HashTable.java",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/src/main/java/ru/neothat/HashTable.java?ref=0710b75131e3cbfbb466fa054c49427dce9251c4",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.neothat;\n+\n+public interface HashTable<K, V> {\n+\n+    boolean put(K key, V value);\n+\n+    V get(K key);\n+\n+    V remove(K key);\n+\n+    int size();\n+\n+    boolean isEmpty();\n+\n+    void display();\n+\n+    interface Entry<K, V>{\n+        K getKey();\n+\n+        V getValue();\n+\n+        void setValue(V value);\n+    }\n+}"
  },
  {
    "sha": "821e5d25459cf65b594b663c5c77e8b7a1e920bf",
    "filename": "LernJava/src/main/java/ru/neothat/HashTableImpl.java",
    "status": "added",
    "additions": 133,
    "deletions": 0,
    "changes": 133,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/HashTableImpl.java",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/HashTableImpl.java",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/src/main/java/ru/neothat/HashTableImpl.java?ref=0710b75131e3cbfbb466fa054c49427dce9251c4",
    "patch": "@@ -0,0 +1,133 @@\n+package ru.neothat;\n+\n+public class HashTableImpl<K, V> implements HashTable<K, V> {\n+\n+    static class Item<K, V> implements Entry<K, V> {\n+        private final K key;\n+        private V value;\n+\n+        public Item(K key, V value) {\n+            this.key = key;\n+            this.value = value;\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return \"Item{\" +\n+                    \"key=\" + key +\n+                    \", value=\" + value +\n+                    '}';\n+        }\n+\n+        @Override\n+        public K getKey() {\n+            return key;\n+        }\n+\n+        @Override\n+        public V getValue() {\n+            return value;\n+        }\n+\n+        @Override\n+        public void setValue(V value) {\n+            this.value = value;\n+        }\n+    }\n+\n+    private final Item<K, V>[] data;\n+    private int size;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public HashTableImpl(int maxSize) {\n+        this.data = new Item[maxSize * 2];\n+    }\n+\n+    private int hashFunc(K key) {\n+        return key.hashCode() % data.length;\n+    }\n+\n+    @Override\n+    public boolean put(K key, V value) {\n+        int index = hashFunc(key);\n+\n+        int count = 0;\n+        while (data[index] != null) {\n+            if (data[index].getKey().equals(key)){\n+                data[index].setValue(value);\n+                return true;\n+            }\n+\n+            if (count >= data.length){\n+                return false;\n+            }\n+\n+            count++;\n+            index += getStep(key);\n+            index %= data.length;\n+        }\n+        data[index] = new Item<>(key, value);\n+        size++;\n+        return true;\n+    }\n+\n+    @Override\n+    public V get(K key) {\n+        int index = indexOf(key);\n+        return index != -1 ? data[index].getValue() : null;\n+    }\n+\n+    private int indexOf(K key){\n+        int index = hashFunc(key);\n+\n+        int count = 0;\n+        while (count < data.length){\n+            Item<K, V> item = data[index];\n+            if (item != null && item.getKey().equals(key)){\n+                return index;\n+            }\n+            count++;\n+            index += getStep(key);\n+            index %= data.length;\n+        }\n+\n+        return -1;\n+    }\n+\n+    protected int getStep(K key) {\n+        return 1;\n+    }\n+\n+    @Override\n+    public V remove(K key) {\n+        int index = indexOf(key);\n+        if (index == -1){\n+            return null;\n+        }\n+\n+        Item<K, V> item = data[index];\n+        data[index] = null;\n+        size--;\n+        return item.getValue();\n+    }\n+\n+    @Override\n+    public int size() {\n+        return size;\n+    }\n+\n+    @Override\n+    public boolean isEmpty() {\n+        return size == 0;\n+    }\n+\n+    @Override\n+    public void display() {\n+        System.out.println(\"---------\");\n+        for (int i = 0; i < data.length; i++) {\n+            System.out.printf(\"%d = [%s]\", i, data[i]);\n+            System.out.println();\n+        }\n+        System.out.println(\"---------\");\n+    }\n+}"
  },
  {
    "sha": "de8fbb968e9a9b538ccc9a01a6a6224dfdc5c8d0",
    "filename": "LernJava/src/main/java/ru/neothat/LinkedHashTable.java",
    "status": "added",
    "additions": 117,
    "deletions": 0,
    "changes": 117,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/LinkedHashTable.java",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/LinkedHashTable.java",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/src/main/java/ru/neothat/LinkedHashTable.java?ref=0710b75131e3cbfbb466fa054c49427dce9251c4",
    "patch": "@@ -0,0 +1,117 @@\n+package ru.neothat;\n+\n+import java.util.LinkedList;\n+\n+public class LinkedHashTable<K, V> implements HashTable<K, V> {\n+\n+    static class Item<K, V> implements Entry<K, V> {\n+\n+        private final K key;\n+        private V value;\n+        public Item(K key, V value) {\n+            this.key = key;\n+            this.value = value;\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return \"Item{\" +\n+                    \"key=\" + key +\n+                    \", value=\" + value +\n+                    '}';\n+        }\n+\n+        @Override\n+        public K getKey() {\n+            return key;\n+        }\n+\n+        @Override\n+        public V getValue() {\n+            return value;\n+        }\n+\n+        @Override\n+        public void setValue(V value) {\n+            this.value = value;\n+        }\n+\n+    }\n+    private final LinkedList<Item<K, V>>[] data;\n+\n+    private int size;\n+\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public LinkedHashTable(int maxSize) {\n+        this.data = new LinkedList[maxSize];\n+        for (int i = 0; i < data.length; i++) {\n+            data[i] = new LinkedList<>();\n+        }\n+    }\n+\n+    private int hashFunc(K key) {\n+        return key.hashCode() % data.length;\n+    }\n+\n+    @Override\n+    public boolean put(K key, V value) {\n+        int index = hashFunc(key);\n+        data[index].add(new Item<>(key, value));\n+        size++;\n+        return true;\n+    }\n+\n+    @Override\n+    public V get(K key) {\n+        int arrayIndex = hashFunc(key);\n+        int listIndex = indexOf(key);\n+        return listIndex != -1 ? data[arrayIndex].get(listIndex).value : null;\n+    }\n+\n+    private int indexOf(K key) {\n+        int index = hashFunc(key);\n+        LinkedList<Item<K, V>> items = data[index];\n+        for (int i = 0; i < items.size(); i++) {\n+            Item<K, V> item = items.get(i);\n+            if (item.key.equals(key)) {\n+                return i;\n+            }\n+        }\n+\n+        return -1;\n+    }\n+\n+    @Override\n+    public V remove(K key) {\n+        int arrayIndex = hashFunc(key);\n+        int listIndex = indexOf(key);\n+        if (listIndex == -1) {\n+            return null;\n+        }\n+\n+        Item<K, V> item = data[arrayIndex].remove(listIndex);\n+        size--;\n+        return item.value;\n+    }\n+\n+    @Override\n+    public int size() {\n+        return size;\n+    }\n+\n+    @Override\n+    public boolean isEmpty() {\n+        return size == 0;\n+    }\n+\n+    @Override\n+    public void display() {\n+        for (int i = 0; i < data.length; i++) {\n+            System.out.printf(\"%d = [%s]\", i, data[i]);\n+            System.out.println();\n+        }\n+    }\n+\n+\n+}"
  },
  {
    "sha": "789ea41843fe9e534ac37db6b511444346e19292",
    "filename": "LernJava/src/main/java/ru/neothat/Main.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/Main.java",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/Main.java",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/src/main/java/ru/neothat/Main.java?ref=0710b75131e3cbfbb466fa054c49427dce9251c4",
    "patch": "@@ -0,0 +1,28 @@\n+package ru.neothat;\n+\n+public class Main {\n+    public static void main(String[] args) {\n+//        HashTable<Product, Integer> hashTable = new HashTableImpl<>(5);\n+//        HashTable<Product, Integer> hashTable = new DoubleHashTableImpl<>(5);\n+        HashTable<Product, Integer> hashTable = new LinkedHashTable<>(5);\n+\n+        hashTable.put(new Product(1, \"Orange\"), 150);\n+        hashTable.put(new Product(77, \"Banana\"), 100);\n+        hashTable.put(new Product(77, \"Carrot\"), 228);\n+        hashTable.put(new Product(60, \"Lemon\"), 250);\n+        hashTable.put(new Product(52, \"Milk\"), 120);\n+        hashTable.put(new Product(21, \"Potato\"), 67);\n+\n+        System.out.println(\"Size is \" + hashTable.size());\n+        hashTable.display();\n+\n+        System.out.println(\"Cost potato is \" + hashTable.get(new Product(21, \"Potato\")));\n+        System.out.println(\"Cost banana is \" + hashTable.get(new Product(77, \"Banana\")));\n+\n+        hashTable.remove(new Product(21, \"Potato\"));\n+        hashTable.remove(new Product(77, \"Banana\"));\n+\n+        hashTable.display();\n+\n+    }\n+}"
  },
  {
    "sha": "3cffbc001706e31b6dd43daef4dca870d50d69d1",
    "filename": "LernJava/src/main/java/ru/neothat/Product.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/Product.java",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/src/main/java/ru/neothat/Product.java",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/src/main/java/ru/neothat/Product.java?ref=0710b75131e3cbfbb466fa054c49427dce9251c4",
    "patch": "@@ -0,0 +1,43 @@\n+package ru.neothat;\n+\n+import java.util.Objects;\n+\n+public class Product {\n+    private final int id;\n+    private final String title;\n+\n+    public Product(int id, String title) {\n+        this.id = id;\n+        this.title = title;\n+    }\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Product{\" +\n+                \"id=\" + id +\n+                \", title='\" + title + '\\'' +\n+                '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        Product product = (Product) o;\n+        return id == product.id &&\n+                Objects.equals(title, product.title);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return id;\n+    }\n+}"
  },
  {
    "sha": "03db69eca5cc380f6eaedc922089784fd299d321",
    "filename": "LernJava/target/classes/ru/neothat/DoubleHashTableImpl.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/DoubleHashTableImpl.class",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/DoubleHashTableImpl.class",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/target/classes/ru/neothat/DoubleHashTableImpl.class?ref=0710b75131e3cbfbb466fa054c49427dce9251c4"
  },
  {
    "sha": "b35971c75d2a614165fa649176e99762a3ab7414",
    "filename": "LernJava/target/classes/ru/neothat/HashTable$Entry.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/HashTable$Entry.class",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/HashTable$Entry.class",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/target/classes/ru/neothat/HashTable$Entry.class?ref=0710b75131e3cbfbb466fa054c49427dce9251c4"
  },
  {
    "sha": "d0a7b6bebff238d1fa5239595ee654b13d7cd657",
    "filename": "LernJava/target/classes/ru/neothat/HashTable.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/HashTable.class",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/HashTable.class",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/target/classes/ru/neothat/HashTable.class?ref=0710b75131e3cbfbb466fa054c49427dce9251c4"
  },
  {
    "sha": "75f49c62e2d1dc16921de2b25c9c07758335a1d9",
    "filename": "LernJava/target/classes/ru/neothat/HashTableImpl$Item.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/HashTableImpl$Item.class",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/HashTableImpl$Item.class",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/target/classes/ru/neothat/HashTableImpl$Item.class?ref=0710b75131e3cbfbb466fa054c49427dce9251c4"
  },
  {
    "sha": "88ae2856d8ecc0473ec7d2b558e52aeabd3e1b73",
    "filename": "LernJava/target/classes/ru/neothat/HashTableImpl.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/HashTableImpl.class",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/HashTableImpl.class",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/target/classes/ru/neothat/HashTableImpl.class?ref=0710b75131e3cbfbb466fa054c49427dce9251c4"
  },
  {
    "sha": "fc3257662b91f78efa2909f405fee2b51bab7475",
    "filename": "LernJava/target/classes/ru/neothat/Hello.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/Hello.class",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/Hello.class",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/target/classes/ru/neothat/Hello.class?ref=0710b75131e3cbfbb466fa054c49427dce9251c4"
  },
  {
    "sha": "24a55bf07bef52d915d7f09cc44a1d2fadb93fd1",
    "filename": "LernJava/target/classes/ru/neothat/LinkedHashTable$Item.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/LinkedHashTable$Item.class",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/LinkedHashTable$Item.class",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/target/classes/ru/neothat/LinkedHashTable$Item.class?ref=0710b75131e3cbfbb466fa054c49427dce9251c4"
  },
  {
    "sha": "c4e364169ae0ea89d62f5f14b4c559f36ee54b35",
    "filename": "LernJava/target/classes/ru/neothat/LinkedHashTable.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/LinkedHashTable.class",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/LinkedHashTable.class",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/target/classes/ru/neothat/LinkedHashTable.class?ref=0710b75131e3cbfbb466fa054c49427dce9251c4"
  },
  {
    "sha": "71feb7a0f264e779c5a9326cdb350b80e5fbd38c",
    "filename": "LernJava/target/classes/ru/neothat/Main.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/Main.class",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/Main.class",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/target/classes/ru/neothat/Main.class?ref=0710b75131e3cbfbb466fa054c49427dce9251c4"
  },
  {
    "sha": "63cb8d6c23e5955d7e3ca7b2d990978d3d59eb21",
    "filename": "LernJava/target/classes/ru/neothat/Product.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Neothat/Java/blob/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/Product.class",
    "raw_url": "https://github.com/Neothat/Java/raw/0710b75131e3cbfbb466fa054c49427dce9251c4/LernJava/target/classes/ru/neothat/Product.class",
    "contents_url": "https://api.github.com/repos/Neothat/Java/contents/LernJava/target/classes/ru/neothat/Product.class?ref=0710b75131e3cbfbb466fa054c49427dce9251c4"
  }
]
