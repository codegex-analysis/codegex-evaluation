[
  {
    "sha": "6e36304628ab6d1d3f80d944df405df8b95e9de7",
    "filename": "Lesson4/src/main/java/TaskForLesson4.java",
    "status": "added",
    "additions": 85,
    "deletions": 0,
    "changes": 85,
    "blob_url": "https://github.com/Evengarr/TasksForLesson3/blob/828fa948159bd6979bf902f7b7f318f0b21f16d8/Lesson4/src/main/java/TaskForLesson4.java",
    "raw_url": "https://github.com/Evengarr/TasksForLesson3/raw/828fa948159bd6979bf902f7b7f318f0b21f16d8/Lesson4/src/main/java/TaskForLesson4.java",
    "contents_url": "https://api.github.com/repos/Evengarr/TasksForLesson3/contents/Lesson4/src/main/java/TaskForLesson4.java?ref=828fa948159bd6979bf902f7b7f318f0b21f16d8",
    "patch": "@@ -0,0 +1,85 @@\n+/**\n+ * 1. Создать три потока, каждый из которых выводит определенную букву (A, B и C) 5 раз (порядок – ABСABСABС).\n+ * Используйте wait/notify/notifyAll.\n+ */\n+\n+public class TaskForLesson4 {\n+\n+    static final Object monitor = new Object();\n+    static volatile int currentNum = 1;\n+    static final int N = 10;\n+\n+    public static void main(String[] args) {\n+        new Thread(() -> {\n+            try {\n+                for (int i = 0; i < N; i++) {\n+                    synchronized (monitor) {\n+                        while (currentNum != 1) {\n+                            monitor.wait();\n+                        }\n+                        printSymbol(\"A\", 2);\n+                        monitor.notifyAll();\n+                    }\n+                }\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }).start();\n+\n+        new Thread(() -> {\n+            try {\n+                for (int i = 0; i < N; i++) {\n+                    synchronized (monitor) {\n+                        while (currentNum != 2) {\n+                            monitor.wait();\n+                        }\n+                        printSymbol(\"B\", 3);\n+                        monitor.notifyAll();\n+                    }\n+                }\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }).start();\n+\n+        new Thread(() -> {\n+            try {\n+                for (int i = 0; i < N; i++) {\n+                    synchronized (monitor) {\n+                        while (currentNum != 3) {\n+                            monitor.wait();\n+                        }\n+                        printSymbol(\"C\", 4);\n+                        monitor.notifyAll();\n+                    }\n+                }\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }).start();\n+\n+        new Thread(() -> {\n+            try {\n+                for (int i = 0; i < N; i++) {\n+                    synchronized (monitor) {\n+                        while (currentNum != 4) {\n+                            monitor.wait();\n+                        }\n+                        printSymbol(\"D\", 1);\n+                        monitor.notifyAll();\n+                    }\n+                }\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }).start();\n+    }\n+\n+    private static void printSymbol(String a, int current) {\n+        System.out.print(a);\n+        if (current == 1){\n+            System.out.println();\n+        }\n+        currentNum = current;\n+    }\n+}"
  }
]
