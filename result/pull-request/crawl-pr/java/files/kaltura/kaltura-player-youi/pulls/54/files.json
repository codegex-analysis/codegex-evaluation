[
  {
    "sha": "741117af7812bec1df8589a62067c4784db57a64",
    "filename": "youi/src/player/KalturaVideoPlayer.cpp",
    "status": "modified",
    "additions": 66,
    "deletions": 49,
    "changes": 115,
    "blob_url": "https://github.com/kaltura/kaltura-player-youi/blob/5c0e7d80ebbded5507d6179ebd151da4eb0fd388/youi/src/player/KalturaVideoPlayer.cpp",
    "raw_url": "https://github.com/kaltura/kaltura-player-youi/raw/5c0e7d80ebbded5507d6179ebd151da4eb0fd388/youi/src/player/KalturaVideoPlayer.cpp",
    "contents_url": "https://api.github.com/repos/kaltura/kaltura-player-youi/contents/youi/src/player/KalturaVideoPlayer.cpp?ref=5c0e7d80ebbded5507d6179ebd151da4eb0fd388",
    "patch": "@@ -291,7 +291,7 @@ void KalturaVideoPlayer::Mute_(bool bMute)\n     if (bMute == m_isMuted) {\n         return;\n     }\n-    \n+\n     m_pPriv->Mute_(bMute);\n     float volume;\n     if (bMute) {\n@@ -301,7 +301,7 @@ void KalturaVideoPlayer::Mute_(bool bMute)\n         m_isMuted = false;\n         volume = 1.0f;\n     }\n-    \n+\n     if (m_devicOSName.Contains(\"iOS\") || m_devicOSName.Contains(\"tvOS\"))\n     {\n         YI_LOGD(TAG, \"%s VolumeChanged isMuted = %d\", m_devicOSName.GetData(), m_isMuted);\n@@ -323,8 +323,10 @@ void KalturaVideoPlayer::HandleEvent(const CYIString& name, folly::dynamic conte\n     }\n     else if (name.Compare(loadMediaSuccessEvent) == 0)\n     {\n-        const CYIString id = content[\"id\"].asString();\n-        YI_LOGD(TAG, \"loadMediaSuccessEvent id = %s\", id.GetData());\n+        if (content.find(\"id\") != content.items().end() && !content[\"id\"].isNull()) {\n+            const CYIString id = content[\"id\"].asString();\n+            YI_LOGD(TAG, \"loadMediaSuccessEvent id = %s\", id.GetData());\n+        }\n         LoadMediaSuccess.Emit(content);\n         m_pStateManager->TransitionToMediaReady();\n     }\n@@ -365,12 +367,13 @@ void KalturaVideoPlayer::HandleEvent(const CYIString& name, folly::dynamic conte\n     }\n     else if (name.Compare(stateChangedEvent) == 0)\n     {\n-        const CYIString &state = content[\"newState\"].asString();\n-        YI_LOGD(TAG, \"stateChangedEvent %s\", state.GetData());\n+        if (content.find(\"newState\") != content.items().end() && !content[\"newState\"].isNull()) {\n+            const CYIString &state = content[\"newState\"].asString();\n+            YI_LOGD(TAG, \"stateChangedEvent %s\", state.GetData());\n \n-        if (state == \"BUFFERING\")\n-        {\n-            m_pStateManager->TransitionToPlaybackBuffering();\n+            if (state == \"BUFFERING\") {\n+                m_pStateManager->TransitionToPlaybackBuffering();\n+            }\n         }\n     }\n     else if (name.Compare(playEvent) == 0)\n@@ -386,23 +389,29 @@ void KalturaVideoPlayer::HandleEvent(const CYIString& name, folly::dynamic conte\n     else if (name.Compare(durationChangedEvent) == 0)\n     {\n         YI_LOGD(TAG, \"durationChangedEvent\");\n-        const auto duration = content[\"duration\"].asDouble();\n-        m_durationMs = static_cast<uint64_t>(duration * 1000);\n-        DurationChanged.Emit(m_durationMs);\n+        if (content.find(\"duration\") != content.items().end() && !content[\"duration\"].isNull()) {\n+            const auto duration = content[\"duration\"].asDouble();\n+            m_durationMs = static_cast<uint64_t>(duration * 1000);\n+            DurationChanged.Emit(m_durationMs);\n+        }\n     }\n     else if (name.Compare(timeUpdateEvent) == 0)\n     {\n-        const auto currentTime = content[\"position\"].asDouble();\n-        m_currentTimeMs = static_cast<uint64_t>(currentTime * 1000);\n-       // YI_LOGE(TAG, \"timeUpdateEvent - %\" PRIu64, m_currentTimeMs);\n-        CurrentTimeUpdated.Emit(m_currentTimeMs);\n+        if (content.find(\"position\") != content.items().end() && !content[\"position\"].isNull()) {\n+            const auto currentTime = content[\"position\"].asDouble();\n+            m_currentTimeMs = static_cast<uint64_t>(currentTime * 1000);\n+            // YI_LOGE(TAG, \"timeUpdateEvent - %\" PRIu64, m_currentTimeMs);\n+            CurrentTimeUpdated.Emit(m_currentTimeMs);\n+        }\n \n-        const auto currentBufferTime = content[\"bufferPosition\"].asDouble();\n-        uint64_t currentBufferTimeMs = static_cast<uint64_t>(currentBufferTime * 1000);\n-        //YI_LOGE(TAG, \"bufferPosition - %\" PRIu64, currentBufferTimeMs);\n-        CurrentBufferTimeUpdated.Emit(currentBufferTimeMs);\n+        if (content.find(\"bufferPosition\") != content.items().end() && !content[\"bufferPosition\"].isNull()) {\n+            const auto currentBufferTime = content[\"bufferPosition\"].asDouble();\n+            uint64_t currentBufferTimeMs = static_cast<uint64_t>(currentBufferTime * 1000);\n+            //YI_LOGE(TAG, \"bufferPosition - %\" PRIu64, currentBufferTimeMs);\n+            CurrentBufferTimeUpdated.Emit(currentBufferTimeMs);\n+        }\n \n-        if (!content[\"currentProgramTime\"].isNull()) {\n+        if (content.find(\"currentProgramTime\") != content.items().end() && !content[\"currentProgramTime\"].isNull()) {\n             const auto currentProgramTime = content[\"currentProgramTime\"].asDouble();\n             uint64_t currentProgramTimeLong = static_cast<uint64_t>(currentProgramTime);\n             //YI_LOGE(TAG, \"currentProgramTime - %\" PRIu64, currentProgramTimeLong);\n@@ -442,8 +451,10 @@ void KalturaVideoPlayer::HandleEvent(const CYIString& name, folly::dynamic conte\n     }\n     else if (name.Compare(playbackRateChangedEvent) == 0)\n     {\n-        float playbackRate = static_cast<float>(content[\"playbackRate\"].asDouble());\n-        YI_LOGD(TAG, \"playbackRateChangedEvent %f\", playbackRate);\n+        if (content.find(\"playbackRate\") != content.items().end() && !content[\"playbackRate\"].isNull()) {\n+            float playbackRate = static_cast<float>(content[\"playbackRate\"].asDouble());\n+            YI_LOGD(TAG, \"playbackRateChangedEvent %f\", playbackRate);\n+        }\n     }\n     else if (name.Compare(tracksAvailableEvent) == 0)\n     {\n@@ -574,9 +585,11 @@ void KalturaVideoPlayer::HandleEvent(const CYIString& name, folly::dynamic conte\n     else if (name.Compare(seekingEvent) == 0)\n     {\n         YI_LOGD(TAG, \"seekingEvent\");\n-        const auto targetPosition = content[\"targetPosition\"].asDouble();\n-        uint64_t targetPositionMs = static_cast<uint64_t>(targetPosition * 1000);\n-        PlayerSeekingEvent.Emit(targetPositionMs);\n+        if (content.find(\"targetPosition\") != content.items().end() && !content[\"targetPosition\"].isNull()) {\n+            const auto targetPosition = content[\"targetPosition\"].asDouble();\n+            uint64_t targetPositionMs = static_cast<uint64_t>(targetPosition * 1000);\n+            PlayerSeekingEvent.Emit(targetPositionMs);\n+        }\n     }\n     else if (name.Compare(seekedEvent) == 0)\n     {\n@@ -585,7 +598,7 @@ void KalturaVideoPlayer::HandleEvent(const CYIString& name, folly::dynamic conte\n     }\n     else if (name.Compare(volumeChangedEvent) == 0) {\n             YI_LOGD(TAG, \"volumeChangedEvent\");\n-            if (!content[\"volume\"].isNull()) {\n+             if (content.find(\"volume\") != content.items().end() && !content[\"volume\"].isNull()) {\n                 const auto currentVolume = content[\"volume\"].asDouble();\n                 float volume = static_cast<float>(currentVolume);\n \n@@ -602,18 +615,22 @@ void KalturaVideoPlayer::HandleEvent(const CYIString& name, folly::dynamic conte\n     {\n         YI_LOGD(TAG, \"loadedTimeRangesEvent - %s\", JSONFromDynamic(content).c_str());\n \n-        if (!content[\"timeRanges\"].isNull()) {\n+        if (content.find(\"timeRanges\") != content.items().end() && !content[\"timeRanges\"].isNull()) {\n             m_liveSeekableRanges.clear();\n             auto timeRanges = content[\"timeRanges\"];\n             for (auto& timeRange : timeRanges)\n             {\n-               const auto start = timeRange[\"start\"].asDouble();\n-               uint64_t startSeek = static_cast<uint64_t>(start * 1000);\n-               const auto end = timeRange[\"end\"].asDouble();\n-               uint64_t endSeek = static_cast<uint64_t>(end * 1000);\n-               YI_LOGD(TAG, \"loadedTimeRangesEvent %f %f\", start, end);\n-               CYIAbstractVideoPlayer::SeekableRange seekableRange = CYIAbstractVideoPlayer::SeekableRange(startSeek,endSeek);\n-               m_liveSeekableRanges.push_back(seekableRange);\n+                if (timeRange.find(\"start\") != timeRange.items().end() && !timeRange[\"start\"].isNull() &&\n+                    timeRange.find(\"end\") != timeRange.items().end() && !timeRange[\"end\"].isNull()) {\n+                    const auto start = timeRange[\"start\"].asDouble();\n+                    uint64_t startSeek = static_cast<uint64_t>(start * 1000);\n+                    const auto end = timeRange[\"end\"].asDouble();\n+                    uint64_t endSeek = static_cast<uint64_t>(end * 1000);\n+                    YI_LOGD(TAG, \"loadedTimeRangesEvent %f %f\", start, end);\n+                    CYIAbstractVideoPlayer::SeekableRange seekableRange = CYIAbstractVideoPlayer::SeekableRange(\n+                            startSeek, endSeek);\n+                    m_liveSeekableRanges.push_back(seekableRange);\n+                }\n             }\n         }\n     }\n@@ -624,14 +641,16 @@ void KalturaVideoPlayer::HandleEvent(const CYIString& name, folly::dynamic conte\n         CYIAbstractVideoPlayer::Error error;\n         error.errorCode = CYIAbstractVideoPlayer::ErrorCode::PlaybackError;\n         error.message = JSONFromDynamic(content).c_str();\n-\n-        CYIString errorType = content[\"errorType\"].asString();\n-        CYIString errorSeverity = content[\"errorSeverity\"].asString();\n-        error.nativePlayerErrorCode = errorType;\n-        ErrorOccurred.Emit(error);\n-        if (errorSeverity == FATAL) {\n-            YI_LOGD(TAG, \"errorEvent fatal\");\n-            m_pStateManager->TransitionToMediaUnloaded();\n+        if (content.find(\"errorType\") != content.items().end() && !content[\"errorType\"].isNull() &&\n+            content.find(\"errorSeverity\") != content.items().end() && !content[\"errorSeverity\"].isNull()) {\n+                CYIString errorType = content[\"errorType\"].asString();\n+                CYIString errorSeverity = content[\"errorSeverity\"].asString();\n+                error.nativePlayerErrorCode = errorType;\n+                ErrorOccurred.Emit(error);\n+                if (errorSeverity == FATAL) {\n+                    YI_LOGD(TAG, \"errorEvent fatal\");\n+                    m_pStateManager->TransitionToMediaUnloaded();\n+                }\n         }\n     }\n     else if (name.Compare(bookmarkErrorEvent) == 0)\n@@ -731,16 +750,14 @@ void KalturaVideoPlayer::HandleEvent(const CYIString& name, folly::dynamic conte\n         CYIAbstractVideoPlayer::Error error;\n         error.errorCode = CYIAbstractVideoPlayer::ErrorCode::PlaybackError;\n         error.message = JSONFromDynamic(content).c_str();\n-\n-        CYIString errorType = content[\"errorType\"].asString();\n-        error.nativePlayerErrorCode = errorType;\n-\n+        if (content.find(\"errorType\") != content.items().end() && !content[\"errorType\"].isNull()) {\n+            CYIString errorType = content[\"errorType\"].asString();\n+            error.nativePlayerErrorCode = errorType;\n+        }\n         ErrorOccurred.Emit(error);\n     }\n     else\n     {\n         YI_LOGW(TAG, \"Unhandled event received - <%s>\", name.GetData());\n     }\n }\n-\n-"
  }
]
