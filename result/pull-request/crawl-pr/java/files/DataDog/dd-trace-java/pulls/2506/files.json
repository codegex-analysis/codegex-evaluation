[
  {
    "sha": "1ac55910f06b79e7a1d5d8775151ac9305ae4aa1",
    "filename": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Constants.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/DataDog/dd-trace-java/blob/a6d286cea937d178d0672c3bcc228b1dad58fb49/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Constants.java",
    "raw_url": "https://github.com/DataDog/dd-trace-java/raw/a6d286cea937d178d0672c3bcc228b1dad58fb49/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Constants.java",
    "contents_url": "https://api.github.com/repos/DataDog/dd-trace-java/contents/dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Constants.java?ref=a6d286cea937d178d0672c3bcc228b1dad58fb49",
    "patch": "@@ -15,7 +15,6 @@\n    */\n   public static final String[] BOOTSTRAP_PACKAGE_PREFIXES = {\n     \"datadog.slf4j\",\n-    \"datadog.trace.api\",\n     \"datadog.trace.bootstrap\",\n     \"datadog.trace.context\",\n     \"datadog.trace.instrumentation.api\","
  },
  {
    "sha": "237f21e8ab9e82dfd7ccef88195a30f387f90364",
    "filename": "dd-java-agent/instrumentation/trace-annotation/src/main/java/datadog/trace/instrumentation/trace_annotation/TraceAnnotationsInstrumentation.java",
    "status": "modified",
    "additions": 16,
    "deletions": 27,
    "changes": 43,
    "blob_url": "https://github.com/DataDog/dd-trace-java/blob/a6d286cea937d178d0672c3bcc228b1dad58fb49/dd-java-agent/instrumentation/trace-annotation/src/main/java/datadog/trace/instrumentation/trace_annotation/TraceAnnotationsInstrumentation.java",
    "raw_url": "https://github.com/DataDog/dd-trace-java/raw/a6d286cea937d178d0672c3bcc228b1dad58fb49/dd-java-agent/instrumentation/trace-annotation/src/main/java/datadog/trace/instrumentation/trace_annotation/TraceAnnotationsInstrumentation.java",
    "contents_url": "https://api.github.com/repos/DataDog/dd-trace-java/contents/dd-java-agent/instrumentation/trace-annotation/src/main/java/datadog/trace/instrumentation/trace_annotation/TraceAnnotationsInstrumentation.java?ref=a6d286cea937d178d0672c3bcc228b1dad58fb49",
    "patch": "@@ -5,14 +5,13 @@\n import static datadog.trace.agent.tooling.bytebuddy.matcher.NameMatchers.namedOneOf;\n import static datadog.trace.instrumentation.trace_annotation.TraceConfigInstrumentation.PACKAGE_CLASS_NAME_REGEX;\n import static net.bytebuddy.matcher.ElementMatchers.declaresMethod;\n-import static net.bytebuddy.matcher.ElementMatchers.is;\n import static net.bytebuddy.matcher.ElementMatchers.isAnnotatedWith;\n \n import com.google.auto.service.AutoService;\n import datadog.trace.agent.tooling.Instrumenter;\n import datadog.trace.api.Config;\n-import datadog.trace.api.Trace;\n import de.thetaphi.forbiddenapis.SuppressForbidden;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.Map;\n@@ -36,54 +35,44 @@\n           + PACKAGE_CLASS_NAME_REGEX\n           + \"\\\\s*;?\\\\s*\";\n \n-  private static final String[] DEFAULT_ANNOTATIONS = {\n-    \"com.newrelic.api.agent.Trace\",\n-    \"kamon.annotation.Trace\",\n-    \"com.tracelytics.api.ext.LogMethod\",\n-    \"io.opentracing.contrib.dropwizard.Trace\",\n-    \"org.springframework.cloud.sleuth.annotation.NewSpan\"\n-  };\n-\n-  private static final String[] EMPTY = new String[0];\n-  private final String[] additionalTraceAnnotations;\n+  private final Set<String> annotations;\n   private final ElementMatcher.Junction<NamedElement> methodTraceMatcher;\n \n   @SuppressForbidden\n   public TraceAnnotationsInstrumentation() {\n     super(\"trace\", \"trace-annotation\");\n-\n+    Set<String> annotations = new HashSet<>();\n+    annotations.add(\"datadog.trace.api.Trace\");\n     final String configString = Config.get().getTraceAnnotations();\n     if (configString == null) {\n-      additionalTraceAnnotations = DEFAULT_ANNOTATIONS;\n-    } else if (configString.trim().isEmpty()) {\n-      additionalTraceAnnotations = EMPTY;\n+      annotations.addAll(\n+          Arrays.asList(\n+              \"com.newrelic.api.agent.Trace\",\n+              \"kamon.annotation.Trace\",\n+              \"com.tracelytics.api.ext.LogMethod\",\n+              \"io.opentracing.contrib.dropwizard.Trace\",\n+              \"org.springframework.cloud.sleuth.annotation.NewSpan\"));\n     } else if (!configString.matches(CONFIG_FORMAT)) {\n       log.warn(\n           \"Invalid trace annotations config '{}'. Must match 'package.Annotation$Name;*'.\",\n           configString);\n-      additionalTraceAnnotations = EMPTY;\n-    } else {\n+    } else if (!configString.trim().isEmpty()) {\n       final String[] annotationClasses = configString.split(\";\", -1);\n-      final Set<String> annotations = new HashSet<>(annotationClasses.length);\n       for (final String annotationClass : annotationClasses) {\n         if (!annotationClass.trim().isEmpty()) {\n           annotations.add(annotationClass.trim());\n         }\n       }\n-      additionalTraceAnnotations = annotations.toArray(EMPTY);\n     }\n-\n-    ElementMatcher.Junction<NamedElement> methodTraceMatcher =\n-        is(new TypeDescription.ForLoadedType(Trace.class))\n-            .or(namedOneOf(additionalTraceAnnotations));\n-    this.methodTraceMatcher = methodTraceMatcher;\n+    this.annotations = annotations;\n+    this.methodTraceMatcher = namedOneOf(annotations);\n   }\n \n   @Override\n   public ElementMatcher<ClassLoader> classLoaderMatcher() {\n     // Optimization for expensive typeMatcher.\n-    ElementMatcher.Junction<ClassLoader> matcher = hasClassesNamed(Trace.class.getName());\n-    for (final String name : additionalTraceAnnotations) {\n+    ElementMatcher.Junction<ClassLoader> matcher = hasClassesNamed(\"datadog.trace.api.Trace\");\n+    for (final String name : annotations) {\n       matcher = matcher.or(hasClassesNamed(name));\n     }\n     return matcher;"
  },
  {
    "sha": "cd4594098422482a4d5c74710142620f773359f8",
    "filename": "dd-java-agent/instrumentation/trace-annotation/src/main/java/datadog/trace/instrumentation/trace_annotation/TraceConfigInstrumentation.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/DataDog/dd-trace-java/blob/a6d286cea937d178d0672c3bcc228b1dad58fb49/dd-java-agent/instrumentation/trace-annotation/src/main/java/datadog/trace/instrumentation/trace_annotation/TraceConfigInstrumentation.java",
    "raw_url": "https://github.com/DataDog/dd-trace-java/raw/a6d286cea937d178d0672c3bcc228b1dad58fb49/dd-java-agent/instrumentation/trace-annotation/src/main/java/datadog/trace/instrumentation/trace_annotation/TraceConfigInstrumentation.java",
    "contents_url": "https://api.github.com/repos/DataDog/dd-trace-java/contents/dd-java-agent/instrumentation/trace-annotation/src/main/java/datadog/trace/instrumentation/trace_annotation/TraceConfigInstrumentation.java?ref=a6d286cea937d178d0672c3bcc228b1dad58fb49",
    "patch": "@@ -16,7 +16,6 @@\n import com.google.auto.service.AutoService;\n import datadog.trace.agent.tooling.Instrumenter;\n import datadog.trace.api.Config;\n-import datadog.trace.api.Trace;\n import de.thetaphi.forbiddenapis.SuppressForbidden;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -137,7 +136,7 @@ public boolean isApplicable(Set<TargetSystem> enabledSystems) {\n \n     /** No-arg constructor only used by muzzle and tests. */\n     public TracerClassInstrumentation() {\n-      this(Trace.class.getName(), Collections.singleton(\"noop\"));\n+      this(\"datadog.trace.api.Trace\", Collections.singleton(\"noop\"));\n     }\n \n     public TracerClassInstrumentation(final String className, final Set<String> methodNames) {"
  },
  {
    "sha": "c9ce5bf7a8a3b8c40b093d35a1c9c642503d81e1",
    "filename": "dd-java-agent/instrumentation/trace-annotation/src/test/groovy/ConfiguredTraceAnnotationsTest.groovy",
    "status": "modified",
    "additions": 17,
    "deletions": 10,
    "changes": 27,
    "blob_url": "https://github.com/DataDog/dd-trace-java/blob/a6d286cea937d178d0672c3bcc228b1dad58fb49/dd-java-agent/instrumentation/trace-annotation/src/test/groovy/ConfiguredTraceAnnotationsTest.groovy",
    "raw_url": "https://github.com/DataDog/dd-trace-java/raw/a6d286cea937d178d0672c3bcc228b1dad58fb49/dd-java-agent/instrumentation/trace-annotation/src/test/groovy/ConfiguredTraceAnnotationsTest.groovy",
    "contents_url": "https://api.github.com/repos/DataDog/dd-trace-java/contents/dd-java-agent/instrumentation/trace-annotation/src/test/groovy/ConfiguredTraceAnnotationsTest.groovy?ref=a6d286cea937d178d0672c3bcc228b1dad58fb49",
    "patch": "@@ -54,19 +54,26 @@ class ConfiguredTraceAnnotationsTest extends AgentTestRunner {\n     }\n \n     expect:\n-    new HashSet<>(Arrays.asList(new TraceAnnotationsInstrumentation().additionalTraceAnnotations)) == expected.toSet()\n+    new TraceAnnotationsInstrumentation().annotations == expected.toSet()\n \n     where:\n     value                               | expected\n-    null                                | Arrays.asList(DEFAULT_ANNOTATIONS)\n-    \" \"                                 | []\n-    \"some.Invalid[]\"                    | []\n-    \"some.package.ClassName \"           | [\"some.package.ClassName\"]\n-    \" some.package.Class\\$Name\"         | [\"some.package.Class\\$Name\"]\n-    \"  ClassName  \"                     | [\"ClassName\"]\n-    \"ClassName\"                         | [\"ClassName\"]\n-    \"Class\\$1;Class\\$2;\"                | [\"Class\\$1\", \"Class\\$2\"]\n-    \"Duplicate ;Duplicate ;Duplicate; \" | [\"Duplicate\"]\n+    null                                | [\n+      \"datadog.trace.api.Trace\",\n+      \"com.newrelic.api.agent.Trace\",\n+      \"kamon.annotation.Trace\",\n+      \"com.tracelytics.api.ext.LogMethod\",\n+      \"io.opentracing.contrib.dropwizard.Trace\",\n+      \"org.springframework.cloud.sleuth.annotation.NewSpan\"\n+    ]\n+    \" \"                                 | [\"datadog.trace.api.Trace\"]\n+    \"some.Invalid[]\"                    | [\"datadog.trace.api.Trace\"]\n+    \"some.package.ClassName \"           | [\"datadog.trace.api.Trace\", \"some.package.ClassName\"]\n+    \" some.package.Class\\$Name\"         | [\"datadog.trace.api.Trace\", \"some.package.Class\\$Name\"]\n+    \"  ClassName  \"                     | [\"datadog.trace.api.Trace\", \"ClassName\"]\n+    \"ClassName\"                         | [\"datadog.trace.api.Trace\", \"ClassName\"]\n+    \"Class\\$1;Class\\$2;\"                | [\"datadog.trace.api.Trace\", \"Class\\$1\", \"Class\\$2\"]\n+    \"Duplicate ;Duplicate ;Duplicate; \" | [\"datadog.trace.api.Trace\", \"Duplicate\"]\n   }\n \n   class AnnotationTracedCallable implements Callable<String> {"
  }
]
