[
  {
    "sha": "33799362bd2e6ef5eef10e54b4fc5fd15546f8b6",
    "filename": "src/homeWork_10/MyEntry.java",
    "status": "added",
    "additions": 97,
    "deletions": 0,
    "changes": 97,
    "blob_url": "https://github.com/VolodymyrGit/FirstJavaProject/blob/34b0bf6f3030e37da89906766582340b3e074c35/src/homeWork_10/MyEntry.java",
    "raw_url": "https://github.com/VolodymyrGit/FirstJavaProject/raw/34b0bf6f3030e37da89906766582340b3e074c35/src/homeWork_10/MyEntry.java",
    "contents_url": "https://api.github.com/repos/VolodymyrGit/FirstJavaProject/contents/src/homeWork_10/MyEntry.java?ref=34b0bf6f3030e37da89906766582340b3e074c35",
    "patch": "@@ -0,0 +1,97 @@\n+package homeWork_10;\n+\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class MyEntry <K, V> {\n+    private K valueK;\n+    private V valueV;\n+\n+    public MyEntry(K key, V value) {\n+        this.valueK = key;\n+        this.valueV = value;\n+    }\n+\n+    public K getValueK() {\n+        return valueK;\n+    }\n+\n+    public void setValueK(K valueK) {\n+        this.valueK = valueK;\n+    }\n+\n+    public V getValueV() {\n+        return valueV;\n+    }\n+\n+    public void setValueV(V valueV) {\n+        this.valueV = valueV;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"MyEntry{\" +\n+                \"key=\" + valueK +\n+                \", value=\" + valueV +\n+                '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        MyEntry<?, ?> myEntry = (MyEntry<?, ?>) o;\n+        return valueK.equals(myEntry.valueK) &&\n+                valueV.equals(myEntry.valueV);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(valueK, valueV);\n+    }\n+\n+    public void addNewObjectToMap (Map<K, V> m, MyEntry<K, V> me) {\n+        m.put(me.getValueK(), me.getValueV());\n+    }\n+\n+    public void deleteFromMapByKey(Map<K, V> m, K k) {\n+        m.remove(k);\n+    }\n+\n+    public void deleteFromMapByValue(Map<K, V> m, V v) {\n+        for (Map.Entry<K, V> entry : m.entrySet()) {\n+            if(entry.getValue().equals(v)) {\n+                m.remove(entry.getKey());\n+            }\n+        }\n+    }\n+\n+    public void printSetKeysFromMap(Map<K, V> m) {\n+        for (Map.Entry<K,V> entry : m.entrySet()) {\n+            System.out.println(entry.getKey());\n+        }\n+    }\n+\n+    public void printListValuesFromMap(Map<K, V> m) {\n+        for (Map.Entry<K,V> entry : m.entrySet()) {\n+            System.out.println(entry.getValue());\n+        }\n+    }\n+\n+    public void printMap(Map<K, V> m) {\n+        for (Map.Entry<K,V> entry : m.entrySet()) {\n+            System.out.println(entry.getKey());\n+            System.out.println(entry.getValue() + \"\\n\");\n+        }\n+    }\n+}\n+\n+//    Створити клас MyEntry<K,V>.\n+//        Описати в ньому дженеріками –поля, гетери/сетери, toString.\n+//        Реалізувати в даному класі методи, які б:\n+//        ● Додавали новий об’єкт в мапу\n+//        ● Видаляли об’єкт мапи за ключем\n+//        ● Видаляли об’єкт мапи за значенням\n+//        ● Виводили на екран Set ключів\n+//        ● Виводили на екран List значень\n+//        ● Виводили на екран цілу мапу\n\\ No newline at end of file"
  }
]
