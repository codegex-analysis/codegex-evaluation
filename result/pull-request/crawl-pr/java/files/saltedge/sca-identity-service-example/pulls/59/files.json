[
  {
    "sha": "c465ad649cc1f04a6616b674fa0ae7d3d357c66e",
    "filename": "maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar?ref=e0ff264be9fa10f71062a6a41111d77da1129b39"
  },
  {
    "sha": "8ea3656fb08e64252ee1c9713f50a0cc50459120",
    "filename": "maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar.md5",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar.md5",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar.md5",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar.md5?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -0,0 +1 @@\n+ba628efc4528b22df36185f482ef0c8a\n\\ No newline at end of file"
  },
  {
    "sha": "cff08fbe3f3edf1f315f245287fd7a3318499dd5",
    "filename": "maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar.sha1",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar.sha1",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar.sha1",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0-all.jar.sha1?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -0,0 +1 @@\n+df556edeecd7f9d97c744e4bc6b79c17c1229d80\n\\ No newline at end of file"
  },
  {
    "sha": "adfde4ebdec4f73d4c965cc1fb385b2e0ebf0d99",
    "filename": "maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom",
    "status": "added",
    "additions": 112,
    "deletions": 0,
    "changes": 112,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -0,0 +1,112 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>com.saltedge.sca.sdk</groupId>\n+  <artifactId>saltedge-sca-service-sdk</artifactId>\n+  <version>1.4.0</version>\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter</artifactId>\n+      <scope>runtime</scope>\n+      <exclusions>\n+        <exclusion>\n+          <artifactId>tomcat-annotations-api</artifactId>\n+          <groupId>org.apache.tomcat</groupId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-web</artifactId>\n+      <scope>runtime</scope>\n+      <exclusions>\n+        <exclusion>\n+          <artifactId>tomcat-annotations-api</artifactId>\n+          <groupId>org.apache.tomcat</groupId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-data-jpa</artifactId>\n+      <scope>runtime</scope>\n+      <exclusions>\n+        <exclusion>\n+          <artifactId>tomcat-annotations-api</artifactId>\n+          <groupId>org.apache.tomcat</groupId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.google.guava</groupId>\n+      <artifactId>guava</artifactId>\n+      <version>28.2-jre</version>\n+      <scope>runtime</scope>\n+      <exclusions>\n+        <exclusion>\n+          <artifactId>tomcat-annotations-api</artifactId>\n+          <groupId>org.apache.tomcat</groupId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.h2database</groupId>\n+      <artifactId>h2</artifactId>\n+      <version>1.4.200</version>\n+      <scope>runtime</scope>\n+      <exclusions>\n+        <exclusion>\n+          <artifactId>tomcat-annotations-api</artifactId>\n+          <groupId>org.apache.tomcat</groupId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.google.zxing</groupId>\n+      <artifactId>core</artifactId>\n+      <version>3.4.0</version>\n+      <scope>runtime</scope>\n+      <exclusions>\n+        <exclusion>\n+          <artifactId>tomcat-annotations-api</artifactId>\n+          <groupId>org.apache.tomcat</groupId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.google.zxing</groupId>\n+      <artifactId>javase</artifactId>\n+      <version>3.4.0</version>\n+      <scope>runtime</scope>\n+      <exclusions>\n+        <exclusion>\n+          <artifactId>tomcat-annotations-api</artifactId>\n+          <groupId>org.apache.tomcat</groupId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <version>4.12</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-test</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+  </dependencies>\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-dependencies</artifactId>\n+        <version>2.2.2.RELEASE</version>\n+        <scope>import</scope>\n+        <type>pom</type>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+</project>"
  },
  {
    "sha": "f19346d931278e3b9f05b46fea20fa34ff0086a1",
    "filename": "maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom.md5",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom.md5",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom.md5",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom.md5?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -0,0 +1 @@\n+c58e0c75e8d44f5aaaf9659966df3ca1\n\\ No newline at end of file"
  },
  {
    "sha": "fc3fa19e41c27175c966a32251ba055e405a2279",
    "filename": "maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom.sha1",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom.sha1",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom.sha1",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/1.4.0/saltedge-sca-service-sdk-1.4.0.pom.sha1?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -0,0 +1 @@\n+a8aab72670cc6576fbb1027e134962bc3cb2ae64\n\\ No newline at end of file"
  },
  {
    "sha": "a566479c81e59aefd90e5e57e5b56253d18e839b",
    "filename": "maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -3,12 +3,13 @@\n   <groupId>com.saltedge.sca.sdk</groupId>\n   <artifactId>saltedge-sca-service-sdk</artifactId>\n   <versioning>\n-    <release>1.3.0</release>\n+    <release>1.4.0</release>\n     <versions>\n       <version>1.2.0</version>\n       <version>1.2.1</version>\n       <version>1.3.0</version>\n+      <version>1.4.0</version>\n     </versions>\n-    <lastUpdated>20200626113137</lastUpdated>\n+    <lastUpdated>20210311153434</lastUpdated>\n   </versioning>\n </metadata>"
  },
  {
    "sha": "e7146f839d81f0bbcd45d393bf4b0dc017316a1e",
    "filename": "maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml.md5",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml.md5",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml.md5",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml.md5?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -1 +1 @@\n-0126c8f3dcd78dc5380993c8f29a0c54\n\\ No newline at end of file\n+1a7cae6e07c961de9d8781d4a193ea15\n\\ No newline at end of file"
  },
  {
    "sha": "bf1c73600fa52e3e2684cf366c1dbc5c692099b1",
    "filename": "maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml.sha1",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml.sha1",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml.sha1",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/maven-repo/com/saltedge/sca/sdk/saltedge-sca-service-sdk/maven-metadata.xml.sha1?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -1 +1 @@\n-b1221af43afd7aa5c64b8deb05dc98d0139c5ce6\n\\ No newline at end of file\n+c4ffeccf4ec6c6a8b02638e966460a7da2181344\n\\ No newline at end of file"
  },
  {
    "sha": "4e8d8bee6ebfe6784ff9b5813199603359c77fc2",
    "filename": "saltedge-sca-service-spring/SDK_CHANGELOG.md",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/SDK_CHANGELOG.md",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/SDK_CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/SDK_CHANGELOG.md?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -1,6 +1,12 @@\n [![GPLv3 license](https://img.shields.io/badge/License-GPLv3-blue.svg)](http://perso.crans.org/besson/LICENSE.html)\n # Salt Edge Authenticator SCA Service SDK Changelog\n \n+## 1.4.0 (2021-03-12)\n+### Add\n+* Support of Geolocation info  \n+* Support of User Authorization Type info  \n+**Note: Should be added migration for `Transaction_Authorization`. Add `confirmLocation` and `confirmAuthorizationType` fields.**  \n+\n ## 1.3.0 (2020-06-30)\n ### Add \n * ServiceProvider.getProviderConfiguration()"
  },
  {
    "sha": "100e9a810b34d31cc5b48f43e72b9421dd81b49a",
    "filename": "saltedge-sca-service-spring/example/src/main/kotlin/com/saltedge/sca/example/controller/PendingAuthorizationsController.kt",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/example/src/main/kotlin/com/saltedge/sca/example/controller/PendingAuthorizationsController.kt",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/example/src/main/kotlin/com/saltedge/sca/example/controller/PendingAuthorizationsController.kt",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/example/src/main/kotlin/com/saltedge/sca/example/controller/PendingAuthorizationsController.kt?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -39,8 +39,6 @@ class PendingAuthorizationsController {\n     @Autowired\n     private lateinit var scaSdkService: ScaSDKCallbackService\n \n-    private val template = \"payments_order\"\n-\n     @GetMapping(\"/{\" + ScaSdkConstants.KEY_AUTHORIZATION_ID + \"}\")\n     fun showAuthorization(\n         @PathVariable(ScaSdkConstants.KEY_AUTHORIZATION_ID) authorizationId: Long"
  },
  {
    "sha": "4b0b434029de87464329f3d489bc11150d978194",
    "filename": "saltedge-sca-service-spring/example/src/main/kotlin/com/saltedge/sca/example/services/ScaProviderService.kt",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/example/src/main/kotlin/com/saltedge/sca/example/services/ScaProviderService.kt",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/example/src/main/kotlin/com/saltedge/sca/example/services/ScaProviderService.kt",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/example/src/main/kotlin/com/saltedge/sca/example/services/ScaProviderService.kt?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -82,6 +82,7 @@ class ScaProviderService : ServiceProvider {\n                 providerName,\n                 \"https://s3-media1.fl.yelpcdn.com/bphoto/9J0LUrYkKYuwcICwQztkxw/ls.jpg\",\n                 \"support@spring-demobank.com\",\n+                true,\n                 true\n         )\n     }"
  },
  {
    "sha": "d97127fa92b928dc7045c38a0140b1c52e65bd01",
    "filename": "saltedge-sca-service-spring/example/src/main/resources/templates/users_dashboard.css",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/example/src/main/resources/templates/users_dashboard.css",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/example/src/main/resources/templates/users_dashboard.css",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/example/src/main/resources/templates/users_dashboard.css?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -54,6 +54,7 @@\n         text-align: center;\n         vertical-align: center;\n         align: center;\n+        font-size: 14px;\n     }\n \n     /* The Modal (background) */"
  },
  {
    "sha": "efb286194d8f63f1df7ee9aaf087d8c34f3e7fbb",
    "filename": "saltedge-sca-service-spring/example/src/main/resources/templates/users_dashboard_authorizations.ftl",
    "status": "modified",
    "additions": 7,
    "deletions": 5,
    "changes": 12,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/example/src/main/resources/templates/users_dashboard_authorizations.ftl",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/example/src/main/resources/templates/users_dashboard_authorizations.ftl",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/example/src/main/resources/templates/users_dashboard_authorizations.ftl?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -31,17 +31,19 @@\n                     <tr>\n                        <th>ID</th>\n                        <th>Title</th>\n-                       <th>CreatedAt</th>\n-                       <th>ExpiresAt</th>\n+                       <th>CreatedAt -> ExpiresAt</th>\n                        <th>Status</th>\n+                       <th>Confirmed with</th>\n+                       <th>Location</th>\n                     </tr>\n                 <#items as item>\n                     <tr>\n                         <td><a href=\"/authorizations/${item.id}\">${item.id}</a></td>\n-                        <td>${item.title}</td>\n-                        <td>${item.getCreatedAt().toString()}</td>\n-                        <td>${item.getExpiresAt().toString()}</td>\n+                        <td>${item.getTitle()}</td>\n+                        <td>${item.getCreatedAt().toString()}<br>${item.getExpiresAt().toString()}</td>\n                         <td>${item.getStatus()}</td>\n+                        <td>${item.getConfirmAuthorizationType()}</td>\n+                        <td>${item.getConfirmLocation()}</td>\n                     </tr>\n                 </#items>\n             </table>"
  },
  {
    "sha": "38493d5172f5c1cf6287d7d37c227c873ad38f0c",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/build.gradle",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/build.gradle",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/build.gradle",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/build.gradle?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -1,13 +1,13 @@\n plugins {\n     id 'java'\n     id 'maven'\n-    id 'org.springframework.boot' version \"2.2.2.RELEASE\"\n-    id 'io.spring.dependency-management' version \"1.0.8.RELEASE\"\n+    id 'org.springframework.boot' version '2.2.2.RELEASE'\n+    id 'io.spring.dependency-management' version '1.0.8.RELEASE'\n     id 'com.github.johnrengelman.shadow' version '5.2.0'\n }\n \n group 'com.saltedge.sca.sdk'\n-version '1.3.0'\n+version '1.4.0'\n \n sourceCompatibility = 1.8\n "
  },
  {
    "sha": "7b9fbb81249679d1eb37079a71c0743099ab9cc3",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/ScaSdkConstants.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/ScaSdkConstants.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/ScaSdkConstants.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/ScaSdkConstants.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -30,6 +30,8 @@\n     public final static String HEADER_KEY_ACCESS_TOKEN = \"access-token\";\n     public final static String HEADER_KEY_EXPIRES_AT = \"expires-at\";\n     public final static String HEADER_KEY_SIGNATURE = \"signature\";\n+    public final static String HEADER_KEY_GEOLOCATION = \"geo-location\";\n+    public final static String HEADER_KEY_AUTHORIZATION_TYPE = \"authorization-type\";\n \n     public final static String KEY_DATA = \"data\";\n     public final static String KEY_ERROR_MESSAGE = \"error_message\";"
  },
  {
    "sha": "dfb8ae71a37e4bd1e047e60b9e73f5c95c78ef0a",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/controllers/AuthorizationsController.java",
    "status": "modified",
    "additions": 39,
    "deletions": 31,
    "changes": 70,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/controllers/AuthorizationsController.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/controllers/AuthorizationsController.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/controllers/AuthorizationsController.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -38,46 +38,54 @@\n import javax.validation.constraints.NotNull;\n import java.util.List;\n \n+import static com.saltedge.sca.sdk.ScaSdkConstants.HEADER_KEY_AUTHORIZATION_TYPE;\n+import static com.saltedge.sca.sdk.ScaSdkConstants.HEADER_KEY_GEOLOCATION;\n+\n /**\n  * REST Controller designated for serving SCA Authorizations\n+ *\n  * @see {https://github.com/saltedge/sca-identity-service-example/blob/master/docs/IDENTITY_SERVICE_API.md#show-authorizations-list}\n  */\n @RestController\n @RequestMapping(AuthorizationsController.AUTHORIZATIONS_REQUEST_PATH)\n @Validated\n public class AuthorizationsController {\n-    public final static String AUTHORIZATIONS_REQUEST_PATH = ScaSdkConstants.AUTHENTICATOR_API_BASE_PATH + \"/authorizations\";\n-    @Autowired\n-    private AuthorizationsService authorizationsService;\n-    @Autowired\n-    private AuthorizationsConfirmService authorizationsConfirmService;\n+  public final static String AUTHORIZATIONS_REQUEST_PATH = ScaSdkConstants.AUTHENTICATOR_API_BASE_PATH + \"/authorizations\";\n+  @Autowired\n+  private AuthorizationsService authorizationsService;\n+  @Autowired\n+  private AuthorizationsConfirmService authorizationsConfirmService;\n \n-    @GetMapping\n-    public ResponseEntity<ScaCollectionResponse<ScaEncryptedEntity>> getActiveAuthorizations(DefaultAuthenticatedRequest request) {\n-        List<ScaEncryptedEntity> result = authorizationsService.getActiveAuthorizations(request.getConnection());\n-        return ResponseEntity.ok(new ScaCollectionResponse<>(result));\n-    }\n+  @GetMapping\n+  public ResponseEntity<ScaCollectionResponse<ScaEncryptedEntity>> getActiveAuthorizations(DefaultAuthenticatedRequest request) {\n+    List<ScaEncryptedEntity> result = authorizationsService.getActiveAuthorizations(request.getConnection());\n+    return ResponseEntity.ok(new ScaCollectionResponse<>(result));\n+  }\n \n-    @GetMapping(\"/{\" + ScaSdkConstants.KEY_AUTHORIZATION_ID + \"}\")\n-    public ResponseEntity<ScaAuthorizationResponse> getActiveAuthorization(\n-            @PathVariable(ScaSdkConstants.KEY_AUTHORIZATION_ID) @NotNull Long authorizationId,\n-            DefaultAuthenticatedRequest request\n-    ) {\n-        ScaEncryptedEntity authorization = authorizationsService.getActiveAuthorization(request.getConnection(), authorizationId);\n-        return ResponseEntity.ok(new ScaAuthorizationResponse(authorization));\n-    }\n+  @GetMapping(\"/{\" + ScaSdkConstants.KEY_AUTHORIZATION_ID + \"}\")\n+  public ResponseEntity<ScaAuthorizationResponse> getActiveAuthorization(\n+    @PathVariable(ScaSdkConstants.KEY_AUTHORIZATION_ID) @NotNull Long authorizationId,\n+    DefaultAuthenticatedRequest request\n+  ) {\n+    ScaEncryptedEntity authorization = authorizationsService.getActiveAuthorization(request.getConnection(), authorizationId);\n+    return ResponseEntity.ok(new ScaAuthorizationResponse(authorization));\n+  }\n \n-    @PutMapping(\"/{\" + ScaSdkConstants.KEY_AUTHORIZATION_ID + \"}\")\n-    public ResponseEntity<UpdateAuthorizationResponse> confirmAuthorization(\n-            @PathVariable(ScaSdkConstants.KEY_AUTHORIZATION_ID) @NotNull Long authorizationId,\n-            @Valid ScaUpdateAuthorizationRequest request\n-    ) {\n-        boolean result = authorizationsConfirmService.confirmAuthorization(\n-                request.getConnection(),\n-                authorizationId,\n-                request.data.authorizationCode,\n-                request.data.confirmAuthorization\n-        );\n-        return ResponseEntity.ok(new UpdateAuthorizationResponse(result, authorizationId.toString()));\n-    }\n+  @PutMapping(\"/{\" + ScaSdkConstants.KEY_AUTHORIZATION_ID + \"}\")\n+  public ResponseEntity<UpdateAuthorizationResponse> confirmAuthorization(\n+    @RequestHeader(required = false, value = HEADER_KEY_GEOLOCATION) String geolocation,\n+    @RequestHeader(required = false, value = HEADER_KEY_AUTHORIZATION_TYPE) String authorizationType,\n+    @PathVariable(ScaSdkConstants.KEY_AUTHORIZATION_ID) @NotNull Long authorizationId,\n+    @Valid ScaUpdateAuthorizationRequest request\n+  ) {\n+    boolean result = authorizationsConfirmService.confirmAuthorization(\n+      request.getConnection(),\n+      authorizationId,\n+      request.data.authorizationCode,\n+      request.data.confirmAuthorization,\n+      geolocation,\n+      authorizationType\n+    );\n+    return ResponseEntity.ok(new UpdateAuthorizationResponse(result, authorizationId.toString()));\n+  }\n }"
  },
  {
    "sha": "83b86d40b27986e40e7d21731f5f782bcf2914b6",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/Authorization.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/Authorization.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/Authorization.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/Authorization.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -28,10 +28,13 @@\n  * @see com.saltedge.sca.sdk.models.persistent.AuthorizationEntity\n  */\n public interface Authorization extends BaseEntityAbs {\n+    AuthorizationStatus getStatus();\n     Instant getExpiresAt();\n     String getTitle();\n     String getDescription();\n     String getAuthorizationCode();\n     String getUserId();\n     Boolean getConfirmed();\n+    String getConfirmLocation();\n+    String getConfirmAuthorizationType();\n }"
  },
  {
    "sha": "bdce369b13b53224b6c8c6a8736a954921c4f153",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/api/ScaProviderConfigurationData.java",
    "status": "modified",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/api/ScaProviderConfigurationData.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/api/ScaProviderConfigurationData.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/api/ScaProviderConfigurationData.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -84,6 +84,17 @@\n     @NotNull\n     public Boolean consentManagementIsSupported = true;\n \n+    /**\n+     * Geolocation info collection is required for mobile clients or not\n+     *\n+     * true - geolocation is mandatory\n+     * false - geolocation is optional\n+     * null - geolocation is not supported\n+     */\n+    @JsonProperty(\"geolocation_required\")\n+    @NotNull\n+    public Boolean geolocationRequired = null;\n+\n     public ScaProviderConfigurationData() {\n     }\n \n@@ -103,31 +114,80 @@ public ScaProviderConfigurationData(\n         this.consentManagementIsSupported = consentManagementIsSupported;\n     }\n \n+    public ScaProviderConfigurationData(\n+      @NonNull String connectUrl,\n+      @NonNull String code,\n+      @NonNull String name,\n+      @NonNull String logoUrl,\n+      @NonNull String supportEmail,\n+      @NotNull Boolean consentManagementIsSupported,\n+      Boolean geolocationRequired\n+    ) {\n+        this(connectUrl, code, name, logoUrl, supportEmail, consentManagementIsSupported);\n+        this.geolocationRequired = geolocationRequired;\n+    }\n+\n     public String getConnectUrl() {\n         return connectUrl;\n     }\n \n+    public void setConnectUrl(String connectUrl) {\n+        this.connectUrl = connectUrl;\n+    }\n+\n     public String getCode() {\n         return code;\n     }\n \n+    public void setCode(String code) {\n+        this.code = code;\n+    }\n+\n     public String getName() {\n         return name;\n     }\n \n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n     public String getLogoUrl() {\n         return logoUrl;\n     }\n \n+    public void setLogoUrl(String logoUrl) {\n+        this.logoUrl = logoUrl;\n+    }\n+\n     public String getSupportEmail() {\n         return supportEmail;\n     }\n \n+    public void setSupportEmail(String supportEmail) {\n+        this.supportEmail = supportEmail;\n+    }\n+\n     public String getVersion() {\n         return version;\n     }\n \n+    public void setVersion(String version) {\n+        this.version = version;\n+    }\n+\n     public Boolean getConsentManagementIsSupported() {\n         return consentManagementIsSupported;\n     }\n+\n+    public void setConsentManagementIsSupported(Boolean consentManagementIsSupported) {\n+        this.consentManagementIsSupported = consentManagementIsSupported;\n+    }\n+\n+    public Boolean getGeolocationRequired() {\n+        return geolocationRequired;\n+    }\n+\n+    public void setGeolocationRequired(Boolean geolocationRequired) {\n+        this.geolocationRequired = geolocationRequired;\n+    }\n }"
  },
  {
    "sha": "3051574793bf2121437254a59c8f70411b39540a",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/persistent/AuthorizationEntity.java",
    "status": "modified",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/persistent/AuthorizationEntity.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/persistent/AuthorizationEntity.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/models/persistent/AuthorizationEntity.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -40,6 +40,12 @@\n \n     private Boolean confirmed;\n \n+    @Column(length = 64)\n+    private String confirmLocation = \"\";\n+\n+    @Column(length = 64)\n+    private String confirmAuthorizationType = \"\";\n+\n     @Column(length = 4096)\n     private String title = \"\";\n \n@@ -72,6 +78,7 @@ public Boolean isExpired() {\n         return DateTools.dateIsExpired(this.expiresAt);\n     }\n \n+    @Override\n     public AuthorizationStatus getStatus() {\n         if (confirmed != null) return confirmed ? AuthorizationStatus.CONFIRMED : AuthorizationStatus.DENIED;\n         if (this.isExpired()) return AuthorizationStatus.EXPIRED;\n@@ -108,6 +115,16 @@ public String getUserId() {\n         return userId;\n     }\n \n+    @Override\n+    public String getConfirmLocation() {\n+        return confirmLocation == null ? \"\" : confirmLocation;\n+    }\n+\n+    @Override\n+    public String getConfirmAuthorizationType() {\n+        return confirmAuthorizationType == null ? (confirmed == null ? \"\" : \"unknown\") : confirmAuthorizationType;\n+    }\n+\n     public void setUserId(String userId) {\n         this.userId = userId;\n     }\n@@ -119,4 +136,24 @@ public void setConfirmed(Boolean confirmed) {\n     public void setAuthorizationCode(String authorizationCode) {\n         this.authorizationCode = authorizationCode;\n     }\n+\n+    public void setExpiresAt(Instant expiresAt) {\n+        this.expiresAt = expiresAt;\n+    }\n+\n+    public void setConfirmLocation(String confirmLocation) {\n+        this.confirmLocation = confirmLocation;\n+    }\n+\n+    public void setConfirmAuthorizationType(String confirmAuthorizationType) {\n+        this.confirmAuthorizationType = confirmAuthorizationType;\n+    }\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n }"
  },
  {
    "sha": "42011a4e911dd01f0ea525df3c5888bcc8aa1e57",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/services/AuthorizationsConfirmService.java",
    "status": "modified",
    "additions": 27,
    "deletions": 23,
    "changes": 50,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/services/AuthorizationsConfirmService.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/services/AuthorizationsConfirmService.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/services/AuthorizationsConfirmService.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -35,30 +35,34 @@\n @Service\n @Validated\n public class AuthorizationsConfirmService {\n-    private Logger log = LoggerFactory.getLogger(AuthorizationsConfirmService.class);\n-    @Autowired\n-    private AuthorizationsRepository authorizationsRepository;\n-    @Autowired\n-    private ServiceProvider serviceProvider;\n+  private final Logger log = LoggerFactory.getLogger(AuthorizationsConfirmService.class);\n+  @Autowired\n+  private AuthorizationsRepository authorizationsRepository;\n+  @Autowired\n+  private ServiceProvider serviceProvider;\n \n-    public boolean confirmAuthorization(\n-            @NotNull ClientConnectionEntity connection,\n-            @NotNull Long authorizationId,\n-            @NotNull String authorizationCode,\n-            @NotNull boolean confirmAuthorization\n-    ) {\n-        AuthorizationEntity authorization = AuthorizationsCollector.findActiveAuthorization(\n-                authorizationsRepository,\n-                connection,\n-                authorizationId\n-        );\n+  public boolean confirmAuthorization(\n+    @NotNull ClientConnectionEntity connection,\n+    @NotNull Long authorizationId,\n+    @NotNull String authorizationCode,\n+    @NotNull Boolean confirmAuthorization,\n+    String geolocation,\n+    String authorizationType\n+  ) {\n+    AuthorizationEntity authorization = AuthorizationsCollector.findActiveAuthorization(\n+      authorizationsRepository,\n+      connection,\n+      authorizationId\n+    );\n \n-        boolean canUpdateAuthorization = authorization.getAuthorizationCode().equals(authorizationCode);\n-        if (canUpdateAuthorization) {\n-            authorization.setConfirmed(confirmAuthorization);\n-            authorizationsRepository.save(authorization);\n-            serviceProvider.onAuthorizationConfirmed(authorization);\n-        }\n-        return canUpdateAuthorization;\n+    boolean canUpdateAuthorization = authorization.getAuthorizationCode().equals(authorizationCode);\n+    if (canUpdateAuthorization) {\n+      authorization.setConfirmed(confirmAuthorization);\n+      authorization.setConfirmLocation(geolocation);\n+      authorization.setConfirmAuthorizationType(authorizationType);\n+      authorizationsRepository.save(authorization);\n+      serviceProvider.onAuthorizationConfirmed(authorization);\n     }\n+    return canUpdateAuthorization;\n+  }\n }"
  },
  {
    "sha": "1dfd7b61fac7e30b3d237fc45ee2078c6e01f85e",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/services/AuthorizationsService.java",
    "status": "modified",
    "additions": 52,
    "deletions": 52,
    "changes": 104,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/services/AuthorizationsService.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/services/AuthorizationsService.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/services/AuthorizationsService.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -44,63 +44,63 @@\n @Service\n @Validated\n public class AuthorizationsService {\n-    private final Logger log = LoggerFactory.getLogger(AuthorizationsService.class);\n-    @Autowired\n-    private AuthorizationsRepository authorizationsRepository;\n-    @Autowired\n-    private ClientNotificationService clientNotificationService;\n+  private final Logger log = LoggerFactory.getLogger(AuthorizationsService.class);\n+  @Autowired\n+  private AuthorizationsRepository authorizationsRepository;\n+  @Autowired\n+  private ClientNotificationService clientNotificationService;\n \n-    public Authorization createAuthorization(\n-            @NotEmpty String userId,\n-            @NotNull AuthorizationContent authorizationContent\n-    ) {\n-        return createAndSaveAuthorization(userId, authorizationContent.confirmationCode, authorizationContent.title, authorizationContent.description);\n-    }\n+  public Authorization createAuthorization(\n+    @NotEmpty String userId,\n+    @NotNull AuthorizationContent authorizationContent\n+  ) {\n+    return createAndSaveAuthorization(userId, authorizationContent.confirmationCode, authorizationContent.title, authorizationContent.description);\n+  }\n \n-    public Authorization createAuthorizationAndSendToUser(\n-            @NotEmpty String userId,\n-            @NotEmpty String confirmationCode,\n-            @NotEmpty String title,\n-            @NotEmpty String description\n-    ) {\n-        Authorization authorization = createAndSaveAuthorization(userId, confirmationCode, title, description);\n-        clientNotificationService.sendNotificationsForUser(userId, authorization);\n-        return authorization;\n-    }\n+  public Authorization createAuthorizationAndSendToUser(\n+    @NotEmpty String userId,\n+    @NotEmpty String confirmationCode,\n+    @NotEmpty String title,\n+    @NotEmpty String description\n+  ) {\n+    Authorization authorization = createAndSaveAuthorization(userId, confirmationCode, title, description);\n+    clientNotificationService.sendNotificationsForUser(userId, authorization);\n+    return authorization;\n+  }\n \n-    public List<Authorization> getAllAuthorizations(@NotEmpty String userId) {\n-        return authorizationsRepository.findByUserId(userId).stream().map(item -> (Authorization) item).collect(Collectors.toList());\n-    }\n+  public List<Authorization> getAllAuthorizations(@NotEmpty String userId) {\n+    return authorizationsRepository.findByUserId(userId).stream().map(item -> (Authorization) item).collect(Collectors.toList());\n+  }\n \n-    public Authorization getAuthorization(Long authorizationId) {\n-        if (StringUtils.isEmpty(authorizationId)) return null;\n-        return authorizationsRepository.findById(authorizationId).orElse(null);\n-    }\n+  public Authorization getAuthorization(Long authorizationId) {\n+    if (StringUtils.isEmpty(authorizationId)) return null;\n+    return authorizationsRepository.findById(authorizationId).orElse(null);\n+  }\n \n-    public List<ScaEncryptedEntity> getActiveAuthorizations(@NotNull ClientConnectionEntity connection) {\n-        return AuthorizationsCollector.collectActiveAuthorizations(authorizationsRepository, connection);\n-    }\n+  public List<ScaEncryptedEntity> getActiveAuthorizations(@NotNull ClientConnectionEntity connection) {\n+    return AuthorizationsCollector.collectActiveAuthorizations(authorizationsRepository, connection);\n+  }\n \n-    public ScaEncryptedEntity getActiveAuthorization(@NotNull ClientConnectionEntity connection, @NotNull Long authorizationId) {\n-        return AuthorizationsCollector.collectActiveAuthorization(authorizationsRepository, connection, authorizationId);\n-    }\n+  public ScaEncryptedEntity getActiveAuthorization(@NotNull ClientConnectionEntity connection, @NotNull Long authorizationId) {\n+    return AuthorizationsCollector.collectActiveAuthorization(authorizationsRepository, connection, authorizationId);\n+  }\n \n-    private Authorization createAndSaveAuthorization(\n-            String userId,\n-            String confirmationCode,\n-            String title,\n-            String description\n-    ) {\n-        String titleValue = (title == null) ? \"Authorization Request\" : title;\n-        String descriptionValue = (description == null) ? \"Confirm your identity\" : description;\n-        Instant expiresAt = Instant.now().plus(ScaSdkConstants.AUTHORIZATION_DEFAULT_LIFETIME_MINUTES, ChronoUnit.MINUTES);\n-        AuthorizationEntity model = new AuthorizationEntity(\n-                titleValue,\n-                descriptionValue,\n-                expiresAt,\n-                confirmationCode,\n-                userId\n-        );\n-        return authorizationsRepository.save(model);\n-    }\n+  private Authorization createAndSaveAuthorization(\n+    String userId,\n+    String confirmationCode,\n+    String title,\n+    String description\n+  ) {\n+    String titleValue = (title == null) ? \"Authorization Request\" : title;\n+    String descriptionValue = (description == null) ? \"Confirm your identity\" : description;\n+    Instant expiresAt = Instant.now().plus(ScaSdkConstants.AUTHORIZATION_DEFAULT_LIFETIME_MINUTES, ChronoUnit.MINUTES);\n+    AuthorizationEntity model = new AuthorizationEntity(\n+      titleValue,\n+      descriptionValue,\n+      expiresAt,\n+      confirmationCode,\n+      userId\n+    );\n+    return authorizationsRepository.save(model);\n+  }\n }"
  },
  {
    "sha": "1deea908fb229ba6b304aee17f3a8ae4cbbb145b",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/tools/StringMapConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/tools/StringMapConverter.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/tools/StringMapConverter.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/main/java/com/saltedge/sca/sdk/tools/StringMapConverter.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -31,7 +31,7 @@\n import java.util.Map;\n \n public class StringMapConverter implements AttributeConverter<Map<String, String>, String> {\n-    private static Logger log = LoggerFactory.getLogger(StringMapConverter.class);\n+    private static final Logger log = LoggerFactory.getLogger(StringMapConverter.class);\n     private final ObjectMapper objectMapper = new ObjectMapper();\n \n     @Override"
  },
  {
    "sha": "67a102b08f6c4d4b7260f53b29341b73409c1e6d",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/controllers/AuthorizationsControllerIntegrationTests.java",
    "status": "modified",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/controllers/AuthorizationsControllerIntegrationTests.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/controllers/AuthorizationsControllerIntegrationTests.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/controllers/AuthorizationsControllerIntegrationTests.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -20,15 +20,20 @@\n  */\n package com.saltedge.sca.sdk.controllers;\n \n+import com.fasterxml.jackson.databind.ObjectMapper;\n import com.saltedge.sca.sdk.MockMvcTestAbs;\n+import com.saltedge.sca.sdk.ScaSdkConstants;\n import com.saltedge.sca.sdk.TestTools;\n+import com.saltedge.sca.sdk.models.api.requests.ScaUpdateAuthorizationRequest;\n import com.saltedge.sca.sdk.models.persistent.ClientConnectionEntity;\n import com.saltedge.sca.sdk.tools.DateTools;\n+import com.saltedge.sca.sdk.tools.JsonTools;\n import org.hamcrest.Matchers;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.mockito.ArgumentCaptor;\n import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;\n+import org.springframework.http.HttpMethod;\n import org.springframework.http.MediaType;\n import org.springframework.test.context.junit4.SpringRunner;\n import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;\n@@ -144,4 +149,39 @@ public void getAuthorizationsTest_returnError_whenNoUserInConnection() throws Ex\n \t\t\t\t.andExpect(jsonPath(\"$.error_class\", Matchers.is(\"UserNotFound\")))\n \t\t\t\t.andExpect(jsonPath(\"$.error_message\", Matchers.is(\"User Not Found.\")));\n \t}\n+\n+\t@Test\n+\tpublic void whenConfirmAuthorization_returnSuccess() throws Exception {\n+\t\tgiven(connectionsRepository.findByAccessTokenAndRevokedFalse(\"accessToken\")).willReturn(testAuthorizedConnection);\n+\t\tgiven(authorizationsConfirmService.confirmAuthorization(\n+\t\t\ttestAuthorizedConnection, 1L, \"1234567890\", true, \"GEO:1.2;3.4\", \"passcode\")\n+\t\t).willReturn(true);\n+\n+\t\tString requestUrl = \"http://localhost\" + AUTHORIZATIONS_REQUEST_PATH + \"/1\";\n+\t\tString expiresAt = String.valueOf((DateTools.nowUtcSeconds() + 60));\n+\n+\t\tScaUpdateAuthorizationRequest body = new ScaUpdateAuthorizationRequest(true, \"1234567890\");\n+\t\tString rawBody = new ObjectMapper().writeValueAsString(body);\n+\t\tString signature = TestTools.createSignature(\n+\t\t\tHttpMethod.PUT.toString(),\n+\t\t\trequestUrl,\n+\t\t\texpiresAt,\n+\t\t\trawBody,\n+\t\t\tTestTools.getRsaPrivateKey()\n+\t\t);\n+\n+\t\tmvc.perform(MockMvcRequestBuilders.put(AUTHORIZATIONS_REQUEST_PATH + \"/1\")\n+\t\t\t.contentType(MediaType.APPLICATION_JSON)\n+\t\t\t.accept(MediaType.APPLICATION_JSON)\n+\t\t\t.header(HEADER_KEY_ACCESS_TOKEN, \"accessToken\")\n+\t\t\t.header(HEADER_KEY_EXPIRES_AT, expiresAt)\n+\t\t\t.header(HEADER_KEY_SIGNATURE, signature)\n+\t\t\t.header(\"GEO-Location\", \"GEO:1.2;3.4\")\n+\t\t\t.header(\"Authorization-Type\", \"passcode\")\n+\t\t\t.content(rawBody)\n+\t\t)\n+\t\t\t.andExpect(status().isOk())\n+\t\t\t.andExpect(jsonPath(\"$.data.success\", Matchers.is(true)))\n+\t\t\t.andExpect(jsonPath(\"$.data.id\", Matchers.is(\"1\")));\n+\t}\n }"
  },
  {
    "sha": "03a44796062c36d0fb9fc0edfee01a26027b4345",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/controllers/ConfigurationControllerIntegrationTests.java",
    "status": "modified",
    "additions": 24,
    "deletions": 22,
    "changes": 46,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/controllers/ConfigurationControllerIntegrationTests.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/controllers/ConfigurationControllerIntegrationTests.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/controllers/ConfigurationControllerIntegrationTests.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -37,27 +37,29 @@\n @RunWith(SpringRunner.class)\n @WebMvcTest(ConfigurationController.class)\n public class ConfigurationControllerIntegrationTests extends MockMvcTestAbs {\n-\t@Test\n-\tpublic void getConfigurationTest() throws Exception {\n-\t\tScaProviderConfigurationData configurationData = new ScaProviderConfigurationData(\n-\t\t\t\t\"https://your_host.org\",\n-\t\t\t\t\"spring-demobank\",\n-\t\t\t\t\"Spring Demobank\",\n-\t\t\t\t\"\",\n-\t\t\t\t\"support@spring-demobank.com\",\n-\t\t\t\ttrue\n-\t\t);\n-\t\tgiven(serviceProvider.getProviderConfiguration()).willReturn(configurationData);\n+  @Test\n+  public void getConfigurationTest() throws Exception {\n+    ScaProviderConfigurationData configurationData = new ScaProviderConfigurationData(\n+      \"https://your_host.org\",\n+      \"spring-demobank\",\n+      \"Spring Demobank\",\n+      \"\",\n+      \"support@spring-demobank.com\",\n+      true,\n+      true\n+    );\n+    given(serviceProvider.getProviderConfiguration()).willReturn(configurationData);\n \n-\t\tmvc.perform(MockMvcRequestBuilders.get(CONFIGURATION_REQUEST_PATH))\n-\t\t\t\t.andExpect(status().isOk())\n-\t\t\t\t.andExpect(jsonPath(\"$.data\").exists())\n-\t\t\t\t.andExpect(jsonPath(\"$.data.code\", Matchers.is(\"spring-demobank\")))\n-\t\t\t\t.andExpect(jsonPath(\"$.data.name\", Matchers.is(\"Spring Demobank\")))\n-\t\t\t\t.andExpect(jsonPath(\"$.data.connect_url\", Matchers.is(\"https://your_host.org\")))\n-\t\t\t\t.andExpect(jsonPath(\"$.data.logo_url\", Matchers.is(\"\")))\n-\t\t\t\t.andExpect(jsonPath(\"$.data.support_email\", Matchers.is(\"support@spring-demobank.com\")))\n-\t\t\t\t.andExpect(jsonPath(\"$.data.consent_management\", Matchers.is(true)))\n-\t\t\t\t.andExpect(jsonPath(\"$.data.version\", Matchers.is(\"1\")));\n-\t}\n+    mvc.perform(MockMvcRequestBuilders.get(CONFIGURATION_REQUEST_PATH))\n+      .andExpect(status().isOk())\n+      .andExpect(jsonPath(\"$.data\").exists())\n+      .andExpect(jsonPath(\"$.data.code\", Matchers.is(\"spring-demobank\")))\n+      .andExpect(jsonPath(\"$.data.name\", Matchers.is(\"Spring Demobank\")))\n+      .andExpect(jsonPath(\"$.data.connect_url\", Matchers.is(\"https://your_host.org\")))\n+      .andExpect(jsonPath(\"$.data.logo_url\", Matchers.is(\"\")))\n+      .andExpect(jsonPath(\"$.data.support_email\", Matchers.is(\"support@spring-demobank.com\")))\n+      .andExpect(jsonPath(\"$.data.consent_management\", Matchers.is(true)))\n+      .andExpect(jsonPath(\"$.data.version\", Matchers.is(\"1\")))\n+      .andExpect(jsonPath(\"$.data.geolocation_required\", Matchers.is(true)));\n+  }\n }"
  },
  {
    "sha": "8a146a4ddc7e98fcb5303b9bc2068cee733ac3ab",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/interceptors/AuthorizationErrorsIntegrationTests.java",
    "status": "modified",
    "additions": 8,
    "deletions": 6,
    "changes": 14,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/interceptors/AuthorizationErrorsIntegrationTests.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/interceptors/AuthorizationErrorsIntegrationTests.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/interceptors/AuthorizationErrorsIntegrationTests.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -221,19 +221,21 @@ public void updateAuthorizationTest_returnSuccess_onPutAuthorization() throws Ex\n \t\tString expiresAt = String.valueOf((DateTools.nowUtcSeconds() + 60));\n \n \t\tScaUpdateAuthorizationRequest body = new ScaUpdateAuthorizationRequest(true, \"1234567890\");\n-\n \t\tString rawBody = new ObjectMapper().writeValueAsString(body);\n \t\tString signature = TestTools.createSignature(\n-\t\t\t\tHttpMethod.PUT.toString(),\n-\t\t\t\trequestUrl,\n-\t\t\t\texpiresAt,\n-\t\t\t\trawBody,\n-\t\t\t\tTestTools.getRsaPrivateKey()\n+\t\t\tHttpMethod.PUT.toString(),\n+\t\t\trequestUrl,\n+\t\t\texpiresAt,\n+\t\t\trawBody,\n+\t\t\tTestTools.getRsaPrivateKey()\n \t\t);\n+\n \t\tLinkedMultiValueMap<String, String> headers = new LinkedMultiValueMap<>();\n \t\theaders.add(HEADER_KEY_ACCESS_TOKEN, \"accessToken\");\n \t\theaders.add(HEADER_KEY_EXPIRES_AT, expiresAt);\n \t\theaders.add(HEADER_KEY_SIGNATURE, signature);\n+\t\theaders.add(HEADER_KEY_GEOLOCATION, \"GEO:1.2;3.4\");\n+\t\theaders.add(HEADER_KEY_AUTHORIZATION_TYPE, \"passcode\");\n \n \t\tArgumentCaptor<String> userCaptor = ArgumentCaptor.forClass(String.class);\n \t\tgiven(connectionsRepository.findByAccessTokenAndRevokedFalse(\"accessToken\")).willReturn(testConnection);"
  },
  {
    "sha": "aff81a6223e53f965b69b6ba8c4843fc87ebc8cb",
    "filename": "saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/services/AuthorizationsConfirmServiceTests.java",
    "status": "added",
    "additions": 120,
    "deletions": 0,
    "changes": 120,
    "blob_url": "https://github.com/saltedge/sca-identity-service-example/blob/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/services/AuthorizationsConfirmServiceTests.java",
    "raw_url": "https://github.com/saltedge/sca-identity-service-example/raw/e0ff264be9fa10f71062a6a41111d77da1129b39/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/services/AuthorizationsConfirmServiceTests.java",
    "contents_url": "https://api.github.com/repos/saltedge/sca-identity-service-example/contents/saltedge-sca-service-spring/saltedge-sca-service-sdk/src/test/java/com/saltedge/sca/sdk/services/AuthorizationsConfirmServiceTests.java?ref=e0ff264be9fa10f71062a6a41111d77da1129b39",
    "patch": "@@ -0,0 +1,120 @@\n+/*\n+ * This file is part of the Salt Edge Authenticator distribution\n+ * (https://github.com/saltedge/sca-identity-service-example).\n+ * Copyright (c) 2021 Salt Edge Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, version 3 or later.\n+ *\n+ * This program is distributed in the hope that it will be useful, but\n+ * WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * For the additional permissions granted for Salt Edge Authenticator\n+ * under Section 7 of the GNU General Public License see THIRD_PARTY_NOTICES.md\n+ */\n+package com.saltedge.sca.sdk.services;\n+\n+import com.saltedge.sca.sdk.MockServiceTestAbs;\n+import com.saltedge.sca.sdk.models.persistent.AuthorizationEntity;\n+import com.saltedge.sca.sdk.models.persistent.AuthorizationsRepository;\n+import com.saltedge.sca.sdk.models.persistent.ClientConnectionEntity;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.ArgumentCaptor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import javax.validation.ConstraintViolationException;\n+import java.time.Instant;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.BDDMockito.given;\n+import static org.mockito.Mockito.*;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest\n+public class AuthorizationsConfirmServiceTests extends MockServiceTestAbs {\n+\t@Autowired\n+\tprivate AuthorizationsConfirmService testService;\n+\t@MockBean\n+\tprivate AuthorizationsRepository authorizationsRepository;\n+\n+\tprivate final ClientConnectionEntity testConnection = createAuthenticatedConnection();\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tAuthorizationEntity testAuthorization = new AuthorizationEntity();\n+\t\ttestAuthorization.setId(1L);\n+\t\ttestAuthorization.setUserId(String.valueOf(1));\n+\t\ttestAuthorization.setAuthorizationCode(\"123456\");\n+\n+\t\tgiven(authorizationsRepository.findFirstByIdAndUserIdAndExpiresAtGreaterThanAndConfirmedIsNull(\n+\t\t\teq(1L),\n+\t\t\teq(\"1\"),\n+\t\t\tany(Instant.class))\n+\t\t).willReturn(testAuthorization);\n+\t}\n+\n+\t@Test\n+\tpublic void givenInvalidParams_whenConfirmAuthorization_thenThrowConstraintViolationException() {\n+\t\tassertThrows(ConstraintViolationException.class, () -> testService.confirmAuthorization(null, null, null, null, null, null));\n+\t}\n+\n+\t@Test\n+\tpublic void givenValidParams_whenConfirmAuthorization_thenSaveAndReturnTrue() {\n+\t\t//given\n+\n+\t\t//when\n+\t\tboolean result = testService.confirmAuthorization(testConnection, 1L, \"123456\", true, \"GEO:52.506931;13.144558\", \"biometrics\");\n+\n+\t\t//then\n+\t\tassertThat(result).isTrue();\n+\n+\t\tverify(authorizationsRepository).findFirstByIdAndUserIdAndExpiresAtGreaterThanAndConfirmedIsNull(\n+\t\t\teq(1L),\n+\t\t\teq(\"1\"),\n+\t\t\tany(Instant.class)\n+\t\t);\n+\t\tArgumentCaptor<AuthorizationEntity> entityCaptor = ArgumentCaptor.forClass(AuthorizationEntity.class);\n+\t\tverify(authorizationsRepository).save(entityCaptor.capture());\n+\n+\t\tassertThat(entityCaptor.getValue().getConfirmed()).isTrue();\n+\t\tassertThat(entityCaptor.getValue().getAuthorizationCode()).isEqualTo(\"123456\");\n+\t\tassertThat(entityCaptor.getValue().getUserId()).isEqualTo(\"1\");\n+\t\tassertThat(entityCaptor.getValue().getConfirmLocation()).isEqualTo(\"GEO:52.506931;13.144558\");\n+\t\tassertThat(entityCaptor.getValue().getConfirmAuthorizationType()).isEqualTo(\"biometrics\");\n+\n+\t\tverify(serviceProvider).onAuthorizationConfirmed(entityCaptor.getValue());\n+\t}\n+\n+\t@Test\n+\tpublic void givenInvalidParams_whenConfirmAuthorization_thenReturnFalse() {\n+\t\t//given\n+\n+\t\t//when\n+\t\tboolean result = testService.confirmAuthorization(testConnection, 1L, \"64321\", true, \"GEO:52.506931;13.144558\", \"biometrics\");\n+\n+\t\t//then\n+\t\tassertThat(result).isFalse();\n+\n+\t\tverify(authorizationsRepository).findFirstByIdAndUserIdAndExpiresAtGreaterThanAndConfirmedIsNull(\n+\t\t\teq(1L),\n+\t\t\teq(\"1\"),\n+\t\t\tany(Instant.class)\n+\t\t);\n+\t\tverifyNoMoreInteractions(authorizationsRepository);\n+\t\tverifyNoInteractions(serviceProvider);\n+\t}\n+}"
  }
]
