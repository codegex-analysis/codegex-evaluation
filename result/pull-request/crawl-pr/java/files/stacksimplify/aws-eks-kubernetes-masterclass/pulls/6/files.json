[
  {
    "sha": "4515f087a9b48516a9b07acb25d52a9dd1ba6adf",
    "filename": "08-ELB-Application-LoadBalancers/08-01-ALB-Ingress-Install/README.md",
    "status": "modified",
    "additions": 11,
    "deletions": 12,
    "changes": 23,
    "blob_url": "https://github.com/stacksimplify/aws-eks-kubernetes-masterclass/blob/d775d85ea60f4d987a8d5318c5233f5ab8528fc6/08-ELB-Application-LoadBalancers/08-01-ALB-Ingress-Install/README.md",
    "raw_url": "https://github.com/stacksimplify/aws-eks-kubernetes-masterclass/raw/d775d85ea60f4d987a8d5318c5233f5ab8528fc6/08-ELB-Application-LoadBalancers/08-01-ALB-Ingress-Install/README.md",
    "contents_url": "https://api.github.com/repos/stacksimplify/aws-eks-kubernetes-masterclass/contents/08-ELB-Application-LoadBalancers/08-01-ALB-Ingress-Install/README.md?ref=d775d85ea60f4d987a8d5318c5233f5ab8528fc6",
    "patch": "@@ -5,13 +5,13 @@\n   - ClusterRole\n   - ServiceAccount\n   - ClusterRoleBinding\n-- Create IAM Policy with access to AWS Services (EC2, ELB, IAM, Cognito, WAF, Shield, Certificate Manager etc - All AWS Services in relation with AWS Application Load Balancer)  \n+- Create IAM Policy with access to AWS Services (EC2, ELB, IAM, Cognito, WAF, Shield, Certificate Manager etc - All AWS Services in relation with AWS Application Load Balancer)\n - Associate the k8s service account, AWS IAM Policy by creating a AWS IAM Role\n - Finally deploy ALB Ingress Controller and Test if that respective POD is finally running\n \n \n ## Step-02: Create a Kubernetes service account named alb-ingress-controller in the kube-system namespace\n-- We are using master branch instead of v1.1.4 \n+- We are using master branch instead of v1.1.4\n ```\n # List Service Accounts\n kubectl get sa -n kube-system\n@@ -22,7 +22,7 @@ kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingre\n # List Service Accounts\n kubectl get sa -n kube-system\n \n-# Describe Service Account alb-ingress-controller \n+# Describe Service Account alb-ingress-controller\n kubectl describe sa alb-ingress-controller -n kube-system\n ```\n - **Output**\n@@ -43,12 +43,12 @@ Events:              <none>\n \n ### Create IAM Policy\n - **Why this policy:** This IAM policy will allow our ALB Ingress Controller pod to make calls to AWS APIs\n-- **ISSUE:** With `iam-policy.json` aws provided we have an issue, so created manually using AWS Management Console. \n+- **ISSUE:** With `iam-policy.json` aws provided we have an issue, so created manually using AWS Management Console.\n - **IAM Policy Creation:** Create manually using AWS management console and give full access to ELB\n - Go to Services -> IAM -> Policies -> Create Policy\n - Click on **JSON** tab and paste the content from `https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/master/docs/examples/iam-policy.json`\n - Come back to **Visual Editor**\n-- Add ELB full access  \n+- Add ELB full access\n   - Click on **Add Additional Permissions**\n     - **Service:** ELB\n     - **Actions:** All ELB actions (elasticloadbalancing:*)\n@@ -61,19 +61,18 @@ Events:              <none>\n - Click on **Create Policy**\n \n ```\n-# NOT WORKING AS ON TODAY DUE TO ERRORS IN iam-policy.json \n # Create IAM Policy\n aws iam create-policy \\\n     --policy-name ALBIngressControllerIAMPolicy \\\n-    --policy-document https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/master/docs/examples/iam-policy.json\n+    --policy-document \"`curl -sS https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/master/docs/examples/iam-policy.json`\"\n ```\n-### Make a note of Policy ARN    \n+### Make a note of Policy ARN\n - Make a note of Policy ARN as we are going to use that in next step when creating IAM Role.\n ```\n Policy ARN:  arn:aws:iam::180789647333:policy/ALBIngressControllerIAMPolicy\n ```\n \n-## Step-04: Create an IAM role for the ALB Ingress Controller and attach the role to the service account \n+## Step-04: Create an IAM role for the ALB Ingress Controller and attach the role to the service account\n - Applicable only with `eksctl` managed clusters\n - This command will create an AWS IAM role and bounds that to Kubernetes service account\n \n@@ -114,7 +113,7 @@ eksctl  get iamserviceaccount --cluster eksdemo1\n \n ### Verify k8s Service Account\n ```\n-# Describe Service Account alb-ingress-controller \n+# Describe Service Account alb-ingress-controller\n kubectl describe sa alb-ingress-controller -n kube-system\n ```\n - **Observation:** You can see that newly created Role ARN is added in `Annotations` confirming that **AWS IAM role bound to a Kubernetes service account**\n@@ -149,7 +148,7 @@ kubectl get deploy -n kube-system\n # Edit Deployment\n kubectl edit deployment.apps/alb-ingress-controller -n kube-system\n \n-# Template file  \n+# Template file\n     spec:\n       containers:\n       - args:\n@@ -164,7 +163,7 @@ kubectl edit deployment.apps/alb-ingress-controller -n kube-system\n         - --cluster-name=eksdemo1\n ```\n \n-## Step-07: Verify our ALB Ingress Controller is running. \n+## Step-07: Verify our ALB Ingress Controller is running.\n - Verify for the pod starting with `alb-ingress-controller`\n - We will know if all our above steps are working or not in our next section **08-02-ALB-Ingress-Basic**, if ALB not created then we something is wrong.\n ```"
  }
]
