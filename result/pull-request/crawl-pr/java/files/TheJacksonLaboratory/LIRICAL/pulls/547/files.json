[
  {
    "sha": "9cc84ea9b4d95453115d0c26488d6a78694e0bc6",
    "filename": ".mvn/wrapper/maven-wrapper.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/.mvn/wrapper/maven-wrapper.jar",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/.mvn/wrapper/maven-wrapper.jar",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/.mvn/wrapper/maven-wrapper.jar?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979"
  },
  {
    "sha": "39e8694bfab71b03d021af58ea49b2bfbfa83875",
    "filename": ".mvn/wrapper/maven-wrapper.properties",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/.mvn/wrapper/maven-wrapper.properties?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -0,0 +1,20 @@\n+#\n+# The Exomiser - A tool to annotate and prioritize genomic variants\n+#\n+# Copyright (c) 2016-2018 Queen Mary University of London.\n+# Copyright (c) 2012-2016 Charit� Universit�tsmedizin Berlin and Genome Research Ltd.\n+#\n+# This program is free software: you can redistribute it and/or modify\n+# it under the terms of the GNU Affero General Public License as\n+# published by the Free Software Foundation, either version 3 of the\n+# License, or (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU Affero General Public License for more details.\n+#\n+# You should have received a copy of the GNU Affero General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+#\n+distributionUrl=https://repo1.maven.org/maven2/org/apache/maven/apache-maven/3.6.0/apache-maven-3.6.0-bin.zip\n\\ No newline at end of file"
  },
  {
    "sha": "32bfb145be7fd507988dc64ff8e9294664a8d6ff",
    "filename": "CHANGELOG.rst",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/CHANGELOG.rst",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/CHANGELOG.rst",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/CHANGELOG.rst?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -2,6 +2,15 @@\n Changelog\n =========\n \n+\n+------\n+v1.3.1\n+------\n+- Update download URL for phenotype.hpoa\n+- Update versions of multiple plugins/dependencies\n+- Add option to simultaneously output HTML and TSV\n+- maven wrapper\n+\n ------\n v1.3.0\n ------"
  },
  {
    "sha": "5bf251c0774593ca4f5335acf0f7483eaa162e8f",
    "filename": "mvnw",
    "status": "added",
    "additions": 225,
    "deletions": 0,
    "changes": 225,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/mvnw",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/mvnw",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/mvnw?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -0,0 +1,225 @@\n+#!/bin/sh\n+# ----------------------------------------------------------------------------\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+# ----------------------------------------------------------------------------\n+\n+# ----------------------------------------------------------------------------\n+# Maven2 Start Up Batch script\n+#\n+# Required ENV vars:\n+# ------------------\n+#   JAVA_HOME - location of a JDK home dir\n+#\n+# Optional ENV vars\n+# -----------------\n+#   M2_HOME - location of maven2's installed home dir\n+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+#     e.g. to debug Maven itself, use\n+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+# ----------------------------------------------------------------------------\n+\n+if [ -z \"$MAVEN_SKIP_RC\" ] ; then\n+\n+  if [ -f /etc/mavenrc ] ; then\n+    . /etc/mavenrc\n+  fi\n+\n+  if [ -f \"$HOME/.mavenrc\" ] ; then\n+    . \"$HOME/.mavenrc\"\n+  fi\n+\n+fi\n+\n+# OS specific support.  $var _must_ be set to either true or false.\n+cygwin=false;\n+darwin=false;\n+mingw=false\n+case \"`uname`\" in\n+  CYGWIN*) cygwin=true ;;\n+  MINGW*) mingw=true;;\n+  Darwin*) darwin=true\n+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n+    if [ -z \"$JAVA_HOME\" ]; then\n+      if [ -x \"/usr/libexec/java_home\" ]; then\n+        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n+      else\n+        export JAVA_HOME=\"/Library/Java/Home\"\n+      fi\n+    fi\n+    ;;\n+esac\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  if [ -r /etc/gentoo-release ] ; then\n+    JAVA_HOME=`java-config --jre-home`\n+  fi\n+fi\n+\n+if [ -z \"$M2_HOME\" ] ; then\n+  ## resolve links - $0 may be a link to maven's home\n+  PRG=\"$0\"\n+\n+  # need this for relative symlinks\n+  while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+      PRG=\"$link\"\n+    else\n+      PRG=\"`dirname \"$PRG\"`/$link\"\n+    fi\n+  done\n+\n+  saveddir=`pwd`\n+\n+  M2_HOME=`dirname \"$PRG\"`/..\n+\n+  # make it fully qualified\n+  M2_HOME=`cd \"$M2_HOME\" && pwd`\n+\n+  cd \"$saveddir\"\n+  # echo Using m2 at $M2_HOME\n+fi\n+\n+# For Cygwin, ensure paths are in UNIX format before anything is touched\n+if $cygwin ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\n+fi\n+\n+# For Migwn, ensure paths are in UNIX format before anything is touched\n+if $mingw ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n+  # TODO classpath?\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ]; then\n+  javaExecutable=\"`which javac`\"\n+  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n+    # readlink(1) is not available as standard on Solaris 10.\n+    readLink=`which readlink`\n+    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n+      if $darwin ; then\n+        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n+      else\n+        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n+      fi\n+      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n+      JAVA_HOME=\"$javaHome\"\n+      export JAVA_HOME\n+    fi\n+  fi\n+fi\n+\n+if [ -z \"$JAVACMD\" ] ; then\n+  if [ -n \"$JAVA_HOME\"  ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+      # IBM's JDK on AIX uses strange locations for the executables\n+      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+      JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+  else\n+    JAVACMD=\"`which java`\"\n+  fi\n+fi\n+\n+if [ ! -x \"$JAVACMD\" ] ; then\n+  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n+  echo \"  We cannot execute $JAVACMD\" >&2\n+  exit 1\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  echo \"Warning: JAVA_HOME environment variable is not set.\"\n+fi\n+\n+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n+\n+# traverses directory structure from process work directory to filesystem root\n+# first directory with .mvn subdirectory is considered project base directory\n+find_maven_basedir() {\n+\n+  if [ -z \"$1\" ]\n+  then\n+    echo \"Path not specified to find_maven_basedir\"\n+    return 1\n+  fi\n+\n+  basedir=\"$1\"\n+  wdir=\"$1\"\n+  while [ \"$wdir\" != '/' ] ; do\n+    if [ -d \"$wdir\"/.mvn ] ; then\n+      basedir=$wdir\n+      break\n+    fi\n+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n+    if [ -d \"${wdir}\" ]; then\n+      wdir=`cd \"$wdir/..\"; pwd`\n+    fi\n+    # end of workaround\n+  done\n+  echo \"${basedir}\"\n+}\n+\n+# concatenates all lines of a file\n+concat_lines() {\n+  if [ -f \"$1\" ]; then\n+    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n+  fi\n+}\n+\n+BASE_DIR=`find_maven_basedir \"$(pwd)\"`\n+if [ -z \"$BASE_DIR\" ]; then\n+  exit 1;\n+fi\n+\n+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\n+echo $MAVEN_PROJECTBASEDIR\n+MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n+  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\n+fi\n+\n+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+exec \"$JAVACMD\" \\\n+  $MAVEN_OPTS \\\n+  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n+  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\""
  },
  {
    "sha": "019bd74d766ebd4c033528112148d866555b5c9e",
    "filename": "mvnw.cmd",
    "status": "added",
    "additions": 143,
    "deletions": 0,
    "changes": 143,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/mvnw.cmd",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/mvnw.cmd",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/mvnw.cmd?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -0,0 +1,143 @@\n+@REM ----------------------------------------------------------------------------\n+@REM Licensed to the Apache Software Foundation (ASF) under one\n+@REM or more contributor license agreements.  See the NOTICE file\n+@REM distributed with this work for additional information\n+@REM regarding copyright ownership.  The ASF licenses this file\n+@REM to you under the Apache License, Version 2.0 (the\n+@REM \"License\"); you may not use this file except in compliance\n+@REM with the License.  You may obtain a copy of the License at\n+@REM\n+@REM    http://www.apache.org/licenses/LICENSE-2.0\n+@REM\n+@REM Unless required by applicable law or agreed to in writing,\n+@REM software distributed under the License is distributed on an\n+@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+@REM KIND, either express or implied.  See the License for the\n+@REM specific language governing permissions and limitations\n+@REM under the License.\n+@REM ----------------------------------------------------------------------------\n+\n+@REM ----------------------------------------------------------------------------\n+@REM Maven2 Start Up Batch script\n+@REM\n+@REM Required ENV vars:\n+@REM JAVA_HOME - location of a JDK home dir\n+@REM\n+@REM Optional ENV vars\n+@REM M2_HOME - location of maven2's installed home dir\n+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending\n+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+@REM     e.g. to debug Maven itself, use\n+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+@REM ----------------------------------------------------------------------------\n+\n+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n+@echo off\n+@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'\n+@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n+\n+@REM set %HOME% to equivalent of $HOME\n+if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n+\n+@REM Execute a user defined script before this one\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n+@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n+if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n+:skipRcPre\n+\n+@setlocal\n+\n+set ERROR_CODE=0\n+\n+@REM To isolate internal variables from possible post scripts, we use another setlocal\n+@setlocal\n+\n+@REM ==== START VALIDATION ====\n+if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n+\n+echo.\n+echo Error: JAVA_HOME not found in your environment. >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+:OkJHome\n+if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n+\n+echo.\n+echo Error: JAVA_HOME is set to an invalid directory. >&2\n+echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+@REM ==== END VALIDATION ====\n+\n+:init\n+\n+@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n+@REM Fallback to current working directory if not found.\n+\n+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n+IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n+\n+set EXEC_DIR=%CD%\n+set WDIR=%EXEC_DIR%\n+:findBaseDir\n+IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n+cd ..\n+IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n+set WDIR=%CD%\n+goto findBaseDir\n+\n+:baseDirFound\n+set MAVEN_PROJECTBASEDIR=%WDIR%\n+cd \"%EXEC_DIR%\"\n+goto endDetectBaseDir\n+\n+:baseDirNotFound\n+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n+cd \"%EXEC_DIR%\"\n+\n+:endDetectBaseDir\n+\n+IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n+\n+@setlocal EnableExtensions EnableDelayedExpansion\n+for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n+\n+:endReadAdditionalConfig\n+\n+SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n+\n+set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n+if ERRORLEVEL 1 goto error\n+goto end\n+\n+:error\n+set ERROR_CODE=1\n+\n+:end\n+@endlocal & set ERROR_CODE=%ERROR_CODE%\n+\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n+@REM check for post script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\n+if exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n+:skipRcPost\n+\n+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\n+if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n+\n+if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n+\n+exit /B %ERROR_CODE%"
  },
  {
    "sha": "ba431d5b930fce625f3f19ca1077ad9cc5516237",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 23,
    "deletions": 47,
    "changes": 70,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/pom.xml",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/pom.xml",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/pom.xml?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -5,7 +5,7 @@\n \n     <groupId>org.monarchinitiative</groupId>\n     <artifactId>LIRICAL</artifactId>\n-    <version>1.3.0</version>\n+    <version>1.3.1</version>\n     <packaging>jar</packaging>\n \n     <name>LIRICAL</name>\n@@ -17,8 +17,8 @@\n         <java.version>8</java.version>\n         <maven.compiler.source>${java.version}</maven.compiler.source>\n         <maven.compiler.target>${java.version}</maven.compiler.target>\n-        <junit.version>5.6.1</junit.version>\n-        <phenol.version>1.6.0</phenol.version>\n+        <junit.version>5.7.1</junit.version>\n+        <phenol.version>1.6.2</phenol.version>\n         <exomiser.version>12.1.0</exomiser.version>\n         <phenopacket.version>1.0.0</phenopacket.version>\n         <slf4j.version>1.7.30</slf4j.version>\n@@ -29,7 +29,7 @@\n         <dependency>\n             <groupId>org.freemarker</groupId>\n             <artifactId>freemarker</artifactId>\n-            <version>2.3.30</version>\n+            <version>2.3.31</version>\n         </dependency>\n \n         <dependency>\n@@ -120,7 +120,7 @@\n         <dependency>\n             <groupId>com.github.samtools</groupId>\n             <artifactId>htsjdk</artifactId>\n-            <version>2.21.3</version>\n+            <version>2.24.0</version>\n             <exclusions>\n                 <exclusion>\n                     <groupId>org.tukaani</groupId>\n@@ -222,7 +222,7 @@\n         <dependency>\n             <groupId>de.charite.compbio</groupId>\n             <artifactId>Jannovar</artifactId>\n-            <version>0.34</version>\n+            <version>0.35</version>\n             <type>pom</type>\n             <exclusions>\n                 <exclusion>\n@@ -361,7 +361,7 @@\n         <dependency>\n             <groupId>commons-net</groupId>\n             <artifactId>commons-net</artifactId>\n-            <version>3.6</version>\n+            <version>3.8.0</version>\n         </dependency>\n \n         <!-- https://mvnrepository.com/artifact/com.h2database/h2-mvstore -->\n@@ -375,48 +375,17 @@\n         <dependency>\n             <groupId>info.picocli</groupId>\n             <artifactId>picocli</artifactId>\n-            <version>4.4.0</version>\n+            <version>4.6.1</version>\n         </dependency>\n \n \n         <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->\n         <dependency>\n             <groupId>org.junit.jupiter</groupId>\n-            <artifactId>junit-jupiter-api</artifactId>\n+            <artifactId>junit-jupiter</artifactId>\n             <version>${junit.version}</version>\n             <scope>test</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>org.junit.jupiter</groupId>\n-            <artifactId>junit-jupiter-engine</artifactId>\n-            <version>${junit.version}</version>\n-            <exclusions>\n-                <exclusion>\n-                    <groupId>org.junit.jupiter</groupId>\n-                    <artifactId>junit-jupiter-api</artifactId>\n-                </exclusion>\n-            </exclusions>\n-            <scope>test</scope>\n-        </dependency>\n-\n-        <dependency>\n-            <groupId>org.junit.platform</groupId>\n-            <artifactId>junit-platform-launcher</artifactId>\n-            <version>1.6.1</version>\n-            <scope>test</scope>\n-            <exclusions>\n-                <exclusion>\n-                    <groupId>org.junit.platform</groupId>\n-                    <artifactId>junit-platform-engine</artifactId>\n-                </exclusion>\n-            </exclusions>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.junit.platform</groupId>\n-            <artifactId>junit-platform-runner</artifactId>\n-            <version>1.6.1</version>\n-            <scope>test</scope>\n-        </dependency>\n \n         <!-- https://mvnrepository.com/artifact/org.mockito/mockito-all -->\n         <dependency>\n@@ -432,10 +401,12 @@\n             <scope>test</scope>\n         </dependency>\n \n+\n+\n         <dependency>\n             <groupId>org.mockito</groupId>\n             <artifactId>mockito-junit-jupiter</artifactId>\n-            <version>3.3.3</version>\n+            <version>3.8.0</version>\n             <exclusions>\n                 <exclusion>\n                     <groupId>org.junit.jupiter</groupId>\n@@ -456,7 +427,7 @@\n         <dependency>\n             <groupId>com.fasterxml.jackson.core</groupId>\n             <artifactId>jackson-databind</artifactId>\n-            <version>2.10.3</version>\n+            <version>2.12.1</version>\n         </dependency>\n         <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->\n         <dependency>\n@@ -472,7 +443,7 @@\n         <dependency>\n             <groupId>org.codehaus.mojo</groupId>\n             <artifactId>versions-maven-plugin</artifactId>\n-            <version>2.7</version>\n+            <version>2.8.1</version>\n             <exclusions>\n                 <exclusion>\n                     <groupId>org.apache.maven.doxia</groupId>\n@@ -541,7 +512,7 @@\n             <plugin>\n                 <groupId>org.codehaus.mojo</groupId>\n                 <artifactId>versions-maven-plugin</artifactId>\n-                <version>2.7</version>\n+                <version>2.8.1</version>\n                 <configuration>\n                     <generateBackupPoms>false</generateBackupPoms>\n                 </configuration>\n@@ -595,7 +566,7 @@\n              </plugin>\n              <plugin>\n                  <artifactId>maven-resources-plugin</artifactId>\n-                 <version>3.1.0</version>\n+                 <version>3.2.0</version>\n                  <executions>\n                      <execution>\n                          <id>copy-resources</id>\n@@ -662,7 +633,7 @@\n              <plugin>\n                  <groupId>org.apache.maven.plugins</groupId>\n                  <artifactId>maven-shade-plugin</artifactId>\n-                 <version>3.2.2</version>\n+                 <version>3.2.4</version>\n                  <configuration>\n                      <createDependencyReducedPom>false</createDependencyReducedPom>\n                      <filters>\n@@ -703,10 +674,15 @@\n                  </configuration>\n              </plugin>\n \n+            <plugin>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <version>3.0.0-M5</version>\n+            </plugin>\n+\n              <plugin>\n                  <groupId>org.jacoco</groupId>\n                  <artifactId>jacoco-maven-plugin</artifactId>\n-                 <version>0.8.5</version>\n+                 <version>0.8.6</version>\n                  <executions>\n                      <execution>\n                          <goals>"
  },
  {
    "sha": "f60cd6acbebdabfa10bbe944a130c12c42c69c4e",
    "filename": "src/main/java/org/monarchinitiative/lirical/backgroundfrequency/GenicIntoleranceCalculator.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/backgroundfrequency/GenicIntoleranceCalculator.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/backgroundfrequency/GenicIntoleranceCalculator.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/backgroundfrequency/GenicIntoleranceCalculator.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -52,9 +52,9 @@\n                     ClinVarData.ClinSig.LIKELY_BENIGN,\n                     ClinVarData.ClinSig.BENIGN_OR_LIKELY_BENIGN);\n     /** Ordered list of the populations included in the calculations. */\n-    private FrequencySource[] orderedSources = {GNOMAD_E_AFR,GNOMAD_E_AMR,GNOMAD_E_ASJ,GNOMAD_E_EAS,GNOMAD_E_FIN,GNOMAD_E_NFE,GNOMAD_E_SAS};\n+    private final FrequencySource[] orderedSources = {GNOMAD_E_AFR,GNOMAD_E_AMR,GNOMAD_E_ASJ,GNOMAD_E_EAS,GNOMAD_E_FIN,GNOMAD_E_NFE,GNOMAD_E_SAS};\n     /** The header of the org.monarchinitiative.lirical.output file that shows the populations included in the calculation. */\n-    private String[] headerFields = {\"AFR\",\"AMR\",\"ASJ\",\"EAS\",\"FIN\",\"NFE\",\"SAS\"};\n+    private final String[] headerFields = {\"AFR\",\"AMR\",\"ASJ\",\"EAS\",\"FIN\",\"NFE\",\"SAS\"};\n     /** File name for the file that will contain the frequencies of predicted pathogenic variants in the\n      * population background, i.e., from gnomAD  from the Exomiser database.*/\n     private final String outputFileName;"
  },
  {
    "sha": "3fdb48f1043985e26f274f7fdf96294bb4e5449a",
    "filename": "src/main/java/org/monarchinitiative/lirical/cmd/AbstractPrioritizeCommand.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/cmd/AbstractPrioritizeCommand.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/cmd/AbstractPrioritizeCommand.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/cmd/AbstractPrioritizeCommand.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -29,8 +29,11 @@\n     /** The threshold for showing a differential diagnosis in the main section (posterior probability of 5%).*/\n     @CommandLine.Option(names= {\"-t\",\"--threshold\"}, description = \"minimum post-test prob. to show diagnosis in HTML output\")\n     protected Double LR_THRESHOLD = null;\n-    /** If true, the program will not output an HTML file but will output a Tab Separated Values file instead.*/\n-    @CommandLine.Option(names=\"--tsv\",description = \"Use TSV instead of HTML output (default: ${DEFAULT-VALUE})\")\n+    /** If true, the program will output an HTML file.*/\n+    @CommandLine.Option(names=\"--html\", arity = \"0..1\", description = \"Provide HTML output (default: ${DEFAULT-VALUE})\")\n+    protected boolean outputHTML=true;\n+    /** If true, the program will output a Tab Separated Values file.*/\n+    @CommandLine.Option(names=\"--tsv\", arity = \"0..1\", description = \"Provide TSV output (default: ${DEFAULT-VALUE})\")\n     protected boolean outputTSV=false;\n     /** Prefix of the output file. For instance, if the user enters {@code -x sample1} and an HTML file is output,\n      * the name of the HTML file will be {@code sample1.html}. If a TSV file is output, the name of the file will"
  },
  {
    "sha": "5d24ec67cd27a86f0f3f5e42c2a732d377a26e83",
    "filename": "src/main/java/org/monarchinitiative/lirical/cmd/PhenopacketCommand.java",
    "status": "modified",
    "additions": 7,
    "deletions": 4,
    "changes": 11,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/cmd/PhenopacketCommand.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/cmd/PhenopacketCommand.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/cmd/PhenopacketCommand.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -142,10 +142,13 @@ private void runVcfAnalysis() {\n                 .symbolsWithOutIds(symbolsWithoutGeneIds)\n                 .mindiff(factory.getMinDifferentials())\n                 .prefix(this.outfilePrefix);\n-        LiricalTemplate template = outputTSV ?\n-                builder.buildGenoPhenoTsvTemplate() :\n-                builder.buildGenoPhenoHtmlTemplate();\n-        template.outputFile();\n+        \n+        if (outputTSV) {\n+            builder.buildGenoPhenoTsvTemplate().outputFile();\n+        }\n+        if (outputHTML) {\n+            builder.buildGenoPhenoHtmlTemplate().outputFile();\n+        }\n     }\n \n     /**"
  },
  {
    "sha": "e71f7b0da1f0812056afb98cbd94ea53cad70e55",
    "filename": "src/main/java/org/monarchinitiative/lirical/cmd/SimulatePhenopacketWithVcfCommand.java",
    "status": "modified",
    "additions": 8,
    "deletions": 5,
    "changes": 13,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/cmd/SimulatePhenopacketWithVcfCommand.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/cmd/SimulatePhenopacketWithVcfCommand.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/cmd/SimulatePhenopacketWithVcfCommand.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -55,12 +55,14 @@\n     private boolean phenotypeOnly=false;\n     @CommandLine.Option(names={\"--output-vcf\"}, description = \"output a VCF file or files with results of the simulation\")\n     private boolean outputVCF = false;\n-    @CommandLine.Option(names={\"--output-tsv\"}, description = \"output a TSV file or files with results of the simulation\")\n-    private boolean outputTSV = false;\n+    /** If true, the program will output an HTML file.*/\n+    @CommandLine.Option(names=\"--output-html\", arity = \"0..1\", description = \"Provide HTML output (default: ${DEFAULT-VALUE})\")\n+    protected boolean outputHTML=true;\n+    /** If true, the program will output a Tab Separated Values file.*/\n+    @CommandLine.Option(names=\"--output-tsv\", arity = \"0..1\", description = \"output a TSV file or files with results of the simulation (default: ${DEFAULT-VALUE})\")\n+    protected boolean outputTSV=false;\n     @CommandLine.Option(names={\"--random\"},description = \"randomize the HPO terms from the phenopacket\")\n     private boolean randomize = false;\n-    /** If true, output HTML or TSV */\n-    private boolean outputFiles = false;\n \n     private List<LiricalRanking> rankingsList;\n     /** Each entry in this list represents one simulated case with various data about the simulation. */\n@@ -97,7 +99,8 @@ private void runOneVcfAnalysis(File phenopacketFile) {\n         geneRank2CountMap.merge(geneRank,1, Integer::sum); // increment count\n         if (outputTSV) {\n             simulator.outputTsv(outfilePrefix, factory.getLrThreshold(), factory.getMinDifferentials(), outdir);\n-        } else {\n+        }\n+        if (outputHTML) {\n             simulator.outputHtml(outfilePrefix, factory.getLrThreshold(), factory.getMinDifferentials(), outdir);\n         }\n     }"
  },
  {
    "sha": "cda6a7da5ed236a17b49e659acb9b4ef149939a4",
    "filename": "src/main/java/org/monarchinitiative/lirical/cmd/YamlCommand.java",
    "status": "modified",
    "additions": 21,
    "deletions": 12,
    "changes": 33,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/cmd/YamlCommand.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/cmd/YamlCommand.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/cmd/YamlCommand.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -53,8 +53,12 @@\n     protected Map<TermId,String> geneId2symbol;\n     /** Various metadata that will be used for the HTML org.monarchinitiative.lirical.output. */\n     protected Map<String,String> metadata;\n-    /** If true, output TSV and not HTML. */\n-    private boolean outputTSV = false;\n+    /** If true, the program will output an HTML file.*/\n+    @CommandLine.Option(names=\"--html\", arity = \"0..1\", description = \"Provide HTML output (default: ${DEFAULT-VALUE})\")\n+    protected boolean outputHTML=true;\n+    /** If true, the program will output a Tab Separated Values file.*/\n+    @CommandLine.Option(names=\"--tsv\", arity = \"0..1\", description = \"Provide TSV output (default: ${DEFAULT-VALUE})\")\n+    protected boolean outputTSV=false;\n     /**\n      * There are gene symbols returned by Jannovar for which we cannot find a geneId. This issues seems to be related\n      * to the input files used by Jannovar from UCSC ( knownToLocusLink.txt.gz has links between ucsc ids, e.g.,\n@@ -83,11 +87,19 @@ private void runPhenotypeOnly() throws LiricalException {\n                 .outdirectory(this.factory.getOutdir())\n                 .threshold(this.factory.getLrThreshold())\n                 .mindiff(this.factory.getMinDifferentials());\n-        LiricalTemplate template = outputTSV ?\n-                builder.buildPhenotypeTsvTemplate():\n-                builder.buildPhenotypeHtmlTemplate();\n-        template.outputFile();\n-        logger.error(\"Done analysis of \" + template.getOutPath());\n+        writeOutput(builder);\n+    }\n+\n+    private void writeOutput(LiricalTemplate.Builder builder) {\n+        writeOutput(builder.buildGenoPhenoHtmlTemplate(), outputHTML);\n+        writeOutput(builder.buildGenoPhenoTsvTemplate(), outputTSV);\n+    }\n+\n+    private void writeOutput(LiricalTemplate template, boolean doWrite) {\n+        if (doWrite) {\n+            template.outputFile();\n+            logger.error(\"Done analysis of \" + template.getOutPath());\n+        }\n     }\n \n     private void runVcf() throws LiricalException {\n@@ -125,11 +137,7 @@ private void runVcf() throws LiricalException {\n                 .errors(evaluator.getErrors())\n                 .symbolsWithOutIds(symbolsWithoutGeneIds)\n                 .mindiff(this.factory.getMinDifferentials());\n-        LiricalTemplate template = outputTSV ?\n-                builder.buildGenoPhenoTsvTemplate() :\n-                builder.buildGenoPhenoHtmlTemplate();\n-        template.outputFile();\n-        logger.trace(\"Wrote output file to \" + template.getOutPath());\n+        writeOutput(builder);\n     }\n \n \n@@ -179,6 +187,7 @@ public Integer call() throws LiricalException {\n     private LiricalFactory deYamylate(String yamlPath) {\n         YamlParser yparser = new YamlParser(yamlPath);\n         this.outputTSV = yparser.doTsv();\n+        this.outputHTML = yparser.doHtml();\n         String hpoPath = yparser.getHpoPath();\n         if (hpoPath == null || !(new File(hpoPath).exists())) {\n             throw new PhenolRuntimeException(\"Could not find hp.obo file. Consider running download command first\");"
  },
  {
    "sha": "254d6f278c181707a2b78d2aa9565475a4ffb0c6",
    "filename": "src/main/java/org/monarchinitiative/lirical/configuration/LiricalFactory.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/configuration/LiricalFactory.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/configuration/LiricalFactory.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/configuration/LiricalFactory.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -64,12 +64,11 @@\n     private int n_good_quality_variants=0;\n     /** Number of variants that were removed because of the quality filter. */\n     private int n_filtered_variants=0;\n-\n     /** Prefix for output files. For example, if outfilePrefix is ABC, then the HTML outfile would be ABC.html.*/\n-    private String outfilePrefix;\n+    private final String outfilePrefix;\n     /** Path to the directory where the output files should be written (by default, this is null and the files are\n      * written to the directory in which LIRICAL is run.*/\n-    private String outdir = null;\n+    private final String outdir = null;\n     /** Default threshold for showing a candidate. */\n     public static final double DEFAULT_LR_THRESHOLD = 0.05;\n     /** Default number of differentials to show on the HTML output. */"
  },
  {
    "sha": "c3a17bb594f5a0f565782b15c9583243e3cecc05",
    "filename": "src/main/java/org/monarchinitiative/lirical/io/FileDownloader.java",
    "status": "modified",
    "additions": 48,
    "deletions": 1,
    "changes": 49,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/io/FileDownloader.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/io/FileDownloader.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/io/FileDownloader.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -7,8 +7,11 @@\n import org.slf4j.LoggerFactory;\n \n import java.io.*;\n+import java.net.HttpURLConnection;\n import java.net.URL;\n import java.net.URLConnection;\n+import java.util.HashSet;\n+import java.util.Set;\n \n \n /**\n@@ -208,7 +211,10 @@ private boolean copyURLToFileThroughURL(URL src, File dest) throws FileDownloadE\n         BufferedInputStream in;\n         FileOutputStream out;\n         try {\n-            URLConnection connection =  src.openConnection();\n+            int connectionTimeout = 5000; // 5 seconds should be more than enough to connect to a server\n+            final String TEXTPLAIN_REQUEST_TYPE = \", text/plain; q=0.1\";\n+            String actualAcceptHeaders = TEXTPLAIN_REQUEST_TYPE;\n+            URLConnection connection =  connect(src.openConnection(),connectionTimeout,actualAcceptHeaders,new HashSet<>());\n             final int fileSize = connection.getContentLength();\n             in = new BufferedInputStream(connection.getInputStream());\n             out = new FileOutputStream(dest);\n@@ -243,6 +249,47 @@ private boolean copyURLToFileThroughURL(URL src, File dest) throws FileDownloadE\n         return true;\n     }\n \n+\n+    protected static URLConnection connect(URLConnection conn, int connectionTimeout, String acceptHeaders, Set<String> visited)\n+            throws IOException {\n+        if (conn instanceof HttpURLConnection) {\n+            // follow redirects to HTTPS\n+            HttpURLConnection con = (HttpURLConnection) conn;\n+            con.connect();\n+            int responseCode = con.getResponseCode();\n+            // redirect\n+            if (responseCode == HttpURLConnection.HTTP_MOVED_TEMP\n+                    || responseCode == HttpURLConnection.HTTP_MOVED_PERM\n+                    || responseCode == HttpURLConnection.HTTP_SEE_OTHER\n+                    // no constants for temporary and permanent redirect in HttpURLConnection\n+                    || responseCode == 307 || responseCode == 308) {\n+                String location = con.getHeaderField(\"Location\");\n+                if (visited.add(location)) {\n+                    URL newURL = new URL(location);\n+                    return connect(rebuildConnection(connectionTimeout, newURL, acceptHeaders),\n+                            connectionTimeout, acceptHeaders, visited);\n+                } else {\n+                    throw new IllegalStateException(\n+                            \"Infinite loop: redirect cycle detected. \" + visited);\n+                }\n+            }\n+        }\n+        return conn;\n+    }\n+\n+    protected static URLConnection rebuildConnection(int connectionTimeout, URL newURL, String acceptHeaders) throws IOException {\n+        URLConnection conn;\n+        conn = newURL.openConnection();\n+        final String ACCEPTABLE_CONTENT_ENCODING = \"xz,gzip,deflate\";\n+        conn.addRequestProperty(\"Accept\", acceptHeaders);\n+        conn.setRequestProperty(\"Accept-Encoding\", ACCEPTABLE_CONTENT_ENCODING);\n+        conn.setConnectTimeout(connectionTimeout);\n+        return conn;\n+    }\n+\n+\n+\n+\n     /**\n      * Set system properties from {@link #options}.\n      */"
  },
  {
    "sha": "185b4702253388fda8ff62408b20eec98fde2152",
    "filename": "src/main/java/org/monarchinitiative/lirical/io/HpoDownloader.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/io/HpoDownloader.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/io/HpoDownloader.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/io/HpoDownloader.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -23,7 +23,7 @@\n     /** URL of the hp.obo file. */\n     private final static String HP_OBO_URL =\"https://raw.githubusercontent.com/obophenotype/human-phenotype-ontology/master/hp.obo\";\n     /** URL of the annotation file phenotype.hpoa. */\n-    private final static String HP_ANNOTATION_URL =\"http://compbio.charite.de/jenkins/job/hpo.annotations.current/lastSuccessfulBuild/artifact/current/phenotype.hpoa\";\n+    private final static String HP_ANNOTATION_URL =\"http://purl.obolibrary.org/obo/hp/hpoa/phenotype.hpoa\";\n     /** Basename of the phenotype annotation file. */\n     private final static String HP_ANNOTATION =\"phenotype.hpoa\";\n "
  },
  {
    "sha": "3a869e1c54137624844d8e15e9879beb642787c5",
    "filename": "src/main/java/org/monarchinitiative/lirical/io/PhenopacketImporter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/io/PhenopacketImporter.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/io/PhenopacketImporter.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/io/PhenopacketImporter.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -20,7 +20,6 @@\n import java.io.FileReader;\n import java.io.IOException;\n import java.util.List;\n-import java.util.stream.Collectors;\n \n \n /**\n@@ -181,7 +180,7 @@ public boolean qcPhenopacket() {\n             return false; // skip to next Phenopacket\n         }\n         List<PhenotypicFeature> phenolist = phenoPacket.getPhenotypicFeaturesList();\n-        int n_observed = phenolist.stream().filter( p -> ! p.getNegated()).collect(Collectors.toList()).size();\n+        int n_observed = (int) phenolist.stream().filter(p -> !p.getNegated()).count();\n         if (n_observed==0) {\n             System.err.println(\"[ERROR] phenopackets must have at least one observed HPO term. \");\n             return false; // skip to next Phenopacket"
  },
  {
    "sha": "485bb3d46b04a4d8b9b29c12011939dee49ed94b",
    "filename": "src/main/java/org/monarchinitiative/lirical/io/YamlParser.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/io/YamlParser.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/io/YamlParser.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/io/YamlParser.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -324,4 +324,12 @@ public boolean doTsv() {\n         return false; // no TSV entry in YAML file\n     }\n \n+    public boolean doHtml() {\n+        if (yconfig.hasAnalysis() && yconfig.getAnalysis().containsKey(\"html\")) {\n+            String k = yconfig.getAnalysis().get(\"html\");\n+            return k.equalsIgnoreCase(\"true\");\n+        }\n+        return true; // no HTML entry in YAML file\n+    }\n+\n }"
  },
  {
    "sha": "e474e5fabf6be26332ce1f9f5cfe71f263508627",
    "filename": "src/main/java/org/monarchinitiative/lirical/likelihoodratio/CaseEvaluator.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/likelihoodratio/CaseEvaluator.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/likelihoodratio/CaseEvaluator.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/likelihoodratio/CaseEvaluator.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -327,7 +327,7 @@ private TestResult createResultFromPheno(List<Double> observedLR,\n \n     private List<String> getObservedPhenotypeExplanation() {\n         ImmutableList.Builder<String> builder = new ImmutableList.Builder<>();\n-        Collections.sort(this.currentObservedPhenotypeExplanation, Collections.reverseOrder());\n+        this.currentObservedPhenotypeExplanation.sort(Collections.reverseOrder());\n         for (LrWithExplanation lrwe : this.currentObservedPhenotypeExplanation) {\n             String e = lrwe.getEscapedExplanation(this.ontology);\n             builder.add(e);\n@@ -337,7 +337,7 @@ private TestResult createResultFromPheno(List<Double> observedLR,\n \n     private List<String> getExcludedPhenotypeExplanation() {\n         ImmutableList.Builder<String> builder = new ImmutableList.Builder<>();\n-        Collections.sort(this.currentExcludedPhenotypeExplanation, Collections.reverseOrder());\n+        this.currentExcludedPhenotypeExplanation.sort(Collections.reverseOrder());\n         for (LrWithExplanation lrwe : this.currentExcludedPhenotypeExplanation) {\n             String e = lrwe.getEscapedExplanation(this.ontology);\n             builder.add(e);"
  },
  {
    "sha": "e20a947a7a6cc15b91f5c3bd03a44045b7a5749f",
    "filename": "src/main/java/org/monarchinitiative/lirical/likelihoodratio/LrWithExplanation.java",
    "status": "modified",
    "additions": 3,
    "deletions": 5,
    "changes": 8,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/likelihoodratio/LrWithExplanation.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/likelihoodratio/LrWithExplanation.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/likelihoodratio/LrWithExplanation.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -91,10 +91,6 @@ public String getExplanation(Ontology ontology) {\n                 return String.format(\"D<Q:%s<%s[%.3f]\", mtermlabel, qtermlabel, log10LR);\n             case NON_ROOT_COMMON_ANCESTOR:\n                 return String.format(\"Q~D:%s~%s[%.3f]\", qtermlabel, mtermlabel, log10LR);\n-            case NO_MATCH_BELOW_ROOT:\n-                return String.format(\"NM:%s[%.3f]\", qtermlabel, log10LR);\n-            case QUERY_TERM_PRESENT_BUT_EXCLUDED_IN_DISEASE:\n-                return String.format(\"X:%s[%.3f]\", qtermlabel, log10LR);\n             case UNUSUAL_BACKGROUND_FREQUENCY:\n                 return String.format(\"U:%s[%.3f]\", qtermlabel, log10LR);\n             case EXCLUDED_QUERY_TERM_EXCLUDED_IN_DISEASE:\n@@ -103,8 +99,10 @@ public String getExplanation(Ontology ontology) {\n                 return String.format(\"XA:%s[%.3f]\", qtermlabel, log10LR);\n             case EXCLUDED_QUERY_TERM_PRESENT_IN_DISEASE:\n                 return String.format(\"XP:%s[%.3f]\", qtermlabel, log10LR);\n+            case QUERY_TERM_PRESENT_BUT_EXCLUDED_IN_DISEASE:\n+            case NO_MATCH_BELOW_ROOT:\n             default:\n-                return String.format(\"NM:%s[%.3f]\", qtermlabel, log10LR); // should never happen but needed for compiler\n+                return String.format(\"NM:%s[%.3f]\", qtermlabel, log10LR);\n         }\n     }\n "
  },
  {
    "sha": "c9513cd145512102b587dff44a63c5c3fc07da17",
    "filename": "src/main/java/org/monarchinitiative/lirical/output/LiricalTemplate.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/output/LiricalTemplate.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/output/LiricalTemplate.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/output/LiricalTemplate.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -2,7 +2,6 @@\n \n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n-import com.google.common.collect.ImmutableSet;\n import freemarker.template.Configuration;\n import freemarker.template.Version;\n import org.monarchinitiative.lirical.analysis.Gene2Genotype;"
  },
  {
    "sha": "ca579339c735cd8f43bd7619121410b6c93af578",
    "filename": "src/main/java/org/monarchinitiative/lirical/simulation/PhenotypeOnlyHpoCaseSimulator.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/simulation/PhenotypeOnlyHpoCaseSimulator.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/simulation/PhenotypeOnlyHpoCaseSimulator.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/simulation/PhenotypeOnlyHpoCaseSimulator.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -27,7 +27,7 @@\n public class PhenotypeOnlyHpoCaseSimulator {\n     private static final Logger logger = LoggerFactory.getLogger(PhenotypeOnlyHpoCaseSimulator.class);\n     /** An object representing the Human Phenotype Ontology */\n-    private Ontology ontology;\n+    private final Ontology ontology;\n     /** An object that calculates the foreground frequency of an HPO term in a disease as well as the background frequency */\n     private final PhenotypeLikelihoodRatio phenotypeLrEvaluator;\n     /** A list of all HPO term ids in the Phenotypic abnormality subontology. */\n@@ -47,7 +47,7 @@\n     private double proportionAtRank1=0.0;\n     /** This array will hold the TermIds from the disease map in order -- this will allow us to\n      * get random indices for the simulations. */\n-    private TermId[] termIndices;\n+    private final TermId[] termIndices;\n     /** If true, show lots of results in STDOUT while we are calculating. */\n     private boolean verbose=true;\n     /** Root term id in the phenotypic abnormality subontology. */"
  },
  {
    "sha": "3fa87011fe1faea2f75c56e0d4050fe20c536ade",
    "filename": "src/main/java/org/monarchinitiative/lirical/svg/Lr2Svg.java",
    "status": "modified",
    "additions": 7,
    "deletions": 9,
    "changes": 16,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/svg/Lr2Svg.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/svg/Lr2Svg.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/svg/Lr2Svg.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -229,8 +229,7 @@ private void writeLrBoxes(Writer writer) throws IOException {\n         List<String> explanationObserved = result.getObservedPhenotypeExplanation();\n         List<String> explanationExcluded = result.getExcludedPhenotypeExplanation();\n         int explanationIndex = 0;\n-        for (int i=0; i<indicesObserved.size(); i++) {\n-            int originalIndex = indicesObserved.get(i);\n+        for (int originalIndex : indicesObserved) {\n             TermId tid = this.termIdList.get(originalIndex);\n             double ratio = result.getObservedPhenotypeRatio(originalIndex);\n             ratio = Math.log10(ratio);\n@@ -248,7 +247,7 @@ private void writeLrBoxes(Writer writer) throws IOException {\n                 String color = xstart < midline ? RED : BRIGHT_GREEN;\n                 writer.write(String.format(\"<rect height=\\\"%d\\\" width=\\\"%d\\\" y=\\\"%d\\\" x=\\\"%d\\\" \" + \"stroke-width=\\\"0\\\" \" +\n                         \"stroke=\\\"#000000\\\" fill=\\\"%s\\\" onmouseout=\\\"hideTooltip();\\\" \" +\n-                        \"onmouseover=\\\"showTooltip(evt,\\'%s\\')\\\"/>\\n\", BOX_HEIGHT, (int) boxwidth, currentY, (int) xstart, color, explanationObserved.get(explanationIndex)));\n+                        \"onmouseover=\\\"showTooltip(evt,'%s')\\\"/>\\n\", BOX_HEIGHT, (int) boxwidth, currentY, (int) xstart, color, explanationObserved.get(explanationIndex)));\n             }\n             // add label of corresponding HPO term\n             Term term = ontology.getTermMap().get(tid);\n@@ -259,8 +258,7 @@ private void writeLrBoxes(Writer writer) throws IOException {\n         }\n         // Now add negated terms if any\n         explanationIndex = 0;\n-        for (int i=0; i<indicesExcluded.size(); i++) {\n-            int originalIndex = indicesExcluded.get(i);\n+        for (int originalIndex : indicesExcluded) {\n             TermId tid = this.excludedTermIdList.get(originalIndex);\n             double ratio = result.getExcludedPhenotypeRatio(originalIndex);\n             ratio = Math.log10(ratio);\n@@ -277,8 +275,8 @@ private void writeLrBoxes(Writer writer) throws IOException {\n                 // red for features that do not support the diagnosis, green for those that do\n                 String color = xstart < midline ? RED : BRIGHT_GREEN;\n                 writer.write(String.format(\"<rect height=\\\"%d\\\" width=\\\"%d\\\" y=\\\"%d\\\" x=\\\"%d\\\" \" +\n-                        \"stroke-width=\\\"0\\\" stroke=\\\"#000000\\\" fill=\\\"%s\\\" onmouseout=\\\"hideTooltip();\\\" \" +\n-                                \"onmouseover=\\\"showTooltip(evt,\\'%s\\')\\\"/>\\n\",\n+                                \"stroke-width=\\\"0\\\" stroke=\\\"#000000\\\" fill=\\\"%s\\\" onmouseout=\\\"hideTooltip();\\\" \" +\n+                                \"onmouseover=\\\"showTooltip(evt,'%s')\\\"/>\\n\",\n                         BOX_HEIGHT, (int) boxwidth, currentY, (int) xstart, color, explanationExcluded.get(explanationIndex)));\n             }\n             // add label of corresponding HPO term\n@@ -311,7 +309,7 @@ private void writeLrBoxes(Writer writer) throws IOException {\n                 int X = (int) xstart;\n                 writer.write(String.format(\"<rect height=\\\"%d\\\" width=\\\"%d\\\" y=\\\"%d\\\" x=\\\"%d\\\" \" +\n                         \"stroke-width=\\\"1\\\" stroke=\\\"#000000\\\" fill=\\\"%s\\\" onmouseout=\\\"hideTooltip();\\\" \" +\n-                                \"onmouseover=\\\"showTooltip(evt,\\'%s\\')\\\"/>\\n\",\n+                                \"onmouseover=\\\"showTooltip(evt,'%s')\\\"/>\\n\",\n                         BOX_HEIGHT, (int) boxwidth, currentY, X, color, lrstring));\n             }\n             // add label of Genotype\n@@ -378,7 +376,7 @@ int getOriginalIndex() {\n \n         @Override\n         public int compareTo(Value2Index other) {\n-            return this.LR < other.LR ? 1 : this.LR == other.LR ? 0 : -1;\n+            return Double.compare(other.LR, this.LR);\n         }\n     }\n "
  },
  {
    "sha": "8114c4534d02a06e93559cc205b7a3cea61f8e7c",
    "filename": "src/main/java/org/monarchinitiative/lirical/svg/Posttest2Svg.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/svg/Posttest2Svg.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/svg/Posttest2Svg.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/svg/Posttest2Svg.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -30,9 +30,9 @@\n     /** Height of the 'posttest probability title*/\n     private final int TITLE_HEIGHT = 20;\n     /** Starting x position for the bars representing post-test probability. */\n-    private int minX;\n+    private final int minX;\n     /**rightmost location of scale/bars representing post-test probability. */\n-    private int maxX;\n+    private final int maxX;\n     /** Y position where the probability scale is located. */\n     private int probability_scale_Y_location;\n     /** Width of the graphic we will show (scaling*width) */"
  },
  {
    "sha": "2e16a01fcd2ff6549cd0a7d14066c6216cde87f8",
    "filename": "src/main/java/org/monarchinitiative/lirical/svg/Sparkline2Svg.java",
    "status": "modified",
    "additions": 11,
    "deletions": 13,
    "changes": 24,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/svg/Sparkline2Svg.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/main/java/org/monarchinitiative/lirical/svg/Sparkline2Svg.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/main/java/org/monarchinitiative/lirical/svg/Sparkline2Svg.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -213,39 +213,37 @@ private void writeSparkline(HpoCase hcase, TermId diseaseId, StringWriter swrite\n         swriter.write(\"<line fill=\\\"none\\\" stroke=\\\"\" + BLACK + \"\\\" stroke-width=\\\"1\\\" \" +\n                 \"x1=\\\"\" + currentX + \"\\\" y1=\\\"\" + ybaseline + \"\\\" x2=\\\"\" + (currentX+linewidth) +\n                 \"\\\" y2=\\\"\" + ybaseline + \"\\\"/>\\n\");\n-        for (int i=0; i<indicesObserved.size(); i++) {\n-            int originalIndex = indicesObserved.get(i);\n+        for (int originalIndex : indicesObserved) {\n             String msg = this.observedTermToolTipLabels.get(originalIndex);\n             double logratio = Math.log10(result.getObservedPhenotypeRatio(originalIndex));\n             if (logratio > 0) {\n                 logratio = Math.min(MAX_LOG_LR, logratio);\n-                int height = (int)(logratio *(MAXIMUM_BAR_HEIGHT/MAX_LOG_LR));\n+                int height = (int) (logratio * (MAXIMUM_BAR_HEIGHT / MAX_LOG_LR));\n                 int ypos = ybaseline - height;\n                 if (height == 0) {\n-                    writeSmallDiamond(swriter,currentX,ypos,msg);\n+                    writeSmallDiamond(swriter, currentX, ypos, msg);\n                 } else {\n                     swriter.write(\"<rect height=\\\"\" + height + \"\\\" width=\\\"\" + BAR_WIDTH + \"\\\" y=\\\"\" + ypos + \"\\\" x=\\\"\" + currentX + \"\\\" \" +\n                             \"stroke-width=\\\"0\\\" stroke=\\\"#000000\\\" fill=\\\"\" + BRIGHT_GREEN + \"\\\" onmouseout=\\\"hideTooltip();\\\" onmouseover=\\\"showTooltip(evt,'\" + msg + \"')\\\"/>\\n\");\n                 }\n             } else {\n-                logratio = Math.max((-1)*MAX_LOG_LR, logratio);\n-                int height = (int)((-1)*logratio *(MAXIMUM_BAR_HEIGHT/MAX_LOG_LR));\n+                logratio = Math.max((-1) * MAX_LOG_LR, logratio);\n+                int height = (int) ((-1) * logratio * (MAXIMUM_BAR_HEIGHT / MAX_LOG_LR));\n                 if (height == 0) {\n-                    writeSmallDiamond(swriter,currentX,ybaseline,msg);\n+                    writeSmallDiamond(swriter, currentX, ybaseline, msg);\n                 } else {\n                     swriter.write(\"<rect height=\\\"\" + height + \"\\\" width=\\\"\" + BAR_WIDTH + \"\\\" y=\\\"\" + ybaseline + \"\\\" x=\\\"\" + currentX + \"\\\" \" +\n                             \"stroke-width=\\\"0\\\" stroke=\\\"#000000\\\" fill=\\\"\" + RED + \"\\\" onmouseout=\\\"hideTooltip();\\\" onmouseover=\\\"showTooltip(evt,'\" + msg + \"')\\\"/>\\n\");\n                 }\n             }\n             currentX += BAR_WIDTH + INTERBAR_WIDTH;\n         }\n-        for (int i=0; i<indicesExcluded.size(); i++) {\n-            int originalIndex = indicesExcluded.get(i);\n+        for (int originalIndex : indicesExcluded) {\n             String msg = this.excludedTermToolTipLabels.get(originalIndex);\n             double logratio = Math.log10(result.getExcludedPhenotypeRatio(originalIndex));\n             if (logratio > 0) {\n                 logratio = Math.min(MAX_LOG_LR, logratio);\n-                int height = (int)(logratio *(MAXIMUM_BAR_HEIGHT/MAX_LOG_LR));\n+                int height = (int) (logratio * (MAXIMUM_BAR_HEIGHT / MAX_LOG_LR));\n                 int ypos = ybaseline - height;\n                 if (height == 0) {\n                     writeSmallDiamond(swriter, currentX, ybaseline, msg);\n@@ -254,8 +252,8 @@ private void writeSparkline(HpoCase hcase, TermId diseaseId, StringWriter swrite\n                             \"stroke-width=\\\"0\\\" stroke=\\\"#000000\\\" fill=\\\"\" + BRIGHT_GREEN + \"\\\" onmouseout=\\\"hideTooltip();\\\" onmouseover=\\\"showTooltip(evt,'\" + msg + \"')\\\"/>\\n\");\n                 }\n             } else {\n-                logratio = Math.max((-1)*MAX_LOG_LR, logratio);\n-                int height = (int)((-1)*logratio *(MAXIMUM_BAR_HEIGHT/MAX_LOG_LR));\n+                logratio = Math.max((-1) * MAX_LOG_LR, logratio);\n+                int height = (int) ((-1) * logratio * (MAXIMUM_BAR_HEIGHT / MAX_LOG_LR));\n                 if (height == 0) {\n                     writeSmallDiamond(swriter, currentX, ybaseline, msg);\n                 } else {\n@@ -354,7 +352,7 @@ int getOriginalIndex() {\n \n         @Override\n         public int compareTo(Value2Index other) {\n-            return this.LR < other.LR ? 1 : this.LR == other.LR ? 0 : -1;\n+            return Double.compare(other.LR, this.LR);\n         }\n     }\n "
  },
  {
    "sha": "6318f371f789774c3723b96397ba6132881502d7",
    "filename": "src/test/java/org/monarchinitiative/lirical/io/PhenopacketImporterTest.java",
    "status": "modified",
    "additions": 11,
    "deletions": 13,
    "changes": 24,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/test/java/org/monarchinitiative/lirical/io/PhenopacketImporterTest.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/test/java/org/monarchinitiative/lirical/io/PhenopacketImporterTest.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/test/java/org/monarchinitiative/lirical/io/PhenopacketImporterTest.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -4,6 +4,7 @@\n \n import com.google.protobuf.util.JsonFormat;\n \n+import org.junit.jupiter.api.Assertions;\n import org.monarchinitiative.phenol.io.OntologyLoader;\n import org.monarchinitiative.phenol.ontology.data.Ontology;\n import org.monarchinitiative.phenol.ontology.data.TermId;\n@@ -20,9 +21,6 @@\n import java.nio.file.Paths;\n import java.util.Objects;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertTrue;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n \n class PhenopacketImporterTest {\n@@ -133,39 +131,39 @@ static void init() throws IOException {\n     @Test\n     void testTempFileWritten( ) {\n         java.io.File f = new java.io.File(phenopacketAbsolutePathOfTempFile);\n-        assertTrue(f.exists());\n+        Assertions.assertTrue(f.exists());\n     }\n \n     @Test\n     void testInputOfTempPhenopacket() {\n-        assertNotNull(ppacket);\n+        Assertions.assertNotNull(ppacket);\n     }\n \n     @Test\n     void testNumberOfHpoTermsImported() {\n         int expected =5;  // we have 4 non-negated (observed) HPO terms and one negated term\n-        assertEquals(expected,ppacket.getPhenotypicFeaturesCount());\n+        Assertions.assertEquals(expected,ppacket.getPhenotypicFeaturesCount());\n     }\n \n     @Test\n     void testNumberOfObservedTerms() {\n         PhenopacketImporter importer = new PhenopacketImporter(ppacket,ontology);\n         int expecte=4;\n-        assertEquals(expecte,importer.getHpoTerms().size());\n+        Assertions.assertEquals(expecte,importer.getHpoTerms().size());\n     }\n \n     @Test\n     void testNumberOfNegatedTerms() {\n         PhenopacketImporter importer = new PhenopacketImporter(ppacket,ontology);\n         int expected=1;\n-        assertEquals(expected,importer.getNegatedHpoTerms().size());\n+        Assertions.assertEquals(expected,importer.getNegatedHpoTerms().size());\n     }\n \n     @Test\n     void testIdentifyOfNegatedTerm() {\n         TermId tid = TermId.of(\"HP:0031508\");\n         PhenopacketImporter importer = new PhenopacketImporter(ppacket,ontology);\n-        assertTrue(importer.getNegatedHpoTerms().contains(tid));\n+        Assertions.assertTrue(importer.getNegatedHpoTerms().contains(tid));\n     }\n \n     @Test\n@@ -174,15 +172,15 @@ void testIdentifyObservedTerm() {\n         PhenopacketImporter importer = new PhenopacketImporter(ppacket,ontology);\n         assertFalse(importer.getHpoTerms().contains(tid)); // should not include negated term\n         TermId tid2 = TermId.of(\"HP:0001510\"); // this os one of the observed terms\n-        assertTrue(importer.getHpoTerms().contains(tid2));\n+        Assertions.assertTrue(importer.getHpoTerms().contains(tid2));\n     }\n \n     @Test\n     void testGetVcfFile() {\n         PhenopacketImporter importer = new PhenopacketImporter(ppacket,ontology);\n-        assertTrue(importer.hasVcf());\n-        assertEquals(fakeVcfPath, importer.getVcfPath());\n-        assertEquals(fakeGenomeAssembly,importer.getGenomeAssembly());\n+        Assertions.assertTrue(importer.hasVcf());\n+        Assertions.assertEquals(fakeVcfPath, importer.getVcfPath());\n+        Assertions.assertEquals(fakeGenomeAssembly,importer.getGenomeAssembly());\n     }\n \n "
  },
  {
    "sha": "d8982fb1d7b2c9ea6717c66ef2a81efea93cf7cb",
    "filename": "src/test/java/org/monarchinitiative/lirical/io/YamlParserTest.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/test/java/org/monarchinitiative/lirical/io/YamlParserTest.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/test/java/org/monarchinitiative/lirical/io/YamlParserTest.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/test/java/org/monarchinitiative/lirical/io/YamlParserTest.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -244,5 +244,19 @@ void testTsv2() {\n         assertTrue(yparser.doTsv());\n     }\n \n+    @Test\n+    void testHtml1() {\n+        //example 1 has html with false entry,\n+        YamlParser yparser = new YamlParser(example1path);\n+        assertTrue(yparser.doHtml());\n+    }\n+\n+    @Test\n+    void testHtml2() {\n+        //example 2 has  html: true,\n+        YamlParser yparser = new YamlParser(example2path);\n+        assertFalse(yparser.doHtml());\n+    }\n+\n \n }"
  },
  {
    "sha": "d28b2a02a4530b073a4d2080bca51d2c1f4498d6",
    "filename": "src/test/java/org/monarchinitiative/lirical/likelihoodratio/GenotypeLikelihoodRatioTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/test/java/org/monarchinitiative/lirical/likelihoodratio/GenotypeLikelihoodRatioTest.java",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/test/java/org/monarchinitiative/lirical/likelihoodratio/GenotypeLikelihoodRatioTest.java",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/test/java/org/monarchinitiative/lirical/likelihoodratio/GenotypeLikelihoodRatioTest.java?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -3,14 +3,14 @@\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n \n+import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.Test;\n import org.monarchinitiative.lirical.analysis.Gene2Genotype;\n \n import org.monarchinitiative.phenol.ontology.data.TermId;\n \n import java.util.*;\n \n-import static junit.framework.TestCase.assertEquals;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n import static org.monarchinitiative.phenol.annotations.formats.hpo.HpoModeOfInheritanceTermIds.AUTOSOMAL_DOMINANT;\n@@ -41,7 +41,7 @@ void testOneClinVarVariant() {\n         List<TermId> emptyList= ImmutableList.of(AUTOSOMAL_DOMINANT);\n         double result = genoLRmap.evaluateGenotype( g2g, emptyList, fakeGeneId).getLR();\n         double expected = 1000;\n-        assertEquals(expected,result,EPSILON);\n+        Assertions.assertEquals(expected,result,EPSILON);\n     }\n \n \n@@ -60,7 +60,7 @@ void testTwoClinVarVariants() {\n         List<TermId> emptyList= ImmutableList.of(AUTOSOMAL_RECESSIVE);\n         double result = genoLRmap.evaluateGenotype( g2g, emptyList, fakeGeneId).getLR();\n         double expected = (double)1000*1000;\n-        assertEquals(expected,result,EPSILON);\n+        Assertions.assertEquals(expected,result,EPSILON);\n     }\n \n \n@@ -81,7 +81,7 @@ void testHLA_Bsituation() {\n         when(g2g.getSumOfPathBinScores()).thenReturn(0.00); // mock that we find no pathogenic variant\n         Double score = glr.evaluateGenotype(g2g,inheritanceModes,HLAB).getLR();\n         double expected = 0.05; // heuristic score\n-        assertEquals(expected,score,EPSILON);\n+        Assertions.assertEquals(expected,score,EPSILON);\n     }\n \n     /**\n@@ -101,6 +101,6 @@ void testRecessiveManyCalledPathVariants() {\n         when(g2g.getSumOfPathBinScores()).thenReturn(0.00); // mock that we find no pathogenic variant\n         Double score = glr.evaluateGenotype(g2g,inheritanceModes,madeUpGene).getLR();\n         double expected = 0.05*0.05; // heuristic score for AR\n-        assertEquals(expected,score,EPSILON);\n+        Assertions.assertEquals(expected,score,EPSILON);\n     }\n }"
  },
  {
    "sha": "623851f7bf8d2d98e2a0f24095b747619ac50927",
    "filename": "src/test/resources/yaml/example2.yml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/TheJacksonLaboratory/LIRICAL/blob/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/test/resources/yaml/example2.yml",
    "raw_url": "https://github.com/TheJacksonLaboratory/LIRICAL/raw/cab2963a9cf57f89b8baabff2b36de0c54bb1979/src/test/resources/yaml/example2.yml",
    "contents_url": "https://api.github.com/repos/TheJacksonLaboratory/LIRICAL/contents/src/test/resources/yaml/example2.yml?ref=cab2963a9cf57f89b8baabff2b36de0c54bb1979",
    "patch": "@@ -14,6 +14,7 @@ analysis:\n   strict: true\n   threshold: 0.05\n   tsv: true\n+  html: false\n hpoIds: [ 'HP:0001363', 'HP:0011304', 'HP:0010055']\n negatedHpoIds: ['HP:0001328']\n prefix: example2"
  }
]
