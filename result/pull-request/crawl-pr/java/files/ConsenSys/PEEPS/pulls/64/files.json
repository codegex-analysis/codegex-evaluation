[
  {
    "sha": "ee5954b77cd41872e9cbc5be62b121db37dcb674",
    "filename": "dsl/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/build.gradle",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/build.gradle",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/build.gradle?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -39,6 +39,7 @@ dependencies {\n   implementation \"org.testcontainers:testcontainers\"\n   implementation 'io.vertx:vertx-core'\n   implementation 'io.vertx:vertx-web-client'\n+  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'\n \n   runtimeOnly 'org.apache.logging.log4j:log4j-core'\n "
  },
  {
    "sha": "dc1b55046a8918a2b776099785cdd29eb741b34d",
    "filename": "dsl/src/main/java/tech/pegasys/peeps/network/Network.java",
    "status": "modified",
    "additions": 79,
    "deletions": 42,
    "changes": 121,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/network/Network.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/network/Network.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/main/java/tech/pegasys/peeps/network/Network.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -26,23 +26,26 @@\n import tech.pegasys.peeps.node.Web3Provider;\n import tech.pegasys.peeps.node.Web3ProviderConfigurationBuilder;\n import tech.pegasys.peeps.node.Web3ProviderType;\n-import tech.pegasys.peeps.node.genesis.BesuGenesisFile;\n import tech.pegasys.peeps.node.genesis.Genesis;\n import tech.pegasys.peeps.node.genesis.GenesisAccount;\n import tech.pegasys.peeps.node.genesis.GenesisConfig;\n import tech.pegasys.peeps.node.genesis.GenesisExtraData;\n+import tech.pegasys.peeps.node.genesis.GenesisFile;\n import tech.pegasys.peeps.node.genesis.bft.BftConfig;\n import tech.pegasys.peeps.node.genesis.clique.CliqueConfig;\n import tech.pegasys.peeps.node.genesis.clique.GenesisConfigClique;\n import tech.pegasys.peeps.node.genesis.clique.GenesisExtraDataClique;\n import tech.pegasys.peeps.node.genesis.ethhash.EthHashConfig;\n import tech.pegasys.peeps.node.genesis.ethhash.GenesisConfigEthHash;\n-import tech.pegasys.peeps.node.genesis.ibft.GenesisConfigIbftLegacy;\n+import tech.pegasys.peeps.node.genesis.ibft.BesuConfigIbft;\n+import tech.pegasys.peeps.node.genesis.ibft.BesuLegacyIbftOptions;\n import tech.pegasys.peeps.node.genesis.ibft.GenesisExtraDataIbftLegacy;\n-import tech.pegasys.peeps.node.genesis.ibft.IbftLegacyConfig;\n+import tech.pegasys.peeps.node.genesis.ibft.GoQuorumIbftConfig;\n+import tech.pegasys.peeps.node.genesis.ibft.GoQuorumIbftOptions;\n import tech.pegasys.peeps.node.genesis.ibft2.GenesisConfigIbft2;\n import tech.pegasys.peeps.node.genesis.ibft2.GenesisExtraDataIbft2;\n import tech.pegasys.peeps.node.genesis.qbft.GenesisConfigQbft;\n+import tech.pegasys.peeps.node.genesis.qbft.GenesisExtraDataQbft;\n import tech.pegasys.peeps.node.model.GenesisAddress;\n import tech.pegasys.peeps.node.model.Hash;\n import tech.pegasys.peeps.node.model.PrivacyTransactionReceipt;\n@@ -92,13 +95,13 @@\n   private final List<Web3Provider> nodes;\n   private final List<NetworkMember> members;\n \n-  private final BesuGenesisFile genesisFile;\n+  private final Map<Web3ProviderType, GenesisFile> genesisFiles;\n   private final PathGenerator pathGenerator;\n   private final Subnet subnet;\n   private final Vertx vertx;\n \n   private NetworkState state;\n-  private Genesis genesis;\n+  private Map<Web3ProviderType, Genesis> genesisMap = new HashMap<>();\n \n   public Network(final Path configurationDirectory, final Subnet subnet) {\n     checkArgument(configurationDirectory != null, \"Path to configuration directory is mandatory\");\n@@ -110,16 +113,29 @@ public Network(final Path configurationDirectory, final Subnet subnet) {\n     this.pathGenerator = new PathGenerator(configurationDirectory);\n     this.vertx = Vertx.vertx();\n     this.subnet = subnet;\n-    this.genesisFile = new BesuGenesisFile(pathGenerator.uniqueFile());\n+    this.genesisFiles =\n+        Map.of(\n+            Web3ProviderType.BESU,\n+            new GenesisFile(pathGenerator.uniqueFile()),\n+            Web3ProviderType.GOQUORUM,\n+            new GenesisFile(pathGenerator.uniqueFile()));\n+\n     this.state = new NetworkState();\n \n     set(ConsensusMechanism.ETH_HASH);\n   }\n \n   public void start() {\n     state.start();\n-    genesisFile.ensureExists(genesis);\n-    everyMember(NetworkMember::start);\n+    genesisFiles.forEach(\n+        (k, v) -> {\n+          v.ensureExists(genesisMap.get(k));\n+        });\n+    if (members.size() != 0) {\n+      // need to start first node, so that bootnodes etc. work\n+      members.get(0).start();\n+      members.subList(1, members.size()).stream().parallel().forEach(NetworkMember::start);\n+    }\n     awaitConnectivity();\n   }\n \n@@ -149,9 +165,9 @@ public void set(final ConsensusMechanism consensus, final Web3Provider... valida\n         \"Cannot set consensus mechanism while the Network is already started\");\n     checkState(signers.isEmpty(), \"Cannot change consensus mechanism after creating signers\");\n \n-    this.genesis =\n+    this.genesisMap.putAll(\n         createGenesis(\n-            consensus, Account.of(Account.ALPHA, Account.BETA, Account.GAMMA), validators);\n+            consensus, Account.of(Account.ALPHA, Account.BETA, Account.GAMMA), validators));\n   }\n \n   public Web3Provider addNode(final String nodeIdentifier, final KeyPair nodeKeys) {\n@@ -206,7 +222,7 @@ private Web3Provider addNode(\n         .withVertx(vertx)\n         .withContainerNetwork(subnet.network())\n         .withIpAddress(subnet.getAddressAndIncrement())\n-        .withGenesisFile(genesisFile)\n+        .withGenesisFile(genesisFiles.get(providerType))\n         .withBootnodeEnodeAddress(bootnodeEnodeAddresses());\n     if (providerType.equals(Web3ProviderType.BESU)) {\n       web3Provider = new Besu(config.build());\n@@ -254,7 +270,11 @@ public EthSigner addSigner(\n                 .withContainerNetwork(subnet.network())\n                 .withIpAddress(subnet.getAddressAndIncrement())\n                 .withDownstream(downstream)\n-                .withChainId(genesis.getConfig().getChainId())\n+                .withChainId(\n+                    genesisMap\n+                        .get(Web3ProviderType.BESU)\n+                        .getConfig()\n+                        .getChainId()) // yeah, this is a bit of a hack.\n                 .witWallet(resources)\n                 .build());\n \n@@ -383,44 +403,61 @@ private String bootnodeEnodeAddresses() {\n     return nodes.parallelStream().map(node -> node.enodeAddress()).collect(Collectors.joining(\",\"));\n   }\n \n-  private void everyMember(Consumer<NetworkMember> action) {\n+  private void everyMember(final Consumer<NetworkMember> action) {\n     members.parallelStream().forEach(action);\n   }\n \n-  private Genesis createGenesis(\n+  private Map<Web3ProviderType, Genesis> createGenesis(\n       final ConsensusMechanism consensus,\n       final Map<GenesisAddress, GenesisAccount> genesisAccounts,\n       final Web3Provider... validators) {\n     final long chainId = Math.round(Math.random() * Long.MAX_VALUE);\n \n-    final GenesisConfig genesisConfig;\n-    final GenesisExtraData extraData;\n-\n-    switch (consensus) {\n-      case CLIQUE:\n-        genesisConfig = new GenesisConfigClique(chainId, new CliqueConfig());\n-        extraData = new GenesisExtraDataClique(validators);\n-        break;\n-      case IBFT2:\n-        genesisConfig = new GenesisConfigIbft2(chainId, new BftConfig());\n-        extraData = new GenesisExtraDataIbft2(validators);\n-        break;\n-      case IBFT:\n-        genesisConfig = new GenesisConfigIbftLegacy(chainId, new IbftLegacyConfig());\n-        extraData = new GenesisExtraDataIbftLegacy(validators);\n-        break;\n-      case QBFT:\n-        genesisConfig = new GenesisConfigQbft(chainId, new BftConfig());\n-        extraData = new GenesisExtraDataIbft2(validators);\n-        break;\n-      case ETH_HASH:\n-      default:\n-        extraData = null;\n-        genesisConfig = new GenesisConfigEthHash(chainId, new EthHashConfig());\n-        break;\n-    }\n-\n-    return new Genesis(genesisConfig, genesisAccounts, extraData);\n+    final Map<Web3ProviderType, Genesis> result = new HashMap<>();\n+\n+    Stream.of(Web3ProviderType.values())\n+        .forEach(\n+            e -> {\n+              final GenesisConfig genesisConfig;\n+              final GenesisExtraData extraData;\n+\n+              switch (consensus) {\n+                case CLIQUE:\n+                  genesisConfig = new GenesisConfigClique(chainId, new CliqueConfig());\n+                  extraData = new GenesisExtraDataClique(validators);\n+                  break;\n+                case IBFT2:\n+                  genesisConfig = new GenesisConfigIbft2(chainId, new BftConfig());\n+                  extraData = new GenesisExtraDataIbft2(validators);\n+                  break;\n+                case IBFT:\n+                  if (e == Web3ProviderType.BESU) {\n+                    genesisConfig = new BesuConfigIbft(chainId, new BesuLegacyIbftOptions());\n+                  } else {\n+                    genesisConfig = new GoQuorumIbftConfig(chainId, new GoQuorumIbftOptions());\n+                  }\n+                  extraData = new GenesisExtraDataIbftLegacy(validators);\n+                  break;\n+                case QBFT:\n+                  if (e == Web3ProviderType.BESU) {\n+                    genesisConfig = new GenesisConfigQbft(chainId, new BftConfig());\n+                  } else {\n+                    genesisConfig =\n+                        new GoQuorumIbftConfig(chainId, GoQuorumIbftOptions.createQbft());\n+                  }\n+                  extraData = new GenesisExtraDataQbft(validators);\n+                  break;\n+                case ETH_HASH:\n+                default:\n+                  extraData = null;\n+                  genesisConfig = new GenesisConfigEthHash(chainId, new EthHashConfig());\n+                  break;\n+              }\n+\n+              result.put(e, new Genesis(genesisConfig, genesisAccounts, extraData));\n+            });\n+\n+    return result;\n   }\n \n   private void awaitConnectivity() {"
  },
  {
    "sha": "29a4a6c1cc3bd8ed7aa5821dd5d7804854d9a358",
    "filename": "dsl/src/main/java/tech/pegasys/peeps/node/Besu.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/Besu.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/Besu.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/main/java/tech/pegasys/peeps/node/Besu.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -39,7 +39,7 @@\n   private static final String AM_I_ALIVE_ENDPOINT = \"/liveness\";\n   private static final int ALIVE_STATUS_CODE = 200;\n \n-  private static final String BESU_IMAGE = \"hyperledger/besu:develop\";\n+  private static final String BESU_IMAGE = \"hyperledger/besu\";\n   private static final String CONTAINER_GENESIS_FILE = \"/etc/besu/genesis.json\";\n   private static final String CONTAINER_PRIVACY_PUBLIC_KEY_FILE =\n       \"/etc/besu/privacy_public_key.pub\";\n@@ -93,6 +93,8 @@ private HttpWaitStrategy liveliness() {\n         \"0\",\n         \"--host-whitelist\",\n         \"*\",\n+        \"--sync-mode\",\n+        \"full\",\n         \"--rpc-http-enabled\",\n         \"--rpc-ws-enabled\",\n         \"--rpc-http-apis\","
  },
  {
    "sha": "589c3facf62c69258df508563601fffbd0ed2d2e",
    "filename": "dsl/src/main/java/tech/pegasys/peeps/node/GoQuorum.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/GoQuorum.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/GoQuorum.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/main/java/tech/pegasys/peeps/node/GoQuorum.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -35,7 +35,7 @@\n   private static final Logger LOG = LogManager.getLogger();\n \n   //  private static final String IMAGE_NAME = \"hyperledger/besu:latest\";\n-  private static final String IMAGE_NAME = \"quorumengineering/quorum:latest\";\n+  private static final String IMAGE_NAME = \"quorumengineering/quorum\";\n   private static final String CONTAINER_GENESIS_FILE = \"/etc/genesis.json\";\n   private static final String CONTAINER_NODE_PRIVATE_KEY_FILE = \"/etc/keys/node.priv\";\n   private static final String DATA_DIR = \"/eth\";\n@@ -59,6 +59,8 @@ public GoQuorum(final Web3ProviderConfiguration config) {\n     commandLineOptions.addAll(List.of(\"--networkid\", \"15\"));\n     commandLineOptions.addAll(List.of(\"--identity\", config.getIdentity()));\n \n+    // Note: this copy occurs on container start (not now, as the genesis file is empty at this\n+    // stage)\n     container.withCopyFileToContainer(\n         MountableFile.forHostPath(config.getGenesisFile()), CONTAINER_GENESIS_FILE);\n     final List<String> entryPoint = Lists.newArrayList(\"/bin/sh\", \"-c\");"
  },
  {
    "sha": "3f98b3c7f5eedb7d1c8bd6fb535430467f91d57e",
    "filename": "dsl/src/main/java/tech/pegasys/peeps/node/Web3ProviderConfigurationBuilder.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/Web3ProviderConfigurationBuilder.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/Web3ProviderConfigurationBuilder.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/main/java/tech/pegasys/peeps/node/Web3ProviderConfigurationBuilder.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -15,7 +15,7 @@\n import static com.google.common.base.Preconditions.checkNotNull;\n \n import tech.pegasys.peeps.network.subnet.SubnetAddress;\n-import tech.pegasys.peeps.node.genesis.BesuGenesisFile;\n+import tech.pegasys.peeps.node.genesis.GenesisFile;\n import tech.pegasys.peeps.privacy.PrivateTransactionManager;\n import tech.pegasys.peeps.signer.SignerConfiguration;\n \n@@ -29,7 +29,7 @@\n   private static final String DEFAULT_PRIVACY_MARKER_SIGNER_PRIVATE_KEY_FILE =\n       \"node/keys/pmt_signing.priv\";\n \n-  private BesuGenesisFile genesisFile;\n+  private GenesisFile genesisFile;\n   private String identity;\n \n   // TODO better typing then String\n@@ -50,7 +50,7 @@ public Web3ProviderConfigurationBuilder() {\n     this.privacyMarkerSigningPrivateKeyFile = DEFAULT_PRIVACY_MARKER_SIGNER_PRIVATE_KEY_FILE;\n   }\n \n-  public Web3ProviderConfigurationBuilder withGenesisFile(final BesuGenesisFile genesisFile) {\n+  public Web3ProviderConfigurationBuilder withGenesisFile(final GenesisFile genesisFile) {\n     this.genesisFile = genesisFile;\n     return this;\n   }"
  },
  {
    "sha": "3d2fd0c10a588f8d601ac067941592fcfffc4a86",
    "filename": "dsl/src/main/java/tech/pegasys/peeps/node/genesis/GenesisFile.java",
    "status": "renamed",
    "additions": 21,
    "deletions": 11,
    "changes": 32,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/GenesisFile.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/GenesisFile.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/main/java/tech/pegasys/peeps/node/genesis/GenesisFile.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -22,18 +22,26 @@\n import java.nio.file.Path;\n import java.nio.file.StandardOpenOption;\n \n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.datatype.jdk8.Jdk8Module;\n import io.vertx.core.json.DecodeException;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.testcontainers.shaded.org.bouncycastle.util.Arrays;\n \n-public class BesuGenesisFile {\n+public class GenesisFile {\n \n   private static final Logger LOG = LogManager.getLogger();\n \n   private final Path genesisFile;\n+  private static final ObjectMapper objectMapper =\n+      new ObjectMapper()\n+          .registerModule(new Jdk8Module())\n+          .setSerializationInclusion(Include.NON_ABSENT);\n \n-  public BesuGenesisFile(final Path genesisFile) {\n+  public GenesisFile(final Path genesisFile) {\n     this.genesisFile = genesisFile;\n   }\n \n@@ -57,12 +65,12 @@ private void assertExistingGenesisMatches(final Genesis latest) {\n     } catch (DecodeException e) {\n       throw new IllegalStateException(\n           String.format(\n-              \"Problem decoding an existing Besu config file from the file system: %s, %s\",\n+              \"Problem decoding an existing config file from the file system: %s, %s\",\n               genesisFile, e.getLocalizedMessage()));\n-    } catch (IOException e) {\n+    } catch (final IOException e) {\n       throw new IllegalStateException(\n           String.format(\n-              \"Problem reading an existing Besu config file in the file system: %s, %s\",\n+              \"Problem reading an existing config file in the file system: %s, %s\",\n               genesisFile, e.getLocalizedMessage()));\n     }\n \n@@ -73,16 +81,18 @@ private void assertExistingGenesisMatches(final Genesis latest) {\n   }\n \n   private void write(final Genesis genesis) {\n-    final String encodedBesuGenesis = Json.encode(genesis);\n-    LOG.info(\n-        \"Creating Besu genesis file\\n\\tLocation: {} \\n\\tContents: {}\",\n-        genesisFile,\n-        encodedBesuGenesis);\n+    final String encodedGenesis;\n+    try {\n+      encodedGenesis = objectMapper.writeValueAsString(genesis);\n+    } catch (final JsonProcessingException e) {\n+      throw new RuntimeException(\"Failed to encode genesis data\", e);\n+    }\n+    LOG.info(\"Creating genesis file\\n\\tLocation: {} \\n\\tContents: {}\", genesisFile, encodedGenesis);\n \n     try {\n       Files.write(\n           genesisFile,\n-          encodedBesuGenesis.getBytes(StandardCharsets.UTF_8),\n+          encodedGenesis.getBytes(StandardCharsets.UTF_8),\n           StandardOpenOption.CREATE_NEW);\n     } catch (final IOException e) {\n       throw new IllegalStateException(",
    "previous_filename": "dsl/src/main/java/tech/pegasys/peeps/node/genesis/BesuGenesisFile.java"
  },
  {
    "sha": "88784fa55095eb9583813e91b31daad2f17217e9",
    "filename": "dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/BesuConfigIbft.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/BesuConfigIbft.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/BesuConfigIbft.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/BesuConfigIbft.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package tech.pegasys.peeps.node.genesis.ibft;\n+\n+import tech.pegasys.peeps.node.genesis.GenesisConfig;\n+\n+import com.fasterxml.jackson.annotation.JsonGetter;\n+\n+public class BesuConfigIbft extends GenesisConfig {\n+\n+  private final BesuLegacyIbftOptions consensusConfig;\n+\n+  public BesuConfigIbft(final long chainId, final BesuLegacyIbftOptions consensusConfig) {\n+    super(chainId);\n+    this.consensusConfig = consensusConfig;\n+  }\n+\n+  @JsonGetter(\"ibft\")\n+  public BesuLegacyIbftOptions getConsensusConfig() {\n+    return consensusConfig;\n+  }\n+}"
  },
  {
    "sha": "44decd5b37e6ecbaa82f67fb3a9ef2163ca4d71b",
    "filename": "dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/BesuLegacyIbftOptions.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/BesuLegacyIbftOptions.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/BesuLegacyIbftOptions.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/BesuLegacyIbftOptions.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -14,17 +14,17 @@\n \n import com.fasterxml.jackson.annotation.JsonGetter;\n \n-public class IbftLegacyConfig {\n+public class BesuLegacyIbftOptions {\n \n   private final int blockPeriodSeconds;\n   private final int epochLength;\n   private final int requestTimeoutSeconds;\n \n-  public IbftLegacyConfig() {\n+  public BesuLegacyIbftOptions() {\n     this(2, 30000, 10);\n   }\n \n-  public IbftLegacyConfig(\n+  public BesuLegacyIbftOptions(\n       final int blockPeriodSeconds, final int epochLength, final int requestTimeoutSeconds) {\n     this.blockPeriodSeconds = blockPeriodSeconds;\n     this.epochLength = epochLength;",
    "previous_filename": "dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/IbftLegacyConfig.java"
  },
  {
    "sha": "3e24d5a0f459445df99d4ffd1ed86c060a187ad2",
    "filename": "dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/GoQuorumIbftConfig.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/GoQuorumIbftConfig.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/GoQuorumIbftConfig.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/GoQuorumIbftConfig.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -16,17 +16,17 @@\n \n import com.fasterxml.jackson.annotation.JsonGetter;\n \n-public class GenesisConfigIbftLegacy extends GenesisConfig {\n+public class GoQuorumIbftConfig extends GenesisConfig {\n \n-  private final IbftLegacyConfig consensusConfig;\n+  private final GoQuorumIbftOptions consensusConfig;\n \n-  public GenesisConfigIbftLegacy(final long chainId, final IbftLegacyConfig consensusConfig) {\n+  public GoQuorumIbftConfig(final long chainId, final GoQuorumIbftOptions consensusConfig) {\n     super(chainId);\n     this.consensusConfig = consensusConfig;\n   }\n \n   @JsonGetter(\"istanbul\")\n-  public IbftLegacyConfig getConsensusConfig() {\n+  public GoQuorumIbftOptions getConsensusConfig() {\n     return consensusConfig;\n   }\n }",
    "previous_filename": "dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/GenesisConfigIbftLegacy.java"
  },
  {
    "sha": "7a262e454b9607827fe581a8c74301796f577990",
    "filename": "dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/GoQuorumIbftOptions.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/GoQuorumIbftOptions.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/GoQuorumIbftOptions.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/main/java/tech/pegasys/peeps/node/genesis/ibft/GoQuorumIbftOptions.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package tech.pegasys.peeps.node.genesis.ibft;\n+\n+import java.util.Optional;\n+\n+import com.fasterxml.jackson.annotation.JsonGetter;\n+\n+public class GoQuorumIbftOptions {\n+\n+  private final int blockPeriodSeconds;\n+  private final int epochLength;\n+  private final int requestTimeoutSeconds;\n+  private final Optional<Integer> qbftBlock;\n+  private Optional<Integer> ceil2nBy3Block;\n+\n+  public GoQuorumIbftOptions() {\n+    this(2, 30000, 10, Optional.empty(), Optional.empty());\n+  }\n+\n+  public static GoQuorumIbftOptions createQbft() {\n+    return new GoQuorumIbftOptions(2, 30000, 10, Optional.of(0), Optional.empty());\n+  }\n+\n+  public GoQuorumIbftOptions(\n+      final int blockPeriodSeconds,\n+      final int epochLength,\n+      final int requestTimeoutSeconds,\n+      final Optional<Integer> qbftBlock,\n+      final Optional<Integer> ceil2nBy3Block) {\n+    this.blockPeriodSeconds = blockPeriodSeconds;\n+    this.epochLength = epochLength;\n+    this.requestTimeoutSeconds = requestTimeoutSeconds;\n+    this.qbftBlock = qbftBlock;\n+    this.ceil2nBy3Block = ceil2nBy3Block;\n+  }\n+\n+  @JsonGetter(\"blockperiod\")\n+  public int getBlockPeriodSeconds() {\n+    return blockPeriodSeconds;\n+  }\n+\n+  @JsonGetter(\"epoch\")\n+  public int getEpochLength() {\n+    return epochLength;\n+  }\n+\n+  @JsonGetter(\"requesttimeout\")\n+  public int getRequestTimeoutSeconds() {\n+    return requestTimeoutSeconds;\n+  }\n+\n+  @JsonGetter(\"qibftblock\")\n+  public Optional<Integer> getQbftBlock() {\n+    return qbftBlock;\n+  }\n+\n+  @JsonGetter(\"ceil2nby3block\")\n+  public Optional<Integer> getCeil2nBy3Block() {\n+    return ceil2nBy3Block;\n+  }\n+}"
  },
  {
    "sha": "b6ca346ed27bb6f3e1056a73655d13df73b69f97",
    "filename": "dsl/src/main/java/tech/pegasys/peeps/node/genesis/qbft/GenesisExtraDataQbft.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/qbft/GenesisExtraDataQbft.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/main/java/tech/pegasys/peeps/node/genesis/qbft/GenesisExtraDataQbft.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/main/java/tech/pegasys/peeps/node/genesis/qbft/GenesisExtraDataQbft.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package tech.pegasys.peeps.node.genesis.qbft;\n+\n+import tech.pegasys.peeps.node.Web3Provider;\n+import tech.pegasys.peeps.node.genesis.GenesisExtraData;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.crypto.Hash;\n+import org.apache.tuweni.crypto.SECP256K1.Signature;\n+import org.apache.tuweni.eth.Address;\n+import org.apache.tuweni.rlp.RLP;\n+\n+public class GenesisExtraDataQbft extends GenesisExtraData {\n+\n+  public GenesisExtraDataQbft(final Web3Provider... validators) {\n+    super(encode(validators));\n+  }\n+\n+  public static Bytes encode(final Web3Provider... validators) {\n+\n+    return encode(\n+        Stream.of(validators)\n+            .parallel()\n+            .map(\n+                validator ->\n+                    Address.fromBytes(\n+                        Hash.keccak256(Bytes.fromHexString(validator.nodePublicKey()))\n+                            .slice(12, 20)))\n+            .collect(Collectors.toList()));\n+  }\n+\n+  private static Bytes encode(final List<Address> validators) {\n+    final byte[] vanityData = new byte[32];\n+    final byte[] round = new byte[4];\n+    final byte[] votes = new byte[0];\n+    final List<Signature> seals = Collections.emptyList();\n+\n+    return RLP.encode(\n+        writer -> {\n+          writer.writeList(\n+              listWriter -> {\n+                listWriter.writeByteArray(vanityData);\n+                listWriter.writeList(\n+                    validators, (rlp, validator) -> rlp.writeValue(validator.toBytes()));\n+                listWriter.writeByteArray(votes);\n+                listWriter.writeByteArray(round);\n+                listWriter.writeList(seals, (rlp, committer) -> rlp.writeValue(committer.bytes()));\n+              });\n+        });\n+  }\n+}"
  },
  {
    "sha": "091ff6c54823d7531fffa7313624afdfd5fd638b",
    "filename": "dsl/src/test/java/tech/pegasys/peeps/node/genesis/GenesisFileTest.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/test/java/tech/pegasys/peeps/node/genesis/GenesisFileTest.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/dsl/src/test/java/tech/pegasys/peeps/node/genesis/GenesisFileTest.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/dsl/src/test/java/tech/pegasys/peeps/node/genesis/GenesisFileTest.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -31,12 +31,12 @@\n import org.junit.jupiter.api.io.TempDir;\n import org.testcontainers.shaded.org.bouncycastle.util.Arrays;\n \n-public class BesuGenesisFileTest {\n+public class GenesisFileTest {\n \n   @Test\n   public void matchingGenesisFileMustNotBeRecreated(@TempDir Path directory) throws IOException {\n     final Path location = directory.resolve(\"matchingGenesisFileMustNotBeRecreated.json\");\n-    final BesuGenesisFile genesisFile = new BesuGenesisFile(location);\n+    final GenesisFile genesisFile = new GenesisFile(location);\n     final Genesis genesis = createGenesis(Account.ALPHA, Account.BETA);\n \n     genesisFile.ensureExists(genesis);\n@@ -49,7 +49,7 @@ public void matchingGenesisFileMustNotBeRecreated(@TempDir Path directory) throw\n   @Test\n   public void nonMatchingGenesisFileMsutException(@TempDir Path directory) {\n     final Path location = directory.resolve(\"nonMatchingGenesisFileMsutException.json\");\n-    final BesuGenesisFile genesisFile = new BesuGenesisFile(location);\n+    final GenesisFile genesisFile = new GenesisFile(location);\n     final Genesis genesisAlpha = createGenesis(Account.ALPHA);\n     final Genesis genesisBeta = createGenesis(Account.ALPHA, Account.BETA);\n \n@@ -64,7 +64,7 @@ public void nonMatchingGenesisFileMsutException(@TempDir Path directory) {\n   public void createdGenesisMustDeserialize(@TempDir Path directory)\n       throws DecodeException, IOException {\n     final Path location = directory.resolve(\"createdGenesisMustDeserialize.json\");\n-    final BesuGenesisFile genesisFile = new BesuGenesisFile(location);\n+    final GenesisFile genesisFile = new GenesisFile(location);\n     final Genesis genesis = createGenesis(Account.ALPHA, Account.BETA);\n \n     genesisFile.ensureExists(genesis);",
    "previous_filename": "dsl/src/test/java/tech/pegasys/peeps/node/genesis/BesuGenesisFileTest.java"
  },
  {
    "sha": "3f978927164c6f1102d0705d8be7f5b32c01da32",
    "filename": "end-to-end-tests/src/test/java/tech/pegasys/peeps/consensus/IbftConsensusTest.java",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/end-to-end-tests/src/test/java/tech/pegasys/peeps/consensus/IbftConsensusTest.java",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/end-to-end-tests/src/test/java/tech/pegasys/peeps/consensus/IbftConsensusTest.java",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/end-to-end-tests/src/test/java/tech/pegasys/peeps/consensus/IbftConsensusTest.java?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package tech.pegasys.peeps.consensus;\n+\n+import tech.pegasys.peeps.FixedSignerConfigs;\n+import tech.pegasys.peeps.NetworkTest;\n+import tech.pegasys.peeps.network.ConsensusMechanism;\n+import tech.pegasys.peeps.network.Network;\n+import tech.pegasys.peeps.node.Account;\n+import tech.pegasys.peeps.node.Web3Provider;\n+import tech.pegasys.peeps.node.Web3ProviderType;\n+import tech.pegasys.peeps.node.model.Hash;\n+import tech.pegasys.peeps.node.verification.ValueReceived;\n+import tech.pegasys.peeps.node.verification.ValueSent;\n+import tech.pegasys.peeps.signer.SignerConfiguration;\n+\n+import org.apache.tuweni.crypto.SECP256K1.KeyPair;\n+import org.apache.tuweni.eth.Address;\n+import org.apache.tuweni.units.ethereum.Wei;\n+import org.junit.jupiter.api.Test;\n+\n+public class IbftConsensusTest extends NetworkTest {\n+\n+  private Web3Provider alphaNode;\n+  private final SignerConfiguration signer = FixedSignerConfigs.ALPHA;\n+\n+  @Override\n+  protected void setUpNetwork(final Network network) {\n+    alphaNode = network.addNode(\"alpha\", KeyPair.random());\n+    final Web3Provider betaNode =\n+        network.addNode(\"beta\", KeyPair.random(), Web3ProviderType.GOQUORUM);\n+    network.set(ConsensusMechanism.IBFT, betaNode);\n+    network.addSigner(signer.name(), signer.resources(), alphaNode);\n+  }\n+\n+  @Test\n+  public void consensusAfterMiningMustHappen() {\n+    final Address sender = signer.address();\n+    final Address receiver = Account.BETA.address();\n+    final Wei transferAmount = Wei.valueOf(5000L);\n+\n+    verify().consensusOnValueAt(sender, receiver);\n+\n+    final Wei senderStartBalance = execute(alphaNode).getBalance(sender);\n+    final Wei receiverStartBalance = execute(alphaNode).getBalance(receiver);\n+\n+    final Hash receipt = execute(signer).transferTo(receiver, transferAmount);\n+\n+    await().consensusOnTransactionReceipt(receipt);\n+\n+    verifyOn(alphaNode)\n+        .transistion(\n+            new ValueSent(sender, senderStartBalance, receipt),\n+            new ValueReceived(receiver, receiverStartBalance, transferAmount));\n+\n+    verify().consensusOnValueAt(sender, receiver);\n+  }\n+}"
  },
  {
    "sha": "52e94a63466c817879435904db98d6514096b9dc",
    "filename": "gradle/versions.gradle",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/ConsenSys/PEEPS/blob/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/gradle/versions.gradle",
    "raw_url": "https://github.com/ConsenSys/PEEPS/raw/81b4abab19a213aa4f8b15a4679eb7403f6ca2e2/gradle/versions.gradle",
    "contents_url": "https://api.github.com/repos/ConsenSys/PEEPS/contents/gradle/versions.gradle?ref=81b4abab19a213aa4f8b15a4679eb7403f6ca2e2",
    "patch": "@@ -44,8 +44,8 @@ dependencyManagement {\n     dependency 'com.google.guava:guava:28.2-jre'\n \n     // Junit 5\n-    dependency 'org.junit.jupiter:junit-jupiter-engine:5.6.0'\n-    dependency 'org.junit.jupiter:junit-jupiter-api:5.6.0'\n+    dependency 'org.junit.jupiter:junit-jupiter-engine:5.7.1'\n+    dependency 'org.junit.jupiter:junit-jupiter-api:5.7.1'\n \n     // Log4j\n     dependency 'org.apache.logging.log4j:log4j-api:2.13.0'\n@@ -67,5 +67,7 @@ dependencyManagement {\n     // Vertx\n     dependency 'io.vertx:vertx-core:3.9.5'\n     dependency 'io.vertx:vertx-web-client:3.9.5'\n+\n+    dependency 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.2'\n   }\n }"
  }
]
