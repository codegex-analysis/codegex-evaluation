[
  {
    "sha": "efd87a001b083273c41659ebc4324c65dc88ae8e",
    "filename": "core/src/main/java/com/linecorp/armeria/common/Cookie.java",
    "status": "modified",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/Cookie.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/Cookie.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/Cookie.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -99,6 +99,69 @@ static Cookies fromCookieHeader(boolean strict, String cookieHeader) {\n         return ServerCookieDecoder.decode(strict, cookieHeader);\n     }\n \n+    /**\n+     * Decodes the specified {@code \"Cookie\"} header values into a set of {@link Cookie}s.\n+     *\n+     * @param cookieHeaders the {@code \"Cookie\"} header values.\n+     * @return the decoded {@link Cookie}s.\n+     */\n+    static Cookies fromCookieHeaders(String... cookieHeaders) {\n+        return fromCookieHeaders(true, cookieHeaders);\n+    }\n+\n+    /**\n+     * Decodes the specified {@code \"Cookie\"} header values into a set of {@link Cookie}s.\n+     *\n+     * @param cookieHeaders the {@code \"Cookie\"} header values.\n+     * @return the decoded {@link Cookie}s.\n+     */\n+    static Cookies fromCookieHeaders(Iterable<String> cookieHeaders) {\n+        return fromCookieHeaders(true, cookieHeaders);\n+    }\n+\n+    /**\n+     * Decodes the specified {@code \"Cookie\"} header values into a set of {@link Cookie}s.\n+     *\n+     * @param strict whether to validate that the cookie names and values are in the valid scope\n+     *               defined in RFC 6265.\n+     * @param cookieHeaders the {@code \"Cookie\"} header values.\n+     * @return the decoded {@link Cookie}s.\n+     */\n+    static Cookies fromCookieHeaders(boolean strict, String... cookieHeaders) {\n+        requireNonNull(cookieHeaders, \"cookieHeaders\");\n+        if (cookieHeaders.length == 0) {\n+            return Cookies.of();\n+        }\n+\n+        final ImmutableSet.Builder<Cookie> builder =\n+                ImmutableSet.builderWithExpectedSize(cookieHeaders.length);\n+        for (String v : cookieHeaders) {\n+            requireNonNull(v, \"setCookieHeaders contains null.\");\n+            final Cookies cookies = fromCookieHeader(strict, v);\n+            builder.addAll(cookies);\n+        }\n+\n+        return Cookies.of(builder.build());\n+    }\n+\n+    /**\n+     * Decodes the specified {@code \"Cookie\"} header values into a set of {@link Cookie}s.\n+     *\n+     * @param strict whether to validate that the cookie names and values are in the valid scope\n+     *               defined in RFC 6265.\n+     * @param cookieHeaders the {@code \"Cookie\"} header values.\n+     * @return the decoded {@link Cookie}s.\n+     */\n+    static Cookies fromCookieHeaders(boolean strict, Iterable<String> cookieHeaders) {\n+        requireNonNull(cookieHeaders, \"setCookieHeaders\");\n+        final Iterator<String> it = cookieHeaders.iterator();\n+        if (!it.hasNext()) {\n+            return Cookies.of();\n+        }\n+\n+        return CookieUtil.fromCookieHeaders(ImmutableSet.builder(), strict, it);\n+    }\n+\n     /**\n      * Encodes the specified {@link Cookie}s into a {@code \"Cookie\"} header value.\n      *"
  },
  {
    "sha": "a7583f44ce12659a51414ba526cd49190d976ea1",
    "filename": "core/src/main/java/com/linecorp/armeria/common/CookieUtil.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/CookieUtil.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/CookieUtil.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/CookieUtil.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -251,6 +251,18 @@ static CookieBuilder initCookie(Logger logger, boolean strict,\n     }\n \n     // The methods newly added in the fork.\n+    static Cookies fromCookieHeaders(ImmutableSet.Builder<Cookie> builder,\n+                                        boolean strict, Iterator<String> it) {\n+        assert it.hasNext();\n+        do {\n+            final String v = it.next();\n+            requireNonNull(v, \"cookieHeaders contains null.\");\n+            final Cookies cookies = Cookie.fromCookieHeader(strict, v);\n+            builder.addAll(cookies);\n+        } while (it.hasNext());\n+\n+        return Cookies.of(builder.build());\n+    }\n \n     static Cookies fromSetCookieHeaders(ImmutableSet.Builder<Cookie> builder,\n                                         boolean strict, Iterator<String> it) {"
  },
  {
    "sha": "794cb0ce4dcb0a71f7e5af2f193a76d6fb629812",
    "filename": "core/src/main/java/com/linecorp/armeria/common/DefaultRequestHeaders.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/DefaultRequestHeaders.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/DefaultRequestHeaders.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/DefaultRequestHeaders.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -31,6 +31,8 @@\n     private URI uri;\n     @Nullable\n     private List<LanguageRange> acceptLanguages;\n+    @Nullable\n+    private Cookies cookies;\n \n     DefaultRequestHeaders(HttpHeadersBase headers) {\n         super(headers);\n@@ -94,6 +96,15 @@ public String authority() {\n         return super.authority();\n     }\n \n+    @Override\n+    public Cookies cookies() {\n+        final Cookies cookies = this.cookies;\n+        if (cookies != null) {\n+            return cookies;\n+        }\n+        return this.cookies = super.cookies();\n+    }\n+\n     @Override\n     public RequestHeadersBuilder toBuilder() {\n         return new DefaultRequestHeadersBuilder(this);"
  },
  {
    "sha": "09fb47f2c9ef01f995ec08ebeb988f7118c84b8f",
    "filename": "core/src/main/java/com/linecorp/armeria/common/DefaultRequestHeadersBuilder.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/DefaultRequestHeadersBuilder.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/DefaultRequestHeadersBuilder.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/DefaultRequestHeadersBuilder.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -153,4 +153,11 @@ public Locale selectLocale(Iterable<Locale> supportedLocales) {\n         final HttpHeadersBase getters = getters();\n         return getters != null ? getters.selectLocale(supportedLocales) : null;\n     }\n+\n+    @Override\n+    public Cookies cookies() {\n+        final HttpHeadersBase getters = getters();\n+        checkState(getters != null, \":cookie header does not exist.\");\n+        return getters.cookies();\n+    }\n }"
  },
  {
    "sha": "83ea47409785513bad278662e51fae69049fd197",
    "filename": "core/src/main/java/com/linecorp/armeria/common/DefaultResponseHeaders.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/DefaultResponseHeaders.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/DefaultResponseHeaders.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/DefaultResponseHeaders.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -16,12 +16,15 @@\n package com.linecorp.armeria.common;\n \n import javax.annotation.Nullable;\n+import java.util.List;\n \n @SuppressWarnings({ \"checkstyle:EqualsHashCode\", \"EqualsAndHashcode\" })\n final class DefaultResponseHeaders extends DefaultHttpHeaders implements ResponseHeaders {\n \n     @Nullable\n     private HttpStatus status;\n+    @Nullable\n+    private Cookies cookies;\n \n     DefaultResponseHeaders(HttpHeadersBase headers) {\n         super(headers);\n@@ -41,6 +44,15 @@ public HttpStatus status() {\n         return this.status = super.status();\n     }\n \n+    @Override\n+    public Cookies cookies() {\n+        final Cookies cookies = this.cookies;\n+        if (cookies != null) {\n+            return cookies;\n+        }\n+        return this.cookies = super.setCookies();\n+    }\n+\n     @Override\n     public ResponseHeadersBuilder toBuilder() {\n         return new DefaultResponseHeadersBuilder(this);"
  },
  {
    "sha": "bf91eccfdf381122649e7bbbf57072dcd0879c34",
    "filename": "core/src/main/java/com/linecorp/armeria/common/DefaultResponseHeadersBuilder.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/DefaultResponseHeadersBuilder.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/DefaultResponseHeadersBuilder.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/DefaultResponseHeadersBuilder.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -57,6 +57,13 @@ public HttpStatus status() {\n         return getters.status();\n     }\n \n+    @Override\n+    public Cookies cookies() {\n+        final HttpHeadersBase getters = getters();\n+        checkState(getters != null, \":set-cookie headers does not exist.\");\n+        return getters.setCookies();\n+    }\n+\n     @Override\n     public ResponseHeadersBuilder status(int statusCode) {\n         setters().status(statusCode);"
  },
  {
    "sha": "df173e1b5dc1a5c7967dd6ecc271e091ba0a6b79",
    "filename": "core/src/main/java/com/linecorp/armeria/common/HttpHeadersBase.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/HttpHeadersBase.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/HttpHeadersBase.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/HttpHeadersBase.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -181,6 +181,19 @@ URI uri() {\n         }\n     }\n \n+    Cookies cookies() {\n+        final List<String> cookieStrings = getAll(HttpHeaderNames.COOKIE);\n+        if (cookieStrings.isEmpty()) {\n+            return Cookies.of();\n+        }\n+        return Cookie.fromCookieHeaders(cookieStrings);\n+    }\n+\n+    Cookies setCookies() {\n+        final List<String> cookieHeaders = getAll(HttpHeaderNames.SET_COOKIE);\n+        return Cookie.fromSetCookieHeaders(cookieHeaders);\n+    }\n+\n     @Nullable\n     List<LanguageRange> acceptLanguages() {\n         final List<String> acceptHeaders = getAll(HttpHeaderNames.ACCEPT_LANGUAGE);"
  },
  {
    "sha": "189d27cb6e1ea42ba247eda6da927e05a4c84065",
    "filename": "core/src/main/java/com/linecorp/armeria/common/RequestHeaderGetters.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/RequestHeaderGetters.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/RequestHeaderGetters.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/RequestHeaderGetters.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -112,4 +112,11 @@\n     default Locale selectLocale(Locale... supportedLocales) {\n         return selectLocale(ImmutableList.copyOf(requireNonNull(supportedLocales, \"supportedLocales\")));\n     }\n+\n+    /**\n+     * Returns the parsed {@code \"cookie\"} header.\n+     *\n+     * @return a {@link Cookies} or an empty {@link Cookies} if there is no such header.\n+     */\n+    Cookies cookies();\n }"
  },
  {
    "sha": "67f33c5bc53e496a832c0e107a7e75e2eba3db2a",
    "filename": "core/src/main/java/com/linecorp/armeria/common/RequestHeadersBuilder.java",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/RequestHeadersBuilder.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/RequestHeadersBuilder.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/RequestHeadersBuilder.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -110,6 +110,22 @@ default RequestHeadersBuilder acceptLanguages(LanguageRange... acceptedLanguages\n                 requireNonNull(acceptedLanguages, \"acceptedLanguages\")));\n     }\n \n+    /**\n+     * Sets the {@code \"cookie\"} header.\n+     */\n+    default RequestHeadersBuilder cookie(Iterable<? extends Cookie> cookies) {\n+        requireNonNull(cookies, \"cookie\");\n+        return add(HttpHeaderNames.COOKIE, Cookie.toCookieHeader(cookies));\n+    }\n+\n+    /**\n+     * Sets the {@code \"cookie\"} header.\n+     */\n+    default RequestHeadersBuilder cookie(Cookie... cookies) {\n+        requireNonNull(cookies, \"cookie\");\n+        return add(HttpHeaderNames.COOKIE, Cookie.toCookieHeader(cookies));\n+    }\n+\n     // Override the return type of the chaining methods in the superclass.\n \n     @Override"
  },
  {
    "sha": "f83215fd9475645a297db0c76a1de248fd81a003",
    "filename": "core/src/main/java/com/linecorp/armeria/common/ResponseHeaderGetters.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/ResponseHeaderGetters.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/ResponseHeaderGetters.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/ResponseHeaderGetters.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -28,4 +28,11 @@\n      * @throws IllegalStateException if there is no such header.\n      */\n     HttpStatus status();\n+\n+    /**\n+     * Returns the parsed {@code \"set-cookie\"} header.\n+     *\n+     * @return a {@link Cookies} or an empty {@link Cookies} if there is no such header.\n+     */\n+    Cookies cookies();\n }"
  },
  {
    "sha": "3823886cc8289ff467d53dd4bda094b7c2fda373",
    "filename": "core/src/main/java/com/linecorp/armeria/common/ResponseHeadersBuilder.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/ResponseHeadersBuilder.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/java/com/linecorp/armeria/common/ResponseHeadersBuilder.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/java/com/linecorp/armeria/common/ResponseHeadersBuilder.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -42,6 +42,24 @@\n      */\n     ResponseHeadersBuilder status(HttpStatus status);\n \n+    /**\n+     * Sets the {@code \"set-cookie\"} header.\n+     * @param cookies the specified cookies.\n+     * @return {@code this}\n+     */\n+    default ResponseHeadersBuilder setCookie(Iterable<? extends Cookie> cookies) {\n+        return add(HttpHeaderNames.SET_COOKIE, Cookie.toSetCookieHeaders(cookies));\n+    }\n+\n+    /**\n+     * Sets the {@code \"set-cookie\"} header.\n+     * @param cookies the specified cookies.\n+     * @return {@code this}\n+     */\n+    default ResponseHeadersBuilder setCookie(Cookie... cookies) {\n+        return add(HttpHeaderNames.SET_COOKIE, Cookie.toSetCookieHeaders(cookies));\n+    }\n+\n     // Override the return type of the chaining methods in the superclass.\n \n     @Override"
  },
  {
    "sha": "597a4a0d3ee0a34b292f52779d4a8479f8cf42b7",
    "filename": "core/src/main/resources/com/linecorp/armeria/public_suffixes.txt",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/resources/com/linecorp/armeria/public_suffixes.txt",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/main/resources/com/linecorp/armeria/public_suffixes.txt",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/main/resources/com/linecorp/armeria/public_suffixes.txt?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -31,6 +31,7 @@\n *.elb.amazonaws.com\n *.elb.amazonaws.com.cn\n *.er\n+*.eu.pythonanywhere.com\n *.ex.futurecms.at\n *.ex.ortsinfo.at\n *.firenet.ch\n@@ -68,6 +69,7 @@\n *.owo.codes\n *.pg\n *.platformsh.site\n+*.pythonanywhere.com\n *.quipelements.com\n *.r.appspot.com\n *.s5y.io\n@@ -989,6 +991,7 @@ botany.museum\n bounceme.net\n bounty-full.com\n boutique\n+boutir.com\n box\n boxfuse.io\n bozen-sudtirol.it\n@@ -1088,6 +1091,7 @@ cab\n cable-modem.org\n cadaques.museum\n cafe\n+cafjs.com\n cagliari.it\n cahcesuolo.no\n cal\n@@ -4690,6 +4694,7 @@ madrid\n madrid.museum\n maebashi.gunma.jp\n magazine.aero\n+magnet.page\n maibara.shiga.jp\n maif\n mail.pl"
  },
  {
    "sha": "fd25b6e36a3169b4ca8445e4dbf5c32991b9e0e5",
    "filename": "core/src/test/java/com/linecorp/armeria/common/DefaultRequestHeadersBuilderTest.java",
    "status": "modified",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/test/java/com/linecorp/armeria/common/DefaultRequestHeadersBuilderTest.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/test/java/com/linecorp/armeria/common/DefaultRequestHeadersBuilderTest.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/test/java/com/linecorp/armeria/common/DefaultRequestHeadersBuilderTest.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -260,6 +260,45 @@ void testAcceptLanguageBuilderGetter() {\n         assertThat(acceptLanguages).isEqualTo(languageRanges);\n     }\n \n+    @Test\n+    void testCookieBuilder() {\n+        final Cookie cookie = Cookie.of(\"cookie\", \"value\");\n+        final RequestHeaders headers = RequestHeaders\n+                .builder()\n+                .path(\"/\")\n+                .method(HttpMethod.GET)\n+                .cookie(cookie)\n+                .build();\n+        assertThat(headers.cookies()).isEqualTo(Cookies.of(cookie));\n+    }\n+\n+    @Test\n+    void testMultipleCookieHeader() {\n+        final Cookie cookie1 = Cookie.of(\"cookie1\", \"value1\");\n+        final Cookie cookie2 = Cookie.of(\"cookie2\", \"value2\");\n+        final RequestHeaders headers = RequestHeaders\n+                .builder()\n+                .path(\"/\")\n+                .method(HttpMethod.GET)\n+                .add(HttpHeaderNames.COOKIE, cookie1.toCookieHeader())\n+                .add(HttpHeaderNames.COOKIE, cookie2.toCookieHeader())\n+                .build();\n+        assertThat(headers.cookies()).isEqualTo(Cookies.of(cookie1, cookie2));\n+    }\n+\n+    @Test\n+    void testCookieBuilderWithIterable() {\n+        final Cookies cookies = Cookies.of(Cookie.of(\"cookie1\", \"value1\"),\n+                                           Cookie.of(\"cookie2\", \"value2\"));\n+        final RequestHeaders headers = RequestHeaders\n+                .builder()\n+                .path(\"/\")\n+                .method(HttpMethod.GET)\n+                .cookie(cookies)\n+                .build();\n+        assertThat(headers.cookies()).isEqualTo(Cookies.of(cookies));\n+    }\n+\n     /**\n      * Makes sure {@link RequestHeadersBuilder} overrides all {@link HttpHeadersBuilder} methods\n      * with the correct return type."
  },
  {
    "sha": "a678239b3cbecea0d56c49b13367c917933e03a0",
    "filename": "core/src/test/java/com/linecorp/armeria/common/DefaultResponseHeadersBuilderTest.java",
    "status": "modified",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/line/armeria/blob/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/test/java/com/linecorp/armeria/common/DefaultResponseHeadersBuilderTest.java",
    "raw_url": "https://github.com/line/armeria/raw/dc7d19159000f68c3a5bbec7ca7628d3e3eca737/core/src/test/java/com/linecorp/armeria/common/DefaultResponseHeadersBuilderTest.java",
    "contents_url": "https://api.github.com/repos/line/armeria/contents/core/src/test/java/com/linecorp/armeria/common/DefaultResponseHeadersBuilderTest.java?ref=dc7d19159000f68c3a5bbec7ca7628d3e3eca737",
    "patch": "@@ -101,6 +101,38 @@ void validation() {\n                 .hasMessageContaining(\":status\");\n     }\n \n+    @Test\n+    void testSetCookieBuilder() {\n+        final Cookie cookie = Cookie.of(\"cookie\", \"value\");\n+        final ResponseHeaders headers = ResponseHeaders\n+                .builder(HttpStatus.OK)\n+                .setCookie(cookie)\n+                .build();\n+        assertThat(headers.cookies()).isEqualTo(Cookies.of(cookie));\n+    }\n+\n+    @Test\n+    void testSetCookieBuilderWithIterable() {\n+        final Cookies cookies = Cookies.of(Cookie.of(\"cookie1\", \"value1\"),\n+                                           Cookie.of(\"cookie2\", \"value2\"));\n+        final ResponseHeaders headers = ResponseHeaders\n+                .builder(HttpStatus.OK)\n+                .setCookie(cookies)\n+                .build();\n+        assertThat(headers.cookies()).isEqualTo(cookies);\n+    }\n+\n+    @Test\n+    void testSetCookieBuilderWithMultipleCookie() {\n+        final Cookie cookie1 = Cookie.of(\"cookie1\", \"value1\");\n+        final Cookie cookie2 = Cookie.of(\"cookie2\", \"value2\");\n+        final ResponseHeaders headers = ResponseHeaders\n+                .builder(HttpStatus.OK)\n+                .setCookie(cookie1, cookie2)\n+                .build();\n+        assertThat(headers.cookies()).isEqualTo(Cookies.of(cookie1, cookie2));\n+    }\n+\n     /**\n      * Makes sure {@link ResponseHeadersBuilder} overrides all {@link HttpHeadersBuilder} methods\n      * with the correct return type."
  }
]
