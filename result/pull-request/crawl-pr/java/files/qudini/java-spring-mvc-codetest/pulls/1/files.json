[
  {
    "sha": "697c7b13a8d51946e7822650f8e9bb3fd029f111",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/qudini/java-spring-mvc-codetest/blob/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/pom.xml",
    "raw_url": "https://github.com/qudini/java-spring-mvc-codetest/raw/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/pom.xml",
    "contents_url": "https://api.github.com/repos/qudini/java-spring-mvc-codetest/contents/pom.xml?ref=ea2f136d87ff76e28848437809b1f6c8e2bbb9f9",
    "patch": "@@ -24,6 +24,7 @@\n             <artifactId>spring-boot-starter-web</artifactId>\n         </dependency>\n \n+\n         <dependency>\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-test</artifactId>"
  },
  {
    "sha": "cbe88a93f7db22f337cff74f680dd83880ca8303",
    "filename": "src/main/java/com/example/demo/controllers/CustomerController.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/qudini/java-spring-mvc-codetest/blob/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/src/main/java/com/example/demo/controllers/CustomerController.java",
    "raw_url": "https://github.com/qudini/java-spring-mvc-codetest/raw/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/src/main/java/com/example/demo/controllers/CustomerController.java",
    "contents_url": "https://api.github.com/repos/qudini/java-spring-mvc-codetest/contents/src/main/java/com/example/demo/controllers/CustomerController.java?ref=ea2f136d87ff76e28848437809b1f6c8e2bbb9f9",
    "patch": "@@ -0,0 +1,27 @@\n+package com.example.demo.controllers;\n+\n+import com.example.demo.models.Customer;\n+import com.example.demo.services.CustomerService;\n+import org.springframework.http.MediaType;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.ArrayList;\n+\n+@RestController\n+@RequestMapping(value = \"customers\", produces = MediaType.APPLICATION_JSON_VALUE)\n+public class CustomerController {\n+\n+    private final CustomerService logic;\n+\n+    public CustomerController(CustomerService logic) {\n+        this.logic = logic;\n+    }\n+\n+    @PostMapping(\"/sortCustomers\")\n+    public ArrayList<Customer> sortCustomersByDueTime(@RequestBody ArrayList<Customer> customers) {\n+        return logic.sortCustomersByDueDate(customers);\n+    }\n+}"
  },
  {
    "sha": "b29cc0182763e57ee3663de9ce398d43d38dfb72",
    "filename": "src/main/java/com/example/demo/models/Customer.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/qudini/java-spring-mvc-codetest/blob/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/src/main/java/com/example/demo/models/Customer.java",
    "raw_url": "https://github.com/qudini/java-spring-mvc-codetest/raw/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/src/main/java/com/example/demo/models/Customer.java",
    "contents_url": "https://api.github.com/repos/qudini/java-spring-mvc-codetest/contents/src/main/java/com/example/demo/models/Customer.java?ref=ea2f136d87ff76e28848437809b1f6c8e2bbb9f9",
    "patch": "@@ -0,0 +1,43 @@\n+package com.example.demo.models;\n+\n+\n+public class Customer {\n+\n+    private long id;\n+    private String name;\n+    private String duetime;\n+    private String jointime;\n+\n+    public Customer(long id, String name, String duetime, String jointime) {\n+        this.id = id;\n+        this.name = name;\n+        this.duetime = duetime;\n+        this.jointime = jointime;\n+    }\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getDuetime() {\n+        return duetime;\n+    }\n+\n+    public String getJointime() {\n+        return jointime;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Customer{\" +\n+                \"id=\" + id +\n+                \", name='\" + name + '\\'' +\n+                \", duetime=\" + duetime +\n+                \", jointime=\" + jointime +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "76ac1b56ec1cd592d9062f6e88c9df217a055983",
    "filename": "src/main/java/com/example/demo/services/CustomerService.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/qudini/java-spring-mvc-codetest/blob/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/src/main/java/com/example/demo/services/CustomerService.java",
    "raw_url": "https://github.com/qudini/java-spring-mvc-codetest/raw/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/src/main/java/com/example/demo/services/CustomerService.java",
    "contents_url": "https://api.github.com/repos/qudini/java-spring-mvc-codetest/contents/src/main/java/com/example/demo/services/CustomerService.java?ref=ea2f136d87ff76e28848437809b1f6c8e2bbb9f9",
    "patch": "@@ -0,0 +1,29 @@\n+package com.example.demo.services;\n+\n+\n+import com.example.demo.models.Customer;\n+import org.springframework.stereotype.Service;\n+\n+\n+import java.time.OffsetDateTime;\n+import java.time.ZoneOffset;\n+import java.time.format.DateTimeFormatter;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+\n+@Service\n+public class CustomerService {\n+\n+    private final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(\"uuuu-MM-dd'T'HH:mm:ssXXXXX\");\n+\n+    public ArrayList<Customer> sortCustomersByDueDate(ArrayList<Customer> customers) {\n+        customers.sort(Comparator.comparing((Customer c) -> stringDateToDateTime(c.getDuetime())));\n+        return customers;\n+    }\n+\n+    private OffsetDateTime stringDateToDateTime(String date) {\n+        OffsetDateTime offsetDateTime = OffsetDateTime.parse(date, DATE_TIME_FORMATTER);\n+        return offsetDateTime.withOffsetSameInstant(ZoneOffset.UTC);\n+    }\n+\n+}"
  },
  {
    "sha": "541eab4a632fe42e46922c2b78c1e5df89712cf2",
    "filename": "src/test/java/com/example/demo/controllers/CustomerControllerTest.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/qudini/java-spring-mvc-codetest/blob/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/src/test/java/com/example/demo/controllers/CustomerControllerTest.java",
    "raw_url": "https://github.com/qudini/java-spring-mvc-codetest/raw/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/src/test/java/com/example/demo/controllers/CustomerControllerTest.java",
    "contents_url": "https://api.github.com/repos/qudini/java-spring-mvc-codetest/contents/src/test/java/com/example/demo/controllers/CustomerControllerTest.java?ref=ea2f136d87ff76e28848437809b1f6c8e2bbb9f9",
    "patch": "@@ -0,0 +1,79 @@\n+package com.example.demo.controllers;\n+\n+import com.example.demo.models.Customer;\n+import com.example.demo.services.CustomerService;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.http.MediaType;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.test.web.servlet.MockMvc;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import static org.hamcrest.Matchers.hasSize;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+@RunWith(SpringRunner.class)\n+@WebMvcTest(CustomerController.class)\n+public class CustomerControllerTest {\n+\n+    @Autowired\n+    private MockMvc mvc;\n+\n+    @MockBean\n+    private CustomerService customerService;\n+\n+    private final ArrayList<Customer> request = new ArrayList<>(Arrays.asList(\n+            new Customer(10000000, \"Ulysses Leon\", \"2014-06-18T06:26:56-07:00\", \"2015-04-08T12:47:16-07:00\"),\n+            new Customer(10000001, \"Bruce Cardenas\", \"2013-12-28T14:11:12-08:00\", \"2014-07-03T21:53:42-07:00\"),\n+            new Customer(10000002, \"Barrett Peterson\", \"2013-12-29T22:33:23-08:00\", \"2014-10-23T21:46:24-07:00\"),\n+            new Customer(10000003, \"Dexter Sweeney\", \"2014-01-29T11:35:22-08:00\", \"2014-11-11T08:34:57-08:00\")\n+    ));\n+\n+\n+    @Before\n+    public void init() {\n+        ArrayList<Customer> response = new ArrayList<>(Arrays.asList(\n+                new Customer(10000001, \"Bruce Cardenas\", \"2013-12-28T14:11:12-08:00\", \"2014-07-03T21:53:42-07:00\"),\n+                new Customer(10000002, \"Barrett Peterson\", \"2013-12-29T22:33:23-08:00\", \"2014-10-23T21:46:24-07:00\"),\n+                new Customer(10000003, \"Dexter Sweeney\", \"2014-01-29T11:35:22-08:00\", \"2014-11-11T08:34:57-08:00\"),\n+                new Customer(10000000, \"Ulysses Leon\", \"2014-06-18T06:26:56-07:00\", \"2015-04-08T12:47:16-07:00\")\n+        ));\n+        Mockito.when(customerService.sortCustomersByDueDate(any()))\n+                .thenReturn(response);\n+    }\n+\n+    @Test\n+    public void requestRespondsWithListOfSortedCustomers() throws Exception {\n+        mvc.perform(post(\"/customers/sortCustomers\")\n+                .content(asJsonString(request))\n+                .contentType(MediaType.APPLICATION_JSON)\n+                .accept(MediaType.APPLICATION_JSON))\n+                .andExpect(status().isOk())\n+                .andExpect(jsonPath(\"$\").isArray())\n+                .andExpect(jsonPath(\"$\", hasSize(4)))\n+                .andExpect(jsonPath(\"$[0].id\", is(10000001)))\n+                .andExpect(jsonPath(\"$[1].id\", is(10000002)))\n+                .andExpect(jsonPath(\"$[2].id\", is(10000003)))\n+                .andExpect(jsonPath(\"$[3].id\", is(10000000)));\n+    }\n+\n+    public static String asJsonString(final Object obj) {\n+        try {\n+            return new ObjectMapper().writeValueAsString(obj);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+}"
  },
  {
    "sha": "e95ee076f8229824de365da975c15ad19270003c",
    "filename": "src/test/java/com/example/demo/services/CustomerServiceTest.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/qudini/java-spring-mvc-codetest/blob/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/src/test/java/com/example/demo/services/CustomerServiceTest.java",
    "raw_url": "https://github.com/qudini/java-spring-mvc-codetest/raw/ea2f136d87ff76e28848437809b1f6c8e2bbb9f9/src/test/java/com/example/demo/services/CustomerServiceTest.java",
    "contents_url": "https://api.github.com/repos/qudini/java-spring-mvc-codetest/contents/src/test/java/com/example/demo/services/CustomerServiceTest.java?ref=ea2f136d87ff76e28848437809b1f6c8e2bbb9f9",
    "patch": "@@ -0,0 +1,47 @@\n+package com.example.demo.services;\n+\n+import com.example.demo.models.Customer;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import static org.junit.Assert.*;\n+\n+@RunWith(SpringRunner.class)\n+public class CustomerServiceTest {\n+\n+    private final CustomerService customerService = new CustomerService();\n+    private ArrayList<Customer> customerRequest;\n+\n+\n+    @Test\n+    public void customerListIsSortedByDueDate() {\n+        customerRequest = new ArrayList<>(Arrays.asList(\n+                new Customer(10000000, \"Ulysses Leon\", \"2014-06-18T06:26:56-07:00\", \"2015-04-08T12:47:16-07:00\"),\n+                new Customer(10000001, \"Bruce Cardenas\", \"2013-12-28T14:11:12-08:00\", \"2014-07-03T21:53:42-07:00\"),\n+                new Customer(10000002, \"Barrett Peterson\", \"2013-12-29T22:33:23-08:00\", \"2014-10-23T21:46:24-07:00\"),\n+                new Customer(10000003, \"Dexter Sweeney\", \"2014-01-29T11:35:22-08:00\", \"2014-11-11T08:34:57-08:00\")\n+        ));\n+        ArrayList<Customer> result = customerService.sortCustomersByDueDate(customerRequest);\n+\n+        assertEquals(10000000, result.get(3).getId());\n+        assertEquals(10000001, result.get(0).getId());\n+        assertEquals(10000002, result.get(1).getId());\n+        assertEquals(10000003, result.get(2).getId());\n+    }\n+\n+    @Test\n+    public void largeIdValuesDoNotFail() {\n+        customerRequest = new ArrayList<>(Arrays.asList(\n+                new Customer(1000000000000000000L, \"Ulysses Leon\", \"2014-06-18T06:26:56-07:00\", \"2015-04-08T12:47:16-07:00\"),\n+                new Customer(1000000000000000001L, \"Bruce Cardenas\", \"2013-12-28T14:11:12-08:00\", \"2014-07-03T21:53:42-07:00\")\n+        ));\n+        ArrayList<Customer> result = customerService.sortCustomersByDueDate(customerRequest);\n+        assertEquals(2, result.size());\n+    }\n+\n+}"
  }
]
