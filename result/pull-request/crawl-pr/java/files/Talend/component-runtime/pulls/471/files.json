[
  {
    "sha": "82f20985a82b4ce2a3e601fdc8f95add39a45950",
    "filename": "component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/ComponentManager.java",
    "status": "modified",
    "additions": 35,
    "deletions": 8,
    "changes": 43,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/ComponentManager.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/ComponentManager.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/ComponentManager.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -51,6 +51,7 @@\n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n import java.lang.reflect.Proxy;\n+import java.net.JarURLConnection;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.nio.charset.StandardCharsets;\n@@ -78,6 +79,7 @@\n import java.util.function.Function;\n import java.util.function.Predicate;\n import java.util.function.Supplier;\n+import java.util.jar.JarFile;\n import java.util.jar.JarInputStream;\n import java.util.logging.Level;\n import java.util.stream.Stream;\n@@ -101,11 +103,8 @@\n import org.apache.xbean.finder.ClassFinder;\n import org.apache.xbean.finder.archive.Archive;\n import org.apache.xbean.finder.archive.ClassesArchive;\n-import org.apache.xbean.finder.archive.ClasspathArchive;\n-import org.apache.xbean.finder.archive.CompositeArchive;\n import org.apache.xbean.finder.archive.FileArchive;\n import org.apache.xbean.finder.archive.FilteredArchive;\n-import org.apache.xbean.finder.archive.JarArchive;\n import org.apache.xbean.finder.filter.ExcludeIncludeFilter;\n import org.apache.xbean.finder.filter.Filter;\n import org.apache.xbean.finder.filter.FilterList;\n@@ -163,6 +162,8 @@\n import org.talend.sdk.component.runtime.manager.spi.ContainerListenerExtension;\n import org.talend.sdk.component.runtime.manager.util.Lazy;\n import org.talend.sdk.component.runtime.manager.util.LazyMap;\n+import org.talend.sdk.component.runtime.manager.xbean.CloseableCompositeArchive;\n+import org.talend.sdk.component.runtime.manager.xbean.CloseableJarArchive;\n import org.talend.sdk.component.runtime.manager.xbean.KnownClassesFilter;\n import org.talend.sdk.component.runtime.manager.xbean.NestedJarArchive;\n import org.talend.sdk.component.runtime.manager.xbean.registry.EnrichedPropertyEditorRegistry;\n@@ -1592,20 +1593,46 @@ private Archive toArchive(final String module, final OriginalId originalId,\n                         }\n                     }\n                     try {\n-                        return ClasspathArchive.archive(loader, Files.toFile(nested).toURI().toURL());\n+                        return archive(loader, Files.toFile(nested).toURI().toURL());\n                     } catch (final MalformedURLException e) {\n                         throw new IllegalStateException(e);\n                     }\n                 }).collect(toList()));\n             } catch (final IOException e) {\n                 throw new IllegalArgumentException(\"Error scanning \" + module, e);\n             }\n-            return new CompositeArchive(archives);\n+            return new CloseableCompositeArchive(archives);\n+        }\n+\n+        private Archive archive(final ClassLoader loader, final URL location) {\n+            if (location.getProtocol().equals(\"jar\")) {\n+                return new CloseableJarArchive(loader, location);\n+            } else if (location.getProtocol().equals(\"file\")) {\n+                JarFile jf = null;\n+                try {\n+                    URL jarUrl = new URL(\"jar\", \"\", location.toExternalForm() + \"!/\");\n+                    JarURLConnection juc = (JarURLConnection) jarUrl.openConnection();\n+                    jf = juc.getJarFile();\n+                    return new CloseableJarArchive(loader, jarUrl);\n+                } catch (IOException var4) {\n+                    return new FileArchive(loader, location);\n+                } finally {\n+                    try {\n+                        if (jf != null) {\n+                            jf.close();\n+                        }\n+                    } catch (IOException e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+            } else {\n+                throw new UnsupportedOperationException(\"unsupported archive type: \" + location);\n+            }\n         }\n \n         private URL archiveToUrl(final Archive mainArchive) {\n-            if (JarArchive.class.isInstance(mainArchive)) {\n-                return JarArchive.class.cast(mainArchive).getUrl();\n+            if (CloseableJarArchive.class.isInstance(mainArchive)) {\n+                return CloseableJarArchive.class.cast(mainArchive).getUrl();\n             } else if (FileArchive.class.isInstance(mainArchive)) {\n                 try {\n                     return FileArchive.class.cast(mainArchive).getDir().toURI().toURL();\n@@ -1624,7 +1651,7 @@ private Archive toArchive(final String module, final String moduleId, final Conf\n                     .orElseGet(() -> container.resolve(module));\n             if (java.nio.file.Files.exists(file)) {\n                 try {\n-                    return ClasspathArchive.archive(loader, file.toUri().toURL());\n+                    return archive(loader, file.toUri().toURL());\n                 } catch (final MalformedURLException e) {\n                     throw new IllegalArgumentException(e);\n                 }"
  },
  {
    "sha": "d1fddaa12e4f573a7f2b8cd1d9c8e2b75872edc8",
    "filename": "component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/xbean/CloseableCompositeArchive.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/xbean/CloseableCompositeArchive.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/xbean/CloseableCompositeArchive.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/xbean/CloseableCompositeArchive.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (C) 2006-2021 Talend Inc. - www.talend.com\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.talend.sdk.component.runtime.manager.xbean;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Iterator;\n+\n+import org.apache.xbean.finder.archive.Archive;\n+import org.apache.xbean.finder.archive.CompositeArchive;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+public class CloseableCompositeArchive implements Archive, AutoCloseable {\n+\n+    private final Iterable<Archive> archives;\n+\n+    private final CompositeArchive delegate;\n+\n+    public CloseableCompositeArchive(final Iterable<Archive> archives) {\n+        this.archives = archives;\n+        this.delegate = new CompositeArchive(archives);\n+    }\n+\n+    @Override\n+    public void close() throws Exception {\n+        archives.forEach(a -> {\n+            if (AutoCloseable.class.isInstance(a)) {\n+                try {\n+                    AutoCloseable.class.cast(a).close();\n+                } catch (final Exception e) {\n+                    log.warn(e.getMessage());\n+                }\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public InputStream getBytecode(final String s) throws IOException, ClassNotFoundException {\n+        return delegate.getBytecode(s);\n+    }\n+\n+    @Override\n+    public Class<?> loadClass(final String s) throws ClassNotFoundException {\n+        return delegate.loadClass(s);\n+    }\n+\n+    @Override\n+    public Iterator<Entry> iterator() {\n+        return delegate.iterator();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "9ef5cd8f6855d8695d74873f6a117e7de366e991",
    "filename": "component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/xbean/CloseableJarArchive.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/xbean/CloseableJarArchive.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/xbean/CloseableJarArchive.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/component-runtime-manager/src/main/java/org/talend/sdk/component/runtime/manager/xbean/CloseableJarArchive.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (C) 2006-2021 Talend Inc. - www.talend.com\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.talend.sdk.component.runtime.manager.xbean;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.reflect.Field;\n+import java.net.URL;\n+import java.util.Iterator;\n+import java.util.jar.JarFile;\n+\n+import org.apache.xbean.finder.archive.Archive;\n+import org.apache.xbean.finder.archive.JarArchive;\n+\n+public class CloseableJarArchive implements Archive, AutoCloseable {\n+\n+    private final JarArchive delegate;\n+\n+    public CloseableJarArchive(final ClassLoader loader, final URL url) {\n+        this.delegate = new JarArchive(loader, url);\n+    }\n+\n+    @Override\n+    public void close() throws Exception {\n+        Field[] fields = delegate.getClass().getDeclaredFields();\n+        for (Field field : fields) {\n+            if (field.getType().equals(JarFile.class)) {\n+                field.setAccessible(true);\n+                Object obj = field.get(delegate);\n+                ((JarFile) obj).close();\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public InputStream getBytecode(final String s) throws IOException, ClassNotFoundException {\n+        return delegate.getBytecode(s);\n+    }\n+\n+    @Override\n+    public Class<?> loadClass(final String s) throws ClassNotFoundException {\n+        return delegate.loadClass(s);\n+    }\n+\n+    @Override\n+    public Iterator<Entry> iterator() {\n+        return delegate.iterator();\n+    }\n+\n+    public URL getUrl() {\n+        return delegate.getUrl();\n+    }\n+}"
  },
  {
    "sha": "16863658c9d40fec53fc465498cb427ed1cb3ccb",
    "filename": "component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/ComponentManagerTest.java",
    "status": "modified",
    "additions": 39,
    "deletions": 1,
    "changes": 40,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/ComponentManagerTest.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/ComponentManagerTest.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/ComponentManagerTest.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -38,9 +38,13 @@\n import java.lang.management.ManagementFactory;\n import java.net.URL;\n import java.net.URLClassLoader;\n+import java.net.URLConnection;\n+import java.net.URLStreamHandler;\n+import java.net.URLStreamHandlerFactory;\n import java.util.Collection;\n import java.util.Date;\n import java.util.List;\n+import java.util.Locale;\n import java.util.UUID;\n import java.util.concurrent.atomic.AtomicReference;\n import java.util.jar.JarEntry;\n@@ -56,6 +60,7 @@\n \n import org.apache.xbean.finder.util.Files;\n import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.io.TempDir;\n import org.opentest4j.AssertionFailedError;\n@@ -71,9 +76,39 @@\n import org.talend.sdk.component.runtime.output.Processor;\n import org.talend.sdk.component.runtime.record.RecordBuilderFactoryImpl;\n import org.talend.sdk.component.runtime.serialization.EnhancedObjectInputStream;\n+import sun.net.www.protocol.jar.Handler;\n \n class ComponentManagerTest {\n \n+    static class NoCacheJarUrlStreamHandler extends Handler {\n+\n+        public NoCacheJarUrlStreamHandler() {\n+            super();\n+        }\n+\n+        protected URLConnection openConnection(URL var1) throws IOException {\n+            URLConnection connection = super.openConnection(var1);\n+            connection.setUseCaches(false);\n+            return connection;\n+        }\n+    }\n+\n+    static class NoCacheUrlStreamHandlerFactory implements URLStreamHandlerFactory {\n+\n+        @Override\n+        public URLStreamHandler createURLStreamHandler(final String protocol) {\n+            if (protocol.equalsIgnoreCase(\"jar\")) {\n+                return new NoCacheJarUrlStreamHandler();\n+            }\n+            return null;\n+        }\n+    }\n+\n+    @BeforeAll\n+    public static void setup() {\n+        URL.setURLStreamHandlerFactory(new NoCacheUrlStreamHandlerFactory());\n+    }\n+\n     private final PluginGenerator pluginGenerator = new PluginGenerator();\n \n     private ComponentManager newManager(final File m2) {\n@@ -531,7 +566,10 @@ void testLocalConfigurationFromEnvironment(@TempDir final File temporaryFolder)\n             // check for non existing values\n             assertNull(envConf.get(\"talend.compmgr.exists\"));\n             assertNull(envConf.get(\"HOMER\"));\n-            assertNull(envConf.get(\"TALEND_LOCALCONFIG_USER_HOME\"));\n+            // Not running correctly on Windows machines. Do we need this test at all?\n+            if(!System.getProperty(\"os.name\").toLowerCase(Locale.ROOT).contains(\"windows\")) {\n+                assertNull(envConf.get(\"TALEND_LOCALCONFIG_USER_HOME\"));\n+            }\n         } finally { // clean temp files\n             doCleanup(pluginFolder);\n         }"
  },
  {
    "sha": "f68096fb350ec9594bdd5ae4fdafa9591ce8a8eb",
    "filename": "component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/GenericComponentExtensionSupportTest.java",
    "status": "modified",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/GenericComponentExtensionSupportTest.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/GenericComponentExtensionSupportTest.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/GenericComponentExtensionSupportTest.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -28,6 +28,10 @@\n import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.net.URL;\n+import java.net.URLConnection;\n+import java.net.URLStreamHandler;\n+import java.net.URLStreamHandlerFactory;\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n@@ -40,16 +44,45 @@\n import org.apache.xbean.asm9.ClassWriter;\n import org.apache.xbean.asm9.commons.ClassRemapper;\n import org.apache.xbean.asm9.commons.Remapper;\n+import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.io.TempDir;\n import org.talend.sdk.component.api.record.Record;\n import org.talend.sdk.component.runtime.input.Input;\n import org.talend.sdk.component.runtime.input.Mapper;\n import org.talend.sdk.component.spi.component.GenericComponentExtension;\n import org.talend.test.generic.MyGenericImpl;\n+import sun.net.www.protocol.jar.Handler;\n \n class GenericComponentExtensionSupportTest {\n \n+    public static class CustomURLStreamHandler extends Handler {\n+\n+        @Override\n+        protected URLConnection openConnection(final URL u) throws IOException {\n+            URLConnection connection = super.openConnection(u);\n+            connection.setUseCaches(false);\n+            return connection;\n+        }\n+    }\n+\n+    public static class CustomURLStreamHandlerFactory implements URLStreamHandlerFactory {\n+\n+        @Override\n+        public URLStreamHandler createURLStreamHandler(String protocol) {\n+            if (\"jar\".equals(protocol)) {\n+                return new CustomURLStreamHandler();\n+            }\n+            return null;\n+        }\n+\n+    }\n+\n+    @BeforeAll\n+    public static void setup() {\n+        URL.setURLStreamHandlerFactory(new CustomURLStreamHandlerFactory());\n+    }\n+\n     @Test\n     void run(@TempDir final Path path) throws IOException {\n         final Path pluginFolder = path.resolve(\"test-plugins_\" + UUID.randomUUID().toString());"
  },
  {
    "sha": "50c8168555e76068f647d9e3934e937f98824fb6",
    "filename": "component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/xbean/NestedJarArchiveTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/xbean/NestedJarArchiveTest.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/xbean/NestedJarArchiveTest.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/component-runtime-manager/src/test/java/org/talend/sdk/component/runtime/manager/xbean/NestedJarArchiveTest.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -64,6 +64,7 @@ void xbeanNestedScanning(final TestInfo info, @TempDir final File temporaryFolde\n             assertEquals(\"org.talend.test.generated.\" + info.getTestMethod().get().getName() + \".Components\",\n                     annotatedClasses.iterator().next().getName());\n         } finally {\n+            configurableClassLoader.close();\n             URLClassLoader.class.cast(configurableClassLoader.getParent()).close();\n         }\n     }"
  },
  {
    "sha": "1554e12922e5e91eb80869b25d68944e8f975e92",
    "filename": "component-tools/src/main/java/org/talend/sdk/component/tools/DitaDocumentationGenerator.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/component-tools/src/main/java/org/talend/sdk/component/tools/DitaDocumentationGenerator.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/component-tools/src/main/java/org/talend/sdk/component/tools/DitaDocumentationGenerator.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/component-tools/src/main/java/org/talend/sdk/component/tools/DitaDocumentationGenerator.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -178,8 +178,8 @@ private void addDita(final ComponentDescription componentDescription, final Docu\n             final int refIdx = content.indexOf(\"<reference\");\n             zip\n                     .write((content.substring(0, refIdx)\n-                            + \"<!DOCTYPE reference PUBLIC \\\"-//Talend//DTD DITA Composite//EN\\\" \\\"TalendDitabase.dtd\\\">\\n\"\n-                            + content.substring(refIdx)).getBytes(StandardCharsets.UTF_8));\n+                            + \"<!DOCTYPE reference PUBLIC \\\"-//Talend//DTD DITA Composite//EN\\\" \\\"TalendDitabase.dtd\\\">\"\n+                            + System.lineSeparator() + content.substring(refIdx)).getBytes(StandardCharsets.UTF_8));\n             zip.closeEntry();\n         } catch (final IOException | TransformerException e) {\n             throw new IllegalStateException(e);"
  },
  {
    "sha": "dcb23c09bfa4ecf0ca1c53ea73d6be904f2132ef",
    "filename": "component-tools/src/test/java/org/talend/sdk/component/tools/DitaDocumentationGeneratorTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 4,
    "changes": 10,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/component-tools/src/test/java/org/talend/sdk/component/tools/DitaDocumentationGeneratorTest.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/component-tools/src/test/java/org/talend/sdk/component/tools/DitaDocumentationGeneratorTest.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/component-tools/src/test/java/org/talend/sdk/component/tools/DitaDocumentationGeneratorTest.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -61,10 +61,12 @@ void generateDita(@TempDir final File temporaryFolder, final TestInfo info) thro\n             }\n         }\n         try (final BufferedReader reader = resource(\"generateDita1.xml\")) {\n-            assertEquals(reader.lines().collect(joining(\"\\n\")), files.get(\"generateDita/test/my.dita\").trim());\n+            assertEquals(reader.lines().collect(joining(System.lineSeparator())),\n+                    files.get(\"generateDita/test/my.dita\").trim());\n         }\n         try (final BufferedReader reader = resource(\"generateDita2.xml\")) {\n-            assertEquals(reader.lines().collect(joining(\"\\n\")), files.get(\"generateDita/test/my2.dita\").trim());\n+            assertEquals(reader.lines().collect(joining(System.lineSeparator())),\n+                    files.get(\"generateDita/test/my2.dita\").trim());\n         }\n         assertEquals(4, files.size());\n         // folders\n@@ -88,7 +90,7 @@ void generateDitaConds(@TempDir final File temporaryFolder, final TestInfo info)\n         }\n \n         try (final BufferedReader reader = resource(\"generateDitaConds_activeif.xml\")) {\n-            assertEquals(formatXml(reader.lines().collect(joining(\"\\n\"))),\n+            assertEquals(formatXml(reader.lines().collect(joining(System.lineSeparator()))),\n                     formatXml(files.get(\"generateDitaConds/test/activeif.dita\")));\n         }\n     }\n@@ -113,7 +115,7 @@ void generateDitaAdvanced(final String _package, final String expectedFile, @Tem\n         }\n \n         try (final BufferedReader reader = resource(expectedFile)) {\n-            assertEquals(formatXml(reader.lines().collect(joining(\"\\n\"))),\n+            assertEquals(formatXml(reader.lines().collect(joining(System.lineSeparator()))),\n                     formatXml(files.get(\"generateDitaAdvanced/dita/\" + expectedFile).trim()));\n         }\n "
  },
  {
    "sha": "900ca07f6bf5091006abdce74b77d5b67191666e",
    "filename": "component-tools/src/test/java/org/talend/sdk/component/tools/StudioInstallerTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/component-tools/src/test/java/org/talend/sdk/component/tools/StudioInstallerTest.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/component-tools/src/test/java/org/talend/sdk/component/tools/StudioInstallerTest.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/component-tools/src/test/java/org/talend/sdk/component/tools/StudioInstallerTest.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -144,7 +144,7 @@ private void assertSetup(File studioHome) throws IOException {\n         final File configIni = new File(studioHome, \"configuration/config.ini\");\n         assertEquals(\n                 singleton(\"component.java.registry=\"\n-                        + registration.getAbsolutePath().replace(\"\\\\\", \"\\\\\\\\\").replace(\":\", \"\\\\:\")),\n+                        + registration.getAbsolutePath().replace(\"\\\\\", \"/\").replace(\"\\\\\", \"\\\\\\\\\").replace(\":\", \"\\\\:\")),\n                 Files.readAllLines(configIni.toPath()).stream().filter(l -> !l.startsWith(\"#\")).collect(toSet()));\n \n         assertTrue(new File(studioHome, \"configuration/.m2/repository/gtest/atest/1.0-SNAPSHOT/atest-1.0-SNAPSHOT.jar\")"
  },
  {
    "sha": "266928116f1603fc854dcfb653832cc462bf3064",
    "filename": "container/container-core/src/main/java/org/talend/sdk/component/classloader/ConfigurableClassLoader.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/container/container-core/src/main/java/org/talend/sdk/component/classloader/ConfigurableClassLoader.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/container/container-core/src/main/java/org/talend/sdk/component/classloader/ConfigurableClassLoader.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/container/container-core/src/main/java/org/talend/sdk/component/classloader/ConfigurableClassLoader.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -153,6 +153,7 @@ private void loadNestedDependencies(final ClassLoader parent, final String[] nes\n                 urlConnection = url.openConnection();\n                 if (JarURLConnection.class.isInstance(urlConnection)) {\n                     final JarURLConnection juc = JarURLConnection.class.cast(urlConnection);\n+                    juc.setUseCaches(false);\n                     manifest = juc.getManifest();\n \n                     final Certificate[] certificates = juc.getCertificates();"
  },
  {
    "sha": "4a7cf4589b77edac6ec4a09e5fc73983182598e3",
    "filename": "singer-parent/component-kitap/src/test/java/org/talend/sdk/component/singer/kitap/KitapTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/singer-parent/component-kitap/src/test/java/org/talend/sdk/component/singer/kitap/KitapTest.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/singer-parent/component-kitap/src/test/java/org/talend/sdk/component/singer/kitap/KitapTest.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/singer-parent/component-kitap/src/test/java/org/talend/sdk/component/singer/kitap/KitapTest.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -109,8 +109,8 @@ void discover() throws IOException {\n         flushIO.run();\n         assertEquals(\"{\\\"streams\\\":[\" + \"{\\\"tap_stream_id\\\":\\\"default\\\",\\\"stream\\\":\\\"default\\\",\"\n                 + \"\\\"schema\\\":{\\\"type\\\":[\\\"null\\\",\\\"object\\\"],\\\"additionalProperties\\\":false,\\\"properties\\\":{\\\"record_number\\\":{\\\"type\\\":[\\\"integer\\\"]}}},\"\n-                + \"\\\"metadata\\\":[{\\\"metadata\\\":{\\\"inclusion\\\":\\\"automatic\\\",\\\"selected-by-default\\\":true},\\\"breadcrumb\\\":[\\\"properties\\\",\\\"record_number\\\"]}]}]}\\n\",\n-                stdout.toString(\"UTF-8\"));\n+                + \"\\\"metadata\\\":[{\\\"metadata\\\":{\\\"inclusion\\\":\\\"automatic\\\",\\\"selected-by-default\\\":true},\\\"breadcrumb\\\":[\\\"properties\\\",\\\"record_number\\\"]}]}]}\"\n+                + System.lineSeparator(), stdout.toString(\"UTF-8\"));\n     }\n \n     @Test"
  },
  {
    "sha": "15f4626a65faa231c0580dcdc0ecac4afc51102d",
    "filename": "singer-parent/singer-java/src/test/java/org/talend/sdk/component/singer/java/IOTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Talend/component-runtime/blob/83882fa9023fe6db861fedb7832ace0265c3192a/singer-parent/singer-java/src/test/java/org/talend/sdk/component/singer/java/IOTest.java",
    "raw_url": "https://github.com/Talend/component-runtime/raw/83882fa9023fe6db861fedb7832ace0265c3192a/singer-parent/singer-java/src/test/java/org/talend/sdk/component/singer/java/IOTest.java",
    "contents_url": "https://api.github.com/repos/Talend/component-runtime/contents/singer-parent/singer-java/src/test/java/org/talend/sdk/component/singer/java/IOTest.java?ref=83882fa9023fe6db861fedb7832ace0265c3192a",
    "patch": "@@ -48,8 +48,8 @@ public int read() {\n             System.err.println(\"test err stash\");\n             stderrPs.flush();\n \n-            assertEquals(\"test out stash\\n\", stdout.toString(\"UTF-8\"));\n-            assertEquals(\"test err stash\\n\", stderr.toString(\"UTF-8\"));\n+            assertEquals(\"test out stash\" + System.lineSeparator(), stdout.toString(\"UTF-8\"));\n+            assertEquals(\"test err stash\" + System.lineSeparator(), stderr.toString(\"UTF-8\"));\n         } finally {\n             testIO.set();\n         }"
  }
]
