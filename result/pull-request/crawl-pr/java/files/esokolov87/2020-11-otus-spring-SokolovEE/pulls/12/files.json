[
  {
    "sha": "549e00a2a96fa9d7c5dbc9859664a78d980158c2",
    "filename": "spring-13/.gitignore",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/.gitignore",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/.gitignore",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/.gitignore?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,33 @@\n+HELP.md\n+target/\n+!.mvn/wrapper/maven-wrapper.jar\n+!**/src/main/**/target/\n+!**/src/test/**/target/\n+\n+### STS ###\n+.apt_generated\n+.classpath\n+.factorypath\n+.project\n+.settings\n+.springBeans\n+.sts4-cache\n+\n+### IntelliJ IDEA ###\n+.idea\n+*.iws\n+*.iml\n+*.ipr\n+\n+### NetBeans ###\n+/nbproject/private/\n+/nbbuild/\n+/dist/\n+/nbdist/\n+/.nb-gradle/\n+build/\n+!**/src/main/**/build/\n+!**/src/test/**/build/\n+\n+### VS Code ###\n+.vscode/"
  },
  {
    "sha": "a16b5431b4c3cab50323a3f558003fd0abd87dad",
    "filename": "spring-13/mvnw",
    "status": "added",
    "additions": 310,
    "deletions": 0,
    "changes": 310,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/mvnw",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/mvnw",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/mvnw?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,310 @@\n+#!/bin/sh\n+# ----------------------------------------------------------------------------\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#    https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+# ----------------------------------------------------------------------------\n+\n+# ----------------------------------------------------------------------------\n+# Maven Start Up Batch script\n+#\n+# Required ENV vars:\n+# ------------------\n+#   JAVA_HOME - location of a JDK home dir\n+#\n+# Optional ENV vars\n+# -----------------\n+#   M2_HOME - location of maven2's installed home dir\n+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+#     e.g. to debug Maven itself, use\n+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+# ----------------------------------------------------------------------------\n+\n+if [ -z \"$MAVEN_SKIP_RC\" ] ; then\n+\n+  if [ -f /etc/mavenrc ] ; then\n+    . /etc/mavenrc\n+  fi\n+\n+  if [ -f \"$HOME/.mavenrc\" ] ; then\n+    . \"$HOME/.mavenrc\"\n+  fi\n+\n+fi\n+\n+# OS specific support.  $var _must_ be set to either true or false.\n+cygwin=false;\n+darwin=false;\n+mingw=false\n+case \"`uname`\" in\n+  CYGWIN*) cygwin=true ;;\n+  MINGW*) mingw=true;;\n+  Darwin*) darwin=true\n+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n+    if [ -z \"$JAVA_HOME\" ]; then\n+      if [ -x \"/usr/libexec/java_home\" ]; then\n+        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n+      else\n+        export JAVA_HOME=\"/Library/Java/Home\"\n+      fi\n+    fi\n+    ;;\n+esac\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  if [ -r /etc/gentoo-release ] ; then\n+    JAVA_HOME=`java-config --jre-home`\n+  fi\n+fi\n+\n+if [ -z \"$M2_HOME\" ] ; then\n+  ## resolve links - $0 may be a link to maven's home\n+  PRG=\"$0\"\n+\n+  # need this for relative symlinks\n+  while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+      PRG=\"$link\"\n+    else\n+      PRG=\"`dirname \"$PRG\"`/$link\"\n+    fi\n+  done\n+\n+  saveddir=`pwd`\n+\n+  M2_HOME=`dirname \"$PRG\"`/..\n+\n+  # make it fully qualified\n+  M2_HOME=`cd \"$M2_HOME\" && pwd`\n+\n+  cd \"$saveddir\"\n+  # echo Using m2 at $M2_HOME\n+fi\n+\n+# For Cygwin, ensure paths are in UNIX format before anything is touched\n+if $cygwin ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\n+fi\n+\n+# For Mingw, ensure paths are in UNIX format before anything is touched\n+if $mingw ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ]; then\n+  javaExecutable=\"`which javac`\"\n+  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n+    # readlink(1) is not available as standard on Solaris 10.\n+    readLink=`which readlink`\n+    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n+      if $darwin ; then\n+        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n+      else\n+        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n+      fi\n+      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n+      JAVA_HOME=\"$javaHome\"\n+      export JAVA_HOME\n+    fi\n+  fi\n+fi\n+\n+if [ -z \"$JAVACMD\" ] ; then\n+  if [ -n \"$JAVA_HOME\"  ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+      # IBM's JDK on AIX uses strange locations for the executables\n+      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+      JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+  else\n+    JAVACMD=\"`which java`\"\n+  fi\n+fi\n+\n+if [ ! -x \"$JAVACMD\" ] ; then\n+  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n+  echo \"  We cannot execute $JAVACMD\" >&2\n+  exit 1\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  echo \"Warning: JAVA_HOME environment variable is not set.\"\n+fi\n+\n+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n+\n+# traverses directory structure from process work directory to filesystem root\n+# first directory with .mvn subdirectory is considered project base directory\n+find_maven_basedir() {\n+\n+  if [ -z \"$1\" ]\n+  then\n+    echo \"Path not specified to find_maven_basedir\"\n+    return 1\n+  fi\n+\n+  basedir=\"$1\"\n+  wdir=\"$1\"\n+  while [ \"$wdir\" != '/' ] ; do\n+    if [ -d \"$wdir\"/.mvn ] ; then\n+      basedir=$wdir\n+      break\n+    fi\n+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n+    if [ -d \"${wdir}\" ]; then\n+      wdir=`cd \"$wdir/..\"; pwd`\n+    fi\n+    # end of workaround\n+  done\n+  echo \"${basedir}\"\n+}\n+\n+# concatenates all lines of a file\n+concat_lines() {\n+  if [ -f \"$1\" ]; then\n+    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n+  fi\n+}\n+\n+BASE_DIR=`find_maven_basedir \"$(pwd)\"`\n+if [ -z \"$BASE_DIR\" ]; then\n+  exit 1;\n+fi\n+\n+##########################################################################################\n+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+# This allows using the maven wrapper in projects that prohibit checking in binary data.\n+##########################################################################################\n+if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n+    fi\n+else\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n+    fi\n+    if [ -n \"$MVNW_REPOURL\" ]; then\n+      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    else\n+      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    fi\n+    while IFS=\"=\" read key value; do\n+      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n+      esac\n+    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Downloading from: $jarUrl\"\n+    fi\n+    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n+    if $cygwin; then\n+      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n+    fi\n+\n+    if command -v wget > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found wget ... using wget\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n+        else\n+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n+        fi\n+    elif command -v curl > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found curl ... using curl\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        else\n+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        fi\n+\n+    else\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Falling back to using Java to download\"\n+        fi\n+        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n+        # For Cygwin, switch paths to Windows format before running javac\n+        if $cygwin; then\n+          javaClass=`cygpath --path --windows \"$javaClass\"`\n+        fi\n+        if [ -e \"$javaClass\" ]; then\n+            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n+                fi\n+                # Compiling the Java class\n+                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n+            fi\n+            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                # Running the downloader\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Running MavenWrapperDownloader.java ...\"\n+                fi\n+                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n+            fi\n+        fi\n+    fi\n+fi\n+##########################################################################################\n+# End of extension\n+##########################################################################################\n+\n+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\n+if [ \"$MVNW_VERBOSE\" = true ]; then\n+  echo $MAVEN_PROJECTBASEDIR\n+fi\n+MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n+  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\n+fi\n+\n+# Provide a \"standardized\" way to retrieve the CLI args that will\n+# work with both Windows and non-Windows executions.\n+MAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\n+export MAVEN_CMD_LINE_ARGS\n+\n+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+exec \"$JAVACMD\" \\\n+  $MAVEN_OPTS \\\n+  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n+  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\""
  },
  {
    "sha": "c8d43372c986d97911cdc21bd87e0cbe3d83bdda",
    "filename": "spring-13/mvnw.cmd",
    "status": "added",
    "additions": 182,
    "deletions": 0,
    "changes": 182,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/mvnw.cmd",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/mvnw.cmd",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/mvnw.cmd?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,182 @@\n+@REM ----------------------------------------------------------------------------\n+@REM Licensed to the Apache Software Foundation (ASF) under one\n+@REM or more contributor license agreements.  See the NOTICE file\n+@REM distributed with this work for additional information\n+@REM regarding copyright ownership.  The ASF licenses this file\n+@REM to you under the Apache License, Version 2.0 (the\n+@REM \"License\"); you may not use this file except in compliance\n+@REM with the License.  You may obtain a copy of the License at\n+@REM\n+@REM    https://www.apache.org/licenses/LICENSE-2.0\n+@REM\n+@REM Unless required by applicable law or agreed to in writing,\n+@REM software distributed under the License is distributed on an\n+@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+@REM KIND, either express or implied.  See the License for the\n+@REM specific language governing permissions and limitations\n+@REM under the License.\n+@REM ----------------------------------------------------------------------------\n+\n+@REM ----------------------------------------------------------------------------\n+@REM Maven Start Up Batch script\n+@REM\n+@REM Required ENV vars:\n+@REM JAVA_HOME - location of a JDK home dir\n+@REM\n+@REM Optional ENV vars\n+@REM M2_HOME - location of maven2's installed home dir\n+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+@REM     e.g. to debug Maven itself, use\n+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+@REM ----------------------------------------------------------------------------\n+\n+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n+@echo off\n+@REM set title of command window\n+title %0\n+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n+@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n+\n+@REM set %HOME% to equivalent of $HOME\n+if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n+\n+@REM Execute a user defined script before this one\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n+@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n+if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n+:skipRcPre\n+\n+@setlocal\n+\n+set ERROR_CODE=0\n+\n+@REM To isolate internal variables from possible post scripts, we use another setlocal\n+@setlocal\n+\n+@REM ==== START VALIDATION ====\n+if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n+\n+echo.\n+echo Error: JAVA_HOME not found in your environment. >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+:OkJHome\n+if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n+\n+echo.\n+echo Error: JAVA_HOME is set to an invalid directory. >&2\n+echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+@REM ==== END VALIDATION ====\n+\n+:init\n+\n+@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n+@REM Fallback to current working directory if not found.\n+\n+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n+IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n+\n+set EXEC_DIR=%CD%\n+set WDIR=%EXEC_DIR%\n+:findBaseDir\n+IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n+cd ..\n+IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n+set WDIR=%CD%\n+goto findBaseDir\n+\n+:baseDirFound\n+set MAVEN_PROJECTBASEDIR=%WDIR%\n+cd \"%EXEC_DIR%\"\n+goto endDetectBaseDir\n+\n+:baseDirNotFound\n+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n+cd \"%EXEC_DIR%\"\n+\n+:endDetectBaseDir\n+\n+IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n+\n+@setlocal EnableExtensions EnableDelayedExpansion\n+for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n+\n+:endReadAdditionalConfig\n+\n+SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n+set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+\n+FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n+    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n+)\n+\n+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n+if exist %WRAPPER_JAR% (\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Found %WRAPPER_JAR%\n+    )\n+) else (\n+    if not \"%MVNW_REPOURL%\" == \"\" (\n+        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    )\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n+        echo Downloading from: %DOWNLOAD_URL%\n+    )\n+\n+    powershell -Command \"&{\"^\n+\t\t\"$webclient = new-object System.Net.WebClient;\"^\n+\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n+\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n+\t\t\"}\"^\n+\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n+\t\t\"}\"\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Finished downloading %WRAPPER_JAR%\n+    )\n+)\n+@REM End of extension\n+\n+@REM Provide a \"standardized\" way to retrieve the CLI args that will\n+@REM work with both Windows and non-Windows executions.\n+set MAVEN_CMD_LINE_ARGS=%*\n+\n+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n+if ERRORLEVEL 1 goto error\n+goto end\n+\n+:error\n+set ERROR_CODE=1\n+\n+:end\n+@endlocal & set ERROR_CODE=%ERROR_CODE%\n+\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n+@REM check for post script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\n+if exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n+:skipRcPost\n+\n+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\n+if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n+\n+if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n+\n+exit /B %ERROR_CODE%"
  },
  {
    "sha": "c5e11797cfee2af35f11e6c3a438accd076a12a9",
    "filename": "spring-13/pom.xml",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/pom.xml",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/pom.xml",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/pom.xml?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,82 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<parent>\n+\t\t<groupId>org.springframework.boot</groupId>\n+\t\t<artifactId>spring-boot-starter-parent</artifactId>\n+\t\t<version>2.4.3</version>\n+\t\t<relativePath/> <!-- lookup parent from repository -->\n+\t</parent>\n+\t<groupId>ru.sokolovee</groupId>\n+\t<artifactId>spring-13</artifactId>\n+\t<version>0.0.1-SNAPSHOT</version>\n+\t<name>spring-13</name>\n+\t<description>Demo project for Spring Boot</description>\n+\t<properties>\n+\t\t<java.version>11</java.version>\n+\t</properties>\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.thymeleaf.extras</groupId>\n+\t\t\t<artifactId>thymeleaf-extras-springsecurity5</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.security</groupId>\n+\t\t\t<artifactId>spring-security-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.h2database</groupId>\n+\t\t\t<artifactId>h2</artifactId>\n+\t\t\t<version>1.4.200</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.projectlombok</groupId>\n+\t\t\t<artifactId>lombok</artifactId>\n+\t\t\t<version>1.18.16</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.webjars</groupId>\n+\t\t\t<artifactId>jquery</artifactId>\n+\t\t\t<version>3.3.1</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>junit</groupId>\n+\t\t\t<artifactId>junit</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t</dependencies>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+</project>"
  },
  {
    "sha": "e171260391af12fa2991435c9754ea856033721f",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/Spring13Application.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/Spring13Application.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/Spring13Application.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/Spring13Application.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,17 @@\n+package ru.sokolovee.spring13;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+\n+@EnableWebSecurity\n+@EnableGlobalMethodSecurity(securedEnabled = true, prePostEnabled = true)\n+@SpringBootApplication\n+public class Spring13Application {\n+\n+\tpublic static void main(String[] args) {\n+\t\tSpringApplication.run(Spring13Application.class, args);\n+\t}\n+\n+}"
  },
  {
    "sha": "790ac4d223995360c44ecd1775beebb0b6d00c14",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/configuration/SecurityConfiguration.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/configuration/SecurityConfiguration.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/configuration/SecurityConfiguration.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/configuration/SecurityConfiguration.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,54 @@\n+package ru.sokolovee.spring13.configuration;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.builders.WebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.crypto.password.NoOpPasswordEncoder;\n+import org.springframework.security.crypto.password.PasswordEncoder;\n+\n+import javax.sql.DataSource;\n+\n+@EnableWebSecurity\n+@RequiredArgsConstructor\n+public class SecurityConfiguration extends WebSecurityConfigurerAdapter {\n+\n+    private final DataSource dataSource;\n+\n+    @Override\n+    public void configure(WebSecurity web) {\n+        web.ignoring()\n+                .antMatchers(\"/h2-console/**\")\n+                .antMatchers(\"/templates/**\");\n+    }\n+\n+    @Override\n+    public void configure(HttpSecurity http) throws Exception {\n+        http.csrf().disable()\n+                .authorizeRequests().antMatchers(\"/login\").anonymous()\n+                .and()\n+                .authorizeRequests()\n+                .antMatchers(\"/bookList\").authenticated()\n+                .antMatchers(\"/bookInfo/**\").authenticated()\n+                .antMatchers(\"/addBook\").hasRole( \"ADMIN\" )\n+                .and()\n+                .formLogin().defaultSuccessUrl(\"/bookList\")\n+                .and()\n+                .rememberMe().key(\"otus\");\n+    }\n+\n+    @Bean\n+    public PasswordEncoder passwordEncoder() {\n+        return NoOpPasswordEncoder.getInstance();\n+    }\n+\n+    @Autowired\n+    public void configure(AuthenticationManagerBuilder auth) throws Exception {\n+        auth.jdbcAuthentication()\n+                .dataSource(dataSource);\n+    }\n+}"
  },
  {
    "sha": "c0dfda028f82b643e77c932a37d9d6e836bba500",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/controllers/BookController.java",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/controllers/BookController.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/controllers/BookController.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/controllers/BookController.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,68 @@\n+package ru.sokolovee.spring13.controllers;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.security.access.annotation.Secured;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import ru.sokolovee.spring13.entities.Book;\n+import ru.sokolovee.spring13.entities.Comment;\n+import ru.sokolovee.spring13.repositories.AuthorRepository;\n+import ru.sokolovee.spring13.repositories.BookRepository;\n+import ru.sokolovee.spring13.repositories.CommentRepository;\n+import ru.sokolovee.spring13.repositories.GenreRepository;\n+\n+import javax.transaction.Transactional;\n+\n+@Controller\n+@RequiredArgsConstructor\n+@Transactional\n+public class BookController {\n+\n+    private final BookRepository bookRepository;\n+    private final CommentRepository commentRepository;\n+    private final AuthorRepository authorRepository;\n+    private final GenreRepository genreRepository;\n+\n+    @Secured({\"ROLE_ADMIN\", \"ROLE_USER\"})\n+    @GetMapping(\"/bookList\")\n+    public String getAllBooks(Model model) {\n+        model.addAttribute(\"books\", bookRepository.findAll());\n+        return \"bookList\";\n+    }\n+\n+    @Secured({\"ROLE_ADMIN\", \"ROLE_USER\"})\n+    @GetMapping(\"/bookInfo/{id}\")\n+    public String getBook(@PathVariable(\"id\") Long id, Model model) {\n+        Book book = bookRepository.findById(id).orElse(null);\n+        model.addAttribute(\"authors\", authorRepository.findAll());\n+        model.addAttribute(\"genres\", genreRepository.findAll());\n+        model.addAttribute(\"book\", book);\n+        model.addAttribute(\"comments\", commentRepository.findAllByBook(book));\n+        model.addAttribute(\"newcomment\", new Comment(0l));\n+        return \"book\";\n+    }\n+\n+    @Secured( \"ROLE_ADMIN\" )\n+    @PostMapping(\"/createBook\")\n+    public String createBook(Book book, Model model) {\n+        book = bookRepository.save(book);\n+        model.addAttribute(\"book\", book);\n+        return \"redirect:/bookInfo/\" + book.getId();\n+    }\n+\n+    @Secured( \"ROLE_ADMIN\" )\n+    @PostMapping(\"/addBook\")\n+    public String addBook(Model model) {\n+        Book book = new Book();\n+        book.setId(0l);\n+        model.addAttribute(\"book\", book);\n+        model.addAttribute(\"authors\", authorRepository.findAll());\n+        model.addAttribute(\"genres\", genreRepository.findAll());\n+        return \"addBook\";\n+    }\n+\n+\n+}"
  },
  {
    "sha": "6e24fd38e30a38da1eaf1c07477d5d11e38e12b1",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/controllers/rest/BookRestController.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/controllers/rest/BookRestController.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/controllers/rest/BookRestController.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/controllers/rest/BookRestController.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,35 @@\n+package ru.sokolovee.spring13.controllers.rest;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.web.bind.annotation.*;\n+import ru.sokolovee.spring13.entities.Book;\n+import ru.sokolovee.spring13.repositories.AuthorRepository;\n+import ru.sokolovee.spring13.repositories.BookRepository;\n+import ru.sokolovee.spring13.repositories.GenreRepository;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class BookRestController {\n+    private final AuthorRepository authorRepository;\n+    private final GenreRepository genreRepository;\n+    private final BookRepository bookRepository;\n+\n+    @PreAuthorize(\"hasRole('ROLE_ADMIN')\")\n+    @PatchMapping(\"/book/{id}\")\n+    public void updateBook(@PathVariable Long id, @RequestParam String name, @RequestParam Long authorid, @RequestParam Long genreid) {\n+        Book book = bookRepository.getOne(id);\n+        book.setName(name);\n+        book.setAuthor(authorRepository.getOne(authorid));\n+        book.setGenre(genreRepository.getOne(genreid));\n+        bookRepository.save(book);\n+    }\n+\n+\n+    @PreAuthorize(\"hasRole('ROLE_ADMIN')\")\n+    @DeleteMapping(\"/book/{id}\")\n+    public void deleteBook(@PathVariable Long id) {\n+        bookRepository.deleteById(id);\n+    }\n+\n+}"
  },
  {
    "sha": "bdf52370715d618d61b500426cb579b26dc6e837",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/controllers/rest/CommentRestController.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/controllers/rest/CommentRestController.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/controllers/rest/CommentRestController.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/controllers/rest/CommentRestController.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,30 @@\n+package ru.sokolovee.spring13.controllers.rest;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.security.access.annotation.Secured;\n+import org.springframework.web.bind.annotation.*;\n+import ru.sokolovee.spring13.entities.Comment;\n+import ru.sokolovee.spring13.repositories.BookRepository;\n+import ru.sokolovee.spring13.repositories.CommentRepository;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class CommentRestController {\n+\n+    private final CommentRepository commentRepository;\n+    private final BookRepository bookRepository;\n+\n+    @Secured(\"ROLE_ADMIN\")\n+    @DeleteMapping(\"/comment/{id}\")\n+    public void deleteComment(@PathVariable Long id) {\n+        commentRepository.deleteById(id);\n+    }\n+\n+    @Secured({\"ROLE_ADMIN\", \"ROLE_USER\"})\n+    @PostMapping(\"book/{bookId}/comment\")\n+    public Long newComment(@PathVariable Long bookId, @RequestParam String comment) {\n+        Comment c = new Comment(null, bookRepository.getOne(bookId), comment);\n+        c = commentRepository.save(c);\n+        return c.getId();\n+    }\n+}"
  },
  {
    "sha": "3f50b024a85ce8dbdda1dbd5d35e30353d74d423",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/entities/Author.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/entities/Author.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/entities/Author.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/entities/Author.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.sokolovee.spring13.entities;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.persistence.*;\n+\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Data\n+@Entity\n+@Table(name = \"Author\")\n+public class Author {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"GENERATOR_AUTHOR_SEQ\")\n+    @SequenceGenerator(name = \"GENERATOR_AUTHOR_SEQ\", sequenceName = \"AUTHOR_SEQ\", initialValue = 5, allocationSize = 1)\n+    private long id;\n+    private String name;\n+\n+    public Author(long id) {\n+        this.id = id;\n+    }\n+}"
  },
  {
    "sha": "be5e7a76383ec82d513ae7b9caf2ba1ffa7d2982",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/entities/Book.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/entities/Book.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/entities/Book.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/entities/Book.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,57 @@\n+package ru.sokolovee.spring13.entities;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import org.hibernate.annotations.Fetch;\n+import org.hibernate.annotations.FetchMode;\n+\n+import javax.persistence.*;\n+\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Getter\n+@Setter\n+@Entity\n+@Table(name = \"Book\")\n+@NamedEntityGraph(name = \"book-entity-graph\", attributeNodes = {@NamedAttributeNode(\"author\"), @NamedAttributeNode(\"genre\")})\n+\n+public class Book {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"GENERATOR_BOOK_SEQ\")\n+    @SequenceGenerator(name = \"GENERATOR_BOOK_SEQ\", sequenceName = \"BOOK_SEQ\", initialValue = 5, allocationSize = 1)\n+    private Long id;\n+\n+    private String name;\n+\n+    @Fetch(FetchMode.JOIN)\n+    @ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"author_id\", referencedColumnName = \"id\")\n+    private Author author;\n+\n+    @Fetch(FetchMode.JOIN)\n+    @ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"genre_id\", referencedColumnName = \"id\")\n+    private Genre genre;\n+\n+    public Book(String name, Author author, Genre genre) {\n+        this.name = name;\n+        this.author = author;\n+        this.genre = genre;\n+    }\n+\n+    public Book(Long id) {\n+        this.id = id;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Book{\" +\n+                \"id=\" + id +\n+                \", name='\" + name + '\\'' +\n+                \", author=\" + author +\n+                \", genre=\" + genre +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "4c606395ace14ec90a38219e0b3797ccf06ad7a6",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/entities/Comment.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/entities/Comment.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/entities/Comment.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/entities/Comment.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.sokolovee.spring13.entities;\n+\n+import lombok.*;\n+import org.hibernate.annotations.Fetch;\n+import org.hibernate.annotations.FetchMode;\n+\n+import javax.persistence.*;\n+\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Getter\n+@Setter\n+@Entity\n+@Table(name = \"Comment\")\n+public class Comment {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"GENERATOR_COMMENT_SEQ\")\n+    @SequenceGenerator(name = \"GENERATOR_COMMENT_SEQ\", sequenceName = \"COMMENT_SEQ\", initialValue = 5, allocationSize = 1)\n+    private Long id;\n+    @Fetch(FetchMode.JOIN)\n+    @ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.LAZY)\n+    @JoinColumn(name = \"book_id\", referencedColumnName = \"id\")\n+    private Book book;\n+    private String comment;\n+\n+    @Override\n+    public String toString() {\n+        return \"Comment{\" +\n+                \"id=\" + id +\n+                \", book=\" + book.getName() +\n+                \", comment='\" + comment + '\\'' +\n+                '}';\n+    }\n+\n+    public Comment(Long id) {\n+        this.id = id;\n+    }\n+}\n+"
  },
  {
    "sha": "85116b06a2dfe78189264a3a4aba6d8c12740270",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/entities/Genre.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/entities/Genre.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/entities/Genre.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/entities/Genre.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,25 @@\n+package ru.sokolovee.spring13.entities;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.persistence.*;\n+\n+\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Data\n+@Entity\n+@Table(name = \"Genre\")\n+public class Genre {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"GENERATOR_GENRE_SEQ\")\n+    @SequenceGenerator(name = \"GENERATOR_GENRE_SEQ\", sequenceName = \"GENRE_SEQ\", initialValue = 5, allocationSize = 1)\n+    private Long id;\n+    private String name;\n+\n+    public Genre(Long id) {\n+        this.id = id;\n+    }\n+}"
  },
  {
    "sha": "bf43fdd9571201bead26c437c2d026661bb3b64b",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/repositories/AuthorRepository.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/repositories/AuthorRepository.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/repositories/AuthorRepository.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/repositories/AuthorRepository.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,9 @@\n+package ru.sokolovee.spring13.repositories;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+import ru.sokolovee.spring13.entities.Author;\n+\n+@Repository\n+public interface AuthorRepository extends JpaRepository<Author, Long> {\n+}"
  },
  {
    "sha": "fc3e89b7201c5866d1c1e56bd023b0bc6d7cea26",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/repositories/BookRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/repositories/BookRepository.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/repositories/BookRepository.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/repositories/BookRepository.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.sokolovee.spring13.repositories;\n+\n+import org.springframework.data.jpa.repository.EntityGraph;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+import ru.sokolovee.spring13.entities.Book;\n+\n+import java.util.List;\n+\n+@Repository\n+public interface BookRepository extends JpaRepository<Book, Long> {\n+    @EntityGraph(value = \"book-entity-graph\")\n+    List<Book> findAll();\n+}"
  },
  {
    "sha": "1674a8710b9c2fd4c65b21848b4b3a53f5038d24",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/repositories/CommentRepository.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/repositories/CommentRepository.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/repositories/CommentRepository.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/repositories/CommentRepository.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.sokolovee.spring13.repositories;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+import ru.sokolovee.spring13.entities.Book;\n+import ru.sokolovee.spring13.entities.Comment;\n+\n+import java.util.List;\n+\n+@Repository\n+public interface CommentRepository extends JpaRepository<Comment, Long> {\n+    List<Comment> findAllByBook(Book book);\n+}"
  },
  {
    "sha": "45e4eb5fb8486c9ae5e2050c0951c16936595808",
    "filename": "spring-13/src/main/java/ru/sokolovee/spring13/repositories/GenreRepository.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/repositories/GenreRepository.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/java/ru/sokolovee/spring13/repositories/GenreRepository.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/java/ru/sokolovee/spring13/repositories/GenreRepository.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,9 @@\n+package ru.sokolovee.spring13.repositories;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+import ru.sokolovee.spring13.entities.Genre;\n+\n+@Repository\n+public interface GenreRepository extends JpaRepository<Genre, Long> {\n+}"
  },
  {
    "sha": "a2baaf9347f042d04967c3c0e5c9bbbc34d93343",
    "filename": "spring-13/src/main/resources/application.yml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/application.yml",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/resources/application.yml?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,20 @@\n+spring:\n+  datasource:\n+    url: jdbc:h2:mem:testdb\n+    initialization-mode: always\n+  h2:\n+    console:\n+      enabled: true\n+      path: /h2-console\n+      settings:\n+        web-allow-others: true\n+  jpa:\n+    generate-ddl: false\n+    hibernate:\n+      ddl-auto: none\n+\n+    properties:\n+      hibernate:\n+        format_sql: false\n+\n+    show-sql: true"
  },
  {
    "sha": "17df87532ce22be5ebf337a6ded7922c86a3c8e9",
    "filename": "spring-13/src/main/resources/data.sql",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/data.sql",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/data.sql",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/resources/data.sql?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,37 @@\n+insert into genre (id, name)\n+values (1, 'Фантастика'),\n+       (2, 'Научная литература'),\n+       (3, 'Ужасы'),\n+       (4, 'Классика');\n+\n+insert into author (id, name)\n+values (1, 'Пушкин А.С.'),\n+       (2, 'Стивен Кинг'),\n+       (3, 'Джорж Мартин'),\n+       (4, 'Стивен Хокинг');\n+\n+insert into comment (id, book_id, comment)\n+values (1, 1, 'Книга Пушкина А.С. \"Руслан и Людмила\", жанр Классика'),\n+       (2, 3, 'Стивен Хокинга \"Краткая история времени\", жанр Научная литература'),\n+       (3, 4, 'Книга Стивен Кинга \"Оно\", жанр Ужасы'),\n+       (4, 2, 'Джорж Мартина \"Игра престолов\", жанр Фантастика');\n+\n+insert into book (id, name, author_id, genre_id)\n+values (1, 'Руслан и Людмила', 1, 4),\n+       (2, 'Игра престолов', 3, 1),\n+       (3, 'Краткая история времени', 4, 2),\n+       (4, 'Оно', 2, 3);\n+\n+\n+CREATE SEQUENCE BOOK_SEQ START WITH 5 INCREMENT BY 1;\n+CREATE SEQUENCE AUTHOR_SEQ START WITH 5 INCREMENT BY 1;\n+CREATE SEQUENCE GENRE_SEQ START WITH 5 INCREMENT BY 1;\n+CREATE SEQUENCE COMMENT_SEQ START WITH 5 INCREMENT BY 1;\n+\n+INSERT INTO users (username, password, enabled)\n+values  ('user', 'user', 1),\n+        ('admin', 'admin', 1);\n+\n+INSERT INTO authorities (username, authority)\n+values  ('user', 'ROLE_USER'),\n+        ('admin', 'ROLE_ADMIN');\n\\ No newline at end of file"
  },
  {
    "sha": "a726d90d15898076ba1d7f285069f94d95206cdd",
    "filename": "spring-13/src/main/resources/schema.sql",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/schema.sql",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/schema.sql",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/resources/schema.sql?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,60 @@\n+CREATE TABLE AUTHOR\n+(\n+    ID   BIGINT PRIMARY KEY,\n+    NAME VARCHAR(255)\n+);\n+\n+CREATE TABLE BOOK\n+(\n+    ID        BIGINT PRIMARY KEY,\n+    NAME      VARCHAR(255),\n+    AUTHOR_ID BIGINT,\n+    GENRE_ID  BIGINT\n+);\n+\n+CREATE TABLE GENRE\n+(\n+    ID   BIGINT PRIMARY KEY,\n+    NAME VARCHAR(255)\n+);\n+\n+CREATE TABLE COMMENT\n+(\n+    ID      BIGINT PRIMARY KEY,\n+    BOOK_ID BIGINT,\n+    COMMENT VARCHAR(255)\n+);\n+\n+CREATE TABLE BOOK_COMMENTS\n+(\n+    BOOK_ID    BIGINT,\n+    COMMENT_ID BIGINT\n+);\n+\n+ALTER TABLE BOOK\n+    ADD CONSTRAINT FK_BOOK_AUTHOR FOREIGN KEY (AUTHOR_ID)\n+        REFERENCES AUTHOR (ID)\n+;\n+ALTER TABLE BOOK\n+    ADD CONSTRAINT FK_BOOK_GENRE FOREIGN KEY (GENRE_ID)\n+        REFERENCES GENRE (ID)\n+;\n+\n+\n+CREATE TABLE users\n+(\n+    username VARCHAR(50)  NOT NULL,\n+    password VARCHAR(100) NOT NULL,\n+    enabled  TINYINT      NOT NULL DEFAULT 1,\n+    PRIMARY KEY (username)\n+);\n+\n+CREATE TABLE authorities\n+(\n+    username  VARCHAR(50) NOT NULL,\n+    authority VARCHAR(50) NOT NULL,\n+    FOREIGN KEY (username) REFERENCES users (username)\n+);\n+\n+CREATE UNIQUE INDEX ix_auth_username\n+    on authorities (username, authority);\n\\ No newline at end of file"
  },
  {
    "sha": "a2e82ecefba5aa1c147721ccc9ad70eacb59d619",
    "filename": "spring-13/src/main/resources/templates/addBook.html",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/templates/addBook.html",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/templates/addBook.html",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/resources/templates/addBook.html?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,59 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>Book info</title>\n+    <style type=\"text/css\">\n+        body {\n+            padding: 50px;\n+        }\n+\n+        label {\n+            display: inline-block;\n+            width: 100px;\n+        }\n+\n+        input:read-only {\n+            background: #d3d3d3;\n+        }\n+\n+        .row {\n+            margin-top: 10px;\n+        }\n+    </style>\n+</head>\n+<body>\n+<a href=\"/bookList\">Return to book list</a>\n+<form id=\"book-form\" th:action=\"@{/createBook}\" th:method=\"post\" action=\"addBook.html\">\n+    <h1>New Book:</h1>\n+\n+    <div class=\"row\" hidden>\n+        <label for=\"id-input\">id:</label>\n+        <input id=\"id-input\" name=\"id\" type=\"text\" th:value=\"${book.id}\" value=\"0\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"name-input\">Name:</label>\n+        <input id=\"name-input\" name=\"name\" type=\"text\" th:value=\"${book.name}\" value=\"Мастер и Маргарита\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"author-input\">Author:</label>\n+        <select id=\"author-input\" th:field=\"${book.author.id}\">\n+            <option th:each=\"author : ${authors}\" th:value=\"${author.id}\" th:text=\"${author.name}\">Пушкин</option>\n+        </select>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"genre-input\">Genre:</label>\n+        <select id=\"genre-input\" th:field=\"${book.genre.id}\">\n+            <option th:each=\"genre : ${genres}\" th:value=\"${genre.id}\" th:text=\"${genre.name}\">Фантастика</option>\n+        </select>\n+    </div>\n+\n+    <div class=\"row\">\n+        <button type=\"submit\">Save</button>\n+    </div>\n+\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "70828b73a99f22ccb82a7f553b66f27fc5e43ce9",
    "filename": "spring-13/src/main/resources/templates/book.html",
    "status": "added",
    "additions": 182,
    "deletions": 0,
    "changes": 182,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/templates/book.html",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/templates/book.html",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/resources/templates/book.html?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,182 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>Book info</title>\n+    <style type=\"text/css\">\n+        body {\n+            padding: 50px;\n+        }\n+\n+        label {\n+            display: inline-block;\n+            width: 100px;\n+        }\n+\n+        input:read-only {\n+            background: #d3d3d3;\n+        }\n+\n+        .row {\n+            margin-top: 10px;\n+        }\n+\n+        .comments, .comments td {\n+            border: 1px solid lightgray;\n+            padding: 5px;\n+        }\n+    </style>\n+    <script src=\"/webjars/jquery/3.3.1/jquery.min.js\">\n+    </script>\n+</head>\n+<body>\n+<a href=\"/bookList\">Return to book list</a>\n+<form id=\"book-form\" action=\"javascript:void(0);\">\n+    <h1>Book Info:</h1>\n+\n+    <div class=\"row\">\n+        <label for=\"id-input\">ID:</label>\n+        <input id=\"id-input\" name=\"id\" type=\"text\" readonly=\"readonly\" th:value=\"${book.id}\" value=\"1\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"name-input\">Name:</label>\n+        <input id=\"name-input\" type=\"text\" th:value=\"${book.name}\" value=\"Мастер и Маргарита\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"author-input\">Author:</label>\n+        <select id=\"author-input\" th:field=\"${book.author.id}\">\n+            <option th:each=\"author : ${authors}\" th:value=\"${author.id}\" th:text=\"${author.name}\">Пушкин</option>\n+        </select>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"genre-input\">Genre:</label>\n+        <select id=\"genre-input\" th:field=\"${book.genre.id}\">\n+            <option th:each=\"genre : ${genres}\" th:value=\"${genre.id}\" th:text=\"${genre.name}\">Фантастика</option>\n+        </select>\n+    </div>\n+\n+    <div class=\"row\">\n+        <button type=\"submit\">Save</button>\n+    </div>\n+\n+</form>\n+<form id=\"delete-book-form\" action=\"javascript:void(0);\">\n+    <div class=\"row\">\n+        <button type=\"submit\">Delete</button>\n+    </div>\n+</form>\n+\n+<h1>Comments:</h1>\n+<table class=\"comments\">\n+    <thead>\n+    <tr>\n+        <th>ID</th>\n+        <th>Commnet</th>\n+    </tr>\n+    </thead>\n+    <tbody>\n+    <tr th:each=\"comment : ${comments}\">\n+        <td class=\"id\" th:text=\"${comment.id}\">1</td>\n+        <td th:text=\"${comment.comment}\">Ololo</td>\n+        <td>\n+            <button class=\"delete\">Delete</button>\n+        </td>\n+    </tr>\n+    </tbody>\n+</table>\n+\n+\n+<div class=\"row\">\n+    <label for=\"comment-input\">New comment:</label>\n+    <input id=\"comment-input\"/>\n+</div>\n+\n+<div class=\"row\">\n+    <button id=\"createComment\" type=\"button\">Add comment</button>\n+</div>\n+\n+<script inline=\"javascript\">\n+    var bookId = $('#id-input')[0].value;\n+\n+    /*редактирование книги*/\n+    $('#book-form').on('submit', (function (e) {\n+        var data = {\n+            \"name\": $('#name-input')[0].value,\n+            \"authorid\": $('#author-input option:selected')[0].value,\n+            \"genreid\": $('#genre-input option:selected')[0].value\n+        }\n+        $.ajax({\n+            type: \"PATCH\",\n+            url: '/book/' + bookId,\n+            data: data\n+        }).fail(function (jqXHR) {\n+            alert(\"Error \"+jqXHR.status);\n+        });\n+    }));\n+\n+    /*удаление книги*/\n+    $(\"#delete-book-form\").on('submit', function () {\n+        $.ajax({\n+            type: \"DELETE\",\n+            url: '/book/' + bookId\n+        }).done(function () {\n+            window.location.replace(\"/bookList\");\n+        }).fail(function (jqXHR) {\n+            alert(\"Error \"+jqXHR.status);\n+        });\n+    });\n+\n+    /*добавление коментария*/\n+    $('#createComment').on('click', (function (e) {\n+        var comment = $('#comment-input')[0].value;\n+        var data = {\"comment\": comment}\n+        $.ajax({\n+            type: \"POST\",\n+            url: '/book/' + bookId + '/comment',\n+            data: data\n+        }).done(function (c) {\n+            var newElement = $(\".comments tbody\").append(`\n+                    <tr>\n+                        <td class=\"id\">` + c + `</td>\n+                        <td>` + comment + `</td>\n+                        <td>\n+                            <button class=\"delete\">Delete</button>\n+                        </td>\n+                    </tr>\n+                `);\n+            $(\".comments tbody tr:last-child .delete\").on('click', function () {\n+                var ID = $(this).parents(\"tr\").children(\".id\").text();\n+                var _this = this;\n+                $.ajax({\n+                    type: \"DELETE\",\n+                    url: '/comment/' + ID\n+                }).done(function () {\n+                    $(_this).parents(\"tr:first\").remove();\n+                }).fail(function (jqXHR) {\n+                    alert(\"Error \"+jqXHR.status);\n+                });\n+            });\n+            $('#comment-input')[0].value = \"\";\n+        })\n+    }));\n+\n+    /*удаление коментария*/\n+    $(\"tr td .delete\").on('click', function () {\n+        var ID = $(this).parents(\"tr\").children(\".id\").text();\n+        var _this = this;\n+        $.ajax({\n+            type: \"DELETE\",\n+            url: '/comment/' + ID\n+        }).done(function () {\n+            $(_this).parents(\"tr:first\").remove();\n+        }).fail(function (jqXHR) {\n+            alert(\"Error \"+jqXHR.status);\n+        });\n+    });\n+\n+</script>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "4ba0d7e2997d84ef63e94dcd8aac34eb80cfeb5b",
    "filename": "spring-13/src/main/resources/templates/bookList.html",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/templates/bookList.html",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/main/resources/templates/bookList.html",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/main/resources/templates/bookList.html?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,47 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\"/>\n+    <title>List of all books</title>\n+    <style type=\"text/css\">\n+        body {\n+            padding: 50px;\n+        }\n+\n+        .persons, .persons td {\n+            border: 1px solid lightgray;\n+            padding: 5px;\n+        }\n+    </style>\n+</head>\n+<body>\n+<h1>Books:</h1>\n+\n+<table class=\"persons\">\n+    <thead>\n+    <tr>\n+        <th>ID</th>\n+        <th>Name</th>\n+        <th>Author</th>\n+        <th>Genre</th>\n+    </tr>\n+    </thead>\n+    <tbody>\n+    <tr th:each=\"book : ${books}\">\n+        <td th:text=\"${book.id}\">1</td>\n+        <td th:text=\"${book.name}\">John Doe</td>\n+        <td th:text=\"${book.author.name}\">author</td>\n+        <td th:text=\"${book.genre.name}\">genre</td>\n+        <td>\n+            <a th:href=\"@{/bookInfo/__${book.id}__}\" href=\"book.html\">Edit</a>\n+        </td>\n+    </tr>\n+    </tbody>\n+</table>\n+<form id=\"new-book-form\" th:action=\"@{/addBook}\" th:method=\"post\" action=\"book.html\">\n+    <div class=\"row\">\n+        <button type=\"submit\">Add book</button>\n+    </div>\n+</form>\n+</body>\n+</html>"
  },
  {
    "sha": "81d97c1ea35a814abb74a51278098129400b69eb",
    "filename": "spring-13/src/test/java/ru/sokolovee/spring13/Spring13ApplicationTests.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/blob/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/test/java/ru/sokolovee/spring13/Spring13ApplicationTests.java",
    "raw_url": "https://github.com/esokolov87/2020-11-otus-spring-SokolovEE/raw/7550195eb364545ce8a81de55dbec7c54bf17f1d/spring-13/src/test/java/ru/sokolovee/spring13/Spring13ApplicationTests.java",
    "contents_url": "https://api.github.com/repos/esokolov87/2020-11-otus-spring-SokolovEE/contents/spring-13/src/test/java/ru/sokolovee/spring13/Spring13ApplicationTests.java?ref=7550195eb364545ce8a81de55dbec7c54bf17f1d",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.sokolovee.spring13;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+@SpringBootTest\n+class Spring13ApplicationTests {\n+\n+\t@Test\n+\tvoid contextLoads() {\n+\t}\n+\n+}"
  }
]
