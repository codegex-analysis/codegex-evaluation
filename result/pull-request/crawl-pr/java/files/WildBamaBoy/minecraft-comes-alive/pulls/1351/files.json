[
  {
    "sha": "ec64e4119e9d922eb889c93662cd5d4216c9078e",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/.gitignore",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/.gitignore",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/.gitignore?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -20,4 +20,7 @@ build\n # other\n eclipse\n run\n-classes\n+backup\n+\n+# Files from Forge MDK\n+forge*changelog.txt"
  },
  {
    "sha": "bf2afd188b23453fb3b420d2e6271b9694e8c39c",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 125,
    "deletions": 56,
    "changes": 181,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/build.gradle",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/build.gradle",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/build.gradle?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -1,82 +1,151 @@\n buildscript {\n     repositories {\n-        mavenCentral()\n+        maven { url = 'https://files.minecraftforge.net/maven' }\n         jcenter()\n-        maven { url = \"http://files.minecraftforge.net/maven\" }\n+        mavenCentral()\n     }\n     dependencies {\n-        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'\n+        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true\n     }\n }\n-apply plugin: 'net.minecraftforge.gradle.forge'\n-//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.\n+apply plugin: 'net.minecraftforge.gradle'\n+// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.\n+apply plugin: 'eclipse'\n+apply plugin: 'maven-publish'\n \n-version = \"6.0.1\"\n-group = \"com.minecraftcomesalive\" // http://maven.apache.org/guides/mini/guide-naming-conventions.html\n-archivesBaseName = \"MCA-1.12.2\"\n+version = '1.0'\n+group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html\n+archivesBaseName = 'modid'\n \n-sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.\n-compileJava {\n-    sourceCompatibility = targetCompatibility = '1.8'\n-}\n+sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.\n \n minecraft {\n-    version = \"1.12.2-14.23.5.2768\"\n-    runDir = \"run\"\n-    \n-    // the mappings can be changed at any time, and must be in the following format.\n-    // snapshot_YYYYMMDD   snapshot are built nightly.\n-    // stable_#            stables are built at the discretion of the MCP team.\n+    // The mappings can be changed at any time, and must be in the following format.\n+    // snapshot_YYYYMMDD   Snapshot are built nightly.\n+    // stable_#            Stables are built at the discretion of the MCP team.\n     // Use non-default mappings at your own risk. they may not always work.\n-    // simply re-run your setup task after changing the mappings to update your workspace.\n-    mappings = \"snapshot_20171003\"\n+    // Simply re-run your setup task after changing the mappings to update your workspace.\n+    mappings channel: 'snapshot', version: '20200514-1.15.1'\n     // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.\n+    \n+    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')\n+\n+    // Default run configurations.\n+    // These can be tweaked, removed, or duplicated as needed.\n+    runs {\n+        client {\n+            workingDirectory project.file('run')\n+\n+            // Recommended logging data for a userdev environment\n+            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'\n+\n+            // Recommended logging level for the console\n+            property 'forge.logging.console.level', 'debug'\n+\n+            mods {\n+                examplemod {\n+                    source sourceSets.main\n+                }\n+            }\n+        }\n+\n+        server {\n+            workingDirectory project.file('run')\n+\n+            // Recommended logging data for a userdev environment\n+            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'\n+\n+            // Recommended logging level for the console\n+            property 'forge.logging.console.level', 'debug'\n+\n+            mods {\n+                examplemod {\n+                    source sourceSets.main\n+                }\n+            }\n+        }\n+\n+        data {\n+            workingDirectory project.file('run')\n+\n+            // Recommended logging data for a userdev environment\n+            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'\n+\n+            // Recommended logging level for the console\n+            property 'forge.logging.console.level', 'debug'\n+\n+            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')\n+\n+            mods {\n+                examplemod {\n+                    source sourceSets.main\n+                }\n+            }\n+        }\n+    }\n }\n \n dependencies {\n-    provided 'org.projectlombok:lombok:1.16.4'\n-    // you may put jars on which you depend on in ./libs\n-    // or you may define them like so..\n-    //compile \"some.group:artifact:version:classifier\"\n-    //compile \"some.group:artifact:version\"\n-      \n-    // real examples\n-    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env\n-    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env\n-\n-    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.\n-    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'\n-\n-    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,\n-    // except that these dependencies get remapped to your current MCP mappings\n-    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'\n-    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'\n-\n-    // for more info...\n+    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed\n+    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.\n+    // The userdev artifact is a special name and will get all sorts of transformations applied to it.\n+    minecraft 'net.minecraftforge:forge:1.15.2-31.2.0'\n+\n+    // You may put jars on which you depend on in ./libs or you may define them like so..\n+    // compile \"some.group:artifact:version:classifier\"\n+    // compile \"some.group:artifact:version\"\n+    compile 'org.projectlombok:lombok:1.16.4'\n+\n+    // Real examples\n+    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env\n+    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env\n+\n+    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.\n+    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'\n+\n+    // These dependencies get remapped to your current MCP mappings\n+    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'\n+\n+    // For more info...\n     // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html\n     // http://www.gradle.org/docs/current/userguide/dependency_management.html\n \n }\n \n-processResources {\n-    // this will ensure that this task is redone when the versions change.\n-    inputs.property \"version\", project.version\n-    inputs.property \"mcversion\", project.minecraft.version\n-\n-    // replace stuff in mcmod.info, nothing else\n-    from(sourceSets.main.resources.srcDirs) {\n-        include 'mcmod.info'\n-                \n-        // replace version and mcversion\n-        expand 'version':project.version, 'mcversion':project.minecraft.version\n+// Example for how to get properties into the manifest for reading by the runtime..\n+jar {\n+    manifest {\n+        attributes([\n+            \"Specification-Title\": \"examplemod\",\n+            \"Specification-Vendor\": \"examplemodsareus\",\n+            \"Specification-Version\": \"1\", // We are version 1 of ourselves\n+            \"Implementation-Title\": project.name,\n+            \"Implementation-Version\": \"${version}\",\n+            \"Implementation-Vendor\" :\"examplemodsareus\",\n+            \"Implementation-Timestamp\": new Date().format(\"yyyy-MM-dd'T'HH:mm:ssZ\")\n+        ])\n     }\n-        \n-    // copy everything else except the mcmod.info\n-    from(sourceSets.main.resources.srcDirs) {\n-        exclude 'mcmod.info'\n+}\n+\n+// Example configuration to allow publishing using the maven-publish task\n+// This is the preferred method to reobfuscate your jar file\n+jar.finalizedBy('reobfJar') \n+// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing\n+//publish.dependsOn('reobfJar')\n+\n+publishing {\n+    publications {\n+        mavenJava(MavenPublication) {\n+            artifact jar\n+        }\n+    }\n+    repositories {\n+        maven {\n+            url \"file:///${project.projectDir}/mcmodsrepo\"\n+        }\n     }\n }\n \n-jar {\n-    classifier = 'universal'\n+test {\n+    useJUnitPlatform()\n }\n\\ No newline at end of file"
  },
  {
    "sha": "878bf1f7ec7d4aa7eedf5ee40188c54ef47b00f5",
    "filename": "gradle.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/gradle.properties",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/gradle.properties",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/gradle.properties?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -1,3 +1,4 @@\n # Sets default memory used for gradle commands. Can be overridden by user or command line properties.\n # This is required to provide enough memory for the Minecraft decompilation process.\n org.gradle.jvmargs=-Xmx3G\n+org.gradle.daemon=false\n\\ No newline at end of file"
  },
  {
    "sha": "7a3265ee94c0ab25cf079ac8ccdf87f41d455d42",
    "filename": "gradle/wrapper/gradle-wrapper.jar",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/gradle/wrapper/gradle-wrapper.jar",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/gradle/wrapper/gradle-wrapper.jar",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/gradle/wrapper/gradle-wrapper.jar?ref=f876b90aea91e209804313c326bc537d4ee34359"
  },
  {
    "sha": "1d5b29fbd59593cbadef9e8c2f5129d1d4391584",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 5,
    "deletions": 6,
    "changes": 11,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/gradle/wrapper/gradle-wrapper.properties?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -1,6 +1,5 @@\n-#Tue Jun 18 00:42:38 PDT 2019\r\n-distributionBase=GRADLE_USER_HOME\r\n-distributionPath=wrapper/dists\r\n-zipStoreBase=GRADLE_USER_HOME\r\n-zipStorePath=wrapper/dists\r\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-2.14-all.zip\r\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.10.3-bin.zip"
  },
  {
    "sha": "cccdd3d517fc5249beaefa600691cf150f2fa3e6",
    "filename": "gradlew",
    "status": "modified",
    "additions": 43,
    "deletions": 35,
    "changes": 78,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/gradlew",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/gradlew",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/gradlew?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -1,25 +1,43 @@\n-#!/usr/bin/env bash\n+#!/usr/bin/env sh\n \n ##############################################################################\n ##\n ##  Gradle start up script for UN*X\n ##\n ##############################################################################\n \n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS=\"\"\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n \n APP_NAME=\"Gradle\"\n APP_BASE_NAME=`basename \"$0\"`\n \n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=\"maximum\"\n \n-warn ( ) {\n+warn () {\n     echo \"$*\"\n }\n \n-die ( ) {\n+die () {\n     echo\n     echo \"$*\"\n     echo\n@@ -30,6 +48,7 @@ die ( ) {\n cygwin=false\n msys=false\n darwin=false\n+nonstop=false\n case \"`uname`\" in\n   CYGWIN* )\n     cygwin=true\n@@ -40,31 +59,11 @@ case \"`uname`\" in\n   MINGW* )\n     msys=true\n     ;;\n+  NONSTOP* )\n+    nonstop=true\n+    ;;\n esac\n \n-# For Cygwin, ensure paths are in UNIX format before anything is touched.\n-if $cygwin ; then\n-    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n-fi\n-\n-# Attempt to set APP_HOME\n-# Resolve links: $0 may be a link\n-PRG=\"$0\"\n-# Need this for relative symlinks.\n-while [ -h \"$PRG\" ] ; do\n-    ls=`ls -ld \"$PRG\"`\n-    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n-    if expr \"$link\" : '/.*' > /dev/null; then\n-        PRG=\"$link\"\n-    else\n-        PRG=`dirname \"$PRG\"`\"/$link\"\n-    fi\n-done\n-SAVED=\"`pwd`\"\n-cd \"`dirname \\\"$PRG\\\"`/\" >&-\n-APP_HOME=\"`pwd -P`\"\n-cd \"$SAVED\" >&-\n-\n CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n \n # Determine the Java command to use to start the JVM.\n@@ -90,7 +89,7 @@ location of your Java installation.\"\n fi\n \n # Increase the maximum file descriptors if we can.\n-if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n     MAX_FD_LIMIT=`ulimit -H -n`\n     if [ $? -eq 0 ] ; then\n         if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n@@ -114,6 +113,7 @@ fi\n if $cygwin ; then\n     APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n     CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n \n     # We build the pattern for arguments to be converted via cygpath\n     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n@@ -154,11 +154,19 @@ if $cygwin ; then\n     esac\n fi\n \n-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\n-function splitJvmOpts() {\n-    JVM_OPTS=(\"$@\")\n+# Escape application args\n+save () {\n+    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n+    echo \" \"\n }\n-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\n-JVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n+APP_ARGS=$(save \"$@\")\n+\n+# Collect all arguments for the java command, following the shell quoting and substitution rules\n+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n+\n+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\n+if [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n+  cd \"$(dirname \"$0\")\"\n+fi\n \n-exec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n+exec \"$JAVACMD\" \"$@\""
  },
  {
    "sha": "e95643d6a2ca62258464e83c72f5156dc941c609",
    "filename": "gradlew.bat",
    "status": "modified",
    "additions": 4,
    "deletions": 10,
    "changes": 14,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/gradlew.bat",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/gradlew.bat",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/gradlew.bat?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -8,14 +8,14 @@\n @rem Set local scope for the variables with windows NT shell\r\n if \"%OS%\"==\"Windows_NT\" setlocal\r\n \r\n-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n-set DEFAULT_JVM_OPTS=\r\n-\r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\r\n+\r\n @rem Find java.exe\r\n if defined JAVA_HOME goto findJavaFromJavaHome\r\n \r\n@@ -46,10 +46,9 @@ echo location of your Java installation.\n goto fail\r\n \r\n :init\r\n-@rem Get command-line arguments, handling Windowz variants\r\n+@rem Get command-line arguments, handling Windows variants\r\n \r\n if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n-if \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n \r\n :win9xME_args\r\n @rem Slurp the command line arguments.\r\n@@ -60,11 +59,6 @@ set _SKIP=2\n if \"x%~1\" == \"x\" goto execute\r\n \r\n set CMD_LINE_ARGS=%*\r\n-goto execute\r\n-\r\n-:4NT_args\r\n-@rem Get arguments from the 4NT Shell from JP Software\r\n-set CMD_LINE_ARGS=%$\r\n \r\n :execute\r\n @rem Setup the command line\r"
  },
  {
    "sha": "3f403270245ee08dbe54f7a00439865b77e067d8",
    "filename": "src/main/java/cobalt/core/CConstants.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/core/CConstants.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/core/CConstants.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/core/CConstants.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,8 @@\n+package cobalt.core;\n+\n+import java.util.UUID;\n+\n+public class CConstants {\n+    public static final UUID ZERO_UUID = new UUID(0, 0);\n+    private CConstants(){}\n+}"
  },
  {
    "sha": "b6e86455553d186ebaffe5dc326c87eda55a65c2",
    "filename": "src/main/java/cobalt/core/Cobalt.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/core/Cobalt.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/core/Cobalt.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/core/Cobalt.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,35 @@\n+package cobalt.core;\n+\n+import cobalt.mod.forge.CobaltForgeMod;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class Cobalt extends CobaltForgeMod {\n+    private static Logger logger = LogManager.getLogger(\"Cobalt\");\n+\n+    public static Logger getLog() {\n+        return logger;\n+    }\n+\n+    public String getModId() {\n+        return \"cobalt\";\n+    }\n+\n+    @Override\n+    public void registerContent() {\n+\n+    }\n+\n+    @Override\n+    public void onSetup() {\n+        logger.info(\"Hello from Cobalt!\");\n+    }\n+\n+    @Override\n+    public void onClientSetup() {}\n+\n+    @Override\n+    public void loadRegistries() {\n+\n+    }\n+}"
  },
  {
    "sha": "98999fa60eb0263389dcbb86605e3f268a30d460",
    "filename": "src/main/java/cobalt/enums/CEnumHand.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/enums/CEnumHand.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/enums/CEnumHand.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/enums/CEnumHand.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,22 @@\n+package cobalt.enums;\n+\n+import lombok.Getter;\n+import net.minecraft.util.Hand;\n+\n+import java.util.Arrays;\n+\n+public enum CEnumHand {\n+    UNKNOWN(null),\n+    MAIN_HAND(Hand.MAIN_HAND),\n+    OFF_HAND(Hand.OFF_HAND);\n+\n+    CEnumHand(Hand hand) {\n+        this.mcHand = hand;\n+    }\n+\n+    @Getter private Hand mcHand;\n+\n+    public static CEnumHand fromMC(Hand hand) {\n+        return Arrays.stream(values()).filter(h -> h.mcHand == hand).findFirst().orElse(UNKNOWN);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b3f9ca1c69c7fcee804ccb0371682d721b93bb8d",
    "filename": "src/main/java/cobalt/items/CItem.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/items/CItem.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/items/CItem.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/items/CItem.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,39 @@\n+package cobalt.items;\n+\n+import cobalt.enums.CEnumHand;\n+import cobalt.minecraft.entity.player.CPlayer;\n+import cobalt.minecraft.item.CItemStack;\n+import cobalt.minecraft.item.CItemUseContext;\n+import cobalt.minecraft.world.CWorld;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.item.Item;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.item.ItemUseContext;\n+import net.minecraft.util.ActionResult;\n+import net.minecraft.util.ActionResultType;\n+import net.minecraft.util.Hand;\n+import net.minecraft.world.World;\n+\n+public abstract class CItem extends Item {\n+    public CItem(Item.Properties properties) {\n+        super(properties);\n+    }\n+\n+    public CItemStack getCurrentHeldItemStack(CPlayer player, CEnumHand hand) {\n+        return player.getHeldItem(hand);\n+    }\n+\n+    @Override\n+    public final ActionResult<ItemStack> onItemRightClick(World worldIn, PlayerEntity playerIn, Hand handIn) {\n+        return handleRightClick(CWorld.fromMC(worldIn), CPlayer.fromMC(playerIn), CEnumHand.fromMC(handIn));\n+    }\n+\n+    @Override\n+    public ActionResultType onItemUse(ItemUseContext context) {\n+        return handleUseOnBlock(CItemUseContext.fromMC(context));\n+    }\n+\n+    public abstract ActionResult<ItemStack> handleRightClick(CWorld worldIn, CPlayer playerIn, CEnumHand hand);\n+    public abstract ActionResultType handleUseOnBlock(CItemUseContext context);\n+\n+}"
  },
  {
    "sha": "b61a7746f07177dad99ce163b4b46ac302cdf28f",
    "filename": "src/main/java/cobalt/items/CItemBasic.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/items/CItemBasic.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/items/CItemBasic.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/items/CItemBasic.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,26 @@\n+package cobalt.items;\n+\n+import cobalt.enums.CEnumHand;\n+import cobalt.minecraft.entity.player.CPlayer;\n+import cobalt.minecraft.item.CItemUseContext;\n+import cobalt.minecraft.world.CWorld;\n+import net.minecraft.item.Item;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.ActionResult;\n+import net.minecraft.util.ActionResultType;\n+\n+public class CItemBasic extends CItem {\n+    public CItemBasic(Item.Properties properties) {\n+        super(properties);\n+    }\n+\n+    @Override\n+    public ActionResult<ItemStack> handleRightClick(CWorld worldIn, CPlayer playerIn, CEnumHand hand) {\n+        return ActionResult.resultPass(getCurrentHeldItemStack(playerIn, hand).getMcItemStack());\n+    }\n+\n+    @Override\n+    public ActionResultType handleUseOnBlock(CItemUseContext context) {\n+        return ActionResultType.PASS;\n+    }\n+}"
  },
  {
    "sha": "f1d67973a5553770d583aaffed0a1ff94ca17593",
    "filename": "src/main/java/cobalt/localizer/Localizer.java",
    "status": "renamed",
    "additions": 29,
    "deletions": 11,
    "changes": 40,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/localizer/Localizer.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/localizer/Localizer.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/localizer/Localizer.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -1,20 +1,31 @@\n-package mca.core;\n-\n-import com.google.common.base.Charsets;\n-import net.minecraft.util.StringUtils;\n-import org.apache.commons.io.IOUtils;\n+package cobalt.localizer;\n \n import java.io.IOException;\n import java.io.InputStream;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Random;\n import java.util.stream.Collectors;\n \n+import cobalt.core.Cobalt;\n+import org.apache.commons.io.IOUtils;\n+\n+import com.google.common.base.Charsets;\n+\n+import net.minecraft.util.StringUtils;\n+\n public class Localizer {\n     private Map<String, String> localizerMap = new HashMap<>();\n+    private final ArrayList<VarParser> registeredVarParsers = new ArrayList<>();\n     private static final ArrayList<String> EMPTY_LIST = new ArrayList<>();\n \n+\n     public Localizer() {\n-        InputStream inStream = StringUtils.class.getResourceAsStream(\"/assets/mca/lang/en_us.lang\");\n+        /* FIXME\n+        InputStream inStream = this.getClass().getResourceAsStream(\"/assets/mca/lang/en_us.lang\");\n \n         try {\n             List<String> lines = IOUtils.readLines(inStream, Charsets.UTF_8);\n@@ -30,9 +41,10 @@ public Localizer() {\n \n                 localizerMap.put(key, value);\n             }\n-        } catch (IOException e) {\n-            MCA.getLog().error(\"Error initializing localizer: \" + e);\n+        } catch (Exception e) {\n+            Cobalt.getLog().error(\"Error initializing localizer: \" + e);\n         }\n+         */\n     }\n \n     public String localize(String key, String... vars) {\n@@ -51,17 +63,23 @@ public String localize(String key, ArrayList<String> vars) {\n         return parseVars(result, vars).replaceAll(\"\\\\\\\\\", \"\");\n     }\n \n+    public void registerVarParser(VarParser parser) {\n+        this.registeredVarParsers.add(parser);\n+    }\n+\n     private String parseVars(String str, ArrayList<String> vars) {\n         int index = 1;\n-        str = str.replaceAll(\"%Supporter%\", MCA.getInstance().getRandomSupporter());\n+        for (VarParser processor : registeredVarParsers) {\n+            str = processor.parse(str);\n+        }\n \n         String varString = \"%v\" + index + \"%\";\n         while (str.contains(\"%v\") && index < 10) { // signature of a var being present\n             try {\n                 str = str.replaceAll(varString, vars.get(index - 1));\n             } catch (IndexOutOfBoundsException e) {\n                 str = str.replaceAll(varString, \"\");\n-                MCA.getLog().warn(\"Failed to replace variable in localized string: \" + str);\n+                Cobalt.getLog().warn(\"Failed to replace variable in localized string: \" + str);\n             } finally {\n                 index++;\n                 varString = \"%v\" + index + \"%\";",
    "previous_filename": "src/main/java/mca/core/Localizer.java"
  },
  {
    "sha": "c7dd6b7db510ab17cac592bc65c9c4163cbc7281",
    "filename": "src/main/java/cobalt/localizer/VarParser.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/localizer/VarParser.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/localizer/VarParser.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/localizer/VarParser.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,6 @@\n+package cobalt.localizer;\n+\n+@FunctionalInterface\n+public interface VarParser {\n+    String parse(String str);\n+}"
  },
  {
    "sha": "77236c2ea9e83dbca34f61cbcfc5e6b5556ac807",
    "filename": "src/main/java/cobalt/minecraft/entity/CEntity.java",
    "status": "added",
    "additions": 75,
    "deletions": 0,
    "changes": 75,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/entity/CEntity.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/entity/CEntity.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/entity/CEntity.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,75 @@\n+package cobalt.minecraft.entity;\n+\n+import cobalt.enums.CEnumHand;\n+import cobalt.minecraft.entity.player.CPlayer;\n+import cobalt.minecraft.util.math.CPos;\n+import cobalt.minecraft.world.CWorld;\n+import lombok.Getter;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.DamageSource;\n+import net.minecraft.util.text.StringTextComponent;\n+\n+import java.util.Optional;\n+import java.util.UUID;\n+\n+public class CEntity {\n+    @Getter private final Entity mcEntity;\n+    @Getter private final CWorld world;\n+\n+    protected CEntity(Entity entity) {\n+        this.mcEntity = entity;\n+        this.world = entity != null ? CWorld.fromMC(entity.world) : null;\n+    }\n+\n+    public static CEntity fromMC(Entity entity) {\n+        return new CEntity(entity);\n+    }\n+\n+    public double getPosX() {\n+        return mcEntity.getPosX();\n+    }\n+    public double getPosY() {\n+        return mcEntity.getPosY();\n+    }\n+    public double getPosZ() {\n+        return mcEntity.getPosZ();\n+    }\n+\n+    public CPos getPosition() {\n+        return new CPos(getPosX(), getPosY(), getPosZ());\n+    }\n+\n+    public void sendMessage(String message) {\n+        mcEntity.sendMessage(new StringTextComponent(message));\n+    }\n+\n+    public boolean attackFrom(DamageSource source, float amount) {\n+        return mcEntity.attackEntityFrom(source, amount);\n+    }\n+\n+    public String getName() {\n+        return mcEntity.getName().getString();\n+    }\n+\n+    public UUID getUniqueID() {\n+        return mcEntity.getUniqueID();\n+    }\n+\n+    public void dropItem(ItemStack stack, float offsetY) {\n+        mcEntity.entityDropItem(stack, offsetY);\n+    }\n+\n+    public boolean isPlayer() {\n+        return this.mcEntity instanceof PlayerEntity;\n+    }\n+\n+    public Optional<CPlayer> asPlayer() {\n+        if (this.mcEntity instanceof PlayerEntity) {\n+            return Optional.of((CPlayer)this);\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+}"
  },
  {
    "sha": "86a89784d716c9c2e14be61b71ceb32cdf35565a",
    "filename": "src/main/java/cobalt/minecraft/entity/CLivingEntity.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/entity/CLivingEntity.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/entity/CLivingEntity.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/entity/CLivingEntity.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,33 @@\n+package cobalt.minecraft.entity;\n+\n+import cobalt.enums.CEnumHand;\n+import cobalt.minecraft.item.CItemStack;\n+import cobalt.minecraft.util.math.CPos;\n+import cobalt.minecraft.world.CWorld;\n+import lombok.Getter;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.DamageSource;\n+import net.minecraft.util.text.StringTextComponent;\n+import net.minecraft.world.World;\n+\n+import java.util.UUID;\n+\n+public class CLivingEntity extends CEntity {\n+    @Getter private LivingEntity mcEntity;\n+    @Getter private World mcWorld;\n+\n+    protected CLivingEntity(LivingEntity entity) {\n+        super(entity);\n+        this.mcEntity = entity;\n+        this.mcWorld = entity.world;\n+    }\n+\n+    public static CLivingEntity fromMC(LivingEntity entity) {\n+        return new CLivingEntity(entity);\n+    }\n+    public CItemStack getHeldItem(CEnumHand hand) {\n+        return CItemStack.fromMC(mcEntity.getHeldItem(hand.getMcHand()));\n+    }\n+}"
  },
  {
    "sha": "36f1e0119a73b5500e55d31ee3239f7c2cccc123",
    "filename": "src/main/java/cobalt/minecraft/entity/merchant/villager/CVillagerProfession.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/entity/merchant/villager/CVillagerProfession.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/entity/merchant/villager/CVillagerProfession.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/entity/merchant/villager/CVillagerProfession.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,35 @@\n+package cobalt.minecraft.entity.merchant.villager;\n+\n+import cobalt.core.Cobalt;\n+import com.google.common.collect.ImmutableSet;\n+import lombok.Getter;\n+import net.minecraft.entity.merchant.villager.VillagerProfession;\n+import net.minecraft.util.SoundEvent;\n+import net.minecraft.village.PointOfInterestType;\n+import net.minecraftforge.fml.common.ObfuscationReflectionHelper;\n+\n+import java.lang.reflect.Constructor;\n+\n+public class CVillagerProfession {\n+    @Getter private final VillagerProfession mcProfession;\n+    private CVillagerProfession(VillagerProfession profession) {\n+        this.mcProfession = profession;\n+    }\n+\n+    public static CVillagerProfession fromMC(VillagerProfession profession) {\n+        return new CVillagerProfession(profession);\n+    }\n+\n+    public static CVillagerProfession createNew(String name, PointOfInterestType poiType, SoundEvent sound) {\n+        // Creating a new villager profession is private to VillagerProfession. Don't know whose bright idea that\n+        // was, either Mojang or Forge. Either way, doesn't matter to us, we'll crack it open by reflection.\n+        try {\n+            Constructor<VillagerProfession> constructor = VillagerProfession.class.getDeclaredConstructor(String.class, PointOfInterestType.class, ImmutableSet.class, ImmutableSet.class, SoundEvent.class);\n+            constructor.setAccessible(true);\n+            return fromMC(constructor.newInstance(name, poiType, ImmutableSet.of(), ImmutableSet.of(), sound));\n+        } catch (Exception e) {\n+            Cobalt.getLog().fatal(\"Unable to create new profession!\", e);\n+            return null;\n+        }\n+    }\n+}"
  },
  {
    "sha": "1c54b93293864faca7ff0dccf1075d1fe4994071",
    "filename": "src/main/java/cobalt/minecraft/entity/player/CPlayer.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/entity/player/CPlayer.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/entity/player/CPlayer.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/entity/player/CPlayer.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,26 @@\n+package cobalt.minecraft.entity.player;\n+\n+import cobalt.enums.CEnumHand;\n+import cobalt.minecraft.entity.CEntity;\n+import cobalt.minecraft.entity.CLivingEntity;\n+import lombok.Getter;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.IItemProvider;\n+\n+public class CPlayer extends CLivingEntity {\n+    @Getter private final PlayerEntity mcPlayer;\n+\n+    protected CPlayer(PlayerEntity player) {\n+        super(player);\n+        this.mcPlayer = player;\n+    }\n+\n+    public static CPlayer fromMC(PlayerEntity player) {\n+        return new CPlayer(player);\n+    }\n+\n+    public boolean isCreativeMode() {\n+        return mcPlayer.isCreative();\n+    }\n+}"
  },
  {
    "sha": "974c230f5c67946478379b99af64b884b9b1359c",
    "filename": "src/main/java/cobalt/minecraft/inventory/CEquipmentSlotType.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/inventory/CEquipmentSlotType.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/inventory/CEquipmentSlotType.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/inventory/CEquipmentSlotType.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,28 @@\n+package cobalt.minecraft.inventory;\n+\n+import net.minecraft.inventory.EquipmentSlotType;\n+\n+import java.util.Arrays;\n+\n+public enum CEquipmentSlotType {\n+    UNKNOWN(null),\n+    MAINHAND(EquipmentSlotType.MAINHAND),\n+    OFFHAND(EquipmentSlotType.OFFHAND),\n+    FEET(EquipmentSlotType.FEET),\n+    LEGS(EquipmentSlotType.LEGS),\n+    CHEST(EquipmentSlotType.CHEST),\n+    HEAD(EquipmentSlotType.HEAD);\n+\n+    private final EquipmentSlotType mcType;\n+    CEquipmentSlotType(EquipmentSlotType type) {\n+        this.mcType = type;\n+    }\n+\n+    public static CEquipmentSlotType fromMC(EquipmentSlotType type) {\n+        return Arrays.stream(values()).filter(t -> t.mcType == type).findFirst().orElse(UNKNOWN);\n+    }\n+\n+    public EquipmentSlotType getMcType() {\n+        return mcType;\n+    }\n+}"
  },
  {
    "sha": "983676c7664158740bd479f0a39e71b01c8281cd",
    "filename": "src/main/java/cobalt/minecraft/inventory/CInventory.java",
    "status": "renamed",
    "additions": 34,
    "deletions": 31,
    "changes": 65,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/inventory/CInventory.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/inventory/CInventory.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/inventory/CInventory.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -1,24 +1,26 @@\n-package mca.entity.inventory;\n+package cobalt.minecraft.inventory;\n \n-import mca.entity.EntityVillagerMCA;\n-import net.minecraft.inventory.EntityEquipmentSlot;\n-import net.minecraft.inventory.InventoryBasic;\n-import net.minecraft.item.Item;\n-import net.minecraft.item.ItemArmor;\n-import net.minecraft.item.ItemStack;\n-import net.minecraft.nbt.NBTTagCompound;\n-import net.minecraft.nbt.NBTTagList;\n-\n-import javax.annotation.Nullable;\n import java.util.ArrayList;\n import java.util.List;\n \n-public class InventoryMCA extends InventoryBasic {\n-    private EntityVillagerMCA villager;\n+import javax.annotation.Nullable;\n+\n+import cobalt.minecraft.entity.CEntity;\n+import cobalt.minecraft.nbt.CNBT;\n+import net.minecraft.inventory.EquipmentSlotType;\n+import net.minecraft.inventory.Inventory;\n+import net.minecraft.item.ArmorItem;\n+import net.minecraft.item.Item;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.nbt.ListNBT;\n+\n+public class CInventory extends Inventory {\n+    private final CEntity entity;\n \n-    public InventoryMCA(EntityVillagerMCA villager) {\n-        super(\"Villager Inventory\", true, 27);\n-        this.villager = villager;\n+    public CInventory(CEntity entity, int slots) {\n+        super(slots);\n+        this.entity = entity;\n     }\n \n     public int getFirstSlotContainingItem(Item item) {\n@@ -51,15 +53,15 @@ public ItemStack getBestItemOfType(@Nullable Class type) {\n         else return getStackInSlot(getBestItemOfTypeSlot(type));\n     }\n \n-    public ItemStack getBestArmorOfType(EntityEquipmentSlot slot) {\n+    public ItemStack getBestArmorOfType(EquipmentSlotType slot) {\n         ItemStack returnStack = ItemStack.EMPTY;\n \n         List<ItemStack> armors = new ArrayList();\n         for (int i = 0; i < this.getSizeInventory(); ++i) {\n             ItemStack stack = this.getStackInSlot(i);\n-            if (stack.getItem() instanceof ItemArmor) {\n-                ItemArmor armor = (ItemArmor) stack.getItem();\n-                if (armor.armorType == slot) armors.add(stack);\n+            if (stack.getItem() instanceof ArmorItem) {\n+                ArmorItem armor = (ArmorItem) stack.getItem();\n+                if (armor.getEquipmentSlot() == slot) armors.add(stack);\n             }\n         }\n \n@@ -94,36 +96,37 @@ public int getBestItemOfTypeSlot(Class type) {\n     public void dropAllItems() {\n         for (int i = 0; i < this.getSizeInventory(); i++) {\n             ItemStack stack = this.getStackInSlot(i);\n-            villager.entityDropItem(stack, 1.0F);\n+            entity.dropItem(stack, 1.0F);\n         }\n+        clear();\n     }\n \n-    public void readInventoryFromNBT(NBTTagList tagList) {\n+    public void load(ListNBT tagList) {\n         for (int i = 0; i < this.getSizeInventory(); ++i) {\n             this.setInventorySlotContents(i, ItemStack.EMPTY);\n         }\n \n-        for (int i = 0; i < tagList.tagCount(); ++i) {\n-            NBTTagCompound nbt = tagList.getCompoundTagAt(i);\n+        for (int i = 0; i < tagList.size(); ++i) {\n+            CompoundNBT nbt = tagList.getCompound(i);\n             int slot = nbt.getByte(\"Slot\") & 255;\n \n             if (slot < this.getSizeInventory()) {\n-                this.setInventorySlotContents(slot, new ItemStack(nbt));\n+                this.setInventorySlotContents(slot, ItemStack.read(nbt));\n             }\n         }\n     }\n \n-    public NBTTagList writeInventoryToNBT() {\n-        NBTTagList tagList = new NBTTagList();\n+    public ListNBT save() {\n+        ListNBT tagList = new ListNBT();\n \n         for (int i = 0; i < this.getSizeInventory(); ++i) {\n             ItemStack itemstack = this.getStackInSlot(i);\n \n             if (itemstack != ItemStack.EMPTY) {\n-                NBTTagCompound nbt = new NBTTagCompound();\n-                nbt.setByte(\"Slot\", (byte) i);\n-                itemstack.writeToNBT(nbt);\n-                tagList.appendTag(nbt);\n+                CompoundNBT nbt = new CompoundNBT();\n+                nbt.putByte(\"Slot\", (byte) i);\n+                itemstack.write(nbt);\n+                tagList.add(nbt);\n             }\n         }\n ",
    "previous_filename": "src/main/java/mca/entity/inventory/InventoryMCA.java"
  },
  {
    "sha": "fa97e3ce7840177621416dc38ff162f823ff89bd",
    "filename": "src/main/java/cobalt/minecraft/item/CItemStack.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/item/CItemStack.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/item/CItemStack.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/item/CItemStack.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,26 @@\n+package cobalt.minecraft.item;\n+\n+import lombok.Getter;\n+import net.minecraft.item.Item;\n+import net.minecraft.item.ItemStack;\n+\n+public class CItemStack {\n+    public static final CItemStack EMPTY = new CItemStack(ItemStack.EMPTY);\n+\n+    @Getter private final ItemStack mcItemStack;\n+    private CItemStack(ItemStack stack) {\n+        this.mcItemStack = stack;\n+    }\n+\n+    public static CItemStack fromMC(ItemStack stack) {\n+        return new CItemStack(stack);\n+    }\n+\n+    public Item getItem() {\n+        return mcItemStack.getItem();\n+    }\n+\n+    public void decrStackSize() {\n+        mcItemStack.setCount(mcItemStack.getCount() - 1);\n+    }\n+}"
  },
  {
    "sha": "50a1e7ff2f70233852e46b5d57c0544e6f85ff27",
    "filename": "src/main/java/cobalt/minecraft/item/CItemUseContext.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/item/CItemUseContext.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/item/CItemUseContext.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/item/CItemUseContext.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,31 @@\n+package cobalt.minecraft.item;\n+\n+import cobalt.minecraft.util.math.CPos;\n+import cobalt.minecraft.world.CWorld;\n+import lombok.Getter;\n+import net.minecraft.item.ItemUseContext;\n+import net.minecraft.util.Direction;\n+\n+public class CItemUseContext {\n+    @Getter ItemUseContext mcContext;\n+\n+    private CItemUseContext(ItemUseContext context) {\n+        this.mcContext = context;\n+    }\n+\n+    public static CItemUseContext fromMC(ItemUseContext context) {\n+        return new CItemUseContext(context);\n+    }\n+\n+    public CPos getPos() {\n+        return CPos.fromMC(mcContext.getPos());\n+    }\n+\n+    public Direction getDirection() {\n+        return mcContext.getFace();\n+    }\n+\n+    public CWorld getWorld() {\n+        return CWorld.fromMC(mcContext.getWorld());\n+    }\n+}"
  },
  {
    "sha": "60ede3693cfe13064f413024284fafa63180c8d8",
    "filename": "src/main/java/cobalt/minecraft/nbt/CNBT.java",
    "status": "added",
    "additions": 153,
    "deletions": 0,
    "changes": 153,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/nbt/CNBT.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/nbt/CNBT.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/nbt/CNBT.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,153 @@\n+package cobalt.minecraft.nbt;\n+\n+import cobalt.core.Cobalt;\n+import cobalt.minecraft.util.math.CPos;\n+import lombok.Getter;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.nbt.INBT;\n+import net.minecraft.nbt.ListNBT;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.UUID;\n+\n+public class CNBT {\n+    @Getter private final CompoundNBT mcCompound;\n+\n+    private CNBT() {\n+        mcCompound = new CompoundNBT();\n+    }\n+\n+    private CNBT(CompoundNBT nbt) {\n+        mcCompound = nbt;\n+    }\n+\n+    public static CNBT createNew() {\n+        return new CNBT();\n+    }\n+\n+    public static CNBT fromMC(CompoundNBT nbt) {\n+        return new CNBT(nbt);\n+    }\n+\n+    public int getInteger(String key) {\n+        return mcCompound.getInt(key);\n+    }\n+\n+    public String getString(String key) {\n+        return mcCompound.getString(key);\n+    }\n+\n+    public float getFloat(String key) {\n+        return mcCompound.getFloat(key);\n+    }\n+\n+    public double getDouble(String key) {\n+        return mcCompound.getDouble(key);\n+    }\n+\n+    public boolean getBoolean(String key) {\n+        return mcCompound.getBoolean(key);\n+    }\n+\n+    public UUID getUUID(String key) {\n+        return mcCompound.getUniqueId(key);\n+    }\n+\n+    public byte getByte(String key) {\n+        return mcCompound.getByte(key);\n+    }\n+\n+    public void setUUID(String key, UUID value) {\n+        mcCompound.putUniqueId(key, value);\n+    }\n+\n+    public void setString(String key, String value) {\n+        mcCompound.putString(key, value);\n+    }\n+\n+    public CNBT getCompoundTag(String key) {\n+        return CNBT.fromMC(mcCompound.getCompound(key));\n+    }\n+\n+    public void setInteger(String key, int value) {\n+        mcCompound.putInt(key, value);\n+    }\n+\n+    public CNBT setBoolean(String key, boolean value) {\n+        mcCompound.putBoolean(key, value);\n+        return this;\n+    }\n+\n+    public CNBT setTag(String key, CNBT value) {\n+        mcCompound.put(key, value.mcCompound);\n+        return this;\n+    }\n+\n+    public void setDouble(String key, double value) {\n+        mcCompound.putDouble(key, value);\n+    }\n+\n+    public void setFloat(String key, float value) {\n+        mcCompound.putFloat(key, value);\n+    }\n+\n+    public void setByte(String key, byte value) {\n+        mcCompound.putByte(key, value);\n+    }\n+\n+    public void setList(String key, ListNBT list) {\n+        mcCompound.put(key, list);\n+    }\n+\n+    public CNBT copy() {\n+        return new CNBT(mcCompound.copy());\n+    }\n+\n+    public ListNBT getList(String key) {\n+        return mcCompound.getList(key, 9);\n+    }\n+\n+    public CPos getCPos(String key) {\n+        int x,y,z;\n+\n+        x = mcCompound.getInt(key + \"X\");\n+        y = mcCompound.getInt(key + \"Y\");\n+        z = mcCompound.getInt(key + \"Z\");\n+\n+        return new CPos(x, y, z);\n+    }\n+\n+    public void setCPos(String key, CPos pos) {\n+        this.setInteger(key + \"X\", pos.getX());\n+        this.setInteger(key + \"Y\", pos.getY());\n+        this.setInteger(key + \"Z\", pos.getZ());\n+    }\n+\n+    public void set(String key, Object value) {\n+        Class<?> clazz = value.getClass();\n+        if (value instanceof Float) {\n+            setFloat(key, (Float)value);\n+        } else if (value instanceof Byte) {\n+            setByte(key, (Byte)value);\n+        } else if (value instanceof Double) {\n+            setDouble(key, (Double)value);\n+        } else if (value instanceof String) {\n+            setString(key, (String)value);\n+        } else if (value instanceof Integer) {\n+            setInteger(key, (Integer)value);\n+        } else if (value instanceof UUID) {\n+            setUUID(key, (UUID)value);\n+        } else if (value instanceof Boolean) {\n+            setBoolean(key, (Boolean)value);\n+        } else if (value instanceof CNBT) {\n+            setTag(key, (CNBT)value);\n+        } else {\n+            Cobalt.getLog().throwing(new Exception(\"Attempt to set CNBT data of unknown class!: \" + clazz.getName()));\n+        }\n+    }\n+\n+    public Set<String> getKeySet() {\n+        return mcCompound.keySet();\n+    }\n+}"
  },
  {
    "sha": "1f900802708acb28b58d126fa6558f6f1f06c5a0",
    "filename": "src/main/java/cobalt/minecraft/network/datasync/CDataManager.java",
    "status": "added",
    "additions": 154,
    "deletions": 0,
    "changes": 154,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/network/datasync/CDataManager.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/network/datasync/CDataManager.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/network/datasync/CDataManager.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,154 @@\n+//package cobalt.minecraft.network.datasync;\n+//\n+//import cobalt.core.Cobalt;\n+//import cobalt.minecraft.nbt.CNBT;\n+//import com.minecraftcomesalive.mca.entity.EntityVillagerMCA;\n+//import lombok.Getter;\n+//import net.minecraft.entity.Entity;\n+//import net.minecraft.item.ItemStack;\n+//import net.minecraft.nbt.CompoundNBT;\n+//import net.minecraft.network.PacketBuffer;\n+//import net.minecraft.network.datasync.DataParameter;\n+//import net.minecraft.network.datasync.DataSerializers;\n+//import net.minecraft.network.datasync.EntityDataManager;\n+//import net.minecraft.network.datasync.IDataSerializer;\n+//import net.minecraft.util.math.BlockPos;\n+//import net.minecraft.util.text.ITextComponent;\n+//import net.minecraft.util.text.StringTextComponent;\n+//\n+//import java.util.HashMap;\n+//import java.util.Map;\n+//import java.util.UUID;\n+//\n+//public class CDataManager {\n+//    @Getter private EntityDataManager mcManager;\n+//\n+//    public static final IDataSerializer<CNBT> CNBT_SERIALIZER = new IDataSerializer<CNBT>() {\n+//        public void write(PacketBuffer buf, CNBT value) {\n+//            buf.writeCompoundTag(value.getMcCompound());\n+//        }\n+//        public CNBT read(PacketBuffer buf) {\n+//            return CNBT.fromMC(buf.readCompoundTag());\n+//        }\n+//        public CNBT copyValue(CNBT value) {\n+//            return value.copy();\n+//        }\n+//    };\n+//\n+//    static {\n+//        DataSerializers.registerSerializer(CNBT_SERIALIZER);\n+//    }\n+//\n+//    private HashMap<String, EntityDataManager.DataEntry<?>> registeredParams;\n+//\n+//    private CDataManager(EntityDataManager vanillaManager) {\n+//        this.mcManager = vanillaManager;\n+//        this.registeredParams = new HashMap<>();\n+//    }\n+//\n+//    public static CDataManager fromMC(EntityDataManager vanillaManager) {\n+//        return new CDataManager(vanillaManager);\n+//    }\n+//\n+//    public static CDataManager createNew(Entity entity) {\n+//        return fromMC(new EntityDataManager(entity));\n+//    }\n+//\n+//    public static <T> CDataParameter<T> createKey(Class <? extends Entity> clazz, IDataSerializer<T> serializer) {\n+//        return CDataParameter.fromMC(EntityDataManager.createKey(clazz, serializer));\n+//    }\n+//\n+//    public <T> void register(CDataParameter<T> key, T value, String name) {\n+//        mcManager.register(key.getMcParameter(), value);\n+//        registeredParams.put(name,  new EntityDataManager.DataEntry<T>(key.getMcParameter(), value));\n+//    }\n+//\n+//    public <T> T get(CDataParameter<T> key) {\n+//        return mcManager.get(key.getMcParameter());\n+//    }\n+//\n+//    public <T> void set(CDataParameter<T> key, T value) {\n+//        mcManager.set(key.getMcParameter(), value);\n+//    }\n+//\n+//    public <T> void setDirty(DataParameter<T> key) {\n+//        // NO-OP, vanilla set() now marks dirty.\n+//        // mcManager.setDirty(key);\n+//    }\n+//\n+//    public <T> void saveAll(CNBT nbt) {\n+//        for (Map.Entry<String, EntityDataManager.DataEntry<?>> entry : registeredParams.entrySet()) {\n+//            DataParameter<?> param = entry.getValue().getKey();\n+//            IDataSerializer<?> serializer = param.getSerializer();\n+//            String paramName = entry.getKey();\n+//            T paramValue = (T) mcManager.get(param);\n+//\n+//            if (serializer == DataSerializers.VARINT) {\n+//                nbt.setInteger(paramName, (Integer)paramValue);\n+//            } else if (serializer == DataSerializers.FLOAT) {\n+//                nbt.setFloat(paramName, (Float)paramValue);\n+//            } else if (serializer == DataSerializers.STRING) {\n+//                nbt.setString(paramName, (String)paramValue);\n+//            } else if (serializer == DataSerializers.TEXT_COMPONENT) {\n+//                nbt.setString(paramName, ((ITextComponent)paramValue).getString());\n+//            } else if  (serializer == DataSerializers.ITEMSTACK) {\n+//                nbt.setTag(paramName, CNBT.fromMC(((ItemStack)paramValue).write(new CompoundNBT())));\n+//            } else if (serializer == DataSerializers.BOOLEAN) {\n+//                nbt.setBoolean(paramName, (Boolean)paramValue);\n+//            } else if (serializer == DataSerializers.BLOCK_POS) {\n+//                BlockPos pos = (BlockPos)paramValue;\n+//                nbt.setInteger(paramName + \"X\", pos.getX());\n+//                nbt.setInteger(paramName + \"Y\", pos.getY());\n+//                nbt.setInteger(paramName + \"Z\", pos.getZ());\n+//            } else if (serializer == DataSerializers.OPTIONAL_UNIQUE_ID) {\n+//                // Odd mixing of java util's optionals and guava's optionals. Try to handle both.\n+//                try {\n+//                    com.google.common.base.Optional uuid = (com.google.common.base.Optional)paramValue;\n+//                    nbt.setUUID(paramName, (UUID)uuid.or(new UUID(0,0)));\n+//                } catch (ClassCastException e) {\n+//                    java.util.Optional uuid = (java.util.Optional)paramValue;\n+//                    nbt.setUUID(paramName, (UUID)uuid.orElse(new UUID(0,0)));\n+//                }\n+//            } else if (serializer == DataSerializers.COMPOUND_NBT) {\n+//                nbt.setTag(paramName, CNBT.fromMC((CompoundNBT)paramValue));\n+//            } else if (serializer == DataSerializers.BYTE) {\n+//                nbt.setInteger(paramName, (Byte)paramValue);\n+//            } else {\n+//                Cobalt.getLog().error(String.format(\"Unrecognized value type `%s` on attempt to save param `%s`\", paramValue.getClass().getName(), paramName));\n+//            }\n+//        }\n+//    }\n+//\n+//    public <T> void loadAll(CNBT nbt) {\n+//        for (Map.Entry<String, EntityDataManager.DataEntry<?>> entry : registeredParams.entrySet()) {\n+//            DataParameter<?> param = entry.getValue().getKey();\n+//            IDataSerializer<?> serializer = param.getSerializer();\n+//            String paramName = entry.getKey();\n+//\n+//            if (serializer == DataSerializers.VARINT) {\n+//                mcManager.set((DataParameter<T>)param, (T)Integer.valueOf(nbt.getInteger(paramName)));\n+//            } else if (serializer == DataSerializers.FLOAT) {\n+//                mcManager.set((DataParameter<T>)param, (T)Float.valueOf(nbt.getFloat(paramName)));\n+//            } else if (serializer == DataSerializers.STRING) {\n+//                mcManager.set((DataParameter<T>)param, (T)nbt.getString(paramName));\n+//            } else if (serializer == DataSerializers.TEXT_COMPONENT) {\n+//                mcManager.set((DataParameter<T>)param, (T)new StringTextComponent(nbt.getString(paramName)));\n+//            } else if  (serializer == DataSerializers.ITEMSTACK) {\n+//                mcManager.set((DataParameter<T>)param, (T)nbt.getCompoundTag(paramName)); //FIXME can't create itemstack instances properly, this will fail.\n+//            } else if (serializer == DataSerializers.BOOLEAN) {\n+//                mcManager.set((DataParameter<T>)param, (T)Boolean.valueOf(nbt.getBoolean(paramName)));\n+//            } else if (serializer == DataSerializers.BLOCK_POS) {\n+//                BlockPos pos = new BlockPos(nbt.getInteger(paramName + \"X\"), nbt.getInteger(paramName + \"Y\"), nbt.getInteger(paramName + \"Z\"));\n+//                mcManager.set((DataParameter<T>)param, (T)pos);\n+//            } else if (serializer == DataSerializers.OPTIONAL_UNIQUE_ID) {\n+//                mcManager.set((DataParameter<T>)param, (T)com.google.common.base.Optional.of(nbt.getUUID(paramName)));\n+//            } else if (serializer == DataSerializers.COMPOUND_NBT) {\n+//                mcManager.set((DataParameter<T>)param, (T)nbt.getCompoundTag(paramName));\n+//            } else if (serializer == DataSerializers.BYTE) {\n+//                mcManager.set((DataParameter<T>)param, (T)Integer.valueOf(nbt.getInteger(paramName)));\n+//            } else {\n+//                Cobalt.getLog().error(String.format(\"Unrecognized serializer on attempt to read data param `%s`: %s\", paramName, serializer.getClass().getName()));\n+//            }\n+//        }\n+//    }\n+//}"
  },
  {
    "sha": "0dfb8ead6da489284d9cb3330eec7fb89d48d62c",
    "filename": "src/main/java/cobalt/minecraft/network/datasync/CDataParameter.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/network/datasync/CDataParameter.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/network/datasync/CDataParameter.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/network/datasync/CDataParameter.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,16 @@\n+//package cobalt.minecraft.network.datasync;\n+//\n+//import lombok.Getter;\n+//import net.minecraft.network.datasync.DataParameter;\n+//\n+//public class CDataParameter<T> {\n+//    @Getter private DataParameter<T> mcParameter;\n+//\n+//    private CDataParameter(DataParameter<T> param) {\n+//        this.mcParameter = param;\n+//    }\n+//\n+//    public static <T> CDataParameter fromMC(DataParameter<T> param) {\n+//        return new CDataParameter<T>(param);\n+//    }\n+//}"
  },
  {
    "sha": "fa8047ce093bacb3a38c07039061dae920b84997",
    "filename": "src/main/java/cobalt/minecraft/pathfinding/CPathNavigator.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/pathfinding/CPathNavigator.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/pathfinding/CPathNavigator.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/pathfinding/CPathNavigator.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,21 @@\n+package cobalt.minecraft.pathfinding;\n+\n+import cobalt.minecraft.util.math.CPos;\n+import net.minecraft.pathfinding.PathNavigator;\n+import lombok.Getter;\n+\n+public class CPathNavigator {\n+    @Getter private final PathNavigator vanillaNavigator;\n+\n+    private CPathNavigator(PathNavigator navigator) {\n+        this.vanillaNavigator = navigator;\n+    }\n+\n+    public static CPathNavigator fromMC(PathNavigator navigator) {\n+        return new CPathNavigator(navigator);\n+    }\n+\n+    public boolean tryGoTo(CPos pos) {\n+        return vanillaNavigator.tryMoveToXYZ(pos.getX(), pos.getY(), pos.getZ(), 0.5F); //TODO verify\n+    }\n+}"
  },
  {
    "sha": "e0979a29c3ef8f13d3ff3cfaf70c61ac16a5702a",
    "filename": "src/main/java/cobalt/minecraft/util/CDamageSource.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/util/CDamageSource.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/util/CDamageSource.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/util/CDamageSource.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,38 @@\n+package cobalt.minecraft.util;\n+\n+import cobalt.minecraft.entity.player.CPlayer;\n+import lombok.Getter;\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.entity.monster.ZombieEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.util.DamageSource;\n+\n+import java.util.Optional;\n+\n+public class CDamageSource {\n+    @Getter DamageSource mcSource;\n+\n+    private CDamageSource(DamageSource source) {\n+        this.mcSource = source;\n+    }\n+\n+    public static CDamageSource fromMC(DamageSource source) {\n+        return new CDamageSource(source);\n+    }\n+\n+    public String getCauseName(LivingEntity entity) {\n+        return mcSource.getDeathMessage(entity).getString();\n+    }\n+\n+    public Optional<CPlayer> getPlayer() {\n+        if (mcSource.getTrueSource() instanceof PlayerEntity) {\n+            return Optional.of(CPlayer.fromMC((PlayerEntity)mcSource.getTrueSource()));\n+        } else {\n+            return Optional.empty();\n+        }\n+    }\n+\n+    public boolean isZombie() {\n+        return mcSource.getImmediateSource() instanceof ZombieEntity;\n+    }\n+}"
  },
  {
    "sha": "22721db76b07c4dced2d77562847f55a012cb9e6",
    "filename": "src/main/java/cobalt/minecraft/util/CSoundEvent.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/util/CSoundEvent.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/util/CSoundEvent.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/util/CSoundEvent.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,15 @@\n+package cobalt.minecraft.util;\n+\n+import lombok.Getter;\n+import net.minecraft.util.SoundEvent;\n+\n+public class CSoundEvent {\n+    @Getter private final SoundEvent mcSound;\n+    private CSoundEvent(SoundEvent sound) {\n+        this.mcSound = sound;\n+    }\n+\n+    public static CSoundEvent fromMC(SoundEvent event) {\n+        return new CSoundEvent(event);\n+    }\n+}"
  },
  {
    "sha": "221844f5ef164ccef3dd64d01be444818795e70a",
    "filename": "src/main/java/cobalt/minecraft/util/CText.java",
    "status": "renamed",
    "additions": 5,
    "deletions": 22,
    "changes": 27,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/util/CText.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/util/CText.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/util/CText.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -1,24 +1,10 @@\n-package mca.core;\n+package cobalt.minecraft.util;\n \n-import java.util.UUID;\n-\n-public class Constants {\n-    public static final int GUI_ID_INTERACT = 1;\n-    public static final int GUI_ID_NAMEBABY = 2;\n-    public static final int GUI_ID_INVENTORY = 3;\n-    public static final int GUI_ID_STAFFOFLIFE = 4;\n-    public static final int GUI_ID_VILLAGEREDITOR = 5;\n-    public static final int GUI_ID_GUIDEBOOK = 6;\n-    public static final int GUI_ID_WHISTLE = 7;\n-    public static final UUID ZERO_UUID = new UUID(0, 0);\n+public class CText {\n     private static final String SECTION_SIGN = \"\\u00a7\";\n+    private CText(){}\n \n-    public static final int GUI_SCREEN_BUTTON_LIST_FIELD_INDEX = 7;\n-\n-    /**\n-     * All possible font colors\n-     */\n-    public final class Color {\n+    public static final class Color {\n         public static final String BLACK = SECTION_SIGN + \"0\";\n         public static final String DARKBLUE = SECTION_SIGN + \"1\";\n         public static final String DARKGREEN = SECTION_SIGN + \"2\";\n@@ -37,10 +23,7 @@\n         public static final String WHITE = SECTION_SIGN + \"F\";\n     }\n \n-    /**\n-     * All possible font formats.\n-     */\n-    public final class Format {\n+    public static final class Format {\n         public static final String OBFUSCATED = SECTION_SIGN + \"k\";\n         public static final String BOLD = SECTION_SIGN + \"l\";\n         public static final String STRIKE = SECTION_SIGN + \"m\";",
    "previous_filename": "src/main/java/mca/core/Constants.java"
  },
  {
    "sha": "2a351d07ee2cea065a2099b09a4e72336d509fed",
    "filename": "src/main/java/cobalt/minecraft/util/math/CPos.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/blob/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/util/math/CPos.java",
    "raw_url": "https://github.com/WildBamaBoy/minecraft-comes-alive/raw/f876b90aea91e209804313c326bc537d4ee34359/src/main/java/cobalt/minecraft/util/math/CPos.java",
    "contents_url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive/contents/src/main/java/cobalt/minecraft/util/math/CPos.java?ref=f876b90aea91e209804313c326bc537d4ee34359",
    "patch": "@@ -0,0 +1,54 @@\n+package cobalt.minecraft.util.math;\n+\n+import lombok.Getter;\n+import net.minecraft.util.math.BlockPos;\n+\n+/**\n+ * Wrapper for Minecraft's BlockPos class.\n+ */\n+public class CPos {\n+    public static final CPos ORIGIN = new CPos(0,0,0);\n+    @Getter private BlockPos mcPos;\n+\n+    public CPos(int x, int y, int z) {\n+        mcPos = new BlockPos(x, y, z);\n+    }\n+\n+    public CPos(double x, double y, double z) {\n+        mcPos = new BlockPos(x, y, z);\n+    }\n+\n+    private CPos(BlockPos pos) {\n+        this.mcPos = pos;\n+    }\n+\n+    public static CPos fromMC(BlockPos pos) {\n+        return new CPos(pos);\n+    }\n+\n+    public int getX() {\n+        return mcPos.getX();\n+    }\n+\n+    public int getY() {\n+        return mcPos.getY();\n+    }\n+\n+    public int getZ() {\n+        return mcPos.getZ();\n+    }\n+\n+    public CPos add(int x, int y, int z) {\n+        mcPos.add(x, y, z);\n+        return this;\n+    }\n+\n+    public double getDistance(int x, int y, int z) {\n+        return Math.sqrt(mcPos.distanceSq(x, y, z, false));\n+    }\n+\n+    public CPos down() {\n+        mcPos = mcPos.down();\n+        return this;\n+    }\n+}"
  }
]
