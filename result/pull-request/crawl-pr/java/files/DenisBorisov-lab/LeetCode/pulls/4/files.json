[
  {
    "sha": "58c6e4deef31359a98af3d645538017cd9f02763",
    "filename": "src/main/java/MedianFinder/Solution.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/DenisBorisov-lab/LeetCode/blob/1852f9557dd34f7a378f318fe30b28154b3abd72/src/main/java/MedianFinder/Solution.java",
    "raw_url": "https://github.com/DenisBorisov-lab/LeetCode/raw/1852f9557dd34f7a378f318fe30b28154b3abd72/src/main/java/MedianFinder/Solution.java",
    "contents_url": "https://api.github.com/repos/DenisBorisov-lab/LeetCode/contents/src/main/java/MedianFinder/Solution.java?ref=1852f9557dd34f7a378f318fe30b28154b3abd72",
    "patch": "@@ -0,0 +1,25 @@\n+package MedianFinder;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+\n+public class Solution {\n+\n+    ArrayList<Integer> median = new ArrayList<>();\n+\n+    public void addNum(int num){\n+        median.add(num);\n+    }\n+\n+    public double findMedian(){\n+        Collections.sort(median);\n+        if (median.size() == 0){\n+            return 0;\n+        }\n+        if ((double) median.size() / 2 == 0){\n+            return (median.get(median.size() / 2) + median.get(median.size() / 2 - 1)) / 2;\n+        }else {\n+            return (double) (median.get(median.size()/ 2));\n+        }\n+    }\n+}"
  },
  {
    "sha": "24f15d60f2dce402086e703a9f1a344e45098ca8",
    "filename": "src/test/java/MedianFinder/SolutionTest.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/DenisBorisov-lab/LeetCode/blob/1852f9557dd34f7a378f318fe30b28154b3abd72/src/test/java/MedianFinder/SolutionTest.java",
    "raw_url": "https://github.com/DenisBorisov-lab/LeetCode/raw/1852f9557dd34f7a378f318fe30b28154b3abd72/src/test/java/MedianFinder/SolutionTest.java",
    "contents_url": "https://api.github.com/repos/DenisBorisov-lab/LeetCode/contents/src/test/java/MedianFinder/SolutionTest.java?ref=1852f9557dd34f7a378f318fe30b28154b3abd72",
    "patch": "@@ -0,0 +1,46 @@\n+package MedianFinder;\n+\n+import jdk.internal.org.objectweb.asm.tree.FrameNode;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+\n+public class SolutionTest {\n+    @Test\n+    public void firstTest(){\n+        Solution solution = new Solution();\n+        for (int i = 1; i < 4; i++){\n+            solution.addNum(i);\n+        }\n+        double answer = solution.findMedian();\n+        Assert.assertEquals(2, answer, 0);\n+    }\n+\n+    @Test\n+    public void secondTest(){\n+        Solution solution = new Solution();\n+        solution.addNum(5);\n+        solution.addNum(3);\n+        solution.addNum(4);\n+        double answer = solution.findMedian();\n+        Assert.assertEquals(4, answer, 0);\n+    }\n+\n+    @Test\n+    public void thirdTest(){\n+        Solution solution = new Solution();\n+        solution.addNum(2);\n+        solution.addNum(3);\n+        double answer = solution.findMedian();\n+        Assert.assertEquals(1, answer, 5);\n+    }\n+\n+    @Test\n+    public void fourthTest(){\n+        Solution solution = new Solution();\n+        double answer = solution.findMedian();\n+        Assert.assertEquals(0, answer, 0);\n+    }\n+\n+}\n\\ No newline at end of file"
  }
]
