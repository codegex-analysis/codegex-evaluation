[
  {
    "sha": "10d9a8f98a9cf0f24b90f83f1c29ba9013b786eb",
    "filename": "benchmark/benchmark.gradle",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/benchmark/benchmark.gradle",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/benchmark/benchmark.gradle",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/benchmark/benchmark.gradle?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -8,6 +8,8 @@ dependencies {\n   jmh deps.opentelemetryApi\n   jmh deps.bytebuddyagent\n \n+  jmh deps.caffeine\n+\n   jmh 'javax.servlet:javax.servlet-api:4.0.1'\n   jmh 'com.google.http-client:google-http-client:1.19.0'\n   jmh 'org.eclipse.jetty:jetty-server:9.4.1.v20170120'\n@@ -47,6 +49,11 @@ jmh {\n \n   duplicateClassesStrategy = DuplicatesStrategy.EXCLUDE\n   jmhVersion = '1.23' // Specifies JMH version\n+\n+  def jmhIncludeSingleClass = project.findProperty('jmhIncludeSingleClass')\n+  if (jmhIncludeSingleClass != null) {\n+    include = [jmhIncludeSingleClass]\n+  }\n }\n \n tasks.jmh.dependsOn(':javaagent:shadowJar')"
  },
  {
    "sha": "87ccb392a0d0881a35d8fb5efdccd7b99c9d7365",
    "filename": "benchmark/src/jmh/java/io/opentelemetry/benchmark/WeakMapBenchmark.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/benchmark/src/jmh/java/io/opentelemetry/benchmark/WeakMapBenchmark.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/benchmark/src/jmh/java/io/opentelemetry/benchmark/WeakMapBenchmark.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/benchmark/src/jmh/java/io/opentelemetry/benchmark/WeakMapBenchmark.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.benchmark;\n+\n+import com.github.benmanes.caffeine.cache.Cache;\n+import com.github.benmanes.caffeine.cache.Caffeine;\n+import io.opentelemetry.context.internal.shaded.WeakConcurrentMap;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Threads;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+@Fork(3)\n+@Warmup(iterations = 10, time = 1)\n+@Measurement(iterations = 5, time = 1)\n+@OutputTimeUnit(TimeUnit.MICROSECONDS)\n+@State(Scope.Thread)\n+public class WeakMapBenchmark {\n+\n+  private static final WeakConcurrentMap<String, String> weakConcurrentMap =\n+      new WeakConcurrentMap<>(true, true);\n+\n+  private static final Cache<String, String> caffeineCache =\n+      Caffeine.newBuilder().weakKeys().build();\n+  private static final Map<String, String> caffeineMap = caffeineCache.asMap();\n+\n+  private String key;\n+\n+  @Setup\n+  public void setUp() {\n+    key = new String(Thread.currentThread().getName());\n+  }\n+\n+  @Benchmark\n+  @Threads(1)\n+  public void weakConcurrentMap_oneThread() {\n+    weakConcurrentMap.put(key, \"foo\");\n+    weakConcurrentMap.get(key);\n+    weakConcurrentMap.remove(key);\n+  }\n+\n+  @Benchmark\n+  @Threads(1)\n+  public void caffeineMap_oneThread() {\n+    caffeineMap.put(key, \"foo\");\n+    caffeineMap.get(key);\n+    caffeineMap.remove(key);\n+  }\n+\n+  @Benchmark\n+  @Threads(5)\n+  public void weakConcurrentMap_fiveThreads() {\n+    weakConcurrentMap.put(key, \"foo\");\n+    weakConcurrentMap.get(key);\n+    weakConcurrentMap.remove(key);\n+  }\n+\n+  @Benchmark\n+  @Threads(5)\n+  public void caffeineMap_fiveThreads() {\n+    caffeineMap.put(key, \"foo\");\n+    caffeineMap.get(key);\n+    caffeineMap.remove(key);\n+  }\n+\n+  @Benchmark\n+  @Threads(10)\n+  public void weakConcurrentMap_tenThreads() {\n+    weakConcurrentMap.put(key, \"foo\");\n+    weakConcurrentMap.get(key);\n+    weakConcurrentMap.remove(key);\n+  }\n+\n+  @Benchmark\n+  @Threads(10)\n+  public void caffeineMap_tenThreads() {\n+    caffeineMap.put(key, \"foo\");\n+    caffeineMap.get(key);\n+    caffeineMap.remove(key);\n+  }\n+}"
  },
  {
    "sha": "0a12f43862ebf63c6848ab62356fe17eedabf10b",
    "filename": "instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/Cache.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/Cache.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/Cache.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/Cache.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -20,4 +20,16 @@ static CacheBuilder newBuilder() {\n    * computes the value using {@code mappingFunction}, stores the result, and returns it.\n    */\n   V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction);\n+\n+  /**\n+   * Returns the cached value associated with the provided {@code key} if present, or {@code null}\n+   * otherwise.\n+   */\n+  V get(K key);\n+\n+  /** Puts the {@code value} into the cache for the {@code key}. */\n+  void put(K key, V value);\n+\n+  /** Removes a value for {@code key} if present. */\n+  void remove(K key);\n }"
  },
  {
    "sha": "85ba1214ef81aaeac5df3630a5a697bb61f2b2ba",
    "filename": "instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/CacheBuilder.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/CacheBuilder.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/CacheBuilder.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/CacheBuilder.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -39,7 +39,7 @@ CacheBuilder setExecutor(Executor executor) {\n     @SuppressWarnings(\"unchecked\")\n     com.github.benmanes.caffeine.cache.Cache<K, V> delegate =\n         (com.github.benmanes.caffeine.cache.Cache<K, V>) caffeine.build();\n-    return new CaffeineCache<K, V>(delegate);\n+    return new CaffeineCache<>(delegate);\n   }\n \n   CacheBuilder() {}"
  },
  {
    "sha": "33aa741e97d3c3f6ab5dfa9065aeec43c2d48abd",
    "filename": "instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/CaffeineCache.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/CaffeineCache.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/CaffeineCache.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/instrumentation-api-caching/src/main/java/io/opentelemetry/instrumentation/api/caching/CaffeineCache.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -21,6 +21,21 @@ public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction\n     return delegate.get(key, mappingFunction);\n   }\n \n+  @Override\n+  public V get(K key) {\n+    return delegate.getIfPresent(key);\n+  }\n+\n+  @Override\n+  public void put(K key, V value) {\n+    delegate.put(key, value);\n+  }\n+\n+  @Override\n+  public void remove(K key) {\n+    delegate.invalidate(key);\n+  }\n+\n   // Visible for testing\n   Set<K> keySet() {\n     return delegate.asMap().keySet();"
  },
  {
    "sha": "aa15d8147a1bfb5f95acf152916b05f35eb96377",
    "filename": "instrumentation-api/src/test/java/io/opentelemetry/instrumentation/api/caching/CacheTest.java",
    "status": "modified",
    "additions": 28,
    "deletions": 4,
    "changes": 32,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/instrumentation-api/src/test/java/io/opentelemetry/instrumentation/api/caching/CacheTest.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/instrumentation-api/src/test/java/io/opentelemetry/instrumentation/api/caching/CacheTest.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/instrumentation-api/src/test/java/io/opentelemetry/instrumentation/api/caching/CacheTest.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -19,14 +19,20 @@\n     void unbounded() {\n       Cache<String, String> cache = Cache.newBuilder().build();\n \n+      assertThat(cache.computeIfAbsent(\"bear\", unused -> \"roar\")).isEqualTo(\"roar\");\n+      cache.remove(\"bear\");\n+\n       CaffeineCache<?, ?> caffeineCache = ((CaffeineCache<?, ?>) cache);\n       assertThat(cache.computeIfAbsent(\"cat\", unused -> \"meow\")).isEqualTo(\"meow\");\n       assertThat(caffeineCache.keySet()).hasSize(1);\n \n       assertThat(cache.computeIfAbsent(\"cat\", unused -> \"bark\")).isEqualTo(\"meow\");\n       assertThat(caffeineCache.keySet()).hasSize(1);\n \n-      assertThat(cache.computeIfAbsent(\"dog\", unused -> \"bark\")).isEqualTo(\"bark\");\n+      cache.put(\"dog\", \"bark\");\n+      assertThat(cache.get(\"dog\")).isEqualTo(\"bark\");\n+      assertThat(cache.get(\"cat\")).isEqualTo(\"meow\");\n+      assertThat(cache.get(\"bear\")).isNull();\n       assertThat(caffeineCache.keySet()).hasSize(2);\n       assertThat(cache.computeIfAbsent(\"cat\", unused -> \"meow\")).isEqualTo(\"meow\");\n     }\n@@ -35,14 +41,18 @@ void unbounded() {\n     void bounded() {\n       Cache<String, String> cache = Cache.newBuilder().setMaximumSize(1).build();\n \n+      assertThat(cache.computeIfAbsent(\"bear\", unused -> \"roar\")).isEqualTo(\"roar\");\n+      cache.remove(\"bear\");\n+\n       CaffeineCache<?, ?> caffeineCache = ((CaffeineCache<?, ?>) cache);\n       assertThat(cache.computeIfAbsent(\"cat\", unused -> \"meow\")).isEqualTo(\"meow\");\n       assertThat(caffeineCache.keySet()).hasSize(1);\n \n       assertThat(cache.computeIfAbsent(\"cat\", unused -> \"bark\")).isEqualTo(\"meow\");\n       assertThat(caffeineCache.keySet()).hasSize(1);\n \n-      assertThat(cache.computeIfAbsent(\"dog\", unused -> \"bark\")).isEqualTo(\"bark\");\n+      cache.put(\"dog\", \"bark\");\n+      assertThat(cache.get(\"dog\")).isEqualTo(\"bark\");\n       caffeineCache.cleanup();\n       assertThat(caffeineCache.keySet()).hasSize(1);\n       assertThat(cache.computeIfAbsent(\"cat\", unused -> \"purr\")).isEqualTo(\"purr\");\n@@ -55,6 +65,9 @@ void bounded() {\n     void unbounded() {\n       Cache<String, String> cache = Cache.newBuilder().setWeakKeys().build();\n \n+      assertThat(cache.computeIfAbsent(\"bear\", unused -> \"roar\")).isEqualTo(\"roar\");\n+      cache.remove(\"bear\");\n+\n       CaffeineCache<?, ?> caffeineCache = ((CaffeineCache<?, ?>) cache);\n       String cat = new String(\"cat\");\n       String dog = new String(\"dog\");\n@@ -64,7 +77,11 @@ void unbounded() {\n       assertThat(cache.computeIfAbsent(cat, unused -> \"bark\")).isEqualTo(\"meow\");\n       assertThat(caffeineCache.keySet()).hasSize(1);\n \n-      assertThat(cache.computeIfAbsent(dog, unused -> \"bark\")).isEqualTo(\"bark\");\n+      cache.put(dog, \"bark\");\n+      assertThat(cache.get(dog)).isEqualTo(\"bark\");\n+      assertThat(cache.get(cat)).isEqualTo(\"meow\");\n+      assertThat(cache.get(new String(\"dog\"))).isNull();\n+      ;\n       assertThat(caffeineCache.keySet()).hasSize(2);\n       assertThat(cache.computeIfAbsent(cat, unused -> \"meow\")).isEqualTo(\"meow\");\n \n@@ -93,17 +110,24 @@ void unbounded() {\n     void bounded() throws Exception {\n       Cache<String, String> cache = Cache.newBuilder().setWeakKeys().setMaximumSize(1).build();\n \n+      assertThat(cache.computeIfAbsent(\"bear\", unused -> \"roar\")).isEqualTo(\"roar\");\n+      cache.remove(\"bear\");\n+\n       CaffeineCache<?, ?> caffeineCache = ((CaffeineCache<?, ?>) cache);\n \n       String cat = new String(\"cat\");\n       String dog = new String(\"dog\");\n       assertThat(cache.computeIfAbsent(cat, unused -> \"meow\")).isEqualTo(\"meow\");\n+      assertThat(cache.get(cat)).isEqualTo(\"meow\");\n+      assertThat(cache.get(new String(\"cat\"))).isNull();\n       assertThat(caffeineCache.keySet()).hasSize(1);\n \n       assertThat(cache.computeIfAbsent(cat, unused -> \"bark\")).isEqualTo(\"meow\");\n       assertThat(caffeineCache.keySet()).hasSize(1);\n \n-      assertThat(cache.computeIfAbsent(dog, unused -> \"bark\")).isEqualTo(\"bark\");\n+      cache.put(dog, \"bark\");\n+      assertThat(cache.get(dog)).isEqualTo(\"bark\");\n+      assertThat(cache.get(new String(\"dog\"))).isNull();\n       caffeineCache.cleanup();\n       assertThat(caffeineCache.keySet()).hasSize(1);\n       dog = null;"
  },
  {
    "sha": "9e2f472e0dc7e9c375d1cc6757e2bfebbe9df80f",
    "filename": "instrumentation/jdbc/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/jdbc/JdbcMaps.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/instrumentation/jdbc/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/jdbc/JdbcMaps.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/instrumentation/jdbc/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/jdbc/JdbcMaps.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/instrumentation/jdbc/javaagent/src/main/java/io/opentelemetry/javaagent/instrumentation/jdbc/JdbcMaps.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -5,9 +5,7 @@\n \n package io.opentelemetry.javaagent.instrumentation.jdbc;\n \n-import static io.opentelemetry.javaagent.instrumentation.api.WeakMap.Provider.newWeakMap;\n-\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n+import io.opentelemetry.instrumentation.api.caching.Cache;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n \n@@ -17,6 +15,8 @@\n  * <p>Should be injected into the bootstrap classpath.\n  */\n public class JdbcMaps {\n-  public static final WeakMap<Connection, DbInfo> connectionInfo = newWeakMap();\n-  public static final WeakMap<PreparedStatement, String> preparedStatements = newWeakMap();\n+  public static final Cache<Connection, DbInfo> connectionInfo =\n+      Cache.newBuilder().setWeakKeys().build();\n+  public static final Cache<PreparedStatement, String> preparedStatements =\n+      Cache.newBuilder().setWeakKeys().build();\n }"
  },
  {
    "sha": "542875861ebf138929ef4bb6d04cc6ea17f09f0c",
    "filename": "javaagent-api/src/main/java/io/opentelemetry/javaagent/instrumentation/api/WeakMap.java",
    "status": "removed",
    "additions": 0,
    "deletions": 149,
    "changes": 149,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/5e1f52659f1731095405f873f42701f850085633/javaagent-api/src/main/java/io/opentelemetry/javaagent/instrumentation/api/WeakMap.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/5e1f52659f1731095405f873f42701f850085633/javaagent-api/src/main/java/io/opentelemetry/javaagent/instrumentation/api/WeakMap.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-api/src/main/java/io/opentelemetry/javaagent/instrumentation/api/WeakMap.java?ref=5e1f52659f1731095405f873f42701f850085633",
    "patch": "@@ -1,149 +0,0 @@\n-/*\n- * Copyright The OpenTelemetry Authors\n- * SPDX-License-Identifier: Apache-2.0\n- */\n-\n-package io.opentelemetry.javaagent.instrumentation.api;\n-\n-import java.util.Collections;\n-import java.util.Map;\n-import java.util.WeakHashMap;\n-import java.util.concurrent.atomic.AtomicReference;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public interface WeakMap<K, V> {\n-\n-  int size();\n-\n-  boolean containsKey(K target);\n-\n-  V get(K key);\n-\n-  void put(K key, V value);\n-\n-  void putIfAbsent(K key, V value);\n-\n-  V computeIfAbsent(K key, ValueSupplier<? super K, ? extends V> supplier);\n-\n-  V remove(K key);\n-\n-  class Provider {\n-\n-    private static final Logger log = LoggerFactory.getLogger(Provider.class);\n-\n-    private static final AtomicReference<Implementation> provider =\n-        new AtomicReference<>(Implementation.DEFAULT);\n-\n-    public static void registerIfAbsent(Implementation provider) {\n-      if (provider != null && provider != Implementation.DEFAULT) {\n-        if (Provider.provider.compareAndSet(Implementation.DEFAULT, provider)) {\n-          log.debug(\"Weak map provider set to {}\", provider);\n-        }\n-      }\n-    }\n-\n-    public static boolean isProviderRegistered() {\n-      return provider.get() != Implementation.DEFAULT;\n-    }\n-\n-    public static <K, V> WeakMap<K, V> newWeakMap() {\n-      return provider.get().get();\n-    }\n-  }\n-\n-  interface Implementation {\n-    <K, V> WeakMap<K, V> get();\n-\n-    Implementation DEFAULT = new Default();\n-\n-    class Default implements Implementation {\n-\n-      private static final Logger log = LoggerFactory.getLogger(Default.class);\n-\n-      @Override\n-      public <K, V> WeakMap<K, V> get() {\n-        log.debug(\"WeakMap.Supplier not registered. Returning a synchronized WeakHashMap.\");\n-        return new MapAdapter<>(Collections.synchronizedMap(new WeakHashMap<K, V>()));\n-      }\n-    }\n-  }\n-\n-  /**\n-   * Supplies the value to be stored and it is called only when a value does not exists yet in the\n-   * registry.\n-   */\n-  interface ValueSupplier<K, V> {\n-    V get(K key);\n-  }\n-\n-  class MapAdapter<K, V> implements WeakMap<K, V> {\n-    private final Map<K, V> map;\n-\n-    public MapAdapter(Map<K, V> map) {\n-      this.map = map;\n-    }\n-\n-    @Override\n-    public int size() {\n-      return map.size();\n-    }\n-\n-    @Override\n-    public boolean containsKey(K key) {\n-      return map.containsKey(key);\n-    }\n-\n-    @Override\n-    public V get(K key) {\n-      return map.get(key);\n-    }\n-\n-    @Override\n-    public void put(K key, V value) {\n-      map.put(key, value);\n-    }\n-\n-    @Override\n-    public void putIfAbsent(K key, V value) {\n-      // We can't use putIfAbsent since it was added in 1.8.\n-      // As a result, we must use double check locking.\n-      if (!map.containsKey(key)) {\n-        synchronized (this) {\n-          if (!map.containsKey(key)) {\n-            map.put(key, value);\n-          }\n-        }\n-      }\n-    }\n-\n-    @Override\n-    public V computeIfAbsent(K key, ValueSupplier<? super K, ? extends V> supplier) {\n-      // We can't use computeIfAbsent since it was added in 1.8.\n-      if (map.containsKey(key)) {\n-        return map.get(key);\n-      }\n-\n-      synchronized (this) {\n-        if (map.containsKey(key)) {\n-          return map.get(key);\n-        } else {\n-          V value = supplier.get(key);\n-\n-          map.put(key, value);\n-          return value;\n-        }\n-      }\n-    }\n-\n-    @Override\n-    public V remove(K key) {\n-      return map.remove(key);\n-    }\n-\n-    @Override\n-    public String toString() {\n-      return map.toString();\n-    }\n-  }\n-}"
  },
  {
    "sha": "3a1b7bd6be9689798ac5458c727d5bcb14f4cc1f",
    "filename": "javaagent-api/src/test/groovy/io/opentelemetry/javaagent/instrumentation/api/WeakMapTest.groovy",
    "status": "removed",
    "additions": 0,
    "deletions": 70,
    "changes": 70,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/5e1f52659f1731095405f873f42701f850085633/javaagent-api/src/test/groovy/io/opentelemetry/javaagent/instrumentation/api/WeakMapTest.groovy",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/5e1f52659f1731095405f873f42701f850085633/javaagent-api/src/test/groovy/io/opentelemetry/javaagent/instrumentation/api/WeakMapTest.groovy",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-api/src/test/groovy/io/opentelemetry/javaagent/instrumentation/api/WeakMapTest.groovy?ref=5e1f52659f1731095405f873f42701f850085633",
    "patch": "@@ -1,70 +0,0 @@\n-/*\n- * Copyright The OpenTelemetry Authors\n- * SPDX-License-Identifier: Apache-2.0\n- */\n-\n-package io.opentelemetry.javaagent.instrumentation.api\n-\n-import spock.lang.Specification\n-\n-class WeakMapTest extends Specification {\n-\n-  def supplier = new CounterSupplier()\n-\n-  def weakMap = new WeakMap.MapAdapter<String, Integer>(new WeakHashMap<>())\n-\n-  def \"getOrCreate a value\"() {\n-    when:\n-    def count = weakMap.computeIfAbsent('key', supplier)\n-\n-    then:\n-    count == 1\n-    supplier.counter == 1\n-  }\n-\n-  def \"getOrCreate a value multiple times same class loader same key\"() {\n-    when:\n-    def count1 = weakMap.computeIfAbsent('key', supplier)\n-    def count2 = weakMap.computeIfAbsent('key', supplier)\n-\n-    then:\n-    count1 == 1\n-    count2 == 1\n-    supplier.counter == 1\n-  }\n-\n-  def \"getOrCreate a value multiple times same class loader different keys\"() {\n-    when:\n-    def count1 = weakMap.computeIfAbsent('key1', supplier)\n-    def count2 = weakMap.computeIfAbsent('key2', supplier)\n-\n-    then:\n-    count1 == 1\n-    count2 == 2\n-    supplier.counter == 2\n-  }\n-\n-  def \"remove a value\"() {\n-    given:\n-    weakMap.put('key', 42)\n-\n-    when:\n-    def removed = weakMap.remove('key')\n-\n-    then:\n-    removed == 42\n-    weakMap.get('key') == null\n-    weakMap.size() == 0\n-  }\n-\n-  static class CounterSupplier implements WeakMap.ValueSupplier<String, Integer> {\n-\n-    def counter = 0\n-\n-    @Override\n-    Integer get(String key) {\n-      counter = counter + 1\n-      return counter\n-    }\n-  }\n-}"
  },
  {
    "sha": "13f673c8a182a5e8fc65ad603a7890d70f085221",
    "filename": "javaagent-bootstrap/src/main/java/io/opentelemetry/javaagent/bootstrap/HelperResources.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-bootstrap/src/main/java/io/opentelemetry/javaagent/bootstrap/HelperResources.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-bootstrap/src/main/java/io/opentelemetry/javaagent/bootstrap/HelperResources.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-bootstrap/src/main/java/io/opentelemetry/javaagent/bootstrap/HelperResources.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -5,9 +5,7 @@\n \n package io.opentelemetry.javaagent.bootstrap;\n \n-import static io.opentelemetry.javaagent.instrumentation.api.WeakMap.Provider.newWeakMap;\n-\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n+import io.opentelemetry.instrumentation.api.caching.Cache;\n import java.net.URL;\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n@@ -19,12 +17,12 @@\n  */\n public final class HelperResources {\n \n-  private static final WeakMap<ClassLoader, Map<String, URL>> RESOURCES = newWeakMap();\n+  private static final Cache<ClassLoader, Map<String, URL>> RESOURCES =\n+      Cache.newBuilder().setWeakKeys().build();\n \n   /** Registers the {@code payload} to be available to instrumentation at {@code path}. */\n   public static void register(ClassLoader classLoader, String path, URL url) {\n-    RESOURCES.putIfAbsent(classLoader, new ConcurrentHashMap<String, URL>());\n-    RESOURCES.get(classLoader).put(path, url);\n+    RESOURCES.computeIfAbsent(classLoader, unused -> new ConcurrentHashMap<>()).put(path, url);\n   }\n \n   /**"
  },
  {
    "sha": "ceff87416c414ea2a1233964d449998945e1b1ee",
    "filename": "javaagent-tooling/javaagent-tooling.gradle",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/javaagent-tooling.gradle",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/javaagent-tooling.gradle",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/javaagent-tooling.gradle?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -46,7 +46,6 @@ dependencies {\n \n   implementation deps.opentelemetryZipkin\n \n-  implementation group: 'com.blogspot.mydailyjava', name: 'weak-lock-free', version: '0.15'\n   implementation deps.bytebuddy\n   implementation deps.bytebuddyagent\n   annotationProcessor deps.autoservice"
  },
  {
    "sha": "b89b6d0a6a5f7140ea388813c52c1f2a82bf438a",
    "filename": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentInstaller.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentInstaller.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentInstaller.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentInstaller.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -80,8 +80,6 @@ public static Instrumentation getInstrumentation() {\n \n     addByteBuddyRawSetting();\n     BootstrapPackagePrefixesHolder.setBoostrapPackagePrefixes(loadBootstrapPackagePrefixes());\n-    // WeakMap is used by other classes below, so we need to register the provider first.\n-    AgentTooling.registerWeakMapProvider();\n     // this needs to be done as early as possible - before the first Config.get() call\n     ConfigInitializer.initialize();\n   }"
  },
  {
    "sha": "8a236e6769a55f213af80cf8bf3a24ab80f5bc51",
    "filename": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentTooling.java",
    "status": "modified",
    "additions": 0,
    "deletions": 42,
    "changes": 42,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentTooling.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentTooling.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/AgentTooling.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -5,13 +5,8 @@\n \n package io.opentelemetry.javaagent.tooling;\n \n-import io.opentelemetry.javaagent.bootstrap.WeakCache;\n-import io.opentelemetry.javaagent.bootstrap.WeakCache.Provider;\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n import io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy;\n import io.opentelemetry.javaagent.tooling.bytebuddy.AgentLocationStrategy;\n-import java.util.Iterator;\n-import java.util.ServiceLoader;\n \n /**\n  * This class contains class references for objects shared by the agent installer as well as muzzle\n@@ -20,46 +15,9 @@\n  */\n public class AgentTooling {\n \n-  static {\n-    // WeakMap is used by other classes below, so we need to register the provider first.\n-    registerWeakMapProvider();\n-  }\n-\n-  static void registerWeakMapProvider() {\n-    if (!WeakMap.Provider.isProviderRegistered()) {\n-      WeakMap.Provider.registerIfAbsent(new WeakMapSuppliers.WeakConcurrent());\n-      //    WeakMap.Provider.registerIfAbsent(new WeakMapSuppliers.WeakConcurrent.Inline());\n-      //    WeakMap.Provider.registerIfAbsent(new WeakMapSuppliers.Guava());\n-    }\n-  }\n-\n-  private static <K, V> Provider loadWeakCacheProvider() {\n-    Iterator<Provider> providers =\n-        ServiceLoader.load(Provider.class, AgentInstaller.class.getClassLoader()).iterator();\n-    if (providers.hasNext()) {\n-      Provider provider = providers.next();\n-      if (providers.hasNext()) {\n-        throw new IllegalStateException(\n-            \"Only one implementation of WeakCache.Provider suppose to be in classpath\");\n-      }\n-      return provider;\n-    }\n-    throw new IllegalStateException(\"Can't load implementation of WeakCache.Provider\");\n-  }\n-\n-  private static final Provider weakCacheProvider = loadWeakCacheProvider();\n-\n   private static final AgentLocationStrategy LOCATION_STRATEGY = new AgentLocationStrategy();\n   private static final AgentCachingPoolStrategy POOL_STRATEGY = new AgentCachingPoolStrategy();\n \n-  public static <K, V> WeakCache<K, V> newWeakCache() {\n-    return weakCacheProvider.newWeakCache();\n-  }\n-\n-  public static <K, V> WeakCache<K, V> newWeakCache(long maxSize) {\n-    return weakCacheProvider.newWeakCache(maxSize);\n-  }\n-\n   public static AgentLocationStrategy locationStrategy() {\n     return LOCATION_STRATEGY;\n   }"
  },
  {
    "sha": "a5a5bdb8053e3bba934605ad99b663155492bcf1",
    "filename": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/Constants.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/Constants.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/Constants.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/Constants.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -28,8 +28,6 @@\n     \"com.google.auto\",\n     \"com.google.common\",\n     \"com.google.thirdparty.publicsuffix\",\n-    // WeakConcurrentMap\n-    \"com.blogspot.mydailyjava.weaklockfree\",\n     // bytebuddy\n     \"net.bytebuddy\",\n     \"org.yaml.snakeyaml\","
  },
  {
    "sha": "143d2a22be01d05d3bf60918364216a4cfafca31",
    "filename": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/HelperInjector.java",
    "status": "modified",
    "additions": 8,
    "deletions": 7,
    "changes": 15,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/HelperInjector.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/HelperInjector.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/HelperInjector.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -5,11 +5,10 @@\n \n package io.opentelemetry.javaagent.tooling;\n \n-import static io.opentelemetry.javaagent.instrumentation.api.WeakMap.Provider.newWeakMap;\n import static io.opentelemetry.javaagent.tooling.bytebuddy.matcher.ClassLoaderMatcher.BOOTSTRAP_CLASSLOADER;\n \n+import io.opentelemetry.instrumentation.api.caching.Cache;\n import io.opentelemetry.javaagent.bootstrap.HelperResources;\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n import java.io.File;\n import java.io.IOException;\n import java.lang.ref.WeakReference;\n@@ -48,15 +47,17 @@ public String toString() {\n         }\n       };\n \n-  private static final WeakMap<Class<?>, Boolean> injectedClasses = newWeakMap();\n+  private static final Cache<Class<?>, Boolean> injectedClasses =\n+      Cache.newBuilder().setWeakKeys().build();\n \n   private final String requestingName;\n \n   private final Set<String> helperClassNames;\n   private final Set<String> helperResourceNames;\n   private final Map<String, byte[]> dynamicTypeMap = new LinkedHashMap<>();\n \n-  private final WeakMap<ClassLoader, Boolean> injectedClassLoaders = newWeakMap();\n+  private final Cache<ClassLoader, Boolean> injectedClassLoaders =\n+      Cache.newBuilder().setWeakKeys().build();\n \n   private final List<WeakReference<Object>> helperModules = new CopyOnWriteArrayList<>();\n \n@@ -125,7 +126,7 @@ public static HelperInjector forDynamicTypes(\n         classLoader = BOOTSTRAP_CLASSLOADER_PLACEHOLDER;\n       }\n \n-      if (!injectedClassLoaders.containsKey(classLoader)) {\n+      if (Boolean.FALSE == injectedClassLoaders.get(classLoader)) {\n         try {\n           log.debug(\"Injecting classes onto classloader {} -> {}\", classLoader, helperClassNames);\n \n@@ -158,7 +159,7 @@ public static HelperInjector forDynamicTypes(\n           throw new RuntimeException(e);\n         }\n \n-        injectedClassLoaders.put(classLoader, true);\n+        injectedClassLoaders.put(classLoader, Boolean.TRUE);\n       }\n \n       ensureModuleCanReadHelperModules(module);\n@@ -242,6 +243,6 @@ private static void deleteTempDir(File file) {\n   }\n \n   public static boolean isInjectedClass(Class<?> c) {\n-    return injectedClasses.containsKey(c);\n+    return Boolean.TRUE == injectedClasses.get(c);\n   }\n }"
  },
  {
    "sha": "65d4b2fe1e31e77b8244d66b0e2e60d29f1ab882",
    "filename": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/WeakMapSuppliers.java",
    "status": "removed",
    "additions": 0,
    "deletions": 141,
    "changes": 141,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/5e1f52659f1731095405f873f42701f850085633/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/WeakMapSuppliers.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/5e1f52659f1731095405f873f42701f850085633/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/WeakMapSuppliers.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/WeakMapSuppliers.java?ref=5e1f52659f1731095405f873f42701f850085633",
    "patch": "@@ -1,141 +0,0 @@\n-/*\n- * Copyright The OpenTelemetry Authors\n- * SPDX-License-Identifier: Apache-2.0\n- */\n-\n-package io.opentelemetry.javaagent.tooling;\n-\n-import com.blogspot.mydailyjava.weaklockfree.WeakConcurrentMap;\n-import com.google.common.collect.MapMaker;\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n-import java.util.concurrent.TimeUnit;\n-\n-class WeakMapSuppliers {\n-  // Comparison with using WeakConcurrentMap vs Guava's implementation:\n-  // Cleaning:\n-  // * `WeakConcurrentMap`: centralized but we have to maintain out own code and thread for it\n-  // * `Guava`: inline on application's thread, with constant max delay\n-  // Jar Size:\n-  // * `WeakConcurrentMap`: small\n-  // * `Guava`: large, but we may use other features, like immutable collections - and we already\n-  //          ship Guava as part of distribution now, so using Guava for this doesn't increase size.\n-  // Must go on bootstrap classpath:\n-  // * `WeakConcurrentMap`: version conflict is unlikely, so we can directly inject for now\n-  // * `Guava`: need to implement shadow copy (might eventually be necessary for other dependencies)\n-  // Used by other javaagents for similar purposes:\n-  // * `WeakConcurrentMap`: anecdotally used by other agents\n-  // * `Guava`: specifically agent use is unknown at the moment, but Guava is a well known library\n-  //            backed by big company with many-many users\n-\n-  /**\n-   * Provides instances of {@link WeakConcurrentMap} and retains weak reference to them to allow a\n-   * single thread to clean void weak references out for all instances. Cleaning is done every\n-   * second.\n-   */\n-  static class WeakConcurrent implements WeakMap.Implementation {\n-\n-    // Visible for testing\n-    static final long CLEAN_FREQUENCY_SECONDS = 1;\n-\n-    @Override\n-    public <K, V> WeakMap<K, V> get() {\n-      WeakConcurrentMap<K, V> map = new WeakConcurrentMap<>(false, true);\n-      CommonTaskExecutor.INSTANCE.scheduleAtFixedRate(\n-          MapCleaningTask.INSTANCE,\n-          map,\n-          CLEAN_FREQUENCY_SECONDS,\n-          CLEAN_FREQUENCY_SECONDS,\n-          TimeUnit.SECONDS,\n-          \"cleaner for \" + map);\n-      return new Adapter<>(map);\n-    }\n-\n-    // Important to use explicit class to avoid implicit hard references to target\n-    private static class MapCleaningTask implements CommonTaskExecutor.Task<WeakConcurrentMap> {\n-\n-      static final MapCleaningTask INSTANCE = new MapCleaningTask();\n-\n-      @Override\n-      public void run(WeakConcurrentMap target) {\n-        target.expungeStaleEntries();\n-      }\n-    }\n-\n-    private static class Adapter<K, V> implements WeakMap<K, V> {\n-      private final WeakConcurrentMap<K, V> map;\n-\n-      private Adapter(WeakConcurrentMap<K, V> map) {\n-        this.map = map;\n-      }\n-\n-      @Override\n-      public int size() {\n-        return map.approximateSize();\n-      }\n-\n-      @Override\n-      public boolean containsKey(K key) {\n-        return map.containsKey(key);\n-      }\n-\n-      @Override\n-      public V get(K key) {\n-        return map.get(key);\n-      }\n-\n-      @Override\n-      public void put(K key, V value) {\n-        map.put(key, value);\n-      }\n-\n-      @Override\n-      public void putIfAbsent(K key, V value) {\n-        map.putIfAbsent(key, value);\n-      }\n-\n-      @Override\n-      public V computeIfAbsent(K key, ValueSupplier<? super K, ? extends V> supplier) {\n-        if (map.containsKey(key)) {\n-          return map.get(key);\n-        }\n-\n-        synchronized (this) {\n-          if (map.containsKey(key)) {\n-            return map.get(key);\n-          } else {\n-            V value = supplier.get(key);\n-\n-            map.put(key, value);\n-            return value;\n-          }\n-        }\n-      }\n-\n-      @Override\n-      public V remove(K key) {\n-        return map.remove(key);\n-      }\n-    }\n-\n-    static class Inline implements WeakMap.Implementation {\n-\n-      @Override\n-      public <K, V> WeakMap<K, V> get() {\n-        return new Adapter<>(new WeakConcurrentMap.WithInlinedExpunction<K, V>());\n-      }\n-    }\n-  }\n-\n-  static class Guava implements WeakMap.Implementation {\n-\n-    @Override\n-    public <K, V> WeakMap<K, V> get() {\n-      return new WeakMap.MapAdapter<>(new MapMaker().weakKeys().<K, V>makeMap());\n-    }\n-\n-    public <K, V> WeakMap<K, V> get(int concurrencyLevel) {\n-      return new WeakMap.MapAdapter<>(\n-          new MapMaker().concurrencyLevel(concurrencyLevel).weakKeys().<K, V>makeMap());\n-    }\n-  }\n-}"
  },
  {
    "sha": "a917e13cefea42a8ef16372f0e0ce747a38d6c4c",
    "filename": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/bytebuddy/matcher/ClassLoaderMatcher.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/bytebuddy/matcher/ClassLoaderMatcher.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/bytebuddy/matcher/ClassLoaderMatcher.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/bytebuddy/matcher/ClassLoaderMatcher.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -5,9 +5,8 @@\n \n package io.opentelemetry.javaagent.tooling.bytebuddy.matcher;\n \n-import io.opentelemetry.javaagent.bootstrap.WeakCache;\n+import io.opentelemetry.instrumentation.api.caching.Cache;\n import io.opentelemetry.javaagent.instrumentation.api.internal.InClassLoaderMatcher;\n-import io.opentelemetry.javaagent.tooling.AgentTooling;\n import net.bytebuddy.matcher.ElementMatcher;\n \n public final class ClassLoaderMatcher {\n@@ -34,7 +33,8 @@ private ClassLoaderMatcher() {\n   private static class ClassLoaderHasClassesNamedMatcher\n       extends ElementMatcher.Junction.AbstractBase<ClassLoader> {\n \n-    private final WeakCache<ClassLoader, Boolean> cache = AgentTooling.newWeakCache(25);\n+    private final Cache<ClassLoader, Boolean> cache =\n+        Cache.newBuilder().setWeakKeys().setMaximumSize(25).build();\n \n     private final String[] resources;\n \n@@ -66,7 +66,7 @@ public boolean matches(ClassLoader cl) {\n         return false;\n       }\n       Boolean cached;\n-      if ((cached = cache.getIfPresent(cl)) != null) {\n+      if ((cached = cache.get(cl)) != null) {\n         return cached;\n       }\n       boolean value = hasResources(cl);"
  },
  {
    "sha": "d072078c69e7e3a9b9d130379a5a19e67d22f559",
    "filename": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/context/FieldBackedProvider.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/context/FieldBackedProvider.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/context/FieldBackedProvider.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/context/FieldBackedProvider.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -9,11 +9,11 @@\n import static io.opentelemetry.javaagent.tooling.bytebuddy.matcher.ClassLoaderMatcher.BOOTSTRAP_CLASSLOADER;\n import static net.bytebuddy.matcher.ElementMatchers.named;\n \n+import io.opentelemetry.instrumentation.api.caching.Cache;\n import io.opentelemetry.instrumentation.api.config.Config;\n import io.opentelemetry.javaagent.bootstrap.FieldBackedContextStoreAppliedMarker;\n import io.opentelemetry.javaagent.instrumentation.api.ContextStore;\n import io.opentelemetry.javaagent.instrumentation.api.InstrumentationContext;\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n import io.opentelemetry.javaagent.tooling.HelperInjector;\n import io.opentelemetry.javaagent.tooling.InstrumentationModule;\n import io.opentelemetry.javaagent.tooling.TransformSafeLogger;\n@@ -854,11 +854,11 @@ private MethodVisitor getMethodVisitor(String methodName) {\n   private static final class ContextStoreImplementationTemplate\n       implements ContextStore<Object, Object> {\n     private static final ContextStoreImplementationTemplate INSTANCE =\n-        new ContextStoreImplementationTemplate(WeakMap.Provider.newWeakMap());\n+        new ContextStoreImplementationTemplate(Cache.newBuilder().setWeakKeys().build());\n \n-    private final WeakMap map;\n+    private final Cache<Object, Object> map;\n \n-    private ContextStoreImplementationTemplate(WeakMap map) {\n+    private ContextStoreImplementationTemplate(Cache<Object, Object> map) {\n       this.map = map;\n     }\n "
  },
  {
    "sha": "2ee4fc247c8b3c5b73a1311f7c481f108c08737d",
    "filename": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/matcher/GlobalClassloaderIgnoresMatcher.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/matcher/GlobalClassloaderIgnoresMatcher.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/matcher/GlobalClassloaderIgnoresMatcher.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/matcher/GlobalClassloaderIgnoresMatcher.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -5,10 +5,9 @@\n \n package io.opentelemetry.javaagent.tooling.matcher;\n \n+import io.opentelemetry.instrumentation.api.caching.Cache;\n import io.opentelemetry.javaagent.bootstrap.PatchLogger;\n-import io.opentelemetry.javaagent.bootstrap.WeakCache;\n import io.opentelemetry.javaagent.spi.IgnoreMatcherProvider;\n-import io.opentelemetry.javaagent.tooling.AgentTooling;\n import io.opentelemetry.javaagent.tooling.bytebuddy.matcher.ClassLoaderMatcher;\n import net.bytebuddy.matcher.ElementMatcher;\n import org.slf4j.Logger;\n@@ -23,7 +22,8 @@\n       \"io.opentelemetry.javaagent.bootstrap.AgentClassLoader\";\n   private static final String EXPORTER_CLASSLOADER_NAME =\n       \"io.opentelemetry.javaagent.tooling.ExporterClassLoader\";\n-  private static final WeakCache<ClassLoader, Boolean> skipCache = AgentTooling.newWeakCache();\n+  private static final Cache<ClassLoader, Boolean> skipCache =\n+      Cache.newBuilder().setWeakKeys().build();\n \n   public static ElementMatcher.Junction.AbstractBase<ClassLoader> skipClassLoader(\n       IgnoreMatcherProvider ignoreMatcherProvider) {\n@@ -55,7 +55,7 @@ public boolean matches(ClassLoader cl) {\n     if (canSkipClassLoaderByName(cl)) {\n       return true;\n     }\n-    Boolean v = skipCache.getIfPresent(cl);\n+    Boolean v = skipCache.get(cl);\n     if (v != null) {\n       return v;\n     }"
  },
  {
    "sha": "0d1d178dc5fe50977da1704394721d286983bf07",
    "filename": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/collector/MuzzleCodeGenerationPlugin.java",
    "status": "modified",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/collector/MuzzleCodeGenerationPlugin.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/collector/MuzzleCodeGenerationPlugin.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/collector/MuzzleCodeGenerationPlugin.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -5,10 +5,7 @@\n \n package io.opentelemetry.javaagent.tooling.muzzle.collector;\n \n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap;\n import io.opentelemetry.javaagent.tooling.InstrumentationModule;\n-import java.util.Collections;\n-import java.util.WeakHashMap;\n import net.bytebuddy.build.Plugin;\n import net.bytebuddy.description.type.TypeDefinition;\n import net.bytebuddy.description.type.TypeDescription;\n@@ -22,16 +19,6 @@\n  * <p>This class is used in the gradle build scripts, referenced by each instrumentation module.\n  */\n public class MuzzleCodeGenerationPlugin implements Plugin {\n-  static {\n-    // prevent WeakMap from logging warning while plugin is running\n-    WeakMap.Provider.registerIfAbsent(\n-        new WeakMap.Implementation() {\n-          @Override\n-          public <K, V> WeakMap<K, V> get() {\n-            return new WeakMap.MapAdapter<>(Collections.synchronizedMap(new WeakHashMap<>()));\n-          }\n-        });\n-  }\n \n   private static final TypeDescription instrumentationModuleType =\n       new TypeDescription.ForLoadedType(InstrumentationModule.class);"
  },
  {
    "sha": "ea057eacb38bbdefd8923a02de27688322661be9",
    "filename": "javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/matcher/ReferenceMatcher.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/matcher/ReferenceMatcher.java",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/matcher/ReferenceMatcher.java",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/main/java/io/opentelemetry/javaagent/tooling/muzzle/matcher/ReferenceMatcher.java?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -9,7 +9,7 @@\n import static java.util.Collections.emptyList;\n import static net.bytebuddy.dynamic.loading.ClassLoadingStrategy.BOOTSTRAP_LOADER;\n \n-import io.opentelemetry.javaagent.bootstrap.WeakCache;\n+import io.opentelemetry.instrumentation.api.caching.Cache;\n import io.opentelemetry.javaagent.tooling.AgentTooling;\n import io.opentelemetry.javaagent.tooling.Utils;\n import io.opentelemetry.javaagent.tooling.muzzle.Reference;\n@@ -32,7 +32,8 @@\n /** Matches a set of references against a classloader. */\n public final class ReferenceMatcher {\n \n-  private final WeakCache<ClassLoader, Boolean> mismatchCache = AgentTooling.newWeakCache();\n+  private final Cache<ClassLoader, Boolean> mismatchCache =\n+      Cache.newBuilder().setWeakKeys().build();\n   private final Map<String, Reference> references;\n   private final Set<String> helperClassNames;\n \n@@ -62,8 +63,7 @@ public boolean matches(ClassLoader userClassLoader) {\n     if (userClassLoader == BOOTSTRAP_LOADER) {\n       userClassLoader = Utils.getBootstrapProxy();\n     }\n-    final ClassLoader cl = userClassLoader;\n-    return mismatchCache.getIfPresentOrCompute(userClassLoader, () -> doesMatch(cl));\n+    return mismatchCache.computeIfAbsent(userClassLoader, this::doesMatch);\n   }\n \n   private boolean doesMatch(ClassLoader loader) {"
  },
  {
    "sha": "e2795febc2c7cbb04ead3117b8182ad96cc157a7",
    "filename": "javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/WeakCacheTest.groovy",
    "status": "removed",
    "additions": 0,
    "deletions": 84,
    "changes": 84,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/5e1f52659f1731095405f873f42701f850085633/javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/WeakCacheTest.groovy",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/5e1f52659f1731095405f873f42701f850085633/javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/WeakCacheTest.groovy",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/WeakCacheTest.groovy?ref=5e1f52659f1731095405f873f42701f850085633",
    "patch": "@@ -1,84 +0,0 @@\n-/*\n- * Copyright The OpenTelemetry Authors\n- * SPDX-License-Identifier: Apache-2.0\n- */\n-\n-package io.opentelemetry.javaagent.tooling\n-\n-import java.util.concurrent.Callable\n-import spock.lang.Specification\n-\n-class WeakCacheTest extends Specification {\n-  def supplier = new CounterSupplier()\n-\n-  def weakCache = AgentTooling.newWeakCache()\n-  def weakCacheFor1elem = AgentTooling.newWeakCache(1)\n-\n-  def \"getOrCreate a value\"() {\n-    when:\n-    def count = weakCache.get('key', supplier)\n-\n-    then:\n-    count == 1\n-    supplier.counter == 1\n-    weakCache.cache.size() == 1\n-  }\n-\n-  def \"getOrCreate a value multiple times same class loader same key\"() {\n-    when:\n-    def count1 = weakCache.get('key', supplier)\n-    def count2 = weakCache.get('key', supplier)\n-\n-    then:\n-    count1 == 1\n-    count2 == 1\n-    supplier.counter == 1\n-    weakCache.cache.size() == 1\n-  }\n-\n-  def \"getOrCreate a value multiple times same class loader different keys\"() {\n-    when:\n-    def count1 = weakCache.get('key1', supplier)\n-    def count2 = weakCache.get('key2', supplier)\n-\n-    then:\n-    count1 == 1\n-    count2 == 2\n-    supplier.counter == 2\n-    weakCache.cache.size() == 2\n-  }\n-\n-  def \"max size check\"() {\n-    when:\n-    def sizeBefore = weakCacheFor1elem.cache.size()\n-    def valBefore = weakCacheFor1elem.getIfPresent(\"key1\")\n-    def sizeAfter = weakCacheFor1elem.cache.size()\n-    def valAfterGet = weakCacheFor1elem.getIfPresentOrCompute(\"key1\", supplier)\n-    def sizeAfterCompute = weakCacheFor1elem.cache.size()\n-    weakCacheFor1elem.put(\"key1\", 42)\n-    def valAfterPut = weakCacheFor1elem.getIfPresentOrCompute(\"key1\", supplier)\n-    def valByKey2 = weakCacheFor1elem.getIfPresentOrCompute(\"key2\", supplier)\n-    def valAfterReplace = weakCacheFor1elem.getIfPresent(\"key1\")\n-\n-    then:\n-    valBefore == null\n-    valAfterGet == 1\n-    sizeBefore == 0\n-    sizeAfter == 0\n-    sizeAfterCompute == 1\n-    valAfterPut == 42\n-    valByKey2 == 2\n-    valAfterReplace == null\n-    weakCacheFor1elem.cache.size() == 1\n-  }\n-\n-  static class CounterSupplier implements Callable<Integer> {\n-    def counter = 0\n-\n-    @Override\n-    Integer call() {\n-      counter = counter + 1\n-      return counter\n-    }\n-  }\n-}"
  },
  {
    "sha": "e067ea1af1384a03ec9206475783b6efc0116a5e",
    "filename": "javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/WeakConcurrentSupplierTest.groovy",
    "status": "removed",
    "additions": 0,
    "deletions": 133,
    "changes": 133,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/5e1f52659f1731095405f873f42701f850085633/javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/WeakConcurrentSupplierTest.groovy",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/5e1f52659f1731095405f873f42701f850085633/javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/WeakConcurrentSupplierTest.groovy",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/javaagent-tooling/src/test/groovy/io/opentelemetry/javaagent/tooling/WeakConcurrentSupplierTest.groovy?ref=5e1f52659f1731095405f873f42701f850085633",
    "patch": "@@ -1,133 +0,0 @@\n-/*\n- * Copyright The OpenTelemetry Authors\n- * SPDX-License-Identifier: Apache-2.0\n- */\n-\n-package io.opentelemetry.javaagent.tooling\n-\n-import io.opentelemetry.instrumentation.test.utils.GcUtils\n-import io.opentelemetry.javaagent.instrumentation.api.WeakMap\n-import java.lang.ref.WeakReference\n-import java.util.concurrent.TimeUnit\n-import spock.lang.Shared\n-import spock.lang.Specification\n-\n-class WeakConcurrentSupplierTest extends Specification {\n-  @Shared\n-  def weakConcurrentSupplier = new WeakMapSuppliers.WeakConcurrent()\n-  @Shared\n-  def weakInlineSupplier = new WeakMapSuppliers.WeakConcurrent.Inline()\n-  @Shared\n-  def guavaSupplier = new WeakMapSuppliers.Guava()\n-\n-  def \"Calling newWeakMap on #name creates independent maps\"() {\n-    setup:\n-    WeakMap.Provider.provider.set(supplier)\n-    def key = new Object()\n-    def map1 = WeakMap.Provider.newWeakMap()\n-    def map2 = WeakMap.Provider.newWeakMap()\n-\n-    when:\n-    map1.put(key, \"value1\")\n-    map2.put(key, \"value2\")\n-\n-    then:\n-    map1.get(key) == \"value1\"\n-    map2.get(key) == \"value2\"\n-\n-    where:\n-    name             | supplier\n-    \"WeakConcurrent\" | weakConcurrentSupplier\n-    \"WeakInline\"     | weakInlineSupplier\n-    \"Guava\"          | guavaSupplier\n-  }\n-\n-  def \"Unreferenced supplier gets cleaned up on #name\"() {\n-    setup:\n-    // Note: we use 'double supplier' here because Groovy keeps reference to test data preventing it from being GCed\n-    def supplier = supplierSupplier()\n-    def ref = new WeakReference(supplier)\n-\n-    when:\n-    def supplierRef = new WeakReference(supplier)\n-    supplier = null\n-    GcUtils.awaitGc(supplierRef)\n-\n-    then:\n-    ref.get() == null\n-\n-    where:\n-    name             | supplierSupplier\n-    \"WeakConcurrent\" | { -> new WeakMapSuppliers.WeakConcurrent() }\n-    \"WeakInline\"     | { -> new WeakMapSuppliers.WeakConcurrent.Inline() }\n-    \"Guava\"          | { -> new WeakMapSuppliers.Guava() }\n-  }\n-\n-  def \"Unreferenced map gets cleaned up on #name\"() {\n-    setup:\n-    WeakMap.Provider.provider.set(supplier)\n-    def map = WeakMap.Provider.newWeakMap()\n-    def ref = new WeakReference(map)\n-\n-    when:\n-    def mapRef = new WeakReference(map)\n-    map = null\n-    GcUtils.awaitGc(mapRef)\n-\n-    then:\n-    ref.get() == null\n-\n-    where:\n-    name             | supplier\n-    \"WeakConcurrent\" | weakConcurrentSupplier\n-    \"WeakInline\"     | weakInlineSupplier\n-    \"Guava\"          | guavaSupplier\n-  }\n-\n-  def \"Unreferenced keys get cleaned up on #name\"() {\n-    setup:\n-    def key = new Object()\n-    map.put(key, \"value\")\n-    GcUtils.awaitGc()\n-\n-    expect:\n-    map.size() == 1\n-\n-    when:\n-    def keyRef = new WeakReference(key)\n-    key = null\n-    GcUtils.awaitGc(keyRef)\n-\n-    if (name == \"WeakConcurrent\") {\n-      // Sleep enough time for cleanup thread to get scheduled.\n-      // But on a very slow box (or high load) scheduling may not be exactly predictable\n-      // so we try a few times.\n-      int count = 0\n-      while (map.size() != 0 && count < 10) {\n-        Thread.sleep(TimeUnit.SECONDS.toMillis(WeakMapSuppliers.WeakConcurrent.CLEAN_FREQUENCY_SECONDS))\n-        count++\n-      }\n-    }\n-\n-    // Hit map a few times to trigger unreferenced entries cleanup.\n-    // Exact number of times that we need to hit map is implementation dependent.\n-    // For Guava it is specified in\n-    // com.google.common.collect.MapMakerInternalMap.DRAIN_THRESHOLD = 0x3F\n-    if (name == \"Guava\" || name == \"WeakInline\") {\n-      for (int i = 0; i <= 0x3F; i++) {\n-        map.get(\"test\")\n-      }\n-    }\n-\n-    then:\n-    map.size() == 0\n-\n-    where:\n-    name             | map\n-    \"WeakConcurrent\" | weakConcurrentSupplier.get()\n-    \"WeakInline\"     | weakInlineSupplier.get()\n-    // Guava's cleanup process depends on concurrency level,\n-    // and in order to be able to test it we need to set concurrency to 1\n-    \"Guava\"          | guavaSupplier.get(1)\n-  }\n-}"
  },
  {
    "sha": "a97f0951025aa19eb8633a0f2ad78cb239ec771b",
    "filename": "licenses/licenses.md",
    "status": "modified",
    "additions": 103,
    "deletions": 113,
    "changes": 216,
    "blob_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/70a85cdd609d67c65bc47cd4e51158d988574f10/licenses/licenses.md",
    "raw_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/raw/70a85cdd609d67c65bc47cd4e51158d988574f10/licenses/licenses.md",
    "contents_url": "https://api.github.com/repos/open-telemetry/opentelemetry-java-instrumentation/contents/licenses/licenses.md?ref=70a85cdd609d67c65bc47cd4e51158d988574f10",
    "patch": "@@ -1,127 +1,127 @@\n \n #javaagent\n ##Dependency License Report\n-_2021-02-15 23:04:10 PST_\n+_2021-03-19 16:30:22 JST_\n ## Apache License, Version 2.0\n \n-**1** **Group:** `com.blogspot.mydailyjava` **Name:** `weak-lock-free` **Version:** `0.15` \n-> - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n-> - **POM Project URL**: [https://github.com/raphw/weak-lock-free](https://github.com/raphw/weak-lock-free)\n-> - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n-\n-**2** **Group:** `com.blogspot.mydailyjava` **Name:** `weak-lock-free` **Version:** `0.15` \n-> - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n-> - **POM Project URL**: [https://github.com/raphw/weak-lock-free](https://github.com/raphw/weak-lock-free)\n-> - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n-\n-**3** **Group:** `com.google.android` **Name:** `annotations` **Version:** `4.1.1.4` \n+**1** **Group:** `com.google.android` **Name:** `annotations` **Version:** `4.1.1.4` \n > - **POM Project URL**: [http://source.android.com/](http://source.android.com/)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**4** **Group:** `com.google.api.grpc` **Name:** `proto-google-common-protos` **Version:** `2.0.1` \n+**2** **Group:** `com.google.api.grpc` **Name:** `proto-google-common-protos` **Version:** `2.0.1` \n > - **POM Project URL**: [https://github.com/googleapis/java-iam/proto-google-common-protos](https://github.com/googleapis/java-iam/proto-google-common-protos)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**5** **Group:** `com.google.auto` **Name:** `auto-common` **Version:** `0.10` \n+**3** **Group:** `com.google.auto` **Name:** `auto-common` **Version:** `0.10` \n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**6** **Group:** `com.google.auto.service` **Name:** `auto-service` **Version:** `1.0-rc7` \n+**4** **Group:** `com.google.auto.service` **Name:** `auto-service` **Version:** `1.0-rc7` \n > - **POM Project URL**: [https://github.com/google/auto/tree/master/service](https://github.com/google/auto/tree/master/service)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**7** **Group:** `com.google.auto.service` **Name:** `auto-service-annotations` **Version:** `1.0-rc7` \n+**5** **Group:** `com.google.auto.service` **Name:** `auto-service-annotations` **Version:** `1.0-rc7` \n > - **POM Project URL**: [https://github.com/google/auto/tree/master/service](https://github.com/google/auto/tree/master/service)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**8** **Group:** `com.google.code.findbugs` **Name:** `jsr305` **Version:** `3.0.2` \n+**6** **Group:** `com.google.code.findbugs` **Name:** `jsr305` **Version:** `3.0.2` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM Project URL**: [http://findbugs.sourceforge.net/](http://findbugs.sourceforge.net/)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**9** **Group:** `com.google.code.findbugs` **Name:** `jsr305` **Version:** `3.0.2` \n+**7** **Group:** `com.google.code.findbugs` **Name:** `jsr305` **Version:** `3.0.2` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM Project URL**: [http://findbugs.sourceforge.net/](http://findbugs.sourceforge.net/)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**10** **Group:** `com.google.code.gson` **Name:** `gson` **Version:** `2.8.6` \n+**8** **Group:** `com.google.code.gson` **Name:** `gson` **Version:** `2.8.6` \n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**11** **Group:** `com.google.errorprone` **Name:** `error_prone_annotations` **Version:** `2.4.0` \n+**9** **Group:** `com.google.errorprone` **Name:** `error_prone_annotations` **Version:** `2.4.0` \n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**12** **Group:** `com.google.guava` **Name:** `failureaccess` **Version:** `1.0.1` \n+**10** **Group:** `com.google.guava` **Name:** `failureaccess` **Version:** `1.0.1` \n > - **Manifest Project URL**: [https://github.com/google/guava/](https://github.com/google/guava/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**13** **Group:** `com.google.guava` **Name:** `failureaccess` **Version:** `1.0.1` \n+**11** **Group:** `com.google.guava` **Name:** `failureaccess` **Version:** `1.0.1` \n > - **Manifest Project URL**: [https://github.com/google/guava/](https://github.com/google/guava/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**14** **Group:** `com.google.guava` **Name:** `guava` **Version:** `30.0-android` \n+**12** **Group:** `com.google.guava` **Name:** `guava` **Version:** `30.0-android` \n > - **Manifest Project URL**: [https://github.com/google/guava/](https://github.com/google/guava/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**15** **Group:** `com.google.guava` **Name:** `guava` **Version:** `30.0-android` \n+**13** **Group:** `com.google.guava` **Name:** `guava` **Version:** `30.0-android` \n > - **Manifest Project URL**: [https://github.com/google/guava/](https://github.com/google/guava/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**16** **Group:** `com.google.guava` **Name:** `listenablefuture` **Version:** `9999.0-empty-to-avoid-conflict-with-guava` \n+**14** **Group:** `com.google.guava` **Name:** `listenablefuture` **Version:** `9999.0-empty-to-avoid-conflict-with-guava` \n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**17** **Group:** `com.google.j2objc` **Name:** `j2objc-annotations` **Version:** `1.3` \n+**15** **Group:** `com.google.j2objc` **Name:** `j2objc-annotations` **Version:** `1.3` \n > - **POM Project URL**: [https://github.com/google/j2objc/](https://github.com/google/j2objc/)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**18** **Group:** `com.squareup.okhttp3` **Name:** `okhttp` **Version:** `3.14.9` \n+**16** **Group:** `com.squareup.okhttp3` **Name:** `okhttp` **Version:** `3.14.9` \n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [okhttp-3.14.9.jar/okhttp3/internal/publicsuffix/NOTICE](okhttp-3.14.9.jar/okhttp3/internal/publicsuffix/NOTICE)\n \n-**19** **Group:** `com.squareup.okio` **Name:** `okio` **Version:** `1.17.2` \n+**17** **Group:** `com.squareup.okio` **Name:** `okio` **Version:** `1.17.2` \n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**20** **Group:** `io.grpc` **Name:** `grpc-api` **Version:** `1.35.0` \n+**18** **Group:** `io.grpc` **Name:** `grpc-api` **Version:** `1.35.0` \n > - **POM Project URL**: [https://github.com/grpc/grpc-java](https://github.com/grpc/grpc-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**21** **Group:** `io.grpc` **Name:** `grpc-context` **Version:** `1.35.0` \n+**19** **Group:** `io.grpc` **Name:** `grpc-context` **Version:** `1.35.0` \n > - **POM Project URL**: [https://github.com/grpc/grpc-java](https://github.com/grpc/grpc-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**22** **Group:** `io.grpc` **Name:** `grpc-core` **Version:** `1.34.1` \n+**20** **Group:** `io.grpc` **Name:** `grpc-core` **Version:** `1.34.1` \n > - **POM Project URL**: [https://github.com/grpc/grpc-java](https://github.com/grpc/grpc-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**23** **Group:** `io.grpc` **Name:** `grpc-netty` **Version:** `1.34.1` \n+**21** **Group:** `io.grpc` **Name:** `grpc-netty` **Version:** `1.34.1` \n > - **POM Project URL**: [https://github.com/grpc/grpc-java](https://github.com/grpc/grpc-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**24** **Group:** `io.grpc` **Name:** `grpc-protobuf` **Version:** `1.35.0` \n+**22** **Group:** `io.grpc` **Name:** `grpc-protobuf` **Version:** `1.35.0` \n > - **POM Project URL**: [https://github.com/grpc/grpc-java](https://github.com/grpc/grpc-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**25** **Group:** `io.grpc` **Name:** `grpc-protobuf-lite` **Version:** `1.35.0` \n+**23** **Group:** `io.grpc` **Name:** `grpc-protobuf-lite` **Version:** `1.35.0` \n > - **POM Project URL**: [https://github.com/grpc/grpc-java](https://github.com/grpc/grpc-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**26** **Group:** `io.grpc` **Name:** `grpc-stub` **Version:** `1.35.0` \n+**24** **Group:** `io.grpc` **Name:** `grpc-stub` **Version:** `1.35.0` \n > - **POM Project URL**: [https://github.com/grpc/grpc-java](https://github.com/grpc/grpc-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n+**25** **Group:** `io.netty` **Name:** `netty-buffer` **Version:** `4.1.51.Final` \n+> - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n+> - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n+> - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n+\n+**26** **Group:** `io.netty` **Name:** `netty-buffer` **Version:** `4.1.51.Final` \n+> - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n+> - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n+> - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n+\n **27** **Group:** `io.netty` **Name:** `netty-buffer` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**28** **Group:** `io.netty` **Name:** `netty-buffer` **Version:** `4.1.51.Final` \n+**28** **Group:** `io.netty` **Name:** `netty-codec` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**29** **Group:** `io.netty` **Name:** `netty-buffer` **Version:** `4.1.51.Final` \n+**29** **Group:** `io.netty` **Name:** `netty-codec` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n@@ -131,12 +131,12 @@ _2021-02-15 23:04:10 PST_\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**31** **Group:** `io.netty` **Name:** `netty-codec` **Version:** `4.1.51.Final` \n+**31** **Group:** `io.netty` **Name:** `netty-codec-http` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**32** **Group:** `io.netty` **Name:** `netty-codec` **Version:** `4.1.51.Final` \n+**32** **Group:** `io.netty` **Name:** `netty-codec-http` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n@@ -146,12 +146,12 @@ _2021-02-15 23:04:10 PST_\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**34** **Group:** `io.netty` **Name:** `netty-codec-http` **Version:** `4.1.51.Final` \n+**34** **Group:** `io.netty` **Name:** `netty-codec-http2` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**35** **Group:** `io.netty` **Name:** `netty-codec-http` **Version:** `4.1.51.Final` \n+**35** **Group:** `io.netty` **Name:** `netty-codec-http2` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n@@ -161,12 +161,12 @@ _2021-02-15 23:04:10 PST_\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**37** **Group:** `io.netty` **Name:** `netty-codec-http2` **Version:** `4.1.51.Final` \n+**37** **Group:** `io.netty` **Name:** `netty-codec-socks` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**38** **Group:** `io.netty` **Name:** `netty-codec-http2` **Version:** `4.1.51.Final` \n+**38** **Group:** `io.netty` **Name:** `netty-codec-socks` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n@@ -176,12 +176,12 @@ _2021-02-15 23:04:10 PST_\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**40** **Group:** `io.netty` **Name:** `netty-codec-socks` **Version:** `4.1.51.Final` \n+**40** **Group:** `io.netty` **Name:** `netty-common` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**41** **Group:** `io.netty` **Name:** `netty-codec-socks` **Version:** `4.1.51.Final` \n+**41** **Group:** `io.netty` **Name:** `netty-common` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n@@ -191,12 +191,12 @@ _2021-02-15 23:04:10 PST_\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**43** **Group:** `io.netty` **Name:** `netty-common` **Version:** `4.1.51.Final` \n+**43** **Group:** `io.netty` **Name:** `netty-handler` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**44** **Group:** `io.netty` **Name:** `netty-common` **Version:** `4.1.51.Final` \n+**44** **Group:** `io.netty` **Name:** `netty-handler` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n@@ -206,12 +206,12 @@ _2021-02-15 23:04:10 PST_\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**46** **Group:** `io.netty` **Name:** `netty-handler` **Version:** `4.1.51.Final` \n+**46** **Group:** `io.netty` **Name:** `netty-handler-proxy` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**47** **Group:** `io.netty` **Name:** `netty-handler` **Version:** `4.1.51.Final` \n+**47** **Group:** `io.netty` **Name:** `netty-handler-proxy` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n@@ -221,12 +221,12 @@ _2021-02-15 23:04:10 PST_\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**49** **Group:** `io.netty` **Name:** `netty-handler-proxy` **Version:** `4.1.51.Final` \n+**49** **Group:** `io.netty` **Name:** `netty-resolver` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**50** **Group:** `io.netty` **Name:** `netty-handler-proxy` **Version:** `4.1.51.Final` \n+**50** **Group:** `io.netty` **Name:** `netty-resolver` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n@@ -236,12 +236,12 @@ _2021-02-15 23:04:10 PST_\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**52** **Group:** `io.netty` **Name:** `netty-resolver` **Version:** `4.1.51.Final` \n+**52** **Group:** `io.netty` **Name:** `netty-transport` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**53** **Group:** `io.netty` **Name:** `netty-resolver` **Version:** `4.1.51.Final` \n+**53** **Group:** `io.netty` **Name:** `netty-transport` **Version:** `4.1.51.Final` \n > - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n@@ -251,246 +251,236 @@ _2021-02-15 23:04:10 PST_\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n \n-**55** **Group:** `io.netty` **Name:** `netty-transport` **Version:** `4.1.51.Final` \n-> - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n-> - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n-> - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n-\n-**56** **Group:** `io.netty` **Name:** `netty-transport` **Version:** `4.1.51.Final` \n-> - **Manifest Project URL**: [https://netty.io/](https://netty.io/)\n-> - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n-> - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n-\n-**57** **Group:** `io.opentelemetry` **Name:** `opentelemetry-api` **Version:** `0.16.0` \n+**55** **Group:** `io.opentelemetry` **Name:** `opentelemetry-api` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**58** **Group:** `io.opentelemetry` **Name:** `opentelemetry-api-metrics` **Version:** `0.16.0-alpha` \n+**56** **Group:** `io.opentelemetry` **Name:** `opentelemetry-api-metrics` **Version:** `1.0.1-alpha` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**59** **Group:** `io.opentelemetry` **Name:** `opentelemetry-context` **Version:** `0.16.0` \n+**57** **Group:** `io.opentelemetry` **Name:** `opentelemetry-context` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**60** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-jaeger` **Version:** `0.16.0` \n+**58** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-jaeger` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**61** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-logging` **Version:** `0.16.0` \n+**59** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-logging` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**62** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-otlp` **Version:** `0.16.0` \n+**60** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-otlp` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**63** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-otlp-metrics` **Version:** `0.16.0-alpha` \n+**61** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-otlp-common` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**64** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-otlp-trace` **Version:** `0.16.0` \n+**62** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-otlp-metrics` **Version:** `1.0.1-alpha` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**65** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-prometheus` **Version:** `0.16.0-alpha` \n+**63** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-otlp-trace` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**66** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-zipkin` **Version:** `0.16.0` \n+**64** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-prometheus` **Version:** `1.0.1-alpha` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**67** **Group:** `io.opentelemetry` **Name:** `opentelemetry-extension-aws` **Version:** `0.16.0` \n+**65** **Group:** `io.opentelemetry` **Name:** `opentelemetry-exporter-zipkin` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**68** **Group:** `io.opentelemetry` **Name:** `opentelemetry-extension-kotlin` **Version:** `0.16.0` \n+**66** **Group:** `io.opentelemetry` **Name:** `opentelemetry-extension-aws` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**69** **Group:** `io.opentelemetry` **Name:** `opentelemetry-extension-trace-propagators` **Version:** `0.16.0` \n+**67** **Group:** `io.opentelemetry` **Name:** `opentelemetry-extension-kotlin` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**70** **Group:** `io.opentelemetry` **Name:** `opentelemetry-proto` **Version:** `0.16.0` \n+**68** **Group:** `io.opentelemetry` **Name:** `opentelemetry-extension-trace-propagators` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**71** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk` **Version:** `0.16.0` \n+**69** **Group:** `io.opentelemetry` **Name:** `opentelemetry-proto` **Version:** `1.0.1-alpha` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**72** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-common` **Version:** `0.16.0` \n+**70** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**73** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-extension-autoconfigure` **Version:** `0.16.0-alpha` \n+**71** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-common` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**74** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-extension-otproto` **Version:** `0.16.0` \n+**72** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-extension-autoconfigure` **Version:** `1.0.1-alpha` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**75** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-extension-resources` **Version:** `0.16.0` \n+**73** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-extension-resources` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**76** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-metrics` **Version:** `0.16.0-alpha` \n+**74** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-metrics` **Version:** `1.0.1-alpha` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**77** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-trace` **Version:** `0.16.0` \n+**75** **Group:** `io.opentelemetry` **Name:** `opentelemetry-sdk-trace` **Version:** `1.0.1` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**78** **Group:** `io.opentelemetry` **Name:** `opentelemetry-semconv` **Version:** `0.16.0-alpha` \n+**76** **Group:** `io.opentelemetry` **Name:** `opentelemetry-semconv` **Version:** `1.0.1-alpha` \n > - **POM Project URL**: [https://github.com/open-telemetry/opentelemetry-java](https://github.com/open-telemetry/opentelemetry-java)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**79** **Group:** `io.perfmark` **Name:** `perfmark-api` **Version:** `0.19.0` \n+**77** **Group:** `io.perfmark` **Name:** `perfmark-api` **Version:** `0.19.0` \n > - **POM Project URL**: [https://github.com/perfmark/perfmark](https://github.com/perfmark/perfmark)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**80** **Group:** `io.prometheus` **Name:** `simpleclient` **Version:** `0.10.0` \n+**78** **Group:** `io.prometheus` **Name:** `simpleclient` **Version:** `0.10.0` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**81** **Group:** `io.prometheus` **Name:** `simpleclient` **Version:** `0.10.0` \n+**79** **Group:** `io.prometheus` **Name:** `simpleclient` **Version:** `0.10.0` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**82** **Group:** `io.prometheus` **Name:** `simpleclient_common` **Version:** `0.9.0` \n+**80** **Group:** `io.prometheus` **Name:** `simpleclient_common` **Version:** `0.9.0` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**83** **Group:** `io.prometheus` **Name:** `simpleclient_common` **Version:** `0.9.0` \n+**81** **Group:** `io.prometheus` **Name:** `simpleclient_common` **Version:** `0.9.0` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**84** **Group:** `io.prometheus` **Name:** `simpleclient_httpserver` **Version:** `0.9.0` \n+**82** **Group:** `io.prometheus` **Name:** `simpleclient_httpserver` **Version:** `0.9.0` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**85** **Group:** `io.prometheus` **Name:** `simpleclient_httpserver` **Version:** `0.9.0` \n+**83** **Group:** `io.prometheus` **Name:** `simpleclient_httpserver` **Version:** `0.9.0` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n \n-**86** **Group:** `io.zipkin.reporter2` **Name:** `zipkin-reporter` **Version:** `2.16.3` \n+**84** **Group:** `io.zipkin.reporter2` **Name:** `zipkin-reporter` **Version:** `2.16.3` \n > - **Manifest Project URL**: [https://zipkin.io/](https://zipkin.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [zipkin-reporter-2.16.3.jar/META-INF/LICENSE](zipkin-reporter-2.16.3.jar/META-INF/LICENSE)\n \n-**87** **Group:** `io.zipkin.reporter2` **Name:** `zipkin-reporter` **Version:** `2.16.3` \n+**85** **Group:** `io.zipkin.reporter2` **Name:** `zipkin-reporter` **Version:** `2.16.3` \n > - **Manifest Project URL**: [https://zipkin.io/](https://zipkin.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [zipkin-reporter-2.16.3.jar/META-INF/LICENSE](zipkin-reporter-2.16.3.jar/META-INF/LICENSE)\n \n-**88** **Group:** `io.zipkin.reporter2` **Name:** `zipkin-sender-okhttp3` **Version:** `2.16.3` \n+**86** **Group:** `io.zipkin.reporter2` **Name:** `zipkin-sender-okhttp3` **Version:** `2.16.3` \n > - **Manifest Project URL**: [https://zipkin.io/](https://zipkin.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [zipkin-sender-okhttp3-2.16.3.jar/META-INF/LICENSE](zipkin-sender-okhttp3-2.16.3.jar/META-INF/LICENSE)\n \n-**89** **Group:** `io.zipkin.reporter2` **Name:** `zipkin-sender-okhttp3` **Version:** `2.16.3` \n+**87** **Group:** `io.zipkin.reporter2` **Name:** `zipkin-sender-okhttp3` **Version:** `2.16.3` \n > - **Manifest Project URL**: [https://zipkin.io/](https://zipkin.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [zipkin-sender-okhttp3-2.16.3.jar/META-INF/LICENSE](zipkin-sender-okhttp3-2.16.3.jar/META-INF/LICENSE)\n \n-**90** **Group:** `io.zipkin.zipkin2` **Name:** `zipkin` **Version:** `2.23.2` \n+**88** **Group:** `io.zipkin.zipkin2` **Name:** `zipkin` **Version:** `2.23.2` \n > - **Manifest Project URL**: [http://zipkin.io/](http://zipkin.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [zipkin-2.23.2.jar/META-INF/LICENSE](zipkin-2.23.2.jar/META-INF/LICENSE)\n \n-**91** **Group:** `io.zipkin.zipkin2` **Name:** `zipkin` **Version:** `2.23.2` \n+**89** **Group:** `io.zipkin.zipkin2` **Name:** `zipkin` **Version:** `2.23.2` \n > - **Manifest Project URL**: [http://zipkin.io/](http://zipkin.io/)\n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [zipkin-2.23.2.jar/META-INF/LICENSE](zipkin-2.23.2.jar/META-INF/LICENSE)\n \n-**92** **Group:** `net.bytebuddy` **Name:** `byte-buddy` **Version:** `1.10.18` \n+**90** **Group:** `net.bytebuddy` **Name:** `byte-buddy` **Version:** `1.10.18` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [byte-buddy-1.10.18.jar/META-INF/LICENSE](byte-buddy-1.10.18.jar/META-INF/LICENSE) \n     - [byte-buddy-1.10.18.jar/META-INF/NOTICE](byte-buddy-1.10.18.jar/META-INF/NOTICE)\n \n-**93** **Group:** `net.bytebuddy` **Name:** `byte-buddy` **Version:** `1.10.18` \n+**91** **Group:** `net.bytebuddy` **Name:** `byte-buddy` **Version:** `1.10.18` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [byte-buddy-1.10.18.jar/META-INF/LICENSE](byte-buddy-1.10.18.jar/META-INF/LICENSE) \n     - [byte-buddy-1.10.18.jar/META-INF/NOTICE](byte-buddy-1.10.18.jar/META-INF/NOTICE)\n \n-**94** **Group:** `net.bytebuddy` **Name:** `byte-buddy-agent` **Version:** `1.10.18` \n+**92** **Group:** `net.bytebuddy` **Name:** `byte-buddy-agent` **Version:** `1.10.18` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [byte-buddy-agent-1.10.18.jar/META-INF/LICENSE](byte-buddy-agent-1.10.18.jar/META-INF/LICENSE) \n     - [byte-buddy-agent-1.10.18.jar/META-INF/NOTICE](byte-buddy-agent-1.10.18.jar/META-INF/NOTICE)\n \n-**95** **Group:** `net.bytebuddy` **Name:** `byte-buddy-agent` **Version:** `1.10.18` \n+**93** **Group:** `net.bytebuddy` **Name:** `byte-buddy-agent` **Version:** `1.10.18` \n > - **Manifest License**: Apache License, Version 2.0 (Not Packaged)\n > - **POM License**: Apache License, Version 2.0 - [https://www.apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n > - **Embedded license files**: [byte-buddy-agent-1.10.18.jar/META-INF/LICENSE](byte-buddy-agent-1.10.18.jar/META-INF/LICENSE) \n     - [byte-buddy-agent-1.10.18.jar/META-INF/NOTICE](byte-buddy-agent-1.10.18.jar/META-INF/NOTICE)\n \n-**96** **Group:** `org.codehaus.mojo` **Name:** `animal-sniffer-annotations` **Version:** `1.19` \n+**94** **Group:** `org.codehaus.mojo` **Name:** `animal-sniffer-annotations` **Version:** `1.19` \n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n > - **POM License**: MIT License - [https://opensource.org/licenses/MIT](https://opensource.org/licenses/MIT)\n \n ## GNU GENERAL PUBLIC LICENSE, Version 2 + Classpath Exception\n \n-**97** **Group:** `org.checkerframework` **Name:** `checker-compat-qual` **Version:** `2.5.5` \n+**95** **Group:** `org.checkerframework` **Name:** `checker-compat-qual` **Version:** `2.5.5` \n > - **POM Project URL**: [https://checkerframework.org](https://checkerframework.org)\n > - **POM License**: GNU GENERAL PUBLIC LICENSE, Version 2 + Classpath Exception - [https://openjdk.java.net/legal/gplv2+ce.html](https://openjdk.java.net/legal/gplv2+ce.html)\n > - **POM License**: MIT License - [https://opensource.org/licenses/MIT](https://opensource.org/licenses/MIT)\n \n ## MIT License\n \n-**98** **Group:** `org.checkerframework` **Name:** `checker-compat-qual` **Version:** `2.5.5` \n+**96** **Group:** `org.checkerframework` **Name:** `checker-compat-qual` **Version:** `2.5.5` \n > - **POM Project URL**: [https://checkerframework.org](https://checkerframework.org)\n > - **POM License**: GNU GENERAL PUBLIC LICENSE, Version 2 + Classpath Exception - [https://openjdk.java.net/legal/gplv2+ce.html](https://openjdk.java.net/legal/gplv2+ce.html)\n > - **POM License**: MIT License - [https://opensource.org/licenses/MIT](https://opensource.org/licenses/MIT)\n \n-**99** **Group:** `org.codehaus.mojo` **Name:** `animal-sniffer-annotations` **Version:** `1.19` \n+**97** **Group:** `org.codehaus.mojo` **Name:** `animal-sniffer-annotations` **Version:** `1.19` \n > - **POM License**: Apache License, Version 2.0 - [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n > - **POM License**: MIT License - [https://opensource.org/licenses/MIT](https://opensource.org/licenses/MIT)\n \n-**100** **Group:** `org.slf4j` **Name:** `slf4j-api` **Version:** `1.7.30` \n+**98** **Group:** `org.slf4j` **Name:** `slf4j-api` **Version:** `1.7.30` \n > - **POM Project URL**: [http://www.slf4j.org](http://www.slf4j.org)\n > - **POM License**: MIT License - [https://opensource.org/licenses/MIT](https://opensource.org/licenses/MIT)\n \n-**101** **Group:** `org.slf4j` **Name:** `slf4j-simple` **Version:** `1.7.30` \n+**99** **Group:** `org.slf4j` **Name:** `slf4j-simple` **Version:** `1.7.30` \n > - **POM Project URL**: [http://www.slf4j.org](http://www.slf4j.org)\n > - **POM License**: MIT License - [https://opensource.org/licenses/MIT](https://opensource.org/licenses/MIT)\n \n ## The 3-Clause BSD License\n \n-**102** **Group:** `com.google.protobuf` **Name:** `protobuf-java` **Version:** `3.14.0` \n+**100** **Group:** `com.google.protobuf` **Name:** `protobuf-java` **Version:** `3.14.0` \n > - **Manifest Project URL**: [https://developers.google.com/protocol-buffers/](https://developers.google.com/protocol-buffers/)\n > - **Manifest License**: The 3-Clause BSD License (Not Packaged)\n > - **POM License**: The 3-Clause BSD License - [https://opensource.org/licenses/BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause)\n \n-**103** **Group:** `com.google.protobuf` **Name:** `protobuf-java` **Version:** `3.14.0` \n+**101** **Group:** `com.google.protobuf` **Name:** `protobuf-java` **Version:** `3.14.0` \n > - **Manifest Project URL**: [https://developers.google.com/protocol-buffers/](https://developers.google.com/protocol-buffers/)\n > - **Manifest License**: The 3-Clause BSD License (Not Packaged)\n > - **POM License**: The 3-Clause BSD License - [https://opensource.org/licenses/BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause)\n \n-**104** **Group:** `com.google.protobuf` **Name:** `protobuf-java-util` **Version:** `3.14.0` \n+**102** **Group:** `com.google.protobuf` **Name:** `protobuf-java-util` **Version:** `3.14.0` \n > - **Manifest Project URL**: [https://developers.google.com/protocol-buffers/](https://developers.google.com/protocol-buffers/)\n > - **Manifest License**: The 3-Clause BSD License (Not Packaged)\n > - **POM License**: The 3-Clause BSD License - [https://opensource.org/licenses/BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause)\n \n-**105** **Group:** `com.google.protobuf` **Name:** `protobuf-java-util` **Version:** `3.14.0` \n+**103** **Group:** `com.google.protobuf` **Name:** `protobuf-java-util` **Version:** `3.14.0` \n > - **Manifest Project URL**: [https://developers.google.com/protocol-buffers/](https://developers.google.com/protocol-buffers/)\n > - **Manifest License**: The 3-Clause BSD License (Not Packaged)\n > - **POM License**: The 3-Clause BSD License - [https://opensource.org/licenses/BSD-3-Clause](https://opensource.org/licenses/BSD-3-Clause)\n \n ## Unknown\n \n-**106** **Group:** `org.jetbrains.kotlin` **Name:** `kotlin-bom` **Version:** `1.4.21` \n+**104** **Group:** `org.jetbrains.kotlin` **Name:** `kotlin-bom` **Version:** `1.4.21` \n \n "
  }
]
