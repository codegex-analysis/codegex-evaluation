[
  {
    "sha": "72ac21783ee9b6ab73daf8fcc521bf0fdd6981d0",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/client/render/TabulaModelAccessor.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/client/render/TabulaModelAccessor.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/client/render/TabulaModelAccessor.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/client/render/TabulaModelAccessor.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -0,0 +1,22 @@\n+package com.github.alexthe666.iceandfire.client.render;\n+\n+import com.github.alexthe666.citadel.client.model.AdvancedModelBox;\n+import com.github.alexthe666.citadel.client.model.ITabulaModelAnimator;\n+import com.github.alexthe666.citadel.client.model.TabulaModel;\n+import com.github.alexthe666.citadel.client.model.container.TabulaModelContainer;\n+\n+import java.util.List;\n+\n+public class TabulaModelAccessor extends TabulaModel {\n+    public TabulaModelAccessor(TabulaModelContainer container, ITabulaModelAnimator tabulaAnimator) {\n+        super(container, tabulaAnimator);\n+    }\n+\n+    public TabulaModelAccessor(TabulaModelContainer container) {\n+        super(container);\n+    }\n+\n+    public List<AdvancedModelBox> getRootBox() {\n+        return super.rootBoxes;\n+    }\n+}"
  },
  {
    "sha": "b0e111162a212589acf8091ad62c2c56d6b72d89",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadBeast.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadBeast.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadBeast.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadBeast.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -68,7 +68,12 @@ protected void registerGoals() {\n         this.goalSelector.addGoal(6, new LookAtGoal(this, PlayerEntity.class, 8.0F));\n         this.goalSelector.addGoal(7, new LookRandomlyGoal(this));\n         this.targetSelector.addGoal(1, new HurtByTargetGoal(this, IDreadMob.class));\n-        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, true));\n+        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, 10,true,false,new Predicate<LivingEntity>() {\n+            @Override\n+            public boolean apply(@Nullable LivingEntity entity) {\n+                return DragonUtils.canHostilesTarget(entity);\n+            }\n+        }));\n         this.targetSelector.addGoal(3, new DreadAITargetNonDread(this, LivingEntity.class, false, new Predicate<LivingEntity>() {\n             @Override\n             public boolean apply(LivingEntity entity) {"
  },
  {
    "sha": "ac663d822588f2d26ae6f1b9b020eefe057886c4",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadGhoul.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadGhoul.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadGhoul.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadGhoul.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -72,7 +72,12 @@ protected void registerGoals() {\n         this.goalSelector.addGoal(6, new LookAtGoal(this, PlayerEntity.class, 8.0F));\n         this.goalSelector.addGoal(7, new LookRandomlyGoal(this));\n         this.targetSelector.addGoal(1, new HurtByTargetGoal(this, IDreadMob.class));\n-        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, true));\n+        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, 10,true,false,new Predicate<LivingEntity>() {\n+            @Override\n+            public boolean apply(@Nullable LivingEntity entity) {\n+                return DragonUtils.canHostilesTarget(entity);\n+            }\n+        }));\n         this.targetSelector.addGoal(3, new DreadAITargetNonDread(this, LivingEntity.class, false, new Predicate<LivingEntity>() {\n             @Override\n             public boolean apply(@Nullable LivingEntity entity) {\n@@ -120,6 +125,7 @@ public boolean attackEntityAsMob(Entity entityIn) {\n \n     public void livingTick() {\n         super.livingTick();\n+\n         if (Math.abs(firstWidth - INITIAL_WIDTH * getScale()) > 0.01F || Math.abs(firstHeight - INITIAL_HEIGHT * getScale()) > 0.01F) {\n             firstWidth = INITIAL_WIDTH * getScale();\n             firstHeight = INITIAL_HEIGHT * getScale();"
  },
  {
    "sha": "e83032359828a3ecdaad4794ded2c38b0ae9e945",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadKnight.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadKnight.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadKnight.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadKnight.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -98,7 +98,12 @@ protected void registerGoals() {\n         this.goalSelector.addGoal(6, new LookAtGoal(this, PlayerEntity.class, 8.0F));\n         this.goalSelector.addGoal(7, new LookRandomlyGoal(this));\n         this.targetSelector.addGoal(1, new HurtByTargetGoal(this, IDreadMob.class));\n-        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, true));\n+        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, 10,true,false,new Predicate<LivingEntity>() {\n+            @Override\n+            public boolean apply(@Nullable LivingEntity entity) {\n+                return DragonUtils.canHostilesTarget(entity);\n+            }\n+        }));\n         this.targetSelector.addGoal(3, new DreadAITargetNonDread(this, LivingEntity.class, false, new Predicate<LivingEntity>() {\n             @Override\n             public boolean apply(LivingEntity entity) {"
  },
  {
    "sha": "9aecc70df4e3905037c22be95709bccc8842c8e2",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadLich.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadLich.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadLich.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadLich.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -93,7 +93,12 @@ protected void registerGoals() {\n         this.goalSelector.addGoal(6, new LookAtGoal(this, PlayerEntity.class, 8.0F));\n         this.goalSelector.addGoal(7, new LookRandomlyGoal(this));\n         this.targetSelector.addGoal(1, new HurtByTargetGoal(this, IDreadMob.class));\n-        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, true));\n+        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, 10,true,false,new Predicate<LivingEntity>() {\n+            @Override\n+            public boolean apply(@Nullable LivingEntity entity) {\n+                return DragonUtils.canHostilesTarget(entity);\n+            }\n+        }));\n         this.targetSelector.addGoal(3, new DreadAITargetNonDread(this, LivingEntity.class, false, new Predicate<LivingEntity>() {\n             public boolean apply(LivingEntity entity) {\n                 return entity instanceof LivingEntity && DragonUtils.canHostilesTarget(entity);"
  },
  {
    "sha": "defadf91b2dbb2c6e926b3f486793f19e8d7e412",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadQueen.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadQueen.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadQueen.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadQueen.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -57,7 +57,12 @@ protected void registerGoals() {\n         this.goalSelector.addGoal(6, new LookAtGoal(this, PlayerEntity.class, 8.0F));\n         this.goalSelector.addGoal(7, new LookRandomlyGoal(this));\n         this.targetSelector.addGoal(1, new HurtByTargetGoal(this));\n-        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, true));\n+        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, 10,true,false,new Predicate<LivingEntity>() {\n+            @Override\n+            public boolean apply(@Nullable LivingEntity entity) {\n+                return DragonUtils.canHostilesTarget(entity);\n+            }\n+        }));\n         this.targetSelector.addGoal(3, new DreadAITargetNonDread(this, LivingEntity.class, false, new Predicate<LivingEntity>() {\n             @Override\n             public boolean apply(LivingEntity entity) {"
  },
  {
    "sha": "c0a77afc69536934770c12ccbc3d4ca8f2fcef6e",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadScuttler.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadScuttler.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadScuttler.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadScuttler.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -73,7 +73,12 @@ protected void registerGoals() {\n         this.goalSelector.addGoal(6, new LookAtGoal(this, PlayerEntity.class, 8.0F));\n         this.goalSelector.addGoal(7, new LookRandomlyGoal(this));\n         this.targetSelector.addGoal(1, new HurtByTargetGoal(this, IDreadMob.class));\n-        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, true));\n+        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, 10,true,false,new Predicate<LivingEntity>() {\n+            @Override\n+            public boolean apply(@Nullable LivingEntity entity) {\n+                return DragonUtils.canHostilesTarget(entity);\n+            }\n+        }));\n         this.targetSelector.addGoal(3, new DreadAITargetNonDread(this, LivingEntity.class, false, new Predicate<LivingEntity>() {\n             @Override\n             public boolean apply(LivingEntity entity) {"
  },
  {
    "sha": "5e1c75eeb05f943b69e8885f741e83bc2448dece",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadThrall.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadThrall.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadThrall.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/EntityDreadThrall.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -72,7 +72,12 @@ protected void registerGoals() {\n         this.goalSelector.addGoal(6, new LookAtGoal(this, PlayerEntity.class, 8.0F));\n         this.goalSelector.addGoal(7, new LookRandomlyGoal(this));\n         this.targetSelector.addGoal(1, new HurtByTargetGoal(this, IDreadMob.class));\n-        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, true));\n+        this.targetSelector.addGoal(2, new NearestAttackableTargetGoal<>(this, PlayerEntity.class, 10,true,false,new Predicate<LivingEntity>() {\n+            @Override\n+            public boolean apply(@Nullable LivingEntity entity) {\n+                return DragonUtils.canHostilesTarget(entity);\n+            }\n+        }));\n         this.targetSelector.addGoal(3, new DreadAITargetNonDread(this, LivingEntity.class, false, new Predicate<LivingEntity>() {\n             @Override\n             public boolean apply(LivingEntity entity) {"
  },
  {
    "sha": "8e6e8a2a6b5214c5c0c64bd99b19fe277323938e",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/EntityMyrmexBase.java",
    "status": "modified",
    "additions": 29,
    "deletions": 1,
    "changes": 30,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityMyrmexBase.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityMyrmexBase.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/EntityMyrmexBase.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -18,6 +18,7 @@\n import com.github.alexthe666.iceandfire.misc.IafSoundRegistry;\n import com.github.alexthe666.iceandfire.misc.IafTagRegistry;\n import com.github.alexthe666.iceandfire.pathfinding.raycoms.AdvancedPathNavigate;\n+import com.github.alexthe666.iceandfire.pathfinding.raycoms.PathResult;\n import com.github.alexthe666.iceandfire.pathfinding.raycoms.pathjobs.ICustomSizeNavigator;\n import com.github.alexthe666.iceandfire.world.MyrmexWorldData;\n import com.github.alexthe666.iceandfire.world.gen.WorldGenMyrmexHive;\n@@ -379,7 +380,7 @@ public void setBesideClimbableBlock(boolean climbing) {\n     public boolean isOnLadder() {\n         if (this.getNavigator() instanceof AdvancedPathNavigate ){\n             //Make sure the entity can only climb when it's on or below the path. This prevents the entity from getting stuck\n-            if(((AdvancedPathNavigate) this.getNavigator()).entityOnOrBelowPath(this, new Vector3d(1,1.5,1)))\n+            if(((AdvancedPathNavigate) this.getNavigator()).entityOnOrBelowPath(this, new Vector3d(1.1,1.5,1.1)))\n                 return true;\n         }\n         return super.isOnLadder();\n@@ -594,6 +595,16 @@ public boolean isInNursery() {\n         return false;\n     }\n \n+    public boolean isInHive(){\n+        if (getHive() != null) {\n+            for (BlockPos pos : getHive().getAllRooms()) {\n+                if (isCloseEnoughToTarget(MyrmexHive.getGroundedPos(getWorld(), pos), 20))\n+                    return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n     @Override\n     public void travel(Vector3d motion) {\n         if (!this.canMove()) {\n@@ -856,6 +867,23 @@ protected void populateTradeData() {\n         }\n     }\n \n+    public boolean isCloseEnoughToTarget(BlockPos target, double distanceSquared) {\n+        if (target != null) {\n+            return this.getDistanceSq(target.getX() + 0.5D, target.getY() + 0.5D, target.getZ() + 0.5D) <= distanceSquared;\n+        }\n+        return false;\n+    }\n+    //if the path created couldn't reach the destination or if the entity isn't close enough to the targetBlock\n+    public boolean pathReachesTarget(PathResult path, BlockPos target, double distanceSquared){\n+        if((!path.isInProgress() && !path.isPathReachingDestination())\n+                || (!this.isCloseEnoughToTarget(target,distanceSquared) && this.getNavigator().getPath() != null && this.getNavigator().getPath().isFinished())) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+\n+\n     public boolean isSmallerThanBlock(){\n         return false;\n     }"
  },
  {
    "sha": "9200ec3c2aa620aac12aa2189d49dcd3ddb203c2",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/EntityMyrmexWorker.java",
    "status": "modified",
    "additions": 3,
    "deletions": 15,
    "changes": 18,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityMyrmexWorker.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/EntityMyrmexWorker.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/EntityMyrmexWorker.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -122,7 +122,7 @@ protected void registerGoals() {\n         this.goalSelector.addGoal(3, new MyrmexAIStoreItems(this, 1.0D));\n         this.goalSelector.addGoal(4, new MyrmexAIReEnterHive(this, 1.0D));\n         this.goalSelector.addGoal(4, new MyrmexAILeaveHive(this, 1.0D));\n-        this.goalSelector.addGoal(6, new MyrmexAIForage(this));\n+        this.goalSelector.addGoal(6, new MyrmexAIForage(this,2));\n         this.goalSelector.addGoal(7, new MyrmexAIMoveThroughHive(this, 1.0D));\n         this.goalSelector.addGoal(8, new MyrmexAIWander(this, 1D));\n         this.goalSelector.addGoal(9, new LookAtGoal(this, PlayerEntity.class, 6.0F));\n@@ -138,25 +138,13 @@ public boolean apply(@Nullable LivingEntity entity) {\n             }\n         }));\n \n+\n     }\n \n     public boolean shouldWander() {\n         return super.shouldWander() && this.canSeeSky();\n     }\n \n-    /*public void debugStuff(){\n-        List<String> goals = this.goalSelector.getRunningGoals().map(goal -> goal.getGoal().toString()).collect(Collectors.toList());\n-        List<String> targets = this.targetSelector.getRunningGoals().map(goal ->goal.getGoal().toString()).collect(Collectors.toList());\n-        if (!goals.isEmpty())\n-            LOGGER.info(\"GOALS: \"+ goals);\n-        if(!targets.isEmpty())\n-            LOGGER.info(\"TARGET: \" + targets);\n-        if (this.getWaitTicks() != 0){\n-            LOGGER.info(this.getWaitTicks());\n-            LOGGER.info(this.lastGoal.toString());\n-        }\n-    }*/\n-\n     @Override\n     protected VillagerTrades.ITrade[] getLevel1Trades() {\n         return isJungle() ? MyrmexTrades.JUNGLE_WORKER.get(1) : MyrmexTrades.DESERT_WORKER.get(1);\n@@ -196,7 +184,7 @@ public boolean shouldLeaveHive() {\n     }\n \n     public boolean shouldEnterHive() {\n-        return holdingSomething();\n+        return holdingSomething() || !world.isDaytime();\n     }\n \n     public boolean shouldMoveThroughHive() {"
  },
  {
    "sha": "9f4c5bc6629a4520d8a1beadfcc76187c6f3245e",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/IafDragonLogic.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/IafDragonLogic.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/IafDragonLogic.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/IafDragonLogic.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -276,7 +276,7 @@ public void updateDragonServer() {\n         }\n         if (!dragon.isFlying() && !dragon.isHovering()) {\n             if (dragon.isAllowedToTriggerFlight() || dragon.getPosY() < -1) {\n-                if (dragon.getRNG().nextInt(dragon.getFlightChancePerTick()) == 0 || dragon.getPosY() < -1 || dragon.getAttackTarget() != null && dragon.getAttackTarget().getPosY() + 5 < dragon.getPosY() || dragon.isInWater() && !dragon.isIceInWater()) {\n+                if (dragon.getRNG().nextInt(dragon.getFlightChancePerTick()) == 0 || dragon.getPosY() < -1 || dragon.getAttackTarget() != null && Math.abs(dragon.getAttackTarget().getPosY()- dragon.getPosY()) > 5 || dragon.isInWater() && !dragon.isIceInWater()) {\n                     dragon.setHovering(true);\n                     dragon.setSleeping(false);\n                     dragon.setSitting(false);"
  },
  {
    "sha": "578336872474d0344ad1d30af2d078a3676af5b9",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/AiDebug.java",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/AiDebug.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/AiDebug.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/AiDebug.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -0,0 +1,65 @@\n+package com.github.alexthe666.iceandfire.entity.ai;\n+\n+import net.minecraft.entity.MobEntity;\n+import net.minecraftforge.client.event.RenderWorldLastEvent;\n+import net.minecraftforge.eventbus.api.SubscribeEvent;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+\n+/**\n+ * Class to easily list the current tasks/goals of entities and identify potential issues\n+ */\n+public class AiDebug {\n+    private static List<MobEntity> entities = new ArrayList<>();\n+    private static Logger LOGGER = LogManager.getLogger();\n+\n+    private AiDebug() {\n+        //Hides default constructor.\n+    }\n+\n+    public static boolean isEnabled(){\n+        return false;\n+    }\n+\n+    public static void logData(){\n+        List<MobEntity> entitiesCopy = new ArrayList<>(entities);\n+        for (MobEntity entity : entitiesCopy) {\n+            if (!entity.isAlive()){\n+                entities.remove(entity);\n+                continue;\n+            }\n+            if (entity.goalSelector != null) {\n+                List<String> goals = entity.goalSelector.getRunningGoals().map(goal -> goal.getGoal().toString()).collect(Collectors.toList());\n+                if (!goals.isEmpty())\n+                    LOGGER.debug(entity.toString() +\" - GOALS: \" + goals);\n+            }\n+            if (entity.targetSelector != null) {\n+                List<String> targets = entity.targetSelector.getRunningGoals().map(goal -> goal.getGoal().toString()).collect(Collectors.toList());\n+                if (!targets.isEmpty())\n+                    LOGGER.debug(entity.toString() +\" - TARGET: \" + targets);\n+            }\n+\n+        }\n+    }\n+\n+    public static boolean contains(MobEntity entity){\n+        return entities.contains(entity);\n+    }\n+\n+    public static void addEntity(MobEntity entity){\n+        if (entities.contains(entity)){\n+            entities.remove(entity);\n+        }\n+        else {\n+            entities.add(entity);\n+        }\n+    }\n+\n+\n+}"
  },
  {
    "sha": "adf8388cc10a0b700de7be6e9bb3597f24359d80",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/AmphithereAITargetItems.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/AmphithereAITargetItems.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/AmphithereAITargetItems.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/AmphithereAITargetItems.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -50,6 +50,10 @@ public boolean shouldExecute() {\n         if (!((EntityAmphithere) this.goalOwner).canMove()) {\n             return false;\n         }\n+        //If the target entity already is what we want skip AABB\n+        if (targetEntitySelector.apply(this.targetEntity)){\n+            return true;\n+        }\n         List<ItemEntity> list = this.goalOwner.world.getEntitiesWithinAABB(ItemEntity.class, this.getTargetableArea(this.getTargetDistance()), this.targetEntitySelector);\n \n         if (list.isEmpty()) {\n@@ -71,6 +75,12 @@ public void startExecuting() {\n         super.startExecuting();\n     }\n \n+    @Override\n+    public void resetTask() {\n+        this.targetEntity = null;\n+        super.resetTask();\n+    }\n+\n     @Override\n     public void tick() {\n         super.tick();"
  },
  {
    "sha": "6a4b1acf87cc05c27aced75fe9e180ecff211ecb",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAIEscort.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAIEscort.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAIEscort.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAIEscort.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -6,11 +6,13 @@\n \n import net.minecraft.entity.ai.goal.Goal;\n import net.minecraft.pathfinding.Path;\n+import net.minecraft.util.math.BlockPos;\n \n public class DragonAIEscort extends Goal {\n     private final EntityDragonBase dragon;\n     private final double movementSpeed;\n     private Path path;\n+    private BlockPos previousPosition;\n \n     public DragonAIEscort(EntityDragonBase entityIn, double movementSpeedIn) {\n         this.dragon = entityIn;\n@@ -26,7 +28,10 @@ public void tick() {\n         if (this.dragon.getOwner() != null) {\n             double dist = this.dragon.getDistance(this.dragon.getOwner());\n             if (dist > this.dragon.getBoundingBox().getAverageEdgeLength() && (!this.dragon.isFlying() && !this.dragon.isHovering() || !dragon.isAllowedToTriggerFlight())) {\n-                this.dragon.getNavigator().tryMoveToEntityLiving(this.dragon.getOwner(), 1.5F);\n+                if(previousPosition == null || previousPosition.distanceSq(this.dragon.getOwner().getPosition()) > 9) {\n+                    this.dragon.getNavigator().tryMoveToEntityLiving(this.dragon.getOwner(), 1F);\n+                    previousPosition = this.dragon.getOwner().getPosition();\n+                }\n             }\n             if ((dist > 30 || this.dragon.getOwner().getPosY() - this.dragon.getPosY() > 8) && !this.dragon.isFlying() && !this.dragon.isHovering() && dragon.isAllowedToTriggerFlight()) {\n                 this.dragon.setHovering(true);"
  },
  {
    "sha": "e17b29ca04bf6a8ea22b14631dc50be8d7b74679",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAITarget.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAITarget.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAITarget.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAITarget.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -31,10 +31,9 @@ public boolean shouldExecute() {\n         if(!dragon.isTamed() && dragon.lookingForRoostAIFlag){\n             return false;\n         }\n-        boolean b = super.shouldExecute();\n-        if (b && nearestTarget != null && !nearestTarget.getClass().equals(this.dragon.getClass())) {\n+        if (nearestTarget != null && !nearestTarget.getClass().equals(this.dragon.getClass())) {\n             float dragonSize = Math.max(this.dragon.getWidth(), this.dragon.getWidth() * dragon.getRenderSize());\n-            if (dragonSize >= nearestTarget.getWidth()) {\n+            if (dragonSize >= nearestTarget.getWidth() && super.shouldExecute()) {\n                 if (nearestTarget instanceof PlayerEntity && !dragon.isTamed()) {\n                     return true;\n                 }"
  },
  {
    "sha": "ec525d63de82d5c7aa885ea03adde0620da096d0",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAITargetNonTamed.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAITargetNonTamed.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAITargetNonTamed.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DragonAITargetNonTamed.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -15,7 +15,7 @@\n     private EntityDragonBase dragon;\n \n     public DragonAITargetNonTamed(EntityDragonBase entityIn, Class<T> classTarget, boolean checkSight, Predicate<LivingEntity> targetSelector) {\n-        super(entityIn, classTarget, 0, checkSight, false, targetSelector);\n+        super(entityIn, classTarget, 5, checkSight, false, targetSelector);\n         this.setMutexFlags(EnumSet.of(Flag.TARGET));\n         this.dragon = entityIn;\n     }"
  },
  {
    "sha": "5da162a1e87ececc14af27424fd97d6467b894af",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/DreadAITargetNonDread.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DreadAITargetNonDread.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DreadAITargetNonDread.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/DreadAITargetNonDread.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -2,6 +2,7 @@\n \n import javax.annotation.Nullable;\n \n+import com.github.alexthe666.iceandfire.entity.EntityDragonBase;\n import com.github.alexthe666.iceandfire.entity.util.DragonUtils;\n import com.github.alexthe666.iceandfire.entity.util.IDreadMob;\n import com.google.common.base.Predicate;\n@@ -17,6 +18,14 @@ public DreadAITargetNonDread(MobEntity entityIn, Class<LivingEntity> classTarget\n         super(entityIn, classTarget, 0, checkSight, false, targetSelector);\n     }\n \n+    @Override\n+    public boolean shouldContinueExecuting() {\n+        if (this.goalOwner.getAttackTarget() instanceof EntityDragonBase && ((EntityDragonBase)this.goalOwner.getAttackTarget()).isMobDead()){\n+            return false;\n+        }\n+        return super.shouldContinueExecuting();\n+    }\n+\n     protected boolean isSuitableTarget(@Nullable LivingEntity target, EntityPredicate targetPredicate) {\n         if (super.isSuitableTarget(target, targetPredicate)) {\n             return !(target instanceof IDreadMob) && DragonUtils.isAlive(target);"
  },
  {
    "sha": "4e271d44be2c7cb48df51a398fb19f96a25e14f6",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIForage.java",
    "status": "modified",
    "additions": 94,
    "deletions": 45,
    "changes": 139,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIForage.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIForage.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIForage.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -1,12 +1,13 @@\n package com.github.alexthe666.iceandfire.entity.ai;\n \n import java.util.*;\n-import java.util.stream.Collectors;\n \n import com.github.alexthe666.iceandfire.api.event.GenericGriefEvent;\n import com.github.alexthe666.iceandfire.entity.EntityMyrmexBase;\n import com.github.alexthe666.iceandfire.entity.EntityMyrmexWorker;\n \n+import com.github.alexthe666.iceandfire.pathfinding.raycoms.AdvancedPathNavigate;\n+import com.github.alexthe666.iceandfire.pathfinding.raycoms.PathResult;\n import net.minecraft.block.BlockState;\n import net.minecraft.entity.ai.RandomPositionGenerator;\n import net.minecraft.entity.ai.goal.Goal;\n@@ -25,49 +26,40 @@\n     private final BlockSorter targetSorter;\n     private BlockPos targetBlock = null;\n     private int wanderRadius;\n-    public MyrmexAIForage(EntityMyrmexWorker myrmex) {\n+    private int chance;\n+    private PathResult path;\n+\n+    public MyrmexAIForage(EntityMyrmexWorker myrmex,int chanceIn) {\n         super();\n         this.myrmex = myrmex;\n         this.targetSorter = new BlockSorter();\n         this.setMutexFlags(EnumSet.of(Flag.MOVE));\n+        this.chance = chanceIn;\n     }\n \n     @Override\n     public boolean shouldExecute() {\n-        if (!this.myrmex.canMove() || this.myrmex.holdingSomething() || !this.myrmex.getNavigator().noPath() || !myrmex.canSeeSky() || this.myrmex.shouldEnterHive() || !this.myrmex.keepSearching) {\n+        if (!this.myrmex.canMove() || this.myrmex.holdingSomething() || !this.myrmex.getNavigator().noPath() || this.myrmex.isInHive() || this.myrmex.shouldEnterHive()) {\n             return false;\n         }\n-        List<BlockPos> allBlocks = new ArrayList<BlockPos>();\n-        for (BlockPos pos : BlockPos.getAllInBox(this.myrmex.getPosition().add(-RADIUS, -RADIUS/2, -RADIUS), this.myrmex.getPosition().add(RADIUS, RADIUS/2, RADIUS)).map(BlockPos::toImmutable).collect(Collectors.toList())) {\n-            if (MinecraftForge.EVENT_BUS.post(new GenericGriefEvent(this.myrmex, pos.getX(), pos.getY(), pos.getZ())))\n-                continue;\n-            if (EntityMyrmexBase.isEdibleBlock(this.myrmex.world.getBlockState(pos))) {\n-                allBlocks.add(pos);\n-                this.myrmex.keepSearching = false;\n-            }\n+        if (!(this.myrmex.getNavigator() instanceof AdvancedPathNavigate) || this.myrmex.isPassenger()) {\n+            return false;\n+        }\n+        if (this.myrmex.getWaitTicks()>0){\n+            return false;\n         }\n \n-        if (allBlocks.isEmpty()) {\n-            if (this.myrmex.getWaitTicks()>0){\n-                this.myrmex.setWaitTicks(this.myrmex.getWaitTicks()-1);\n-                return false;\n-            }\n-            this.myrmex.keepSearching = true;\n-            if (myrmex.getHive() != null) {\n-                wanderRadius = myrmex.getHive().getWanderRadius();\n-                myrmex.getHive().setWanderRadius(wanderRadius*2);\n-            }\n-            wanderRadius *= 2;\n-            this.myrmex.setWaitTicks(40+new Random().nextInt(40));\n-            Vector3d vec = RandomPositionGenerator.findRandomTarget(this.myrmex, wanderRadius, 7);\n-            if (vec != null) {\n-                this.targetBlock = new BlockPos(vec);\n-            }\n-            return this.targetBlock != null;\n+        //Get nearby edible blocks\n+        List<BlockPos> edibleBlocks = getEdibleBlocks();\n+        //If there are no edible blocks nearby\n+        if (edibleBlocks.isEmpty()) {\n+            return myrmex.getRNG().nextInt(chance) == 0 && increaseRadiusAndWander();\n         }\n-        allBlocks.sort(this.targetSorter);\n-        this.targetBlock = allBlocks.get(0);\n-        return targetBlock != null;\n+        //Set closest block as target\n+        edibleBlocks.sort(this.targetSorter);\n+        this.targetBlock = edibleBlocks.get(0);\n+        this.path = ((AdvancedPathNavigate) this.myrmex.getNavigator()).moveToXYZ(targetBlock.getX(), targetBlock.getY(), targetBlock.getZ(), 1D);\n+        return targetBlock != null && myrmex.getRNG().nextInt(chance) == 0;\n     }\n \n     @Override\n@@ -79,27 +71,37 @@ public boolean shouldContinueExecuting() {\n             this.myrmex.keepSearching = false;\n             return false;\n         }\n-        return this.myrmex.getNavigator().noPath();\n+        return !this.myrmex.holdingSomething();\n     }\n \n     @Override\n     public void tick() {\n-        if (this.myrmex.keepSearching) {\n-            if(targetBlock != null){\n-                if (this.myrmex.getNavigator().noPath()) {\n-                    this.myrmex.getNavigator().tryMoveToXYZ(this.targetBlock.getX() + 0.5D, this.targetBlock.getY(), this.targetBlock.getZ() + 0.5D, 1D);\n+        //If we haven't found an edible block as a target\n+        if (targetBlock != null && this.myrmex.keepSearching) {\n+            //If the myrmex is close enough to the target or at the end of the path\n+            if (this.myrmex.isCloseEnoughToTarget(targetBlock,12)\n+                    || !this.myrmex.pathReachesTarget(path,targetBlock,12)) {\n+                List<BlockPos> edibleBlocks = getEdibleBlocks();\n+                //If we found an edible block nearby\n+                if (!edibleBlocks.isEmpty()){\n+                    this.myrmex.keepSearching = false;\n+                    edibleBlocks.sort(this.targetSorter);\n+                    this.targetBlock = edibleBlocks.get(0);\n+                    this.path = ((AdvancedPathNavigate) this.myrmex.getNavigator()).moveToXYZ(targetBlock.getX(), targetBlock.getY(), targetBlock.getZ(), 1D);\n                 }\n-                if (this.myrmex.getDistanceSq(this.targetBlock.getX() + 0.5D, this.targetBlock.getY() + 0.5D, this.targetBlock.getZ() + 0.5D) < 4) {\n-                    this.resetTask();\n+                //If there are still no edible blocks nearby\n+                else {\n+                    increaseRadiusAndWander();\n                 }\n             }\n-        } else if (this.targetBlock != null) {\n-            this.myrmex.getNavigator().tryMoveToXYZ(this.targetBlock.getX() + 0.5D, this.targetBlock.getY(), this.targetBlock.getZ() + 0.5D, 1D);\n+            //if we have found an edible block\n+        } else if(!this.myrmex.keepSearching){\n             BlockState block = this.myrmex.world.getBlockState(this.targetBlock);\n-\n+            //Test if the block is edible\n             if (EntityMyrmexBase.isEdibleBlock(block)) {\n-                double distance = this.getDistance(this.targetBlock);\n+                double distance = this.getDistanceSq(this.targetBlock);\n                 if (distance < 6) {\n+                    //Routine to break block and add item to myrmex\n                     List<ItemStack> drops = block.getBlock().getDrops(block, (ServerWorld) this.myrmex.world, this.targetBlock, this.myrmex.world.getTileEntity(targetBlock)); // use the old method until it gets removed, for backward compatibility\n                     if (!drops.isEmpty()) {\n                         this.myrmex.world.destroyBlock(this.targetBlock, false);\n@@ -121,6 +123,20 @@ public void tick() {\n                         return;\n                     }\n                 }\n+                //If the myrmex reached the end of the path but is still not close enough to the target\n+                else if (!this.myrmex.pathReachesTarget(path,targetBlock,12)){\n+                    List<BlockPos> edibleBlocks = getEdibleBlocks();\n+                    //If we found an edible block nearby\n+                    if (!edibleBlocks.isEmpty()){\n+                        this.myrmex.keepSearching = false;\n+                        //This time choose a different random edible block\n+                        this.targetBlock = edibleBlocks.get(this.myrmex.getRNG().nextInt(edibleBlocks.size()));\n+                        this.path = ((AdvancedPathNavigate) this.myrmex.getNavigator()).moveToXYZ(targetBlock.getX(), targetBlock.getY(), targetBlock.getZ(), 1D);\n+                    }\n+                    else{\n+                        this.myrmex.keepSearching = true;\n+                    }\n+                }\n             }\n         }\n \n@@ -131,7 +147,7 @@ public void resetTask() {\n         this.myrmex.keepSearching = true;\n     }\n \n-    private double getDistance(BlockPos pos) {\n+    private double getDistanceSq(BlockPos pos) {\n         double deltaX = this.myrmex.getPosX() - (pos.getX() + 0.5);\n         double deltaY = this.myrmex.getPosY() + this.myrmex.getEyeHeight() - (pos.getY() + 0.5);\n         double deltaZ = this.myrmex.getPosZ() - (pos.getZ() + 0.5);\n@@ -141,9 +157,42 @@ private double getDistance(BlockPos pos) {\n     public class BlockSorter implements Comparator<BlockPos> {\n         @Override\n         public int compare(BlockPos pos1, BlockPos pos2) {\n-            double distance1 = MyrmexAIForage.this.getDistance(pos1);\n-            double distance2 = MyrmexAIForage.this.getDistance(pos2);\n+            double distance1 = MyrmexAIForage.this.getDistanceSq(pos1);\n+            double distance2 = MyrmexAIForage.this.getDistanceSq(pos2);\n             return Double.compare(distance1, distance2);\n         }\n     }\n+    private List<BlockPos> getEdibleBlocks(){\n+        List<BlockPos> allBlocks = new ArrayList<BlockPos>();\n+        BlockPos.getAllInBox(this.myrmex.getPosition().add(-RADIUS, -RADIUS/2, -RADIUS), this.myrmex.getPosition().add(RADIUS, RADIUS/2, RADIUS)).map(BlockPos::toImmutable).forEach(pos -> {\n+            if (!MinecraftForge.EVENT_BUS.post(new GenericGriefEvent(this.myrmex, pos.getX(), pos.getY(), pos.getZ()))) {\n+                if (EntityMyrmexBase.isEdibleBlock(this.myrmex.world.getBlockState(pos))) {\n+                    allBlocks.add(pos);\n+                    this.myrmex.keepSearching = false;\n+                }\n+            }\n+        });\n+        return allBlocks;\n+    }\n+    private boolean increaseRadiusAndWander(){\n+        this.myrmex.keepSearching = true;\n+        if (myrmex.getHive() != null) {\n+            wanderRadius = myrmex.getHive().getWanderRadius();\n+            myrmex.getHive().setWanderRadius(wanderRadius*2);\n+        }\n+        //Increase wander radius\n+        wanderRadius *= 2;\n+        this.myrmex.setWaitTicks(40+new Random().nextInt(40));\n+        //Set target as random position inside wanderRadius\n+        Vector3d vec = RandomPositionGenerator.findRandomTarget(this.myrmex, wanderRadius, 7);\n+        if (vec != null) {\n+            this.targetBlock = new BlockPos(vec);\n+        }\n+        if (this.targetBlock != null){\n+            this.path = ((AdvancedPathNavigate) this.myrmex.getNavigator()).moveToXYZ(targetBlock.getX(), targetBlock.getY(), targetBlock.getZ(), 1D);\n+            return true;\n+        }\n+        return false;\n+    }\n+\n }"
  },
  {
    "sha": "4ac449777e9287f5fd3e8265490a942216809fed",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIForageForItems.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIForageForItems.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIForageForItems.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIForageForItems.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -8,6 +8,7 @@\n import com.google.common.base.Predicate;\n \n import net.minecraft.entity.Entity;\n+import net.minecraft.entity.LivingEntity;\n import net.minecraft.entity.ai.goal.TargetGoal;\n import net.minecraft.entity.item.ItemEntity;\n import net.minecraft.util.Hand;\n@@ -47,7 +48,7 @@ public boolean shouldExecute() {\n     }\n \n     protected AxisAlignedBB getTargetableArea(double targetDistance) {\n-        return this.goalOwner.getBoundingBox().grow(targetDistance, targetDistance, targetDistance);\n+        return this.goalOwner.getBoundingBox().grow(targetDistance, 5, targetDistance);\n     }\n \n     @Override\n@@ -70,6 +71,12 @@ public void tick() {\n         }\n     }\n \n+    @Override\n+    public void resetTask() {\n+        this.myrmex.getNavigator().clearPath();\n+        super.resetTask();\n+    }\n+\n     @Override\n     public boolean shouldContinueExecuting() {\n         return !this.goalOwner.getNavigator().noPath() && this.myrmex.getAttackTarget() == null;"
  },
  {
    "sha": "5e73cb1f5ff5024af917e2531640256b1a6ba09f",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAILeaveHive.java",
    "status": "modified",
    "additions": 13,
    "deletions": 5,
    "changes": 18,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAILeaveHive.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAILeaveHive.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAILeaveHive.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -38,7 +38,7 @@ public boolean shouldExecute() {\n         if (this.myrmex.isChild()) {\n             return false;\n         }\n-        if (!this.myrmex.canMove() || !this.myrmex.shouldLeaveHive() || this.myrmex.shouldEnterHive() || this.myrmex.canSeeSky() || this.myrmex instanceof EntityMyrmexWorker && (((EntityMyrmexWorker) this.myrmex).holdingSomething() || !this.myrmex.getHeldItem(Hand.MAIN_HAND).isEmpty()) || this.myrmex.isEnteringHive) {\n+        if (!this.myrmex.canMove() || !this.myrmex.shouldLeaveHive() || this.myrmex.shouldEnterHive() || !this.myrmex.isInHive() || this.myrmex instanceof EntityMyrmexWorker && (((EntityMyrmexWorker) this.myrmex).holdingSomething() || !this.myrmex.getHeldItem(Hand.MAIN_HAND).isEmpty()) || this.myrmex.isEnteringHive) {\n             return false;\n         }\n         MyrmexHive village = MyrmexWorldData.get(this.myrmex.world).getNearestHive(this.myrmex.getPosition(), 1000);\n@@ -53,15 +53,23 @@ public boolean shouldExecute() {\n     }\n \n     public boolean shouldContinueExecuting() {\n-        if (this.myrmex.getDistanceSq(nextEntrance.getX() + 0.5D, nextEntrance.getY() + 0.5D, nextEntrance.getZ() + 0.5D) <= 9 || this.myrmex.shouldEnterHive()) {\n+        if (this.myrmex.isCloseEnoughToTarget(nextEntrance,12)) {\n             return false;\n         }\n-        return this.myrmex.getDistanceSq(nextEntrance.getX() + 0.5D, nextEntrance.getY() + 0.5D, nextEntrance.getZ() + 0.5D) > 9 && this.myrmex.shouldLeaveHive();\n+        if(this.myrmex.shouldEnterHive()){\n+            return false;\n+        }\n+\n+        return this.myrmex.shouldLeaveHive();\n     }\n \n     public void tick() {\n-        if(path.isPathReachingDestination()){\n-             path = ((AdvancedPathNavigate)this.myrmex.getNavigator()).moveToXYZ(nextEntrance.getX(), nextEntrance.getY() + 1,  nextEntrance.getZ(), movementSpeed);\n+        //If the path has been created but the destination couldn't be reached\n+        //or if the myrmex has reached the end of the path but isn't close enough to the entrance for some reason\n+        if(!this.myrmex.pathReachesTarget(path,nextEntrance,12)){\n+            MyrmexHive village = MyrmexWorldData.get(this.myrmex.world).getNearestHive(this.myrmex.getPosition(), 1000);\n+            nextEntrance = MyrmexHive.getGroundedPos(this.myrmex.world, village.getClosestEntranceToEntity(this.myrmex, this.myrmex.getRNG(), true));\n+            path = ((AdvancedPathNavigate)this.myrmex.getNavigator()).moveToXYZ(nextEntrance.getX(), nextEntrance.getY() + 1,  nextEntrance.getZ(), movementSpeed);\n         }\n     }\n "
  },
  {
    "sha": "3ff3b10e69d00004269e49df66fa1fc4a513538a",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIMoveThroughHive.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIMoveThroughHive.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIMoveThroughHive.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIMoveThroughHive.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -45,7 +45,7 @@ public boolean shouldExecute() {\n     }\n \n     public boolean shouldContinueExecuting() {\n-        return  !myrmex.shouldLeaveHive() && this.myrmex.getDistanceSq(nextRoom.getX() + 0.5D, nextRoom.getY() + 0.5D, nextRoom.getZ() + 0.5D) > 3 && this.myrmex.shouldEnterHive() && !(this.myrmex instanceof EntityMyrmexWorker && ((EntityMyrmexWorker) this.myrmex).holdingBaby());\n+        return  !myrmex.shouldLeaveHive() && !this.myrmex.isCloseEnoughToTarget(nextRoom,3) && this.myrmex.shouldEnterHive() && !(this.myrmex instanceof EntityMyrmexWorker && ((EntityMyrmexWorker) this.myrmex).holdingBaby());\n     }\n \n     public void startExecuting() {"
  },
  {
    "sha": "a348f3a665143db188d9513ff51648ebd2d70707",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIReEnterHive.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIReEnterHive.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIReEnterHive.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIReEnterHive.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -26,7 +26,7 @@ public MyrmexAIReEnterHive(EntityMyrmexBase entityIn, double movementSpeedIn) {\n     }\n \n     public boolean shouldExecute() {\n-        if (!this.myrmex.canMove() || this.myrmex.shouldLeaveHive() || !this.myrmex.shouldEnterHive() || !this.myrmex.canSeeSky() || !first) {\n+        if (!this.myrmex.canMove() || this.myrmex.shouldLeaveHive() || !this.myrmex.shouldEnterHive() || !first) {\n             return false;\n         }\n         MyrmexHive village = this.myrmex.getHive();\n@@ -48,23 +48,23 @@ public boolean shouldExecute() {\n     }\n \n     public void tick() {\n-        if (first) {\n-            hive.setWorld(this.myrmex.world);\n-            nextEntrance = MyrmexHive.getGroundedPos(this.myrmex.world, hive.getClosestEntranceToEntity(this.myrmex, this.myrmex.getRNG(), false));\n+        //Fallback for if for some reason the myrmex can't reach the entrance try a different one (random)\n+        if (first && !this.myrmex.pathReachesTarget(path,nextEntrance,12)) {\n+            nextEntrance = MyrmexHive.getGroundedPos(this.myrmex.world, hive.getClosestEntranceToEntity(this.myrmex, this.myrmex.getRNG(), true));\n+            this.path = ((AdvancedPathNavigate) this.myrmex.getNavigator()).moveToXYZ(nextEntrance.getX(), nextEntrance.getY(), nextEntrance.getZ(), movementSpeed);\n         }\n-        ((AdvancedPathNavigate)this.myrmex.getNavigator()).moveToXYZ(nextEntrance.getX(), nextEntrance.getY(),  nextEntrance.getZ(), movementSpeed);\n-        if (this.myrmex.getDistanceSq(nextEntrance.getX() + 0.5D, nextEntrance.getY() + 0.5D, nextEntrance.getZ() + 0.5D) < 9 && first) {\n+        if (first && this.myrmex.isCloseEnoughToTarget(nextEntrance,12)) {\n             if (hive != null) {\n                 nextEntrance = hive.getClosestEntranceBottomToEntity(this.myrmex, this.myrmex.getRNG());\n                 first = false;\n                 this.path = ((AdvancedPathNavigate)this.myrmex.getNavigator()).moveToXYZ(nextEntrance.getX(), nextEntrance.getY(),  nextEntrance.getZ(), 1);\n             }\n         }\n-        this.myrmex.isEnteringHive = this.myrmex.getDistanceSq(nextEntrance.getX() + 0.5D, nextEntrance.getY() + 0.5D, nextEntrance.getZ() + 0.5D) > 14 && !first;\n+        this.myrmex.isEnteringHive = !this.myrmex.isCloseEnoughToTarget(nextEntrance,14) && !first;\n     }\n \n     public boolean shouldContinueExecuting() {\n-        if (this.myrmex.getDistanceSq(nextEntrance.getX() + 0.5D, nextEntrance.getY() + 0.5D, nextEntrance.getZ() + 0.5D) < 15 && !first) {\n+        if (this.myrmex.isCloseEnoughToTarget(nextEntrance,9) && !first) {\n             return false;\n         }\n         return true;"
  },
  {
    "sha": "d0823cafb6b9a1aee07e2a7ebaec67ea066f6fe2",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIStoreItems.java",
    "status": "modified",
    "additions": 40,
    "deletions": 18,
    "changes": 58,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIStoreItems.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIStoreItems.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/ai/MyrmexAIStoreItems.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -11,6 +11,8 @@\n import com.github.alexthe666.iceandfire.entity.EntityMyrmexWorker;\n import com.github.alexthe666.iceandfire.entity.tile.TileEntityMyrmexCocoon;\n import com.github.alexthe666.iceandfire.entity.util.MyrmexHive;\n+import com.github.alexthe666.iceandfire.pathfinding.raycoms.AdvancedPathNavigate;\n+import com.github.alexthe666.iceandfire.pathfinding.raycoms.PathResult;\n import com.github.alexthe666.iceandfire.world.gen.WorldGenMyrmexHive;\n \n import net.minecraft.entity.ai.goal.Goal;\n@@ -26,15 +28,18 @@\n     private BlockPos nextCocoon = null;\n     private BlockPos mainRoom = null;\n     private boolean first = true; //first stage - enter the main hive room then storage room\n-\n+    private PathResult path;\n     public MyrmexAIStoreItems(EntityMyrmexBase entityIn, double movementSpeedIn) {\n         this.myrmex = entityIn;\n         this.movementSpeed = movementSpeedIn;\n         this.setMutexFlags(EnumSet.of(Flag.MOVE));\n     }\n \n     public boolean shouldExecute() {\n-        if (!this.myrmex.canMove() || this.myrmex instanceof EntityMyrmexWorker && ((EntityMyrmexWorker) this.myrmex).holdingBaby() || !this.myrmex.shouldEnterHive() && !this.myrmex.getNavigator().noPath() || this.myrmex.canSeeSky() || this.myrmex.getHeldItem(Hand.MAIN_HAND).isEmpty()) {\n+        if (!this.myrmex.canMove() || this.myrmex instanceof EntityMyrmexWorker && ((EntityMyrmexWorker) this.myrmex).holdingBaby() || !this.myrmex.shouldEnterHive() && !this.myrmex.getNavigator().noPath()  || this.myrmex.getHeldItem(Hand.MAIN_HAND).isEmpty()) {\n+            return false;\n+        }\n+        if (!(this.myrmex.getNavigator() instanceof AdvancedPathNavigate) || this.myrmex.isPassenger()){\n             return false;\n         }\n         if (this.myrmex.getWaitTicks()>0){\n@@ -43,37 +48,44 @@ public boolean shouldExecute() {\n         MyrmexHive village = this.myrmex.getHive();\n         if (village == null) {\n             return false;\n-        } else {\n-            first = true;\n-            mainRoom = MyrmexHive.getGroundedPos(this.myrmex.world, village.getCenter());\n-            nextRoom = MyrmexHive.getGroundedPos(this.myrmex.world, village.getRandomRoom(WorldGenMyrmexHive.RoomType.FOOD, this.myrmex.getRNG(), this.myrmex.getPosition()));\n-            nextCocoon = getNearbyCocoon(nextRoom);\n-            if(nextCocoon == null){\n-                this.myrmex.setWaitTicks(20 + new Random().nextInt(40));\n+        }\n+        if(!this.myrmex.isInHive()){\n+            if(!this.myrmex.isCloseEnoughToTarget(MyrmexHive.getGroundedPos(this.myrmex.world, village.getClosestEntranceToEntity(this.myrmex, this.myrmex.getRNG(), false)),100)) {\n+                return false;\n             }\n-            return nextCocoon != null;\n         }\n+        first = true;\n+        mainRoom = MyrmexHive.getGroundedPos(this.myrmex.world, village.getCenter());\n+\n+        nextRoom = MyrmexHive.getGroundedPos(this.myrmex.world, village.getRandomRoom(WorldGenMyrmexHive.RoomType.FOOD, this.myrmex.getRNG(), this.myrmex.getPosition()));\n+        nextCocoon = getNearbyCocoon(nextRoom);\n+        if(nextCocoon == null){\n+            this.myrmex.setWaitTicks(20 + new Random().nextInt(40));\n+        }\n+        this.path = ((AdvancedPathNavigate) this.myrmex.getNavigator()).moveToXYZ(mainRoom.getX() + 0.5D, mainRoom.getY() + 0.5D, mainRoom.getZ() + 0.5D, this.movementSpeed);\n+        return nextCocoon != null;\n+\n     }\n \n     public boolean shouldContinueExecuting() {\n-        return !this.myrmex.getHeldItem(Hand.MAIN_HAND).isEmpty() && nextCocoon != null && isUseableCocoon(nextCocoon) && this.myrmex.getDistanceSq(nextCocoon.getX() + 0.5D, nextCocoon.getY() + 0.5D, nextCocoon.getZ() + 0.5D) > 3 && this.myrmex.shouldEnterHive();\n+        return !this.myrmex.getHeldItem(Hand.MAIN_HAND).isEmpty() && nextCocoon != null && isUseableCocoon(nextCocoon) && !this.myrmex.isCloseEnoughToTarget(nextCocoon,3) && this.myrmex.shouldEnterHive();\n     }\n \n     @Override\n     public void tick() {\n         if (first && mainRoom != null) {\n-            this.myrmex.getNavigator().tryMoveToXYZ(mainRoom.getX() + 0.5D, mainRoom.getY() + 0.5D, mainRoom.getZ() + 0.5D, this.movementSpeed);\n-            if (this.myrmex.getDistanceSq(mainRoom.getX() + 0.5D, mainRoom.getY() + 0.5D, mainRoom.getZ() + 0.5D) < 10D) {\n+            if (this.myrmex.isCloseEnoughToTarget(mainRoom,10)) {\n                 first = false;\n-                return;\n+            }\n+            else if (!this.myrmex.pathReachesTarget(path,mainRoom, 9)) {\n+                //Simple way to stop executing this task\n+                nextCocoon = null;\n             }\n         }\n+\n         if (!first && nextCocoon != null) {\n-            if(myrmex.getNavigator().noPath()){\n-                this.myrmex.getNavigator().tryMoveToXYZ(nextCocoon.getX() + 0.5D, nextCocoon.getY() + 0.5D, nextCocoon.getZ() + 0.5D, this.movementSpeed);\n-            }\n             double dist = 3 * 3;\n-            if (this.myrmex.getDistanceSq(nextCocoon.getX() + 0.5D, nextCocoon.getY() + 0.5D, nextCocoon.getZ() + 0.5D) < dist && !this.myrmex.getHeldItem(Hand.MAIN_HAND).isEmpty() && isUseableCocoon(nextCocoon)) {\n+            if (this.myrmex.isCloseEnoughToTarget(nextCocoon,dist) && !this.myrmex.getHeldItem(Hand.MAIN_HAND).isEmpty() && isUseableCocoon(nextCocoon)) {\n                 TileEntityMyrmexCocoon cocoon = (TileEntityMyrmexCocoon) this.myrmex.world.getTileEntity(nextCocoon);\n                 ItemStack itemstack = this.myrmex.getHeldItem(Hand.MAIN_HAND);\n                 if (!itemstack.isEmpty()) {\n@@ -106,6 +118,16 @@ public void tick() {\n                     }\n                 }\n             }\n+            //In case the myrmex isn't close enough to the cocoon and walked to it's destination try a different one\n+            else if(!this.myrmex.getHeldItem(Hand.MAIN_HAND).isEmpty() && !this.myrmex.pathReachesTarget(path,nextCocoon,dist)){\n+                nextCocoon = getNearbyCocoon(nextRoom);\n+                if (nextCocoon !=null) {\n+                    this.path = ((AdvancedPathNavigate) this.myrmex.getNavigator()).moveToXYZ(nextCocoon.getX() + 0.5D, nextCocoon.getY() + 0.5D, nextCocoon.getZ() + 0.5D, this.movementSpeed);\n+                }\n+            }\n+            else if(this.myrmex.pathReachesTarget(path,nextCocoon,dist) && this.path.isCancelled()){\n+                resetTask();\n+            }\n         }\n     }\n "
  },
  {
    "sha": "1cda136a119a8fb7843b5137f0de21b5d89c5901",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/entity/util/DragonUtils.java",
    "status": "modified",
    "additions": 10,
    "deletions": 4,
    "changes": 14,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/util/DragonUtils.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/entity/util/DragonUtils.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/entity/util/DragonUtils.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -330,8 +330,10 @@ public static boolean hasSameOwner(TameableEntity cockatrice, Entity entity) {\n     }\n \n     public static boolean isAlive(LivingEntity entity) {\n-        boolean alive = (!(entity instanceof IDeadMob) || !((IDeadMob) entity).isMobDead()) && !EntityGorgon.isStoneMob(entity);\n-        return alive;\n+        if (entity instanceof EntityDragonBase && ((EntityDragonBase) entity).isMobDead()){\n+            return false;\n+        }\n+        return (!(entity instanceof IDeadMob) || !((IDeadMob) entity).isMobDead()) && !EntityGorgon.isStoneMob(entity);\n     }\n \n \n@@ -362,9 +364,13 @@ public static boolean isBlacklistedBlock(Block block) {\n     }\n \n     public static boolean canHostilesTarget(Entity entity) {\n-        if (entity instanceof PlayerEntity && entity.world.getDifficulty() == Difficulty.PEACEFUL) {\n+        if (entity instanceof PlayerEntity && (entity.world.getDifficulty() == Difficulty.PEACEFUL || ((PlayerEntity)entity).isCreative())) {\n             return false;\n-        } else {\n+        }\n+        if (entity instanceof EntityDragonBase && ((EntityDragonBase)entity).isMobDead()){\n+            return false;\n+        }\n+        else {\n             return entity instanceof LivingEntity && isAlive((LivingEntity) entity);\n         }\n     }"
  },
  {
    "sha": "5c267c14e3a03eb48dc96b9da3cee67bfd6d4f4c",
    "filename": "src/main/java/com/github/alexthe666/iceandfire/event/ServerEvents.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/Alex-the-666/Ice_and_Fire/blob/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/event/ServerEvents.java",
    "raw_url": "https://github.com/Alex-the-666/Ice_and_Fire/raw/3b6e8891b448b5d35405729a0e1bdd18391d3720/src/main/java/com/github/alexthe666/iceandfire/event/ServerEvents.java",
    "contents_url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire/contents/src/main/java/com/github/alexthe666/iceandfire/event/ServerEvents.java?ref=3b6e8891b448b5d35405729a0e1bdd18391d3720",
    "patch": "@@ -12,6 +12,7 @@\n import com.github.alexthe666.iceandfire.IceAndFire;\n import com.github.alexthe666.iceandfire.block.IafBlockRegistry;\n import com.github.alexthe666.iceandfire.entity.*;\n+import com.github.alexthe666.iceandfire.entity.ai.AiDebug;\n import com.github.alexthe666.iceandfire.entity.ai.EntitySheepAIFollowCyclops;\n import com.github.alexthe666.iceandfire.entity.ai.VillagerAIFearUntamed;\n import com.github.alexthe666.iceandfire.entity.props.ChainEntityProperties;\n@@ -35,6 +36,8 @@\n import com.github.alexthe666.iceandfire.message.MessageSwingArm;\n import com.github.alexthe666.iceandfire.misc.IafDamageRegistry;\n import com.github.alexthe666.iceandfire.misc.IafTagRegistry;\n+import com.github.alexthe666.iceandfire.pathfinding.raycoms.AdvancedPathNavigate;\n+import com.github.alexthe666.iceandfire.pathfinding.raycoms.Pathfinding;\n import com.github.alexthe666.iceandfire.world.gen.WorldGenFireDragonCave;\n import com.github.alexthe666.iceandfire.world.gen.WorldGenIceDragonCave;\n import com.google.common.base.Predicate;\n@@ -65,6 +68,7 @@\n import net.minecraft.inventory.EquipmentSlotType;\n import net.minecraft.item.Item;\n import net.minecraft.item.ItemStack;\n+import net.minecraft.item.Items;\n import net.minecraft.loot.ItemLootEntry;\n import net.minecraft.loot.LootEntry;\n import net.minecraft.loot.LootPool;\n@@ -726,6 +730,9 @@ public void onEntityUpdate(LivingEvent.LivingUpdateEvent event) {\n                 }\n             }\n         }\n+        if (AiDebug.isEnabled() && event.getEntityLiving() instanceof MobEntity && AiDebug.contains((MobEntity) event.getEntityLiving())){\n+            AiDebug.logData();\n+        }\n     }\n \n     @SubscribeEvent\n@@ -741,6 +748,9 @@ public void onEntityInteract(PlayerInteractEvent.EntityInteractSpecific event) {\n                 }\n             }\n         }\n+        if (AiDebug.isEnabled() && !event.getWorld().isRemote() && event.getTarget() instanceof MobEntity && event.getItemStack().getItem() == Items.STICK ){\n+            AiDebug.addEntity((MobEntity) event.getTarget());\n+        }\n     }\n \n     @SubscribeEvent"
  }
]
