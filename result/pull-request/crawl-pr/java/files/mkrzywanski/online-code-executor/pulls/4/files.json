[
  {
    "sha": "9a8806a9c2ad792a79699adfcb07e64d2a9e7aab",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/config/ApplicationBeanFactory.java",
    "status": "modified",
    "additions": 15,
    "deletions": 33,
    "changes": 48,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/config/ApplicationBeanFactory.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/config/ApplicationBeanFactory.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/config/ApplicationBeanFactory.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -3,20 +3,16 @@\n import io.micronaut.context.annotation.Bean;\n import io.micronaut.context.annotation.Factory;\n import io.micronaut.context.annotation.Value;\n+import io.mkrzywanski.onlinecodeexecutor.language.Language;\n+import io.mkrzywanski.onlinecodeexecutor.language.compilation.Compiler;\n+import io.mkrzywanski.onlinecodeexecutor.language.compilation.Compilers;\n+import io.mkrzywanski.onlinecodeexecutor.language.execution.Executor;\n+import io.mkrzywanski.onlinecodeexecutor.language.groovy.GroovyCompiler;\n import io.mkrzywanski.onlinecodeexecutor.language.interceptor.PrintStreamProxy;\n-import io.mkrzywanski.onlinecodeexecutor.language.interceptor.ThreadOutputInterceptor;\n import io.mkrzywanski.onlinecodeexecutor.language.interceptor.ThreadOutputPrintStreamInterceptor;\n-import io.mkrzywanski.onlinecodeexecutor.language.LanguageTools;\n-import io.mkrzywanski.onlinecodeexecutor.language.LanguageToolsResolver;\n-import io.mkrzywanski.onlinecodeexecutor.language.groovy.GroovyCompiler;\n-import io.mkrzywanski.onlinecodeexecutor.language.groovy.GroovyExecutor;\n-import io.mkrzywanski.onlinecodeexecutor.language.groovy.GroovyLanguageTools;\n+import io.mkrzywanski.onlinecodeexecutor.language.execution.DefaultExecutor;\n import io.mkrzywanski.onlinecodeexecutor.language.java.compiler.JavaCompiler;\n-import io.mkrzywanski.onlinecodeexecutor.language.java.JavaExecutor;\n-import io.mkrzywanski.onlinecodeexecutor.language.java.JavaLanguageTools;\n-import io.mkrzywanski.onlinecodeexecutor.language.Language;\n import io.mkrzywanski.onlinecodeexecutor.language.kotlin.KotlinCompiler;\n-import io.mkrzywanski.onlinecodeexecutor.language.kotlin.KotlinLanguageTools;\n \n import javax.inject.Singleton;\n import java.io.PrintStream;\n@@ -37,20 +33,12 @@\n \n     @Singleton\n     @Bean\n-    public KotlinLanguageTools kotlinLanguageTools(final ThreadOutputInterceptor threadOutputInterceptor) {\n-        return new KotlinLanguageTools(new KotlinCompiler(Paths.get(kotlinBaseDir)), new JavaExecutor(threadOutputInterceptor));\n-    }\n-\n-    @Singleton\n-    @Bean\n-    public GroovyLanguageTools groovyLanguageTools(final ThreadOutputInterceptor interceptor) {\n-        return new GroovyLanguageTools(new GroovyExecutor(interceptor), new GroovyCompiler(Paths.get(groovyBaseDir)));\n-    }\n-\n-    @Bean\n-    @Singleton\n-    public JavaLanguageTools javaLanguageTools(final ThreadOutputInterceptor interceptor) {\n-        return new JavaLanguageTools(new JavaCompiler(), new JavaExecutor(interceptor));\n+    public Compilers compilers() {\n+        Map<Language, Compiler> compilerMap = new EnumMap<>(Language.class);\n+        compilerMap.put(Language.JAVA, new JavaCompiler());\n+        compilerMap.put(Language.KOTLIN, new KotlinCompiler(Paths.get(kotlinBaseDir)));\n+        compilerMap.put(Language.GROOVY, new GroovyCompiler(Paths.get(groovyBaseDir)));\n+        return new Compilers(compilerMap);\n     }\n \n     @Bean\n@@ -65,15 +53,9 @@ public ThreadOutputPrintStreamInterceptor dynamicInvocationHandler() {\n         return new ThreadOutputPrintStreamInterceptor(System.out);\n     }\n \n-    @Singleton\n     @Bean\n-    public LanguageToolsResolver languageToolsResolver(final GroovyLanguageTools groovyLanguageTools,\n-                                                       final JavaLanguageTools javaLanguageTools,\n-                                                       final KotlinLanguageTools kotlinLanguageTools) {\n-        Map<Language, LanguageTools> languageToolsMap = new EnumMap<>(Language.class);\n-        languageToolsMap.put(Language.JAVA, javaLanguageTools);\n-        languageToolsMap.put(Language.GROOVY, groovyLanguageTools);\n-        languageToolsMap.put(Language.KOTLIN, kotlinLanguageTools);\n-        return new LanguageToolsResolver(languageToolsMap);\n+    @Singleton\n+    public Executor executor(final ThreadOutputPrintStreamInterceptor interceptor) {\n+        return new DefaultExecutor(interceptor);\n     }\n }"
  },
  {
    "sha": "3f1f57d222bfabce0b0f08e76a3482fb4fd518b1",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/CodeRunner.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/CodeRunner.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/CodeRunner.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/CodeRunner.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -0,0 +1,34 @@\n+package io.mkrzywanski.onlinecodeexecutor.language;\n+\n+import io.mkrzywanski.onlinecodeexecutor.language.compilation.CodeCompiler;\n+import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompiledClasses;\n+import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompilationException;\n+import io.mkrzywanski.onlinecodeexecutor.language.execution.Executor;\n+import io.mkrzywanski.onlinecodeexecutor.language.loading.ClassLoadingService;\n+import io.mkrzywanski.onlinecodeexecutor.language.loading.LoadedClasses;\n+import io.mkrzywanski.onlinecodeexecutor.language.execution.ExecutionException;\n+import io.mkrzywanski.onlinecodeexecutor.language.execution.ExecutionResult;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class CodeRunner {\n+\n+    private final CodeCompiler codeCompiler;\n+    private final ClassLoadingService classLoadingService;\n+    private final Executor executor;\n+\n+    @Inject\n+    public CodeRunner(CodeCompiler codeCompiler, final ClassLoadingService classLoadingService, Executor executor) {\n+        this.codeCompiler = codeCompiler;\n+        this.classLoadingService = classLoadingService;\n+        this.executor = executor;\n+    }\n+\n+    public ExecutionResult run(final Code code) throws CompilationException, ExecutionException {\n+        CompiledClasses compiledClasses = codeCompiler.compile(code);\n+        LoadedClasses loadedClasses = classLoadingService.load(compiledClasses);\n+        return executor.execute(loadedClasses);\n+    }\n+}"
  },
  {
    "sha": "8b4bf51c14607776d4438fe07fb2ac8eb6deff13",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/LanguageTools.java",
    "status": "removed",
    "additions": 0,
    "deletions": 9,
    "changes": 9,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/LanguageTools.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/LanguageTools.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/LanguageTools.java?ref=5daf2e768ef22b01246cf2626d2d0d58f182e4e8",
    "patch": "@@ -1,9 +0,0 @@\n-package io.mkrzywanski.onlinecodeexecutor.language;\n-\n-import io.mkrzywanski.onlinecodeexecutor.language.compilation.Compiler;\n-import io.mkrzywanski.onlinecodeexecutor.language.execution.Executor;\n-\n-public interface LanguageTools {\n-    Compiler compiler();\n-    Executor executor();\n-}"
  },
  {
    "sha": "50322389ff40fcbc4c8b61843e2de682aa8ae074",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/LanguageToolsResolver.java",
    "status": "removed",
    "additions": 0,
    "deletions": 17,
    "changes": 17,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/LanguageToolsResolver.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/LanguageToolsResolver.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/LanguageToolsResolver.java?ref=5daf2e768ef22b01246cf2626d2d0d58f182e4e8",
    "patch": "@@ -1,17 +0,0 @@\n-package io.mkrzywanski.onlinecodeexecutor.language;\n-\n-import java.util.Map;\n-import java.util.Optional;\n-\n-public class LanguageToolsResolver {\n-\n-    private final Map<Language, LanguageTools> languageToolsMap;\n-\n-    public LanguageToolsResolver(final Map<Language, LanguageTools> languageToolsMap) {\n-        this.languageToolsMap = languageToolsMap;\n-    }\n-\n-    public Optional<LanguageTools> resolve(final Language language) {\n-        return Optional.ofNullable(languageToolsMap.get(language));\n-    }\n-}"
  },
  {
    "sha": "145fb75dfc7622fe669397dbce48e7a5e54d45fd",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/ThreadAwarePrintStream.java",
    "status": "removed",
    "additions": 0,
    "deletions": 52,
    "changes": 52,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/ThreadAwarePrintStream.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/ThreadAwarePrintStream.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/ThreadAwarePrintStream.java?ref=5daf2e768ef22b01246cf2626d2d0d58f182e4e8",
    "patch": "@@ -1,52 +0,0 @@\n-package io.mkrzywanski.onlinecodeexecutor.language;\n-\n-import java.io.ByteArrayOutputStream;\n-import java.io.OutputStream;\n-import java.io.PrintStream;\n-import java.util.Optional;\n-\n-public class ThreadAwarePrintStream extends PrintStream {\n-\n-    private final ThreadLocal<PrintStreamData> printStreamDataTL = ThreadLocal.withInitial(PrintStreamData::newInstance);\n-\n-    public ThreadAwarePrintStream(final PrintStream out) {\n-        super(out);\n-    }\n-\n-    @Override\n-    public void println(final String x) {\n-        PrintStreamData printStreamData = printStreamDataTL.get();\n-        printStreamData.printStream.println(x);\n-        super.println(x);\n-    }\n-\n-//    @Override\n-//    public void print(boolean b) {\n-//        super.print(b);\n-//    }\n-\n-    public String getOutputForCurrentThread() {\n-        return Optional.ofNullable(printStreamDataTL.get())\n-                .orElseThrow(RuntimeException::new)\n-                .outputStream.toString();\n-    }\n-\n-    public void removeForCurrentThread() {\n-        printStreamDataTL.remove();\n-    }\n-\n-    private static class PrintStreamData {\n-        private final PrintStream printStream;\n-        private final OutputStream outputStream;\n-\n-        private static PrintStreamData newInstance() {\n-            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n-            return new PrintStreamData(new PrintStream(byteArrayOutputStream), byteArrayOutputStream);\n-        }\n-\n-        public PrintStreamData(PrintStream printStream, OutputStream outputStream) {\n-            this.printStream = printStream;\n-            this.outputStream = outputStream;\n-        }\n-    }\n-}"
  },
  {
    "sha": "b32bab05223557df369489505993ff55110afa5c",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CodeCompiler.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CodeCompiler.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CodeCompiler.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CodeCompiler.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -0,0 +1,24 @@\n+package io.mkrzywanski.onlinecodeexecutor.language.compilation;\n+\n+import io.mkrzywanski.onlinecodeexecutor.language.Code;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+import java.util.Set;\n+\n+@Singleton\n+public class CodeCompiler {\n+\n+    private final Compilers compilers;\n+\n+    @Inject\n+    public CodeCompiler(Compilers compilers) {\n+        this.compilers = compilers;\n+    }\n+\n+    public CompiledClasses compile(final Code code) throws CompilationException {\n+        Compiler compiler = compilers.forLanguage(code.getLanguage());\n+        Set<CompiledClass> compile = compiler.compile(code.getValue());\n+        return new CompiledClasses(compile);\n+    }\n+}"
  },
  {
    "sha": "4b8b8718c0ae47c012efdf567f69ecbfe8650f7a",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CompiledClass.java",
    "status": "modified",
    "additions": 9,
    "deletions": 9,
    "changes": 18,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CompiledClass.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CompiledClass.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CompiledClass.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -4,34 +4,34 @@\n import java.util.Objects;\n \n public class CompiledClass {\n-    private final String className;\n+    private final String name;\n     private final byte[] bytes;\n \n-    public CompiledClass(String className, byte[] bytes) {\n-        this.className = className;\n-        this.bytes = bytes;\n+    public CompiledClass(final String name, final byte[] bytes) {\n+        this.name = name;\n+        this.bytes = Arrays.copyOf(bytes, bytes.length);\n     }\n \n-    public String getClassName() {\n-        return className;\n+    public String getName() {\n+        return name;\n     }\n \n     public byte[] getBytes() {\n-        return bytes;\n+        return Arrays.copyOf(bytes, bytes.length);\n     }\n \n     @Override\n     public boolean equals(Object o) {\n         if (this == o) return true;\n         if (!(o instanceof CompiledClass)) return false;\n         CompiledClass that = (CompiledClass) o;\n-        return getClassName().equals(that.getClassName()) &&\n+        return getName().equals(that.getName()) &&\n                 Arrays.equals(getBytes(), that.getBytes());\n     }\n \n     @Override\n     public int hashCode() {\n-        int result = Objects.hash(getClassName());\n+        int result = Objects.hash(getName());\n         result = 31 * result + Arrays.hashCode(getBytes());\n         return result;\n     }"
  },
  {
    "sha": "e3af39d9488cf6235e7234dd3d8ed6de11c28313",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CompiledClasses.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CompiledClasses.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CompiledClasses.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/CompiledClasses.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -0,0 +1,16 @@\n+package io.mkrzywanski.onlinecodeexecutor.language.compilation;\n+\n+import java.util.Set;\n+\n+public class CompiledClasses {\n+\n+    private final Set<CompiledClass> compiledClasses;\n+\n+    public CompiledClasses(Set<CompiledClass> compiledClasses) {\n+        this.compiledClasses = compiledClasses;\n+    }\n+\n+    public Set<CompiledClass> getCompiledClasses() {\n+        return compiledClasses;\n+    }\n+}"
  },
  {
    "sha": "62c25ca9ca21eddc7f564ab54b4e5aff4b42a598",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/Compilers.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/Compilers.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/Compilers.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/compilation/Compilers.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -0,0 +1,20 @@\n+package io.mkrzywanski.onlinecodeexecutor.language.compilation;\n+\n+import io.mkrzywanski.onlinecodeexecutor.language.Language;\n+import io.mkrzywanski.onlinecodeexecutor.language.LanguageNotSupportedException;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class Compilers {\n+    private final Map<Language, Compiler> compilers;\n+\n+    public Compilers(Map<Language, Compiler> compilers) {\n+        this.compilers = compilers;\n+    }\n+\n+    public Compiler forLanguage(final Language language) {\n+        return Optional.ofNullable(compilers.get(language))\n+                .orElseThrow(() -> new LanguageNotSupportedException(\"Language not supported\"));\n+    }\n+}"
  },
  {
    "sha": "9a797b794972a7d5e7e319c690e9dbc21e4786a8",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/DefaultExecutor.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/DefaultExecutor.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/DefaultExecutor.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/DefaultExecutor.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -0,0 +1,46 @@\n+package io.mkrzywanski.onlinecodeexecutor.language.execution;\n+\n+import io.mkrzywanski.onlinecodeexecutor.language.interceptor.ThreadOutputInterceptor;\n+import io.mkrzywanski.onlinecodeexecutor.language.loading.LoadedClasses;\n+import org.jetbrains.annotations.NotNull;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+@Singleton\n+public class DefaultExecutor implements Executor {\n+\n+    private static final String MAIN = \"main\";\n+    private static final Object ARGUMENTS = new String[]{};\n+\n+    private final ThreadOutputInterceptor threadAwarePrintStream;\n+\n+    @Inject\n+    public DefaultExecutor(final ThreadOutputInterceptor threadAwarePrintStream) {\n+        this.threadAwarePrintStream = threadAwarePrintStream;\n+    }\n+\n+    @Override\n+    public ExecutionResult execute(final LoadedClasses loadedClasses) throws ExecutionException {\n+        Class<?> mainClass = loadedClasses.mainClass();\n+        return executeClass(mainClass);\n+    }\n+\n+    private ExecutionResult executeClass(final Class<?> mainClass) throws ExecutionException {\n+        try {\n+            return doExecute(mainClass);\n+        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n+            throw new ExecutionException(\"Execution failed\", e);\n+        }\n+    }\n+\n+    private ExecutionResult doExecute(Class<?> mainClass) throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n+        Method mainMethod = mainClass.getMethod(MAIN, String[].class);\n+        threadAwarePrintStream.removeForCurrentThread();\n+        mainMethod.invoke(null, ARGUMENTS);\n+        return new ExecutionResult(threadAwarePrintStream.getOutputForCurrentThread());\n+    }\n+\n+}"
  },
  {
    "sha": "fef64ce0eb0cb2ce9254c772153db86bd3c16a7a",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionException.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionException.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionException.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionException.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -1,11 +1,11 @@\n package io.mkrzywanski.onlinecodeexecutor.language.execution;\n \n public class ExecutionException extends Exception {\n-    public ExecutionException(String message) {\n+    public ExecutionException(final String message) {\n         super(message);\n     }\n \n-    public ExecutionException(String message, Throwable cause) {\n+    public ExecutionException(final String message, final Throwable cause) {\n         super(message, cause);\n     }\n "
  },
  {
    "sha": "83ca371413163b4955dc8d41266d716a1437febe",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionId.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionId.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionId.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionId.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -0,0 +1,25 @@\n+package io.mkrzywanski.onlinecodeexecutor.language.execution;\n+\n+import java.util.UUID;\n+\n+public class ExecutionId {\n+\n+    private final UUID uuid;\n+\n+    public ExecutionId() {\n+        this.uuid = UUID.randomUUID();\n+    }\n+\n+    public static ExecutionId generate() {\n+        return new ExecutionId();\n+    }\n+\n+    public String asString() {\n+        return uuid.toString();\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return this.asString();\n+    }\n+}"
  },
  {
    "sha": "38987f9b58c562ce4c4ad12c7819b1d84f641394",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionResult.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionResult.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionResult.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionResult.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -4,7 +4,7 @@\n \n     private String output;\n \n-    public ExecutionResult() {\n+    private ExecutionResult() {\n     }\n \n     public ExecutionResult(String output) {"
  },
  {
    "sha": "400178bdd10984c1ee9b7dc3e3b501a76847d2d6",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionService.java",
    "status": "removed",
    "additions": 0,
    "deletions": 36,
    "changes": 36,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionService.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionService.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionService.java?ref=5daf2e768ef22b01246cf2626d2d0d58f182e4e8",
    "patch": "@@ -1,36 +0,0 @@\n-package io.mkrzywanski.onlinecodeexecutor.language.execution;\n-\n-import io.mkrzywanski.onlinecodeexecutor.language.Code;\n-import io.mkrzywanski.onlinecodeexecutor.language.LanguageNotSupportedException;\n-import io.mkrzywanski.onlinecodeexecutor.language.LanguageTools;\n-import io.mkrzywanski.onlinecodeexecutor.language.LanguageToolsResolver;\n-import io.mkrzywanski.onlinecodeexecutor.language.loading.ClassLoadingService;\n-import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompilationException;\n-import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompiledClass;\n-\n-import javax.inject.Inject;\n-import javax.inject.Singleton;\n-import java.util.Set;\n-\n-@Singleton\n-public class ExecutionService {\n-\n-    private final LanguageToolsResolver languageToolsResolver;\n-    private final ClassLoadingService classLoadingService;\n-\n-    @Inject\n-    public ExecutionService(final LanguageToolsResolver languageToolsResolver, final ClassLoadingService classLoadingService) {\n-        this.languageToolsResolver = languageToolsResolver;\n-        this.classLoadingService = classLoadingService;\n-    }\n-\n-    public ExecutionResult execute(final Code code) throws CompilationException, ExecutionException {\n-        LanguageTools languageTools = languageToolsResolver.resolve(code.getLanguage())\n-                .orElseThrow(() -> new LanguageNotSupportedException(\"Language not found\"));\n-\n-        Set<CompiledClass> compiledClasses = languageTools.compiler().compile(code.getValue());\n-        Set<Class<?>> loadedClasses = classLoadingService.load(compiledClasses);\n-        String consoleOutput = languageTools.executor().execute(loadedClasses);\n-        return new ExecutionResult(consoleOutput);\n-    }\n-}"
  },
  {
    "sha": "9d04e49599f0151f970667077705496867a52fd0",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/Executor.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/Executor.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/Executor.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/execution/Executor.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -1,7 +1,7 @@\n package io.mkrzywanski.onlinecodeexecutor.language.execution;\n \n-import java.util.Set;\n+import io.mkrzywanski.onlinecodeexecutor.language.loading.LoadedClasses;\n \n public interface Executor {\n-    String execute(Set<Class<?>> loadedClasses) throws ExecutionException;\n+    ExecutionResult execute(LoadedClasses loadedClasses) throws ExecutionException;\n }"
  },
  {
    "sha": "b25e6ccce9d5dadb13243121cb364648a4ec3c02",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyCompiler.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyCompiler.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyCompiler.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyCompiler.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -4,6 +4,7 @@\n import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompilationException;\n import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompiledClass;\n import io.mkrzywanski.onlinecodeexecutor.language.compilation.Compiler;\n+import io.mkrzywanski.onlinecodeexecutor.language.execution.ExecutionId;\n import io.mkrzywanski.onlinecodeexecutor.utils.FileUtils;\n import org.codehaus.groovy.control.CompilationFailedException;\n import org.codehaus.groovy.control.CompilationUnit;\n@@ -35,9 +36,9 @@ public GroovyCompiler(final Path compilationBaseDirectory) {\n     }\n \n     @Override\n-    public Set<CompiledClass> compile(String code) throws CompilationException {\n+    public Set<CompiledClass> compile(final String code) throws CompilationException {\n \n-        String executionId = UUID.randomUUID().toString();\n+        String executionId = ExecutionId.generate().asString();\n \n         Path compilationDirectoryPath = Paths.get(compilationBaseDirectory + \"/\" + executionId);\n         createCompilationDirectory(compilationDirectoryPath);"
  },
  {
    "sha": "118e9842f27c3b7eda1764c2b93460b487b0936f",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyExecutor.java",
    "status": "removed",
    "additions": 0,
    "deletions": 61,
    "changes": 61,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyExecutor.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyExecutor.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyExecutor.java?ref=5daf2e768ef22b01246cf2626d2d0d58f182e4e8",
    "patch": "@@ -1,61 +0,0 @@\n-package io.mkrzywanski.onlinecodeexecutor.language.groovy;\n-\n-import io.mkrzywanski.onlinecodeexecutor.language.interceptor.ThreadOutputInterceptor;\n-import io.mkrzywanski.onlinecodeexecutor.language.execution.ExecutionException;\n-import io.mkrzywanski.onlinecodeexecutor.language.execution.Executor;\n-\n-import javax.inject.Inject;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.lang.reflect.Modifier;\n-import java.util.Arrays;\n-import java.util.Optional;\n-import java.util.Set;\n-import java.util.function.Predicate;\n-\n-public class GroovyExecutor implements Executor {\n-    private static final String MAIN = \"main\";\n-    private static final String EXECUTION_FAILED = \"Execution failed\";\n-\n-    private final ThreadOutputInterceptor interceptor;\n-\n-    @Inject\n-    public GroovyExecutor(final ThreadOutputInterceptor interceptor) {\n-        this.interceptor = interceptor;\n-    }\n-\n-    @Override\n-    public String execute(final Set<Class<?>> loadedClasses) throws ExecutionException {\n-        Class<?> mainClass = findMainClass(loadedClasses)\n-                .orElseThrow(ExecutionException::noMainMethod);\n-\n-        return doExecute(mainClass);\n-    }\n-\n-    private String doExecute(final Class<?> mainClass) throws ExecutionException {\n-        try {\n-            Method mainMethod = mainClass.getMethod(MAIN, String[].class);\n-            interceptor.removeForCurrentThread();\n-            mainMethod.invoke(null, (Object) new String[]{});\n-            return interceptor.getOutputForCurrentThread();\n-        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n-            throw new ExecutionException(EXECUTION_FAILED, e);\n-        }\n-    }\n-\n-    private Optional<Class<?>> findMainClass(Set<Class<?>> classes) {\n-        return classes.stream()\n-                .filter(this::isMainClass)\n-                .findFirst();\n-    }\n-\n-    private boolean isMainClass(Class<?> clazz) {\n-        Method[] declaredMethods = clazz.getDeclaredMethods();\n-        Predicate<Method> isMainMethod = method -> MAIN.equals(method.getName())\n-                && Modifier.isStatic(method.getModifiers())\n-                && method.getParameterCount() == 1\n-                && method.getParameterTypes()[0] == String[].class;\n-        return Arrays.stream(declaredMethods)\n-                .anyMatch(isMainMethod);\n-    }\n-}"
  },
  {
    "sha": "baad699ac6f7fcf8ee716785a4a88b13a3f6602a",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyLanguageTools.java",
    "status": "removed",
    "additions": 0,
    "deletions": 26,
    "changes": 26,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyLanguageTools.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyLanguageTools.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/groovy/GroovyLanguageTools.java?ref=5daf2e768ef22b01246cf2626d2d0d58f182e4e8",
    "patch": "@@ -1,26 +0,0 @@\n-package io.mkrzywanski.onlinecodeexecutor.language.groovy;\n-\n-import io.mkrzywanski.onlinecodeexecutor.language.LanguageTools;\n-import io.mkrzywanski.onlinecodeexecutor.language.compilation.Compiler;\n-import io.mkrzywanski.onlinecodeexecutor.language.execution.Executor;\n-\n-public class GroovyLanguageTools implements LanguageTools {\n-\n-    private final GroovyExecutor groovyExecutor;\n-    private final GroovyCompiler groovyCompiler;\n-\n-    public GroovyLanguageTools(GroovyExecutor groovyExecutor, GroovyCompiler groovyCompiler) {\n-        this.groovyExecutor = groovyExecutor;\n-        this.groovyCompiler = groovyCompiler;\n-    }\n-\n-    @Override\n-    public Compiler compiler() {\n-        return groovyCompiler;\n-    }\n-\n-    @Override\n-    public Executor executor() {\n-        return groovyExecutor;\n-    }\n-}"
  },
  {
    "sha": "a6f69516b55a751f650a62a915acc0a268d5bd83",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/JavaExecutor.java",
    "status": "removed",
    "additions": 0,
    "deletions": 63,
    "changes": 63,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/JavaExecutor.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/JavaExecutor.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/JavaExecutor.java?ref=5daf2e768ef22b01246cf2626d2d0d58f182e4e8",
    "patch": "@@ -1,63 +0,0 @@\n-package io.mkrzywanski.onlinecodeexecutor.language.java;\n-\n-import io.mkrzywanski.onlinecodeexecutor.language.interceptor.ThreadOutputInterceptor;\n-import io.mkrzywanski.onlinecodeexecutor.language.execution.ExecutionException;\n-import io.mkrzywanski.onlinecodeexecutor.language.execution.Executor;\n-\n-import javax.inject.Inject;\n-import javax.inject.Singleton;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.lang.reflect.Modifier;\n-import java.util.Arrays;\n-import java.util.Optional;\n-import java.util.Set;\n-import java.util.function.Predicate;\n-\n-@Singleton\n-public class JavaExecutor implements Executor {\n-\n-    private static final String MAIN = \"main\";\n-\n-    private final ThreadOutputInterceptor threadAwarePrintStream;\n-\n-    @Inject\n-    public JavaExecutor(ThreadOutputInterceptor threadAwarePrintStream) {\n-        this.threadAwarePrintStream = threadAwarePrintStream;\n-    }\n-\n-    @Override\n-    public String execute(final Set<Class<?>> loadedClasses) throws ExecutionException {\n-        Class<?> mainClass = findMainClass(loadedClasses)\n-                .orElseThrow(ExecutionException::noMainMethod);\n-\n-        return doExecute(mainClass);\n-    }\n-\n-    private String doExecute(final Class<?> mainClass) throws ExecutionException {\n-        try {\n-            Method mainMethod = mainClass.getMethod(MAIN, String[].class);\n-            threadAwarePrintStream.removeForCurrentThread();\n-            mainMethod.invoke(null, (Object) new String[]{});\n-            return threadAwarePrintStream.getOutputForCurrentThread();\n-        } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n-            throw new ExecutionException(\"Execution failed\", e);\n-        }\n-    }\n-\n-    private Optional<Class<?>> findMainClass(Set<Class<?>> classes) {\n-        return classes.stream()\n-                .filter(this::isMainClass)\n-                .findFirst();\n-    }\n-\n-    private boolean isMainClass(Class<?> clazz) {\n-        Method[] declaredMethods = clazz.getDeclaredMethods();\n-        Predicate<Method> isMainMethod = method -> MAIN.equals(method.getName())\n-                && Modifier.isStatic(method.getModifiers())\n-                && method.getParameterCount() == 1\n-                && method.getParameterTypes()[0] == String[].class;\n-        return Arrays.stream(declaredMethods)\n-                .anyMatch(isMainMethod);\n-    }\n-}"
  },
  {
    "sha": "373024aa83461bfd4d3adeb23e147fbf881df385",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/JavaLanguageTools.java",
    "status": "removed",
    "additions": 0,
    "deletions": 26,
    "changes": 26,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/JavaLanguageTools.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/JavaLanguageTools.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/JavaLanguageTools.java?ref=5daf2e768ef22b01246cf2626d2d0d58f182e4e8",
    "patch": "@@ -1,26 +0,0 @@\n-package io.mkrzywanski.onlinecodeexecutor.language.java;\n-\n-import io.mkrzywanski.onlinecodeexecutor.language.compilation.Compiler;\n-import io.mkrzywanski.onlinecodeexecutor.language.execution.Executor;\n-import io.mkrzywanski.onlinecodeexecutor.language.LanguageTools;\n-import io.mkrzywanski.onlinecodeexecutor.language.java.compiler.JavaCompiler;\n-\n-public class JavaLanguageTools implements LanguageTools {\n-    private final JavaCompiler javaCompiler;\n-    private final JavaExecutor javaExecutor;\n-\n-    public JavaLanguageTools(final JavaCompiler javaCompiler, final JavaExecutor javaExecutor) {\n-        this.javaCompiler = javaCompiler;\n-        this.javaExecutor = javaExecutor;\n-    }\n-\n-    @Override\n-    public Compiler compiler() {\n-        return javaCompiler;\n-    }\n-\n-    @Override\n-    public Executor executor() {\n-        return javaExecutor;\n-    }\n-}"
  },
  {
    "sha": "9d22dcfe5b9398992c0918a825c72a3df557b357",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/compiler/JavaCompiler.java",
    "status": "modified",
    "additions": 18,
    "deletions": 4,
    "changes": 22,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/compiler/JavaCompiler.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/compiler/JavaCompiler.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/java/compiler/JavaCompiler.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -9,6 +9,7 @@\n import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompiledClass;\n import io.mkrzywanski.onlinecodeexecutor.language.compilation.Compiler;\n import io.mkrzywanski.onlinecodeexecutor.language.java.DiagnosticsCollectingListener;\n+import org.jetbrains.annotations.NotNull;\n \n import javax.tools.StandardJavaFileManager;\n import javax.tools.ToolProvider;\n@@ -33,20 +34,33 @@\n         DiagnosticsCollectingListener diagnosticListener = new DiagnosticsCollectingListener();\n \n         javax.tools.JavaCompiler.CompilationTask task = javaCompiler.getTask(null, inMemoryFileManager, diagnosticListener, null, null, List.of(javaSourceFromString));\n+\n         Boolean isSuccess = task.call();\n \n-        if(!isSuccess) {\n-            String report = diagnosticListener.generateReport();\n-            throw new CompilationException(\"Compilation failure\", report);\n-        }\n+        ensureSuccessfulCompilation(diagnosticListener, isSuccess);\n+\n+        return getCompiledClassesFromFileManager(inMemoryFileManager);\n+\n+    }\n \n+    private Set<CompiledClass> getCompiledClassesFromFileManager(InMemoryFileManager inMemoryFileManager) {\n+        return getCompiledClasses(inMemoryFileManager);\n+    }\n+\n+    private Set<CompiledClass> getCompiledClasses(final InMemoryFileManager inMemoryFileManager) {\n         Map<String, byte[]> compiledClassBytes = inMemoryFileManager.getCompiledClassBytes();\n \n         return compiledClassBytes.entrySet()\n                 .stream()\n                 .map(entry -> new CompiledClass(entry.getKey(), entry.getValue()))\n                 .collect(Collectors.toSet());\n+    }\n \n+    private void ensureSuccessfulCompilation(DiagnosticsCollectingListener diagnosticListener, Boolean isSuccess) throws CompilationException {\n+        if(!isSuccess) {\n+            String report = diagnosticListener.generateReport();\n+            throw new CompilationException(\"Compilation failure\", report);\n+        }\n     }\n \n     private String getTopLevelClassName(String code) throws CompilationException {"
  },
  {
    "sha": "749f723883fd2b0260bcf412cd5faf90b7f0a829",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/kotlin/KotlinCompiler.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/kotlin/KotlinCompiler.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/kotlin/KotlinCompiler.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/kotlin/KotlinCompiler.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -3,6 +3,7 @@\n import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompilationException;\n import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompiledClass;\n import io.mkrzywanski.onlinecodeexecutor.language.compilation.Compiler;\n+import io.mkrzywanski.onlinecodeexecutor.language.execution.ExecutionId;\n import io.mkrzywanski.onlinecodeexecutor.utils.FileUtils;\n import org.jetbrains.annotations.NotNull;\n import org.jetbrains.kotlin.cli.common.ExitCode;\n@@ -40,10 +41,10 @@ public KotlinCompiler(Path baseDir) {\n     public Set<CompiledClass> compile(final String code) throws CompilationException {\n         K2JVMCompilerArguments compilerArguments = new K2JVMCompilerArguments();\n \n-        String executionId = UUID.randomUUID().toString();\n+        String executionId = ExecutionId.generate().asString();\n \n         String executionDirectory = baseDir + \"/\" + executionId;\n-        String o = (String) System.getProperties().get(\"java.class.path\");\n+        String classPath = (String) System.getProperties().get(\"java.class.path\");\n         String sourcesDir = getDirectoryPath(executionId, \"sources\");\n         String outputDir = getDirectoryPath(executionId, \"output\");\n \n@@ -55,7 +56,7 @@ public KotlinCompiler(Path baseDir) {\n         compilerArguments.setFreeArgs(List.of(sourcesDir));\n         compilerArguments.setDestination(outputDir);\n         compilerArguments.setNoStdlib(true);\n-        compilerArguments.setClasspath(o);\n+        compilerArguments.setClasspath(classPath);\n \n         compile(compilerArguments);\n "
  },
  {
    "sha": "10ddd49e3badb17a943664fdd55efbe8b3fd232c",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/kotlin/KotlinLanguageTools.java",
    "status": "removed",
    "additions": 0,
    "deletions": 26,
    "changes": 26,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/kotlin/KotlinLanguageTools.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/kotlin/KotlinLanguageTools.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/kotlin/KotlinLanguageTools.java?ref=5daf2e768ef22b01246cf2626d2d0d58f182e4e8",
    "patch": "@@ -1,26 +0,0 @@\n-package io.mkrzywanski.onlinecodeexecutor.language.kotlin;\n-\n-import io.mkrzywanski.onlinecodeexecutor.language.LanguageTools;\n-import io.mkrzywanski.onlinecodeexecutor.language.compilation.Compiler;\n-import io.mkrzywanski.onlinecodeexecutor.language.execution.Executor;\n-\n-public class KotlinLanguageTools implements LanguageTools {\n-\n-    private final KotlinCompiler kotlinCompiler;\n-    private final Executor executor;\n-\n-    public KotlinLanguageTools(KotlinCompiler kotlinCompiler, Executor executor) {\n-        this.kotlinCompiler = kotlinCompiler;\n-        this.executor = executor;\n-    }\n-\n-    @Override\n-    public Compiler compiler() {\n-        return kotlinCompiler;\n-    }\n-\n-    @Override\n-    public Executor executor() {\n-        return executor;\n-    }\n-}"
  },
  {
    "sha": "4aeb5f931f1966eb73d4c581a822a166ab839be5",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/loading/ClassLoadingService.java",
    "status": "modified",
    "additions": 8,
    "deletions": 4,
    "changes": 12,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/loading/ClassLoadingService.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/loading/ClassLoadingService.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/loading/ClassLoadingService.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -1,6 +1,7 @@\n package io.mkrzywanski.onlinecodeexecutor.language.loading;\n \n import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompiledClass;\n+import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompiledClasses;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -14,17 +15,20 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(ClassLoadingService.class);\n \n-    public Set<Class<?>> load(Set<CompiledClass> compiledClass) {\n+    public LoadedClasses load(final CompiledClasses compiledClass) {\n \n-        Map<String, byte[]> classBytes = compiledClass.stream()\n-                .collect(Collectors.toMap(CompiledClass::getClassName, CompiledClass::getBytes));\n+        Map<String, byte[]> classBytes = compiledClass.getCompiledClasses()\n+                .stream()\n+                .collect(Collectors.toMap(CompiledClass::getName, CompiledClass::getBytes));\n \n         ClassLoader classLoader = new ByteArrayClassLoader(classBytes);\n \n-        return classBytes.keySet()\n+        Set<Class<?>> classes = classBytes.keySet()\n                 .stream()\n                 .map(className -> load(classLoader, className))\n                 .collect(Collectors.toSet());\n+\n+        return new LoadedClasses(classes);\n     }\n \n     private Class<?> load(final ClassLoader classLoader, final String className) {"
  },
  {
    "sha": "99c19024d27f4c9fb3ae36ff95ac7c93b9b1600f",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/loading/LoadedClasses.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/loading/LoadedClasses.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/loading/LoadedClasses.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/language/loading/LoadedClasses.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -0,0 +1,41 @@\n+package io.mkrzywanski.onlinecodeexecutor.language.loading;\n+\n+import io.mkrzywanski.onlinecodeexecutor.language.execution.ExecutionException;\n+\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n+import java.util.Arrays;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+\n+public class LoadedClasses {\n+\n+    private static final String MAIN = \"main\";\n+\n+    private final Set<Class<?>> classes;\n+\n+    public LoadedClasses(Set<Class<?>> classes) {\n+        this.classes = classes;\n+    }\n+\n+    public Class<?> mainClass() throws ExecutionException {\n+        return findMainClass().orElseThrow(ExecutionException::noMainMethod);\n+    }\n+\n+    private Optional<Class<?>> findMainClass() {\n+        return classes.stream()\n+                .filter(this::isMainClass)\n+                .findFirst();\n+    }\n+\n+    private boolean isMainClass(Class<?> clazz) {\n+        Method[] declaredMethods = clazz.getDeclaredMethods();\n+        Predicate<Method> isMainMethod = method -> MAIN.equals(method.getName())\n+                && Modifier.isStatic(method.getModifiers())\n+                && method.getParameterCount() == 1\n+                && method.getParameterTypes()[0] == String[].class;\n+        return Arrays.stream(declaredMethods)\n+                .anyMatch(isMainMethod);\n+    }\n+}"
  },
  {
    "sha": "358d102f3d50df97ba064ad3245a1f99bc67649a",
    "filename": "online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/web/CodeExecutionController.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/web/CodeExecutionController.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/web/CodeExecutionController.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/main/java/io/mkrzywanski/onlinecodeexecutor/web/CodeExecutionController.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -6,7 +6,7 @@\n import io.micronaut.http.annotation.Controller;\n import io.micronaut.http.annotation.Post;\n import io.mkrzywanski.onlinecodeexecutor.language.execution.ExecutionException;\n-import io.mkrzywanski.onlinecodeexecutor.language.execution.ExecutionService;\n+import io.mkrzywanski.onlinecodeexecutor.language.CodeRunner;\n import io.mkrzywanski.onlinecodeexecutor.language.compilation.CompilationException;\n import io.mkrzywanski.onlinecodeexecutor.language.Code;\n import io.mkrzywanski.onlinecodeexecutor.language.execution.ExecutionResult;\n@@ -16,16 +16,16 @@\n @Controller\n public class CodeExecutionController {\n \n-    private final ExecutionService executionService;\n+    private final CodeRunner codeRunner;\n \n     @Inject\n-    public CodeExecutionController(ExecutionService executionService) {\n-        this.executionService = executionService;\n+    public CodeExecutionController(CodeRunner codeRunner) {\n+        this.codeRunner = codeRunner;\n     }\n \n     @Post(uri = Endpoints.EXECUTE, consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_JSON)\n-    public HttpResponse<ExecutionResult> execute(@Body Code code) throws CompilationException, ExecutionException {\n-        ExecutionResult executionResult = executionService.execute(code);\n+    public HttpResponse<ExecutionResult> execute(@Body final Code code) throws CompilationException, ExecutionException {\n+        ExecutionResult executionResult = codeRunner.run(code);\n         return HttpResponse.ok(executionResult);\n     }\n }"
  },
  {
    "sha": "6440b2eb961123a7baa9540fe7d17b54b5d5bf8f",
    "filename": "online-code-executor-backend/src/test/groovy/io/mkrzywanski/data/HelloWorld.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/test/groovy/io/mkrzywanski/data/HelloWorld.java",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/test/groovy/io/mkrzywanski/data/HelloWorld.java",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/test/groovy/io/mkrzywanski/data/HelloWorld.java?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -0,0 +1,7 @@\n+package io.mkrzywanski.data;\n+\n+public class HelloWorld {\n+    public static void main(String[] args) {\n+        System.out.println(\"Hello world\");\n+    }\n+}"
  },
  {
    "sha": "6968ed04d3f1481907f561f569af26d3e96a2775",
    "filename": "online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/compilation/CodeCompilerSpec.groovy",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/compilation/CodeCompilerSpec.groovy",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/compilation/CodeCompilerSpec.groovy",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/compilation/CodeCompilerSpec.groovy?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -0,0 +1,25 @@\n+package io.mkrzywanski.onlinecodeexecutor.language.compilation\n+\n+import io.mkrzywanski.onlinecodeexecutor.language.Code\n+import io.mkrzywanski.onlinecodeexecutor.language.Language\n+import io.mkrzywanski.onlinecodeexecutor.language.java.compiler.JavaCompiler\n+import spock.lang.Specification\n+\n+class CodeCompilerSpec extends Specification {\n+\n+    def compilers = Stub(Compilers)\n+    def codeCompiler = new CodeCompiler(compilers)\n+\n+    def \"should compile code for given language\"() {\n+        given:\n+        def code = \"public class Test { public static void main(String[] args) {System.out.println(\\\"hello\\\");}}\"\n+        and:\n+        compilers.forLanguage(Language.JAVA) >> new JavaCompiler()\n+\n+        when:\n+        def compile = codeCompiler.compile(new Code(Language.JAVA, code))\n+\n+        then:\n+        compile.compiledClasses.size() == 1\n+    }\n+}"
  },
  {
    "sha": "b42093eddff2eff60cc2d0a1a804e55b661406e1",
    "filename": "online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/execution/DefaultExecutorSpec.groovy",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/execution/DefaultExecutorSpec.groovy",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/85a7443db8bc6f02f481ed3210c93ad7d0e45084/online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/execution/DefaultExecutorSpec.groovy",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/execution/DefaultExecutorSpec.groovy?ref=85a7443db8bc6f02f481ed3210c93ad7d0e45084",
    "patch": "@@ -0,0 +1,24 @@\n+package io.mkrzywanski.onlinecodeexecutor.language.execution\n+\n+import io.mkrzywanski.data.HelloWorld\n+import io.mkrzywanski.onlinecodeexecutor.language.interceptor.ThreadOutputInterceptor\n+import io.mkrzywanski.onlinecodeexecutor.language.loading.LoadedClasses\n+import spock.lang.Specification\n+\n+class DefaultExecutorSpec extends Specification {\n+\n+    def interceptor = Stub(ThreadOutputInterceptor)\n+    def executor = new DefaultExecutor(interceptor)\n+\n+    def \"should return execution result\"() {\n+        given:\n+        def mockedResponse = \"Hello\"\n+        interceptor.outputForCurrentThread >> mockedResponse\n+        LoadedClasses loadedClasses = new LoadedClasses(Set.of(HelloWorld))\n+        when:\n+        def execute = executor.execute(loadedClasses)\n+\n+        then:\n+        execute.output == mockedResponse\n+    }\n+}"
  },
  {
    "sha": "1b16f00daecfa72967f3a0579ad793ddbc5220ba",
    "filename": "online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionServiceSpec.groovy",
    "status": "removed",
    "additions": 0,
    "deletions": 27,
    "changes": 27,
    "blob_url": "https://github.com/mkrzywanski/online-code-executor/blob/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionServiceSpec.groovy",
    "raw_url": "https://github.com/mkrzywanski/online-code-executor/raw/5daf2e768ef22b01246cf2626d2d0d58f182e4e8/online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionServiceSpec.groovy",
    "contents_url": "https://api.github.com/repos/mkrzywanski/online-code-executor/contents/online-code-executor-backend/src/test/groovy/io/mkrzywanski/onlinecodeexecutor/language/execution/ExecutionServiceSpec.groovy?ref=5daf2e768ef22b01246cf2626d2d0d58f182e4e8",
    "patch": "@@ -1,27 +0,0 @@\n-//package io.mkrzywanski.onlinecodeexecutor.language.execution\n-//\n-//\n-//import io.mkrzywanski.onlinecodeexecutor.language.Code\n-//import io.mkrzywanski.onlinecodeexecutor.language.Language\n-//import io.mkrzywanski.onlinecodeexecutor.language.LanguageTools\n-//import io.mkrzywanski.onlinecodeexecutor.language.LanguageToolsResolver\n-//import io.mkrzywanski.onlinecodeexecutor.language.loading.ClassLoadingService\n-//import spock.lang.Specification\n-//\n-//class ExecutionServiceSpec extends Specification {\n-//\n-//    def languageTools = Mock(LanguageTools)\n-//    def languageToolsResolver = Mock(LanguageToolsResolver)\n-//    def classLoadingService = Mock(ClassLoadingService)\n-//    def exe = new ExecutionService(languageToolsResolver, classLoadingService)\n-//\n-//    def \"should return code execution result\"() {\n-//        given:\n-//        def codeString = \"\"\n-//        def code = new Code(Language.JAVA, )\n-//        languageToolsResolver.resolve(Language.JAVA) >> Optional.of(languageTools)\n-//\n-//        when:\n-//        exe.execute()\n-//    }\n-//}"
  }
]
