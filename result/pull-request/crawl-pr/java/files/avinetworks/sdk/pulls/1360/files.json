[
  {
    "sha": "4049c8d8e6f118ed8a9859f0bf6d5668c9fe7abd",
    "filename": "python/avi/sdk/avi_api.py",
    "status": "modified",
    "additions": 1,
    "deletions": 4,
    "changes": 5,
    "blob_url": "https://github.com/avinetworks/sdk/blob/02590a7e8004d5cbbdf25c39dbf80527b792a9cb/python/avi/sdk/avi_api.py",
    "raw_url": "https://github.com/avinetworks/sdk/raw/02590a7e8004d5cbbdf25c39dbf80527b792a9cb/python/avi/sdk/avi_api.py",
    "contents_url": "https://api.github.com/repos/avinetworks/sdk/contents/python/avi/sdk/avi_api.py?ref=02590a7e8004d5cbbdf25c39dbf80527b792a9cb",
    "patch": "@@ -102,15 +102,12 @@ def json(self):\n         and raise Exceptions\n         returns the Avi object as a dictionary from rsp.text\n         \"\"\"\n-        if self.status_code in (200, 201):\n+        if self.status_code > 199 and self.status_code < 300:\n             if not self.text:\n                 # In cases like status_code == 201 the response text could be\n                 # empty string.\n                 return None\n             return super(ApiResponse, self).json()\n-        elif self.status_code == 204:\n-            # No response needed; e.g., delete operation\n-            return None\n         elif self.status_code == 404:\n             raise ObjectNotFound('HTTP Error: %d Error Msg %s' % (\n                 self.status_code, self.text), self)"
  }
]
