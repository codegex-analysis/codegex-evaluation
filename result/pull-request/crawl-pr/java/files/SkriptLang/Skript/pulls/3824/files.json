[
  {
    "sha": "53574fa52734b10a6325873f3c10ca71c3c7f438",
    "filename": "src/main/java/ch/njol/skript/bukkitutil/block/NewBlockCompat.java",
    "status": "modified",
    "additions": 4,
    "deletions": 7,
    "changes": 11,
    "blob_url": "https://github.com/SkriptLang/Skript/blob/f5ddec546c37d1f3ebc3938761701276df0edfdf/src/main/java/ch/njol/skript/bukkitutil/block/NewBlockCompat.java",
    "raw_url": "https://github.com/SkriptLang/Skript/raw/f5ddec546c37d1f3ebc3938761701276df0edfdf/src/main/java/ch/njol/skript/bukkitutil/block/NewBlockCompat.java",
    "contents_url": "https://api.github.com/repos/SkriptLang/Skript/contents/src/main/java/ch/njol/skript/bukkitutil/block/NewBlockCompat.java?ref=f5ddec546c37d1f3ebc3938761701276df0edfdf",
    "patch": "@@ -116,11 +116,9 @@ public MatchQuality match(BlockValues other) {\n \t\tprivate ItemType specialTorchFloors;\n \t\t\n \t\tprivate boolean typesLoaded = false;\n-\n-\t\t/**\n-\t\t * Cached BlockFace values.\n-\t\t */\n-\t\tprivate BlockFace[] faces = BlockFace.values();\n+\t\t\n+\t\tprivate static final BlockFace[] CARDINAL_FACES =\n+\t\t\tnew BlockFace[] {BlockFace.NORTH, BlockFace.EAST, BlockFace.SOUTH, BlockFace.WEST};\n \t\t\n \t\t@SuppressWarnings(\"null\") // Late initialization with loadTypes() to avoid circular dependencies\n \t\tpublic NewBlockSetter() {}\n@@ -276,8 +274,7 @@ private void loadTypes() {\n \n \t\t@Nullable\n \t\tprivate BlockFace findWallTorchSide(Block block) {\n-\t\t\tfor (BlockFace face : faces) {\n-\t\t\t\tassert face != null;\n+\t\t\tfor (BlockFace face : CARDINAL_FACES) {\n \t\t\t\tBlock relative = block.getRelative(face);\n \t\t\t\tif (relative.getType().isOccluding() || specialTorchSides.isOfType(relative))\n \t\t\t\t\treturn face.getOppositeFace(); // Torch can be rotated towards from this face"
  }
]
