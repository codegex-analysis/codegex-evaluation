[
  {
    "sha": "fd98faf4dc106fd2c2638e09d9704fa8b2277a79",
    "filename": "cli/ballerina-cli/src/main/java/io/ballerina/cli/task/ListTestGroupsTask.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/ballerina-platform/ballerina-lang/blob/06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e/cli/ballerina-cli/src/main/java/io/ballerina/cli/task/ListTestGroupsTask.java",
    "raw_url": "https://github.com/ballerina-platform/ballerina-lang/raw/06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e/cli/ballerina-cli/src/main/java/io/ballerina/cli/task/ListTestGroupsTask.java",
    "contents_url": "https://api.github.com/repos/ballerina-platform/ballerina-lang/contents/cli/ballerina-cli/src/main/java/io/ballerina/cli/task/ListTestGroupsTask.java?ref=06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e",
    "patch": "@@ -95,6 +95,8 @@ private void listGroups(TestSuite testSuite, PrintStream outStream) {\n                 groupList.addAll(test.getGroups());\n             }\n         }\n-        return groupList.stream().distinct().collect(Collectors.toList());\n+        List<String> distinctGroupList = groupList.stream().distinct().collect(Collectors.toList());\n+        Collections.sort(distinctGroupList);\n+        return distinctGroupList;\n     }\n }"
  },
  {
    "sha": "bc7b7947e873c3785c08a29b291492cc922ad8b7",
    "filename": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestProcessor.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/ballerina-platform/ballerina-lang/blob/06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestProcessor.java",
    "raw_url": "https://github.com/ballerina-platform/ballerina-lang/raw/06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestProcessor.java",
    "contents_url": "https://api.github.com/repos/ballerina-platform/ballerina-lang/contents/misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/TestProcessor.java?ref=06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e",
    "patch": "@@ -147,7 +147,6 @@ private TestSuite generateTestSuite(Module module, JarResolver jarResolver) {\n         }\n         addUtilityFunctions(module, testSuite);\n         processAnnotations(module, testSuite);\n-        testSuite.sort();\n         return testSuite;\n     }\n "
  },
  {
    "sha": "58e47b880285f7004d40102c1753e31e04adfec0",
    "filename": "misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/Test.java",
    "status": "modified",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/ballerina-platform/ballerina-lang/blob/06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e/misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/Test.java",
    "raw_url": "https://github.com/ballerina-platform/ballerina-lang/raw/06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e/misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/Test.java",
    "contents_url": "https://api.github.com/repos/ballerina-platform/ballerina-lang/contents/misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/Test.java?ref=06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e",
    "patch": "@@ -19,7 +19,6 @@\n package org.ballerinalang.test.runtime.entity;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n \n /**\n@@ -92,11 +91,4 @@ public String toString() {\n         return getTestName();\n     }\n \n-    /**\n-     * Sort all the lists in Test in alphabetical order.\n-     */\n-    public void sort() {\n-        Collections.sort(dependsOnTestFunctions);\n-        Collections.sort(groups);\n-    }\n }"
  },
  {
    "sha": "d38bb1ff5dfd80a8fad0580d8545210ad8db242e",
    "filename": "misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/TestGroup.java",
    "status": "modified",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/ballerina-platform/ballerina-lang/blob/06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e/misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/TestGroup.java",
    "raw_url": "https://github.com/ballerina-platform/ballerina-lang/raw/06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e/misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/TestGroup.java",
    "contents_url": "https://api.github.com/repos/ballerina-platform/ballerina-lang/contents/misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/TestGroup.java?ref=06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e",
    "patch": "@@ -18,7 +18,6 @@\n package org.ballerinalang.test.runtime.entity;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n \n /**\n@@ -108,11 +107,4 @@ public boolean isLastTestExecuted() {\n         return testCount == executedCount;\n     }\n \n-    /**\n-     * Sort all the lists in Test group in alphabetical order.\n-     */\n-    public void sort() {\n-        Collections.sort(beforeGroupsFunctions);\n-        Collections.sort(afterGroupsFunctions);\n-    }\n }"
  },
  {
    "sha": "848b0612b7a3986e7622b3f4a7645e6ac0414920",
    "filename": "misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/TestSuite.java",
    "status": "modified",
    "additions": 2,
    "deletions": 23,
    "changes": 25,
    "blob_url": "https://github.com/ballerina-platform/ballerina-lang/blob/06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e/misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/TestSuite.java",
    "raw_url": "https://github.com/ballerina-platform/ballerina-lang/raw/06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e/misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/TestSuite.java",
    "contents_url": "https://api.github.com/repos/ballerina-platform/ballerina-lang/contents/misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/entity/TestSuite.java?ref=06b44d2b60714c5cae4508a9e9ffcd0f131d2d0e",
    "patch": "@@ -20,12 +20,9 @@\n import java.nio.file.Path;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n-import java.util.Comparator;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.TreeMap;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n /**\n@@ -52,11 +49,11 @@\n \n     private Map<String, String> testUtilityFunctions = new HashMap<>();\n     private List<String> beforeSuiteFunctionNames = new ArrayList<>();\n-    private Map<String, AtomicBoolean> afterSuiteFunctionNames = new TreeMap<>();\n+    private Map<String, AtomicBoolean> afterSuiteFunctionNames = new HashMap<>();\n     private List<String> beforeEachFunctionNames = new ArrayList<>();\n     private List<String> afterEachFunctionNames = new ArrayList<>();\n     private List<Test> tests = new ArrayList<>();\n-    private Map<String, TestGroup> groups = new TreeMap<>();\n+    private Map<String, TestGroup> groups = new HashMap<>();\n     private List<String> testExecutionDependencies = new ArrayList<>();\n \n     private boolean isReportRequired;\n@@ -290,24 +287,6 @@ public void addTestToGroups(Test test) {\n         }\n     }\n \n-    /**\n-     * Sort all the lists in Test suite in alphabetical order.\n-     */\n-    public void sort() {\n-        Collections.sort(beforeEachFunctionNames);\n-        Collections.sort(afterEachFunctionNames);\n-        Collections.sort(beforeSuiteFunctionNames);\n-        Collections.sort(tests, new Comparator<Test>() {\n-            @Override\n-            public int compare(Test t1, Test t2) {\n-                return t1.getTestName().compareTo(t2.getTestName());\n-            }\n-        });\n-        for (TestGroup testGroup:groups.values()) {\n-            testGroup.sort();\n-        }\n-    }\n-\n     public void addTestExecutionDependencies(Collection<Path> dependencies) {\n         dependencies.forEach((path) -> {\n             this.testExecutionDependencies.add(path.toString());"
  }
]
