[
  {
    "sha": "15b349b32fac931165993f3e31f5319285a297c9",
    "filename": "src/main/java/Account.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/Zipcoder/CR-MacroLabs-OOP-ATM/blob/7591b8d6e975a4e3726178bb6fb82e21b8dc5b07/src/main/java/Account.java",
    "raw_url": "https://github.com/Zipcoder/CR-MacroLabs-OOP-ATM/raw/7591b8d6e975a4e3726178bb6fb82e21b8dc5b07/src/main/java/Account.java",
    "contents_url": "https://api.github.com/repos/Zipcoder/CR-MacroLabs-OOP-ATM/contents/src/main/java/Account.java?ref=7591b8d6e975a4e3726178bb6fb82e21b8dc5b07",
    "patch": "@@ -0,0 +1,57 @@\n+public class Account {\n+\n+    Double balance;\n+    String accountType= \"Checking\";\n+\n+\n+    //A new instance of account would need starting funds and account type\n+    public Account(Double startingBalance, String typeOfAccount){\n+        balance=startingBalance;\n+        accountType=typeOfAccount;\n+    }\n+\n+    //the version of the constructor the tests use.\n+    //The console should probably use the other one.\n+    //If this constructor IS used, account defaults to a checking account.\n+    public Account(Double startingBalance){\n+        balance=startingBalance;\n+    }\n+\n+    public Double getBalance(){\n+        return balance;\n+    }\n+\n+    public String getAccountType(){\n+        return accountType;\n+    }\n+\n+\n+\n+    //Possible area to expand on: perhaps withdrawing works differently pending account type.\n+    //prevents overdrawing\n+    public Double withdraw(Double amount){\n+        if(amount>balance){\n+            System.out.println(\"Insufficient funds for withdrawal.\");\n+            return 0.0;\n+        }else{balance-=amount;\n+            return amount;}\n+    }\n+\n+    public void deposit(Double amount){\n+        balance+=amount;\n+    }\n+\n+\n+    public void transfer(Account gettingMoney, Double amount){\n+        gettingMoney.deposit(this.withdraw(amount));\n+    }\n+\n+\n+    //Uncertain if this is needed, but it was in the tests.\n+    //Returns true if the account can be closed. False if not.\n+    public Boolean closeAccount(){\n+        if (balance==0.0){return true;}\n+        else return false;\n+    }\n+\n+}"
  },
  {
    "sha": "111806d42b4203adabf948787ccfc51787139103",
    "filename": "src/main/java/Console.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/Zipcoder/CR-MacroLabs-OOP-ATM/blob/7591b8d6e975a4e3726178bb6fb82e21b8dc5b07/src/main/java/Console.java",
    "raw_url": "https://github.com/Zipcoder/CR-MacroLabs-OOP-ATM/raw/7591b8d6e975a4e3726178bb6fb82e21b8dc5b07/src/main/java/Console.java",
    "contents_url": "https://api.github.com/repos/Zipcoder/CR-MacroLabs-OOP-ATM/contents/src/main/java/Console.java?ref=7591b8d6e975a4e3726178bb6fb82e21b8dc5b07",
    "patch": "@@ -0,0 +1,78 @@\n+import java.math.BigInteger;\n+import java.util.Scanner;\n+\n+public class Console {\n+\n+    //added a comment\n+\n+    public void greetingMessage(){\n+        System.out.println(\"Welcome!\");\n+    }\n+    Scanner userInput = new Scanner(System.in);\n+\n+    //Simple user Interface\n+    //Needs modification to only take in an integer\n+    public void chooseAccount(){\n+\n+        System.out.println(\"Which account would you like to access?\");\n+        System.out.println(\"1 - Checking, 2 - Savings, 3 - Investing\");\n+\n+        int numIn = 0;\n+        if(userInput.hasNextInt() && userInput.nextInt() < 4){\n+            numIn = userInput.nextInt();\n+        }\n+        else {\n+            System.out.println(\"Please choose from the menu!\");\n+        }\n+\n+        switch (numIn){\n+            case 1:  {\n+                System.out.println(\"You have chosen Checking\");\n+                break;\n+            }\n+            case 2:  {\n+                System.out.println(\"You have chosen Savings\");\n+                break;\n+            }\n+            case 3:  {\n+\n+                System.out.println(\"You have chosen Investing\");\n+                break;\n+            }\n+        }\n+    }\n+\n+    public void depositOrWithdraw() {\n+        System.out.println(\"Would you like to deposit of withdraw funds?\");\n+        System.out.println(\"1 - Deposit, 2 - Withdraw\");\n+        int numIn = userInput.nextInt();\n+        int numIn = \"\";\n+\n+        switch (numIn) {\n+            case 1: {\n+                this.deposit();\n+                break;\n+            }\n+            case 2: {\n+                this.withdraw();\n+                break;\n+            }\n+            default: {\n+                System.out.println(\"Please choose from the menu!\");\n+            }\n+\n+        }\n+    }\n+\n+    public void deposit() {\n+        System.out.println(\"Amount to be deposited? \");\n+        //receive input\n+        //parse to int\n+        //if not an int return message to try again\n+    }\n+\n+    public void withdraw() {\n+        System.out.println(\"Amount to be withdrawn? \");\n+        if (// input greater than account balance ask for new amount)\n+    }\n+}"
  },
  {
    "sha": "9d744f5f65d643370b8f387f1acae965effd57d5",
    "filename": "src/main/java/Main.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Zipcoder/CR-MacroLabs-OOP-ATM/blob/7591b8d6e975a4e3726178bb6fb82e21b8dc5b07/src/main/java/Main.java",
    "raw_url": "https://github.com/Zipcoder/CR-MacroLabs-OOP-ATM/raw/7591b8d6e975a4e3726178bb6fb82e21b8dc5b07/src/main/java/Main.java",
    "contents_url": "https://api.github.com/repos/Zipcoder/CR-MacroLabs-OOP-ATM/contents/src/main/java/Main.java?ref=7591b8d6e975a4e3726178bb6fb82e21b8dc5b07",
    "patch": "@@ -4,6 +4,11 @@\n public class Main {\n \n     public static void main(String[] args){\n+\n+        Console consoleOut = new Console();\n+        consoleOut.greetingMessage();\n+        consoleOut.chooseAccount();\n+\n         \n     }\n }"
  },
  {
    "sha": "3aac3c9440eeaa4794b66bf75f1c84d4d5a88806",
    "filename": "src/main/test/ConsoleTest.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Zipcoder/CR-MacroLabs-OOP-ATM/blob/7591b8d6e975a4e3726178bb6fb82e21b8dc5b07/src/main/test/ConsoleTest.java",
    "raw_url": "https://github.com/Zipcoder/CR-MacroLabs-OOP-ATM/raw/7591b8d6e975a4e3726178bb6fb82e21b8dc5b07/src/main/test/ConsoleTest.java",
    "contents_url": "https://api.github.com/repos/Zipcoder/CR-MacroLabs-OOP-ATM/contents/src/main/test/ConsoleTest.java?ref=7591b8d6e975a4e3726178bb6fb82e21b8dc5b07",
    "patch": "@@ -0,0 +1,12 @@\n+import org.junit.Test;\n+\n+public class ConsoleTest{\n+\n+    @Test\n+    public void greetingTest(){\n+        Console console = new Console();\n+        Console.greeting();\n+\n+        Assert.AssertTrue(\"Welcome!\")\n+    }\n+}\n\\ No newline at end of file"
  }
]
