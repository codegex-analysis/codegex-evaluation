[
  {
    "sha": "1ea2e0418c46b9b3634166095013b3da506f6b81",
    "filename": "NumberUtilities.java",
    "status": "modified",
    "additions": 58,
    "deletions": 6,
    "changes": 64,
    "blob_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/blob/5a6aef21e6cfdd2226121833351af9946ddae6fa/NumberUtilities.java",
    "raw_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/raw/5a6aef21e6cfdd2226121833351af9946ddae6fa/NumberUtilities.java",
    "contents_url": "https://api.github.com/repos/Zipcoder/BlueJ.NumbersTrianglesTables/contents/NumberUtilities.java?ref=5a6aef21e6cfdd2226121833351af9946ddae6fa",
    "patch": "@@ -4,29 +4,81 @@\n public class NumberUtilities {\n \n     public static String getRange(int stop) {\n-        return null;\n+        String placeHolder = \"\";\n+        int[] intArr = new int[stop];\n+        for (int i = 0; i < stop; i++) {\n+            intArr[i] = i;\n+            String intStr = Integer.toString(intArr[i]);\n+            placeHolder += intStr;\n+        }\n+        return  placeHolder;\n     }\n+   \n \n     public static String getRange(int start, int stop) {\n-        return null;\n+        String placeHolder = \"\";\n+        int[] intArr = new int[stop];\n+        for (int i = start; i < stop; i++) {\n+            intArr[i] = i;\n+            String intStr = Integer.toString(intArr[i]);\n+            placeHolder += intStr;\n+        }\n+        return  placeHolder;\n     }\n \n \n     public static String getRange(int start, int stop, int step) {\n-        return null;\n+        String placeHolder = \"\";\n+        int[] intArr = new int[stop];\n+        for (int i = start; i < stop; i += step) {\n+            intArr[i] = i;\n+            String intStr = Integer.toString(intArr[i]);\n+            placeHolder += intStr;\n+        }\n+        return  placeHolder;\n     }\n \n     public static String getEvenNumbers(int start, int stop) {\n-        return null;\n+        String placeHolder = \"\";\n+        int[] intArr = new int[stop];\n+        if (start % 2 == 1) {\n+            start += 1;\n+        }\n+        for (int i = start; i < stop; i += 2) {\n+                intArr[i] = i;\n+                String intStr = Integer.toString(intArr[i]);\n+                placeHolder += intStr;\n+            }\n+        return placeHolder;\n     }\n \n \n     public static String getOddNumbers(int start, int stop) {\n-        return null;\n+        String placeHolder = \"\";\n+        int[] intArr = new int[stop];\n+        if (start % 2 == 0) {\n+            start += 1;\n+        }\n+        for (int i = start; i < stop; i += 2) {\n+                intArr[i] = i;\n+                String intStr = Integer.toString(intArr[i]);\n+                placeHolder += intStr;\n+            }\n+        return placeHolder;\n     }\n \n \n     public static String getExponentiations(int start, int stop, int exponent) {\n-        return null;\n+        String placeHolder = \"\";\n+        int[] intArr = new int[stop];\n+        int intInt = start;\n+        double intDbl = intInt;\n+        for (int i = 0; i <= stop - start; i++) {\n+            intArr[i] = (int) Math.pow(intDbl, exponent);\n+            String intStr = Integer.toString(intArr[i]);\n+            placeHolder += intStr;\n+            intDbl++;\n+        }\n+        return placeHolder;\n     }\n }"
  },
  {
    "sha": "defa0e0a30c6cf4588fd3a20aee58e1d4f29d8ce",
    "filename": "NumberUtilitiesTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/blob/5a6aef21e6cfdd2226121833351af9946ddae6fa/NumberUtilitiesTest.java",
    "raw_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/raw/5a6aef21e6cfdd2226121833351af9946ddae6fa/NumberUtilitiesTest.java",
    "contents_url": "https://api.github.com/repos/Zipcoder/BlueJ.NumbersTrianglesTables/contents/NumberUtilitiesTest.java?ref=5a6aef21e6cfdd2226121833351af9946ddae6fa",
    "patch": "@@ -151,9 +151,10 @@ public void testGetOddNumbersStartAndEndAtOdd() {\n         // : Then\n         Assert.assertEquals(expected, actual);\n     }\n-\n+    \n+    @Test\n     public void testGetOddNumbersStartAndEndAtEven() {\n-        // : Given\n+        // : Given``\n         String expected = \"579111315\";\n         int start = 4;\n         int stop = 16;\n@@ -166,6 +167,7 @@ public void testGetOddNumbersStartAndEndAtEven() {\n     }\n \n \n+\n     @Test\n     public void testGetExponentiationNumbersForSquare() {\n         // : Given"
  },
  {
    "sha": "02332f5561945c372dedfdaa23a18c2d52ad21a0",
    "filename": "TableUtilities.java",
    "status": "modified",
    "additions": 36,
    "deletions": 3,
    "changes": 39,
    "blob_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/blob/5a6aef21e6cfdd2226121833351af9946ddae6fa/TableUtilities.java",
    "raw_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/raw/5a6aef21e6cfdd2226121833351af9946ddae6fa/TableUtilities.java",
    "contents_url": "https://api.github.com/repos/Zipcoder/BlueJ.NumbersTrianglesTables/contents/TableUtilities.java?ref=5a6aef21e6cfdd2226121833351af9946ddae6fa",
    "patch": "@@ -2,14 +2,47 @@\n \n public class TableUtilities {\n     public static String getSmallMultiplicationTable() {\n-        return null;\n+        int i, j;\n+        String output = \"\";\n+        for (i = 1; i <= 5; i++) {\n+            String middleMan = \"\";\n+            for (j = 1; j <= 5; j++) {\n+                middleMan += \" \" + (j*i) + \" |\";\n+            }\n+            middleMan += \"\\n\";\n+            output += middleMan;\n+        }\n+        System.out.print(output);\n+        return output;\n     }\n \n     public static String getLargeMultiplicationTable() {\n-        return null;\n+        int i, j;\n+        String output = \"\";\n+        for (i = 1; i <= 10; i++) {\n+            String middleMan = \"\";\n+            for (j = 1; j <= 10; j++) {\n+                middleMan += \" \" + (j*i) + \" |\";\n+            }\n+            middleMan += \"\\n\";\n+            output += middleMan;\n+        }\n+        System.out.print(output);\n+        return output;\n     }\n \n     public static String getMultiplicationTable(int tableSize) {\n-        return null;\n+        int i, j;\n+        String output = \"\";\n+        for (i = 1; i <= tableSize; i++) {\n+            String middleMan = \"\";\n+            for (j = 1; j <= tableSize; j++) {\n+                middleMan += \" \" + (j*i) + \" |\";\n+            }\n+            middleMan += \"\\n\";\n+            output += middleMan;\n+        }\n+        System.out.print(output);\n+        return output;\n     }\n }"
  },
  {
    "sha": "7f35d1fcd473c10a62f1c88dfc20da4c5c32ca51",
    "filename": "TriangleUtilities.java",
    "status": "modified",
    "additions": 41,
    "deletions": 5,
    "changes": 46,
    "blob_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/blob/5a6aef21e6cfdd2226121833351af9946ddae6fa/TriangleUtilities.java",
    "raw_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/raw/5a6aef21e6cfdd2226121833351af9946ddae6fa/TriangleUtilities.java",
    "contents_url": "https://api.github.com/repos/Zipcoder/BlueJ.NumbersTrianglesTables/contents/TriangleUtilities.java?ref=5a6aef21e6cfdd2226121833351af9946ddae6fa",
    "patch": "@@ -3,19 +3,55 @@\n public class TriangleUtilities {\n \n     public static String getRow(int numberOfStars) {\n-        return null;\n+        String output = \"\";\n+        char[] starArr = new char[numberOfStars];\n+        for (int i = 0; i < numberOfStars; i++) {\n+            starArr[i] = '*';\n+            String strStars = Character.toString(starArr[i]);\n+            output += strStars;\n+        }\n+        System.out.print(output);\n+        return output;\n     }\n     \n     public static String getTriangle(int numberOfRows) {\n-        return null;\n-    }\n+        int i, j;\n+        String output = \"\";\n+        for (i = 0; i < numberOfRows; i++) {\n+            for (j = 0; j <= i; j++) {\n+                output += \"*\";\n+            }\n+            output += \"\\n\";\n+        }\n+        System.out.print(output);\n+        return output;\n+    } \n+\n \n \n     public static String getSmallTriangle() {\n-        return null;\n+        int i, j;\n+        String output = \"\";\n+        for (i = 0; i < 4; i++) {\n+            for (j = 0; j <= i; j++) {\n+                output += \"*\";\n+            }\n+            output += \"\\n\";\n+        }\n+        System.out.print(output);\n+        return output;\n     }\n \n     public static String getLargeTriangle() {\n-        return null;\n+        int i, j;\n+        String output = \"\";\n+        for (i = 0; i < 9; i++) {\n+            for (j = 0; j <= i; j++) {\n+                output += \"*\";\n+            }\n+            output += \"\\n\";\n+        }\n+        System.out.print(output);\n+        return output;\n     }\n }"
  },
  {
    "sha": "e8d074dac498ff7371efe3ddedbf1023df8c63d8",
    "filename": "TriangleUtilitiesTest.java",
    "status": "modified",
    "additions": 22,
    "deletions": 22,
    "changes": 44,
    "blob_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/blob/5a6aef21e6cfdd2226121833351af9946ddae6fa/TriangleUtilitiesTest.java",
    "raw_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/raw/5a6aef21e6cfdd2226121833351af9946ddae6fa/TriangleUtilitiesTest.java",
    "contents_url": "https://api.github.com/repos/Zipcoder/BlueJ.NumbersTrianglesTables/contents/TriangleUtilitiesTest.java?ref=5a6aef21e6cfdd2226121833351af9946ddae6fa",
    "patch": "@@ -1,4 +1,4 @@\n- \n+\n \n \n import org.junit.Assert;\n@@ -11,23 +11,23 @@ public void testGetRow_ForSmallWidth(){\n         //Given\n         String expected = \"*\";\n         int width = 1;\n-        \n+\n         //When\n         String actual = TriangleUtilities.getRow(width);\n-        \n+\n         //Then\n         Assert.assertEquals(expected, actual);\n     }\n-    \n+\n     @Test\n     public void testGetRow_ForBigWidth() {\n         //Given\n         String expected = \"********************\";\n         int width = 20;\n-        \n+\n         //When\n         String actual = TriangleUtilities.getRow(width);\n-        \n+\n         //Then\n         Assert.assertEquals(expected, actual);\n     }\n@@ -39,30 +39,30 @@ public void testGetTriangle_ForOneRow() {\n \n         // When\n         String actual = TriangleUtilities.getTriangle(1);\n-        \n+\n         // Then\n         Assert.assertEquals(expected, actual);\n     }\n-    \n+\n     @Test\n     public void testGetTriangle_ForSmallTriangle() {\n         // Given\n         String expected =\n-                        \"*\\n\" +\n+                \"*\\n\" +\n                         \"**\\n\" +\n                         \"***\\n\";\n \n         // When                \n         String actual = TriangleUtilities.getTriangle(3);\n-        \n+\n         // Then\n         Assert.assertEquals(expected, actual);\n     }\n-    \n+\n     @Test\n     public void testGetTriangle_ForBigTriangle() {\n         String expected =\n-                        \"*\\n\" +\n+                \"*\\n\" +\n                         \"**\\n\" +\n                         \"***\\n\" +\n                         \"****\\n\" +\n@@ -80,14 +80,14 @@ public void testGetTriangle_ForBigTriangle() {\n     public void testGetLargeTriangle() {\n         String expected =\n                 \"*\\n\" +\n-                \"**\\n\" +\n-                \"***\\n\" +\n-                \"****\\n\" +\n-                \"*****\\n\" +\n-                \"******\\n\" +\n-                \"*******\\n\" +\n-                \"********\\n\" +\n-                \"*********\\n\";\n+                        \"**\\n\" +\n+                        \"***\\n\" +\n+                        \"****\\n\" +\n+                        \"*****\\n\" +\n+                        \"******\\n\" +\n+                        \"*******\\n\" +\n+                        \"********\\n\" +\n+                        \"*********\\n\";\n         String actual = TriangleUtilities.getLargeTriangle();\n         Assert.assertEquals(expected, actual);\n     }\n@@ -96,11 +96,11 @@ public void testGetLargeTriangle() {\n     @Test\n     public void testGetSmallTriangle() {\n         String expected =\n-                        \"*\\n\" +\n+                \"*\\n\" +\n                         \"**\\n\" +\n                         \"***\\n\" +\n                         \"****\\n\";\n         String actual = TriangleUtilities.getSmallTriangle();\n         Assert.assertEquals(expected, actual);\n     }\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "07d884b052d89a5e51ffcf4bcd478385ec6bab1b",
    "filename": "package.bluej",
    "status": "modified",
    "additions": 17,
    "deletions": 17,
    "changes": 34,
    "blob_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/blob/5a6aef21e6cfdd2226121833351af9946ddae6fa/package.bluej",
    "raw_url": "https://github.com/Zipcoder/BlueJ.NumbersTrianglesTables/raw/5a6aef21e6cfdd2226121833351af9946ddae6fa/package.bluej",
    "contents_url": "https://api.github.com/repos/Zipcoder/BlueJ.NumbersTrianglesTables/contents/package.bluej?ref=5a6aef21e6cfdd2226121833351af9946ddae6fa",
    "patch": "@@ -1,27 +1,27 @@\n #BlueJ package file\n-dependency1.from=NumberUtilitiesTest\n-dependency1.to=NumberUtilities\n+dependency1.from=TableUtilitiesTest\n+dependency1.to=TableUtilities\n dependency1.type=UsesDependency\n dependency2.from=TriangleUtilitiesTest\n dependency2.to=TriangleUtilities\n dependency2.type=UsesDependency\n-dependency3.from=TableUtilitiesTest\n-dependency3.to=TableUtilities\n+dependency3.from=NumberUtilitiesTest\n+dependency3.to=NumberUtilities\n dependency3.type=UsesDependency\n-editor.fx.0.height=722\n-editor.fx.0.width=800\n-editor.fx.0.x=537\n-editor.fx.0.y=28\n-objectbench.height=164\n-objectbench.width=484\n+editor.fx.0.height=0\n+editor.fx.0.width=0\n+editor.fx.0.x=0\n+editor.fx.0.y=0\n+objectbench.height=136\n+objectbench.width=1256\n package.divider.horizontal=0.6\n-package.divider.vertical=0.7560627674750356\n-package.editor.height=523\n-package.editor.width=382\n-package.editor.x=20\n-package.editor.y=57\n-package.frame.height=759\n-package.frame.width=508\n+package.divider.vertical=0.7852852852852853\n+package.editor.height=516\n+package.editor.width=1162\n+package.editor.x=0\n+package.editor.y=23\n+package.frame.height=724\n+package.frame.width=1280\n package.numDependencies=3\n package.numTargets=6\n package.showExtends=true"
  }
]
