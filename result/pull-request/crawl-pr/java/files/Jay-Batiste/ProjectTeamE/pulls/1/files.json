[
  {
    "sha": "8a878fed4f05f210a72b1f20a6e1dd4838c52cb3",
    "filename": ".gitignore",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/.gitignore",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/.gitignore",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/.gitignore?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -0,0 +1,2 @@\n+/TeamProjectE/nbproject/private/\n+/TeamProjectE/build/"
  },
  {
    "sha": "d1a29e14ac0c1d3fd81b11026dae00e4edaeff3a",
    "filename": "TeamProjectE/nbproject/project.properties",
    "status": "modified",
    "additions": 74,
    "deletions": 79,
    "changes": 153,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/nbproject/project.properties",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/nbproject/project.properties",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/TeamProjectE/nbproject/project.properties?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -1,95 +1,90 @@\n-annotation.processing.enabled=true\n-annotation.processing.enabled.in.editor=false\n-annotation.processing.processor.options=\n-annotation.processing.processors.list=\n-annotation.processing.run.all.processors=true\n-annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output\n-build.classes.dir=${build.dir}/classes\n-build.classes.excludes=**/*.java,**/*.form\n-# This directory is removed when the project is cleaned:\n-build.dir=build\n-build.generated.dir=${build.dir}/generated\n-build.generated.sources.dir=${build.dir}/generated-sources\n-# Only compile against the classpath explicitly listed here:\n-build.sysclasspath=ignore\n-build.test.classes.dir=${build.dir}/test/classes\n-build.test.results.dir=${build.dir}/test/results\n-# Uncomment to specify the preferred debugger connection transport:\n-#debug.transport=dt_socket\n-debug.classpath=\\\n-    ${run.classpath}\n-debug.modulepath=\\\n-    ${run.modulepath}\n-debug.test.classpath=\\\n-    ${run.test.classpath}\n-debug.test.modulepath=\\\n-    ${run.test.modulepath}\n-# Files in build.classes.dir which should be excluded from distribution jar\n-dist.archive.excludes=\n-# This directory is removed when the project is cleaned:\n-dist.dir=dist\n-dist.jar=${dist.dir}/TeamProjectE.jar\n-dist.javadoc.dir=${dist.dir}/javadoc\n-dist.jlink.dir=${dist.dir}/jlink\n-dist.jlink.output=${dist.jlink.dir}/TeamProjectE\n+#Thu Mar 11 15:27:52 EST 2021\n excludes=\n-includes=**\n-jar.compress=false\n-javac.classpath=\n-# Space-separated list of extra javac options\n-javac.compilerargs=\n-javac.deprecation=false\n-javac.external.vm=true\n-javac.modulepath=\n-javac.processormodulepath=\n-javac.processorpath=\\\n-    ${javac.classpath}\n-javac.source=11\n-javac.target=11\n+file.reference.json-simple-1.1.1.jar=/Users/andrewpruitt/Desktop/libraries/json-simple-1.1.1.jar\n+file.reference.mysql-connector-java-8.0.19.jar=../../../Downloads/mysql-connector-java/mysql-connector-java-8.0.19.jar\n javac.test.classpath=\\\n+    ${javac.classpath}:\\\n+    ${build.classes.dir}:\\\n+    ${libs.junit_4.classpath}:\\\n+    ${libs.hamcrest.classpath}\n+run.classpath=\\\n     ${javac.classpath}:\\\n     ${build.classes.dir}\n-javac.test.modulepath=\\\n+javac.processorpath=\\\n+    ${javac.classpath}\n+dist.javadoc.dir=${dist.dir}/javadoc\n+test.src.dir=test\n+run.modulepath=\\\n     ${javac.modulepath}\n-javac.test.processorpath=\\\n-    ${javac.test.classpath}\n-javadoc.additionalparam=\n-javadoc.author=false\n-javadoc.encoding=${source.encoding}\n-javadoc.html5=false\n+annotation.processing.enabled=true\n+build.sysclasspath=ignore\n+debug.modulepath=${run.modulepath}\n+javac.compilerargs=\n javadoc.noindex=false\n-javadoc.nonavbar=false\n-javadoc.notree=false\n javadoc.private=false\n-javadoc.splitindex=true\n+javadoc.author=false\n+endorsed.classpath=\n+main.class=teamprojecte.TeamProjectE\n+junit.selected.version=4\n+source.encoding=UTF-8\n+javac.source=11\n+includes=**\n javadoc.use=true\n-javadoc.version=false\n-javadoc.windowtitle=\n-# The jlink additional root modules to resolve\n-jlink.additionalmodules=\n-# The jlink additional command line parameters\n-jlink.additionalparam=\n+jar.compress=false\n+javadoc.nonavbar=false\n+annotation.processing.enabled.in.editor=false\n+javadoc.notree=false\n+annotation.processing.processors.list=\n+javac.deprecation=false\n+application.vendor=rafaramos\n jlink.launcher=true\n+javadoc.additionalparam=\n jlink.launcher.name=TeamProjectE\n-main.class=teamprojecte.TeamProjectE\n-manifest.file=manifest.mf\n-meta.inf.dir=${src.dir}/META-INF\n-mkdist.disabled=false\n-platform.active=default_platform\n-run.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-# Space-separated list of JVM arguments used when running the project.\n-# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.\n-# To set system properties for unit tests define test-sys-prop.name=value:\n+build.generated.sources.dir=${build.dir}/generated-sources\n+javadoc.splitindex=true\n+javac.processormodulepath=\n run.jvmargs=\n-run.modulepath=\\\n+jlink.additionalmodules=\n+javadoc.encoding=${source.encoding}\n+javac.classpath=\\\n+    ${libs.hamcrest.classpath}:\\\n+    ${libs.junit_4.classpath}:\\\n+    ${file.reference.mysql-connector-java-8.0.19.jar}:\\\n+    ${file.reference.json-simple-1.1.1.jar}\n+mkdist.disabled=false\n+run.test.modulepath=\\\n+    ${javac.test.modulepath}\n+build.classes.excludes=**/*.java,**/*.form\n+dist.jlink.dir=${dist.dir}/jlink\n+dist.jar=${dist.dir}/TeamProjectE.jar\n+build.classes.dir=${build.dir}/classes\n+debug.test.modulepath=${run.test.modulepath}\n+build.test.classes.dir=${build.dir}/test/classes\n+javadoc.windowtitle=\n+build.test.results.dir=${build.dir}/test/results\n+dist.dir=dist\n+build.dir=build\n+dist.archive.excludes=\n+annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output\n+build.generated.dir=${build.dir}/generated\n+javadoc.version=false\n+application.title=TeamProjectE\n+javac.test.modulepath=\\\n     ${javac.modulepath}\n+debug.test.classpath=${run.test.classpath}\n+javac.external.vm=true\n+javac.target=11\n+platform.active=default_platform\n+manifest.file=manifest.mf\n+javadoc.html5=false\n+javac.test.processorpath=${javac.test.classpath}\n+meta.inf.dir=${src.dir}/META-INF\n run.test.classpath=\\\n     ${javac.test.classpath}:\\\n     ${build.test.classes.dir}\n-run.test.modulepath=\\\n-    ${javac.test.modulepath}\n-source.encoding=UTF-8\n+dist.jlink.output=${dist.jlink.dir}/TeamProjectE\n+annotation.processing.run.all.processors=true\n+javac.modulepath=\n src.dir=src\n-test.src.dir=test\n+jlink.additionalparam=\n+debug.classpath=${run.classpath}"
  },
  {
    "sha": "442aefbc6ca4724452db334f69fc2405478c8bda",
    "filename": "TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Badge.java",
    "status": "modified",
    "additions": 20,
    "deletions": 16,
    "changes": 36,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Badge.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Badge.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Badge.java?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -11,39 +11,43 @@\n \n public class Badge {\n     \n-  private String id;\n-  private String description;\n+  String id;\n+\n+   String description;\n \n     public Badge(String id, String description) {\n         this.id = id;\n         this.description = description;\n     }\n \n+    public Badge(String id) {\n+        this.id = id;\n+    }\n+\n+    public Badge() {\n+\n+    }\n+\n     public String getId() {\n         return id;\n     }\n \n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n     public String getDescription() {\n         return description;\n     }\n \n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n \n-    \n     @Override\n-    public String toString () {\n-    \n-    //\"#12565c60 (Chapman, Joshua E)\"\n-    \n-    StringBuilder s = new StringBuilder();\n-    \n-    s.append(\"#\").append(id).append(\" \");\n-    s.append(\"(\").append(description).append(\")\");\n-    \n-    return (s.toString());\n-    \n-    \n+    public String toString() {\n+        return \"#\" + id + \" (\" + description + \")\";\n     }\n \n-\n     \n }"
  },
  {
    "sha": "46f212cff6904ab4bc2cd2bcade0f3289d383008",
    "filename": "TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/CommonUtil.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/CommonUtil.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/CommonUtil.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/CommonUtil.java?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package edu.jsu.mcis.cs310.tas_sp21;\n+\n+/**\n+ *\n+ * @author jaydoan\n+ */\n+public class CommonUtil {\n+    public static final String CLOCK_IN = \"Clock In\";\n+    public static final String CLOCK_OUT = \"Clock Out\";\n+    public static final String TIME_OUT = \"Time Out\";\n+\n+    public static final String CLOCKED_IN = \"CLOCKED IN\";\n+    public static final String CLOCKED_OUT = \"CLOCKED OUT\";\n+    public static final String TIMED_OUT = \"TIMED OUT\";\n+\n+    public static String convertPunchTypeByDescription(String description) {\n+        String des = \"\";\n+        switch (description) {\n+            case CLOCK_IN:\n+                des = CLOCKED_IN;\n+                break;\n+            case CLOCK_OUT:\n+                des = CLOCKED_OUT;\n+                break;\n+            case TIME_OUT:\n+                des = TIMED_OUT;\n+                break;\n+        }\n+\n+        return des;\n+    }\n+}"
  },
  {
    "sha": "3dee0f9c65b57e4e10f95945d6a9ce6e0f85a7a9",
    "filename": "TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/DateTimeUtils.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/DateTimeUtils.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/DateTimeUtils.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/DateTimeUtils.java?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -0,0 +1,55 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package edu.jsu.mcis.cs310.tas_sp21;\n+\n+import java.sql.Timestamp;\n+import java.text.SimpleDateFormat;\n+import java.time.format.DateTimeFormatter;\n+\n+/**\n+ *\n+ * @author jaydoan\n+ */\n+public class DateTimeUtils {\n+    public static final String DATE_TIME_PATTERN = \"MM/dd/yyyy HH:mm:ss\";\n+    public static final String DB_TIME_PATTERN = \"HH:mm:ss\";\n+    public static final String TIME_PATTERN = \"HH:mm\";\n+\n+    public static String convertTimestampToDateTimeString(Timestamp timestamp) {\n+        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(DATE_TIME_PATTERN);\n+        return timestamp.toLocalDateTime().format(formatter);\n+    }\n+\n+    public static String convertTimestampToString(Timestamp timestamp) {\n+        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(TIME_PATTERN);\n+        return timestamp.toLocalDateTime().format(formatter);\n+    }\n+\n+    public static String getDayOfWeekFromTimestamp(Timestamp timestamp) {\n+        String day = (new SimpleDateFormat(\"EEEE\")).format(timestamp.getTime());\n+\n+        return (new SimpleDateFormat(\"EEEE\")).format(timestamp.getTime()).substring(0,3).toUpperCase();\n+    }\n+\n+//    public static Timestamp convertStringToTimestamp(String localTime) {\n+//        try {\n+//            DateFormat formatter = new SimpleDateFormat(DB_TIME_PATTERN);\n+//            Date date = (Date) formatter.parse(DB_TIME_PATTERN);\n+//            Timestamp timeStampDate = new Timestamp(date.getTime());\n+//\n+//            return timeStampDate;\n+//        } catch (ParseException e) {\n+//            System.out.println(\"Exception :\" + e);\n+//            return null;\n+//        }\n+//    }\n+\n+    public static long timeStampDifference(Timestamp startTime, Timestamp stopTime) {\n+\n+        return (stopTime.getTime() - startTime.getTime()) / (60 * 1000);\n+    }\n+    \n+}"
  },
  {
    "sha": "cac107add14b65a4212ed310dd9c41e2cb3857d5",
    "filename": "TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Punch.java",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Punch.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Punch.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Punch.java?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -0,0 +1,69 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package edu.jsu.mcis.cs310.tas_sp21;\n+\n+import java.sql.Timestamp;\n+\n+/**\n+ *\n+ * @author jaydoan\n+ */\n+public class Punch {\n+    int id;\n+\n+    Terminal terminal;\n+\n+    Badge badge;\n+\n+    Timestamp originalTimeStamp;\n+\n+    PunchType punchType;\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public Terminal getTerminal() {\n+        return terminal;\n+    }\n+\n+    public void setTerminal(Terminal terminal) {\n+        this.terminal = terminal;\n+    }\n+\n+    public Badge getBadge() {\n+        return badge;\n+    }\n+\n+    public void setBadge(Badge badge) {\n+        this.badge = badge;\n+    }\n+\n+    public Timestamp getOriginalTimeStamp() {\n+        return originalTimeStamp;\n+    }\n+\n+    public void setOriginalTimeStamp(Timestamp originalTimeStamp) {\n+        this.originalTimeStamp = originalTimeStamp;\n+    }\n+\n+    public PunchType getPunchType() {\n+        return punchType;\n+    }\n+\n+    public void setPunchType(PunchType punchType) {\n+        this.punchType = punchType;\n+    }\n+\n+    public String printOriginalTimestamp() {\n+        return \"#\" + badge.getId() + \" \" + CommonUtil.convertPunchTypeByDescription(punchType.getDescription())\n+                + \": \" + DateTimeUtils.getDayOfWeekFromTimestamp(originalTimeStamp) + \" \" + DateTimeUtils.convertTimestampToDateTimeString(originalTimeStamp);\n+    }\n+}"
  },
  {
    "sha": "c22e72f4b89e93b1bae591e94d9b90277f4a0350",
    "filename": "TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/PunchType.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/PunchType.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/PunchType.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/PunchType.java?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -0,0 +1,41 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package edu.jsu.mcis.cs310.tas_sp21;\n+\n+/**\n+ *\n+ * @author jaydoan\n+ */\n+public class PunchType {\n+    int id;\n+\n+    String description;\n+\n+    public PunchType(int id, String description) {\n+        this.id = id;\n+        this.description = description;\n+    }\n+\n+    public PunchType(String description) {\n+        this.description = description;\n+    }\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+}"
  },
  {
    "sha": "f4dc2ede29907fada0eded08e66637bb99b6b2e1",
    "filename": "TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Shift.java",
    "status": "added",
    "additions": 129,
    "deletions": 0,
    "changes": 129,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Shift.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Shift.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Shift.java?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -0,0 +1,129 @@\n+package edu.jsu.mcis.cs310.tas_sp21;\n+\n+import java.sql.Timestamp;\n+\n+public class Shift {\n+\n+    //There should also be \" getShift() \" methods\n+    //UNIX_TIMESTAMP()\n+    //To retrieve the hours and minutes from the TIME fields of the \n+    //Shift table as separate values, use the HOUR() and MINUTE() functions of MySQL.\n+    //\"Shift Start” and “Shift Stop\"\n+    //“Lunch Start” and “Lunch Stop” \n+    int id;\n+\n+    String description;\n+\n+    Timestamp start;\n+\n+    Timestamp stop;\n+\n+    int interval;\n+\n+    int gracePeriod;\n+\n+    int dock;\n+\n+    Timestamp lunchStart;\n+\n+    Timestamp lunchStop;\n+\n+    int lunchDeduct;\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public Timestamp getStart() {\n+        return start;\n+    }\n+\n+    public void setStart(Timestamp start) {\n+        this.start = start;\n+    }\n+\n+    public Timestamp getStop() {\n+        return stop;\n+    }\n+\n+    public void setStop(Timestamp stop) {\n+        this.stop = stop;\n+    }\n+\n+    public int getInterval() {\n+        return interval;\n+    }\n+\n+    public void setInterval(int interval) {\n+        this.interval = interval;\n+    }\n+\n+    public int getGracePeriod() {\n+        return gracePeriod;\n+    }\n+\n+    public void setGracePeriod(int gracePeriod) {\n+        this.gracePeriod = gracePeriod;\n+    }\n+\n+    public int getDock() {\n+        return dock;\n+    }\n+\n+    public void setDock(int dock) {\n+        this.dock = dock;\n+    }\n+\n+    public Timestamp getLunchStart() {\n+        return lunchStart;\n+    }\n+\n+    public void setLunchStart(Timestamp lunchStart) {\n+        this.lunchStart = lunchStart;\n+    }\n+\n+    public Timestamp getLunchStop() {\n+        return lunchStop;\n+    }\n+\n+    public void setLunchStop(Timestamp lunchStop) {\n+        this.lunchStop = lunchStop;\n+    }\n+\n+    public int getLunchDeduct() {\n+        return lunchDeduct;\n+    }\n+\n+    public void setLunchDeduct(int lunchDeduct) {\n+        this.lunchDeduct = lunchDeduct;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return description + \": \" + DateTimeUtils.convertTimestampToString(start)\n+                + \" - \"\n+                + DateTimeUtils.convertTimestampToString(stop)\n+                + \" (\"\n+                + DateTimeUtils.timeStampDifference(start, stop)\n+                + \" minutes); Lunch: \"\n+                + DateTimeUtils.convertTimestampToString(lunchStart)\n+                + \" - \"\n+                + DateTimeUtils.convertTimestampToString(lunchStop)\n+                + \" (\"\n+                + DateTimeUtils.timeStampDifference(lunchStart, lunchStop)\n+                + \" minutes)\";\n+    }\n+\n+}"
  },
  {
    "sha": "fc136f3c05214249b6d801b45dc0266372d00257",
    "filename": "TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/TASDatabase.java",
    "status": "modified",
    "additions": 20,
    "deletions": 8,
    "changes": 28,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/TASDatabase.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/TASDatabase.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/TASDatabase.java?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -1,14 +1,26 @@\n-/*\n- * To change this license header, choose License Headers in Project Properties.\n- * To change this template file, choose Tools | Templates\n- * and open the template in the editor.\n- */\n package edu.jsu.mcis.cs310.tas_sp21;\n \n+\n /**\n  *\n- * @author rafaramos\n+ * @author adamparker\n  */\n public class TASDatabase {\n-    \n-}\n+    private static TASLogic tasLogic;\n+\n+    public static Badge getBadge(String id) {\n+        return tasLogic.getBadge(id);\n+    }\n+\n+    public static Punch getPunch(int id) {\n+        return tasLogic.getPunch(id);\n+    }\n+\n+    public static Shift getShift(int id) {\n+        return tasLogic.getShift(id);\n+    }\n+\n+    public static Shift getShift(Badge badge) {\n+        return tasLogic.getShift(badge);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0de888e54f5c02c9d1a552e6bdc6048f59a59123",
    "filename": "TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/TASLogic.java",
    "status": "added",
    "additions": 117,
    "deletions": 0,
    "changes": 117,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/TASLogic.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/TASLogic.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/TASLogic.java?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -0,0 +1,117 @@\n+package edu.jsu.mcis.cs310.tas_sp21;\n+\n+\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+/**\n+ *\n+ * @author Jay Doan\n+ */\n+\n+public class TASLogic {\n+  \n+  // init database constants\n+    private static final String DATABASE_DRIVER = \"com.mysql.cj.jdbc.Driver\";\n+    private static final String DATABASE_URL = \"jdbc:mysql://localhost:3306/tas\";\n+    private static final String USERNAME = \"root\";\n+    private static final String PASSWORD = \"root\";\n+\n+    // init connection object\n+    private static Connection connection;\n+\n+    // connect database\n+    public static Connection connect() {\n+        if (connection == null) {\n+            try {\n+                Class.forName(DATABASE_DRIVER);\n+                connection = DriverManager.getConnection(DATABASE_URL, USERNAME, PASSWORD);\n+            } catch (ClassNotFoundException | SQLException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        return connection;\n+    }\n+\n+    // disconnect database\n+    public static void disconnect() {\n+        if (connection != null) {\n+            try {\n+                connection.close();\n+                connection = null;\n+            } catch (SQLException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    public static Badge getBadge(String id) {\n+        String query = \"select * from badge WHERE id = '\" + id + \"'\";\n+        Badge badge = new Badge();\n+        try {\n+            ResultSet rs = connect().createStatement().executeQuery(query);\n+            while (rs.next()) {\n+                badge.setId(rs.getString(\"id\"));\n+                badge.setDescription(rs.getString(\"description\"));\n+            }\n+        } catch (SQLException e) {\n+            e.printStackTrace();\n+        } finally {\n+            disconnect();\n+        }\n+\n+        return badge;\n+    }\n+\n+    public static Punch getPunch(int id) {\n+        String query = \"SELECT p.badgeid, pt.description, p.originaltimestamp FROM punch P INNER JOIN punchtype PT ON p.punchtypeid = pt.id WHERE p.id=\" + id;\n+        Punch punch = new Punch();\n+        try {\n+            ResultSet rs = connect().createStatement().executeQuery(query);\n+            while (rs.next()) {\n+                punch.setBadge(new Badge(rs.getString(\"badgeid\")));\n+                punch.setPunchType(new PunchType(rs.getString(\"description\")));\n+                punch.setOriginalTimeStamp(rs.getTimestamp(\"originaltimestamp\"));\n+            }\n+        } catch (SQLException e) {\n+            e.printStackTrace();\n+        } finally {\n+            disconnect();\n+        }\n+\n+        return punch;\n+    }\n+\n+    public static Shift getShift(int id) {\n+        String query = \"select * from shift WHERE id = \" + id;\n+        return getShiftByQuery(query);\n+    }\n+\n+    public static Shift getShift(Badge badge) {\n+        String query = \"SELECT s.* FROM employee E INNER JOIN shift S ON e.shiftid = s.id WHERE e.badgeid = '\" + badge.getId() + \"' \";\n+\n+        return getShiftByQuery(query);\n+    }\n+\n+    private static Shift getShiftByQuery(String query) {\n+        Shift shift = new Shift();\n+        try {\n+            ResultSet rs = connect().createStatement().executeQuery(query);\n+            while (rs.next()) {\n+                shift.setDescription(rs.getString(\"description\"));\n+                shift.setStart(rs.getTimestamp(\"start\"));\n+                shift.setStop(rs.getTimestamp(\"stop\"));\n+                shift.setLunchStart(rs.getTimestamp(\"lunchstart\"));\n+                shift.setLunchStop(rs.getTimestamp(\"lunchstop\"));\n+            }\n+        } catch (SQLException e) {\n+            e.printStackTrace();\n+        } finally {\n+            disconnect();\n+        }\n+\n+        return shift;\n+    }\n+}"
  },
  {
    "sha": "db96f4cd9a0243da8393aea9a18058eddd12e4ad",
    "filename": "TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Terminal.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Terminal.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/676c661bec0a50cf5de1bed72cd15dda8ec738f2/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Terminal.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/TeamProjectE/src/edu/jsu/mcis/cs310/tas_sp21/Terminal.java?ref=676c661bec0a50cf5de1bed72cd15dda8ec738f2",
    "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package edu.jsu.mcis.cs310.tas_sp21;\n+\n+/**\n+ *\n+ * @author jaydoan\n+ */\n+public class Terminal {\n+    int id;\n+\n+    String description;\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+    \n+}"
  },
  {
    "sha": "fadb5866a3b3289ce2cbc458b46e8de0f7801748",
    "filename": "build.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 73,
    "changes": 73,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/build.xml",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/build.xml",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/build.xml?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,73 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!-- You may freely edit this file. See commented blocks below for -->\n-<!-- some examples of how to customize the build. -->\n-<!-- (If you delete it and reopen the project it will be recreated.) -->\n-<!-- By default, only the Clean and Build commands use this build script. -->\n-<!-- Commands such as Run, Debug, and Test only use this build script if -->\n-<!-- the Compile on Save feature is turned off for the project. -->\n-<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->\n-<!-- in the project's Project Properties dialog box.-->\n-<project name=\"TeamProjectE\" default=\"default\" basedir=\".\">\n-    <description>Builds, tests, and runs the project TeamProjectE.</description>\n-    <import file=\"nbproject/build-impl.xml\"/>\n-    <!--\n-\n-    There exist several targets which are by default empty and which can be \n-    used for execution of your tasks. These targets are usually executed \n-    before and after some main targets. They are: \n-\n-      -pre-init:                 called before initialization of project properties\n-      -post-init:                called after initialization of project properties\n-      -pre-compile:              called before javac compilation\n-      -post-compile:             called after javac compilation\n-      -pre-compile-single:       called before javac compilation of single file\n-      -post-compile-single:      called after javac compilation of single file\n-      -pre-compile-test:         called before javac compilation of JUnit tests\n-      -post-compile-test:        called after javac compilation of JUnit tests\n-      -pre-compile-test-single:  called before javac compilation of single JUnit test\n-      -post-compile-test-single: called after javac compilation of single JUunit test\n-      -pre-jar:                  called before JAR building\n-      -post-jar:                 called after JAR building\n-      -post-clean:               called after cleaning build products\n-\n-    (Targets beginning with '-' are not intended to be called on their own.)\n-\n-    Example of inserting an obfuscator after compilation could look like this:\n-\n-        <target name=\"-post-compile\">\n-            <obfuscate>\n-                <fileset dir=\"${build.classes.dir}\"/>\n-            </obfuscate>\n-        </target>\n-\n-    For list of available properties check the imported \n-    nbproject/build-impl.xml file. \n-\n-\n-    Another way to customize the build is by overriding existing main targets.\n-    The targets of interest are: \n-\n-      -init-macrodef-javac:     defines macro for javac compilation\n-      -init-macrodef-junit:     defines macro for junit execution\n-      -init-macrodef-debug:     defines macro for class debugging\n-      -init-macrodef-java:      defines macro for class execution\n-      -do-jar:                  JAR building\n-      run:                      execution of project \n-      -javadoc-build:           Javadoc generation\n-      test-report:              JUnit report generation\n-\n-    An example of overriding the target for project execution could look like this:\n-\n-        <target name=\"run\" depends=\"TeamProjectE-impl.jar\">\n-            <exec dir=\"bin\" executable=\"launcher.exe\">\n-                <arg file=\"${dist.jar}\"/>\n-            </exec>\n-        </target>\n-\n-    Notice that the overridden target depends on the jar target and not only on \n-    the compile target as the regular run target does. Again, for a list of available \n-    properties which you can use, check the target you are overriding in the\n-    nbproject/build-impl.xml file. \n-\n-    -->\n-</project>"
  },
  {
    "sha": "328e8e5bc3b7f1f7bad2bc0751a933e00c801983",
    "filename": "manifest.mf",
    "status": "removed",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/manifest.mf",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/manifest.mf",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/manifest.mf?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,3 +0,0 @@\n-Manifest-Version: 1.0\n-X-COMMENT: Main-Class will be added automatically by build\n-"
  },
  {
    "sha": "e0c9f74a20ca4365054bf38c51ccaab2f7dd2d72",
    "filename": "nbproject/build-impl.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 1771,
    "changes": 1771,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/nbproject/build-impl.xml",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/nbproject/build-impl.xml",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/nbproject/build-impl.xml?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,1771 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-*** GENERATED FROM project.xml - DO NOT EDIT  ***\n-***         EDIT ../build.xml INSTEAD         ***\n-\n-For the purpose of easier reading the script\n-is divided into following sections:\n-\n-  - initialization\n-  - compilation\n-  - jar\n-  - execution\n-  - debugging\n-  - javadoc\n-  - test compilation\n-  - test execution\n-  - test debugging\n-  - applet\n-  - cleanup\n-\n-        -->\n-<project xmlns:if=\"ant:if\" xmlns:j2seproject1=\"http://www.netbeans.org/ns/j2se-project/1\" xmlns:j2seproject3=\"http://www.netbeans.org/ns/j2se-project/3\" xmlns:jaxrpc=\"http://www.netbeans.org/ns/j2se-project/jax-rpc\" xmlns:unless=\"ant:unless\" basedir=\"..\" default=\"default\" name=\"TeamProjectE-impl\">\n-    <fail message=\"Please build using Ant 1.8.0 or higher.\">\n-        <condition>\n-            <not>\n-                <antversion atleast=\"1.8.0\"/>\n-            </not>\n-        </condition>\n-    </fail>\n-    <target depends=\"test,jar,javadoc\" description=\"Build and test whole project.\" name=\"default\"/>\n-    <!-- \n-                ======================\n-                INITIALIZATION SECTION \n-                ======================\n-            -->\n-    <target name=\"-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"-pre-init\" name=\"-init-private\">\n-        <property file=\"nbproject/private/config.properties\"/>\n-        <property file=\"nbproject/private/configs/${config}.properties\"/>\n-        <property file=\"nbproject/private/private.properties\"/>\n-    </target>\n-    <target depends=\"-pre-init,-init-private\" name=\"-init-user\">\n-        <property file=\"${user.properties.file}\"/>\n-        <!-- The two properties below are usually overridden -->\n-        <!-- by the active platform. Just a fallback. -->\n-        <property name=\"default.javac.source\" value=\"1.6\"/>\n-        <property name=\"default.javac.target\" value=\"1.6\"/>\n-    </target>\n-    <target depends=\"-pre-init,-init-private,-init-user\" name=\"-init-project\">\n-        <property file=\"nbproject/configs/${config}.properties\"/>\n-        <property file=\"nbproject/project.properties\"/>\n-    </target>\n-    <target name=\"-init-modules-supported\">\n-        <condition property=\"modules.supported.internal\" value=\"true\">\n-            <not>\n-                <matches pattern=\"1\\.[0-8](\\..*)?\" string=\"${javac.source}\"/>\n-            </not>\n-        </condition>\n-    </target>\n-    <target depends=\"-init-modules-supported\" if=\"modules.supported.internal\" name=\"-init-macrodef-modulename\">\n-        <macrodef name=\"modulename\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute name=\"property\"/>\n-            <attribute name=\"sourcepath\"/>\n-            <sequential>\n-                <loadresource property=\"@{property}\" quiet=\"true\">\n-                    <javaresource classpath=\"@{sourcepath}\" name=\"module-info.java\" parentFirst=\"false\"/>\n-                    <filterchain>\n-                        <stripjavacomments/>\n-                        <linecontainsregexp>\n-                            <regexp pattern=\"module .* \\{\"/>\n-                        </linecontainsregexp>\n-                        <tokenfilter>\n-                            <linetokenizer/>\n-                            <replaceregex flags=\"s\" pattern=\"(\\s*module\\s+)(\\S*)(\\s*\\{.*)\" replace=\"\\2\"/>\n-                        </tokenfilter>\n-                        <striplinebreaks/>\n-                    </filterchain>\n-                </loadresource>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-modules-supported,-init-macrodef-modulename\" if=\"modules.supported.internal\" name=\"-init-source-module-properties\">\n-        <fail message=\"Java 9 support requires Ant 1.10.0 or higher.\">\n-            <condition>\n-                <not>\n-                    <antversion atleast=\"1.10.0\"/>\n-                </not>\n-            </condition>\n-        </fail>\n-        <j2seproject3:modulename property=\"module.name\" sourcepath=\"${src.dir}\"/>\n-        <condition property=\"named.module.internal\">\n-            <and>\n-                <isset property=\"module.name\"/>\n-                <length length=\"0\" string=\"${module.name}\" when=\"greater\"/>\n-            </and>\n-        </condition>\n-        <condition property=\"unnamed.module.internal\">\n-            <not>\n-                <isset property=\"named.module.internal\"/>\n-            </not>\n-        </condition>\n-        <property name=\"javac.modulepath\" value=\"\"/>\n-        <property name=\"run.modulepath\" value=\"${javac.modulepath}\"/>\n-        <property name=\"module.build.classes.dir\" value=\"${build.classes.dir}\"/>\n-        <property name=\"debug.modulepath\" value=\"${run.modulepath}\"/>\n-        <property name=\"javac.upgrademodulepath\" value=\"\"/>\n-        <property name=\"run.upgrademodulepath\" value=\"${javac.upgrademodulepath}\"/>\n-        <condition else=\"\" property=\"javac.systemmodulepath.cmd.line.arg\" value=\"--system '${javac.systemmodulepath}'\">\n-            <and>\n-                <isset property=\"javac.systemmodulepath\"/>\n-                <length length=\"0\" string=\"${javac.systemmodulepath}\" when=\"greater\"/>\n-            </and>\n-        </condition>\n-        <property name=\"dist.jlink.dir\" value=\"${dist.dir}/jlink\"/>\n-        <property name=\"dist.jlink.output\" value=\"${dist.jlink.dir}/${application.title}\"/>\n-        <property name=\"module.name\" value=\"\"/>\n-    </target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property,-init-modules-supported\" name=\"-do-init\">\n-        <property name=\"platform.java\" value=\"${java.home}/bin/java\"/>\n-        <available file=\"${manifest.file}\" property=\"manifest.available\"/>\n-        <condition property=\"splashscreen.available\">\n-            <and>\n-                <not>\n-                    <equals arg1=\"${application.splash}\" arg2=\"\" trim=\"true\"/>\n-                </not>\n-                <available file=\"${application.splash}\"/>\n-            </and>\n-        </condition>\n-        <condition property=\"main.class.available\">\n-            <and>\n-                <isset property=\"main.class\"/>\n-                <not>\n-                    <equals arg1=\"${main.class}\" arg2=\"\" trim=\"true\"/>\n-                </not>\n-            </and>\n-        </condition>\n-        <condition property=\"profile.available\">\n-            <and>\n-                <isset property=\"javac.profile\"/>\n-                <length length=\"0\" string=\"${javac.profile}\" when=\"greater\"/>\n-                <not>\n-                    <matches pattern=\"1\\.[0-7](\\..*)?\" string=\"${javac.source}\"/>\n-                </not>\n-            </and>\n-        </condition>\n-        <condition property=\"do.archive\">\n-            <or>\n-                <not>\n-                    <istrue value=\"${jar.archive.disabled}\"/>\n-                </not>\n-                <istrue value=\"${not.archive.disabled}\"/>\n-            </or>\n-        </condition>\n-        <condition property=\"do.archive+manifest.available\">\n-            <and>\n-                <isset property=\"manifest.available\"/>\n-                <istrue value=\"${do.archive}\"/>\n-            </and>\n-        </condition>\n-        <condition property=\"do.archive+main.class.available\">\n-            <and>\n-                <isset property=\"main.class.available\"/>\n-                <istrue value=\"${do.archive}\"/>\n-            </and>\n-        </condition>\n-        <condition property=\"do.archive+splashscreen.available\">\n-            <and>\n-                <isset property=\"splashscreen.available\"/>\n-                <istrue value=\"${do.archive}\"/>\n-            </and>\n-        </condition>\n-        <condition property=\"do.archive+profile.available\">\n-            <and>\n-                <isset property=\"profile.available\"/>\n-                <istrue value=\"${do.archive}\"/>\n-            </and>\n-        </condition>\n-        <condition property=\"have.tests\">\n-            <or>\n-                <available file=\"${test.src.dir}\"/>\n-            </or>\n-        </condition>\n-        <condition property=\"have.sources\">\n-            <or>\n-                <available file=\"${src.dir}\"/>\n-            </or>\n-        </condition>\n-        <condition property=\"netbeans.home+have.tests\">\n-            <and>\n-                <isset property=\"netbeans.home\"/>\n-                <isset property=\"have.tests\"/>\n-            </and>\n-        </condition>\n-        <condition property=\"no.javadoc.preview\">\n-            <and>\n-                <isset property=\"javadoc.preview\"/>\n-                <isfalse value=\"${javadoc.preview}\"/>\n-            </and>\n-        </condition>\n-        <property name=\"run.jvmargs\" value=\"\"/>\n-        <property name=\"run.jvmargs.ide\" value=\"\"/>\n-        <property name=\"javac.compilerargs\" value=\"\"/>\n-        <property name=\"work.dir\" value=\"${basedir}\"/>\n-        <condition property=\"no.deps\">\n-            <and>\n-                <istrue value=\"${no.dependencies}\"/>\n-            </and>\n-        </condition>\n-        <property name=\"javac.debug\" value=\"true\"/>\n-        <property name=\"javadoc.preview\" value=\"true\"/>\n-        <property name=\"application.args\" value=\"\"/>\n-        <property name=\"source.encoding\" value=\"${file.encoding}\"/>\n-        <property name=\"runtime.encoding\" value=\"${source.encoding}\"/>\n-        <property name=\"manifest.encoding\" value=\"${source.encoding}\"/>\n-        <condition property=\"javadoc.encoding.used\" value=\"${javadoc.encoding}\">\n-            <and>\n-                <isset property=\"javadoc.encoding\"/>\n-                <not>\n-                    <equals arg1=\"${javadoc.encoding}\" arg2=\"\"/>\n-                </not>\n-            </and>\n-        </condition>\n-        <property name=\"javadoc.encoding.used\" value=\"${source.encoding}\"/>\n-        <property name=\"includes\" value=\"**\"/>\n-        <property name=\"excludes\" value=\"\"/>\n-        <property name=\"do.depend\" value=\"false\"/>\n-        <condition property=\"do.depend.true\">\n-            <istrue value=\"${do.depend}\"/>\n-        </condition>\n-        <path id=\"endorsed.classpath.path\" path=\"${endorsed.classpath}\"/>\n-        <condition else=\"\" property=\"endorsed.classpath.cmd.line.arg\" value=\"-Xbootclasspath/p:'${toString:endorsed.classpath.path}'\">\n-            <and>\n-                <isset property=\"endorsed.classpath\"/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath}\" arg2=\"\" trim=\"true\"/>\n-                </not>\n-            </and>\n-        </condition>\n-        <condition else=\"\" property=\"javac.profile.cmd.line.arg\" value=\"-profile ${javac.profile}\">\n-            <isset property=\"profile.available\"/>\n-        </condition>\n-        <condition else=\"false\" property=\"jdkBug6558476\">\n-            <and>\n-                <matches pattern=\"1\\.[56]\" string=\"${java.specification.version}\"/>\n-                <not>\n-                    <os family=\"unix\"/>\n-                </not>\n-            </and>\n-        </condition>\n-        <condition else=\"false\" property=\"javac.fork\">\n-            <or>\n-                <istrue value=\"${jdkBug6558476}\"/>\n-                <istrue value=\"${javac.external.vm}\"/>\n-            </or>\n-        </condition>\n-        <property name=\"jar.index\" value=\"false\"/>\n-        <property name=\"jar.index.metainf\" value=\"${jar.index}\"/>\n-        <property name=\"copylibs.rebase\" value=\"true\"/>\n-        <available file=\"${meta.inf.dir}/persistence.xml\" property=\"has.persistence.xml\"/>\n-        <condition property=\"junit.available\">\n-            <or>\n-                <available classname=\"org.junit.Test\" classpath=\"${run.test.classpath}\"/>\n-                <available classname=\"junit.framework.Test\" classpath=\"${run.test.classpath}\"/>\n-            </or>\n-        </condition>\n-        <condition property=\"testng.available\">\n-            <available classname=\"org.testng.annotations.Test\" classpath=\"${run.test.classpath}\"/>\n-        </condition>\n-        <condition property=\"junit+testng.available\">\n-            <and>\n-                <istrue value=\"${junit.available}\"/>\n-                <istrue value=\"${testng.available}\"/>\n-            </and>\n-        </condition>\n-        <condition else=\"testng\" property=\"testng.mode\" value=\"mixed\">\n-            <istrue value=\"${junit+testng.available}\"/>\n-        </condition>\n-        <condition else=\"\" property=\"testng.debug.mode\" value=\"-mixed\">\n-            <istrue value=\"${junit+testng.available}\"/>\n-        </condition>\n-        <property name=\"java.failonerror\" value=\"true\"/>\n-    </target>\n-    <target name=\"-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init\" name=\"-init-check\">\n-        <fail unless=\"src.dir\">Must set src.dir</fail>\n-        <fail unless=\"test.src.dir\">Must set test.src.dir</fail>\n-        <fail unless=\"build.dir\">Must set build.dir</fail>\n-        <fail unless=\"dist.dir\">Must set dist.dir</fail>\n-        <fail unless=\"build.classes.dir\">Must set build.classes.dir</fail>\n-        <fail unless=\"dist.javadoc.dir\">Must set dist.javadoc.dir</fail>\n-        <fail unless=\"build.test.classes.dir\">Must set build.test.classes.dir</fail>\n-        <fail unless=\"build.test.results.dir\">Must set build.test.results.dir</fail>\n-        <fail unless=\"build.classes.excludes\">Must set build.classes.excludes</fail>\n-        <fail unless=\"dist.jar\">Must set dist.jar</fail>\n-    </target>\n-    <target name=\"-init-macrodef-property\">\n-        <macrodef name=\"property\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n-            <attribute name=\"name\"/>\n-            <attribute name=\"value\"/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${@{value}}\"/>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-ap-cmdline-properties,-init-source-module-properties\" if=\"modules.supported.internal\" name=\"-init-macrodef-javac-with-module\">\n-        <macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\n-            <attribute default=\"${javac.modulepath}\" name=\"modulepath\"/>\n-            <attribute default=\"${javac.upgrademodulepath}\" name=\"upgrademodulepath\"/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"/>\n-            <attribute default=\"${javac.processormodulepath}\" name=\"processormodulepath\"/>\n-            <attribute default=\"${build.generated.sources.dir}/ap-source-output\" name=\"apgeneratedsrcdir\"/>\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\" unless:set=\"named.module.internal\"/>\n-            <attribute default=\"${src.dir}\" if:set=\"named.module.internal\" name=\"sourcepath\"/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <condition property=\"warn.excludes.internal\">\n-                    <and>\n-                        <isset property=\"named.module.internal\"/>\n-                        <length length=\"0\" string=\"@{excludes}\" trim=\"true\" when=\"greater\"/>\n-                    </and>\n-                </condition>\n-                <echo if:set=\"warn.excludes.internal\" level=\"warning\" message=\"The javac excludes are not supported in the JDK 9 Named Module.\"/>\n-                <property location=\"${build.dir}/empty\" name=\"empty.dir\"/>\n-                <mkdir dir=\"${empty.dir}\"/>\n-                <mkdir dir=\"@{apgeneratedsrcdir}\"/>\n-                <condition property=\"processormodulepath.set\">\n-                    <resourcecount count=\"0\" when=\"greater\">\n-                        <path>\n-                            <pathelement path=\"@{processormodulepath}\"/>\n-                        </path>\n-                    </resourcecount>\n-                </condition>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" fork=\"${javac.fork}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"/>\n-                        </dirset>\n-                    </src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"/>\n-                    </classpath>\n-                    <modulepath>\n-                        <path path=\"@{modulepath}\"/>\n-                    </modulepath>\n-                    <upgrademodulepath>\n-                        <path path=\"@{upgrademodulepath}\"/>\n-                    </upgrademodulepath>\n-                    <compilerarg line=\"${javac.systemmodulepath.cmd.line.arg}\"/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"/>\n-                    <compilerarg line=\"${javac.compilerargs}\"/>\n-                    <compilerarg if:set=\"processormodulepath.set\" value=\"--processor-module-path\"/>\n-                    <compilerarg if:set=\"processormodulepath.set\" path=\"@{processormodulepath}\"/>\n-                    <compilerarg unless:set=\"processormodulepath.set\" value=\"-processorpath\"/>\n-                    <compilerarg path=\"@{processorpath}:${empty.dir}\" unless:set=\"processormodulepath.set\"/>\n-                    <compilerarg line=\"${ap.processors.internal}\"/>\n-                    <compilerarg line=\"${annotation.processing.processor.options}\"/>\n-                    <compilerarg value=\"-s\"/>\n-                    <compilerarg path=\"@{apgeneratedsrcdir}\"/>\n-                    <compilerarg line=\"${ap.proc.none.internal}\"/>\n-                    <customize/>\n-                </javac>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-ap-cmdline-properties,-init-source-module-properties\" if=\"ap.supported.internal\" name=\"-init-macrodef-javac-with-processors\" unless=\"modules.supported.internal\">\n-        <macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\n-            <attribute default=\"${javac.modulepath}\" name=\"modulepath\"/>\n-            <attribute default=\"${javac.upgrademodulepath}\" name=\"upgrademodulepath\"/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"/>\n-            <attribute default=\"${build.generated.sources.dir}/ap-source-output\" name=\"apgeneratedsrcdir\"/>\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <property location=\"${build.dir}/empty\" name=\"empty.dir\"/>\n-                <mkdir dir=\"${empty.dir}\"/>\n-                <mkdir dir=\"@{apgeneratedsrcdir}\"/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" fork=\"${javac.fork}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"/>\n-                        </dirset>\n-                    </src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"/>\n-                    </classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"/>\n-                    <compilerarg line=\"${javac.compilerargs}\"/>\n-                    <compilerarg value=\"-processorpath\"/>\n-                    <compilerarg path=\"@{processorpath}:${empty.dir}\"/>\n-                    <compilerarg line=\"${ap.processors.internal}\"/>\n-                    <compilerarg line=\"${annotation.processing.processor.options}\"/>\n-                    <compilerarg value=\"-s\"/>\n-                    <compilerarg path=\"@{apgeneratedsrcdir}\"/>\n-                    <compilerarg line=\"${ap.proc.none.internal}\"/>\n-                    <customize/>\n-                </javac>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-ap-cmdline-properties,-init-source-module-properties\" name=\"-init-macrodef-javac-without-processors\" unless=\"ap.supported.internal\">\n-        <macrodef name=\"javac\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\n-            <attribute default=\"${javac.modulepath}\" name=\"modulepath\"/>\n-            <attribute default=\"${javac.upgrademodulepath}\" name=\"upgrademodulepath\"/>\n-            <attribute default=\"${javac.processorpath}\" name=\"processorpath\"/>\n-            <attribute default=\"${build.generated.sources.dir}/ap-source-output\" name=\"apgeneratedsrcdir\"/>\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"${javac.debug}\" name=\"debug\"/>\n-            <attribute default=\"${empty.dir}\" name=\"sourcepath\"/>\n-            <attribute default=\"${empty.dir}\" name=\"gensrcdir\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <property location=\"${build.dir}/empty\" name=\"empty.dir\"/>\n-                <mkdir dir=\"${empty.dir}\"/>\n-                <javac debug=\"@{debug}\" deprecation=\"${javac.deprecation}\" destdir=\"@{destdir}\" encoding=\"${source.encoding}\" excludes=\"@{excludes}\" fork=\"${javac.fork}\" includeantruntime=\"false\" includes=\"@{includes}\" source=\"${javac.source}\" sourcepath=\"@{sourcepath}\" srcdir=\"@{srcdir}\" target=\"${javac.target}\" tempdir=\"${java.io.tmpdir}\">\n-                    <src>\n-                        <dirset dir=\"@{gensrcdir}\" erroronmissingdir=\"false\">\n-                            <include name=\"*\"/>\n-                        </dirset>\n-                    </src>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"/>\n-                    </classpath>\n-                    <compilerarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n-                    <compilerarg line=\"${javac.profile.cmd.line.arg}\"/>\n-                    <compilerarg line=\"${javac.compilerargs}\"/>\n-                    <customize/>\n-                </javac>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-javac-with-module,-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors\" name=\"-init-macrodef-javac\">\n-        <macrodef name=\"depend\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${src.dir}\" name=\"srcdir\"/>\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\n-            <attribute default=\"${javac.classpath}\" name=\"classpath\"/>\n-            <sequential>\n-                <depend cache=\"${build.dir}/depcache\" destdir=\"@{destdir}\" excludes=\"${excludes}\" includes=\"${includes}\" srcdir=\"@{srcdir}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"/>\n-                    </classpath>\n-                </depend>\n-            </sequential>\n-        </macrodef>\n-        <macrodef name=\"force-recompile\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${build.classes.dir}\" name=\"destdir\"/>\n-            <sequential>\n-                <fail unless=\"javac.includes\">Must set javac.includes</fail>\n-                <pathconvert pathsep=\"${line.separator}\" property=\"javac.includes.binary\">\n-                    <path>\n-                        <filelist dir=\"@{destdir}\" files=\"${javac.includes}\"/>\n-                    </path>\n-                    <globmapper from=\"*.java\" to=\"*.class\"/>\n-                </pathconvert>\n-                <tempfile deleteonexit=\"true\" property=\"javac.includesfile.binary\"/>\n-                <echo file=\"${javac.includesfile.binary}\" message=\"${javac.includes.binary}\"/>\n-                <delete>\n-                    <files includesfile=\"${javac.includesfile.binary}\"/>\n-                </delete>\n-                <delete>\n-                    <fileset file=\"${javac.includesfile.binary}\"/>\n-                </delete>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target if=\"${junit.available}\" name=\"-init-macrodef-junit-init\">\n-        <condition else=\"false\" property=\"nb.junit.batch\" value=\"true\">\n-            <and>\n-                <istrue value=\"${junit.available}\"/>\n-                <not>\n-                    <isset property=\"test.method\"/>\n-                </not>\n-            </and>\n-        </condition>\n-        <condition else=\"false\" property=\"nb.junit.single\" value=\"true\">\n-            <and>\n-                <istrue value=\"${junit.available}\"/>\n-                <isset property=\"test.method\"/>\n-            </and>\n-        </condition>\n-    </target>\n-    <target name=\"-init-test-properties\">\n-        <property name=\"test.binaryincludes\" value=\"&lt;nothing&gt;\"/>\n-        <property name=\"test.binarytestincludes\" value=\"\"/>\n-        <property name=\"test.binaryexcludes\" value=\"\"/>\n-    </target>\n-    <target depends=\"-init-modules-supported\" if=\"modules.supported.internal\" name=\"-init-macrodef-junit-prototype-with-module\">\n-        <macrodef name=\"junit-prototype\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <element name=\"customizePrototype\" optional=\"true\"/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n-                    </syspropertyset>\n-                    <classpath>\n-                        <path path=\"${run.test.classpath}\"/>\n-                    </classpath>\n-                    <modulepath>\n-                        <path path=\"${run.test.modulepath}\"/>\n-                    </modulepath>\n-                    <formatter type=\"brief\" usefile=\"false\"/>\n-                    <formatter type=\"xml\"/>\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n-                    <jvmarg value=\"-ea\"/>\n-                    <jvmarg line=\"${run.test.jvmargs}\"/>\n-                    <customizePrototype/>\n-                </junit>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-modules-supported\" name=\"-init-macrodef-junit-prototype-without-module\" unless=\"modules.supported.internal\">\n-        <macrodef name=\"junit-prototype\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <element name=\"customizePrototype\" optional=\"true\"/>\n-            <sequential>\n-                <property name=\"junit.forkmode\" value=\"perTest\"/>\n-                <junit dir=\"${work.dir}\" errorproperty=\"tests.failed\" failureproperty=\"tests.failed\" fork=\"true\" forkmode=\"${junit.forkmode}\" showoutput=\"true\" tempdir=\"${build.dir}\">\n-                    <syspropertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n-                    </syspropertyset>\n-                    <classpath>\n-                        <path path=\"${run.test.classpath}\"/>\n-                    </classpath>\n-                    <formatter type=\"brief\" usefile=\"false\"/>\n-                    <formatter type=\"xml\"/>\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n-                    <jvmarg value=\"-ea\"/>\n-                    <customizePrototype/>\n-                </junit>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-test-properties,-init-macrodef-junit-prototype-with-module,-init-macrodef-junit-prototype-without-module\" if=\"${nb.junit.single}\" name=\"-init-macrodef-junit-single\" unless=\"${nb.junit.batch}\">\n-        <macrodef name=\"junit\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"**\" name=\"testincludes\"/>\n-            <attribute default=\"\" name=\"testmethods\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <j2seproject3:junit-prototype>\n-                    <customizePrototype>\n-                        <test methods=\"@{testmethods}\" name=\"@{testincludes}\" todir=\"${build.test.results.dir}\"/>\n-                        <customize/>\n-                    </customizePrototype>\n-                </j2seproject3:junit-prototype>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-test-properties,-init-macrodef-junit-prototype-with-module,-init-macrodef-junit-prototype-without-module\" if=\"${nb.junit.batch}\" name=\"-init-macrodef-junit-batch\" unless=\"${nb.junit.single}\">\n-        <macrodef name=\"junit\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"**\" name=\"testincludes\"/>\n-            <attribute default=\"\" name=\"testmethods\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <j2seproject3:junit-prototype>\n-                    <customizePrototype>\n-                        <batchtest todir=\"${build.test.results.dir}\">\n-                            <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},${excludes}\" includes=\"@{includes}\">\n-                                <filename name=\"@{testincludes}\"/>\n-                            </fileset>\n-                            <fileset dir=\"${build.test.classes.dir}\" excludes=\"@{excludes},${excludes},${test.binaryexcludes}\" includes=\"${test.binaryincludes}\">\n-                                <filename name=\"${test.binarytestincludes}\"/>\n-                            </fileset>\n-                        </batchtest>\n-                        <customize/>\n-                    </customizePrototype>\n-                </j2seproject3:junit-prototype>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch\" if=\"${junit.available}\" name=\"-init-macrodef-junit\"/>\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng\">\n-        <macrodef name=\"testng\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"**\" name=\"testincludes\"/>\n-            <attribute default=\"\" name=\"testmethods\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <condition else=\"\" property=\"testng.methods.arg\" value=\"@{testincludes}.@{testmethods}\">\n-                    <isset property=\"test.method\"/>\n-                </condition>\n-                <union id=\"test.set\">\n-                    <fileset dir=\"${test.src.dir}\" excludes=\"@{excludes},**/*.xml,${excludes}\" includes=\"@{includes}\">\n-                        <filename name=\"@{testincludes}\"/>\n-                    </fileset>\n-                </union>\n-                <taskdef classname=\"org.testng.TestNGAntTask\" classpath=\"${run.test.classpath}\" name=\"testng\"/>\n-                <testng classfilesetref=\"test.set\" failureProperty=\"tests.failed\" listeners=\"org.testng.reporters.VerboseReporter\" methods=\"${testng.methods.arg}\" mode=\"${testng.mode}\" outputdir=\"${build.test.results.dir}\" suitename=\"TeamProjectE\" testname=\"TestNG tests\" workingDir=\"${work.dir}\">\n-                    <xmlfileset dir=\"${build.test.classes.dir}\" includes=\"@{testincludes}\"/>\n-                    <propertyset>\n-                        <propertyref prefix=\"test-sys-prop.\"/>\n-                        <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n-                    </propertyset>\n-                    <classpath>\n-                        <path path=\"${run.test.classpath}\"/>\n-                    </classpath>\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n-                    <customize/>\n-                </testng>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target name=\"-init-macrodef-test-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"**\" name=\"testincludes\"/>\n-            <attribute default=\"\" name=\"testmethods\"/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <echo>No tests executed.</echo>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"**\" name=\"testincludes\"/>\n-            <attribute default=\"\" name=\"testmethods\"/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize/>\n-                </j2seproject3:junit>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-testng\" if=\"${testng.available}\" name=\"-init-macrodef-testng-impl\">\n-        <macrodef name=\"test-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"**\" name=\"testincludes\"/>\n-            <attribute default=\"\" name=\"testmethods\"/>\n-            <element implicit=\"true\" name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <j2seproject3:testng excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize/>\n-                </j2seproject3:testng>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl\" name=\"-init-macrodef-test\">\n-        <macrodef name=\"test\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"**\" name=\"testincludes\"/>\n-            <attribute default=\"\" name=\"testmethods\"/>\n-            <sequential>\n-                <j2seproject3:test-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize>\n-                        <jvmarg line=\"${run.jvmargs}\"/>\n-                        <jvmarg line=\"${run.jvmargs.ide}\"/>\n-                    </customize>\n-                </j2seproject3:test-impl>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-junit\" if=\"${junit.available}\" name=\"-init-macrodef-junit-debug-impl\">\n-        <macrodef name=\"test-debug-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"**\" name=\"testincludes\"/>\n-            <attribute default=\"\" name=\"testmethods\"/>\n-            <element name=\"customizeDebuggee\" optional=\"true\"/>\n-            <sequential>\n-                <j2seproject3:junit excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customize>\n-                        <jvmarg value=\"-agentlib:jdwp=transport=${debug-transport},address=${jpda.address}\"/>\n-                        <customizeDebuggee/>\n-                    </customize>\n-                </j2seproject3:junit>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target if=\"${testng.available}\" name=\"-init-macrodef-testng-debug\">\n-        <macrodef name=\"testng-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${main.class}\" name=\"testClass\"/>\n-            <attribute default=\"\" name=\"testMethod\"/>\n-            <element name=\"customize2\" optional=\"true\"/>\n-            <sequential>\n-                <condition else=\"-testclass @{testClass}\" property=\"test.class.or.method\" value=\"-methods @{testClass}.@{testMethod}\">\n-                    <isset property=\"test.method\"/>\n-                </condition>\n-                <condition else=\"-suitename TeamProjectE -testname @{testClass} ${test.class.or.method}\" property=\"testng.cmd.args\" value=\"@{testClass}\">\n-                    <matches pattern=\".*\\.xml\" string=\"@{testClass}\"/>\n-                </condition>\n-                <delete dir=\"${build.test.results.dir}\" quiet=\"true\"/>\n-                <mkdir dir=\"${build.test.results.dir}\"/>\n-                <j2seproject3:debug classname=\"org.testng.TestNG\" classpath=\"${debug.test.classpath}\">\n-                    <customizeDebuggee>\n-                        <customize2/>\n-                        <jvmarg value=\"-ea\"/>\n-                        <arg line=\"${testng.debug.mode}\"/>\n-                        <arg line=\"-d ${build.test.results.dir}\"/>\n-                        <arg line=\"-listener org.testng.reporters.VerboseReporter\"/>\n-                        <arg line=\"${testng.cmd.args}\"/>\n-                    </customizeDebuggee>\n-                </j2seproject3:debug>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-testng-debug\" if=\"${testng.available}\" name=\"-init-macrodef-testng-debug-impl\">\n-        <macrodef name=\"testng-debug-impl\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${main.class}\" name=\"testClass\"/>\n-            <attribute default=\"\" name=\"testMethod\"/>\n-            <element implicit=\"true\" name=\"customize2\" optional=\"true\"/>\n-            <sequential>\n-                <j2seproject3:testng-debug testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n-                    <customize2/>\n-                </j2seproject3:testng-debug>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-junit-debug-impl\" if=\"${junit.available}\" name=\"-init-macrodef-test-debug-junit\">\n-        <macrodef name=\"test-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"**\" name=\"testincludes\"/>\n-            <attribute default=\"\" name=\"testmethods\"/>\n-            <attribute default=\"${main.class}\" name=\"testClass\"/>\n-            <attribute default=\"\" name=\"testMethod\"/>\n-            <sequential>\n-                <j2seproject3:test-debug-impl excludes=\"@{excludes}\" includes=\"@{includes}\" testincludes=\"@{testincludes}\" testmethods=\"@{testmethods}\">\n-                    <customizeDebuggee>\n-                        <jvmarg line=\"${run.jvmargs}\"/>\n-                        <jvmarg line=\"${run.jvmargs.ide}\"/>\n-                    </customizeDebuggee>\n-                </j2seproject3:test-debug-impl>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-testng-debug-impl\" if=\"${testng.available}\" name=\"-init-macrodef-test-debug-testng\">\n-        <macrodef name=\"test-debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${includes}\" name=\"includes\"/>\n-            <attribute default=\"${excludes}\" name=\"excludes\"/>\n-            <attribute default=\"**\" name=\"testincludes\"/>\n-            <attribute default=\"\" name=\"testmethods\"/>\n-            <attribute default=\"${main.class}\" name=\"testClass\"/>\n-            <attribute default=\"\" name=\"testMethod\"/>\n-            <sequential>\n-                <j2seproject3:testng-debug-impl testClass=\"@{testClass}\" testMethod=\"@{testMethod}\">\n-                    <customize2>\n-                        <syspropertyset>\n-                            <propertyref prefix=\"test-sys-prop.\"/>\n-                            <mapper from=\"test-sys-prop.*\" to=\"*\" type=\"glob\"/>\n-                        </syspropertyset>\n-                    </customize2>\n-                </j2seproject3:testng-debug-impl>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng\" name=\"-init-macrodef-test-debug\"/>\n-    <!--\n-                pre NB7.2 profiling section; consider it deprecated\n-            -->\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check\" if=\"profiler.info.jvmargs.agent\" name=\"profile-init\"/>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-post-init\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-macrodef-profile\">\n-        <macrodef name=\"resolve\">\n-            <attribute name=\"name\"/>\n-            <attribute name=\"value\"/>\n-            <sequential>\n-                <property name=\"@{name}\" value=\"${env.@{value}}\"/>\n-            </sequential>\n-        </macrodef>\n-        <macrodef name=\"profile\">\n-            <attribute default=\"${main.class}\" name=\"classname\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <property environment=\"env\"/>\n-                <resolve name=\"profiler.current.path\" value=\"${profiler.info.pathvar}\"/>\n-                <java classname=\"@{classname}\" dir=\"${profiler.info.dir}\" failonerror=\"${java.failonerror}\" fork=\"true\" jvm=\"${profiler.info.jvm}\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n-                    <jvmarg value=\"${profiler.info.jvmargs.agent}\"/>\n-                    <jvmarg line=\"${profiler.info.jvmargs}\"/>\n-                    <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"/>\n-                    <arg line=\"${application.args}\"/>\n-                    <classpath>\n-                        <path path=\"${run.classpath}\"/>\n-                    </classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\n-                    </syspropertyset>\n-                    <customize/>\n-                </java>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-init-check\">\n-        <fail unless=\"profiler.info.jvm\">Must set JVM to use for profiling in profiler.info.jvm</fail>\n-        <fail unless=\"profiler.info.jvmargs.agent\">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent</fail>\n-    </target>\n-    <!--\n-                end of pre NB7.2 profiling section\n-            -->\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-nbjpda\">\n-        <macrodef name=\"nbjpdastart\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n-            <attribute default=\"${main.class}\" name=\"name\"/>\n-            <attribute default=\"${debug.modulepath}\" name=\"modulepath\"/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"/>\n-            <attribute default=\"\" name=\"stopclassname\"/>\n-            <sequential>\n-                <nbjpdastart addressproperty=\"jpda.address\" name=\"@{name}\" stopclassname=\"@{stopclassname}\" transport=\"${debug-transport}\">\n-                    <modulepath>\n-                        <path path=\"@{modulepath}\"/>\n-                    </modulepath>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"/>\n-                    </classpath>\n-                </nbjpdastart>\n-            </sequential>\n-        </macrodef>\n-        <macrodef name=\"nbjpdareload\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n-            <attribute default=\"${build.classes.dir}\" name=\"dir\"/>\n-            <sequential>\n-                <nbjpdareload>\n-                    <fileset dir=\"@{dir}\" includes=\"${fix.classes}\">\n-                        <include name=\"${fix.includes}*.class\"/>\n-                    </fileset>\n-                </nbjpdareload>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target name=\"-init-debug-args\">\n-        <condition else=\"dt_socket\" property=\"debug-transport-by-os\" value=\"dt_shmem\">\n-            <os family=\"windows\"/>\n-        </condition>\n-        <condition else=\"${debug-transport-by-os}\" property=\"debug-transport\" value=\"${debug.transport}\">\n-            <isset property=\"debug.transport\"/>\n-        </condition>\n-    </target>\n-    <target depends=\"-init-debug-args\" name=\"-init-macrodef-debug\">\n-        <macrodef name=\"debug\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${module.name}\" name=\"modulename\"/>\n-            <attribute default=\"${main.class}\" name=\"classname\"/>\n-            <attribute default=\"${debug.modulepath}\" name=\"modulepath\"/>\n-            <attribute default=\"${debug.classpath}\" name=\"classpath\"/>\n-            <element name=\"customizeDebuggee\" optional=\"true\"/>\n-            <sequential>\n-                <j2seproject1:java classname=\"@{classname}\" classpath=\"@{classpath}\" modulename=\"@{modulename}\" modulepath=\"@{modulepath}\">\n-                    <customize>\n-                        <jvmarg value=\"-agentlib:jdwp=transport=${debug-transport},address=${jpda.address}\"/>\n-                        <customizeDebuggee/>\n-                    </customize>\n-                </j2seproject1:java>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-source-module-properties\" if=\"named.module.internal\" name=\"-init-macrodef-java-with-module\">\n-        <macrodef name=\"java\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n-            <attribute default=\"${module.name}\" name=\"modulename\"/>\n-            <attribute default=\"${main.class}\" name=\"classname\"/>\n-            <attribute default=\"${run.modulepath}\" name=\"modulepath\"/>\n-            <attribute default=\"${run.upgrademodulepath}\" name=\"upgrademodulepath\"/>\n-            <attribute default=\"${run.classpath}\" name=\"classpath\"/>\n-            <attribute default=\"jvm\" name=\"jvm\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" failonerror=\"${java.failonerror}\" fork=\"true\" module=\"@{modulename}\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"/>\n-                    </classpath>\n-                    <modulepath>\n-                        <pathelement path=\"@{modulepath}\"/>\n-                        <pathelement location=\"${module.build.classes.dir}\"/>\n-                    </modulepath>\n-                    <upgrademodulepath>\n-                        <path path=\"@{upgrademodulepath}\"/>\n-                    </upgrademodulepath>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"/>\n-                    <jvmarg line=\"${run.jvmargs}\"/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"/>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\n-                    </syspropertyset>\n-                    <customize/>\n-                </java>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-source-module-properties\" if=\"unnamed.module.internal\" name=\"-init-macrodef-java-with-unnamed-module\">\n-        <macrodef name=\"java\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n-            <attribute default=\"\" name=\"modulename\"/>\n-            <attribute default=\"${main.class}\" name=\"classname\"/>\n-            <attribute default=\"${run.modulepath}\" name=\"modulepath\"/>\n-            <attribute default=\"${run.upgrademodulepath}\" name=\"upgrademodulepath\"/>\n-            <attribute default=\"${run.classpath}\" name=\"classpath\"/>\n-            <attribute default=\"jvm\" name=\"jvm\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" failonerror=\"${java.failonerror}\" fork=\"true\">\n-                    <classpath>\n-                        <path path=\"@{classpath}\"/>\n-                    </classpath>\n-                    <modulepath>\n-                        <path path=\"@{modulepath}\"/>\n-                    </modulepath>\n-                    <upgrademodulepath>\n-                        <path path=\"@{upgrademodulepath}\"/>\n-                    </upgrademodulepath>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"/>\n-                    <jvmarg line=\"${run.jvmargs}\"/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"/>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\n-                    </syspropertyset>\n-                    <customize/>\n-                </java>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-source-module-properties\" name=\"-init-macrodef-java-without-module\" unless=\"modules.supported.internal\">\n-        <macrodef name=\"java\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n-            <attribute default=\"\" name=\"modulename\"/>\n-            <attribute default=\"${main.class}\" name=\"classname\"/>\n-            <attribute default=\"\" name=\"modulepath\"/>\n-            <attribute default=\"${run.classpath}\" name=\"classpath\"/>\n-            <attribute default=\"jvm\" name=\"jvm\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <java classname=\"@{classname}\" dir=\"${work.dir}\" failonerror=\"${java.failonerror}\" fork=\"true\">\n-                    <jvmarg line=\"${endorsed.classpath.cmd.line.arg}\"/>\n-                    <jvmarg value=\"-Dfile.encoding=${runtime.encoding}\"/>\n-                    <redirector errorencoding=\"${runtime.encoding}\" inputencoding=\"${runtime.encoding}\" outputencoding=\"${runtime.encoding}\"/>\n-                    <jvmarg line=\"${run.jvmargs}\"/>\n-                    <jvmarg line=\"${run.jvmargs.ide}\"/>\n-                    <classpath>\n-                        <path path=\"@{classpath}\"/>\n-                    </classpath>\n-                    <syspropertyset>\n-                        <propertyref prefix=\"run-sys-prop.\"/>\n-                        <mapper from=\"run-sys-prop.*\" to=\"*\" type=\"glob\"/>\n-                    </syspropertyset>\n-                    <customize/>\n-                </java>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target depends=\"-init-macrodef-java-with-module, -init-macrodef-java-with-unnamed-module, -init-macrodef-java-without-module\" name=\"-init-macrodef-java\"/>\n-    <target name=\"-init-macrodef-copylibs\">\n-        <macrodef name=\"copylibs\" uri=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <attribute default=\"${manifest.file}\" name=\"manifest\"/>\n-            <element name=\"customize\" optional=\"true\"/>\n-            <sequential>\n-                <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"/>\n-                <pathconvert property=\"run.classpath.without.build.classes.dir\">\n-                    <path path=\"${run.classpath}\"/>\n-                    <map from=\"${build.classes.dir.resolved}\" to=\"\"/>\n-                </pathconvert>\n-                <pathconvert pathsep=\" \" property=\"jar.classpath\">\n-                    <path path=\"${run.classpath.without.build.classes.dir}\"/>\n-                    <chainedmapper>\n-                        <flattenmapper/>\n-                        <filtermapper>\n-                            <replacestring from=\" \" to=\"%20\"/>\n-                        </filtermapper>\n-                        <globmapper from=\"*\" to=\"lib/*\"/>\n-                    </chainedmapper>\n-                </pathconvert>\n-                <taskdef classname=\"org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs\" classpath=\"${libs.CopyLibs.classpath}\" name=\"copylibs\"/>\n-                <copylibs compress=\"${jar.compress}\" excludeFromCopy=\"${copylibs.excludes}\" index=\"${jar.index}\" indexMetaInf=\"${jar.index.metainf}\" jarfile=\"${dist.jar}\" manifest=\"@{manifest}\" manifestencoding=\"UTF-8\" rebase=\"${copylibs.rebase}\" runtimeclasspath=\"${run.classpath.without.build.classes.dir}\">\n-                    <fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"/>\n-                    <manifest>\n-                        <attribute name=\"Class-Path\" value=\"${jar.classpath}\"/>\n-                        <customize/>\n-                    </manifest>\n-                </copylibs>\n-            </sequential>\n-        </macrodef>\n-    </target>\n-    <target name=\"-init-presetdef-jar\">\n-        <presetdef name=\"jar\" uri=\"http://www.netbeans.org/ns/j2se-project/1\">\n-            <jar compress=\"${jar.compress}\" index=\"${jar.index}\" jarfile=\"${dist.jar}\" manifestencoding=\"UTF-8\">\n-                <j2seproject1:fileset dir=\"${build.classes.dir}\" excludes=\"${dist.archive.excludes}\"/>\n-            </jar>\n-        </presetdef>\n-    </target>\n-    <target name=\"-init-ap-cmdline-properties\">\n-        <property name=\"annotation.processing.enabled\" value=\"true\"/>\n-        <property name=\"annotation.processing.processors.list\" value=\"\"/>\n-        <property name=\"annotation.processing.processor.options\" value=\"\"/>\n-        <property name=\"annotation.processing.run.all.processors\" value=\"true\"/>\n-        <property name=\"javac.processorpath\" value=\"${javac.classpath}\"/>\n-        <property name=\"javac.test.processorpath\" value=\"${javac.test.classpath}\"/>\n-        <condition property=\"ap.supported.internal\" value=\"true\">\n-            <not>\n-                <matches pattern=\"1\\.[0-5](\\..*)?\" string=\"${javac.source}\"/>\n-            </not>\n-        </condition>\n-    </target>\n-    <target depends=\"-init-ap-cmdline-properties\" if=\"ap.supported.internal\" name=\"-init-ap-cmdline-supported\">\n-        <condition else=\"\" property=\"ap.processors.internal\" value=\"-processor ${annotation.processing.processors.list}\">\n-            <isfalse value=\"${annotation.processing.run.all.processors}\"/>\n-        </condition>\n-        <condition else=\"\" property=\"ap.proc.none.internal\" value=\"-proc:none\">\n-            <isfalse value=\"${annotation.processing.enabled}\"/>\n-        </condition>\n-    </target>\n-    <target depends=\"-init-ap-cmdline-properties,-init-ap-cmdline-supported\" name=\"-init-ap-cmdline\">\n-        <property name=\"ap.cmd.line.internal\" value=\"\"/>\n-    </target>\n-    <target depends=\"-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline\" name=\"init\"/>\n-    <!--\n-                ===================\n-                COMPILATION SECTION\n-                ===================\n-            -->\n-    <target name=\"-deps-jar-init\" unless=\"built-jar.properties\">\n-        <property location=\"${build.dir}/built-jar.properties\" name=\"built-jar.properties\"/>\n-        <delete file=\"${built-jar.properties}\" quiet=\"true\"/>\n-    </target>\n-    <target if=\"already.built.jar.${basedir}\" name=\"-warn-already-built-jar\">\n-        <echo level=\"warn\" message=\"Cycle detected: TeamProjectE was already built\"/>\n-    </target>\n-    <target depends=\"init,-deps-jar-init\" name=\"deps-jar\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"/>\n-        <touch file=\"${built-jar.properties}\" verbose=\"false\"/>\n-        <property file=\"${built-jar.properties}\" prefix=\"already.built.jar.\"/>\n-        <antcall target=\"-warn-already-built-jar\"/>\n-        <propertyfile file=\"${built-jar.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"/>\n-        </propertyfile>\n-    </target>\n-    <target depends=\"init,-check-automatic-build,-clean-after-automatic-build\" name=\"-verify-automatic-build\"/>\n-    <target depends=\"init\" name=\"-check-automatic-build\">\n-        <available file=\"${build.classes.dir}/.netbeans_automatic_build\" property=\"netbeans.automatic.build\"/>\n-    </target>\n-    <target depends=\"init\" if=\"netbeans.automatic.build\" name=\"-clean-after-automatic-build\">\n-        <antcall target=\"clean\">\n-            <param name=\"no.dependencies\" value=\"true\"/>\n-        </antcall>\n-    </target>\n-    <target depends=\"init,deps-jar\" name=\"-pre-pre-compile\">\n-        <mkdir dir=\"${build.classes.dir}\"/>\n-    </target>\n-    <target name=\"-pre-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target if=\"do.depend.true\" name=\"-compile-depend\">\n-        <pathconvert property=\"build.generated.subdirs\">\n-            <dirset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"*\"/>\n-            </dirset>\n-        </pathconvert>\n-        <j2seproject3:depend srcdir=\"${src.dir}:${build.generated.subdirs}\"/>\n-    </target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend\" if=\"have.sources\" name=\"-do-compile\">\n-        <j2seproject3:javac gensrcdir=\"${build.generated.sources.dir}\"/>\n-        <copy todir=\"${build.classes.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>\n-        </copy>\n-    </target>\n-    <target if=\"has.persistence.xml\" name=\"-copy-persistence-xml\">\n-        <mkdir dir=\"${build.classes.dir}/META-INF\"/>\n-        <copy todir=\"${build.classes.dir}/META-INF\">\n-            <fileset dir=\"${meta.inf.dir}\" includes=\"persistence.xml orm.xml\"/>\n-        </copy>\n-    </target>\n-    <target name=\"-post-compile\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile\" description=\"Compile project.\" name=\"compile\"/>\n-    <target name=\"-pre-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"init,deps-jar,-pre-pre-compile\" name=\"-do-compile-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes</fail>\n-        <j2seproject3:force-recompile/>\n-        <j2seproject3:javac excludes=\"\" gensrcdir=\"${build.generated.sources.dir}\" includes=\"${javac.includes}, module-info.java\" sourcepath=\"${src.dir}\"/>\n-    </target>\n-    <target name=\"-post-compile-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single\" name=\"compile-single\"/>\n-    <!--\n-                ====================\n-                JAR BUILDING SECTION\n-                ====================\n-            -->\n-    <target depends=\"init\" name=\"-pre-pre-jar\">\n-        <dirname file=\"${dist.jar}\" property=\"dist.jar.dir\"/>\n-        <mkdir dir=\"${dist.jar.dir}\"/>\n-    </target>\n-    <target name=\"-pre-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"init,compile\" name=\"-check-module-main-class\">\n-        <pathconvert property=\"main.class.file\">\n-            <string value=\"${main.class}\"/>\n-            <unpackagemapper from=\"*\" to=\"*.class\"/>\n-        </pathconvert>\n-        <condition property=\"do.module.main.class\">\n-            <and>\n-                <isset property=\"main.class.available\"/>\n-                <available file=\"${build.classes.dir}/module-info.class\"/>\n-                <available file=\"${build.classes.dir}/${main.class.file}\"/>\n-                <isset property=\"libs.CopyLibs.classpath\"/>\n-                <available classname=\"org.netbeans.modules.java.j2seproject.moduletask.ModuleMainClass\" classpath=\"${libs.CopyLibs.classpath}\"/>\n-            </and>\n-        </condition>\n-    </target>\n-    <target depends=\"-check-module-main-class\" if=\"do.module.main.class\" name=\"-set-module-main-class\">\n-        <taskdef classname=\"org.netbeans.modules.java.j2seproject.moduletask.ModuleMainClass\" classpath=\"${libs.CopyLibs.classpath}\" name=\"modulemainclass\"/>\n-        <modulemainclass failonerror=\"false\" mainclass=\"${main.class}\" moduleinfo=\"${build.classes.dir}/module-info.class\"/>\n-    </target>\n-    <target depends=\"init\" if=\"do.archive\" name=\"-do-jar-create-manifest\" unless=\"manifest.available\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"/>\n-        <touch file=\"${tmp.manifest.file}\" verbose=\"false\"/>\n-    </target>\n-    <target depends=\"init\" if=\"do.archive+manifest.available\" name=\"-do-jar-copy-manifest\">\n-        <tempfile deleteonexit=\"true\" destdir=\"${build.dir}\" property=\"tmp.manifest.file\"/>\n-        <copy encoding=\"${manifest.encoding}\" file=\"${manifest.file}\" outputencoding=\"UTF-8\" tofile=\"${tmp.manifest.file}\"/>\n-    </target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+main.class.available\" name=\"-do-jar-set-mainclass\">\n-        <manifest encoding=\"UTF-8\" file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Main-Class\" value=\"${main.class}\"/>\n-        </manifest>\n-    </target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+profile.available\" name=\"-do-jar-set-profile\">\n-        <manifest encoding=\"UTF-8\" file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"Profile\" value=\"${javac.profile}\"/>\n-        </manifest>\n-    </target>\n-    <target depends=\"init,-do-jar-create-manifest,-do-jar-copy-manifest\" if=\"do.archive+splashscreen.available\" name=\"-do-jar-set-splashscreen\">\n-        <basename file=\"${application.splash}\" property=\"splashscreen.basename\"/>\n-        <mkdir dir=\"${build.classes.dir}/META-INF\"/>\n-        <copy failonerror=\"false\" file=\"${application.splash}\" todir=\"${build.classes.dir}/META-INF\"/>\n-        <manifest encoding=\"UTF-8\" file=\"${tmp.manifest.file}\" mode=\"update\">\n-            <attribute name=\"SplashScreen-Image\" value=\"META-INF/${splashscreen.basename}\"/>\n-        </manifest>\n-    </target>\n-    <target depends=\"init,compile\" name=\"-check-do-mkdist\">\n-        <condition property=\"do.mkdist\">\n-            <and>\n-                <isset property=\"do.archive\"/>\n-                <isset property=\"libs.CopyLibs.classpath\"/>\n-                <not>\n-                    <istrue value=\"${mkdist.disabled}\"/>\n-                </not>\n-                <not>\n-                    <available file=\"${build.classes.dir}/module-info.class\"/>\n-                </not>\n-            </and>\n-        </condition>\n-    </target>\n-    <target depends=\"init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-check-do-mkdist\" if=\"do.mkdist\" name=\"-do-jar-copylibs\">\n-        <j2seproject3:copylibs manifest=\"${tmp.manifest.file}\"/>\n-        <echo level=\"info\">To run this application from the command line without Ant, try:</echo>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"/>\n-        <echo level=\"info\">java -jar \"${dist.jar.resolved}\"</echo>\n-    </target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-check-do-mkdist\" if=\"do.archive\" name=\"-do-jar-jar\" unless=\"do.mkdist\">\n-        <j2seproject1:jar manifest=\"${tmp.manifest.file}\"/>\n-        <property location=\"${build.classes.dir}\" name=\"build.classes.dir.resolved\"/>\n-        <property location=\"${dist.jar}\" name=\"dist.jar.resolved\"/>\n-        <condition else=\"${dist.jar.resolved}\" property=\"jar.usage.message.class.path.replacement\" value=\"\">\n-            <isset property=\"named.module.internal\"/>\n-        </condition>\n-        <pathconvert property=\"run.classpath.with.dist.jar\">\n-            <path path=\"${run.classpath}\"/>\n-            <map from=\"${build.classes.dir.resolved}\" to=\"${jar.usage.message.class.path.replacement}\"/>\n-        </pathconvert>\n-        <pathconvert property=\"run.modulepath.with.dist.jar\">\n-            <path location=\"${dist.jar.resolved}\"/>\n-            <path path=\"${run.modulepath}\"/>\n-            <map from=\"${build.classes.dir.resolved}\" to=\"${dist.jar.resolved}\"/>\n-        </pathconvert>\n-        <condition else=\"${run.modulepath}\" property=\"jar.usage.message.run.modulepath.with.dist.jar\" value=\"${run.modulepath.with.dist.jar}\">\n-            <isset property=\"named.module.internal\"/>\n-        </condition>\n-        <condition else=\"\" property=\"jar.usage.message.module.path\" value=\" -p ${jar.usage.message.run.modulepath.with.dist.jar}\">\n-            <and>\n-                <isset property=\"modules.supported.internal\"/>\n-                <length length=\"0\" string=\"${jar.usage.message.run.modulepath.with.dist.jar}\" when=\"greater\"/>\n-            </and>\n-        </condition>\n-        <condition else=\"\" property=\"jar.usage.message.class.path\" value=\" -cp ${run.classpath.with.dist.jar}\">\n-            <length length=\"0\" string=\"${run.classpath.with.dist.jar}\" when=\"greater\"/>\n-        </condition>\n-        <condition else=\"/${main.class}\" property=\"jar.usage.message.main.class.class.selector\" value=\"\">\n-            <isset property=\"do.module.main.class\"/>\n-        </condition>\n-        <condition else=\" ${main.class}\" property=\"jar.usage.message.main.class\" value=\" -m ${module.name}${jar.usage.message.main.class.class.selector}\">\n-            <isset property=\"named.module.internal\"/>\n-        </condition>\n-        <condition else=\"\" property=\"jar.usage.message\" value=\"To run this application from the command line without Ant, try:${line.separator}${platform.java}${jar.usage.message.module.path}${jar.usage.message.class.path}${jar.usage.message.main.class}\">\n-            <isset property=\"main.class.available\"/>\n-        </condition>\n-        <condition else=\"debug\" property=\"jar.usage.level\" value=\"info\">\n-            <isset property=\"main.class.available\"/>\n-        </condition>\n-        <echo level=\"${jar.usage.level}\" message=\"${jar.usage.message}\"/>\n-    </target>\n-    <target depends=\"-do-jar-copylibs\" if=\"do.archive\" name=\"-do-jar-delete-manifest\">\n-        <delete>\n-            <fileset file=\"${tmp.manifest.file}\"/>\n-        </delete>\n-    </target>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest\" name=\"-do-jar-without-libraries\"/>\n-    <target depends=\"init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest\" name=\"-do-jar-with-libraries\"/>\n-    <target name=\"-post-jar\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"init,compile,-pre-jar,-set-module-main-class,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar\" name=\"-do-jar\"/>\n-    <target depends=\"init,compile,-pre-jar,-do-jar,-post-jar,deploy\" description=\"Build JAR.\" name=\"jar\"/>\n-    <!--\n-                =================\n-                DEPLOY SECTION\n-                =================\n-            -->\n-    <target name=\"-pre-deploy\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"init\" name=\"-check-jlink\">\n-        <condition property=\"do.jlink.internal\">\n-            <and>\n-                <istrue value=\"${do.jlink}\"/>\n-                <isset property=\"do.archive\"/>\n-                <isset property=\"named.module.internal\"/>\n-            </and>\n-        </condition>\n-    </target>\n-    <target depends=\"init,-do-jar,-post-jar,-pre-deploy,-check-jlink\" if=\"do.jlink.internal\" name=\"-do-deploy\">\n-        <delete dir=\"${dist.jlink.dir}\" failonerror=\"false\" quiet=\"true\"/>\n-        <property name=\"jlink.launcher.name\" value=\"${application.title}\"/>\n-        <condition else=\"${module.name}\" property=\"jlink.add.modules\" value=\"${module.name},${jlink.additionalmodules}\">\n-            <and>\n-                <isset property=\"jlink.additionalmodules\"/>\n-                <length length=\"0\" string=\"${jlink.additionalmodules}\" when=\"greater\"/>\n-            </and>\n-        </condition>\n-        <condition property=\"jlink.do.strip.internal\">\n-            <and>\n-                <isset property=\"jlink.strip\"/>\n-                <istrue value=\"${jlink.strip}\"/>\n-            </and>\n-        </condition>\n-        <condition property=\"jlink.do.additionalparam.internal\">\n-            <and>\n-                <isset property=\"jlink.additionalparam\"/>\n-                <length length=\"0\" string=\"${jlink.additionalparam}\" when=\"greater\"/>\n-            </and>\n-        </condition>\n-        <condition property=\"jlink.do.launcher.internal\">\n-            <and>\n-                <istrue value=\"${jlink.launcher}\"/>\n-                <isset property=\"main.class.available\"/>\n-            </and>\n-        </condition>\n-        <property name=\"platform.jlink\" value=\"${jdk.home}/bin/jlink\"/>\n-        <property name=\"jlink.systemmodules.internal\" value=\"${jdk.home}/jmods\"/>\n-        <exec executable=\"${platform.jlink}\">\n-            <arg value=\"--module-path\"/>\n-            <arg path=\"${jlink.systemmodules.internal}:${run.modulepath}:${dist.jar}\"/>\n-            <arg value=\"--add-modules\"/>\n-            <arg value=\"${jlink.add.modules}\"/>\n-            <arg if:set=\"jlink.do.strip.internal\" value=\"--strip-debug\"/>\n-            <arg if:set=\"jlink.do.launcher.internal\" value=\"--launcher\"/>\n-            <arg if:set=\"jlink.do.launcher.internal\" value=\"${jlink.launcher.name}=${module.name}/${main.class}\"/>\n-            <arg if:set=\"jlink.do.additionalparam.internal\" line=\"${jlink.additionalparam}\"/>\n-            <arg value=\"--output\"/>\n-            <arg value=\"${dist.jlink.output}\"/>\n-        </exec>\n-    </target>\n-    <target name=\"-post-deploy\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"-do-jar,-post-jar,-pre-deploy,-do-deploy,-post-deploy\" name=\"deploy\"/>\n-    <!--\n-                =================\n-                EXECUTION SECTION\n-                =================\n-            -->\n-    <target depends=\"init,compile\" description=\"Run a main class.\" name=\"run\">\n-        <j2seproject1:java>\n-            <customize>\n-                <arg line=\"${application.args}\"/>\n-            </customize>\n-        </j2seproject1:java>\n-    </target>\n-    <target name=\"-do-not-recompile\">\n-        <property name=\"javac.includes.binary\" value=\"\"/>\n-    </target>\n-    <target depends=\"init,compile-single\" name=\"run-single\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\n-        <j2seproject1:java classname=\"${run.class}\"/>\n-    </target>\n-    <target depends=\"init,compile-test-single\" name=\"run-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\n-        <j2seproject1:java classname=\"${run.class}\" classpath=\"${run.test.classpath}\"/>\n-    </target>\n-    <!--\n-                =================\n-                DEBUGGING SECTION\n-                =================\n-            -->\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger\">\n-        <j2seproject1:nbjpdastart name=\"${debug.class}\"/>\n-    </target>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-main-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${debug.class}\"/>\n-    </target>\n-    <target depends=\"init,compile\" name=\"-debug-start-debuggee\">\n-        <j2seproject3:debug>\n-            <customizeDebuggee>\n-                <arg line=\"${application.args}\"/>\n-            </customizeDebuggee>\n-        </j2seproject3:debug>\n-    </target>\n-    <target depends=\"init,compile,-debug-start-debugger,-debug-start-debuggee\" description=\"Debug project in IDE.\" if=\"netbeans.home\" name=\"debug\"/>\n-    <target depends=\"init\" if=\"netbeans.home\" name=\"-debug-start-debugger-stepinto\">\n-        <j2seproject1:nbjpdastart stopclassname=\"${main.class}\"/>\n-    </target>\n-    <target depends=\"init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee\" if=\"netbeans.home\" name=\"debug-stepinto\"/>\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-single\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class</fail>\n-        <j2seproject3:debug classname=\"${debug.class}\"/>\n-    </target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-single\" if=\"netbeans.home\" name=\"debug-single\"/>\n-    <target depends=\"init,compile-test-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-main-test\">\n-        <fail unless=\"debug.class\">Must select one file in the IDE or set debug.class</fail>\n-        <j2seproject3:debug classname=\"${debug.class}\" classpath=\"${debug.test.classpath}\"/>\n-    </target>\n-    <target depends=\"init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test\" if=\"netbeans.home\" name=\"debug-test-with-main\"/>\n-    <target depends=\"init\" name=\"-pre-debug-fix\">\n-        <fail unless=\"fix.includes\">Must set fix.includes</fail>\n-        <property name=\"javac.includes\" value=\"${fix.includes}.java\"/>\n-    </target>\n-    <target depends=\"init,-pre-debug-fix,compile-single\" if=\"netbeans.home\" name=\"-do-debug-fix\">\n-        <j2seproject1:nbjpdareload/>\n-    </target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix\" if=\"netbeans.home\" name=\"debug-fix\"/>\n-    <!--\n-                =================\n-                PROFILING SECTION\n-                =================\n-            -->\n-    <!--\n-                pre NB7.2 profiler integration\n-            -->\n-    <target depends=\"profile-init,compile\" description=\"Profile a project in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"/>\n-            </classpath>\n-        </nbprofiledirect>\n-        <profile/>\n-    </target>\n-    <target depends=\"profile-init,compile-single\" description=\"Profile a selected class in the IDE.\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-single-pre72\">\n-        <fail unless=\"profile.class\">Must select one file in the IDE or set profile.class</fail>\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"/>\n-            </classpath>\n-        </nbprofiledirect>\n-        <profile classname=\"${profile.class}\"/>\n-    </target>\n-    <target depends=\"profile-init,compile-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-applet-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.classpath}\"/>\n-            </classpath>\n-        </nbprofiledirect>\n-        <profile classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"/>\n-            </customize>\n-        </profile>\n-    </target>\n-    <target depends=\"-init-macrodef-junit,profile-init,compile-test-single\" if=\"profiler.info.jvmargs.agent\" name=\"-profile-test-single-pre72\">\n-        <fail unless=\"netbeans.home\">This target only works when run from inside the NetBeans IDE.</fail>\n-        <nbprofiledirect>\n-            <classpath>\n-                <path path=\"${run.test.classpath}\"/>\n-            </classpath>\n-        </nbprofiledirect>\n-        <j2seproject3:junit excludes=\"${excludes}\" includes=\"${includes}\" testincludes=\"${profile.class}\" testmethods=\"\">\n-            <customize>\n-                <jvmarg value=\"-agentlib:jdwp=transport=${debug-transport},address=${jpda.address}\"/>\n-                <env key=\"${profiler.info.pathvar}\" path=\"${profiler.info.agentpath}:${profiler.current.path}\"/>\n-                <jvmarg value=\"${profiler.info.jvmargs.agent}\"/>\n-                <jvmarg line=\"${profiler.info.jvmargs}\"/>\n-                <classpath>\n-                    <path path=\"${run.test.classpath}\"/>\n-                </classpath>\n-            </customize>\n-        </j2seproject3:junit>\n-    </target>\n-    <!--\n-                end of pre NB72 profiling section\n-            -->\n-    <target if=\"netbeans.home\" name=\"-profile-check\">\n-        <condition property=\"profiler.configured\">\n-            <or>\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-agentpath:\"/>\n-                <contains casesensitive=\"true\" string=\"${run.jvmargs.ide}\" substring=\"-javaagent:\"/>\n-            </or>\n-        </condition>\n-    </target>\n-    <target depends=\"-profile-check,-profile-pre72\" description=\"Profile a project in the IDE.\" if=\"profiler.configured\" name=\"profile\" unless=\"profiler.info.jvmargs.agent\">\n-        <startprofiler/>\n-        <antcall target=\"run\"/>\n-    </target>\n-    <target depends=\"-profile-check,-profile-single-pre72\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-single\" unless=\"profiler.info.jvmargs.agent\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\n-        <startprofiler/>\n-        <antcall target=\"run-single\"/>\n-    </target>\n-    <target depends=\"-profile-test-single-pre72\" description=\"Profile a selected test in the IDE.\" name=\"profile-test-single\"/>\n-    <target depends=\"-profile-check\" description=\"Profile a selected test in the IDE.\" if=\"profiler.configured\" name=\"profile-test\" unless=\"profiler.info.jvmargs\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes</fail>\n-        <startprofiler/>\n-        <antcall target=\"test-single\"/>\n-    </target>\n-    <target depends=\"-profile-check\" description=\"Profile a selected class in the IDE.\" if=\"profiler.configured\" name=\"profile-test-with-main\">\n-        <fail unless=\"run.class\">Must select one file in the IDE or set run.class</fail>\n-        <startprofiler/>\n-        <antcall target=\"run-test-with-main\"/>\n-    </target>\n-    <target depends=\"-profile-check,-profile-applet-pre72\" if=\"profiler.configured\" name=\"profile-applet\" unless=\"profiler.info.jvmargs.agent\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>\n-        <startprofiler/>\n-        <antcall target=\"run-applet\"/>\n-    </target>\n-    <!--\n-                ===============\n-                JAVADOC SECTION\n-                ===============\n-            -->\n-    <target depends=\"init\" if=\"have.sources\" name=\"-javadoc-build\">\n-        <mkdir dir=\"${dist.javadoc.dir}\"/>\n-        <condition else=\"\" property=\"javadoc.endorsed.classpath.cmd.line.arg\" value=\"-J${endorsed.classpath.cmd.line.arg}\">\n-            <and>\n-                <isset property=\"endorsed.classpath.cmd.line.arg\"/>\n-                <not>\n-                    <equals arg1=\"${endorsed.classpath.cmd.line.arg}\" arg2=\"\"/>\n-                </not>\n-            </and>\n-        </condition>\n-        <condition else=\"\" property=\"bug5101868workaround\" value=\"*.java\">\n-            <matches pattern=\"1\\.[56](\\..*)?\" string=\"${java.version}\"/>\n-        </condition>\n-        <condition else=\"\" property=\"javadoc.html5.cmd.line.arg\" value=\"-html5\">\n-            <and>\n-                <isset property=\"javadoc.html5\"/>\n-                <available file=\"${jdk.home}${file.separator}lib${file.separator}jrt-fs.jar\"/>\n-            </and>\n-        </condition>\n-        <javadoc additionalparam=\"-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}\" author=\"${javadoc.author}\" charset=\"UTF-8\" destdir=\"${dist.javadoc.dir}\" docencoding=\"UTF-8\" encoding=\"${javadoc.encoding.used}\" failonerror=\"true\" noindex=\"${javadoc.noindex}\" nonavbar=\"${javadoc.nonavbar}\" notree=\"${javadoc.notree}\" private=\"${javadoc.private}\" source=\"${javac.source}\" splitindex=\"${javadoc.splitindex}\" use=\"${javadoc.use}\" useexternalfile=\"true\" version=\"${javadoc.version}\" windowtitle=\"${javadoc.windowtitle}\">\n-            <classpath>\n-                <path path=\"${javac.classpath}\"/>\n-            </classpath>\n-            <fileset dir=\"${src.dir}\" excludes=\"${bug5101868workaround},${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**/*.java\"/>\n-            </fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**/*.java\"/>\n-                <exclude name=\"*.java\"/>\n-            </fileset>\n-            <arg line=\"${javadoc.endorsed.classpath.cmd.line.arg}\"/>\n-            <arg line=\"${javadoc.html5.cmd.line.arg}\"/>\n-        </javadoc>\n-        <copy todir=\"${dist.javadoc.dir}\">\n-            <fileset dir=\"${src.dir}\" excludes=\"${excludes}\" includes=\"${includes}\">\n-                <filename name=\"**/doc-files/**\"/>\n-            </fileset>\n-            <fileset dir=\"${build.generated.sources.dir}\" erroronmissingdir=\"false\">\n-                <include name=\"**/doc-files/**\"/>\n-            </fileset>\n-        </copy>\n-    </target>\n-    <target depends=\"init,-javadoc-build\" if=\"netbeans.home\" name=\"-javadoc-browse\" unless=\"no.javadoc.preview\">\n-        <nbbrowse file=\"${dist.javadoc.dir}/index.html\"/>\n-    </target>\n-    <target depends=\"init,-javadoc-build,-javadoc-browse\" description=\"Build Javadoc.\" name=\"javadoc\"/>\n-    <!--\n-                =========================\n-                TEST COMPILATION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile\" if=\"have.tests\" name=\"-pre-pre-compile-test\">\n-        <mkdir dir=\"${build.test.classes.dir}\"/>\n-    </target>\n-    <target name=\"-pre-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"-init-source-module-properties\" if=\"named.module.internal\" name=\"-init-test-javac-module-properties-with-module\">\n-        <j2seproject3:modulename property=\"test.module.name\" sourcepath=\"${test.src.dir}\"/>\n-        <condition else=\"${empty.dir}\" property=\"javac.test.sourcepath\" value=\"${test.src.dir}\">\n-            <and>\n-                <isset property=\"test.module.name\"/>\n-                <length length=\"0\" string=\"${test.module.name}\" when=\"greater\"/>\n-            </and>\n-        </condition>\n-        <condition else=\"--patch-module ${module.name}=${test.src.dir} --add-reads ${module.name}=ALL-UNNAMED\" property=\"javac.test.compilerargs\" value=\"--add-reads ${test.module.name}=ALL-UNNAMED\">\n-            <and>\n-                <isset property=\"test.module.name\"/>\n-                <length length=\"0\" string=\"${test.module.name}\" when=\"greater\"/>\n-            </and>\n-        </condition>\n-    </target>\n-    <target depends=\"-init-source-module-properties\" if=\"named.module.internal\" name=\"-init-test-run-module-properties\">\n-        <condition else=\"${module.name}\" property=\"run.test.addexport.source.module.internal\" value=\"${test.module.name}\">\n-            <and>\n-                <isset property=\"test.module.name\"/>\n-                <length length=\"0\" string=\"${test.module.name}\" when=\"greater\"/>\n-            </and>\n-        </condition>\n-        <fileset dir=\"${build.test.classes.dir}\" id=\"run.test.packages.internal\" includes=\"**/*.class\"/>\n-        <property location=\"${build.test.classes.dir}\" name=\"build.test.classes.dir.abs.internal\"/>\n-        <pathconvert pathsep=\" \" property=\"run.test.addexports.internal\" refid=\"run.test.packages.internal\">\n-            <chainedmapper>\n-                <regexpmapper from=\"^(.*)\\Q${file.separator}\\E.*\\.class$$\" to=\"\\1\"/>\n-                <filtermapper>\n-                    <uniqfilter/>\n-                    <replacestring from=\"${build.test.classes.dir.abs.internal}\" to=\"\"/>\n-                </filtermapper>\n-                <cutdirsmapper dirs=\"1\"/>\n-                <packagemapper from=\"*\" to=\"--add-exports ${run.test.addexport.source.module.internal}/*=ALL-UNNAMED\"/>\n-            </chainedmapper>\n-        </pathconvert>\n-        <condition else=\"--patch-module ${module.name}=${build.test.classes.dir} --add-modules ${module.name} --add-reads ${module.name}=ALL-UNNAMED ${run.test.addexports.internal}\" property=\"run.test.jvmargs\" value=\"--add-modules ${test.module.name} --add-reads ${test.module.name}=ALL-UNNAMED ${run.test.addexports.internal}\">\n-            <and>\n-                <isset property=\"test.module.name\"/>\n-                <length length=\"0\" string=\"${test.module.name}\" when=\"greater\"/>\n-            </and>\n-        </condition>\n-    </target>\n-    <target depends=\"-init-source-module-properties\" name=\"-init-test-module-properties-without-module\" unless=\"named.module.internal\">\n-        <property name=\"javac.test.sourcepath\" value=\"${empty.dir}\"/>\n-        <property name=\"javac.test.compilerargs\" value=\"\"/>\n-        <property name=\"run.test.jvmargs\" value=\"\"/>\n-    </target>\n-    <target depends=\"-init-test-javac-module-properties-with-module,-init-test-module-properties-without-module\" name=\"-init-test-module-properties\"/>\n-    <target if=\"do.depend.true\" name=\"-compile-test-depend\">\n-        <j2seproject3:depend classpath=\"${javac.test.classpath}\" destdir=\"${build.test.classes.dir}\" srcdir=\"${test.src.dir}\"/>\n-    </target>\n-    <target depends=\"init,deps-jar,compile,-init-test-module-properties,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend\" if=\"have.tests\" name=\"-do-compile-test\">\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" modulepath=\"${javac.test.modulepath}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"${javac.test.sourcepath}\" srcdir=\"${test.src.dir}\">\n-            <customize>\n-                <compilerarg line=\"${javac.test.compilerargs}\"/>\n-            </customize>\n-        </j2seproject3:javac>\n-        <copy todir=\"${build.test.classes.dir}\">\n-            <fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>\n-        </copy>\n-    </target>\n-    <target name=\"-post-compile-test\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test\" name=\"compile-test\"/>\n-    <target name=\"-pre-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"init,deps-jar,compile,-init-test-module-properties,-pre-pre-compile-test,-pre-compile-test-single\" if=\"have.tests\" name=\"-do-compile-test-single\">\n-        <fail unless=\"javac.includes\">Must select some files in the IDE or set javac.includes</fail>\n-        <j2seproject3:force-recompile destdir=\"${build.test.classes.dir}\"/>\n-        <j2seproject3:javac apgeneratedsrcdir=\"${build.test.classes.dir}\" classpath=\"${javac.test.classpath}\" debug=\"true\" destdir=\"${build.test.classes.dir}\" excludes=\"\" includes=\"${javac.includes}, module-info.java\" modulepath=\"${javac.test.modulepath}\" processorpath=\"${javac.test.processorpath}\" sourcepath=\"${test.src.dir}\" srcdir=\"${test.src.dir}\">\n-            <customize>\n-                <compilerarg line=\"${javac.test.compilerargs}\"/>\n-            </customize>\n-        </j2seproject3:javac>\n-        <copy todir=\"${build.test.classes.dir}\">\n-            <fileset dir=\"${test.src.dir}\" excludes=\"${build.classes.excludes},${excludes}\" includes=\"${includes}\"/>\n-        </copy>\n-    </target>\n-    <target name=\"-post-compile-test-single\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single\" name=\"compile-test-single\"/>\n-    <!--\n-                =======================\n-                TEST EXECUTION SECTION\n-                =======================\n-            -->\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run\">\n-        <mkdir dir=\"${build.test.results.dir}\"/>\n-    </target>\n-    <target depends=\"init,compile-test,-init-test-run-module-properties,-pre-test-run\" if=\"have.tests\" name=\"-do-test-run\">\n-        <j2seproject3:test includes=\"${includes}\" testincludes=\"**/*Test.java\"/>\n-    </target>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run\" if=\"have.tests\" name=\"-post-test-run\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>\n-    </target>\n-    <target depends=\"init\" if=\"have.tests\" name=\"test-report\"/>\n-    <target depends=\"init\" if=\"netbeans.home+have.tests\" name=\"-test-browse\"/>\n-    <target depends=\"init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse\" description=\"Run unit tests.\" name=\"test\"/>\n-    <target depends=\"init\" if=\"have.tests\" name=\"-pre-test-run-single\">\n-        <mkdir dir=\"${build.test.results.dir}\"/>\n-    </target>\n-    <target depends=\"init,compile-test-single,-init-test-run-module-properties,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single\">\n-        <fail unless=\"test.includes\">Must select some files in the IDE or set test.includes</fail>\n-        <j2seproject3:test excludes=\"\" includes=\"${test.includes}\" testincludes=\"${test.includes}\"/>\n-    </target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single\" if=\"have.tests\" name=\"-post-test-run-single\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>\n-    </target>\n-    <target depends=\"init,compile-test-single,-init-test-run-module-properties,-pre-test-run-single,-do-test-run-single,-post-test-run-single\" description=\"Run single unit test.\" name=\"test-single\"/>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-do-test-run-single-method\">\n-        <fail unless=\"test.class\">Must select some files in the IDE or set test.class</fail>\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method</fail>\n-        <j2seproject3:test excludes=\"\" includes=\"${javac.includes}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"/>\n-    </target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single,-do-test-run-single-method\" if=\"have.tests\" name=\"-post-test-run-single-method\">\n-        <fail if=\"tests.failed\" unless=\"ignore.failing.tests\">Some tests failed; see details above.</fail>\n-    </target>\n-    <target depends=\"init,compile-test-single,-init-test-run-module-properties,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method\" description=\"Run single unit test.\" name=\"test-single-method\"/>\n-    <!--\n-                =======================\n-                TEST DEBUGGING SECTION\n-                =======================\n-            -->\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class</fail>\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testincludes=\"${javac.includes}\"/>\n-    </target>\n-    <target depends=\"init,compile-test-single,-pre-test-run-single\" if=\"have.tests\" name=\"-debug-start-debuggee-test-method\">\n-        <fail unless=\"test.class\">Must select one file in the IDE or set test.class</fail>\n-        <fail unless=\"test.method\">Must select some method in the IDE or set test.method</fail>\n-        <j2seproject3:test-debug excludes=\"\" includes=\"${javac.includes}\" testClass=\"${test.class}\" testMethod=\"${test.method}\" testincludes=\"${test.class}\" testmethods=\"${test.method}\"/>\n-    </target>\n-    <target depends=\"init,compile-test\" if=\"netbeans.home+have.tests\" name=\"-debug-start-debugger-test\">\n-        <j2seproject1:nbjpdastart classpath=\"${debug.test.classpath}\" name=\"${test.class}\"/>\n-    </target>\n-    <target depends=\"init,compile-test-single,-init-test-run-module-properties,-debug-start-debugger-test,-debug-start-debuggee-test\" name=\"debug-test\"/>\n-    <target depends=\"init,compile-test-single,-init-test-run-module-properties,-debug-start-debugger-test,-debug-start-debuggee-test-method\" name=\"debug-test-method\"/>\n-    <target depends=\"debug-test-method\" name=\"debug-single-method\"/>\n-    <target depends=\"init,-pre-debug-fix,compile-test-single\" if=\"netbeans.home\" name=\"-do-debug-fix-test\">\n-        <j2seproject1:nbjpdareload dir=\"${build.test.classes.dir}\"/>\n-    </target>\n-    <target depends=\"init,-pre-debug-fix,-do-debug-fix-test\" if=\"netbeans.home\" name=\"debug-fix-test\"/>\n-    <!--\n-                =========================\n-                APPLET EXECUTION SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" name=\"run-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>\n-        <j2seproject1:java classname=\"sun.applet.AppletViewer\">\n-            <customize>\n-                <arg value=\"${applet.url}\"/>\n-            </customize>\n-        </j2seproject1:java>\n-    </target>\n-    <!--\n-                =========================\n-                APPLET DEBUGGING  SECTION\n-                =========================\n-            -->\n-    <target depends=\"init,compile-single\" if=\"netbeans.home\" name=\"-debug-start-debuggee-applet\">\n-        <fail unless=\"applet.url\">Must select one file in the IDE or set applet.url</fail>\n-        <j2seproject3:debug classname=\"sun.applet.AppletViewer\">\n-            <customizeDebuggee>\n-                <arg value=\"${applet.url}\"/>\n-            </customizeDebuggee>\n-        </j2seproject3:debug>\n-    </target>\n-    <target depends=\"init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet\" if=\"netbeans.home\" name=\"debug-applet\"/>\n-    <!--\n-                ===============\n-                CLEANUP SECTION\n-                ===============\n-            -->\n-    <target name=\"-deps-clean-init\" unless=\"built-clean.properties\">\n-        <property location=\"${build.dir}/built-clean.properties\" name=\"built-clean.properties\"/>\n-        <delete file=\"${built-clean.properties}\" quiet=\"true\"/>\n-    </target>\n-    <target if=\"already.built.clean.${basedir}\" name=\"-warn-already-built-clean\">\n-        <echo level=\"warn\" message=\"Cycle detected: TeamProjectE was already built\"/>\n-    </target>\n-    <target depends=\"init,-deps-clean-init\" name=\"deps-clean\" unless=\"no.deps\">\n-        <mkdir dir=\"${build.dir}\"/>\n-        <touch file=\"${built-clean.properties}\" verbose=\"false\"/>\n-        <property file=\"${built-clean.properties}\" prefix=\"already.built.clean.\"/>\n-        <antcall target=\"-warn-already-built-clean\"/>\n-        <propertyfile file=\"${built-clean.properties}\">\n-            <entry key=\"${basedir}\" value=\"\"/>\n-        </propertyfile>\n-    </target>\n-    <target depends=\"init\" name=\"-do-clean\">\n-        <delete dir=\"${build.dir}\"/>\n-        <delete dir=\"${dist.jlink.output}\"/>\n-        <delete dir=\"${dist.dir}\" followsymlinks=\"false\" includeemptydirs=\"true\"/>\n-    </target>\n-    <target name=\"-post-clean\">\n-        <!-- Empty placeholder for easier customization. -->\n-        <!-- You can override this target in the ../build.xml file. -->\n-    </target>\n-    <target depends=\"init,deps-clean,-do-clean,-post-clean\" description=\"Clean build products.\" name=\"clean\"/>\n-    <target name=\"-check-call-dep\">\n-        <property file=\"${call.built.properties}\" prefix=\"already.built.\"/>\n-        <condition property=\"should.call.dep\">\n-            <and>\n-                <not>\n-                    <isset property=\"already.built.${call.subproject}\"/>\n-                </not>\n-                <available file=\"${call.script}\"/>\n-            </and>\n-        </condition>\n-    </target>\n-    <target depends=\"-check-call-dep\" if=\"should.call.dep\" name=\"-maybe-call-dep\">\n-        <ant antfile=\"${call.script}\" inheritall=\"false\" target=\"${call.target}\">\n-            <propertyset>\n-                <propertyref prefix=\"transfer.\"/>\n-                <mapper from=\"transfer.*\" to=\"*\" type=\"glob\"/>\n-            </propertyset>\n-        </ant>\n-    </target>\n-</project>"
  },
  {
    "sha": "1e8448d06d906cd22982bcbb955174351d951369",
    "filename": "nbproject/genfiles.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/nbproject/genfiles.properties",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/nbproject/genfiles.properties",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/nbproject/genfiles.properties?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,8 +0,0 @@\n-build.xml.data.CRC32=1fc50d22\n-build.xml.script.CRC32=dd25f677\n-build.xml.stylesheet.CRC32=f85dc8f2@1.97.0.48\n-# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.\n-# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.\n-nbproject/build-impl.xml.data.CRC32=1fc50d22\n-nbproject/build-impl.xml.script.CRC32=c27b0f75\n-nbproject/build-impl.xml.stylesheet.CRC32=d549e5cc@1.97.0.48"
  },
  {
    "sha": "72ae2ecb28a4896106fb94432c24305b947176c2",
    "filename": "nbproject/project.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 95,
    "changes": 95,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/nbproject/project.properties",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/nbproject/project.properties",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/nbproject/project.properties?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,95 +0,0 @@\n-annotation.processing.enabled=true\n-annotation.processing.enabled.in.editor=false\n-annotation.processing.processor.options=\n-annotation.processing.processors.list=\n-annotation.processing.run.all.processors=true\n-annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output\n-build.classes.dir=${build.dir}/classes\n-build.classes.excludes=**/*.java,**/*.form\n-# This directory is removed when the project is cleaned:\n-build.dir=build\n-build.generated.dir=${build.dir}/generated\n-build.generated.sources.dir=${build.dir}/generated-sources\n-# Only compile against the classpath explicitly listed here:\n-build.sysclasspath=ignore\n-build.test.classes.dir=${build.dir}/test/classes\n-build.test.results.dir=${build.dir}/test/results\n-# Uncomment to specify the preferred debugger connection transport:\n-#debug.transport=dt_socket\n-debug.classpath=\\\n-    ${run.classpath}\n-debug.modulepath=\\\n-    ${run.modulepath}\n-debug.test.classpath=\\\n-    ${run.test.classpath}\n-debug.test.modulepath=\\\n-    ${run.test.modulepath}\n-# Files in build.classes.dir which should be excluded from distribution jar\n-dist.archive.excludes=\n-# This directory is removed when the project is cleaned:\n-dist.dir=dist\n-dist.jar=${dist.dir}/TeamProjectE.jar\n-dist.javadoc.dir=${dist.dir}/javadoc\n-dist.jlink.dir=${dist.dir}/jlink\n-dist.jlink.output=${dist.jlink.dir}/TeamProjectE\n-excludes=\n-includes=**\n-jar.compress=false\n-javac.classpath=\n-# Space-separated list of extra javac options\n-javac.compilerargs=\n-javac.deprecation=false\n-javac.external.vm=true\n-javac.modulepath=\n-javac.processormodulepath=\n-javac.processorpath=\\\n-    ${javac.classpath}\n-javac.source=11\n-javac.target=11\n-javac.test.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-javac.test.modulepath=\\\n-    ${javac.modulepath}\n-javac.test.processorpath=\\\n-    ${javac.test.classpath}\n-javadoc.additionalparam=\n-javadoc.author=false\n-javadoc.encoding=${source.encoding}\n-javadoc.html5=false\n-javadoc.noindex=false\n-javadoc.nonavbar=false\n-javadoc.notree=false\n-javadoc.private=false\n-javadoc.splitindex=true\n-javadoc.use=true\n-javadoc.version=false\n-javadoc.windowtitle=\n-# The jlink additional root modules to resolve\n-jlink.additionalmodules=\n-# The jlink additional command line parameters\n-jlink.additionalparam=\n-jlink.launcher=true\n-jlink.launcher.name=TeamProjectE\n-main.class=teamprojecte.TeamProjectE\n-manifest.file=manifest.mf\n-meta.inf.dir=${src.dir}/META-INF\n-mkdist.disabled=false\n-platform.active=default_platform\n-run.classpath=\\\n-    ${javac.classpath}:\\\n-    ${build.classes.dir}\n-# Space-separated list of JVM arguments used when running the project.\n-# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.\n-# To set system properties for unit tests define test-sys-prop.name=value:\n-run.jvmargs=\n-run.modulepath=\\\n-    ${javac.modulepath}\n-run.test.classpath=\\\n-    ${javac.test.classpath}:\\\n-    ${build.test.classes.dir}\n-run.test.modulepath=\\\n-    ${javac.test.modulepath}\n-source.encoding=UTF-8\n-src.dir=src\n-test.src.dir=test"
  },
  {
    "sha": "920fc7daa11379b44b4b23c397019d00e628d5a9",
    "filename": "nbproject/project.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 15,
    "changes": 15,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/nbproject/project.xml",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/nbproject/project.xml",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/nbproject/project.xml?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,15 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://www.netbeans.org/ns/project/1\">\n-    <type>org.netbeans.modules.java.j2seproject</type>\n-    <configuration>\n-        <data xmlns=\"http://www.netbeans.org/ns/j2se-project/3\">\n-            <name>TeamProjectE</name>\n-            <source-roots>\n-                <root id=\"src.dir\"/>\n-            </source-roots>\n-            <test-roots>\n-                <root id=\"test.src.dir\"/>\n-            </test-roots>\n-        </data>\n-    </configuration>\n-</project>"
  },
  {
    "sha": "8ccab07b5ab63ccf44e4c1473ac30116b8875043",
    "filename": "src/edu/jsu/mcis/cs310/tas_sp21/Badge.java",
    "status": "removed",
    "additions": 0,
    "deletions": 49,
    "changes": 49,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/src/edu/jsu/mcis/cs310/tas_sp21/Badge.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/src/edu/jsu/mcis/cs310/tas_sp21/Badge.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/src/edu/jsu/mcis/cs310/tas_sp21/Badge.java?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,49 +0,0 @@\n-/*\n- * To change this license header, choose License Headers in Project Properties.\n- * To change this template file, choose Tools | Templates\n- * and open the template in the editor.\n- */\n-\n-//This is the badge class depicted in the supplemental video\n-\n-\n-package edu.jsu.mcis.cs310.tas_sp21;\n-\n-public class Badge {\n-    \n-  private String id;\n-  private String description;\n-\n-    public Badge(String id, String description) {\n-        this.id = id;\n-        this.description = description;\n-    }\n-\n-    public String getId() {\n-        return id;\n-    }\n-\n-    public String getDescription() {\n-        return description;\n-    }\n-\n-\n-    \n-    @Override\n-    public String toString () {\n-    \n-    //\"#12565c60 (Chapman, Joshua E)\"\n-    \n-    StringBuilder s = new StringBuilder();\n-    \n-    s.append(\"#\").append(id).append(\" \");\n-    s.append(\"(\").append(description).append(\")\");\n-    \n-    return (s.toString());\n-    \n-    \n-    }\n-\n-\n-    \n-}"
  },
  {
    "sha": "1fe5992d4ab243460c4a394664bb9506735d61f9",
    "filename": "src/edu/jsu/mcis/cs310/tas_sp21/Shift.java",
    "status": "removed",
    "additions": 0,
    "deletions": 91,
    "changes": 91,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/src/edu/jsu/mcis/cs310/tas_sp21/Shift.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/src/edu/jsu/mcis/cs310/tas_sp21/Shift.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/src/edu/jsu/mcis/cs310/tas_sp21/Shift.java?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,91 +0,0 @@\n-package edu.jsu.mcis.cs310.tas_sp21;\n-\n-public class Shift {\n-\n-    //There should also be \" getShift() \" methods\n-    //UNIX_TIMESTAMP()\n-    //To retrieve the hours and minutes from the TIME fields of the \n-    //Shift table as separate values, use the HOUR() and MINUTE() functions of MySQL.\n-    //\"Shift Start” and “Shift Stop\"\n-    //“Lunch Start” and “Lunch Stop” \n-    private String shift;\n-    private String id;\n-    private String description;    \n-    private int start;\n-    private int stop;\n-    private int interval;\n-    private int graceperiod;\n-    private int dock;\n-    private int lunchstart;\n-    private int lunchstop;\n-    private int lunchduration;\n-    private int lunchdeduct;\n-\n-    public Shift(String id, String description, int start, int stop, int interval, int graceperiod, int dock, int lunchstart, int lunchstop, int lunchdeduct) {\n-        this.shift = shift;\n-        this.id = id;\n-        this.description = description;\n-        this.start = start;\n-        this.stop = stop;\n-        this.interval = interval;\n-        this.graceperiod = graceperiod;\n-        this.dock = dock;\n-        this.lunchstart = lunchstart;\n-        this.lunchstop = lunchstop;\n-        this.lunchdeduct = lunchdeduct;\n-    }\n-\n-        public String getShift() {\n-        return shift;\n-    }\n-    public String getId() {\n-        return id;\n-    }\n-\n-    public String getDescription() {\n-        return description;\n-    }\n-\n-    public int getStart() {\n-        return start;\n-    }\n-\n-    public int getStop() {\n-        return stop;\n-    }\n-\n-    public int getInterval() {\n-        return interval;\n-    }\n-\n-    public int getGraceperiod() {\n-        return graceperiod;\n-    }\n-\n-    public int getDock() {\n-        return dock;\n-    }\n-\n-    public int getLunchstart() {\n-        return lunchstart;\n-    }\n-\n-    public int getLunchstop() {\n-        return lunchstop;\n-    }\n-\n-    public int getLunchdeduct() {\n-        return lunchdeduct;\n-    }\n-    \n-    @Override\n-    public String toString() {\n-        //\"#07901755, (Terrell, Kenneth R)\"\n-        StringBuilder s = new StringBuilder();\n-        s.append(\"#\").append(id).append(\" \");\n-        s.append(\"(\").append(description).append(\")\");\n-        \n-        return ( s.toString() );\n-    }\n-\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "3dae17bca755876b9b0e117cf803b46584261332",
    "filename": "src/edu/jsu/mcis/cs310/tas_sp21/TASDatabase.java",
    "status": "removed",
    "additions": 0,
    "deletions": 14,
    "changes": 14,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/src/edu/jsu/mcis/cs310/tas_sp21/TASDatabase.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/src/edu/jsu/mcis/cs310/tas_sp21/TASDatabase.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/src/edu/jsu/mcis/cs310/tas_sp21/TASDatabase.java?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,14 +0,0 @@\n-/*\n- * To change this license header, choose License Headers in Project Properties.\n- * To change this template file, choose Tools | Templates\n- * and open the template in the editor.\n- */\n-package edu.jsu.mcis.cs310.tas_sp21;\n-\n-/**\n- *\n- * @author rafaramos\n- */\n-public class TASDatabase {\n-    \n-}"
  },
  {
    "sha": "7d00aeb6f8c9bf529e37eb45815d8fc169aef7c7",
    "filename": "src/edu/jsu/mcis/cs310/tas_sp21/TASLogic.java",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/src/edu/jsu/mcis/cs310/tas_sp21/TASLogic.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/src/edu/jsu/mcis/cs310/tas_sp21/TASLogic.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/src/edu/jsu/mcis/cs310/tas_sp21/TASLogic.java?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,11 +0,0 @@\n-package edu.jsu.mcis.cs310.tas_sp21;\n-\n-/**\n- *\n- * @author andrewpruitt\n- */\n-\n-public class TASLogic {\n-  \n-  \n-}"
  },
  {
    "sha": "bb573357f5a56769a81af1be540301701935b637",
    "filename": "test/edu/jsu/mcis/cs310/tas_sp21/Feature1.java",
    "status": "removed",
    "additions": 0,
    "deletions": 106,
    "changes": 106,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/test/edu/jsu/mcis/cs310/tas_sp21/Feature1.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/test/edu/jsu/mcis/cs310/tas_sp21/Feature1.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/test/edu/jsu/mcis/cs310/tas_sp21/Feature1.java?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,106 +0,0 @@\n-package edu.jsu.mcis.cs310.tas_sp21;\n-\n-import org.junit.*;\n-import static org.junit.Assert.*;\n-\n-public class Feature1 {\n-\n-    private TASDatabase db;\n-    \n-    @Before\n-    public void setup() {\n-        db = new TASDatabase();\n-    }\n-    \n-    @Test\n-    public void testGetBadges() {\n-\t\t\n-        /* Retrieve Badges from Database */\n-\n-        Badge b1 = db.getBadge(\"12565C60\");\n-        Badge b2 = db.getBadge(\"08D01475\");\n-        Badge b3 = db.getBadge(\"D2CC71D4\");\n-\t\t\n-        /* Compare to Expected Values */\n-\n-        assertEquals(\"#12565C60 (Chapman, Joshua E)\", b1.toString());\n-        assertEquals(\"#08D01475 (Littell, Amie D)\", b2.toString());\n-        assertEquals(\"#D2CC71D4 (Lawson, Matthew J)\", b3.toString());\n-        \n-    }\n-    \n-    @Test\n-    public void testGetPunches() {\n-\t\t\n-        /* Retrieve Punches from Database */\n-\n-        Punch p1 = db.getPunch(3433);\n-        Punch p2 = db.getPunch(3325);\n-        Punch p3 = db.getPunch(1963);\n-        \n-        Punch p4 = db.getPunch(5702);\n-        Punch p5 = db.getPunch(4976);\n-        Punch p6 = db.getPunch(2193);\n-        \n-        Punch p7 = db.getPunch(954);\n-        Punch p8 = db.getPunch(258);\n-        Punch p9 = db.getPunch(717);\n-\t\t\n-        /* Compare to Expected Values */\n-\n-        assertEquals(\"#D2C39273 CLOCKED IN: WED 09/05/2018 07:00:07\", p1.printOriginalTimestamp());\n-        assertEquals(\"#DFD9BB5C CLOCKED IN: TUE 09/04/2018 08:00:00\", p2.printOriginalTimestamp());\n-        assertEquals(\"#99F0C0FA CLOCKED IN: SAT 08/18/2018 06:00:00\", p3.printOriginalTimestamp());\n-        \n-        assertEquals(\"#0FFA272B CLOCKED OUT: MON 09/24/2018 17:30:04\", p4.printOriginalTimestamp());\n-        assertEquals(\"#FCE87D9F CLOCKED OUT: TUE 09/18/2018 17:34:00\", p5.printOriginalTimestamp());\n-        assertEquals(\"#FCE87D9F CLOCKED OUT: MON 08/20/2018 17:30:00\", p6.printOriginalTimestamp());\n-        \n-        assertEquals(\"#618072EA TIMED OUT: FRI 08/10/2018 00:12:35\", p7.printOriginalTimestamp());\n-        assertEquals(\"#0886BF12 TIMED OUT: THU 08/02/2018 06:06:38\", p8.printOriginalTimestamp());\n-        assertEquals(\"#67637925 TIMED OUT: TUE 08/07/2018 23:12:34\", p9.printOriginalTimestamp());\n-        \n-    }\n-    \n-    @Test\n-    public void testGetShiftByID() {\n-\t\t\n-        /* Retrieve Shift Rulesets from Database */\n-\n-        Shift s1 = db.getShift(1);\n-        Shift s2 = db.getShift(2);\n-        Shift s3 = db.getShift(3);\n-\t\t\n-        /* Compare to Expected Values */\n-\n-        assertEquals(\"Shift 1: 07:00 - 15:30 (510 minutes); Lunch: 12:00 - 12:30 (30 minutes)\", s1.toString());\n-        assertEquals(\"Shift 2: 12:00 - 20:30 (510 minutes); Lunch: 16:30 - 17:00 (30 minutes)\", s2.toString());\n-        assertEquals(\"Shift 1 Early Lunch: 07:00 - 15:30 (510 minutes); Lunch: 11:30 - 12:00 (30 minutes)\", s3.toString());\n-\n-    }\n-    \n-    @Test\n-    public void testGetShiftByBadge() {\n-        \n-        /* Create Badge Objects */\n-        \n-        Badge b1 = db.getBadge(\"B6902696\");\n-        Badge b2 = db.getBadge(\"76E920D9\");\n-        Badge b3 = db.getBadge(\"4382D92D\");\n-        \n-\t\t\n-        /* Retrieve Shift Rulesets from Database */\n-\n-        Shift s1 = db.getShift(b1);\n-        Shift s2 = db.getShift(b2);\n-        Shift s3 = db.getShift(b3);\n-\t\t\n-        /* Compare to Expected Values */\n-\n-        assertEquals(\"Shift 1: 07:00 - 15:30 (510 minutes); Lunch: 12:00 - 12:30 (30 minutes)\", s1.toString());\n-        assertEquals(\"Shift 2: 12:00 - 20:30 (510 minutes); Lunch: 16:30 - 17:00 (30 minutes)\", s2.toString());\n-        assertEquals(\"Shift 1 Early Lunch: 07:00 - 15:30 (510 minutes); Lunch: 11:30 - 12:00 (30 minutes)\", s3.toString());\n-\n-    }\n-    \n-}"
  },
  {
    "sha": "68f4cd030604659603ce12d64beccebfcf9bb476",
    "filename": "test/edu/jsu/mcis/cs310/tas_sp21/Feature2.java",
    "status": "removed",
    "additions": 0,
    "deletions": 227,
    "changes": 227,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/test/edu/jsu/mcis/cs310/tas_sp21/Feature2.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/test/edu/jsu/mcis/cs310/tas_sp21/Feature2.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/test/edu/jsu/mcis/cs310/tas_sp21/Feature2.java?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,227 +0,0 @@\n-package edu.jsu.mcis.cs310.tas_sp21;\n-\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n-import java.util.Calendar;\n-import java.util.GregorianCalendar;\n-import org.junit.*;\n-import static org.junit.Assert.*;\n-\n-public class Feature2 {\n-    \n-    private TASDatabase db;\n-    \n-    @Before\n-    public void setup() {\n-        db = new TASDatabase();\n-    }\n-    \n-    @Test\n-    public void testInsertCheckPunch() {\n-\t\t\n-        /* Create New Punch Object */\n-\n-        Punch p1 = new Punch(db.getBadge(\"021890C0\"), 101, 1);\n-        \n-        /* Create Timestamp Objects */\n-        \n-        GregorianCalendar ots = new GregorianCalendar();\n-        GregorianCalendar rts = new GregorianCalendar();\n-\t\t\n-        /* Get Punch Properties */\n-        \n-        String badgeid = p1.getBadgeid();\n-        \n-        ots.setTimeInMillis(p1.getOriginaltimestamp());\n-        String originaltimestamp = (new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")).format(ots.getTime());\n-        \n-        int terminalid = p1.getTerminalid();\n-        int eventtypeid = p1.getPunchtypeid();\n-\t\t\n-        /* Insert Punch Into Database */\n-        \n-        int punchid = db.insertPunch(p1);\n-\t\t\n-        /* Retrieve New Punch */\n-        \n-        Punch p2 = db.getPunch(punchid);\n-\t\t\n-        /* Compare Punches */\n-\n-        assertEquals(badgeid, p2.getBadgeid());\n-\n-        rts.setTimeInMillis(p2.getOriginaltimestamp());\n-        \n-        assertEquals(originaltimestamp, (new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")).format(rts.getTime()));\n-        assertEquals(terminalid, p2.getTerminalid());\n-        assertEquals(eventtypeid, p2.getPunchtypeid());\n-        \n-    }\n-    \n-    @Test\n-    public void testRetrievePunchList1() {\n-        \n-        /* Create StringBuilders for Test Output */\n-        \n-        StringBuilder s1 = new StringBuilder();\n-        StringBuilder s2 = new StringBuilder();\n-\n-        /* Create Timestamp and Badge Objects for Punch List */\n-        \n-        GregorianCalendar ts = new GregorianCalendar();\n-        \n-        ts.set(Calendar.DAY_OF_MONTH, 17);\n-        ts.set(Calendar.YEAR, 2018);\n-        ts.set(Calendar.MONTH, 8);\n-        ts.set(Calendar.HOUR, 0);\n-        ts.set(Calendar.MINUTE, 0);\n-        ts.set(Calendar.SECOND, 0);\n-        \n-        Badge b = db.getBadge(\"67637925\");\n-        \n-        /* Retrieve Punch List #1 (created by \"getDailyPunchList()\") */\n-        \n-        ArrayList<Punch> p1 = db.getDailyPunchList(b, ts.getTimeInMillis());\n-        \n-        /* Export Punch List #1 Contents to StringBuilder */\n-        \n-        for (Punch p : p1) {\n-            s1.append(p.printOriginalTimestamp());\n-            s1.append(\"\\n\");\n-        }\n-        \n-        /* Create Punch List #2 (created manually) */\n-        \n-        ArrayList<Punch> p2 = new ArrayList<>();\n-        \n-        /* Add Punches */\n-        \n-        p2.add(db.getPunch(4716));\n-        p2.add(db.getPunch(4811));\n-        p2.add(db.getPunch(4813));\n-        p2.add(db.getPunch(4847));\n-        \n-        /* Export Punch List #2 Contents to StringBuilder */\n-        \n-        for (Punch p : p2) {\n-            s2.append(p.printOriginalTimestamp());\n-            s2.append(\"\\n\");\n-        }\n-        \n-        /* Compare Output Strings */\n-        \n-        assertEquals( s1.toString(), s2.toString() );\n-        \n-    }\n-    \n-    @Test\n-    public void testRetrievePunchList2() {\n-        \n-        /* Create StringBuilders for Test Output */\n-        \n-        StringBuilder s1 = new StringBuilder();\n-        StringBuilder s2 = new StringBuilder();\n-\n-        /* Create Timestamp and Badge Objects for Punch List */\n-        \n-        GregorianCalendar ts = new GregorianCalendar();\n-        \n-        ts.set(Calendar.DAY_OF_MONTH, 27);\n-        ts.set(Calendar.YEAR, 2018);\n-        ts.set(Calendar.MONTH, 8);\n-        ts.set(Calendar.HOUR, 0);\n-        ts.set(Calendar.MINUTE, 0);\n-        ts.set(Calendar.SECOND, 0);\n-        \n-        Badge b = db.getBadge(\"87176FD7\");\n-        \n-        /* Retrieve Punch List #1 (created by \"getDailyPunchList()\") */\n-        \n-        ArrayList<Punch> p1 = db.getDailyPunchList(b, ts.getTimeInMillis());\n-        \n-        /* Export Punch List #1 Contents to StringBuilder */\n-        \n-        for (Punch p : p1) {\n-            s1.append(p.printOriginalTimestamp());\n-            s1.append(\"\\n\");\n-        }\n-        \n-        /* Create Punch List #2 (created manually) */\n-        \n-        ArrayList<Punch> p2 = new ArrayList<>();\n-        \n-        /* Add Punches */\n-        \n-        p2.add(db.getPunch(6089));\n-        p2.add(db.getPunch(6112));\n-        p2.add(db.getPunch(6118));\n-        p2.add(db.getPunch(6129));\n-        \n-        /* Export Punch List #2 Contents to StringBuilder */\n-        \n-        for (Punch p : p2) {\n-            s2.append(p.printOriginalTimestamp());\n-            s2.append(\"\\n\");\n-        }\n-        \n-        /* Compare Output Strings */\n-        \n-        assertEquals( s1.toString(), s2.toString() );\n-        \n-    }\n-\n-    @Test\n-    public void testRetrievePunchList3() {\n-        \n-        /* Create StringBuilders for Test Output */\n-        \n-        StringBuilder s1 = new StringBuilder();\n-        StringBuilder s2 = new StringBuilder();\n-\n-        /* Create Timestamp and Badge Objects for Punch List */\n-        \n-        GregorianCalendar ts = new GregorianCalendar();\n-        \n-        ts.set(Calendar.DAY_OF_MONTH, 5);\n-        ts.set(Calendar.YEAR, 2018);\n-        ts.set(Calendar.MONTH, 8);\n-        ts.set(Calendar.HOUR, 0);\n-        ts.set(Calendar.MINUTE, 0);\n-        ts.set(Calendar.SECOND, 0);\n-        \n-        Badge b = db.getBadge(\"95497F63\");\n-        \n-        /* Retrieve Punch List #1 (created by \"getDailyPunchList()\") */\n-        \n-        ArrayList<Punch> p1 = db.getDailyPunchList(b, ts.getTimeInMillis());\n-        \n-        /* Export Punch List #1 Contents to StringBuilder */\n-        \n-        for (Punch p : p1) {\n-            s1.append(p.printOriginalTimestamp());\n-            s1.append(\"\\n\");\n-        }\n-        \n-        /* Create Punch List #2 (created manually) */\n-        \n-        ArrayList<Punch> p2 = new ArrayList<>();\n-        \n-        /* Add Punches */\n-        \n-        p2.add(db.getPunch(3463));\n-        p2.add(db.getPunch(3482));\n-        \n-        /* Export Punch List #2 Contents to StringBuilder */\n-        \n-        for (Punch p : p2) {\n-            s2.append(p.printOriginalTimestamp());\n-            s2.append(\"\\n\");\n-        }\n-        \n-        /* Compare Output Strings */\n-        \n-        assertEquals( s1.toString(), s2.toString() );\n-        \n-    }\n-    \n-}"
  },
  {
    "sha": "d3da7af3c4e4e4414777588baae3ce33a518e0ea",
    "filename": "test/edu/jsu/mcis/cs310/tas_sp21/Feature3.java",
    "status": "removed",
    "additions": 0,
    "deletions": 182,
    "changes": 182,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/test/edu/jsu/mcis/cs310/tas_sp21/Feature3.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/test/edu/jsu/mcis/cs310/tas_sp21/Feature3.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/test/edu/jsu/mcis/cs310/tas_sp21/Feature3.java?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,182 +0,0 @@\n-package edu.jsu.mcis.cs310.tas_sp21;\n-\n-import org.junit.*;\n-import static org.junit.Assert.*;\n-\n-public class Feature3 {\n-    \n-    private TASDatabase db;\n-    \n-    @Before\n-    public void setup() {\n-        db = new TASDatabase();\n-    }\n-    \n-    @Test\n-    public void testAdjustPunchesShift1Weekday() {\n-\t\t\n-        /* Get Shift Ruleset and Punch Data */\n-        \n-        Shift s1 = db.getShift(1);\n-\n-        Punch p1 = db.getPunch(3634);\n-        Punch p2 = db.getPunch(3687);\n-        Punch p3 = db.getPunch(3688);\n-        Punch p4 = db.getPunch(3716);\n-\t\t\n-        /* Adjust Punches According to Shift Rulesets */\n-        \n-        p1.adjust(s1);\n-        p2.adjust(s1);\n-        p3.adjust(s1);\n-        p4.adjust(s1);\n-\t\t\n-        /* Compare Adjusted Timestamps to Expected Values */\n-        \n-        assertEquals(\"#28DC3FB8 CLOCKED IN: FRI 09/07/2018 06:50:35\", p1.printOriginalTimestamp());\n-        assertEquals(\"#28DC3FB8 CLOCKED IN: FRI 09/07/2018 07:00:00 (Shift Start)\", p1.printAdjustedTimestamp());\n-        \n-        assertEquals(\"#28DC3FB8 CLOCKED OUT: FRI 09/07/2018 12:03:54\", p2.printOriginalTimestamp());\n-        assertEquals(\"#28DC3FB8 CLOCKED OUT: FRI 09/07/2018 12:00:00 (Lunch Start)\", p2.printAdjustedTimestamp());\n-        \n-        assertEquals(\"#28DC3FB8 CLOCKED IN: FRI 09/07/2018 12:23:41\", p3.printOriginalTimestamp());\n-        assertEquals(\"#28DC3FB8 CLOCKED IN: FRI 09/07/2018 12:30:00 (Lunch Stop)\", p3.printAdjustedTimestamp());\n-\n-        assertEquals(\"#28DC3FB8 CLOCKED OUT: FRI 09/07/2018 15:34:13\", p4.printOriginalTimestamp());\n-        assertEquals(\"#28DC3FB8 CLOCKED OUT: FRI 09/07/2018 15:30:00 (Shift Stop)\", p4.printAdjustedTimestamp());\n-        \n-    }\n-\n-    @Test\n-    public void testAdjustPunchesShift1Weekend() {\n-\t\t\n-        /* Get Shift Ruleset and Punch Data */\n-        \n-        Shift s1 = db.getShift(1);\n-\n-        Punch p1 = db.getPunch(1087);\n-        Punch p2 = db.getPunch(1162);\n-\t\t\n-        /* Adjust Punches According to Shift Rulesets */\n-        \n-        p1.adjust(s1);\n-        p2.adjust(s1);\n-\t\t\n-        /* Compare Adjusted Timestamps to Expected Values */\n-\n-        assertEquals(\"#F1EE0555 CLOCKED IN: SAT 08/11/2018 05:54:58\", p1.printOriginalTimestamp());\n-        assertEquals(\"#F1EE0555 CLOCKED IN: SAT 08/11/2018 06:00:00 (Interval Round)\", p1.printAdjustedTimestamp());\n-        \n-        assertEquals(\"#F1EE0555 CLOCKED OUT: SAT 08/11/2018 12:04:02\", p2.printOriginalTimestamp());\n-        assertEquals(\"#F1EE0555 CLOCKED OUT: SAT 08/11/2018 12:00:00 (Interval Round)\", p2.printAdjustedTimestamp());\n-        \n-    }\n-    \n-    @Test\n-    public void testAdjustPunchesShift2Weekday() {\n-\t\t\n-        /* Get Shift Ruleset and Punch Data */\n-        \n-        Shift s2 = db.getShift(2);\n-\n-        Punch p1 = db.getPunch(4943);\n-        Punch p2 = db.getPunch(5004);\n-\t\t\n-        /* Adjust Punches According to Shift Rulesets */\n-        \n-        p1.adjust(s2);\n-        p2.adjust(s2);\n-        \n-        /* Compare Adjusted Timestamps to Expected Values */\n-\n-        assertEquals(\"#08D01475 CLOCKED IN: TUE 09/18/2018 11:59:33\", p1.printOriginalTimestamp());\n-        assertEquals(\"#08D01475 CLOCKED IN: TUE 09/18/2018 12:00:00 (Shift Start)\", p1.printAdjustedTimestamp());\n-        \n-        assertEquals(\"#08D01475 CLOCKED OUT: TUE 09/18/2018 21:30:27\", p2.printOriginalTimestamp());\n-        assertEquals(\"#08D01475 CLOCKED OUT: TUE 09/18/2018 21:30:00 (None)\", p2.printAdjustedTimestamp());\n-        \n-    }\n-    \n-    @Test\n-    public void testAdjustPunchesShift2Weekend() {\n-\t\t\n-        /* Get Shift Ruleset and Punch Data */\n-        \n-        Shift s2 = db.getShift(2);\n-\n-        Punch p1 = db.getPunch(5463);\n-        Punch p2 = db.getPunch(5541);\n-\t\t\n-        /* Adjust Punches According to Shift Rulesets */\n-        \n-        p1.adjust(s2);\n-        p2.adjust(s2);\n-\t\t\n-        /* Compare Adjusted Timestamps to Expected Values */\n-\n-        assertEquals(\"#08D01475 CLOCKED IN: SAT 09/22/2018 05:49:00\", p1.printOriginalTimestamp());\n-        assertEquals(\"#08D01475 CLOCKED IN: SAT 09/22/2018 05:45:00 (Interval Round)\", p1.printAdjustedTimestamp());\n-        \n-        assertEquals(\"#08D01475 CLOCKED OUT: SAT 09/22/2018 12:04:15\", p2.printOriginalTimestamp());\n-        assertEquals(\"#08D01475 CLOCKED OUT: SAT 09/22/2018 12:00:00 (Interval Round)\", p2.printAdjustedTimestamp());\n-        \n-    }\n-    \n-    @Test\n-    public void testAdjustPunchesShift1SpecialCases() {\n-\t\t\n-        /* Get Shift Ruleset and Punch Data */\n-        \n-        Shift s1 = db.getShift(1);\n-\n-        Punch p1 = db.getPunch(151);  // Interval Adjustment Before Shift (In)\n-        Punch p2 = db.getPunch(2439); // Grace Period (In)\n-        Punch p3 = db.getPunch(2693); // Shift Dock (In)\n-        Punch p4 = db.getPunch(3953); // Interval Round During Shift (Out)\n-        Punch p5 = db.getPunch(2079); // Grace Period (Out)\n-        Punch p6 = db.getPunch(1358); // Shift Dock (Out)\n-        Punch p7 = db.getPunch(4119); // Interval Adjustment After Shift (Out)\n-        \n-        /* Adjust Punches According to Shift Ruleset */\n-        \n-        p1.adjust(s1);\n-        p2.adjust(s1);\n-        p3.adjust(s1);\n-        p4.adjust(s1);\n-        p5.adjust(s1);\n-        p6.adjust(s1);\n-        p7.adjust(s1);\n-        \n-        /* Compare Adjusted Timestamps to Expected Values */\n-\n-        assertEquals(\"#BE51FA92 CLOCKED IN: WED 08/01/2018 06:48:20\", p1.printOriginalTimestamp());\n-        assertEquals(\"#BE51FA92 CLOCKED IN: WED 08/01/2018 07:00:00 (Shift Start)\", p1.printAdjustedTimestamp());\n-        \n-        assertEquals(\"#3DA8B226 CLOCKED IN: FRI 08/24/2018 07:02:23\", p2.printOriginalTimestamp());\n-        assertEquals(\"#3DA8B226 CLOCKED IN: FRI 08/24/2018 07:00:00 (Shift Start)\", p2.printAdjustedTimestamp());\n-\n-        assertEquals(\"#8E5F0240 CLOCKED IN: MON 08/27/2018 07:08:57\", p3.printOriginalTimestamp());\n-        assertEquals(\"#8E5F0240 CLOCKED IN: MON 08/27/2018 07:15:00 (Shift Dock)\", p3.printAdjustedTimestamp());\n-        \n-        assertEquals(\"#D2C39273 CLOCKED OUT: MON 09/10/2018 15:07:52\", p4.printOriginalTimestamp());\n-        assertEquals(\"#D2C39273 CLOCKED OUT: MON 09/10/2018 15:15:00 (Interval Round)\", p4.printAdjustedTimestamp());\n-\n-        assertEquals(\"#408B195F CLOCKED OUT: TUE 08/21/2018 15:28:13\", p5.printOriginalTimestamp());\n-        assertEquals(\"#408B195F CLOCKED OUT: TUE 08/21/2018 15:30:00 (Shift Stop)\", p5.printAdjustedTimestamp());\n-\n-        assertEquals(\"#1B2052DE CLOCKED OUT: TUE 08/14/2018 15:15:00\", p6.printOriginalTimestamp());\n-        assertEquals(\"#1B2052DE CLOCKED OUT: TUE 08/14/2018 15:15:00 (Shift Dock)\", p6.printAdjustedTimestamp());\n-\n-        assertEquals(\"#ADD650A8 CLOCKED OUT: TUE 09/11/2018 15:37:12\", p7.printOriginalTimestamp());\n-        assertEquals(\"#ADD650A8 CLOCKED OUT: TUE 09/11/2018 15:30:00 (Shift Stop)\", p7.printAdjustedTimestamp());\n-        \n-    }\n-    \n-}\n-\n-\n-\n-\n-\n-\n-"
  },
  {
    "sha": "a024f15cf5bf7c71d3cf43fa84a244a47bf8dcae",
    "filename": "test/edu/jsu/mcis/cs310/tas_sp21/Feature4.java",
    "status": "removed",
    "additions": 0,
    "deletions": 116,
    "changes": 116,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/test/edu/jsu/mcis/cs310/tas_sp21/Feature4.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/test/edu/jsu/mcis/cs310/tas_sp21/Feature4.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/test/edu/jsu/mcis/cs310/tas_sp21/Feature4.java?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,116 +0,0 @@\n-package edu.jsu.mcis.cs310.tas_sp21;;\n-\n-import java.util.ArrayList;\n-import org.junit.*;\n-import static org.junit.Assert.*;\n-\n-public class Feature4 {\n-    \n-    private TASDatabase db;\n-    \n-    @Before\n-    public void setup() {\n-        db = new TASDatabase();\n-    }\n-    \n-    @Test\n-    public void testMinutesAccruedShift1Weekday() {\n-\t\t\n-        /* Get Punch */\n-        \n-        Punch p = db.getPunch(3634);\n-        Badge b = db.getBadge(p.getBadgeid());\n-        Shift s = db.getShift(b);\n-        \n-        ArrayList<Punch> dailypunchlist = db.getDailyPunchList(b, p.getOriginaltimestamp());\n-        \n-        for (Punch punch : dailypunchlist) {\n-            punch.adjust(s);\n-        }\n-\t\t\n-        /* Compute Pay Period Total */\n-        \n-        int m = TASLogic.calculateTotalMinutes(dailypunchlist, s);\n-\t\t\n-        /* Compare to Expected Value */\n-        \n-        assertEquals(480, m);\n-        \n-    }\n-    \n-    @Test\n-    public void testMinutesAccruedShift1WeekdayWithTimeout() {\n-\t\t\n-        /* Get Punch */\n-        \n-        Punch p = db.getPunch(436);\n-        Badge b = db.getBadge(p.getBadgeid());\n-        Shift s = db.getShift(b);\n-        \n-        ArrayList<Punch> dailypunchlist = db.getDailyPunchList(b, p.getOriginaltimestamp());\n-        \n-        for (Punch punch : dailypunchlist) {\n-            punch.adjust(s);\n-        }\n-\t\t\n-        /* Compute Pay Period Total */\n-        \n-        int m = TASLogic.calculateTotalMinutes(dailypunchlist, s);\n-\t\t\n-        /* Compare to Expected Value */\n-        \n-        assertEquals(0, m);\n-        \n-    }\n-    \n-    @Test\n-    public void testMinutesAccruedShift1Weekend() {\n-\t\t\n-        /* Get Punch */\n-        \n-        Punch p = db.getPunch(1087);\n-        Badge b = db.getBadge(p.getBadgeid());\n-        Shift s = db.getShift(b);\n-        \n-        ArrayList<Punch> dailypunchlist = db.getDailyPunchList(b, p.getOriginaltimestamp());\n-        \n-        for (Punch punch : dailypunchlist) {\n-            punch.adjust(s);\n-        }\n-\t\t\n-        /* Compute Pay Period Total */\n-        \n-        int m = TASLogic.calculateTotalMinutes(dailypunchlist, s);\n-\t\t\n-        /* Compare to Expected Value */\n-        \n-        assertEquals(360, m);\n-        \n-    }\n-\n-    @Test\n-    public void testMinutesAccruedShift2Weekday() {\n-\t\t\n-        /* Get Punch */\n-        \n-        Punch p = db.getPunch(4943);\n-        Badge b = db.getBadge(p.getBadgeid());\n-        Shift s = db.getShift(b);\n-        \n-        ArrayList<Punch> dailypunchlist = db.getDailyPunchList(b, p.getOriginaltimestamp());\n-        \n-        for (Punch punch : dailypunchlist) {\n-            punch.adjust(s);\n-        }\n-        \n-        /* Compute Pay Period Total */\n-        \n-        int m = TASLogic.calculateTotalMinutes(dailypunchlist, s);\n-\t\t\n-        /* Compare to Expected Value */\n-        \n-        assertEquals(540, m);\n-        \n-    }\n-    \n-}"
  },
  {
    "sha": "15f156fc106e616169dd01a35b544dcee8668c2e",
    "filename": "test/edu/jsu/mcis/cs310/tas_sp21/Feature5.java",
    "status": "removed",
    "additions": 0,
    "deletions": 129,
    "changes": 129,
    "blob_url": "https://github.com/Jay-Batiste/ProjectTeamE/blob/e81571f10e994ffe68f52bac9aaa3ee533702c62/test/edu/jsu/mcis/cs310/tas_sp21/Feature5.java",
    "raw_url": "https://github.com/Jay-Batiste/ProjectTeamE/raw/e81571f10e994ffe68f52bac9aaa3ee533702c62/test/edu/jsu/mcis/cs310/tas_sp21/Feature5.java",
    "contents_url": "https://api.github.com/repos/Jay-Batiste/ProjectTeamE/contents/test/edu/jsu/mcis/cs310/tas_sp21/Feature5.java?ref=e81571f10e994ffe68f52bac9aaa3ee533702c62",
    "patch": "@@ -1,129 +0,0 @@\n-package edu.jsu.mcis.cs310.tas_sp21;\n-\n-import org.junit.*;\n-import static org.junit.Assert.*;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import org.json.simple.*;\n-\n-public class Feature5 {\n-    \n-    private TASDatabase db;\n-    \n-    @Before\n-    public void setup() {\n-        db = new TASDatabase();\n-    }\n-    \n-    @Test\n-    public void testJSONShift1Weekday() {\n-        \n-        /* Expected JSON Data */\n-        \n-        String expectedJSON = \"[{\\\"punchdata\\\":\\\"Shift Start\\\",\\\"originaltimestamp\\\":\\\"1536321035000\\\",\\\"badgeid\\\":\\\"28DC3FB8\\\",\\\"adjustedtimestamp\\\":\\\"1536321600000\\\",\\\"punchtypeid\\\":\\\"1\\\",\\\"terminalid\\\":\\\"104\\\",\\\"id\\\":\\\"3634\\\"},{\\\"punchdata\\\":\\\"Lunch Start\\\",\\\"originaltimestamp\\\":\\\"1536339834000\\\",\\\"badgeid\\\":\\\"28DC3FB8\\\",\\\"adjustedtimestamp\\\":\\\"1536339600000\\\",\\\"punchtypeid\\\":\\\"0\\\",\\\"terminalid\\\":\\\"104\\\",\\\"id\\\":\\\"3687\\\"},{\\\"punchdata\\\":\\\"Lunch Stop\\\",\\\"originaltimestamp\\\":\\\"1536341021000\\\",\\\"badgeid\\\":\\\"28DC3FB8\\\",\\\"adjustedtimestamp\\\":\\\"1536341400000\\\",\\\"punchtypeid\\\":\\\"1\\\",\\\"terminalid\\\":\\\"104\\\",\\\"id\\\":\\\"3688\\\"},{\\\"punchdata\\\":\\\"Shift Stop\\\",\\\"originaltimestamp\\\":\\\"1536352453000\\\",\\\"badgeid\\\":\\\"28DC3FB8\\\",\\\"adjustedtimestamp\\\":\\\"1536352200000\\\",\\\"punchtypeid\\\":\\\"0\\\",\\\"terminalid\\\":\\\"104\\\",\\\"id\\\":\\\"3716\\\"}]\";\n-        \n-        ArrayList<HashMap<String, String>> expected = (ArrayList)JSONValue.parse(expectedJSON);\n-\t\t\n-        /* Get Punch */\n-        \n-        Punch p = db.getPunch(3634);\n-        Badge b = db.getBadge(p.getBadgeid());\n-        Shift s = db.getShift(b);\n-\t\t\n-        /* Get Daily Punch List */\n-        \n-        ArrayList<Punch> dailypunchlist = db.getDailyPunchList(b, p.getOriginaltimestamp());\n-        \n-        /* Adjust Punches */\n-        \n-        for (Punch punch : dailypunchlist) {\n-            punch.adjust(s);\n-        }\n-        \n-        /* JSON Conversion */\n-        \n-        String actualJSON = TASLogic.getPunchListAsJSON(dailypunchlist);\n-        \n-        ArrayList<HashMap<String, String>> actual = (ArrayList)JSONValue.parse(actualJSON);\n-\t\t\n-        /* Compare to Expected JSON */\n-        \n-        assertEquals(expected, actual);\n-        \n-    }\n-    \n-    @Test\n-    public void testJSONShift1Weekend() {\n-        \n-        /* Expected JSON Data */\n-        \n-        String expectedJSON = \"[{\\\"punchdata\\\":\\\"Interval Round\\\",\\\"originaltimestamp\\\":\\\"1533984898000\\\",\\\"badgeid\\\":\\\"F1EE0555\\\",\\\"adjustedtimestamp\\\":\\\"1533985200000\\\",\\\"punchtypeid\\\":\\\"1\\\",\\\"terminalid\\\":\\\"105\\\",\\\"id\\\":\\\"1087\\\"},{\\\"punchdata\\\":\\\"Interval Round\\\",\\\"originaltimestamp\\\":\\\"1534007042000\\\",\\\"badgeid\\\":\\\"F1EE0555\\\",\\\"adjustedtimestamp\\\":\\\"1534006800000\\\",\\\"punchtypeid\\\":\\\"0\\\",\\\"terminalid\\\":\\\"105\\\",\\\"id\\\":\\\"1162\\\"}]\";\n-        \n-        ArrayList<HashMap<String, String>> expected = (ArrayList)JSONValue.parse(expectedJSON);\n-\t\t\n-        /* Get Punch */\n-        \n-        Punch p = db.getPunch(1087);\n-        Badge b = db.getBadge(p.getBadgeid());\n-        Shift s = db.getShift(b);\n-        \n-        /* Get Daily Punch List */\n-        \n-        ArrayList<Punch> dailypunchlist = db.getDailyPunchList(b, p.getOriginaltimestamp());\n-        \n-        /* Adjust Punches */\n-        \n-        for (Punch punch : dailypunchlist) {\n-            punch.adjust(s);\n-        }\n-        \n-        /* JSON Conversion */\n-        \n-        String actualJSON = TASLogic.getPunchListAsJSON(dailypunchlist);\n-        \n-        ArrayList<HashMap<String, String>> actual = (ArrayList)JSONValue.parse(actualJSON);\n-\t\t\n-        /* Compare to Expected JSON */\n-        \n-        assertEquals(expected, actual);\n-        \n-    }\n-    \n-    @Test\n-    public void testJSONShift2Weekday() {\n-        \n-        /* Expected JSON Data */\n-        \n-        String expectedJSON = \"[{\\\"punchdata\\\":\\\"Shift Start\\\",\\\"originaltimestamp\\\":\\\"1537289973000\\\",\\\"badgeid\\\":\\\"08D01475\\\",\\\"adjustedtimestamp\\\":\\\"1537290000000\\\",\\\"punchtypeid\\\":\\\"1\\\",\\\"terminalid\\\":\\\"104\\\",\\\"id\\\":\\\"4943\\\"},{\\\"punchdata\\\":\\\"None\\\",\\\"originaltimestamp\\\":\\\"1537324227000\\\",\\\"badgeid\\\":\\\"08D01475\\\",\\\"adjustedtimestamp\\\":\\\"1537324200000\\\",\\\"punchtypeid\\\":\\\"0\\\",\\\"terminalid\\\":\\\"104\\\",\\\"id\\\":\\\"5004\\\"}]\";\n-        \n-        ArrayList<HashMap<String, String>> expected = (ArrayList)JSONValue.parse(expectedJSON);\n-\t\t\n-        /* Get Punch */\n-        \n-        Punch p = db.getPunch(4943);\n-        Badge b = db.getBadge(p.getBadgeid());\n-        Shift s = db.getShift(b);\n-        \n-        /* Get Daily Punch List */\n-        \n-        ArrayList<Punch> dailypunchlist = db.getDailyPunchList(b, p.getOriginaltimestamp());\n-        \n-        /* Adjust Punches */\n-        \n-        for (Punch punch : dailypunchlist) {\n-            punch.adjust(s);\n-        }\n-        \n-        /* JSON Conversion */\n-        \n-        String actualJSON = TASLogic.getPunchListAsJSON(dailypunchlist);\n-        \n-        ArrayList<HashMap<String, String>> actual = (ArrayList)JSONValue.parse(actualJSON);\n-\t\t\n-        /* Compare to Expected JSON */\n-        \n-        assertEquals(expected, actual);\n-        \n-    }\n-    \n-}"
  }
]
