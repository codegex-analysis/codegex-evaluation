[
  {
    "sha": "6536b3e060f8ac4fdd7651c3dec362fc73f17b75",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/freenowtech/spring-multirabbit/blob/96395e0ceea4899e332337b3973ef96318f4f87d/pom.xml",
    "raw_url": "https://github.com/freenowtech/spring-multirabbit/raw/96395e0ceea4899e332337b3973ef96318f4f87d/pom.xml",
    "contents_url": "https://api.github.com/repos/freenowtech/spring-multirabbit/contents/pom.xml?ref=96395e0ceea4899e332337b3973ef96318f4f87d",
    "patch": "@@ -5,7 +5,7 @@\n \n     <groupId>com.free-now.multirabbit</groupId>\n     <artifactId>spring-multirabbit-parent</artifactId>\n-    <version>2.4.0-SNAPSHOT</version>\n+    <version>2.4.3-SNAPSHOT</version>\n     <packaging>pom</packaging>\n \n     <name>Spring MultiRabbit</name>\n@@ -37,7 +37,7 @@\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n         <maven.compiler.source>1.8</maven.compiler.source>\n         <maven.compiler.target>1.8</maven.compiler.target>\n-        <springboot.version>2.4.0</springboot.version>\n+        <springboot.version>2.4.3</springboot.version>\n     </properties>\n \n     <scm>"
  },
  {
    "sha": "7a7ec25630637074aab3cbbd956367ad6ac491a0",
    "filename": "spring-multirabbit-examples/spring-multirabbit-example-java/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 12,
    "changes": 14,
    "blob_url": "https://github.com/freenowtech/spring-multirabbit/blob/96395e0ceea4899e332337b3973ef96318f4f87d/spring-multirabbit-examples/spring-multirabbit-example-java/pom.xml",
    "raw_url": "https://github.com/freenowtech/spring-multirabbit/raw/96395e0ceea4899e332337b3973ef96318f4f87d/spring-multirabbit-examples/spring-multirabbit-example-java/pom.xml",
    "contents_url": "https://api.github.com/repos/freenowtech/spring-multirabbit/contents/spring-multirabbit-examples/spring-multirabbit-example-java/pom.xml?ref=96395e0ceea4899e332337b3973ef96318f4f87d",
    "patch": "@@ -6,13 +6,13 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.4.0</version>\n+        <version>2.4.3</version>\n         <relativePath />\n     </parent>\n \n     <groupId>com.free-now.multirabbit</groupId>\n     <artifactId>spring-multirabbit-example-java</artifactId>\n-    <version>2.4.0-SNAPSHOT</version>\n+    <version>2.4.3-SNAPSHOT</version>\n     <packaging>jar</packaging>\n \n     <name>Spring MultiRabbit Example for Java</name>\n@@ -37,16 +37,6 @@\n             <artifactId>spring-boot-starter-test</artifactId>\n             <scope>test</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>org.junit.jupiter</groupId>\n-            <artifactId>junit-jupiter-engine</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.mockito</groupId>\n-            <artifactId>mockito-junit-jupiter</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n     </dependencies>\n \n     <build>"
  },
  {
    "sha": "950e5580a0c115db263b0fd7f205615656460b5f",
    "filename": "spring-multirabbit-examples/spring-multirabbit-example-kotlin/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 12,
    "changes": 14,
    "blob_url": "https://github.com/freenowtech/spring-multirabbit/blob/96395e0ceea4899e332337b3973ef96318f4f87d/spring-multirabbit-examples/spring-multirabbit-example-kotlin/pom.xml",
    "raw_url": "https://github.com/freenowtech/spring-multirabbit/raw/96395e0ceea4899e332337b3973ef96318f4f87d/spring-multirabbit-examples/spring-multirabbit-example-kotlin/pom.xml",
    "contents_url": "https://api.github.com/repos/freenowtech/spring-multirabbit/contents/spring-multirabbit-examples/spring-multirabbit-example-kotlin/pom.xml?ref=96395e0ceea4899e332337b3973ef96318f4f87d",
    "patch": "@@ -6,13 +6,13 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.4.0</version>\n+        <version>2.4.3</version>\n         <relativePath />\n     </parent>\n \n     <groupId>com.free-now.multirabbit</groupId>\n     <artifactId>spring-multirabbit-example-kotlin</artifactId>\n-    <version>2.4.0-SNAPSHOT</version>\n+    <version>2.4.3-SNAPSHOT</version>\n     <packaging>jar</packaging>\n \n     <name>Spring MultiRabbit Example for Kotlin</name>\n@@ -55,16 +55,6 @@\n             <artifactId>spring-boot-starter-test</artifactId>\n             <scope>test</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>org.junit.jupiter</groupId>\n-            <artifactId>junit-jupiter-engine</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.mockito</groupId>\n-            <artifactId>mockito-junit-jupiter</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n     </dependencies>\n \n     <build>"
  },
  {
    "sha": "e1f42be43704ff8357d5e559a4a37f2841ad8857",
    "filename": "spring-multirabbit-examples/spring-multirabbit-extension-example/pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 12,
    "changes": 14,
    "blob_url": "https://github.com/freenowtech/spring-multirabbit/blob/96395e0ceea4899e332337b3973ef96318f4f87d/spring-multirabbit-examples/spring-multirabbit-extension-example/pom.xml",
    "raw_url": "https://github.com/freenowtech/spring-multirabbit/raw/96395e0ceea4899e332337b3973ef96318f4f87d/spring-multirabbit-examples/spring-multirabbit-extension-example/pom.xml",
    "contents_url": "https://api.github.com/repos/freenowtech/spring-multirabbit/contents/spring-multirabbit-examples/spring-multirabbit-extension-example/pom.xml?ref=96395e0ceea4899e332337b3973ef96318f4f87d",
    "patch": "@@ -6,13 +6,13 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.4.0</version>\n+        <version>2.4.3</version>\n         <relativePath />\n     </parent>\n \n     <groupId>com.free-now.multirabbit</groupId>\n     <artifactId>spring-multirabbit-extended-example-java</artifactId>\n-    <version>2.4.0-SNAPSHOT</version>\n+    <version>2.4.3-SNAPSHOT</version>\n     <packaging>jar</packaging>\n \n     <name>Spring MultiRabbit Extension Example</name>\n@@ -42,16 +42,6 @@\n             <artifactId>spring-boot-starter-test</artifactId>\n             <scope>test</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>org.junit.jupiter</groupId>\n-            <artifactId>junit-jupiter-engine</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.mockito</groupId>\n-            <artifactId>mockito-junit-jupiter</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n     </dependencies>\n \n     <build>"
  },
  {
    "sha": "941d26d7693dbd9e935865a43881032e357b4028",
    "filename": "spring-multirabbit/pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 11,
    "changes": 12,
    "blob_url": "https://github.com/freenowtech/spring-multirabbit/blob/96395e0ceea4899e332337b3973ef96318f4f87d/spring-multirabbit/pom.xml",
    "raw_url": "https://github.com/freenowtech/spring-multirabbit/raw/96395e0ceea4899e332337b3973ef96318f4f87d/spring-multirabbit/pom.xml",
    "contents_url": "https://api.github.com/repos/freenowtech/spring-multirabbit/contents/spring-multirabbit/pom.xml?ref=96395e0ceea4899e332337b3973ef96318f4f87d",
    "patch": "@@ -6,7 +6,7 @@\n     <parent>\n         <groupId>com.free-now.multirabbit</groupId>\n         <artifactId>spring-multirabbit-parent</artifactId>\n-        <version>2.4.0-SNAPSHOT</version>\n+        <version>2.4.3-SNAPSHOT</version>\n         <relativePath>../</relativePath>\n     </parent>\n \n@@ -35,16 +35,6 @@\n             <artifactId>spring-boot-starter-test</artifactId>\n             <scope>test</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>org.junit.jupiter</groupId>\n-            <artifactId>junit-jupiter-engine</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.mockito</groupId>\n-            <artifactId>mockito-junit-jupiter</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n     </dependencies>\n \n     <build>"
  },
  {
    "sha": "7f0bb9ddb62ba7d00dee3f53e084d1935d0219e1",
    "filename": "spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/MultiRabbitBootstrapConfiguration.java",
    "status": "removed",
    "additions": 0,
    "deletions": 50,
    "changes": 50,
    "blob_url": "https://github.com/freenowtech/spring-multirabbit/blob/9d25753d0027c1bfe3d0584487c1fe63ba910690/spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/MultiRabbitBootstrapConfiguration.java",
    "raw_url": "https://github.com/freenowtech/spring-multirabbit/raw/9d25753d0027c1bfe3d0584487c1fe63ba910690/spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/MultiRabbitBootstrapConfiguration.java",
    "contents_url": "https://api.github.com/repos/freenowtech/spring-multirabbit/contents/spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/MultiRabbitBootstrapConfiguration.java?ref=9d25753d0027c1bfe3d0584487c1fe63ba910690",
    "patch": "@@ -1,50 +0,0 @@\n-package org.springframework.amqp.rabbit.annotation;\n-\n-import static org.springframework.amqp.rabbit.config.RabbitListenerConfigUtils.RABBIT_LISTENER_ANNOTATION_PROCESSOR_BEAN_NAME;\n-import static org.springframework.boot.autoconfigure.amqp.MultiRabbitConstants.MULTI_RABBIT_ENABLED_PROPERTY;\n-\n-import org.springframework.beans.factory.support.BeanDefinitionRegistry;\n-import org.springframework.beans.factory.support.RootBeanDefinition;\n-import org.springframework.context.EnvironmentAware;\n-import org.springframework.context.annotation.ImportBeanDefinitionRegistrar;\n-import org.springframework.core.env.Environment;\n-import org.springframework.core.type.AnnotationMetadata;\n-\n-/**\n- * An {@link ImportBeanDefinitionRegistrar} class that registers a\n- * {@link MultiRabbitListenerAnnotationBeanPostProcessor} (overwriting the regular\n- * {@link RabbitListenerAnnotationBeanPostProcessor}) bean capable of processing Spring's @{@link RabbitListener}\n- * annotation.\n- *\n- * @author Wander Costa\n- * @see MultiRabbitListenerAnnotationBeanPostProcessor\n- * @see RabbitListenerAnnotationBeanPostProcessor\n- * @see org.springframework.amqp.rabbit.listener.RabbitListenerEndpointRegistry\n- * @see EnableRabbit\n- */\n-public class MultiRabbitBootstrapConfiguration implements ImportBeanDefinitionRegistrar, EnvironmentAware {\n-\n-    private Environment environment;\n-\n-    @Override\n-    public void registerBeanDefinitions(final AnnotationMetadata importingClassMetadata,\n-                                        final BeanDefinitionRegistry registry) {\n-        if (isMultiRabbitEnabled()) {\n-            if (registry.containsBeanDefinition(RABBIT_LISTENER_ANNOTATION_PROCESSOR_BEAN_NAME)) {\n-                registry.removeBeanDefinition(RABBIT_LISTENER_ANNOTATION_PROCESSOR_BEAN_NAME);\n-            }\n-            registry.registerBeanDefinition(RABBIT_LISTENER_ANNOTATION_PROCESSOR_BEAN_NAME,\n-                    new RootBeanDefinition(MultiRabbitListenerAnnotationBeanPostProcessor.class));\n-        }\n-    }\n-\n-    private boolean isMultiRabbitEnabled() {\n-        final String isMultiEnabledStr = this.environment.getProperty(MULTI_RABBIT_ENABLED_PROPERTY);\n-        return Boolean.parseBoolean(isMultiEnabledStr);\n-    }\n-\n-    @Override\n-    public void setEnvironment(final Environment environment) {\n-        this.environment = environment;\n-    }\n-}"
  },
  {
    "sha": "927e1a7dc142bc39c194754a9e567e7321a9371a",
    "filename": "spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/MultiRabbitListenerAnnotationBeanPostProcessor.java",
    "status": "removed",
    "additions": 0,
    "deletions": 68,
    "changes": 68,
    "blob_url": "https://github.com/freenowtech/spring-multirabbit/blob/9d25753d0027c1bfe3d0584487c1fe63ba910690/spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/MultiRabbitListenerAnnotationBeanPostProcessor.java",
    "raw_url": "https://github.com/freenowtech/spring-multirabbit/raw/9d25753d0027c1bfe3d0584487c1fe63ba910690/spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/MultiRabbitListenerAnnotationBeanPostProcessor.java",
    "contents_url": "https://api.github.com/repos/freenowtech/spring-multirabbit/contents/spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/MultiRabbitListenerAnnotationBeanPostProcessor.java?ref=9d25753d0027c1bfe3d0584487c1fe63ba910690",
    "patch": "@@ -1,68 +0,0 @@\n-package org.springframework.amqp.rabbit.annotation;\n-\n-import java.lang.reflect.InvocationHandler;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.lang.reflect.Proxy;\n-import java.util.Collection;\n-import org.springframework.amqp.core.Declarable;\n-import org.springframework.util.StringUtils;\n-\n-/**\n- * An extension of {@link RabbitListenerAnnotationBeanPostProcessor} that attaches the processing of beans for\n- * Exchanges, Queues, and Bindings after they are created.\n- * <p>\n- * This processing enables each {@link org.springframework.amqp.rabbit.core.RabbitAdmin} to differentiate which beans\n- * corresponds to that specific {@link org.springframework.amqp.rabbit.core.RabbitAdmin}, preventing the server from\n- * being populated with non-expected structures from other servers.\n- *\n- * @author Wander Costa\n- * @see RabbitListenerAnnotationBeanPostProcessor\n- */\n-public final class MultiRabbitListenerAnnotationBeanPostProcessor\n-        extends RabbitListenerAnnotationBeanPostProcessor {\n-\n-    @Override\n-    protected Collection<Declarable> processAmqpListener(final RabbitListener rabbitListener,\n-                                                         final Method method,\n-                                                         final Object bean,\n-                                                         final String beanName) {\n-        final String rabbitAdmin = RabbitAdminNameResolver.resolve(rabbitListener);\n-        final RabbitListener rabbitListenerRef = proxyIfAdminNotPresent(rabbitListener, rabbitAdmin);\n-        final Collection<Declarable> declarables = super.processAmqpListener(rabbitListenerRef, method, bean, beanName);\n-        declarables.forEach(declarable -> declarable.setAdminsThatShouldDeclare(rabbitAdmin));\n-        return declarables;\n-    }\n-\n-    private RabbitListener proxyIfAdminNotPresent(final RabbitListener rabbitListener, final String rabbitAdmin) {\n-        if (StringUtils.hasText(rabbitListener.admin())) {\n-            return rabbitListener;\n-        }\n-        return (RabbitListener) Proxy.newProxyInstance(\n-                RabbitListener.class.getClassLoader(), new Class<?>[]{RabbitListener.class},\n-                new RabbitListenerAdminReplacementInvocationHandler(rabbitListener, rabbitAdmin));\n-    }\n-\n-    /**\n-     * An {@link InvocationHandler} to provide a replacing admin() parameter of the listener.\n-     */\n-    private final class RabbitListenerAdminReplacementInvocationHandler implements InvocationHandler {\n-\n-        private final RabbitListener target;\n-        private final String admin;\n-\n-        private RabbitListenerAdminReplacementInvocationHandler(final RabbitListener target, final String admin) {\n-            this.target = target;\n-            this.admin = admin;\n-        }\n-\n-        @Override\n-        public Object invoke(final Object proxy, final Method method, final Object[] args)\n-                throws InvocationTargetException, IllegalAccessException {\n-            if (method.getName().equals(\"admin\")) {\n-                return this.admin;\n-            }\n-            return method.invoke(this.target, args);\n-        }\n-    }\n-}"
  },
  {
    "sha": "733f2f9a233ffb6f189b067b4bea264872cbee3c",
    "filename": "spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/RabbitAdminNameResolver.java",
    "status": "removed",
    "additions": 0,
    "deletions": 35,
    "changes": 35,
    "blob_url": "https://github.com/freenowtech/spring-multirabbit/blob/9d25753d0027c1bfe3d0584487c1fe63ba910690/spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/RabbitAdminNameResolver.java",
    "raw_url": "https://github.com/freenowtech/spring-multirabbit/raw/9d25753d0027c1bfe3d0584487c1fe63ba910690/spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/RabbitAdminNameResolver.java",
    "contents_url": "https://api.github.com/repos/freenowtech/spring-multirabbit/contents/spring-multirabbit/src/main/java/org/springframework/amqp/rabbit/annotation/RabbitAdminNameResolver.java?ref=9d25753d0027c1bfe3d0584487c1fe63ba910690",
    "patch": "@@ -1,35 +0,0 @@\n-package org.springframework.amqp.rabbit.annotation;\n-\n-import org.springframework.boot.autoconfigure.amqp.MultiRabbitConstants;\n-\n-import static org.springframework.util.StringUtils.hasText;\n-\n-/**\n- * Bean name resolver for {@link org.springframework.amqp.rabbit.core.RabbitAdmin}.\n- */\n-final class RabbitAdminNameResolver {\n-\n-    /**\n-     * Private constructor.\n-     */\n-    private RabbitAdminNameResolver() {\n-        throw new UnsupportedOperationException(\"Utility class cannot be instantiated.\");\n-    }\n-\n-    /**\n-     * Resolves the name of the RabbitAdmin bean based on the RabbitListener.\n-     *\n-     * @param rabbitListener The RabbitListener to process the name from.\n-     * @return The name of the RabbitAdmin bean.\n-     */\n-    static String resolve(final RabbitListener rabbitListener) {\n-        String bean = rabbitListener.admin();\n-        if (!hasText(bean) && hasText(rabbitListener.containerFactory())) {\n-            bean = rabbitListener.containerFactory() + MultiRabbitConstants.RABBIT_ADMIN_SUFFIX;\n-        }\n-        if (!hasText(bean)) {\n-            bean = MultiRabbitConstants.DEFAULT_RABBIT_ADMIN_BEAN_NAME;\n-        }\n-        return bean;\n-    }\n-}"
  },
  {
    "sha": "81328aa3dbafd9821e5784d91ce780e119fd610a",
    "filename": "spring-multirabbit/src/main/java/org/springframework/boot/autoconfigure/amqp/MultiRabbitAutoConfiguration.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/freenowtech/spring-multirabbit/blob/96395e0ceea4899e332337b3973ef96318f4f87d/spring-multirabbit/src/main/java/org/springframework/boot/autoconfigure/amqp/MultiRabbitAutoConfiguration.java",
    "raw_url": "https://github.com/freenowtech/spring-multirabbit/raw/96395e0ceea4899e332337b3973ef96318f4f87d/spring-multirabbit/src/main/java/org/springframework/boot/autoconfigure/amqp/MultiRabbitAutoConfiguration.java",
    "contents_url": "https://api.github.com/repos/freenowtech/spring-multirabbit/contents/spring-multirabbit/src/main/java/org/springframework/boot/autoconfigure/amqp/MultiRabbitAutoConfiguration.java?ref=96395e0ceea4899e332337b3973ef96318f4f87d",
    "patch": "@@ -110,6 +110,10 @@ public MultiRabbitConnectionFactoryWrapper externalEmptyWrapper() {\n          * @param rabbitProperties      The default rabbit properties.\n          * @param multiRabbitProperties The additional rabbit properties.\n          * @param externalWrapper       The external wrapper for integration.\n+         * @param resourceLoader The ResourceLoader.\n+         * @param credentialsProvider The CredentialsProvider.\n+         * @param credentialsRefreshService The CredentialsRefreshService.\n+         * @param connectionNameStrategy The connection name strategy.\n          * @return The routing connection factory.\n          * @throws Exception if found any issue to instantiate and register the beans.\n          */"
  },
  {
    "sha": "a3f3cbded8046e8ef195e2360fa51eae623d32d0",
    "filename": "spring-multirabbit/src/test/java/org/springframework/amqp/rabbit/annotation/RabbitAdminNameResolverTest.java",
    "status": "removed",
    "additions": 0,
    "deletions": 50,
    "changes": 50,
    "blob_url": "https://github.com/freenowtech/spring-multirabbit/blob/9d25753d0027c1bfe3d0584487c1fe63ba910690/spring-multirabbit/src/test/java/org/springframework/amqp/rabbit/annotation/RabbitAdminNameResolverTest.java",
    "raw_url": "https://github.com/freenowtech/spring-multirabbit/raw/9d25753d0027c1bfe3d0584487c1fe63ba910690/spring-multirabbit/src/test/java/org/springframework/amqp/rabbit/annotation/RabbitAdminNameResolverTest.java",
    "contents_url": "https://api.github.com/repos/freenowtech/spring-multirabbit/contents/spring-multirabbit/src/test/java/org/springframework/amqp/rabbit/annotation/RabbitAdminNameResolverTest.java?ref=9d25753d0027c1bfe3d0584487c1fe63ba910690",
    "patch": "@@ -1,50 +0,0 @@\n-package org.springframework.amqp.rabbit.annotation;\n-\n-import org.junit.jupiter.api.Test;\n-import org.junit.jupiter.api.extension.ExtendWith;\n-import org.mockito.Mock;\n-import org.mockito.junit.jupiter.MockitoExtension;\n-import org.springframework.boot.autoconfigure.amqp.MultiRabbitConstants;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.mockito.Mockito.atLeastOnce;\n-import static org.mockito.Mockito.never;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.Mockito.when;\n-\n-@ExtendWith(MockitoExtension.class)\n-class RabbitAdminNameResolverTest {\n-\n-    private static final String DUMMY_ADMIN = \"dummy-admin\";\n-    private static final String DUMMY_CONTAINER_FACTORY = \"dummy-container-factory\";\n-\n-    @Mock\n-    private RabbitListener listener;\n-\n-    @Test\n-    void shouldResolveFromAdmin() {\n-        when(listener.admin()).thenReturn(DUMMY_ADMIN);\n-        assertEquals(DUMMY_ADMIN, RabbitAdminNameResolver.resolve(listener));\n-\n-        verify(listener, atLeastOnce()).admin();\n-        verify(listener, never()).containerFactory();\n-    }\n-\n-    @Test\n-    void shouldResolveFromContainerFactoryWhenNoAdminIsAvailable() {\n-        when(listener.containerFactory()).thenReturn(DUMMY_CONTAINER_FACTORY);\n-        String expected = DUMMY_CONTAINER_FACTORY + MultiRabbitConstants.RABBIT_ADMIN_SUFFIX;\n-        assertEquals(expected, RabbitAdminNameResolver.resolve(listener));\n-\n-        verify(listener, atLeastOnce()).admin();\n-        verify(listener, atLeastOnce()).containerFactory();\n-    }\n-\n-    @Test\n-    void shouldResolveFallbackToDefault() {\n-        assertEquals(MultiRabbitConstants.DEFAULT_RABBIT_ADMIN_BEAN_NAME, RabbitAdminNameResolver.resolve(listener));\n-\n-        verify(listener, atLeastOnce()).admin();\n-        verify(listener, atLeastOnce()).containerFactory();\n-    }\n-}"
  }
]
