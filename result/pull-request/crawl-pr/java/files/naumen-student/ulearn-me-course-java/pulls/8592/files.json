[
  {
    "sha": "39102a61503f86da62d6a4fc232ba75ef22d5b1a",
    "filename": "09-java-generics-collections/task01/src/com/example/task01/Pair.java",
    "status": "modified",
    "additions": 39,
    "deletions": 3,
    "changes": 42,
    "blob_url": "https://github.com/naumen-student/ulearn-me-course-java/blob/d1a575712fa903cc780202a82d673f777df618cc/09-java-generics-collections/task01/src/com/example/task01/Pair.java",
    "raw_url": "https://github.com/naumen-student/ulearn-me-course-java/raw/d1a575712fa903cc780202a82d673f777df618cc/09-java-generics-collections/task01/src/com/example/task01/Pair.java",
    "contents_url": "https://api.github.com/repos/naumen-student/ulearn-me-course-java/contents/09-java-generics-collections/task01/src/com/example/task01/Pair.java?ref=d1a575712fa903cc780202a82d673f777df618cc",
    "patch": "@@ -1,5 +1,41 @@\n package com.example.task01;\r\n+import java.util.function.BiConsumer;\r\n \r\n-public class Pair {\r\n-    // TODO напишите реализацию\r\n-}\r\n+public class Pair<T1, T2> {\r\n+    private final T1 firstEl;\r\n+    private final T2 secondEl;\r\n+\r\n+    private Pair(T1 firstEl, T2 secondEl) {\r\n+        this.firstEl = firstEl;\r\n+        this.secondEl = secondEl;\r\n+    }\r\n+\r\n+    public static <T1, T2> Pair<T1, T2> of(T1 firstEl, T2 secondEl) {\r\n+        return new Pair<>(firstEl, secondEl);\r\n+    }\r\n+\r\n+    public T1 getFirst() {\r\n+        return this.firstEl;\r\n+    }\r\n+\r\n+    public T2 getSecond() {\r\n+        return this.secondEl;\r\n+    }\r\n+\r\n+    public boolean equals(Object compared) {\r\n+        if (compared instanceof Pair) {\r\n+            Pair<T1, T2> comp = (Pair) compared;\r\n+            return comp.getFirst().equals(this.getFirst()) && (comp.getSecond().equals(this.getSecond()));\r\n+        }\r\n+        return false;\r\n+    }\r\n+\r\n+    public int hashCode() {\r\n+        return this.getFirst().hashCode() + this.getSecond().hashCode();\r\n+    }\r\n+\r\n+    public void ifPresent(BiConsumer<? super T1, ? super T2> consumer) {\r\n+        if (firstEl != null && secondEl != null)\r\n+            consumer.accept(firstEl, secondEl);\r\n+    }\r\n+}\n\\ No newline at end of file"
  }
]
