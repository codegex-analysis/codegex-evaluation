[
  {
    "sha": "d98dc02451037648617669f53c89cfba9e342bba",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 14,
    "deletions": 4,
    "changes": 18,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/build.gradle",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/build.gradle",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/build.gradle?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -31,15 +31,20 @@ sourceSets {\n     manual {\n         compileClasspath = main.compileClasspath\n     }\n+    api {\n+        compileClasspath = main.compileClasspath\n+        compileClasspath += manual.output\n+        runtimeClasspath += manual.output\n+    }\n     main {\n         resources {\n             srcDirs = [\n                     \"$rootDir/src/main/resources\",\n                     \"$rootDir/src/generated/resources\"\n             ]\n         }\n-        compileClasspath += manual.output\n-        runtimeClasspath += manual.output\n+        compileClasspath += manual.output + api.output\n+        runtimeClasspath += manual.output + api.output\n     }\n     datagen {\n         compileClasspath += main.compileClasspath\n@@ -48,8 +53,8 @@ sourceSets {\n         runtimeClasspath += main.output\n     }\n     test {\n-        compileClasspath += manual.output\n-        runtimeClasspath += manual.output\n+        compileClasspath += manual.output + api.output\n+        runtimeClasspath += manual.output + api.output\n     }\n }\n \n@@ -114,6 +119,7 @@ minecraft {\n                 immersiveengineering {\n                     source sourceSets.main\n                     source sourceSets.manual\n+                    source sourceSets.api\n                 }\n             }\n         }\n@@ -135,6 +141,7 @@ minecraft {\n             mods {\n                 immersiveengineering {\n                     source sourceSets.main\n+                    source sourceSets.api\n                 }\n             }\n         }\n@@ -159,6 +166,7 @@ minecraft {\n                     source sourceSets.main\n                     source sourceSets.datagen\n                     source sourceSets.manual\n+                    source sourceSets.api\n                 }\n             }\n         }\n@@ -291,6 +299,7 @@ task sourcesJar(type: Jar, dependsOn: classes) {\n     classifier = 'sources'\n     from sourceSets.main.allSource\n     from sourceSets.manual.allSource\n+    from sourceSets.api.allSource\n }\n \n artifacts {\n@@ -305,6 +314,7 @@ shadowJar {\n         include(dependency('malte0811:BlockModelSplitter:.*'))\n     }\n     from(sourceSets.manual.output)\n+    from(sourceSets.api.output)\n }\n \n reobf {"
  },
  {
    "sha": "d15c6d105b40c696a182cf47d3d412b298374dc5",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/ApiUtils.java",
    "status": "renamed",
    "additions": 8,
    "deletions": 62,
    "changes": 70,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/ApiUtils.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/ApiUtils.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/ApiUtils.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -8,8 +8,6 @@\n \n package blusunrize.immersiveengineering.api;\n \n-import blusunrize.immersiveengineering.api.crafting.IngredientWithSize;\n-import blusunrize.immersiveengineering.api.utils.IngredientUtils;\n import blusunrize.immersiveengineering.api.utils.ItemUtils;\n import blusunrize.immersiveengineering.api.utils.SetRestrictedField;\n import blusunrize.immersiveengineering.api.utils.TagUtils;\n@@ -19,11 +17,9 @@\n import net.minecraft.entity.LivingEntity;\n import net.minecraft.fluid.Fluid;\n import net.minecraft.item.ItemStack;\n-import net.minecraft.item.crafting.Ingredient;\n import net.minecraft.server.MinecraftServer;\n import net.minecraft.tileentity.TileEntity;\n import net.minecraft.util.JSONUtils;\n-import net.minecraft.util.NonNullList;\n import net.minecraft.util.ResourceLocation;\n import net.minecraft.util.concurrent.ThreadTaskExecutor;\n import net.minecraft.util.concurrent.TickDelayedTask;\n@@ -38,8 +34,8 @@\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n \n-import java.util.List;\n import java.util.Map;\n+import java.util.Random;\n import java.util.TreeMap;\n import java.util.function.Consumer;\n import java.util.function.Predicate;\n@@ -48,62 +44,12 @@\n \n public class ApiUtils\n {\n-\tpublic static final SetRestrictedField<Consumer<TileEntity>> disableTicking = new SetRestrictedField<>();\n-\n-\t@Deprecated\n-\tpublic static boolean compareToOreName(ItemStack stack, ResourceLocation oreName)\n-\t{\n-\t\treturn TagUtils.isInBlockOrItemTag(stack, oreName);\n-\t}\n-\n-\t@Deprecated\n-\tpublic static boolean stackMatchesObject(ItemStack stack, Object o)\n-\t{\n-\t\treturn ItemUtils.stackMatchesObject(stack, o);\n-\t}\n-\n-\t@Deprecated\n-\tpublic static boolean stackMatchesObject(ItemStack stack, Object o, boolean checkNBT)\n-\t{\n-\t\treturn ItemUtils.stackMatchesObject(stack, o, checkNBT);\n-\t}\n-\n-\t@Deprecated\n-\tpublic static ItemStack copyStackWithAmount(ItemStack stack, int amount)\n-\t{\n-\t\treturn ItemHandlerHelper.copyStackWithSize(stack, amount);\n-\t}\n-\n-\t@Deprecated\n-\tpublic static boolean stacksMatchIngredientList(List<Ingredient> list, NonNullList<ItemStack> stacks)\n-\t{\n-\t\treturn IngredientUtils.stacksMatchIngredientList(list, stacks);\n-\t}\n-\n-\t@Deprecated\n-\tpublic static boolean stacksMatchIngredientWithSizeList(List<IngredientWithSize> list, NonNullList<ItemStack> stacks)\n-\t{\n-\t\treturn IngredientUtils.stacksMatchIngredientWithSizeList(list, stacks);\n-\t}\n-\n-\t@Deprecated\n-\tpublic static Ingredient createIngredientFromList(List<ItemStack> list)\n-\t{\n-\t\treturn IngredientUtils.createIngredientFromList(list);\n-\t}\n-\n-\t@Deprecated\n-\tpublic static ComparableItemStack createComparableItemStack(ItemStack stack, boolean copy)\n-\t{\n-\t\treturn ComparableItemStack.create(stack, copy);\n-\t}\n-\n-\t@Deprecated\n-\tpublic static ComparableItemStack createComparableItemStack(ItemStack stack, boolean copy, boolean useNbt)\n-\t{\n-\t\treturn ComparableItemStack.create(stack, copy, useNbt);\n-\t}\n-\n+\tpublic static final SetRestrictedField<Consumer<TileEntity>> disableTicking = SetRestrictedField.common();\n+\t/**\n+\t * Random instance for general use. The \"usual\" per-world random instance can have unexpected behavior with\n+\t * ghostloading (in some cases the seed is set directly), this instance does not have this problem.\n+\t */\n+\tpublic static final Random RANDOM = new Random();\n \n \tpublic static JsonElement jsonSerializeFluidStack(FluidStack fluidStack)\n \t{\n@@ -153,7 +99,7 @@ public static ItemStack breakStackIntoIngots(ItemStack stack)\n \t\t\tif(relation!=null&&relation.length > 1)\n \t\t\t{\n \t\t\t\tdouble val = relation[0]/(double)relation[1];\n-\t\t\t\treturn copyStackWithAmount(IEApi.getPreferredTagStack(getIngot(type[1])), (int)val);\n+\t\t\t\treturn ItemUtils.copyStackWithAmount(IEApi.getPreferredTagStack(getIngot(type[1])), (int)val);\n \t\t\t}\n \t\t}\n \t\treturn ItemStack.EMPTY;",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/ApiUtils.java"
  },
  {
    "sha": "b9f3a9fea8a87dfd6bfb2f90e5c2ef102625b8e7",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/ComparableItemStack.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/ComparableItemStack.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/ComparableItemStack.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/ComparableItemStack.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/ComparableItemStack.java"
  },
  {
    "sha": "7ee535bc832006d08d40532f4e1f0a5902c2ae4d",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/DimensionChunkCoords.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/DimensionChunkCoords.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/DimensionChunkCoords.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/DimensionChunkCoords.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/DimensionChunkCoords.java"
  },
  {
    "sha": "bd33ca466d1cfb45106221a7e5961360e0be6fa8",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/EnumMetals.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/EnumMetals.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/EnumMetals.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/EnumMetals.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -6,7 +6,7 @@\n  * Details can be found in the license file in the root folder of this project\n  */\n \n-package blusunrize.immersiveengineering.common.blocks;\n+package blusunrize.immersiveengineering.api;\n \n import java.util.Locale;\n ",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/common/blocks/EnumMetals.java"
  },
  {
    "sha": "3fe81281d4901c9ef43e91e544a134e918d0399d",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/IEApi.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/IEApi.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/IEApi.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/IEApi.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -13,8 +13,6 @@\n import com.google.common.collect.Lists;\n import net.minecraft.item.ItemStack;\n import net.minecraft.potion.Effect;\n-import net.minecraft.tags.BlockTags;\n-import net.minecraft.tags.ItemTags;\n import net.minecraft.util.ResourceLocation;\n import net.minecraftforge.registries.IForgeRegistryEntry;\n \n@@ -101,7 +99,7 @@ public static ItemStack getPreferredStackbyMod(Collection<ItemStack> list)\n \t\tint currBest = modPreference.size();\n \t\tfor(T stack : list)\n \t\t{\n-\t\t\tif (preferredStack == null)\n+\t\t\tif(preferredStack==null)\n \t\t\t\tpreferredStack = stack;\n \t\t\tResourceLocation rl = getName.apply(stack);\n \t\t\tif(rl!=null)",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/IEApi.java"
  },
  {
    "sha": "257f9f3087f29fe03a5c6325c8946a09e14b1a94",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/IEEnums.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/IEEnums.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/IEEnums.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/IEEnums.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/IEEnums.java"
  },
  {
    "sha": "72055bff57d116974c76606d5180dfa3e8ca59fd",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/IEProperties.java",
    "status": "renamed",
    "additions": 13,
    "deletions": 11,
    "changes": 24,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/IEProperties.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/IEProperties.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/IEProperties.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -10,10 +10,8 @@\n \n import blusunrize.immersiveengineering.api.IEEnums.IOSideConfig;\n import blusunrize.immersiveengineering.api.excavator.MineralMix;\n-import blusunrize.immersiveengineering.api.tool.ConveyorHandler.IConveyorBelt;\n+import blusunrize.immersiveengineering.api.utils.DirectionUtils;\n import blusunrize.immersiveengineering.api.wires.Connection;\n-import blusunrize.immersiveengineering.common.blocks.metal.FeedthroughTileEntity.FeedthroughData;\n-import blusunrize.immersiveengineering.common.util.DirectionUtils;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.ImmutableSet;\n@@ -49,7 +47,7 @@\n \t\t\t\t\t.put(Direction.EAST, PropertyBoolInverted.create(\"sideconnection_east\"))\n \t\t\t\t\t.build();\n \n-\t\n+\n \tpublic static final IntegerProperty INT_4 = IntegerProperty.create(\"int_4\", 0, 3);\n \tpublic static final IntegerProperty INT_16 = IntegerProperty.create(\"int_16\", 0, 15);\n \n@@ -105,23 +103,29 @@ public String toString()\n \t\t}\n \t}\n \n-\tpublic static class VisibilityList {\n+\tpublic static class VisibilityList\n+\t{\n \t\tprivate final Set<String> selected;\n \t\tprivate final boolean showSelected;\n-\t\tprivate VisibilityList(Collection<String> selected, boolean show) {\n+\n+\t\tprivate VisibilityList(Collection<String> selected, boolean show)\n+\t\t{\n \t\t\tthis.selected = new HashSet<>(selected);\n \t\t\tthis.showSelected = show;\n \t\t}\n \n-\t\tpublic static VisibilityList show(String... visible) {\n+\t\tpublic static VisibilityList show(String... visible)\n+\t\t{\n \t\t\treturn show(Arrays.asList(visible));\n \t\t}\n \n-\t\tpublic static VisibilityList show(Collection<String> visible) {\n+\t\tpublic static VisibilityList show(Collection<String> visible)\n+\t\t{\n \t\t\treturn new VisibilityList(visible, true);\n \t\t}\n \n-\t\tpublic static VisibilityList hide(Collection<String> hidden) {\n+\t\tpublic static VisibilityList hide(Collection<String> hidden)\n+\t\t{\n \t\t\treturn new VisibilityList(hidden, false);\n \t\t}\n \n@@ -196,8 +200,6 @@ public int hashCode()\n \t\tpublic static final ModelProperty<Map<String, String>> TEXTURE_REMAP = new ModelProperty<>();\n \t\tpublic static final ModelProperty<ConnectionModelData> CONNECTIONS = new ModelProperty<>();\n \t\tpublic static final ModelProperty<MineralMix[]> MINERAL = new ModelProperty<>();\n-\t\tpublic static final ModelProperty<IConveyorBelt> CONVEYOR = new ModelProperty<>();\n-\t\tpublic static final ModelProperty<FeedthroughData> FEEDTHROUGH = new ModelProperty<>();\n \t\tpublic static final ModelProperty<Map<Direction, IOSideConfig>> SIDECONFIG = new ModelProperty<>();\n \t\tpublic static final ModelProperty<BlockPos> SUBMODEL_OFFSET = new ModelProperty<>();\n \t\t//TODO remove?",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/IEProperties.java"
  },
  {
    "sha": "f29fa7bb0cf45bffe9ab2a907b0d99f35503a9c8",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/IETags.java",
    "status": "renamed",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/IETags.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/IETags.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/IETags.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -8,8 +8,6 @@\n \n package blusunrize.immersiveengineering.api;\n \n-\n-import blusunrize.immersiveengineering.common.blocks.EnumMetals;\n import com.google.common.base.Preconditions;\n import net.minecraft.block.Block;\n import net.minecraft.fluid.Fluid;\n@@ -24,7 +22,6 @@\n import java.util.Map.Entry;\n import java.util.function.BiConsumer;\n \n-import static blusunrize.immersiveengineering.ImmersiveEngineering.rl;\n import static blusunrize.immersiveengineering.api.utils.TagUtils.*;\n \n public class IETags\n@@ -209,4 +206,9 @@ public static ResourceLocation getSheetmetalBlock(String type)\n \t{\n \t\treturn forgeLoc(\"sheetmetals/\"+type);\n \t}\n+\n+\tprivate static ResourceLocation rl(String path)\n+\t{\n+\t\treturn new ResourceLocation(Lib.MODID, path);\n+\t}\n }",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/IETags.java"
  },
  {
    "sha": "825001bb973eb840629781165d42f47f9734ade7",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/IPostBlock.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/IPostBlock.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/IPostBlock.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/IPostBlock.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/IPostBlock.java"
  },
  {
    "sha": "05473d6e5a59bbda2a66ac9d70f882b465c766b3",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/Lib.java",
    "status": "renamed",
    "additions": 142,
    "deletions": 145,
    "changes": 287,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/Lib.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/Lib.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/Lib.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -1,146 +1,143 @@\n-/*\r\n- * BluSunrize\r\n- * Copyright (c) 2017\r\n- *\r\n- * This code is licensed under \"Blu's License of Common Sense\"\r\n- * Details can be found in the license file in the root folder of this project\r\n- */\r\n-\r\n-package blusunrize.immersiveengineering.api;\r\n-\r\n-\r\n-import blusunrize.immersiveengineering.ImmersiveEngineering;\r\n-import blusunrize.immersiveengineering.common.blocks.EnumMetals;\r\n-import net.minecraft.item.IItemTier;\r\n-import net.minecraft.item.Rarity;\r\n-import net.minecraft.item.crafting.Ingredient;\r\n-import net.minecraft.tags.ItemTags;\r\n-import net.minecraft.util.ResourceLocation;\r\n-import net.minecraft.util.text.TextFormatting;\r\n-\r\n-public class Lib\r\n-{\r\n-\tpublic static final String MODID = ImmersiveEngineering.MODID;\r\n-\r\n-\tpublic static final String[] METALS_IE = {\"Copper\", \"Aluminum\", \"Lead\", \"Silver\", \"Nickel\", \"Uranium\", \"Constantan\", \"Electrum\", \"Steel\"};\r\n-\tpublic static final String[] METALS_ALL = {\"Copper\", \"Aluminum\", \"Lead\", \"Silver\", \"Nickel\", \"Uranium\", \"Constantan\", \"Electrum\", \"Steel\", \"Iron\", \"Gold\"};\r\n-\r\n-\tpublic static final String CHAT = \"chat.\"+MODID+\".\";\r\n-\tpublic static final String CHAT_WARN = CHAT+\"warning.\";\r\n-\tpublic static final String CHAT_INFO = CHAT+\"info.\";\r\n-\tpublic static final String CHAT_COMMAND = CHAT+\"command.\";\r\n-\r\n-\tpublic static final String DESC = \"desc.\"+MODID+\".\";\r\n-\tpublic static final String DESC_INFO = DESC+\"info.\";\r\n-\tpublic static final String DESC_FLAVOUR = DESC+\"flavour.\";\r\n-\r\n-\tpublic static final String GUI = \"gui.\"+MODID+\".\";\r\n-\tpublic static final String GUI_CONFIG = \"gui.\"+MODID+\".config.\";\r\n-\r\n-\tpublic static final int COLOUR_I_ImmersiveOrange = 0xfff78034;\r\n-\tpublic static final float[] COLOUR_F_ImmersiveOrange = {247/255f, 128/255f, 52/255f};\r\n-\tpublic static final int COLOUR_I_ImmersiveOrangeShadow = 0xff3e200d;\r\n-\r\n-\tpublic static final String MAGNET_PREVENT_NBT = \"PreventRemoteMovement\";\r\n-\r\n-\t/**\r\n-\t * Gui IDs\r\n-\t */\r\n-\t//Tiles\r\n-\tpublic static final ResourceLocation GUIID_CokeOven = new ResourceLocation(MODID, \"cokeoven\");\r\n-\tpublic static final ResourceLocation GUIID_AlloySmelter = new ResourceLocation(MODID, \"alloysmelter\");\r\n-\tpublic static final ResourceLocation GUIID_BlastFurnace = new ResourceLocation(MODID, \"blastfurnace\");\r\n-\tpublic static final ResourceLocation GUIID_CraftingTable = new ResourceLocation(MODID, \"craftingtable\");\r\n-\tpublic static final ResourceLocation GUIID_WoodenCrate = new ResourceLocation(MODID, \"woodencrate\");\r\n-\tpublic static final ResourceLocation GUIID_Workbench = new ResourceLocation(MODID, \"workbench\");\r\n-\tpublic static final ResourceLocation GUIID_Assembler = new ResourceLocation(MODID, \"assembler\");\r\n-\tpublic static final ResourceLocation GUIID_Sorter = new ResourceLocation(MODID, \"sorter\");\r\n-\tpublic static final ResourceLocation GUIID_ItemBatcher = new ResourceLocation(MODID, \"item_batcher\");\r\n-\tpublic static final ResourceLocation GUIID_Squeezer = new ResourceLocation(MODID, \"squeezer\");\r\n-\tpublic static final ResourceLocation GUIID_Fermenter = new ResourceLocation(MODID, \"fermenter\");\r\n-\tpublic static final ResourceLocation GUIID_Refinery = new ResourceLocation(MODID, \"refinery\");\r\n-\tpublic static final ResourceLocation GUIID_ArcFurnace = new ResourceLocation(MODID, \"arcfurnace\");\r\n-\tpublic static final ResourceLocation GUIID_AutoWorkbench = new ResourceLocation(MODID, \"autoworkbench\");\r\n-\tpublic static final ResourceLocation GUIID_Mixer = new ResourceLocation(MODID, \"mixer\");\r\n-\tpublic static final ResourceLocation GUIID_Turret_Gun = new ResourceLocation(MODID, \"turret_gun\");\r\n-\tpublic static final ResourceLocation GUIID_Turret_Chem = new ResourceLocation(MODID, \"turret_chem\");\r\n-\tpublic static final ResourceLocation GUIID_FluidSorter = new ResourceLocation(MODID, \"fluidsorter\");\r\n-\tpublic static final ResourceLocation GUIID_Cloche = new ResourceLocation(MODID, \"cloche\");\r\n-\tpublic static final ResourceLocation GUIID_ToolboxBlock = new ResourceLocation(MODID, \"toolboxblock\");\r\n-\tpublic static final ResourceLocation GUIID_RedstoneConnector = new ResourceLocation(MODID, \"redstoneconnector\");\r\n-\tpublic static final ResourceLocation GUIID_RedstoneProbe = new ResourceLocation(MODID, \"redstoneprobe\");\r\n-\t//Items\r\n-\tpublic static final ResourceLocation GUIID_Manual = new ResourceLocation(MODID, \"manual\");\r\n-\tpublic static final ResourceLocation GUIID_Revolver = new ResourceLocation(MODID, \"revolver\");\r\n-\tpublic static final ResourceLocation GUIID_Toolbox = new ResourceLocation(MODID, \"toolbox\");\r\n-\tpublic static final ResourceLocation GUIID_MaintenanceKit = new ResourceLocation(MODID, \"maintenancekit\");\r\n-\t//Entities\r\n-\tpublic static final ResourceLocation GUIID_CartCrate = new ResourceLocation(MODID, \"cart_crate\");\r\n-\tpublic static final ResourceLocation GUIID_CartReinforcedCrate = new ResourceLocation(MODID, \"cart_reinforcedcrate\");\r\n-\r\n-\tpublic static final String NBT_Earmuffs = \"IE:Earmuffs\";\r\n-\tpublic static final String NBT_EarmuffColour = \"IE:EarmuffColour\";\r\n-\tpublic static final String NBT_Powerpack = \"IE:Powerpack\";\r\n-\tpublic static final String NBT_DAMAGE = \"Damage\";\r\n-\r\n-\tpublic static final int colour_nixieTubeText = 0xff9900;\r\n-\r\n-\tpublic static String DMG_RevolverCasull = \"ieRevolver_casull\";\r\n-\tpublic static String DMG_RevolverAP = \"ieRevolver_armorPiercing\";\r\n-\tpublic static String DMG_RevolverBuck = \"ieRevolver_buckshot\";\r\n-\tpublic static String DMG_RevolverDragon = \"ieRevolver_dragonsbreath\";\r\n-\tpublic static String DMG_RevolverHoming = \"ieRevolver_homing\";\r\n-\tpublic static String DMG_RevolverWolfpack = \"ieRevolver_wolfpack\";\r\n-\tpublic static String DMG_RevolverSilver = \"ieRevolver_silver\";\r\n-\tpublic static String DMG_RevolverPotion = \"ieRevolver_potion\";\r\n-\tpublic static String DMG_Crusher = \"ieCrushed\";\r\n-\tpublic static String DMG_Sawmill = \"ieSawmill\";\r\n-\tpublic static String DMG_Tesla = \"ieTesla\";\r\n-\tpublic static String DMG_Acid = \"ieAcid\";\r\n-\tpublic static String DMG_Railgun = \"ieRailgun\";\r\n-\tpublic static String DMG_Sawblade = \"ieSawblade\";\r\n-\tpublic static String DMG_Tesla_prim = \"ieTeslaPrimary\";\r\n-\tpublic static String DMG_RazorWire = \"ieRazorWire\";\r\n-\tpublic static String DMG_RazorShock = \"ieRazorShock\";\r\n-\tpublic static String DMG_WireShock = \"ieWireShock\";\r\n-\r\n-\tpublic static final IItemTier MATERIAL_Steel = new IItemTier()\r\n-\t{\r\n-\t\t@Override\r\n-\t\tpublic int getMaxUses()\r\n-\t\t{\r\n-\t\t\treturn 641;\r\n-\t\t}\r\n-\r\n-\t\t@Override\r\n-\t\tpublic float getEfficiency()\r\n-\t\t{\r\n-\t\t\treturn 7F;\r\n-\t\t}\r\n-\r\n-\t\t@Override\r\n-\t\tpublic float getAttackDamage()\r\n-\t\t{\r\n-\t\t\treturn 3F;\r\n-\t\t}\r\n-\r\n-\t\t@Override\r\n-\t\tpublic int getHarvestLevel()\r\n-\t\t{\r\n-\t\t\treturn 2;\r\n-\t\t}\r\n-\r\n-\t\t@Override\r\n-\t\tpublic int getEnchantability()\r\n-\t\t{\r\n-\t\t\treturn 10;\r\n-\t\t}\r\n-\r\n-\t\t@Override\r\n-\t\tpublic Ingredient getRepairMaterial()\r\n-\t\t{\r\n-\t\t\treturn Ingredient.fromTag(IETags.getTagsFor(EnumMetals.STEEL).ingot);\r\n-\t\t}\r\n-\t};\r\n-\tpublic static final Rarity RARITY_MASTERWORK = Rarity.create(\"IE_MASTERWORK\", TextFormatting.GOLD);\r\n+/*\n+ * BluSunrize\n+ * Copyright (c) 2017\n+ *\n+ * This code is licensed under \"Blu's License of Common Sense\"\n+ * Details can be found in the license file in the root folder of this project\n+ */\n+\n+package blusunrize.immersiveengineering.api;\n+\n+\n+import net.minecraft.item.IItemTier;\n+import net.minecraft.item.Rarity;\n+import net.minecraft.item.crafting.Ingredient;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraft.util.text.TextFormatting;\n+\n+public class Lib\n+{\n+\tpublic static final String MODID = \"immersiveengineering\";\n+\n+\tpublic static final String[] METALS_IE = {\"Copper\", \"Aluminum\", \"Lead\", \"Silver\", \"Nickel\", \"Uranium\", \"Constantan\", \"Electrum\", \"Steel\"};\n+\tpublic static final String[] METALS_ALL = {\"Copper\", \"Aluminum\", \"Lead\", \"Silver\", \"Nickel\", \"Uranium\", \"Constantan\", \"Electrum\", \"Steel\", \"Iron\", \"Gold\"};\n+\n+\tpublic static final String CHAT = \"chat.\"+MODID+\".\";\n+\tpublic static final String CHAT_WARN = CHAT+\"warning.\";\n+\tpublic static final String CHAT_INFO = CHAT+\"info.\";\n+\tpublic static final String CHAT_COMMAND = CHAT+\"command.\";\n+\n+\tpublic static final String DESC = \"desc.\"+MODID+\".\";\n+\tpublic static final String DESC_INFO = DESC+\"info.\";\n+\tpublic static final String DESC_FLAVOUR = DESC+\"flavour.\";\n+\n+\tpublic static final String GUI = \"gui.\"+MODID+\".\";\n+\tpublic static final String GUI_CONFIG = \"gui.\"+MODID+\".config.\";\n+\n+\tpublic static final int COLOUR_I_ImmersiveOrange = 0xfff78034;\n+\tpublic static final float[] COLOUR_F_ImmersiveOrange = {247/255f, 128/255f, 52/255f};\n+\tpublic static final int COLOUR_I_ImmersiveOrangeShadow = 0xff3e200d;\n+\n+\tpublic static final String MAGNET_PREVENT_NBT = \"PreventRemoteMovement\";\n+\n+\t/**\n+\t * Gui IDs\n+\t */\n+\t//Tiles\n+\tpublic static final ResourceLocation GUIID_CokeOven = new ResourceLocation(MODID, \"cokeoven\");\n+\tpublic static final ResourceLocation GUIID_AlloySmelter = new ResourceLocation(MODID, \"alloysmelter\");\n+\tpublic static final ResourceLocation GUIID_BlastFurnace = new ResourceLocation(MODID, \"blastfurnace\");\n+\tpublic static final ResourceLocation GUIID_CraftingTable = new ResourceLocation(MODID, \"craftingtable\");\n+\tpublic static final ResourceLocation GUIID_WoodenCrate = new ResourceLocation(MODID, \"woodencrate\");\n+\tpublic static final ResourceLocation GUIID_Workbench = new ResourceLocation(MODID, \"workbench\");\n+\tpublic static final ResourceLocation GUIID_Assembler = new ResourceLocation(MODID, \"assembler\");\n+\tpublic static final ResourceLocation GUIID_Sorter = new ResourceLocation(MODID, \"sorter\");\n+\tpublic static final ResourceLocation GUIID_ItemBatcher = new ResourceLocation(MODID, \"item_batcher\");\n+\tpublic static final ResourceLocation GUIID_Squeezer = new ResourceLocation(MODID, \"squeezer\");\n+\tpublic static final ResourceLocation GUIID_Fermenter = new ResourceLocation(MODID, \"fermenter\");\n+\tpublic static final ResourceLocation GUIID_Refinery = new ResourceLocation(MODID, \"refinery\");\n+\tpublic static final ResourceLocation GUIID_ArcFurnace = new ResourceLocation(MODID, \"arcfurnace\");\n+\tpublic static final ResourceLocation GUIID_AutoWorkbench = new ResourceLocation(MODID, \"autoworkbench\");\n+\tpublic static final ResourceLocation GUIID_Mixer = new ResourceLocation(MODID, \"mixer\");\n+\tpublic static final ResourceLocation GUIID_Turret_Gun = new ResourceLocation(MODID, \"turret_gun\");\n+\tpublic static final ResourceLocation GUIID_Turret_Chem = new ResourceLocation(MODID, \"turret_chem\");\n+\tpublic static final ResourceLocation GUIID_FluidSorter = new ResourceLocation(MODID, \"fluidsorter\");\n+\tpublic static final ResourceLocation GUIID_Cloche = new ResourceLocation(MODID, \"cloche\");\n+\tpublic static final ResourceLocation GUIID_ToolboxBlock = new ResourceLocation(MODID, \"toolboxblock\");\n+\tpublic static final ResourceLocation GUIID_RedstoneConnector = new ResourceLocation(MODID, \"redstoneconnector\");\n+\tpublic static final ResourceLocation GUIID_RedstoneProbe = new ResourceLocation(MODID, \"redstoneprobe\");\n+\t//Items\n+\tpublic static final ResourceLocation GUIID_Manual = new ResourceLocation(MODID, \"manual\");\n+\tpublic static final ResourceLocation GUIID_Revolver = new ResourceLocation(MODID, \"revolver\");\n+\tpublic static final ResourceLocation GUIID_Toolbox = new ResourceLocation(MODID, \"toolbox\");\n+\tpublic static final ResourceLocation GUIID_MaintenanceKit = new ResourceLocation(MODID, \"maintenancekit\");\n+\t//Entities\n+\tpublic static final ResourceLocation GUIID_CartCrate = new ResourceLocation(MODID, \"cart_crate\");\n+\tpublic static final ResourceLocation GUIID_CartReinforcedCrate = new ResourceLocation(MODID, \"cart_reinforcedcrate\");\n+\n+\tpublic static final String NBT_Earmuffs = \"IE:Earmuffs\";\n+\tpublic static final String NBT_EarmuffColour = \"IE:EarmuffColour\";\n+\tpublic static final String NBT_Powerpack = \"IE:Powerpack\";\n+\tpublic static final String NBT_DAMAGE = \"Damage\";\n+\n+\tpublic static final int colour_nixieTubeText = 0xff9900;\n+\n+\tpublic static String DMG_RevolverCasull = \"ieRevolver_casull\";\n+\tpublic static String DMG_RevolverAP = \"ieRevolver_armorPiercing\";\n+\tpublic static String DMG_RevolverBuck = \"ieRevolver_buckshot\";\n+\tpublic static String DMG_RevolverDragon = \"ieRevolver_dragonsbreath\";\n+\tpublic static String DMG_RevolverHoming = \"ieRevolver_homing\";\n+\tpublic static String DMG_RevolverWolfpack = \"ieRevolver_wolfpack\";\n+\tpublic static String DMG_RevolverSilver = \"ieRevolver_silver\";\n+\tpublic static String DMG_RevolverPotion = \"ieRevolver_potion\";\n+\tpublic static String DMG_Crusher = \"ieCrushed\";\n+\tpublic static String DMG_Sawmill = \"ieSawmill\";\n+\tpublic static String DMG_Tesla = \"ieTesla\";\n+\tpublic static String DMG_Acid = \"ieAcid\";\n+\tpublic static String DMG_Railgun = \"ieRailgun\";\n+\tpublic static String DMG_Sawblade = \"ieSawblade\";\n+\tpublic static String DMG_Tesla_prim = \"ieTeslaPrimary\";\n+\tpublic static String DMG_RazorWire = \"ieRazorWire\";\n+\tpublic static String DMG_RazorShock = \"ieRazorShock\";\n+\tpublic static String DMG_WireShock = \"ieWireShock\";\n+\n+\tpublic static final IItemTier MATERIAL_Steel = new IItemTier()\n+\t{\n+\t\t@Override\n+\t\tpublic int getMaxUses()\n+\t\t{\n+\t\t\treturn 641;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic float getEfficiency()\n+\t\t{\n+\t\t\treturn 7F;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic float getAttackDamage()\n+\t\t{\n+\t\t\treturn 3F;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic int getHarvestLevel()\n+\t\t{\n+\t\t\treturn 2;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic int getEnchantability()\n+\t\t{\n+\t\t\treturn 10;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic Ingredient getRepairMaterial()\n+\t\t{\n+\t\t\treturn Ingredient.fromTag(IETags.getTagsFor(EnumMetals.STEEL).ingot);\n+\t\t}\n+\t};\n+\tpublic static final Rarity RARITY_MASTERWORK = Rarity.create(\"IE_MASTERWORK\", TextFormatting.GOLD);\n }\n\\ No newline at end of file",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/Lib.java"
  },
  {
    "sha": "f6885ec4903b9705ba49d3b761921e51472e39cb",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/ManualHelper.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/ManualHelper.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/ManualHelper.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/ManualHelper.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -0,0 +1,62 @@\n+/*\n+ * BluSunrize\n+ * Copyright (c) 2017\n+ *\n+ * This code is licensed under \"Blu's License of Common Sense\"\n+ * Details can be found in the license file in the root folder of this project\n+ */\n+\n+package blusunrize.immersiveengineering.api;\n+\n+import blusunrize.immersiveengineering.api.multiblocks.MultiblockHandler.IMultiblock;\n+import blusunrize.immersiveengineering.api.utils.SetRestrictedField;\n+import blusunrize.lib.manual.ManualInstance;\n+import blusunrize.lib.manual.SpecialManualElement;\n+import net.minecraft.item.ItemStack;\n+\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+\n+/**\n+ * @author BluSunrize - 04.07.2015\n+ */\n+public class ManualHelper\n+{\n+\tpublic static String CAT_GENERAL = \"general\";\n+\tpublic static String CAT_CONSTRUCTION = \"construction\";\n+\tpublic static String CAT_ENERGY = \"energy\";\n+\tpublic static String CAT_MACHINES = \"machines\";\n+\tpublic static String CAT_TOOLS = \"tools\";\n+\tpublic static String CAT_HEAVYMACHINES = \"heavymachines\";\n+\tpublic static String CAT_UPDATE = \"update\";\n+\n+\tpublic static final SetRestrictedField<ManualInstance> IE_MANUAL_INSTANCE = SetRestrictedField.client();\n+\tpublic static final SetRestrictedField<Consumer<Function<String, Object>>> ADD_CONFIG_GETTER = SetRestrictedField.client();\n+\tpublic static final SetRestrictedField<MultiblockElementConstructor> MAKE_MULTIBLOCK_ELEMENT = SetRestrictedField.client();\n+\tpublic static final SetRestrictedField<BlueprintElementConstructor> MAKE_BLUEPRINT_ELEMENT = SetRestrictedField.client();\n+\n+\tpublic static ManualInstance getManual()\n+\t{\n+\t\treturn IE_MANUAL_INSTANCE.getValue();\n+\t}\n+\n+\t/**\n+\t * Adds a new source of information for the \"&lt;config\"-syntax in the IE manual\n+\t *\n+\t * @param newGetter returns either the object for the given key or null\n+\t */\n+\tpublic static void addConfigGetter(Function<String, Object> newGetter)\n+\t{\n+\t\tADD_CONFIG_GETTER.getValue().accept(newGetter);\n+\t}\n+\n+\tpublic interface MultiblockElementConstructor\n+\t{\n+\t\tSpecialManualElement create(IMultiblock multiblock);\n+\t}\n+\n+\tpublic interface BlueprintElementConstructor\n+\t{\n+\t\tSpecialManualElement create(ItemStack... stacks);\n+\t}\n+}"
  },
  {
    "sha": "23f49f92712f31e225f18ee6001565d2fce32e4e",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/TargetingInfo.java",
    "status": "renamed",
    "additions": 51,
    "deletions": 51,
    "changes": 102,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/TargetingInfo.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/TargetingInfo.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/TargetingInfo.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -1,52 +1,52 @@\n-/*\r\n- * BluSunrize\r\n- * Copyright (c) 2017\r\n- *\r\n- * This code is licensed under \"Blu's License of Common Sense\"\r\n- * Details can be found in the license file in the root folder of this project\r\n- */\r\n-\r\n-package blusunrize.immersiveengineering.api;\r\n-\r\n-import net.minecraft.item.ItemUseContext;\r\n-import net.minecraft.nbt.CompoundNBT;\r\n-import net.minecraft.util.Direction;\r\n-\r\n-/**\r\n- * @author BluSunrize - 11.03.2015\r\n- * <p>\r\n- * Similar too MovingObjectPosition.class, but this is specifically designed for sub-targets on a block\r\n- */\r\n-public class TargetingInfo\r\n-{\r\n-\tpublic final Direction side;\r\n-\tpublic final float hitX;\r\n-\tpublic final float hitY;\r\n-\tpublic final float hitZ;\r\n-\r\n-\tpublic TargetingInfo(ItemUseContext ctx)\r\n-\t{\r\n-\t\tthis(ctx.getFace(), (float)ctx.getHitVec().x, (float)ctx.getHitVec().y, (float)ctx.getHitVec().z);\r\n-\t}\r\n-\r\n-\tpublic TargetingInfo(Direction side, float hitX, float hitY, float hitZ)\r\n-\t{\r\n-\t\tthis.side = side;\r\n-\t\tthis.hitX = hitX;\r\n-\t\tthis.hitY = hitY;\r\n-\t\tthis.hitZ = hitZ;\r\n-\t}\r\n-\r\n-\tpublic void writeToNBT(CompoundNBT tag)\r\n-\t{\r\n-\t\ttag.putInt(\"side\", side.ordinal());\r\n-\t\ttag.putFloat(\"hitX\", hitX);\r\n-\t\ttag.putFloat(\"hitY\", hitY);\r\n-\t\ttag.putFloat(\"hitZ\", hitZ);\r\n-\t}\r\n-\r\n-\tpublic static TargetingInfo readFromNBT(CompoundNBT tag)\r\n-\t{\r\n-\t\treturn new TargetingInfo(Direction.byIndex(tag.getInt(\"side\")), tag.getFloat(\"hitX\"), tag.getFloat(\"hitY\"), tag.getFloat(\"hitZ\"));\r\n-\t}\r\n+/*\n+ * BluSunrize\n+ * Copyright (c) 2017\n+ *\n+ * This code is licensed under \"Blu's License of Common Sense\"\n+ * Details can be found in the license file in the root folder of this project\n+ */\n+\n+package blusunrize.immersiveengineering.api;\n+\n+import net.minecraft.item.ItemUseContext;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.util.Direction;\n+\n+/**\n+ * @author BluSunrize - 11.03.2015\n+ * <p>\n+ * Similar too MovingObjectPosition.class, but this is specifically designed for sub-targets on a block\n+ */\n+public class TargetingInfo\n+{\n+\tpublic final Direction side;\n+\tpublic final float hitX;\n+\tpublic final float hitY;\n+\tpublic final float hitZ;\n+\n+\tpublic TargetingInfo(ItemUseContext ctx)\n+\t{\n+\t\tthis(ctx.getFace(), (float)ctx.getHitVec().x, (float)ctx.getHitVec().y, (float)ctx.getHitVec().z);\n+\t}\n+\n+\tpublic TargetingInfo(Direction side, float hitX, float hitY, float hitZ)\n+\t{\n+\t\tthis.side = side;\n+\t\tthis.hitX = hitX;\n+\t\tthis.hitY = hitY;\n+\t\tthis.hitZ = hitZ;\n+\t}\n+\n+\tpublic void writeToNBT(CompoundNBT tag)\n+\t{\n+\t\ttag.putInt(\"side\", side.ordinal());\n+\t\ttag.putFloat(\"hitX\", hitX);\n+\t\ttag.putFloat(\"hitY\", hitY);\n+\t\ttag.putFloat(\"hitZ\", hitZ);\n+\t}\n+\n+\tpublic static TargetingInfo readFromNBT(CompoundNBT tag)\n+\t{\n+\t\treturn new TargetingInfo(Direction.byIndex(tag.getInt(\"side\")), tag.getFloat(\"hitX\"), tag.getFloat(\"hitY\"), tag.getFloat(\"hitZ\"));\n+\t}\n }\n\\ No newline at end of file",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/TargetingInfo.java"
  },
  {
    "sha": "5896156cc1366ea79ad676072664d758c51aca93",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/client/ICacheKeyProvider.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/client/ICacheKeyProvider.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/client/ICacheKeyProvider.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/client/ICacheKeyProvider.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/client/ICacheKeyProvider.java"
  },
  {
    "sha": "7090512c6a46e980659e032a5c3304b45181ff65",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/client/IModelOffsetProvider.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 10,
    "changes": 11,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/client/IModelOffsetProvider.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/client/IModelOffsetProvider.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/client/IModelOffsetProvider.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -20,18 +20,9 @@\n  */\n public interface IModelOffsetProvider\n {\n-\t@Deprecated\n-\tdefault BlockPos getModelOffset(BlockState state)\n-\t{\n-\t\treturn getModelOffset(state, null);\n-\t}\n-\n \t/**\n \t * @param size Size of the bounding box of the parts of the model registered in the JSON file\n \t * @return (x, y, z) to use the model intersected with [x, x+1)x[y, y+1)x[z, z+1) for this block.\n \t */\n-\tdefault BlockPos getModelOffset(BlockState state, @Nullable Vector3i size)\n-\t{\n-\t\treturn getModelOffset(state);\n-\t}\n+\tBlockPos getModelOffset(BlockState state, @Nullable Vector3i size);\n }",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/client/IModelOffsetProvider.java"
  },
  {
    "sha": "699e35765d274887feeafa1e215fdb561c5fcf49",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/client/IVertexBufferHolder.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/client/IVertexBufferHolder.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/client/IVertexBufferHolder.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/client/IVertexBufferHolder.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -27,7 +27,7 @@\n  */\n public interface IVertexBufferHolder\n {\n-\tSetRestrictedField<Function<NonNullSupplier<List<BakedQuad>>, IVertexBufferHolder>> CREATE = new SetRestrictedField<>();\n+\tSetRestrictedField<Function<NonNullSupplier<List<BakedQuad>>, IVertexBufferHolder>> CREATE = SetRestrictedField.client();\n \n \tstatic IVertexBufferHolder create(NonNullSupplier<List<BakedQuad>> getQuads)\n \t{",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/client/IVertexBufferHolder.java"
  },
  {
    "sha": "364a20349dc3497a7a3cbe1d148934ff803577e8",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/client/TextUtils.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/client/TextUtils.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/client/TextUtils.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/client/TextUtils.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -0,0 +1,17 @@\n+package blusunrize.immersiveengineering.api.client;\n+\n+import net.minecraft.util.text.IFormattableTextComponent;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.util.text.Style;\n+import net.minecraft.util.text.TextFormatting;\n+\n+public class TextUtils\n+{\n+\tpublic static IFormattableTextComponent applyFormat(ITextComponent component, TextFormatting... color)\n+\t{\n+\t\tStyle style = component.getStyle();\n+\t\tfor(TextFormatting format : color)\n+\t\t\tstyle = style.applyFormatting(format);\n+\t\treturn component.deepCopy().setStyle(style);\n+\t}\n+}"
  },
  {
    "sha": "e3250f321929025ecc6ebc6a8099c1b1be933f38",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/AlloyRecipe.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/AlloyRecipe.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/AlloyRecipe.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/AlloyRecipe.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/AlloyRecipe.java"
  },
  {
    "sha": "dfc38adc0eba7079f9b5bf4f22d7a64e813da577",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/ArcFurnaceRecipe.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/ArcFurnaceRecipe.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/ArcFurnaceRecipe.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/ArcFurnaceRecipe.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/ArcFurnaceRecipe.java"
  },
  {
    "sha": "570a4b821d80f368da02c38a10d375946ba988ae",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/ArcRecyclingChecker.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/ArcRecyclingChecker.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/ArcRecyclingChecker.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/ArcRecyclingChecker.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/ArcRecyclingChecker.java"
  },
  {
    "sha": "e12a8ec23770db9536e19f58175356bfec1551ec",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/BlastFurnaceFuel.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/BlastFurnaceFuel.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/BlastFurnaceFuel.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/BlastFurnaceFuel.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/BlastFurnaceFuel.java"
  },
  {
    "sha": "2a7d7aafdb12032a2ac6bd7632b73104118dc971",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/BlastFurnaceRecipe.java",
    "status": "renamed",
    "additions": 67,
    "deletions": 67,
    "changes": 134,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/BlastFurnaceRecipe.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/BlastFurnaceRecipe.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/BlastFurnaceRecipe.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -1,68 +1,68 @@\n-/*\r\n- * BluSunrize\r\n- * Copyright (c) 2017\r\n- *\r\n- * This code is licensed under \"Blu's License of Common Sense\"\r\n- * Details can be found in the license file in the root folder of this project\r\n- */\r\n-\r\n-package blusunrize.immersiveengineering.api.crafting;\r\n-\r\n-import blusunrize.immersiveengineering.api.Lib;\r\n-import net.minecraft.item.ItemStack;\r\n-import net.minecraft.item.crafting.IRecipeType;\r\n-import net.minecraft.util.ResourceLocation;\r\n-import net.minecraftforge.fml.RegistryObject;\r\n-\r\n-import javax.annotation.Nonnull;\r\n-import java.util.Collections;\r\n-import java.util.Map;\r\n-\r\n-/**\r\n- * @author BluSunrize - 23.03.2015\r\n- * <br>\r\n- * The recipe for the blast furnace\r\n- */\r\n-public class BlastFurnaceRecipe extends IESerializableRecipe\r\n-{\r\n-\tpublic static IRecipeType<BlastFurnaceRecipe> TYPE = IRecipeType.register(Lib.MODID+\":blast_furnace\");\r\n-\tpublic static RegistryObject<IERecipeSerializer<BlastFurnaceRecipe>> SERIALIZER;\r\n-\r\n-\tpublic final IngredientWithSize input;\r\n-\tpublic final ItemStack output;\r\n-\t@Nonnull\r\n-\tpublic final ItemStack slag;\r\n-\tpublic final int time;\r\n-\r\n-\tpublic BlastFurnaceRecipe(ResourceLocation id, ItemStack output, IngredientWithSize input, int time, @Nonnull ItemStack slag)\r\n-\t{\r\n-\t\tsuper(output, TYPE, id);\r\n-\t\tthis.output = output;\r\n-\t\tthis.input = input;\r\n-\t\tthis.time = time;\r\n-\t\tthis.slag = slag;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tprotected IERecipeSerializer<BlastFurnaceRecipe> getIESerializer()\r\n-\t{\r\n-\t\treturn SERIALIZER.get();\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ItemStack getRecipeOutput()\r\n-\t{\r\n-\t\treturn output;\r\n-\t}\r\n-\r\n-\t// Initialized by reload listener\r\n-\tpublic static Map<ResourceLocation, BlastFurnaceRecipe> recipeList = Collections.emptyMap();\r\n-\r\n-\tpublic static BlastFurnaceRecipe findRecipe(ItemStack input)\r\n-\t{\r\n-\t\tfor(BlastFurnaceRecipe recipe : recipeList.values())\r\n-\t\t\tif(recipe.input.test(input))\r\n-\t\t\t\treturn recipe;\r\n-\t\treturn null;\r\n-\t}\r\n+/*\n+ * BluSunrize\n+ * Copyright (c) 2017\n+ *\n+ * This code is licensed under \"Blu's License of Common Sense\"\n+ * Details can be found in the license file in the root folder of this project\n+ */\n+\n+package blusunrize.immersiveengineering.api.crafting;\n+\n+import blusunrize.immersiveengineering.api.Lib;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.item.crafting.IRecipeType;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraftforge.fml.RegistryObject;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+/**\n+ * @author BluSunrize - 23.03.2015\n+ * <br>\n+ * The recipe for the blast furnace\n+ */\n+public class BlastFurnaceRecipe extends IESerializableRecipe\n+{\n+\tpublic static IRecipeType<BlastFurnaceRecipe> TYPE = IRecipeType.register(Lib.MODID+\":blast_furnace\");\n+\tpublic static RegistryObject<IERecipeSerializer<BlastFurnaceRecipe>> SERIALIZER;\n+\n+\tpublic final IngredientWithSize input;\n+\tpublic final ItemStack output;\n+\t@Nonnull\n+\tpublic final ItemStack slag;\n+\tpublic final int time;\n+\n+\tpublic BlastFurnaceRecipe(ResourceLocation id, ItemStack output, IngredientWithSize input, int time, @Nonnull ItemStack slag)\n+\t{\n+\t\tsuper(output, TYPE, id);\n+\t\tthis.output = output;\n+\t\tthis.input = input;\n+\t\tthis.time = time;\n+\t\tthis.slag = slag;\n+\t}\n+\n+\t@Override\n+\tprotected IERecipeSerializer<BlastFurnaceRecipe> getIESerializer()\n+\t{\n+\t\treturn SERIALIZER.get();\n+\t}\n+\n+\t@Override\n+\tpublic ItemStack getRecipeOutput()\n+\t{\n+\t\treturn output;\n+\t}\n+\n+\t// Initialized by reload listener\n+\tpublic static Map<ResourceLocation, BlastFurnaceRecipe> recipeList = Collections.emptyMap();\n+\n+\tpublic static BlastFurnaceRecipe findRecipe(ItemStack input)\n+\t{\n+\t\tfor(BlastFurnaceRecipe recipe : recipeList.values())\n+\t\t\tif(recipe.input.test(input))\n+\t\t\t\treturn recipe;\n+\t\treturn null;\n+\t}\n }\n\\ No newline at end of file",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/BlastFurnaceRecipe.java"
  },
  {
    "sha": "d51905ff95ef133f8b880b25b1816369ebdcca71",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/BlueprintCraftingRecipe.java",
    "status": "renamed",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/BlueprintCraftingRecipe.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/BlueprintCraftingRecipe.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/BlueprintCraftingRecipe.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -9,11 +9,10 @@\n package blusunrize.immersiveengineering.api.crafting;\n \n import blusunrize.immersiveengineering.api.Lib;\n-import blusunrize.immersiveengineering.common.items.IEItems.Misc;\n-import blusunrize.immersiveengineering.common.util.ItemNBTHelper;\n-import blusunrize.immersiveengineering.common.util.ListUtils;\n+import blusunrize.immersiveengineering.api.utils.SetRestrictedField;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Lists;\n+import net.minecraft.item.Item;\n import net.minecraft.item.ItemStack;\n import net.minecraft.item.crafting.IRecipeType;\n import net.minecraft.util.NonNullList;\n@@ -42,6 +41,7 @@\n \t// Initialized by reload listener\n \tpublic static Map<ResourceLocation, BlueprintCraftingRecipe> recipeList = Collections.emptyMap();\n \tprivate static Map<String, List<BlueprintCraftingRecipe>> recipesByCategory = Collections.emptyMap();\n+\tpublic static SetRestrictedField<Item> blueprintItem = SetRestrictedField.common();\n \n \tpublic String blueprintCategory;\n \tpublic ItemStack output;\n@@ -55,7 +55,7 @@ public BlueprintCraftingRecipe(ResourceLocation id, String blueprintCategory, It\n \t\tthis.inputs = inputs;\n \n \t\tsetInputListWithSizes(Lists.newArrayList(this.inputs));\n-\t\tthis.outputList = ListUtils.fromItem(this.output);\n+\t\tthis.outputList = NonNullList.from(ItemStack.EMPTY, this.output);\n \n \t\t//Time and energy values are for the automatic workbench\n \t\tsetTimeAndEnergy(180, 23040);\n@@ -69,8 +69,8 @@ public BlueprintCraftingRecipe(ResourceLocation id, String blueprintCategory, It\n \n \tpublic static ItemStack getTypedBlueprint(String type)\n \t{\n-\t\tItemStack stack = new ItemStack(Misc.blueprint);\n-\t\tItemNBTHelper.putString(stack, \"blueprint\", type);\n+\t\tItemStack stack = new ItemStack(blueprintItem.getValue());\n+\t\tstack.getOrCreateTag().putString(\"blueprint\", type);\n \t\treturn stack;\n \t}\n ",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/BlueprintCraftingRecipe.java"
  },
  {
    "sha": "2226772d098ed50c8b3dd389ab1d9f56c8aef79b",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/BottlingMachineRecipe.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/BottlingMachineRecipe.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/BottlingMachineRecipe.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/BottlingMachineRecipe.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -10,11 +10,11 @@\n \n import blusunrize.immersiveengineering.api.Lib;\n import blusunrize.immersiveengineering.api.utils.ItemUtils;\n-import blusunrize.immersiveengineering.common.util.ListUtils;\n import com.google.common.collect.Lists;\n import net.minecraft.item.ItemStack;\n import net.minecraft.item.crafting.IRecipeType;\n import net.minecraft.item.crafting.Ingredient;\n+import net.minecraft.util.NonNullList;\n import net.minecraft.util.ResourceLocation;\n import net.minecraftforge.fluids.FluidStack;\n import net.minecraftforge.fml.RegistryObject;\n@@ -45,7 +45,7 @@ public BottlingMachineRecipe(ResourceLocation id, ItemStack output, Ingredient i\n \n \t\tsetInputList(Lists.newArrayList(this.input));\n \t\tthis.fluidInputList = Lists.newArrayList(this.fluidInput);\n-\t\tthis.outputList = ListUtils.fromItem(this.output);\n+\t\tthis.outputList = NonNullList.from(ItemStack.EMPTY, this.output);\n \t}\n \n \t@Override",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/BottlingMachineRecipe.java"
  },
  {
    "sha": "3577fc0f35a3f4399a39055435c7e11d98f50197",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheFertilizer.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheFertilizer.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheFertilizer.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheFertilizer.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/ClocheFertilizer.java"
  },
  {
    "sha": "ac0abb9b51daef57c8dea163ec074bdd36c20e8b",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheRecipe.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheRecipe.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheRecipe.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheRecipe.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/ClocheRecipe.java"
  },
  {
    "sha": "fe3580602042a52d433f6a4b8f87efd8c84f2994",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheRenderFunction.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheRenderFunction.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheRenderFunction.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/ClocheRenderFunction.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/ClocheRenderFunction.java"
  },
  {
    "sha": "c5bb07ab1e8523377bcd6c172326582c315b476f",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/CokeOvenRecipe.java",
    "status": "renamed",
    "additions": 68,
    "deletions": 68,
    "changes": 136,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/CokeOvenRecipe.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/CokeOvenRecipe.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/CokeOvenRecipe.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -1,68 +1,68 @@\n-/*\r\n- * BluSunrize\r\n- * Copyright (c) 2017\r\n- *\r\n- * This code is licensed under \"Blu's License of Common Sense\"\r\n- * Details can be found in the license file in the root folder of this project\r\n- */\r\n-\r\n-package blusunrize.immersiveengineering.api.crafting;\r\n-\r\n-import blusunrize.immersiveengineering.api.Lib;\r\n-import blusunrize.immersiveengineering.api.utils.ItemUtils;\r\n-import net.minecraft.item.ItemStack;\r\n-import net.minecraft.item.crafting.IRecipeType;\r\n-import net.minecraft.util.ResourceLocation;\r\n-import net.minecraftforge.fml.RegistryObject;\r\n-\r\n-import java.util.Collections;\r\n-import java.util.Map;\r\n-\r\n-/**\r\n- * @author BluSunrize - 23.03.2015\r\n- * <br>\r\n- * The recipe for the coke oven\r\n- */\r\n-public class CokeOvenRecipe extends IESerializableRecipe\r\n-{\r\n-\tpublic static IRecipeType<CokeOvenRecipe> TYPE = IRecipeType.register(Lib.MODID+\":coke_oven\");\r\n-\tpublic static RegistryObject<IERecipeSerializer<CokeOvenRecipe>> SERIALIZER;\r\n-\r\n-\tpublic final IngredientWithSize input;\r\n-\tpublic final ItemStack output;\r\n-\tpublic final int time;\r\n-\tpublic final int creosoteOutput;\r\n-\r\n-\tpublic CokeOvenRecipe(ResourceLocation id, ItemStack output, IngredientWithSize input, int time, int creosoteOutput)\r\n-\t{\r\n-\t\tsuper(output, TYPE, id);\r\n-\t\tthis.output = output;\r\n-\t\tthis.input = input;\r\n-\t\tthis.time = time;\r\n-\t\tthis.creosoteOutput = creosoteOutput;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tprotected IERecipeSerializer getIESerializer()\r\n-\t{\r\n-\t\treturn SERIALIZER.get();\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic ItemStack getRecipeOutput()\r\n-\t{\r\n-\t\treturn this.output;\r\n-\t}\r\n-\r\n-\t// Initialized by reload listener\r\n-\tpublic static Map<ResourceLocation, CokeOvenRecipe> recipeList = Collections.emptyMap();\r\n-\r\n-\tpublic static CokeOvenRecipe findRecipe(ItemStack input)\r\n-\t{\r\n-\t\tfor(CokeOvenRecipe recipe : recipeList.values())\r\n-\t\t\tif(ItemUtils.stackMatchesObject(input, recipe.input))\r\n-\t\t\t\treturn recipe;\r\n-\t\treturn null;\r\n-\t}\r\n-\r\n-}\r\n+/*\n+ * BluSunrize\n+ * Copyright (c) 2017\n+ *\n+ * This code is licensed under \"Blu's License of Common Sense\"\n+ * Details can be found in the license file in the root folder of this project\n+ */\n+\n+package blusunrize.immersiveengineering.api.crafting;\n+\n+import blusunrize.immersiveengineering.api.Lib;\n+import blusunrize.immersiveengineering.api.utils.ItemUtils;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.item.crafting.IRecipeType;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraftforge.fml.RegistryObject;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+/**\n+ * @author BluSunrize - 23.03.2015\n+ * <br>\n+ * The recipe for the coke oven\n+ */\n+public class CokeOvenRecipe extends IESerializableRecipe\n+{\n+\tpublic static IRecipeType<CokeOvenRecipe> TYPE = IRecipeType.register(Lib.MODID+\":coke_oven\");\n+\tpublic static RegistryObject<IERecipeSerializer<CokeOvenRecipe>> SERIALIZER;\n+\n+\tpublic final IngredientWithSize input;\n+\tpublic final ItemStack output;\n+\tpublic final int time;\n+\tpublic final int creosoteOutput;\n+\n+\tpublic CokeOvenRecipe(ResourceLocation id, ItemStack output, IngredientWithSize input, int time, int creosoteOutput)\n+\t{\n+\t\tsuper(output, TYPE, id);\n+\t\tthis.output = output;\n+\t\tthis.input = input;\n+\t\tthis.time = time;\n+\t\tthis.creosoteOutput = creosoteOutput;\n+\t}\n+\n+\t@Override\n+\tprotected IERecipeSerializer getIESerializer()\n+\t{\n+\t\treturn SERIALIZER.get();\n+\t}\n+\n+\t@Override\n+\tpublic ItemStack getRecipeOutput()\n+\t{\n+\t\treturn this.output;\n+\t}\n+\n+\t// Initialized by reload listener\n+\tpublic static Map<ResourceLocation, CokeOvenRecipe> recipeList = Collections.emptyMap();\n+\n+\tpublic static CokeOvenRecipe findRecipe(ItemStack input)\n+\t{\n+\t\tfor(CokeOvenRecipe recipe : recipeList.values())\n+\t\t\tif(ItemUtils.stackMatchesObject(input, recipe.input))\n+\t\t\t\treturn recipe;\n+\t\treturn null;\n+\t}\n+\n+}",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/CokeOvenRecipe.java"
  },
  {
    "sha": "1caf5f9ba279f09b2219612c6baef8b72d661a5f",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/CrusherRecipe.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/CrusherRecipe.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/CrusherRecipe.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/CrusherRecipe.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -8,9 +8,8 @@\n \n package blusunrize.immersiveengineering.api.crafting;\n \n+import blusunrize.immersiveengineering.api.ApiUtils;\n import blusunrize.immersiveengineering.api.Lib;\n-import blusunrize.immersiveengineering.common.util.ListUtils;\n-import blusunrize.immersiveengineering.common.util.Utils;\n import com.google.common.base.Preconditions;\n import com.google.common.collect.Lists;\n import net.minecraft.item.ItemStack;\n@@ -48,7 +47,7 @@ public CrusherRecipe(ResourceLocation id, ItemStack output, Ingredient input, in\n \t\tsetTimeAndEnergy(50, energy);\n \n \t\tsetInputList(Lists.newArrayList(this.input));\n-\t\tthis.outputList = ListUtils.fromItem(this.output);\n+\t\tthis.outputList = NonNullList.from(ItemStack.EMPTY, this.output);\n \t}\n \n \t@Override\n@@ -63,7 +62,7 @@ public CrusherRecipe(ResourceLocation id, ItemStack output, Ingredient input, in\n \t\tNonNullList<ItemStack> list = NonNullList.create();\n \t\tlist.add(output);\n \t\tfor(StackWithChance output : secondaryOutputs)\n-\t\t\tif(!output.getStack().isEmpty()&&Utils.RAND.nextFloat() < output.getChance())\n+\t\t\tif(!output.getStack().isEmpty()&&ApiUtils.RANDOM.nextFloat() < output.getChance())\n \t\t\t\tlist.add(output.getStack());\n \t\treturn list;\n \t}",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/CrusherRecipe.java"
  },
  {
    "sha": "a314d97815e23eed3cfa440d1230ba569081043d",
    "filename": "src/api/java/blusunrize/immersiveengineering/api/crafting/FermenterRecipe.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/BluSunrize/ImmersiveEngineering/blob/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/FermenterRecipe.java",
    "raw_url": "https://github.com/BluSunrize/ImmersiveEngineering/raw/713a2b415e6521d0fae6254305b9ed7fcbaea3de/src/api/java/blusunrize/immersiveengineering/api/crafting/FermenterRecipe.java",
    "contents_url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering/contents/src/api/java/blusunrize/immersiveengineering/api/crafting/FermenterRecipe.java?ref=713a2b415e6521d0fae6254305b9ed7fcbaea3de",
    "patch": "@@ -9,11 +9,11 @@\n package blusunrize.immersiveengineering.api.crafting;\n \n import blusunrize.immersiveengineering.api.Lib;\n-import blusunrize.immersiveengineering.common.util.ListUtils;\n import com.google.common.collect.Lists;\n import net.minecraft.fluid.Fluid;\n import net.minecraft.item.ItemStack;\n import net.minecraft.item.crafting.IRecipeType;\n+import net.minecraft.util.NonNullList;\n import net.minecraft.util.ResourceLocation;\n import net.minecraft.util.text.ITextComponent;\n import net.minecraftforge.fluids.FluidStack;\n@@ -47,7 +47,7 @@ public FermenterRecipe(ResourceLocation id, FluidStack fluidOutput, @Nonnull Ite\n \n \t\tsetInputListWithSizes(Lists.newArrayList(this.input));\n \t\tthis.fluidOutputList = Lists.newArrayList(this.fluidOutput);\n-\t\tthis.outputList = ListUtils.fromItem(this.itemOutput);\n+\t\tthis.outputList = NonNullList.from(ItemStack.EMPTY, this.itemOutput);\n \t}\n \n \t@Override",
    "previous_filename": "src/main/java/blusunrize/immersiveengineering/api/crafting/FermenterRecipe.java"
  }
]
