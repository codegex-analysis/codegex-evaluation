[
  {
    "sha": "e43785dc046291bdffbcc955d08084ec81cc1610",
    "filename": ".classpath",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/.classpath",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/.classpath",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/.classpath?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -3,5 +3,7 @@\n \t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER\"/>\n \t<classpathentry kind=\"src\" path=\"src\"/>\n \t<classpathentry kind=\"lib\" path=\"C:/Soft/mysql-connector-java-8.0.23.jar\"/>\n+\t<classpathentry kind=\"lib\" path=\"D:/junit-4.12.jar\"/>\n+\t<classpathentry kind=\"lib\" path=\"D:/hamcrest-core-1.3.jar\"/>\n \t<classpathentry kind=\"output\" path=\"bin\"/>\n </classpath>"
  },
  {
    "sha": "ebcaf52820653058676d5bd30098a9b9bd725c3d",
    "filename": ".settings/org.eclipse.jdt.core.prefs",
    "status": "added",
    "additions": 102,
    "deletions": 0,
    "changes": 102,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/.settings/org.eclipse.jdt.core.prefs",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/.settings/org.eclipse.jdt.core.prefs",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/.settings/org.eclipse.jdt.core.prefs?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -0,0 +1,102 @@\n+eclipse.preferences.version=1\n+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled\n+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore\n+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull\n+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=\n+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault\n+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=\n+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable\n+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=\n+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled\n+org.eclipse.jdt.core.compiler.problem.APILeak=warning\n+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning\n+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore\n+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning\n+org.eclipse.jdt.core.compiler.problem.deadCode=warning\n+org.eclipse.jdt.core.compiler.problem.deprecation=warning\n+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled\n+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled\n+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning\n+org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore\n+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore\n+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore\n+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled\n+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore\n+org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning\n+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning\n+org.eclipse.jdt.core.compiler.problem.forbiddenReference=error\n+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning\n+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled\n+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning\n+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=warning\n+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore\n+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore\n+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning\n+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore\n+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore\n+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled\n+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore\n+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore\n+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled\n+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning\n+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore\n+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning\n+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning\n+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore\n+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning\n+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning\n+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error\n+org.eclipse.jdt.core.compiler.problem.nullReference=warning\n+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error\n+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning\n+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning\n+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore\n+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning\n+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=ignore\n+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore\n+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore\n+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning\n+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning\n+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore\n+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore\n+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore\n+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore\n+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore\n+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled\n+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning\n+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled\n+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled\n+org.eclipse.jdt.core.compiler.problem.suppressWarningsNotFullyAnalysed=info\n+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled\n+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore\n+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning\n+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning\n+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled\n+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning\n+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning\n+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore\n+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning\n+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning\n+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled\n+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info\n+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore\n+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=ignore\n+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore\n+org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName=warning\n+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore\n+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled\n+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled\n+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled\n+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore\n+org.eclipse.jdt.core.compiler.problem.unusedImport=warning\n+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning\n+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning\n+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore\n+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore\n+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled\n+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled\n+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled\n+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=warning\n+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore\n+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning\n+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning"
  },
  {
    "sha": "a8594e930aacaef90b58d84be4479a001a8e2738",
    "filename": "bin/com/divergent/clinicmanagmentsystem/Admin.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Admin.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Admin.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/Admin.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "f83b2280bbb514b0ea79aeefe74f011ae3648932",
    "filename": "bin/com/divergent/clinicmanagmentsystem/Appoinment.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Appoinment.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Appoinment.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/Appoinment.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "793993c3c74d5861d82f66c57dd3970e1702155c",
    "filename": "bin/com/divergent/clinicmanagmentsystem/ClinicDatabase.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/ClinicDatabase.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/ClinicDatabase.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/ClinicDatabase.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "bd8a1c18aa6ed105fb65b33868254941ea102481",
    "filename": "bin/com/divergent/clinicmanagmentsystem/ClinicManagmentSystem.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/ClinicManagmentSystem.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/ClinicManagmentSystem.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/ClinicManagmentSystem.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "620495ce5738961584fdab6bda958c0c34a61889",
    "filename": "bin/com/divergent/clinicmanagmentsystem/CurdDoctor.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/CurdDoctor.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/CurdDoctor.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/CurdDoctor.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "092f0f7e1b0ebf88c93d606703b5a0722e12d87c",
    "filename": "bin/com/divergent/clinicmanagmentsystem/Doctor.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Doctor.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Doctor.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/Doctor.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "a85734cc1ea0318a58958ba3cbbfbe4052c82543",
    "filename": "bin/com/divergent/clinicmanagmentsystem/Drug.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Drug.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Drug.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/Drug.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "7e38aa297fe8ce610cca947959343df86a4a9822",
    "filename": "bin/com/divergent/clinicmanagmentsystem/LabTest.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/LabTest.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/LabTest.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/LabTest.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "b0c3da8f8f2895db3dc6b2cc017b5d35f142a766",
    "filename": "bin/com/divergent/clinicmanagmentsystem/Messages.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Messages.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Messages.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/Messages.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "4aeb377a466eb224a2a23b9db10c7068eb5786a7",
    "filename": "bin/com/divergent/clinicmanagmentsystem/Patient.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Patient.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/Patient.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/Patient.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "0aa27956e596a7321222466aa4ef411bc58bfc75",
    "filename": "bin/com/divergent/clinicmanagmentsystem/PrescriptionAndNotes.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/PrescriptionAndNotes.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/PrescriptionAndNotes.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/PrescriptionAndNotes.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "86a0b5ac58ef81b44b7a777bfcf4e15231197e4d",
    "filename": "bin/com/divergent/clinicmanagmentsystem/messages.properties",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/messages.properties",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/messages.properties",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/messages.properties?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -0,0 +1,30 @@\n+PrescriptionAndNotes.0=Enter Prescription Id\n+PrescriptionAndNotes.1=Enter Patient Id\n+PrescriptionAndNotes.10=com.mysql.cj.jdbc.Driver\n+PrescriptionAndNotes.11=insert into prescription values(?,?,?,?,?)\n+PrescriptionAndNotes.12=1\n+PrescriptionAndNotes.13=2\n+PrescriptionAndNotes.14=3\n+PrescriptionAndNotes.15=4\n+PrescriptionAndNotes.16=5\n+PrescriptionAndNotes.17=Insert successfully\\!\\!\\!\\!\\!\\!\n+PrescriptionAndNotes.18=com.mysql.cj.jdbc.Driver\n+PrescriptionAndNotes.19=select patient.p_id,patient.p_name,patient.gender,patient.age,appoinment.d_id,appoinment.d_name,\\r\\n\n+PrescriptionAndNotes.2=Enter Prescription\n+PrescriptionAndNotes.20=appoinment.problem,appoinment.appoinment_id,appoinment.appoinment_date,\\r\\n\n+PrescriptionAndNotes.21=prescription.dprescription,prescription.dnotes\\r\\n\n+PrescriptionAndNotes.22=from patient inner join appoinment on patient.p_id =  appoinment.p_id   \\r\\n\n+PrescriptionAndNotes.23=inner join prescription on patient.p_id = prescription.p_id\\r\\n\n+PrescriptionAndNotes.24=order by appoinment.appoinment_date desc;\n+PrescriptionAndNotes.25=No record Found\\!\\n\n+PrescriptionAndNotes.26=\\n*-*-*-*-*-*-*-*-*-* History Of Patient *-*-*-*-*-*-*-*-*-*-*-*-*\n+PrescriptionAndNotes.27=\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Patient Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\n+PrescriptionAndNotes.28=%5s  %20s  %3s  %7s  %5s  %20s  %5s  %10s  %15s  %30s  %30s\\n\n+PrescriptionAndNotes.29=*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\n+PrescriptionAndNotes.3=Enter Notes\n+PrescriptionAndNotes.4=Enter doctor id\n+PrescriptionAndNotes.5=1\n+PrescriptionAndNotes.6=2\n+PrescriptionAndNotes.7=3\n+PrescriptionAndNotes.8=4\n+PrescriptionAndNotes.9=5"
  },
  {
    "sha": "9d67ad9fc1adc699a36a08d16cbbf0cffceab47f",
    "filename": "bin/com/divergent/clinicmanagmentsystem/test/TestCase1.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/test/TestCase1.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/test/TestCase1.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/test/TestCase1.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "62a5ce04db07d3591ddadb5eb5d7af01a333bd8c",
    "filename": "bin/com/divergent/clinicmanagmentsystem/test/listofdrug.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/test/listofdrug.class",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/bin/com/divergent/clinicmanagmentsystem/test/listofdrug.class",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/bin/com/divergent/clinicmanagmentsystem/test/listofdrug.class?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b"
  },
  {
    "sha": "7084126049d58984dd729e3b3b2bb7e4f2c4ce92",
    "filename": "src/com/divergent/clinicmanagmentsystem/Admin.java",
    "status": "modified",
    "additions": 23,
    "deletions": 25,
    "changes": 48,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Admin.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Admin.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/Admin.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -1,9 +1,9 @@\n package com.divergent.clinicmanagmentsystem;\n \n-import java.io.Console;\n import java.sql.Connection;\n import java.sql.DriverManager;\n import java.sql.ResultSet;\n+import java.sql.SQLException;\n import java.sql.Statement;\n import java.util.Scanner;\n \n@@ -14,32 +14,27 @@\n  *\n  */\n public class Admin {\n-\tPatient patient = new Patient();\n-\tDrug drug = new Drug();\n-\tLabTest labtest = new LabTest();\n-\tCurdDoctor doctor = new CurdDoctor();\n-\tAppoinment appoin = new Appoinment();\n \tScanner sc = new Scanner(System.in);\n \n \t/**\n \t * Admin Login\n \t * \n \t * @return\n+\t * @throws SQLException\n \t */\n-\tpublic boolean adminLogin() {\n-\n-\t\tConsole cons = System.console();\n+\tpublic boolean adminLogin() throws SQLException {\n \t\tSystem.out.println(\"\\n-----Admin Login------\");\n \t\tSystem.out.print(\"\\nEnter Username: \");\n \t\tString username = sc.nextLine();\n \t\tSystem.out.print(\"\\nEnter Password: \");\n \t\tString password = sc.nextLine();\n \n \t\tConnection con = null;\n+\t\tStatement st = null;\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tcon = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user, ClinicDatabase.password);\n-\t\t\tStatement st = con.createStatement();\n+\t\t\tcon = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME, ClinicDatabase.PASSWORD);\n+\t\t\tst = con.createStatement();\n \t\t\tResultSet rs = st.executeQuery(\"select * from administration where a_username = '\" + username\n \t\t\t\t\t+ \"' && a_password = '\" + password + \"'\");\n \t\t\tif (rs.next()) {\n@@ -52,24 +47,23 @@ public boolean adminLogin() {\n \t\t} catch (Exception e) {\n \t\t\tSystem.out.println(\"error with database\");\n \t\t} finally {\n-\t\t\ttry {\n-\t\t\t\tcon.close();\n-\t\t\t} catch (Exception e) {\n-\t\t\t\tSystem.out.println(\"Connection problem\");\n-\t\t\t}\n+\t\t\tst.close();\n+\t\t\tcon.close();\n+\t\t\tSystem.out.println(\"Connection problem\");\n \t\t}\n \t\treturn false;\n \t}\n \n \tpublic void printAdminOptions() {\n-\t\t while (true) {\n+\t\twhile (true) {\n \t\t\texecutedMethod();\n \t\t}\n \t}\n \n-\tprivate void executedMethod() {\n+\tstatic void executedMethod() {\n+\t\tScanner sc = new Scanner(System.in);\n \t\tSystem.out.println(\"\\n----Admin Panel-----\");\n-\t\tSystem.out.println(\"1.\tPatient\");\n+\t\tSystem.out.println(\"1.  Patient\");\n \t\tSystem.out.println(\"2. \tDoctor\");\n \t\tSystem.out.println(\"3. \tDrug\");\n \t\tSystem.out.println(\"4.\tLab Test\");\n@@ -81,23 +75,27 @@ private void executedMethod() {\n \n \t\tswitch (input) {\n \t\tcase 1:\n-\t\t\tpatient.patientPanel();\n+\t\t\tPatient.patientPanel();\n \t\t\tbreak;\n \t\tcase 2:\n-\t\t\tdoctor.docterPanel();\n+\t\t\tCurdDoctor.docterPanel();\n \t\t\tbreak;\n \t\tcase 3:\n-\t\t\tdrug.drugPanel();\n+\t\t\tDrug.drugPanel();\n \t\t\tbreak;\n \t\tcase 4:\n-\t\t\tlabtest.labTestPanel();\n+\t\t\tLabTest.labTestPanel();\n \t\t\tbreak;\n \t\tcase 5:\n-\t\t\tappoin.appoinmentPanel();\n+\t\t\tAppoinment.appoinmentPanel();\n \t\t\tbreak;\n \t\tcase 6:\n \t\t\tSystem.out.println(\"Logout Successfully\");\n-\t\t\tClinicManagmentSystem.startAgain();\n+\t\t\ttry {\n+\t\t\t\tClinicManagmentSystem.startAgain();\n+\t\t\t} catch (SQLException e) {\n+\t\t\t\te.printStackTrace();\n+\t\t\t}\n \t\t\tbreak;\n \t\tdefault:\n \t\t\tSystem.out.println(\"Back\");"
  },
  {
    "sha": "a2aecaf4b5d3fae95db67db14c491df50f062d16",
    "filename": "src/com/divergent/clinicmanagmentsystem/Appoinment.java",
    "status": "modified",
    "additions": 23,
    "deletions": 22,
    "changes": 45,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Appoinment.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Appoinment.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/Appoinment.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -18,7 +18,12 @@\n  */\n public class Appoinment {\n \n-\tstatic Doctor doctor = new Doctor();\n+\t/**\n+\t * Make Private Custructor\n+\t */\n+\tprivate Appoinment() {\n+\n+\t}\n \n \t/**\n \t * Get Patient Information\n@@ -42,7 +47,7 @@\n \t\tSystem.out.println(\"Enter Patient Id\");\n \t\tString patientid = sc.nextLine();\n \n-\t\tMap<String, String> map = new HashMap<String, String>();\n+\t\tMap<String, String> map = new HashMap<>();\n \t\tmap.put(\"1\", appoinid);\n \t\tmap.put(\"2\", patientname);\n \t\tmap.put(\"3\", doctername);\n@@ -59,8 +64,8 @@\n \tpublic static void appoinmentPanel() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tString sql = (\"insert into appoinment values(?,?,?,?,?,?,?,?)\");\n \t\t\tPreparedStatement stmt = con.prepareStatement(sql);\n \t\t\tMap<String, String> map = inputLabTestData();\n@@ -87,31 +92,27 @@ public static void appoinmentPanel() {\n \tpublic static void showAllAppoinment() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tString sql = \"select * from appoinment\";\n \t\t\tResultSet rs = st.executeQuery(sql);\n-\t\t\tif (!rs.next()) {\n-\t\t\t\tSystem.out.println(\"No Record Is Found!\\n\");\n-\t\t\t\tdoctor.printDoctorOptions();\n-\t\t\t} else {\n-\t\t\t\tSystem.out.println(\n-\t\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Appointmenr Patient Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n-\t\t\t\tint appoin_id = rs.getInt(1);\n-\t\t\t\tString p_name = rs.getString(2);\n-\t\t\t\tString d_name = rs.getString(3);\n+\t\t\tSystem.out.println(\n+\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Appointmenr Patient Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\twhile (rs.next()) {\n+\t\t\t\tint appoinid = rs.getInt(1);\n+\t\t\t\tString pname = rs.getString(2);\n+\t\t\t\tString dname = rs.getString(3);\n \t\t\t\tString problem = rs.getString(4);\n \t\t\t\tString appinDate = rs.getString(5);\n \t\t\t\tDate currentDate = rs.getDate(6);\n-\t\t\t\tString d_id = rs.getString(7);\n-\t\t\t\tString p_id = rs.getString(8);\n-\t\t\t\tSystem.out.printf(\"%6s  %15s  %15s  %20s  %12s  %12s  %5s  %5s\\n\", appoin_id, p_name, d_name, problem,\n-\t\t\t\t\t\tappinDate, currentDate, d_id, p_id);\n-\n-\t\t\t\tSystem.out.println(\n-\t\t\t\t\t\t\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\t\tString did = rs.getString(7);\n+\t\t\t\tString pid = rs.getString(8);\n+\t\t\t\tSystem.out.printf(\"%6s  %15s  %15s  %20s  %12s  %12s  %5s  %5s\\n\", appoinid, pname, dname, problem,\n+\t\t\t\t\t\tappinDate, currentDate, did, pid);\n \t\t\t}\n+\t\t\tSystem.out.println(\n+\t\t\t\t\t\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n \t\t\tst.close();\n \t\t\tcon.close();\n "
  },
  {
    "sha": "a1dd400e27377954f22d2a8abd28bbe501a2d527",
    "filename": "src/com/divergent/clinicmanagmentsystem/ClinicDatabase.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/ClinicDatabase.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/ClinicDatabase.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/ClinicDatabase.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -7,7 +7,7 @@\n  *\n  */\n public interface ClinicDatabase {\n-\tfinal String url = \"jdbc:mysql://localhost:3306/clinic_Managment_System\";\n-\tfinal String user = \"root\";\n-\tfinal String password = \"root\";\n+\tfinal String URL = \"jdbc:mysql://localhost:3306/clinic_Managment_System\";\n+\tfinal String USERNAME = \"root\";\n+\tfinal String PASSWORD = \"root\";\n }"
  },
  {
    "sha": "b7226a1e010610f657c928d94a759a3627e90dbf",
    "filename": "src/com/divergent/clinicmanagmentsystem/ClinicManagmentSystem.java",
    "status": "modified",
    "additions": 17,
    "deletions": 16,
    "changes": 33,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/ClinicManagmentSystem.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/ClinicManagmentSystem.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/ClinicManagmentSystem.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -1,5 +1,6 @@\n package com.divergent.clinicmanagmentsystem;\n \n+import java.sql.SQLException;\n import java.util.Scanner;\n \n /**\n@@ -14,41 +15,39 @@\n \t * Main Method\n \t * \n \t * @param args\n+\t * @throws SQLException\n \t */\n-\tpublic static void main(String[] args) {\n+\tpublic static void main(String[] args) throws SQLException {\n \t\tstartAgain();\n \t}\n \n \t/**\n \t * Admin Start Method\n+\t * \n+\t * @throws SQLException\n \t */\n-\tpublic static void startAgain() {\n+\tpublic static void startAgain() throws SQLException {\n \t\tAdmin admin = new Admin();\n \t\tDoctor doctor = new Doctor();\n \t\tScanner sc = new Scanner(System.in);\n-\n-\t\tMain: while (true) {\n-\n+\t\twhile (true) {\n \t\t\tSystem.out.println(\"\\n----Login Panel----\");\n \t\t\tSystem.out.println(\"1. Admin\");\n \t\t\tSystem.out.println(\"2. Doctor\");\n \t\t\tSystem.out.println(\"3. Exit\");\n-\n \t\t\tString input = sc.nextLine();\n-\n-\t\t\tLogin: switch (input) {\n-\n+\t\t\tswitch (input) {\n \t\t\tcase \"1\":\n \t\t\t\tif (admin.adminLogin()) {\n \t\t\t\t\twhile (true) {\n \t\t\t\t\t\tadmin.printAdminOptions();\n \t\t\t\t\t\tif (sc.nextLine().equals(\"6\")) {\n-\t\t\t\t\t\t\tbreak Login;\n+\t\t\t\t\t\t\tstartAgain();\n+\t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tSystem.out.println(\"Select Right Option\");\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n-\n \t\t\t\t} else {\n \t\t\t\t\tSystem.out.println(\"You are not Authorised\");\n \t\t\t\t}\n@@ -57,11 +56,12 @@ public static void startAgain() {\n \t\t\tcase \"2\":\n \t\t\t\tif (doctor.doctorLogin()) {\n \t\t\t\t\twhile (true) {\n-\t\t\t\t\t\tdoctor.printDoctorOptions();\n+\t\t\t\t\t\tDoctor.printDoctorOptions();\n \t\t\t\t\t\tif (sc.nextLine().equals(\"5\")) {\n-\t\t\t\t\t\t\tbreak Login;\n+\t\t\t\t\t\t\tstartAgain();\n+\t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t} else {\n-\t\tSystem.out.println(\"Select Right Option\");\n+\t\t\t\t\t\t\tSystem.out.println(\"Select Right Option\");\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \n@@ -71,13 +71,14 @@ public static void startAgain() {\n \t\t\t\tbreak;\n \n \t\t\tcase \"3\":\n-\t\t\t\tbreak Main;\n+\t\t\t\tSystem.exit(0);\n+\t\t\t\tbreak;\n \n \t\t\tdefault:\n \t\t\t\tSystem.out.println(\"Invalid Input\");\n \t\t\t\tbreak;\n \t\t\t}\n-\n+\t\t\tsc.close();\n \t\t}\n \t}\n }"
  },
  {
    "sha": "c4bb3fc60af7cb1f839388ef8e001595fc909aeb",
    "filename": "src/com/divergent/clinicmanagmentsystem/CurdDoctor.java",
    "status": "modified",
    "additions": 38,
    "deletions": 45,
    "changes": 83,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/CurdDoctor.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/CurdDoctor.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/CurdDoctor.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -1,7 +1,6 @@\n package com.divergent.clinicmanagmentsystem;\n \n import java.sql.Connection;\n-import java.sql.Date;\n import java.sql.DriverManager;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n@@ -14,6 +13,10 @@\n \n \tstatic Scanner sc = new Scanner(System.in);\n \n+\tprivate CurdDoctor() {\n+\n+\t}\n+\n \t/**\n \t * It show Option on console\n \t */\n@@ -30,7 +33,7 @@ public static void showCRUDDoctor() {\n \t * It Select Option on Console Panel to choice on It.\n \t */\n \tpublic static void docterPanel() {\n-\t\tback: while (true) {\n+\t\twhile (true) {\n \t\t\tSystem.out.println(\"Enter Your Choice : \");\n \n \t\t\tshowCRUDDoctor();\n@@ -52,7 +55,8 @@ public static void docterPanel() {\n \t\t\t\tlistAllDoctor();\n \t\t\t\tbreak;\n \t\t\tcase \"6\":\n-\t\t\t\tbreak back;\n+\t\t\t\tAdmin.executedMethod();\n+\t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\tbreak;\n \t\t\t}\n@@ -66,25 +70,25 @@ public static void docterPanel() {\n \t */\n \tpublic static Map<String, String> inputDoctorData() {\n \t\tSystem.out.println(\"Enter Doctor_Id\");\n-\t\tString d_id = sc.nextLine();\n+\t\tString did = sc.nextLine();\n \t\tSystem.out.println(\"Enter Doctor Name\");\n-\t\tString d_name = sc.nextLine();\n+\t\tString dname = sc.nextLine();\n \t\tSystem.out.println(\"Enter Speciaslity\");\n-\t\tString d_specia = sc.nextLine();\n+\t\tString dspecia = sc.nextLine();\n \t\tSystem.out.println(\"Enter ContactNo\");\n-\t\tString d_contact = sc.nextLine();\n+\t\tString dcontact = sc.nextLine();\n \t\tSystem.out.println(\"Enter Fee\");\n-\t\tString d_fee = sc.nextLine();\n+\t\tString dfee = sc.nextLine();\n \t\tSystem.out.println(\"Enter Degree\");\n-\t\tString d_degree = sc.nextLine();\n+\t\tString ddegree = sc.nextLine();\n \n-\t\tMap<String, String> map = new HashMap<String, String>();\n-\t\tmap.put(\"1\", d_id);\n-\t\tmap.put(\"2\", d_name);\n-\t\tmap.put(\"3\", d_specia);\n-\t\tmap.put(\"4\", d_contact);\n-\t\tmap.put(\"5\", d_fee);\n-\t\tmap.put(\"6\", d_degree);\n+\t\tMap<String, String> map = new HashMap<>();\n+\t\tmap.put(\"1\", did);\n+\t\tmap.put(\"2\", dname);\n+\t\tmap.put(\"3\", dspecia);\n+\t\tmap.put(\"4\", dcontact);\n+\t\tmap.put(\"5\", dfee);\n+\t\tmap.put(\"6\", ddegree);\n \t\treturn map;\n \t}\n \n@@ -94,8 +98,8 @@ public static void docterPanel() {\n \tpublic static void insertDoctorData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tString sql = (\"insert into doctor values(?,?,?,?,?,?)\");\n \t\t\tPreparedStatement stmt = con.prepareStatement(sql);\n \t\t\tMap<String, String> map = inputDoctorData();\n@@ -106,7 +110,7 @@ public static void insertDoctorData() {\n \t\t\tstmt.setString(5, map.get(\"5\"));\n \t\t\tstmt.setString(6, map.get(\"6\"));\n \t\t\tint i = stmt.executeUpdate();\n-\t\t\tSystem.out.println(\"Insert successfully!!!!!!\");\n+\t\t\tSystem.out.println(\"Insert successfully!!!!!!\" + i);\n \t\t\tcon.close();\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n@@ -120,9 +124,7 @@ public static void updateDoctorData() {\n \n \t\tSystem.out.println(\"\\n----Update Doctor----\");\n \t\tSystem.out.print(\"\\nEnter Doctor Id : \");\n-\n-\t\tScanner sc = new Scanner(System.in);\n-\n+\t\tsc = new Scanner(System.in);\n \t\tString did = sc.nextLine();\n \n \t\tMap<String, String> map = searchDoctorId(did);\n@@ -149,9 +151,9 @@ public static void updateDoctorData() {\n \t\t\tmap.put(\"dfee\", sc.nextLine());\n \t\t\tSystem.out.println(\"\\nEnter New Doctor Degree : \");\n \t\t\tmap.put(\"ddegree\", sc.nextLine());\n-\n \t\t\tupdateDoctor(map);\n \t\t}\n+\t\tsc.close();\n \t}\n \n \t/**\n@@ -160,21 +162,18 @@ public static void updateDoctorData() {\n \t * @param map\n \t */\n \tpublic static void updateDoctor(Map<String, String> map) {\n-\n \t\tConnection con = null;\n \t\tStatement st = null;\n-\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tcon = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user, ClinicDatabase.password);\n+\t\t\tcon = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME, ClinicDatabase.PASSWORD);\n \t\t\tst = con.createStatement();\n \t\t\tst.executeUpdate(\"update doctor set dname = '\" + map.get(\"dname\") + \"', Speciality = '\"\n \t\t\t\t\t+ map.get(\"speciality\") + \"',contact_no = '\" + map.get(\"dcontact\") + \"',fee = '\" + map.get(\"dfee\")\n \t\t\t\t\t+ \"',degree ='\" + map.get(\"ddegree\") + \"' where d_id = \" + map.get(\"did\"));\n \t\t\tSystem.out.println(\"Data Updated Successfully...\");\n \t\t\tst.close();\n \t\t\tcon.close();\n-\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n \t\t}\n@@ -186,18 +185,16 @@ public static void updateDoctor(Map<String, String> map) {\n \t * @param did\n \t * @return\n \t */\n-\tpublic static Map searchDoctorId(String did) {\n+\tpublic static Map<String, String> searchDoctorId(String did) {\n \n \t\tConnection con = null;\n \t\tStatement st = null;\n \t\tMap<String, String> map = new HashMap<>();\n \t\ttry {\n-\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tcon = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user, ClinicDatabase.password);\n+\t\t\tcon = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME, ClinicDatabase.PASSWORD);\n \t\t\tst = con.createStatement();\n \t\t\tResultSet rs = st.executeQuery(\"select * from doctor where d_id = '\" + did + \"'\");\n-\n \t\t\tif (rs.next()) {\n \t\t\t\tmap.put(\"did\", rs.getString(1));\n \t\t\t\tmap.put(\"dname\", rs.getString(2));\n@@ -209,7 +206,6 @@ public static Map searchDoctorId(String did) {\n \t\t\t} else {\n \t\t\t\treturn map;\n \t\t\t}\n-\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n \t\t}\n@@ -224,8 +220,8 @@ public static Map searchDoctorId(String did) {\n \tpublic static void searchDoctorData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tSystem.out.println(\"Enter Doctor Id : \");\n \t\t\tString id = sc.nextLine();\n@@ -259,13 +255,13 @@ public static void searchDoctorData() {\n \tpublic static void deleteDoctorData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tSystem.out.println(\"Enter Doctor Id\");\n \t\t\tString did = sc.nextLine();\n \t\t\tint result = st.executeUpdate(\"delete from doctor where d_id='\" + did + \"';\");\n-\t\t\tSystem.out.println(\"Delete SuccessFully....\");\n+\t\t\tSystem.out.println(\"Delete SuccessFully....\" + result);\n \t\t\tcon.close();\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n@@ -278,17 +274,14 @@ public static void deleteDoctorData() {\n \tpublic static void listAllDoctor() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tString sql = \"select * from doctor\";\n \t\t\tResultSet rs = st.executeQuery(sql);\n-\t\t\tif (!rs.next()) {\n-\t\t\t\tSystem.out.println(\"No Record Found!\\n\");\n-\t\t\t\tdocterPanel();\n-\t\t\t} else {\n-\t\t\t\tSystem.out.println(\n-\t\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Docter Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\tSystem.out.println(\n+\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Docter Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\twhile (rs.next()) {\n \t\t\t\tString did = rs.getString(1);\n \t\t\t\tString dname = rs.getString(2);\n \t\t\t\tString specia = rs.getString(3);"
  },
  {
    "sha": "eacb625bac165d2313c77bb0d4e23cebba3db5db",
    "filename": "src/com/divergent/clinicmanagmentsystem/Doctor.java",
    "status": "modified",
    "additions": 17,
    "deletions": 14,
    "changes": 31,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Doctor.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Doctor.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/Doctor.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -15,45 +15,47 @@\n  */\n public class Doctor {\n \n-\tScanner sc = new Scanner(System.in);\n-\tPatient patient = new Patient();\n-\tAppoinment appoin = new Appoinment();\n-\tPrescriptionAndNotes pandn = new PrescriptionAndNotes();\n-\n \t/**\n \t * Get Doctor Data\n \t */\n-\tpublic void printDoctorOptions() {\n+\tpublic static void printDoctorOptions() {\n+\t\tScanner sc = new Scanner(System.in);\n \t\twhile (true) {\n \t\t\tSystem.out.println(\"\\nDoctor Panel\");\n \t\t\tSystem.out.println(\"1. List of patient\");\n \t\t\tSystem.out.println(\"2. Add prescription and notes for a patient\");\n \t\t\tSystem.out.println(\"3. See booked appointments for him\");\n \t\t\tSystem.out.println(\"4. Check patient history and his prescription\");\n \t\t\tSystem.out.println(\"5. Generate Invoice\");\n-\t\t\tSystem.out.println(\"5. Logout\");\n+\t\t\tSystem.out.println(\"6. Logout\");\n \t\t\tSystem.out.print(\"Enter Your Choice: \");\n \n \t\t\tint input = sc.nextInt();\n \n \t\t\tswitch (input) {\n \t\t\tcase 1:\n-\t\t\t\tpatient.listAllPatientData();\n+\t\t\t\tPatient.listAllPatientData();\n \t\t\t\tbreak;\n \t\t\tcase 2:\n-\t\t\t\tpandn.prescriptionPatient();\n+\t\t\t\tPrescriptionAndNotes.prescriptionPatient();\n \t\t\t\tbreak;\n \t\t\tcase 3:\n-\t\t\t\tappoin.showAllAppoinment();\n+\t\t\t\tAppoinment.showAllAppoinment();\n \t\t\t\tbreak;\n \t\t\tcase 4:\n-\t\t\t\tpandn.historyAndPresciption();\n+\t\t\t\tPrescriptionAndNotes.historyAndPresciption();\n \t\t\t\tbreak;\n \t\t\tcase 5:\n-\t\t\t\tpatient.generateInvoice();\n+\t\t\t\tPatient.generateInvoice();\n+\t\t\t\tbreak;\n \t\t\tcase 6:\n \t\t\t\tSystem.out.println(\"Logout Successfully\");\n-\t\t\t\tClinicManagmentSystem.startAgain();\n+\t\t\t\ttry {\n+\t\t\t\t\tClinicManagmentSystem.startAgain();\n+\t\t\t\t} catch (SQLException e) {\n+\n+\t\t\t\t\te.printStackTrace();\n+\t\t\t\t}\n \t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\tSystem.out.println(\"Choice Right Option\");\n@@ -79,7 +81,7 @@ public boolean doctorLogin() {\n \t\tStatement st = null;\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tcon = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user, ClinicDatabase.password);\n+\t\t\tcon = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME, ClinicDatabase.PASSWORD);\n \t\t\tst = con.createStatement();\n \t\t\tResultSet rs = st.executeQuery(\"select * from administration where a_username = '\" + username\n \t\t\t\t\t+ \"' && a_password = '\" + password + \"'\");\n@@ -94,6 +96,7 @@ public boolean doctorLogin() {\n \t\t} catch (ClassNotFoundException | SQLException e) {\n \t\t\te.printStackTrace();\n \t\t}\n+\t\tsc.close();\n \t\treturn false;\n \t}\n "
  },
  {
    "sha": "d9915642bcd72e622d24d4304fad1be6b9847e8b",
    "filename": "src/com/divergent/clinicmanagmentsystem/Drug.java",
    "status": "modified",
    "additions": 35,
    "deletions": 39,
    "changes": 74,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Drug.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Drug.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/Drug.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -19,6 +19,10 @@\n \n \tstatic Scanner sc = new Scanner(System.in);\n \n+\tprivate Drug() {\n+\n+\t}\n+\n \t/**\n \t * Show All Option\n \t */\n@@ -34,18 +38,16 @@ public static void showCRUDDrug() {\n \t/**\n \t * Get all Panel Option\n \t */\n-\tpublic void drugPanel() {\n-\t\tback: while (true) {\n+\tpublic static void drugPanel() {\n+\t\twhile (true) {\n \t\t\tSystem.out.println(\"Enter Your Choice : \");\n-\n \t\t\tshowCRUDDrug();\n \t\t\tString input = sc.nextLine();\n \t\t\tswitch (input) {\n \t\t\tcase \"1\":\n \t\t\t\tinsertDrugData();\n \t\t\t\tbreak;\n \t\t\tcase \"2\":\n-\t\t\t\tupdateDrugDoctor();\n \t\t\t\tbreak;\n \t\t\tcase \"3\":\n \t\t\t\tsearchDrugData();\n@@ -57,7 +59,8 @@ public void drugPanel() {\n \t\t\t\tlistAllDrug();\n \t\t\t\tbreak;\n \t\t\tcase \"6\":\n-\t\t\t\tbreak back;\n+\t\t\t\tAdmin.executedMethod();\n+\t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\tbreak;\n \t\t\t}\n@@ -71,53 +74,49 @@ public void drugPanel() {\n \t */\n \tpublic static Map<String, String> inputDoctorData() {\n \t\tSystem.out.println(\"Enter Drug_Id\");\n-\t\tString d_id = sc.nextLine();\n+\t\tString did = sc.nextLine();\n \t\tSystem.out.println(\"Enter Drug Name\");\n-\t\tString d_name = sc.nextLine();\n+\t\tString dname = sc.nextLine();\n \t\tSystem.out.println(\"Enter Drug Rate\");\n-\t\tString d_rate = sc.nextLine();\n+\t\tString drate = sc.nextLine();\n \n-\t\tMap<String, String> map = new HashMap<String, String>();\n-\t\tmap.put(\"1\", d_id);\n-\t\tmap.put(\"2\", d_name);\n-\t\tmap.put(\"3\", d_rate);\n+\t\tMap<String, String> map = new HashMap<>();\n+\t\tmap.put(\"1\", did);\n+\t\tmap.put(\"2\", dname);\n+\t\tmap.put(\"3\", drate);\n \t\treturn map;\n \t}\n \n \t/**\n \t * Insert all Drug Data\n \t */\n-\tpublic void insertDrugData() {\n+\tpublic static void insertDrugData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tString sql = (\"insert into drug values(?,?,?)\");\n \t\t\tPreparedStatement stmt = con.prepareStatement(sql);\n \t\t\tMap<String, String> map = inputDoctorData();\n \t\t\tstmt.setString(1, map.get(\"1\"));\n \t\t\tstmt.setString(2, map.get(\"2\"));\n \t\t\tstmt.setString(3, map.get(\"3\"));\n \t\t\tint i = stmt.executeUpdate();\n-\t\t\tSystem.out.println(\"Insert successfully!!!!!!\");\n+\t\t\tSystem.out.println(\"Insert successfully!!!!!!\" + i);\n \t\t\tcon.close();\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n \t\t}\n \t}\n \n-\tpublic void updateDrugDoctor() {\n-\n-\t}\n-\n \t/**\n \t * Search Drug Data\n \t */\n-\tpublic void searchDrugData() {\n+\tpublic static void searchDrugData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tSystem.out.println(\"Enter Drug Id : \");\n \t\t\tString id = sc.nextLine();\n@@ -145,16 +144,16 @@ public void searchDrugData() {\n \t/**\n \t * Delete Drug Data\n \t */\n-\tpublic void deleteDrugData() {\n+\tpublic static void deleteDrugData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tSystem.out.println(\"Enter Drug Id\");\n \t\t\tString did = sc.nextLine();\n \t\t\tint result = st.executeUpdate(\"delete from drug where d_id='\" + did + \"';\");\n-\t\t\tSystem.out.println(\"Delete SuccessFully....\");\n+\t\t\tSystem.out.println(\"Delete SuccessFully....\" + result);\n \t\t\tcon.close();\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n@@ -164,28 +163,25 @@ public void deleteDrugData() {\n \t/**\n \t * Show All Drug List\n \t */\n-\tpublic void listAllDrug() {\n+\tpublic static void listAllDrug() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tString sql = \"select * from drug\";\n \t\t\tResultSet rs = st.executeQuery(sql);\n-\n-\t\t\tif (!rs.next()) {\n-\t\t\t\tSystem.out.println(\"No record Is Found!\\n\");\n-\t\t\t\tdrugPanel();\n-\t\t\t} else {\n-\t\t\t\tSystem.out.println(\n-\t\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Drug Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\tSystem.out.println(\n+\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Drug Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\twhile (rs.next()) {\n \t\t\t\tString did = rs.getString(1);\n \t\t\t\tString dname = rs.getString(2);\n \t\t\t\tString rate = rs.getString(3);\n \t\t\t\tSystem.out.printf(\"%5s  %20s  %25s  \\n\", did, dname, rate);\n-\t\t\t\tSystem.out.println(\n-\t\t\t\t\t\t\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n \t\t\t}\n+\t\t\tSystem.out.println(\n+\t\t\t\t\t\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\n \t\t\tdrugPanel();\n \t\t\tst.close();\n \t\t\tcon.close();"
  },
  {
    "sha": "b43cbc40a7469bd5b781e8956c1136ac2c39fab0",
    "filename": "src/com/divergent/clinicmanagmentsystem/LabTest.java",
    "status": "modified",
    "additions": 35,
    "deletions": 25,
    "changes": 60,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/LabTest.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/LabTest.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/LabTest.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -19,6 +19,13 @@\n  */\n public class LabTest {\n \n+\t/**\n+\t * Make Custructor\n+\t */\n+\tprivate LabTest() {\n+\n+\t}\n+\n \t/**\n \t * Show All Operation on Console\n \t */\n@@ -34,9 +41,9 @@ public static void showCRUDDrug() {\n \t/**\n \t * Lab Test Panel\n \t */\n-\tpublic void labTestPanel() {\n+\tpublic static void labTestPanel() {\n \t\tScanner sc = new Scanner(System.in);\n-\t\tback: while (true) {\n+\t\twhile (true) {\n \t\t\tSystem.out.println(\"Enter Your Choice : \");\n \n \t\t\tshowCRUDDrug();\n@@ -58,10 +65,12 @@ public void labTestPanel() {\n \t\t\t\tlistAllLabTest();\n \t\t\t\tbreak;\n \t\t\tcase \"6\":\n-\t\t\t\tbreak back;\n+\t\t\t\tAdmin.executedMethod();\n+\t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\tbreak;\n \t\t\t}\n+\t\t\tsc.close();\n \t\t}\n \t}\n \n@@ -82,22 +91,23 @@ public void labTestPanel() {\n \t\tint rate = sc.nextInt();\n \t\tString ratestring = Integer.toString(rate);\n \n-\t\tMap<String, String> map = new HashMap<String, String>();\n+\t\tMap<String, String> map = new HashMap<>();\n \t\tmap.put(\"1\", lbid);\n \t\tmap.put(\"2\", pid);\n \t\tmap.put(\"3\", testname);\n \t\tmap.put(\"4\", ratestring);\n+\t\tsc.close();\n \t\treturn map;\n \t}\n \n \t/**\n \t * Insert Lab Test Data\n \t */\n-\tpublic void insertLabTestData() {\n+\tpublic static void insertLabTestData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tString sql = (\"insert into lab_test values(?,?,?,?,?)\");\n \t\t\tPreparedStatement stmt = con.prepareStatement(sql);\n \t\t\tMap<String, String> map = inputLabTestData();\n@@ -109,7 +119,7 @@ public void insertLabTestData() {\n \t\t\tstmt.setDate(4, date);\n \t\t\tstmt.setString(5, map.get(\"4\"));\n \t\t\tint i = stmt.executeUpdate();\n-\t\t\tSystem.out.println(\"Insert successfully!!!!!!\");\n+\t\t\tSystem.out.println(\"Insert successfully!!!!!!\" + i);\n \t\t\tcon.close();\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n@@ -119,19 +129,19 @@ public void insertLabTestData() {\n \t/**\n \t * Update Lab Test Data\n \t */\n-\tpublic void updateLabTestDoctor() {\n+\tpublic static void updateLabTestDoctor() {\n \t\tSystem.out.println(\"Not Complete\");\n \t}\n \n \t/**\n \t * Search Lab Test Data By Id\n \t */\n-\tpublic void searchLabTestData() {\n+\tpublic static void searchLabTestData() {\n \t\tScanner sc = new Scanner(System.in);\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tSystem.out.println(\"Enter Lab Test Id\");\n \t\t\tString id = sc.nextLine();\n@@ -153,6 +163,7 @@ public void searchLabTestData() {\n \t\t\tlabTestPanel();\n \t\t\tst.close();\n \t\t\tcon.close();\n+\t\t\tsc.close();\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n \t\t}\n@@ -161,18 +172,20 @@ public void searchLabTestData() {\n \t/**\n \t * Delete Lab Test Data By Id\n \t */\n-\tpublic void deleteLabTestData() {\n+\tpublic static void deleteLabTestData() {\n \t\tScanner sc = new Scanner(System.in);\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tSystem.out.println(\"Enter Lab Test Id\");\n \t\t\tString did = sc.nextLine();\n \t\t\tint result = st.executeUpdate(\"delete from lab_test where plab_id ='\" + did + \"';\");\n-\t\t\tSystem.out.println(\"Delete SuccessFully....\");\n+\t\t\tSystem.out.println(\"Delete SuccessFully....\" + result);\n+\t\t\tst.close();\n \t\t\tcon.close();\n+\t\t\tsc.close();\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n \t\t}\n@@ -181,27 +194,24 @@ public void deleteLabTestData() {\n \t/**\n \t * List And Show All Lab Test Data\n \t */\n-\tpublic void listAllLabTest() {\n+\tpublic static void listAllLabTest() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tString sql = \"select * from lab_test\";\n \t\t\tResultSet rs = st.executeQuery(sql);\n-\t\t\tif (!rs.next()) {\n-\t\t\t\tSystem.out.println(\"No Record Is Found!\\n\");\n-\t\t\t\tlabTestPanel();\n-\t\t\t} else {\n-\t\t\t\tSystem.out.println(\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Lab Test Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\tSystem.out.println(\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Lab Test Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\twhile (rs.next()) {\n \t\t\t\tString ltid = rs.getString(1);\n \t\t\t\tString pid = rs.getString(2);\n \t\t\t\tString testname = rs.getString(3);\n \t\t\t\tDate date = rs.getDate(4);\n \t\t\t\tint rate = rs.getInt(5);\n \t\t\t\tSystem.out.printf(\"%5s  %5s  %25s  %12s  %10s\\n\", ltid, pid, testname, date, rate);\n-\t\t\t\tSystem.out.println(\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n \t\t\t}\n+\t\t\tSystem.out.println(\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n \t\t\tlabTestPanel();\n \t\t\tst.close();\n \t\t\tcon.close();"
  },
  {
    "sha": "56c4520da70f9b90ee6afb02cf3c32f28a717149",
    "filename": "src/com/divergent/clinicmanagmentsystem/Messages.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Messages.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Messages.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/Messages.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -0,0 +1,21 @@\n+package com.divergent.clinicmanagmentsystem;\n+\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+\n+public class Messages {\n+\tprivate static final String BUNDLE_NAME = \"com.divergent.clinicmanagmentsystem.messages\";\n+\n+\tprivate static final ResourceBundle RESOURCE_BUNDLE = ResourceBundle.getBundle(BUNDLE_NAME);\n+\n+\tprivate Messages() {\n+\t}\n+\n+\tpublic static String getString(String key) {\n+\t\ttry {\n+\t\t\treturn RESOURCE_BUNDLE.getString(key);\n+\t\t} catch (MissingResourceException e) {\n+\t\t\treturn '!' + key + '!';\n+\t\t}\n+\t}\n+}"
  },
  {
    "sha": "774133d5454beeb0e7f3fe18af2d614f9aca9dec",
    "filename": "src/com/divergent/clinicmanagmentsystem/Patient.java",
    "status": "modified",
    "additions": 46,
    "deletions": 44,
    "changes": 90,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Patient.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/Patient.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/Patient.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -15,7 +15,10 @@\n \n \tstatic Scanner sc = new Scanner(System.in);\n \tstatic Connection con;\n-\tstatic Doctor doctor = new Doctor();\n+\n+\tprivate Patient() {\n+\n+\t}\n \n \t/**\n \t * Show All OPtion Of Admin to CRUD Operation\n@@ -33,8 +36,8 @@ public static void showAll() {\n \t * Select Option by this method\n \t */\n \tpublic static void patientPanel() {\n-\t\tback: while (true) {\n-\t\t\tScanner sc = new Scanner(System.in);\n+\t\twhile (true) {\n+\t\t\tsc = new Scanner(System.in);\n \t\t\tshowAll();\n \t\t\tString input = sc.nextLine();\n \t\t\tswitch (input) {\n@@ -54,7 +57,8 @@ public static void patientPanel() {\n \t\t\t\tlistAllPatientData();\n \t\t\t\tbreak;\n \t\t\tcase \"6\":\n-\t\t\t\tbreak back;\n+\t\t\t\tAdmin.executedMethod();\n+\t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\tbreak;\n \t\t\t}\n@@ -69,25 +73,25 @@ public static void patientPanel() {\n \tpublic static Map<String, String> inputPatientData() {\n \t\tSystem.out.println(\n \t\t\t\t\"Enter Patient_ID,Name,Address,Age,Weight,Gender,Contact_No,ACurrentDate,AppoimentDate,Problem\");\n-\t\tString p_id = sc.nextLine();\n-\t\tString p_name = sc.nextLine();\n-\t\tString p_address = sc.nextLine();\n-\t\tString p_age = sc.nextLine();\n-\t\tString p_weight = sc.nextLine();\n-\t\tString p_gender = sc.nextLine();\n-\t\tString p_contactno = sc.nextLine();\n-\t\tString p_appoimentdate = sc.nextLine();\n-\t\tString p_problem = sc.nextLine();\n-\t\tMap<String, String> map = new HashMap<String, String>();\n-\t\tmap.put(\"1\", p_id);\n-\t\tmap.put(\"2\", p_name);\n-\t\tmap.put(\"3\", p_address);\n-\t\tmap.put(\"4\", p_age);\n-\t\tmap.put(\"5\", p_weight);\n-\t\tmap.put(\"6\", p_gender);\n-\t\tmap.put(\"7\", p_contactno);\n-\t\tmap.put(\"9\", p_appoimentdate);\n-\t\tmap.put(\"10\", p_problem);\n+\t\tString pid = sc.nextLine();\n+\t\tString pname = sc.nextLine();\n+\t\tString paddress = sc.nextLine();\n+\t\tString page = sc.nextLine();\n+\t\tString pweight = sc.nextLine();\n+\t\tString pgender = sc.nextLine();\n+\t\tString pcontactno = sc.nextLine();\n+\t\tString pappoimentdate = sc.nextLine();\n+\t\tString pproblem = sc.nextLine();\n+\t\tMap<String, String> map = new HashMap<>();\n+\t\tmap.put(\"1\", pid);\n+\t\tmap.put(\"2\", pname);\n+\t\tmap.put(\"3\", paddress);\n+\t\tmap.put(\"4\", page);\n+\t\tmap.put(\"5\", pweight);\n+\t\tmap.put(\"6\", pgender);\n+\t\tmap.put(\"7\", pcontactno);\n+\t\tmap.put(\"9\", pappoimentdate);\n+\t\tmap.put(\"10\", pproblem);\n \n \t\treturn map;\n \t}\n@@ -98,7 +102,7 @@ public static void patientPanel() {\n \tpublic static void insertPatientData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tcon = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user, ClinicDatabase.password);\n+\t\t\tcon = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME, ClinicDatabase.PASSWORD);\n \t\t\tString sql = (\"insert into patient values(?,?,?,?,?,?,?,?,?,?)\");\n \t\t\tPreparedStatement stmt = con.prepareStatement(sql);\n \t\t\tlong millis = System.currentTimeMillis();\n@@ -115,7 +119,7 @@ public static void insertPatientData() {\n \t\t\tstmt.setString(9, map.get(\"9\"));\n \t\t\tstmt.setString(10, map.get(\"10\"));\n \t\t\tint i = stmt.executeUpdate();\n-\t\t\tSystem.out.println(\"Insert successfully!!!!!!\");\n+\t\t\tSystem.out.println(\"Insert successfully!!!!!!\" + i);\n \t\t\tcon.close();\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n@@ -128,8 +132,8 @@ public static void insertPatientData() {\n \tprivate static void updatePatientData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tint pid = Integer.parseInt(sc.nextLine());\n \t\t\tString pproblem = sc.nextLine();\n@@ -148,7 +152,7 @@ private static void updatePatientData() {\n \tprivate static void searchPatientData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tcon = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user, ClinicDatabase.password);\n+\t\t\tcon = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME, ClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tSystem.out.println(\"Enter Patient Id : \");\n \t\t\tString id = sc.nextLine();\n@@ -188,12 +192,12 @@ private static void searchPatientData() {\n \tprivate static void deletePatientData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tcon = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user, ClinicDatabase.password);\n+\t\t\tcon = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME, ClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tSystem.out.println(\"Enter Patient Id : \");\n \t\t\tString pid = sc.nextLine();\n \t\t\tint result = st.executeUpdate(\"delete from patient where p_id='\" + pid + \"';\");\n-\t\t\tSystem.out.println(\"Delete SuccessFully....\");\n+\t\t\tSystem.out.println(\"Delete SuccessFully....\" + result);\n \t\t\tcon.close();\n \t\t} catch (Exception e) {\n \t\t\te.printStackTrace();\n@@ -206,18 +210,15 @@ private static void deletePatientData() {\n \tpublic static void listAllPatientData() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tString sql = \"select * from patient\";\n \t\t\tResultSet rs = st.executeQuery(sql);\n+\t\t\tSystem.out.println(\n+\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Patient Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\twhile (rs.next()) {\n \n-\t\t\tif (!rs.next()) {\n-\t\t\t\tSystem.out.println(\"No Record is Found!\\n\");\n-\t\t\t\tpatientPanel();\n-\t\t\t} else {\n-\t\t\t\tSystem.out.println(\n-\t\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Patient Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n \t\t\t\tString pid = rs.getString(1);\n \t\t\t\tString pname = rs.getString(2);\n \t\t\t\tString paddress = rs.getString(3);\n@@ -230,9 +231,10 @@ public static void listAllPatientData() {\n \t\t\t\tString pproblem = rs.getString(10);\n \t\t\t\tSystem.out.printf(\"%5s  %15s  %15s  %3s  %4s  %6s  %12s  %12s  %12s  %20s\\n\", pid, pname, paddress,\n \t\t\t\t\t\tpage, pweight, pgender, pcontactno, pcurrentdate, pappoinment, pproblem);\n-\t\t\t\tSystem.out.println(\n-\t\t\t\t\t\t\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\n \t\t\t}\n+\t\t\tSystem.out.println(\n+\t\t\t\t\t\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n \t\t\tst.close();\n \t\t\tcon.close();\n \n@@ -247,8 +249,8 @@ public static void listAllPatientData() {\n \tpublic static void generateInvoice() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n \t\t\tSystem.out.println(\"\\nEnter Patient Id\");\n \t\t\tString id = sc.nextLine();\n@@ -259,7 +261,7 @@ public static void generateInvoice() {\n \n \t\t\tif (!rs.next()) {\n \t\t\t\tSystem.out.println(\"Record Is not Found!\\n\");\n-\t\t\t\tdoctor.printDoctorOptions();\n+\t\t\t\tDoctor.printDoctorOptions();\n \t\t\t} else {\n \t\t\t\tSystem.out.println(\n \t\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Patient Invoice*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n@@ -275,7 +277,7 @@ public static void generateInvoice() {\n \t\t\t\tSystem.out.println(\n \t\t\t\t\t\t\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n \t\t\t}\n-\t\t\tdoctor.printDoctorOptions();\n+\t\t\tDoctor.printDoctorOptions();\n \t\t\tst.close();\n \t\t\tcon.close();\n \t\t} catch (Exception e) {"
  },
  {
    "sha": "0085e0432d6cdc084cce1bde917c6f53374e85c9",
    "filename": "src/com/divergent/clinicmanagmentsystem/PrescriptionAndNotes.java",
    "status": "modified",
    "additions": 31,
    "deletions": 27,
    "changes": 58,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/PrescriptionAndNotes.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/PrescriptionAndNotes.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/PrescriptionAndNotes.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -18,15 +18,22 @@\n  */\n public class PrescriptionAndNotes {\n \n-\tstatic Doctor doctor = new Doctor();\n-\t\n+\tstatic Scanner sc = new Scanner(System.in);\n+\n+\t/**\n+\t * Make Custructor\n+\t */\n+\tprivate PrescriptionAndNotes() {\n+\n+\t}\n+\n \t/**\n \t * Get Information\n \t * \n \t * @return\n \t */\n \tpublic static Map<String, String> inputPrescriptionData() {\n-\t\tScanner sc = new Scanner(System.in);\n+\n \t\tSystem.out.println(\"Enter Prescription Id\");\n \t\tString prescriId = sc.nextLine();\n \t\tSystem.out.println(\"Enter Patient Id\");\n@@ -38,7 +45,7 @@\n \t\tSystem.out.println(\"Enter doctor id\");\n \t\tString doctorid = sc.nextLine();\n \n-\t\tMap<String, String> map = new HashMap<String, String>();\n+\t\tMap<String, String> map = new HashMap<>();\n \t\tmap.put(\"1\", prescriId);\n \t\tmap.put(\"2\", patientId);\n \t\tmap.put(\"3\", prescription);\n@@ -50,11 +57,11 @@\n \t/**\n \t * Patient Prescription\n \t */\n-\tpublic void prescriptionPatient() {\n+\tpublic static void prescriptionPatient() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tString sql = (\"insert into prescription values(?,?,?,?,?)\");\n \t\t\tPreparedStatement stmt = con.prepareStatement(sql);\n \t\t\tMap<String, String> map = inputPrescriptionData();\n@@ -75,42 +82,39 @@ public void prescriptionPatient() {\n \t/**\n \t * History and Prescription of all Patient\n \t */\n-\tpublic void historyAndPresciption() {\n+\tpublic static void historyAndPresciption() {\n \t\ttry {\n \t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n-\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.url, ClinicDatabase.user,\n-\t\t\t\t\tClinicDatabase.password);\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n \t\t\tStatement st = con.createStatement();\n-\t\t\tString sql = \"select patient.p_id,patient.p_name,patient.gender,patient.age,appoinment.d_id,appoinment.d_name,\\r\\n\"\n-\t\t\t\t\t+ \"appoinment.problem,appoinment.appoinment_id,appoinment.appoinment_date,\\r\\n\"\n+\t\t\tString sql = \"select patient.p_id,patient.p_name,patient.age,patient.gender,appoinment.d_id,appoinment.d_name,\\r\\n\"\n+\t\t\t\t\t+ \"appoinment.appoinment_id,appoinment.problem,appoinment.appoinment_date,\\r\\n\"\n \t\t\t\t\t+ \"prescription.dprescription,prescription.dnotes\\r\\n\"\n \t\t\t\t\t+ \"from patient inner join appoinment on patient.p_id =  appoinment.p_id   \\r\\n\"\n \t\t\t\t\t+ \"inner join prescription on patient.p_id = prescription.p_id\\r\\n\"\n \t\t\t\t\t+ \"order by appoinment.appoinment_date desc;\";\n \t\t\tResultSet rs = st.executeQuery(sql);\n-\t\t\tif (!rs.next()) {\n-\t\t\t\tSystem.out.println(\"No record Found!\\n\");\n-\t\t\t\tdoctor.printDoctorOptions();\n-\t\t\t} else {\n-\t\t\t\tSystem.out.println(\"\\n*-*-*-*-*-*-*-*-*-* History Of Patient *-*-*-*-*-*-*-*-*-*-*-*-*\");\n-\t\t\t\tSystem.out.println(\n-\t\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Patient Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\tSystem.out.println(\"\\n*-*-*-*-*-*-*-*-*-* History Of Patient *-*-*-*-*-*-*-*-*-*-*-*-*\");\n+\t\t\tSystem.out.println(\n+\t\t\t\t\t\"\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Patient Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\twhile (rs.next()) {\n \t\t\t\tString pid = rs.getString(1);\n \t\t\t\tString pname = rs.getString(2);\n-\t\t\t\tString pgender = rs.getString(3);\n-\t\t\t\tString page = rs.getString(4);\n+\t\t\t\tString page = rs.getString(3);\n+\t\t\t\tString pgender = rs.getString(4);\n \t\t\t\tString doctorId = rs.getString(5);\n \t\t\t\tString doctorname = rs.getString(6);\n \t\t\t\tString appoinId = rs.getString(7);\n \t\t\t\tString pproblem = rs.getString(8);\n \t\t\t\tString appoindate = rs.getString(9);\n-\t\t\t\tString prescri = rs.getString(10);\n+\t\t\t\tString prescription = rs.getString(10);\n \t\t\t\tString note = rs.getString(11);\n-\t\t\t\tSystem.out.printf(\"%5s  %20s  %3s  %7s  %5s  %20s  %5s  %10s  %15s  %30s  %30s\\n\", pid, pname, pgender,\n-\t\t\t\t\t\tpage, doctorId, doctorname, appoinId, pproblem, appoindate, prescri, note);\n-\t\t\t\tSystem.out.println(\n-\t\t\t\t\t\t\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n+\t\t\t\tSystem.out.printf(\"%5s  %20s  %5s  %7s  %5s  %20s  %3s  %15s  %15s  %25s  %25s\\n\", pid, pname, page,\n+\t\t\t\t\t\tpgender, doctorId, doctorname, appoinId, pproblem, appoindate, prescription, note);\n \t\t\t}\n+\t\t\tSystem.out.println(\n+\t\t\t\t\t\"*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\");\n \t\t\tst.close();\n \t\t\tcon.close();\n \n@@ -119,4 +123,4 @@ public void historyAndPresciption() {\n \t\t}\n \t}\n \n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "86a0b5ac58ef81b44b7a777bfcf4e15231197e4d",
    "filename": "src/com/divergent/clinicmanagmentsystem/messages.properties",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/messages.properties",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/messages.properties",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/messages.properties?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -0,0 +1,30 @@\n+PrescriptionAndNotes.0=Enter Prescription Id\n+PrescriptionAndNotes.1=Enter Patient Id\n+PrescriptionAndNotes.10=com.mysql.cj.jdbc.Driver\n+PrescriptionAndNotes.11=insert into prescription values(?,?,?,?,?)\n+PrescriptionAndNotes.12=1\n+PrescriptionAndNotes.13=2\n+PrescriptionAndNotes.14=3\n+PrescriptionAndNotes.15=4\n+PrescriptionAndNotes.16=5\n+PrescriptionAndNotes.17=Insert successfully\\!\\!\\!\\!\\!\\!\n+PrescriptionAndNotes.18=com.mysql.cj.jdbc.Driver\n+PrescriptionAndNotes.19=select patient.p_id,patient.p_name,patient.gender,patient.age,appoinment.d_id,appoinment.d_name,\\r\\n\n+PrescriptionAndNotes.2=Enter Prescription\n+PrescriptionAndNotes.20=appoinment.problem,appoinment.appoinment_id,appoinment.appoinment_date,\\r\\n\n+PrescriptionAndNotes.21=prescription.dprescription,prescription.dnotes\\r\\n\n+PrescriptionAndNotes.22=from patient inner join appoinment on patient.p_id =  appoinment.p_id   \\r\\n\n+PrescriptionAndNotes.23=inner join prescription on patient.p_id = prescription.p_id\\r\\n\n+PrescriptionAndNotes.24=order by appoinment.appoinment_date desc;\n+PrescriptionAndNotes.25=No record Found\\!\\n\n+PrescriptionAndNotes.26=\\n*-*-*-*-*-*-*-*-*-* History Of Patient *-*-*-*-*-*-*-*-*-*-*-*-*\n+PrescriptionAndNotes.27=\\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*Patient Data*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\n+PrescriptionAndNotes.28=%5s  %20s  %3s  %7s  %5s  %20s  %5s  %10s  %15s  %30s  %30s\\n\n+PrescriptionAndNotes.29=*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\\n\n+PrescriptionAndNotes.3=Enter Notes\n+PrescriptionAndNotes.4=Enter doctor id\n+PrescriptionAndNotes.5=1\n+PrescriptionAndNotes.6=2\n+PrescriptionAndNotes.7=3\n+PrescriptionAndNotes.8=4\n+PrescriptionAndNotes.9=5"
  },
  {
    "sha": "2b84da4d02c19e58e5e9bbcd2b48b8463368b418",
    "filename": "src/com/divergent/clinicmanagmentsystem/test/TestCase1.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/test/TestCase1.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/test/TestCase1.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/test/TestCase1.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -0,0 +1,18 @@\n+package com.divergent.clinicmanagmentsystem.test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+\n+import java.util.Map;\n+\n+import org.junit.Test;\n+\n+public class TestCase1 {\n+\tprivate static Map<String, String> map;\n+\t@Test\n+\tpublic static void m9() {\n+\t\tmap.put(\"1\", \"High\");\n+\t\tassertFalse(map.isEmpty());\n+\t\tassertEquals(1, map.size());\n+\t}\n+}"
  },
  {
    "sha": "5402bf5bbd89cde2b483a6fd6840837314377166",
    "filename": "src/com/divergent/clinicmanagmentsystem/test/listofdrug.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/blob/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/test/listofdrug.java",
    "raw_url": "https://github.com/prateekpatel-divergent/Clinic-Managment-System/raw/7ff128110dc388a785eb2e3d24cacbefe2f1f77b/src/com/divergent/clinicmanagmentsystem/test/listofdrug.java",
    "contents_url": "https://api.github.com/repos/prateekpatel-divergent/Clinic-Managment-System/contents/src/com/divergent/clinicmanagmentsystem/test/listofdrug.java?ref=7ff128110dc388a785eb2e3d24cacbefe2f1f77b",
    "patch": "@@ -0,0 +1,61 @@\n+package com.divergent.clinicmanagmentsystem.test;\n+\n+import java.sql.Connection;\n+import java.sql.Date;\n+import java.sql.DriverManager;\n+import java.sql.PreparedStatement;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Scanner;\n+\n+import com.divergent.clinicmanagmentsystem.ClinicDatabase;\n+\n+public class listofdrug {\n+\tpublic static Map<String, String> inputLabTestData() {\n+\t\tScanner sc = new Scanner(System.in);\n+\t\tSystem.out.println(\"Enter LabTest_Id\");\n+\t\tString lbid = sc.nextLine();\n+\t\tSystem.out.println(\"Enter Patient Id\");\n+\t\tString pid = sc.nextLine();\n+\t\tSystem.out.println(\"Enter Test\");\n+\t\tString testname = sc.nextLine();\n+\t\tSystem.out.println(\"Enter Rate of Test\");\n+\t\tint rate = sc.nextInt();\n+\t\tString ratestring = Integer.toString(rate);\n+\n+\t\tMap<String, String> map = new HashMap<>();\n+\t\tmap.put(\"1\", lbid);\n+\t\tmap.put(\"2\", pid);\n+\t\tmap.put(\"3\", testname);\n+\t\tmap.put(\"4\", ratestring);\n+\t\tsc.close();\n+\t\treturn map;\n+\t}\n+\n+\t/**\n+\t * Insert Lab Test Data\n+\t */\n+\tpublic static void insertLabTestData() {\n+\t\ttry {\n+\t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n+\t\t\tConnection con = DriverManager.getConnection(ClinicDatabase.URL, ClinicDatabase.USERNAME,\n+\t\t\t\t\tClinicDatabase.PASSWORD);\n+\t\t\tString sql = (\"insert into lab_test values(?,?,?,?,?)\");\n+\t\t\tPreparedStatement stmt = con.prepareStatement(sql);\n+\t\t\tMap<String, String> map = inputLabTestData();\n+\t\t\tstmt.setString(1, map.get(\"1\"));\n+\t\t\tstmt.setString(2, map.get(\"2\"));\n+\t\t\tstmt.setString(3, map.get(\"3\"));\n+\t\t\tlong millis = System.currentTimeMillis();\n+\t\t\tDate date = new Date(millis);\n+\t\t\tstmt.setDate(4, date);\n+\t\t\tstmt.setString(5, map.get(\"4\"));\n+\t\t\tint i = stmt.executeUpdate();\n+\t\t\tSystem.out.println(\"Insert successfully!!!!!!\"+i);\n+\t\t\tcon.close();\n+\t\t} catch (Exception e) {\n+\t\t\te.printStackTrace();\n+\t\t}\n+\t}\n+\n+}"
  }
]
