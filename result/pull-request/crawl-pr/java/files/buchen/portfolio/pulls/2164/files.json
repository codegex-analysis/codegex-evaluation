[
  {
    "sha": "c2760a920dc66638c6b6ca09026b9163c6057b6a",
    "filename": "name.abuchen.portfolio.tests/src/name/abuchen/portfolio/datatransfer/pdf/keytradebank/KeytradeBankExtractorTest.java",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/buchen/portfolio/blob/6c0f8de3d3787ec09042f736a17c46239589c3a7/name.abuchen.portfolio.tests/src/name/abuchen/portfolio/datatransfer/pdf/keytradebank/KeytradeBankExtractorTest.java",
    "raw_url": "https://github.com/buchen/portfolio/raw/6c0f8de3d3787ec09042f736a17c46239589c3a7/name.abuchen.portfolio.tests/src/name/abuchen/portfolio/datatransfer/pdf/keytradebank/KeytradeBankExtractorTest.java",
    "contents_url": "https://api.github.com/repos/buchen/portfolio/contents/name.abuchen.portfolio.tests/src/name/abuchen/portfolio/datatransfer/pdf/keytradebank/KeytradeBankExtractorTest.java?ref=6c0f8de3d3787ec09042f736a17c46239589c3a7",
    "patch": "@@ -0,0 +1,65 @@\n+package name.abuchen.portfolio.datatransfer.pdf.keytradebank;\n+\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.collection.IsEmptyCollection.empty;\n+\n+import java.time.LocalDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import org.junit.Test;\n+\n+import name.abuchen.portfolio.datatransfer.Extractor.BuySellEntryItem;\n+import name.abuchen.portfolio.datatransfer.Extractor.Item;\n+import name.abuchen.portfolio.datatransfer.Extractor.SecurityItem;\n+import name.abuchen.portfolio.datatransfer.pdf.KeytradeBankPDFExtractor;\n+import name.abuchen.portfolio.datatransfer.pdf.PDFInputFile;\n+import name.abuchen.portfolio.model.AccountTransaction;\n+import name.abuchen.portfolio.model.BuySellEntry;\n+import name.abuchen.portfolio.model.Client;\n+import name.abuchen.portfolio.model.PortfolioTransaction;\n+import name.abuchen.portfolio.model.Security;\n+import name.abuchen.portfolio.model.Transaction.Unit;\n+import name.abuchen.portfolio.money.Money;\n+import name.abuchen.portfolio.money.Values;\n+\n+@SuppressWarnings(\"nls\")\n+public class KeytradeBankExtractorTest\n+{\n+\n+    @Test\n+    public void testWertpapierKauf01()\n+    {\n+        KeytradeBankPDFExtractor extractor = new KeytradeBankPDFExtractor(new Client());\n+\n+        List<Exception> errors = new ArrayList<>();\n+\n+        List<Item> results = extractor.extract(PDFInputFile.loadTestCase(getClass(), \"KeytradeBank_Kauf01.txt\"), errors);\n+\n+        assertThat(errors, empty());\n+        assertThat(results.size(), is(2));\n+\n+        // check security\n+        Security security = results.stream().filter(i -> i instanceof SecurityItem).findFirst()\n+                        .orElseThrow(IllegalArgumentException::new).getSecurity();\n+        assertThat(security.getIsin(), is(\"LU1781541179\"));\n+        assertThat(security.getName(), is(\"LYXOR CORE WORLD\"));\n+\n+        // check buy sell transaction\n+        Optional<Item> item = results.stream().filter(i -> i instanceof BuySellEntryItem).findFirst();\n+        assertThat(item.orElseThrow(IllegalArgumentException::new).getSubject(), instanceOf(BuySellEntry.class));\n+        BuySellEntry t = (BuySellEntry) item.orElseThrow(IllegalArgumentException::new).getSubject();\n+\n+        assertThat(t.getPortfolioTransaction().getType(), is(PortfolioTransaction.Type.BUY));\n+        assertThat(t.getAccountTransaction().getType(), is(AccountTransaction.Type.BUY));\n+\n+        assertThat(t.getPortfolioTransaction().getDateTime(), is(LocalDateTime.parse(\"2021-03-15T12:31:50\")));\n+        assertThat(t.getPortfolioTransaction().getShares(), is(Values.Share.factorize(168)));\n+        assertThat(t.getPortfolioTransaction().getAmount(), is(Values.Amount.factorize(1994.39)));\n+        assertThat(t.getPortfolioTransaction().getUnitSum(Unit.Type.FEE), \n+                        is(Money.of(\"EUR\", Values.Amount.factorize(14.95))));\n+    }\n+}"
  },
  {
    "sha": "a8f0a90fd0f5736fd717afcc1000c0b90a8f4dab",
    "filename": "name.abuchen.portfolio.tests/src/name/abuchen/portfolio/datatransfer/pdf/keytradebank/KeytradeBank_Kauf01.txt",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/buchen/portfolio/blob/6c0f8de3d3787ec09042f736a17c46239589c3a7/name.abuchen.portfolio.tests/src/name/abuchen/portfolio/datatransfer/pdf/keytradebank/KeytradeBank_Kauf01.txt",
    "raw_url": "https://github.com/buchen/portfolio/raw/6c0f8de3d3787ec09042f736a17c46239589c3a7/name.abuchen.portfolio.tests/src/name/abuchen/portfolio/datatransfer/pdf/keytradebank/KeytradeBank_Kauf01.txt",
    "contents_url": "https://api.github.com/repos/buchen/portfolio/contents/name.abuchen.portfolio.tests/src/name/abuchen/portfolio/datatransfer/pdf/keytradebank/KeytradeBank_Kauf01.txt?ref=6c0f8de3d3787ec09042f736a17c46239589c3a7",
    "patch": "@@ -0,0 +1,21 @@\n+PDF Autor: ''\n+PDFBox Version: 1.8.16\n+-----------------------------------------\n+Keytrade Bank Luxembourg S.A. T +352 45 04 39\n+62, Rue Charles Martel F +352 45 04 49\n+L-2134 - Luxembourg info@keytradebank.lu\n+Grand Duché de Luxembourg www.keytradebank.lu\n+RCS B69935 Skype keytradebank.lu\n+Wertschriftenkonto 111111\n+Belegnummer 1928820\n+Kauf 168 LYXOR CORE WORLD (LU1781541179) für 11,7824 EUR\n+Instrument: Trackers/ETF\n+Auftragserstellung : 15/03/2021 13:31:50 CET\n+Auftragstyp : Limit (11,79 EUR)\n+Gültigkeit : GTC\n+Ausführungsdatum und -zeit : 15/03/2021 12:31:50 CET \n+Ausführungsort : EURONEXT - EURONEXT PARIS\n+Bruttobetrag 1.979,44 EUR\n+Transaktionskosten 14,95 EUR\n+1.994,39 EUR\n+Lastschrift 1.994,39 EUR Valutadatum 17/03/2021"
  },
  {
    "sha": "c39cc8c4da541fbf08735f162c25c7b551d25a3c",
    "filename": "name.abuchen.portfolio/src/name/abuchen/portfolio/datatransfer/pdf/KeytradeBankPDFExtractor.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/buchen/portfolio/blob/6c0f8de3d3787ec09042f736a17c46239589c3a7/name.abuchen.portfolio/src/name/abuchen/portfolio/datatransfer/pdf/KeytradeBankPDFExtractor.java",
    "raw_url": "https://github.com/buchen/portfolio/raw/6c0f8de3d3787ec09042f736a17c46239589c3a7/name.abuchen.portfolio/src/name/abuchen/portfolio/datatransfer/pdf/KeytradeBankPDFExtractor.java",
    "contents_url": "https://api.github.com/repos/buchen/portfolio/contents/name.abuchen.portfolio/src/name/abuchen/portfolio/datatransfer/pdf/KeytradeBankPDFExtractor.java?ref=6c0f8de3d3787ec09042f736a17c46239589c3a7",
    "patch": "@@ -0,0 +1,91 @@\n+package name.abuchen.portfolio.datatransfer.pdf;\n+\n+\n+import name.abuchen.portfolio.datatransfer.pdf.PDFParser.Block;\n+import name.abuchen.portfolio.datatransfer.pdf.PDFParser.DocumentType;\n+import name.abuchen.portfolio.datatransfer.pdf.PDFParser.Transaction;\n+import name.abuchen.portfolio.model.BuySellEntry;\n+import name.abuchen.portfolio.model.Client;\n+import name.abuchen.portfolio.model.PortfolioTransaction;\n+import name.abuchen.portfolio.model.Transaction.Unit;\n+import name.abuchen.portfolio.money.Money;\n+\n+@SuppressWarnings(\"nls\")\n+public class KeytradeBankPDFExtractor extends AbstractPDFExtractor\n+{\n+    public KeytradeBankPDFExtractor(Client client)\n+    {\n+        super(client);\n+\n+        addBankIdentifier(\"Keytrade Bank\"); //$NON-NLS-1$\n+\n+        addBuySellTransaction();\n+    }\n+\n+    @Override\n+    public String getPDFAuthor()\n+    {\n+        return \"\"; //$NON-NLS-1$\n+    }\n+\n+    @Override\n+    public String getLabel()\n+    {\n+        return \"Keytrade Bank\"; //$NON-NLS-1$\n+    }\n+\n+    private void addBuySellTransaction()\n+    {\n+        DocumentType type = new DocumentType(\"Kauf\");\n+        this.addDocumentTyp(type);\n+\n+        Transaction<BuySellEntry> pdfTransaction = new Transaction<>();\n+        pdfTransaction.subject(() -> {\n+            BuySellEntry entry = new BuySellEntry();\n+            entry.setType(PortfolioTransaction.Type.BUY);\n+            return entry;\n+        });\n+\n+        Block firstRelevantLine = new Block(\"Kauf .*\");\n+        type.addBlock(firstRelevantLine);\n+        firstRelevantLine.set(pdfTransaction);\n+\n+        pdfTransaction\n+\n+                        // Kauf 168 LYXOR CORE WORLD (LU1781541179) für 11,7824 EUR\n+                        .section(\"isin\", \"name\", \"shares\")\n+                        .match(\"^Kauf (?<shares>[\\\\d.,]+) (?<name>.*) \\\\((?<isin>[\\\\w]{12})\\\\) .*\")\n+                        .assign((t, v) -> {\n+                            t.setSecurity(getOrCreateSecurity(v));\n+                            t.setShares(asShares(v.get(\"shares\")));\n+                        })\n+\n+                        // Ausführungsdatum und -zeit : 15/03/2021 12:31:50 CET\n+                        .section(\"date\", \"time\")\n+                        .match(\"^Ausführungsdatum und -zeit : (?<date>\\\\d+/\\\\d+/\\\\d{4}) (?<time>\\\\d+:\\\\d+:\\\\d+) .*\")\n+                        .assign((t, v) -> {\n+                            if (v.get(\"time\") != null)\n+                                t.setDate(asDate(v.get(\"date\").replaceAll(\"/\", \".\"), v.get(\"time\")));\n+                            else\n+                                t.setDate(asDate(v.get(\"date\").replaceAll(\"/\", \".\")));\n+                        })\n+\n+                        // Lastschrift 1.994,39 EUR Valutadatum 17/03/2021\n+                        .section(\"currency\", \"amount\")\n+                        .match(\"^Lastschrift (?<amount>[.,\\\\d]+ (?<currency>\\\\w{3})) .*\")\n+                        .assign((t, v) -> {\n+                            t.setAmount(asAmount(v.get(\"amount\")));\n+                            t.setCurrencyCode(v.get(\"currency\"));\n+                        })\n+\n+                        // Transaktionskosten 14,95 EUR\n+                        .section(\"fee\", \"currency\").optional()\n+                        .match(\"^(Transaktionskosten) (?<fee>[.,\\\\d]+) (?<currency>\\\\w{3})\")\n+                        .assign((t, v) -> t.getPortfolioTransaction()\n+                                        .addUnit(new Unit(Unit.Type.FEE,\n+                                                        Money.of(asCurrencyCode(v.get(\"currency\")),\n+                                                                        asAmount(v.get(\"fee\"))))))\n+\n+                        .wrap(BuySellEntryItem::new);\n+    }\n+}"
  },
  {
    "sha": "a5d0fa83eb74b3c54083669ace22e73159cd6ed8",
    "filename": "name.abuchen.portfolio/src/name/abuchen/portfolio/datatransfer/pdf/PDFImportAssistant.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/buchen/portfolio/blob/6c0f8de3d3787ec09042f736a17c46239589c3a7/name.abuchen.portfolio/src/name/abuchen/portfolio/datatransfer/pdf/PDFImportAssistant.java",
    "raw_url": "https://github.com/buchen/portfolio/raw/6c0f8de3d3787ec09042f736a17c46239589c3a7/name.abuchen.portfolio/src/name/abuchen/portfolio/datatransfer/pdf/PDFImportAssistant.java",
    "contents_url": "https://api.github.com/repos/buchen/portfolio/contents/name.abuchen.portfolio/src/name/abuchen/portfolio/datatransfer/pdf/PDFImportAssistant.java?ref=6c0f8de3d3787ec09042f736a17c46239589c3a7",
    "patch": "@@ -51,6 +51,7 @@ public PDFImportAssistant(Client client, List<File> files)\n         extractors.add(new HelloBankPDFExtractor(client));\n         extractors.add(new INGDiBaExtractor(client));\n         extractors.add(new JustTradePDFExtractor(client));\n+        extractors.add(new KeytradeBankPDFExtractor(client));\n         extractors.add(new MLPBankingAGPDFExtractor(client));\n         extractors.add(new LGTBankPDFExtractor(client));\n         extractors.add(new OnvistaPDFExtractor(client));"
  }
]
