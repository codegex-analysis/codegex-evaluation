[
  {
    "sha": "b24c37da45e0152de01cce56c54e758ad889ba8a",
    "filename": "debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/Filters.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/debezium/debezium/blob/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/Filters.java",
    "raw_url": "https://github.com/debezium/debezium/raw/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/Filters.java",
    "contents_url": "https://api.github.com/repos/debezium/debezium/contents/debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/Filters.java?ref=42523acc5655de782d3b8be4e934ca85c4c78d5e",
    "patch": "@@ -44,8 +44,10 @@ else if (dbExcludeList != null && !dbExcludeList.trim().isEmpty()) {\n             databaseFilter = (db) -> true;\n         }\n \n-        String collectionIncludeList = config.getFallbackStringProperty(MongoDbConnectorConfig.COLLECTION_INCLUDE_LIST, MongoDbConnectorConfig.COLLECTION_WHITELIST);\n-        String collectionExcludeList = config.getFallbackStringProperty(MongoDbConnectorConfig.COLLECTION_EXCLUDE_LIST, MongoDbConnectorConfig.COLLECTION_BLACKLIST);\n+        String collectionIncludeList = config.getFallbackStringProperty(MongoDbConnectorConfig.COLLECTION_INCLUDE_LIST,\n+                MongoDbConnectorConfig.COLLECTION_WHITELIST);\n+        String collectionExcludeList = config.getFallbackStringProperty(MongoDbConnectorConfig.COLLECTION_EXCLUDE_LIST,\n+                MongoDbConnectorConfig.COLLECTION_BLACKLIST);\n         final Predicate<CollectionId> collectionFilter;\n         if (collectionIncludeList != null && !collectionIncludeList.trim().isEmpty()) {\n             collectionFilter = Predicates.includes(collectionIncludeList, CollectionId::namespace);"
  },
  {
    "sha": "b7aa6fa2eb8527c15112481c0a4b5bbfd39f1a32",
    "filename": "debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/MongoDbConnectorConfig.java",
    "status": "modified",
    "additions": 36,
    "deletions": 15,
    "changes": 51,
    "blob_url": "https://github.com/debezium/debezium/blob/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/MongoDbConnectorConfig.java",
    "raw_url": "https://github.com/debezium/debezium/raw/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/MongoDbConnectorConfig.java",
    "contents_url": "https://api.github.com/repos/debezium/debezium/contents/debezium-connector-mongodb/src/main/java/io/debezium/connector/mongodb/MongoDbConnectorConfig.java?ref=42523acc5655de782d3b8be4e934ca85c4c78d5e",
    "patch": "@@ -34,8 +34,10 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(MongoDbConnectorConfig.class);\n \n-    protected static final String COLLECTION_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"collection.include.list\\\" or \\\"collection.whitelist\\\" is already specified\";\n-    protected static final String DATABASE_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"database.include.list\\\" or \\\"database.whitelist\\\" is already specified\";\n+    protected static final String COLLECTION_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"collection.include.list\\\" is already specified\";\n+    protected static final String COLLECTION_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"collection.whitelist\\\" is already specified\";\n+    protected static final String DATABASE_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"database.include.list\\\" is already specified\";\n+    protected static final String DATABASE_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"database.whitelist\\\" is already specified\";\n \n     /**\n      * The set of predefined SnapshotMode options or aliases.\n@@ -255,7 +257,7 @@ public static SnapshotMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.HIGH)\n-            .withValidation(Field::isListOfRegex, MongoDbConnectorConfig::validateDatabaseExcludeList)\n+            .withValidation(Field::isListOfRegex)\n             .withDescription(\"A comma-separated list of regular expressions that match the database names for which changes are to be captured\");\n \n     /**\n@@ -267,7 +269,7 @@ public static SnapshotMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.LOW)\n-            .withValidation(Field::isListOfRegex, MongoDbConnectorConfig::validateDatabaseExcludeList)\n+            .withValidation(Field::isListOfRegex)\n             .withInvisibleRecommender()\n             .withDescription(\"A comma-separated list of regular expressions that match the database names for which changes are to be captured (deprecated, use \\\"\"\n                     + DATABASE_INCLUDE_LIST.name() + \"\\\" instead)\");\n@@ -281,7 +283,7 @@ public static SnapshotMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.HIGH)\n-            .withValidation(Field::isListOfRegex)\n+            .withValidation(Field::isListOfRegex, MongoDbConnectorConfig::validateDatabaseExcludeList)\n             .withDescription(\"A comma-separated list of regular expressions that match the database names for which changes are to be excluded\");\n \n     /**\n@@ -293,7 +295,7 @@ public static SnapshotMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.LOW)\n-            .withValidation(Field::isListOfRegex)\n+            .withValidation(Field::isListOfRegex, MongoDbConnectorConfig::validateDatabaseBlacklist)\n             .withInvisibleRecommender()\n             .withDescription(\"A comma-separated list of regular expressions that match the database names for which changes are to be excluded (deprecated, use \\\"\"\n                     + DATABASE_EXCLUDE_LIST.name() + \"\\\" instead)\");\n@@ -308,8 +310,7 @@ public static SnapshotMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.HIGH)\n-            .withValidation(Field::isListOfRegex,\n-                    MongoDbConnectorConfig::validateCollectionExcludeList)\n+            .withValidation(Field::isListOfRegex)\n             .withDescription(\"A comma-separated list of regular expressions that match the collection names for which changes are to be captured\");\n \n     /**\n@@ -321,7 +322,7 @@ public static SnapshotMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.LOW)\n-            .withValidation(Field::isListOfRegex, MongoDbConnectorConfig::validateCollectionExcludeList)\n+            .withValidation(Field::isListOfRegex)\n             .withInvisibleRecommender()\n             .withDescription(\"A comma-separated list of regular expressions that match the collection names for which changes are to be captured (deprecated, use \\\"\"\n                     + COLLECTION_INCLUDE_LIST.name() + \"\\\" instead)\");\n@@ -332,7 +333,7 @@ public static SnapshotMode parse(String value, String defaultValue) {\n      * Must not be used with {@link #COLLECTION_INCLUDE_LIST}.\n      */\n     public static final Field COLLECTION_EXCLUDE_LIST = Field.create(\"collection.exclude.list\")\n-            .withValidation(Field::isListOfRegex)\n+            .withValidation(Field::isListOfRegex, MongoDbConnectorConfig::validateCollectionExcludeList)\n             .withInvisibleRecommender()\n             .withDescription(\"A comma-separated list of regular expressions that match the collection names for which changes are to be excluded\");\n \n@@ -341,7 +342,7 @@ public static SnapshotMode parse(String value, String defaultValue) {\n      */\n     @Deprecated\n     public static final Field COLLECTION_BLACKLIST = Field.create(\"collection.blacklist\")\n-            .withValidation(Field::isListOfRegex)\n+            .withValidation(Field::isListOfRegex, MongoDbConnectorConfig::validateCollectionBlacklist)\n             .withInvisibleRecommender()\n             .withDescription(\"A comma-separated list of regular expressions that match the collection names for which changes are to be excluded (deprecated, use \\\"\"\n                     + COLLECTION_EXCLUDE_LIST.name() + \"\\\" instead)\");\n@@ -509,25 +510,45 @@ private static int validateHosts(Configuration config, Field field, ValidationOu\n     }\n \n     private static int validateCollectionExcludeList(Configuration config, Field field, ValidationOutput problems) {\n-        String includeList = config.getFallbackStringProperty(COLLECTION_INCLUDE_LIST, COLLECTION_WHITELIST);\n-        String excludeList = config.getFallbackStringProperty(COLLECTION_EXCLUDE_LIST, COLLECTION_BLACKLIST);\n+        String includeList = config.getString(COLLECTION_INCLUDE_LIST);\n+        String excludeList = config.getString(COLLECTION_EXCLUDE_LIST);\n         if (includeList != null && excludeList != null) {\n             problems.accept(COLLECTION_EXCLUDE_LIST, excludeList, COLLECTION_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG);\n             return 1;\n         }\n         return 0;\n     }\n \n+    private static int validateCollectionBlacklist(Configuration config, Field field, ValidationOutput problems) {\n+        String whitelist = config.getFallbackStringPropertyWithWarning(COLLECTION_INCLUDE_LIST, COLLECTION_WHITELIST);\n+        String blacklist = config.getFallbackStringPropertyWithWarning(COLLECTION_EXCLUDE_LIST, COLLECTION_BLACKLIST);\n+        if (whitelist != null && blacklist != null) {\n+            problems.accept(COLLECTION_EXCLUDE_LIST, blacklist, COLLECTION_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG);\n+            return 1;\n+        }\n+        return 0;\n+    }\n+\n     private static int validateDatabaseExcludeList(Configuration config, Field field, ValidationOutput problems) {\n-        String includeList = config.getFallbackStringProperty(DATABASE_INCLUDE_LIST, DATABASE_WHITELIST);\n-        String excludeList = config.getFallbackStringProperty(DATABASE_EXCLUDE_LIST, DATABASE_BLACKLIST);\n+        String includeList = config.getString(DATABASE_INCLUDE_LIST);\n+        String excludeList = config.getString(DATABASE_EXCLUDE_LIST);\n         if (includeList != null && excludeList != null) {\n             problems.accept(DATABASE_EXCLUDE_LIST, excludeList, DATABASE_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG);\n             return 1;\n         }\n         return 0;\n     }\n \n+    private static int validateDatabaseBlacklist(Configuration config, Field field, ValidationOutput problems) {\n+        String whitelist = config.getFallbackStringPropertyWithWarning(DATABASE_INCLUDE_LIST, DATABASE_WHITELIST);\n+        String blacklist = config.getFallbackStringPropertyWithWarning(DATABASE_EXCLUDE_LIST, DATABASE_BLACKLIST);\n+        if (whitelist != null && blacklist != null) {\n+            problems.accept(DATABASE_BLACKLIST, blacklist, DATABASE_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG);\n+            return 1;\n+        }\n+        return 0;\n+    }\n+\n     public SnapshotMode getSnapshotMode() {\n         return snapshotMode;\n     }"
  },
  {
    "sha": "3d911fdbf6003c28cbb2e8d7799f9f44dfbc7d92",
    "filename": "debezium-core/src/main/java/io/debezium/config/Configuration.java",
    "status": "modified",
    "additions": 8,
    "deletions": 13,
    "changes": 21,
    "blob_url": "https://github.com/debezium/debezium/blob/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-core/src/main/java/io/debezium/config/Configuration.java",
    "raw_url": "https://github.com/debezium/debezium/raw/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-core/src/main/java/io/debezium/config/Configuration.java",
    "contents_url": "https://api.github.com/repos/debezium/debezium/contents/debezium-core/src/main/java/io/debezium/config/Configuration.java?ref=42523acc5655de782d3b8be4e934ca85c4c78d5e",
    "patch": "@@ -2111,28 +2111,23 @@ default void forEachMatchingFieldName(Pattern regex, BiConsumer<String, String>\n      * @return the evaluated value\n      */\n     default String getFallbackStringProperty(Field newProperty, Field oldProperty) {\n-        return Configuration.getFallbackStringProperty(this, newProperty, oldProperty);\n+        return getString(newProperty, () -> getString(oldProperty));\n     }\n \n     /**\n-     * Returns the string config value of the provided Configuration from newProperty config field if it's set or its\n-     * default value when it's not set/null.If both are null it returns the value of the oldProperty config field, or\n-     * its default value when it's null.\n-     * This fallback only works for newProperty fields that have a null / not-set default value!\n-     *\n-     * @param newProperty the new property config field\n-     * @param oldProperty the old / fallback property config field\n-     * @return the evaluated value\n+     * Returns the string config value from newProperty config field with a warning if it's set or its default value when it's not\n+     * set/null. If both are null it returns the value of the oldProperty config field with a warning, or its default value when\n+     * it's null.\n      */\n-    static String getFallbackStringProperty(Configuration config, Field newProperty, Field oldProperty) {\n-        if (null != config.getString(oldProperty.name()) && null != config.getString(newProperty.name())) { // both are set\n+    default String getFallbackStringPropertyWithWarning(Field newProperty, Field oldProperty) {\n+        if (hasKey(oldProperty.name()) && hasKey(newProperty.name())) { // both are set\n             CONFIGURATION_LOGGER.warn(\"Provided configuration has deprecated property \\\"\" + oldProperty.name()\n                     + \"\\\" and new property \\\"\" + newProperty.name() + \"\\\" set. Using value from \\\"\" + newProperty.name() + \"\\\"!\");\n         }\n-        return config.getString(\n+        return getString(\n                 newProperty,\n                 () -> {\n-                    String oldValue = config.getString(oldProperty);\n+                    String oldValue = getString(oldProperty);\n                     if (oldValue != null && !oldValue.equals(oldProperty.defaultValueAsString())) {\n                         CONFIGURATION_LOGGER.warn(\"Using configuration property \\\"\" + oldProperty.name()\n                                 + \"\\\" is deprecated and will be removed in future versions. Please use \\\"\" + newProperty.name()"
  },
  {
    "sha": "6886babe9b76b14342d4d5142b6c6dfbcfb710a3",
    "filename": "debezium-core/src/main/java/io/debezium/relational/RelationalDatabaseConnectorConfig.java",
    "status": "modified",
    "additions": 64,
    "deletions": 17,
    "changes": 81,
    "blob_url": "https://github.com/debezium/debezium/blob/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-core/src/main/java/io/debezium/relational/RelationalDatabaseConnectorConfig.java",
    "raw_url": "https://github.com/debezium/debezium/raw/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-core/src/main/java/io/debezium/relational/RelationalDatabaseConnectorConfig.java",
    "contents_url": "https://api.github.com/repos/debezium/debezium/contents/debezium-core/src/main/java/io/debezium/relational/RelationalDatabaseConnectorConfig.java?ref=42523acc5655de782d3b8be4e934ca85c4c78d5e",
    "patch": "@@ -50,11 +50,16 @@\n     protected static final String TABLE_WHITELIST_NAME = \"table.whitelist\";\n     protected static final String TABLE_INCLUDE_LIST_NAME = \"table.include.list\";\n \n+    public static final String TABLE_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"table.include.list\\\" is already specified\";\n+    public static final String TABLE_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"table.whitelist\\\" is already specified\";\n+    public static final String COLUMN_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"column.include.list\\\" is already specified\";\n+    public static final String COLUMN_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"column.whitelist\\\" is already specified\";\n+    public static final String SCHEMA_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"schema.include.list\\\" is already specified\";\n+    public static final String SCHEMA_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"schema.whitelist\\\" is already specified\";\n+    public static final String DATABASE_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"database.include.list\\\" is already specified\";\n+    public static final String DATABASE_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"database.whitelist\\\" is already specified\";\n+\n     public static final long DEFAULT_SNAPSHOT_LOCK_TIMEOUT_MILLIS = TimeUnit.SECONDS.toMillis(10);\n-    public static final String TABLE_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"table.include.list\\\" or \\\"table.whitelist\\\" is already specified\";\n-    public static final String COLUMN_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"column.include.list\\\" or \\\"column.whitelist\\\" is already specified\";\n-    public static final String SCHEMA_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"schema.include.list\\\" or \\\"schema.whitelist\\\" is already specified\";\n-    protected static final String DATABASE_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG = \"\\\"database.include.list\\\" is already specified\";\n \n     /**\n      * The set of predefined DecimalHandlingMode options or aliases.\n@@ -235,7 +240,7 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.LOW)\n-            .withValidation(Field::isListOfRegex, RelationalDatabaseConnectorConfig::validateTableExcludeList)\n+            .withValidation(Field::isListOfRegex, RelationalDatabaseConnectorConfig::validateTableBlacklist)\n             .withInvisibleRecommender()\n             .withDescription(\n                     \"A comma-separated list of regular expressions that match the fully-qualified names of tables to be excluded from monitoring (deprecated, use \\\"\"\n@@ -273,7 +278,7 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.LOW)\n-            .withValidation(Field::isListOfRegex, RelationalDatabaseConnectorConfig::validateColumnExcludeList)\n+            .withValidation(Field::isListOfRegex, RelationalDatabaseConnectorConfig::validateColumnBlacklist)\n             .withInvisibleRecommender()\n             .withDescription(\"Regular expressions matching columns to exclude from change events (deprecated, use \\\"\" + COLUMN_EXCLUDE_LIST.name() + \"\\\" instead)\");\n \n@@ -288,7 +293,7 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.MEDIUM)\n-            .withValidation(Field::isListOfRegex, RelationalDatabaseConnectorConfig::validateColumnExcludeList)\n+            .withValidation(Field::isListOfRegex)\n             .withDescription(\"Regular expressions matching columns to include in change events\");\n \n     /**\n@@ -300,7 +305,7 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.LOW)\n-            .withValidation(Field::isListOfRegex, RelationalDatabaseConnectorConfig::validateColumnExcludeList)\n+            .withValidation(Field::isListOfRegex)\n             .withInvisibleRecommender()\n             .withDescription(\"Regular expressions matching columns to include in change events (deprecated, use \\\"\" + COLUMN_INCLUDE_LIST.name() + \"\\\" instead)\");\n \n@@ -390,7 +395,7 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.LOW)\n-            .withValidation(Field::isListOfRegex, RelationalDatabaseConnectorConfig::validateSchemaExcludeList)\n+            .withValidation(Field::isListOfRegex, RelationalDatabaseConnectorConfig::validateSchemaBlacklist)\n             .withInvisibleRecommender()\n             .withDescription(\"The schemas for which events must not be captured (deprecated, use \\\"\" + SCHEMA_EXCLUDE_LIST.name() + \"\\\" instead)\");\n \n@@ -435,7 +440,7 @@ public static DecimalHandlingMode parse(String value, String defaultValue) {\n             .withType(Type.LIST)\n             .withWidth(Width.LONG)\n             .withImportance(Importance.LOW)\n-            .withValidation(Field::isListOfRegex, RelationalDatabaseConnectorConfig::validateDatabaseExcludeList)\n+            .withValidation(Field::isListOfRegex, RelationalDatabaseConnectorConfig::validateDatabaseBlacklist)\n             .withInvisibleRecommender()\n             .withDescription(\"A comma-separated list of regular expressions that match database names to be excluded from monitoring (deprecated, use \\\"\"\n                     + DATABASE_EXCLUDE_LIST.name() + \"\\\" instead)\");\n@@ -637,9 +642,20 @@ public Boolean isFullColummnScanRequired() {\n         return getConfig().getBoolean(SNAPSHOT_FULL_COLUMN_SCAN_FORCE);\n     }\n \n+    private static int validateColumnBlacklist(Configuration config, Field field, Field.ValidationOutput problems) {\n+        String blacklist = config.getFallbackStringPropertyWithWarning(COLUMN_INCLUDE_LIST, COLUMN_WHITELIST);\n+        String whitelist = config.getFallbackStringPropertyWithWarning(COLUMN_EXCLUDE_LIST, COLUMN_BLACKLIST);\n+\n+        if (whitelist != null && blacklist != null) {\n+            problems.accept(COLUMN_BLACKLIST, blacklist, COLUMN_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG);\n+            return 1;\n+        }\n+        return 0;\n+    }\n+\n     private static int validateColumnExcludeList(Configuration config, Field field, Field.ValidationOutput problems) {\n-        String includeList = Configuration.getFallbackStringProperty(config, COLUMN_INCLUDE_LIST, COLUMN_WHITELIST);\n-        String excludeList = Configuration.getFallbackStringProperty(config, COLUMN_EXCLUDE_LIST, COLUMN_BLACKLIST);\n+        String includeList = config.getString(COLUMN_INCLUDE_LIST);\n+        String excludeList = config.getString(COLUMN_EXCLUDE_LIST);\n \n         if (includeList != null && excludeList != null) {\n             problems.accept(COLUMN_EXCLUDE_LIST, excludeList, COLUMN_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG);\n@@ -657,15 +673,25 @@ public TableIdToStringMapper getTableIdMapper() {\n         return tableIdMapper;\n     }\n \n+    private static int validateTableBlacklist(Configuration config, Field field, ValidationOutput problems) {\n+        String whitelist = config.getFallbackStringPropertyWithWarning(TABLE_INCLUDE_LIST, TABLE_WHITELIST);\n+        String blacklist = config.getFallbackStringPropertyWithWarning(TABLE_EXCLUDE_LIST, TABLE_BLACKLIST);\n+\n+        if (whitelist != null && blacklist != null) {\n+            problems.accept(TABLE_BLACKLIST, blacklist, TABLE_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG);\n+            return 1;\n+        }\n+        return 0;\n+    }\n+\n     private static int validateTableExcludeList(Configuration config, Field field, ValidationOutput problems) {\n-        String includeList = Configuration.getFallbackStringProperty(config, TABLE_INCLUDE_LIST, TABLE_WHITELIST);\n-        String excludeList = Configuration.getFallbackStringProperty(config, TABLE_EXCLUDE_LIST, TABLE_BLACKLIST);\n+        String includeList = config.getString(TABLE_WHITELIST);\n+        String excludeList = config.getString(TABLE_BLACKLIST);\n \n         if (includeList != null && excludeList != null) {\n             problems.accept(TABLE_EXCLUDE_LIST, excludeList, TABLE_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG);\n             return 1;\n         }\n-\n         return 0;\n     }\n \n@@ -690,9 +716,20 @@ private static int validateTableExcludeList(Configuration config, Field field, V\n         return Collections.unmodifiableMap(snapshotSelectOverridesByTable);\n     }\n \n+    private static int validateSchemaBlacklist(Configuration config, Field field, Field.ValidationOutput problems) {\n+        String whitelist = config.getFallbackStringPropertyWithWarning(SCHEMA_INCLUDE_LIST, SCHEMA_WHITELIST);\n+        String blacklist = config.getFallbackStringPropertyWithWarning(SCHEMA_EXCLUDE_LIST, SCHEMA_BLACKLIST);\n+\n+        if (whitelist != null && blacklist != null) {\n+            problems.accept(SCHEMA_BLACKLIST, blacklist, SCHEMA_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG);\n+            return 1;\n+        }\n+        return 0;\n+    }\n+\n     private static int validateSchemaExcludeList(Configuration config, Field field, Field.ValidationOutput problems) {\n-        String includeList = Configuration.getFallbackStringProperty(config, SCHEMA_INCLUDE_LIST, SCHEMA_WHITELIST);\n-        String excludeList = Configuration.getFallbackStringProperty(config, SCHEMA_EXCLUDE_LIST, SCHEMA_BLACKLIST);\n+        String includeList = config.getString(SCHEMA_INCLUDE_LIST);\n+        String excludeList = config.getString(SCHEMA_EXCLUDE_LIST);\n \n         if (includeList != null && excludeList != null) {\n             problems.accept(SCHEMA_EXCLUDE_LIST, excludeList, SCHEMA_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG);\n@@ -711,6 +748,16 @@ private static int validateDatabaseExcludeList(Configuration config, Field field\n         return 0;\n     }\n \n+    private static int validateDatabaseBlacklist(Configuration config, Field field, ValidationOutput problems) {\n+        String whitelist = config.getFallbackStringPropertyWithWarning(DATABASE_INCLUDE_LIST, DATABASE_WHITELIST);\n+        String blacklist = config.getFallbackStringPropertyWithWarning(DATABASE_EXCLUDE_LIST, DATABASE_BLACKLIST);\n+        if (whitelist != null && blacklist != null) {\n+            problems.accept(DATABASE_BLACKLIST, blacklist, DATABASE_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG);\n+            return 1;\n+        }\n+        return 0;\n+    }\n+\n     private static int validateMessageKeyColumnsField(Configuration config, Field field, Field.ValidationOutput problems) {\n         String msgKeyColumns = config.getString(MSG_KEY_COLUMNS);\n         int problemCount = 0;"
  },
  {
    "sha": "05691a6bc31e6d372938086bf8f30dd522c32847",
    "filename": "debezium-core/src/test/java/io/debezium/config/ConfigurationTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/debezium/debezium/blob/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-core/src/test/java/io/debezium/config/ConfigurationTest.java",
    "raw_url": "https://github.com/debezium/debezium/raw/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-core/src/test/java/io/debezium/config/ConfigurationTest.java",
    "contents_url": "https://api.github.com/repos/debezium/debezium/contents/debezium-core/src/test/java/io/debezium/config/ConfigurationTest.java?ref=42523acc5655de782d3b8be4e934ca85c4c78d5e",
    "patch": "@@ -70,9 +70,9 @@ public void shouldThrowValidationOnDuplicateOldColumnFilterConfigurationOld() {\n                 .with(COLUMN_BLACKLIST, \".+bb\")\n                 .build();\n \n-        List<String> errorMessages = config.validate(Field.setOf(COLUMN_EXCLUDE_LIST)).get(COLUMN_EXCLUDE_LIST.name()).errorMessages();\n+        List<String> errorMessages = config.validate(Field.setOf(COLUMN_BLACKLIST)).get(COLUMN_BLACKLIST.name()).errorMessages();\n         assertThat(errorMessages).isNotEmpty();\n-        assertThat(errorMessages.get(0)).isEqualTo(RelationalDatabaseConnectorConfig.COLUMN_INCLUDE_LIST_ALREADY_SPECIFIED_ERROR_MSG);\n+        assertThat(errorMessages.get(0)).isEqualTo(RelationalDatabaseConnectorConfig.COLUMN_WHITELIST_ALREADY_SPECIFIED_ERROR_MSG);\n     }\n \n     @Test"
  },
  {
    "sha": "de46d70d4aa274e8599df9c5efc675c0c393119a",
    "filename": "debezium-parent/pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/debezium/debezium/blob/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-parent/pom.xml",
    "raw_url": "https://github.com/debezium/debezium/raw/42523acc5655de782d3b8be4e934ca85c4c78d5e/debezium-parent/pom.xml",
    "contents_url": "https://api.github.com/repos/debezium/debezium/contents/debezium-parent/pom.xml?ref=42523acc5655de782d3b8be4e934ca85c4c78d5e",
    "patch": "@@ -11,7 +11,7 @@\n     <modelVersion>4.0.0</modelVersion>\n     <artifactId>debezium-parent</artifactId>\n     <name>Debezium Parent POM</name>\n-    <description>Parent POM for all modules and conectors</description>\n+    <description>Parent POM for all modules and connectors</description>\n     <packaging>pom</packaging>\n     <properties>\n "
  }
]
